passing is needed only at the begin- 
ning and end of the computation. The 
minimal message passing ensures the 
high speed of the proposed parallel 
implementation. 

Trade analyses can be performed and 
optimization problems can be solved for 
space mission design with respect to rel- 


evant figures of merit. The mission mer- 
its/objectives/requirements are calcu- 
lated with the set of design variables. 
The tradeoff space given by the design 
problem is visualized. SOAP is used for 
DAWN mission design, Cassini mission 
analyses, Team X mission concept stud- 
ies, and DOD and Air Force projects. 


This program, was written by John M. Coggi 
and David Y Stoddm of Aerospace Corporation 
and Seungwon Lee and Robert C. Carnright of 
Caltech for NASA’s Jet Propulsion Laboratory. 

This software is available for commercial 
licensing. Please contact Karina Edmonds of 
the California Institute of Technology at 
(626) 395-2322. Refer to NPO-44486. 


©Automated Sequence Generation Process and Software 

NASA’s Jet Propulsion Laboratory, Pasadena, California 


“Automated sequence generation” 
(autogen) signifies both a process and 
software used to automatically generate 
sequences of commands to operate vari- 
ous spacecraft. Autogen requires fewer 
workers than are needed for older man- 
ual sequence-generation processes and 
reduces sequence-generation times 
from weeks to minutes. The autogen 
software comprises the autogen script 
plus the Activity Plan Generator 
(APGEN) program. APGEN can be used 
for planning missions and command se- 
quences. APGEN includes a graphical 
user interface that facilitates scheduling 


of activities on a time line and affords a 
capability to automatically expand, de- 
compose, and schedule activities. The 
autogen script performs the following 
tasks: 

• Gathers needed data files from data 
repositories on the mission operations 
network. 

• Builds other data files needed for the 
APGEN scheduling algorithms, based 
on inputs specified by the user. 

• Sets up the environment to run 
APGEN, including scheduling 
instructions. 

• Runs APGEN, which schedules activi- 


ties and writes the corresponding se- 
quences of commands to files. 

• Manipulates the resultant sequence 
and other files, if needed. 

• Initiates any automated sequence 
processors to prepare the sequence for 
uplink, if appropriate. 

This work was done by Roy Gladden of 
Caltech for NASA’s Jet Propulsion Laboratory. 
Further information is contained in a TSP 
(see page 1). 

This software is available for commercial 
licensing. Please contact Karina Edmonds of 
the California Institute of Technology at 
(626) 395-2322. Refer ■ to NPO-30746. ' 


© Periodic, On-Demand, and User-Specified Information 
Reconciliation 


Ames Research Center, Moffett Field, California 


POUR is a framework that accepts peri- 
odic information updates, collects infor- 
mation on demand, and accepts user-spec- 
ified information while presenting a single 
unified view to the user. The primary func- 
tionality of POUR is through its query in- 
terface. A query consists of any number of 
XPaths, where each XPath returns a list of 
XML strings that satisfies the query. De- 
pending on the XPaths specified and the 
contents of the POUR database, query 
processing may be as simple as a database 
lookup, or as complex as a series of 


queries down a POUR hierarchy to a set of 
POUR repositories that compute the re- 
quested information on the fly before the 
appropriate results are returned. 

Users may use any valid XPath to re- 
trieve results integrated from across the 
relevant periodic, on-demand, and user- 
specified sources. Periodic information 
comes from trusted sources at an un- 
known frequency such that any previous 
information from the same source can 
be completely overwritten. On-demand 
information is computed when needed 


using queries to other POUR instances 
or using scripts dynamically executed by 
the Globus GRAM service. Finally, users 
may add their own information into a 
POUR repository if it conforms to a site- 
defined XML schema. 

This program teas written by Paul Kolano 
of Advanced Management Technology for 
Ames Research Center. For further informa- 
tion, access http://opensource.arc.nasa.gov/ 
or contact the Ames Technology Partnerships 
Division at (650) 604-2954. 

ARC-15468-1 


© Simulating Operations at a Spaceport 

John F. Kennedy Space Center, Florida 


SPACESIM is a computer program for 
detailed simulation of operations at a 
spaceport. SPACESIM is being devel- 
oped to greatly improve existing space- 
ports and to aid in designing, building, 


and operating future spaceports, given 
that there is a worldwide trend in space- 
port operations from very expensive, re- 
search-oriented launches to more fre- 
quent commercial launches. From an 


operational perspective, future space- 
ports are expected to resemble current 
airports and seaports, for which it is nec- 
essary to resolve issues of safety, security, 
efficient movement of machinery and 


NASA Tech Briefs, September 2007 


67 


people, cost effectiveness, timeliness, 
and maximizing effectiveness in utiliza- 
tion of resources. 

Simulations can be performed, for ex- 
ample, to (1) simultaneously analyze 
launches of reusable and expendable 
rockets and identify bottlenecks arising 
from competition for limited resources 
or (2) perform “what-if” scenario analy- 
ses to identify optimal scenarios prior to 
making large capital investments. 
SPACESIM includes an object-oriented 
discrete-event-simulation engine. (Dis- 


crete-event simulation has been used to 
assess processes at modem seaports.) 
The simulation engine is built upon the 
Java programming language for maxi- 
mum portability. Extensible Markup 
Language (XML) is used for storage of 
data to enable industry-standard inter- 
change of data with other software. A 
graphical user interface facilitates cre- 
ation of scenarios and analysis of data. 

This program was written by Michael ft 
Nevins of Nevins Software, Inc. for Kennedy 
Space Center. 


In accordance with Public Law 96-517, 
the contractor has elected to retain title to this 
invention. Inquiries concerning rights for its 
commercial use should be addressed to: 

Mr. Mike Nevins 
Nevins Software, Inc. 

P. O. Box 308 
Morris, IL 60450 
Phone No.: (815) 941-2406 
E-mail: mnevins@nevinssoftware . com 
Refer to KSC-12943, volume and number 
of this NASA Tech Briefs issue, and the 
page number. 


©Web-Based Real-Time 

Stennis Space Center, Mississippi 

The Web-based Real-Time Asset Mon- 
itoring (RAM) module for emergency 
operations and facility management en- 
ables emergency personnel in federal 
agencies and local and state govern- 
ments to monitor and analyze data in 
the event of a natural disaster or other 
crisis that threatens a large number of 
people and property. The software can 
manage many disparate sources of data 
within a facility, city, or county. It was de- 
veloped on industry-standard Geo- 
Spatial software and is compliant with 
open GIS standards. 

RAM View can function as a stand- 
alone system, or as an integrated plug- 
in module to Emergency Operations 
Center (EOC) software suites such as 
REACT (Real-time Emergency Action 


Emergency Monitoring 


Coordination Tool), thus ensuring the 
widest possible distribution among po- 
tential users. RAM has the ability to 
monitor various data sources, includ- 
ing streaming data. Many disparate sys- 
tems are included in the initial suite of 
supported hardware systems, such as 
mobile GPS units, ambient measure- 
ments of temperature, moisture and 
chemical agents, flow meters, air 
quality, asset location, and meteorolog- 
ical conditions. 

RAM View displays real-time data 
streams such as gauge heights from the 
U.S. Geological Survey gauging sta- 
tions, flood crests from the National 
Weather Service, and meteorological 
data from numerous sources. Data 
points are clearly visible on the map in- 


terface, and attributes as specified in 
the user requirements can be viewed 
and queried. 

This program was written by Craig A. 
Harvey and foel Lawhead of NVision Solu- 
tions, Inc. for Stennis Space Center. 

In accordance with Public Law 96-517, 
the contractor has elected to retain title to this 
invention. Inquiries concerning rights for its 
commercial use should be addressed to: 
NVision Solutions, Inc. 

NASA Stennis Space Center 
Building 1103, Suite 147 C 
Stennis Space Center, MS 39529 
Phone No.: (228) 688-2205 
E-mail: Charvey@nvs-inc.com 
Refer to SSC-00244, volume and number 
of this NASA Tech Briefs issue, and the 
page number. 


© Real-Time Data Display 

Marshall Space Flight Center, Alabama 


RT-Display is a MATLAB-based data 
acquisition environment designed to use 
a variety of commercial off-the-shelf 
(COTS) hardware to digitize analog sig- 
nals to a standard data format usable by 
other post-acquisition data analysis tools. 
This software presents the acquired data 
in real time using a variety of signal-pro- 
cessing algorithms. The acquired data is 
stored in a standard Operator Interac- 
tive Signal Processing Software (OISPS) 
data-formatted file. 

RT-Display is primarily configured to 
use the Agilent VXI (or equivalent) 
data acquisition boards used in such 
systems as MIDDAS (Multi-channel In- 
tegrated Dynamic Data Acquisition Sys- 


tem). The software is generalized and 
deployable in almost any testing envi- 
ronment, without limitations or propri- 
etary configuration for a specific test 
program or project. With the Agilent 
hardware configured and in place, 
users can start the program and, in one 
step, immediately begin digitizing mul- 
tiple channels of data. Once the acqui- 
sition is completed, data is converted 
into a common binary format that also 
can be translated to specific formats 
used by external analysis software, such 
as OISPS and PC-Signal (product of AI 
Signal Research Inc.). 

RT-Display at the time of this reporting 
was certified on Agilent hardware capa- 


ble of acquisition up to 196,608 samples 
per second. Data signals are presented to 
the user on-screen simultaneously for 16 
channels. Each channel can be viewed 
individually, with a maximum capability 
of 160 signal channels (depending on 
hardware configuration) . Current signal 
presentations include: time data, fast 
Fourier transforms (FFT), and power 
spectral density plots (PSD). Additional 
processing algorithms can be easily in- 
corporated into this environment. 

This program was written by Marc Pedings 
of Optical Sciences Corporation for Marshall 
Space Flight Center. Further information is 
contained in a TSP (see page 1). MFS- 
32325-1 


68 


NASA Tech Briefs, September 2007 


