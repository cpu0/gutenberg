MASTER COPY 


KEEP FOR REPRODUCTION PURPOSES 


REPORT DOCUMENTATION PAGE 

Form Approved 

OMB NO. 0704-0188 

Pi^r«porttoQhrt^ferW»cotectionofWBriiMionirMllm^dlo»«fiQ>1^ pf fpon—. including f» ■wrdwig utottng wiew, 

ujiwUin uf hfirm^rwi inrbirlnn rtrmtTtf-rtf ^‘TThrjnnr 1 - 1 — T— -. Dinctonm for WnmUon Ocrnmkom md fttporti.121S MHmwn 

D«wiHi»i^.Su>i 12tK#5!5>Dn!^ma2-<3a2.«n?te»»Off»e»ofMKW0>m^ Pmmfwoth feducton Pnfict (0704-0186), Wdrfdngloa DC 20603. 

1. AGENCY USE ONLY (LtM blank) 2. REPORT DATE 3. REPORT TYPE AND DATES COVERED 

10/25/1999 Final Progress Report 8/1998 - 8/1999 

4. TITLE AND SUBTrTLE 

Using Petri Nets to Support Concurrent Software Analysis 
and Design Automation 

5. FUNDING NUMBERS 

DAAG55-98-1-0407 

6. AUTHOR(S) 

S. Shatz 

7. PERFORMING ORGANIZATION NAMES(S) AND ADDRESSES) 

Univ. of Illinois 

MB 502 (M/C 551) 

809 S. Marshfield Av. 

Chicago, Illinois 60612-7205 

8. PERFORMING ORGANIZATION 

REPORT NUMBER 

9. SPONSORING/MONITORING AGENCY NAME(S) AND ADORESS(ES) 

U.S. Army Research Office 

PO Box *12211 

Research Triangle Park, NC 27709-2211 

10. SPONSORING /MONITORING 

AGENCY REPORT NUMBER 

f\£o 3? 53 , 7, V-At/I 

11. SUPPLEMENTARY NOTES 

The views, opinions and/or findings contained in this report are those of the authors) and should not be construed as 
an official Department of die Army position, policy or decision, unless so designated by other documentation. 


12a. DISTRIBUTION/AVAILABILITY STATEMENT 112 b. DISTRIBUTION CODE 


Approved for public release; distribution unlimited. 


13. ABSTRACT (Maximum 200 wonts) 

This report documents the final progress of the one year grant covering the 
period Aug. 1998 - Aug. 1999. The aim of the project research was to develop 
a practical, formal methods-based enabling technology for advanced system design. 
An approach based on combining Petri net modeling and object-oriented design 
was investigated. The approach shows promise for supporting the design of dis¬ 
tributed object software systems. Our major focus of work was to define a new 
type of object-oriented Petri net model, called a State-Based Object Petri Net 
(SBOPN). Techniques to incorporate object features such as encapsulation and 
instantiation were considered. In addition, a form of inheritence modeling 
was developed and formalized. 


14. SUBJECT TERMS 

Distributed Software, Software Modeling, Object-Oriented 
Design, Petri Nets 

15. NUMBER IF PAGES 

3 

16. PRICE CODE 

17. SECURITY CLASSIFICATION 
OR REPORT 

UNCLASSIFIED 

18. SECURITY CLASSIFICATION 
OF THIS PAGE 

UNCLASSIFIED 

19. SECURITY CLASSIFICATION 
OF ABSTRACT 

UNCLASSIFIED 

20. LIMITATION OF ABSTRACT 

UL 

NSN 7540-01-280-5500 $%&£!&£*** 

ENCLOSURE 1 29e-im 



ENCLOSURE 1 


















Final Progress Report 


Statement of the Problem Studied 

This one-year project studied the use of a formal method to support the design and analysis 
of concurrent software. Although there are many clear benefits from using formal methods 
in software development, a common, major impediment to their use is the need for 
specialized “mathematical” skills - skills that most front-line software engineers do not 
have. Thus, we are investigating ways to make formal methods more directly suited for 
software development, in particular the design of distributed object software. 

Summary of the Most Important Results 

We proposed the idea of blending the formal capabilities of Petri nets with object oriented 
design concepts. Petri nets have the advantage of providing a theoretically mature and 
formal notation that is well suited for concurrent systems. But the Petri net model is very 
general-purpose. Object oriented design concepts aid the development of software 
architecture development and reuse. The new model that we have identified provides a 
domain-specific form of Petri net that is explicitly aimed at capturing the design of 
distributed object software systems. The underlying Petri net notation, upon which this 
new model is defined, allows for formal analysis of the resulting designs. 

The design model that we have identified is called a State-Based Object Petri net (SBOPN). 
This model explicitly supports object concepts such as encapsulation, method activation, 
and inheritance. We have produced formal definitions for the SBOPN model and 
documents some simple example designs to illustrate the main features of this design 
notation. Since the SBOPN notation is based on Colored Petri nets, we have established a 
mapping from SBOPN models to standard Colored Petri net models. This implies that 




SBOPN designs can make use of existing, or to-be-developed, Colored Petri net analysis 
techniques and tools. 

We have created a basic scheme for inheritance modeling using the SBOPN notation. We 
identified and characterized the requirements for transformation of one SBOPN object 
model (a superclass model) into a new model (a subclass model) whose behavior is now 
restricted in terms of some of the methods. Most importantly, the new subclass model 
preserves the interface of the model from which it is defined. We introduced the idea of a 
“plug-in” structure (a sub-net) that can be added to an existing SBOPN object model. The 
plug-in acts as a controller on the behavior of the object model and restricts the activation of 
methods defined for the object. This provides for a way to synthesize subclass models due 
to restriction inheritance. We have defined such a synthesis algorithm and documented 
some illustrative examples of this concept. Finally, we have begun to work on the 
development of a prototype, web-accessible tool to demonstrate the creation and 
manipulation of SBOPN designs. 

Finally, we revised and enhanced some earlier work involving the use of Petri nets to 
model Ada-based software. In particular, we documented examples of using the Petri net 
notation to model and analyze some cases of object synchronization in Ada-95. Also, we 
created compositional models for some of the key advanced tasking features of Ada-95 and 
illustrated how these models are evaluated using a particular type of Petri net analysis 
technique known as invariant analysis. 

List of All Publications and Technical Reports 

X. Xie and S. Shatz, “Instantiation of Colored Petri Nets for Distributed Object Modeling 
and Analysis,” Submitted to 19 h IEEE International Performance, Computing, and 
Communications Conference (IPCCC 2000), Phoenix, Arizona, Feb. 2000. 



H. Xu, R. Gedela, and S. Shatz, “Compositional Petri Net Models of Advanced Tasking 
in Ada-95,” Submitted to Computer Languages. 

R. Gedela, S. Shatz, and H. Xu, “Modeling of Synchronization Methods for Concurrent 
Objects in Ada 95,” Proceedings of the ACM Annual Conference on Ada (Ada-99), 
Redondo Beach, Calif., Oct. 1999, pp. 211-220. 

List of All Participating Scientific Personnel 
Sol M. Shatz, Principal Investigator 
J. Saldhana, MS Student 
H. Xu, PhD Student 

X. Xie, PhD Student (not supported by project funds) 



