
STATBIC—A Method for 
Inclusion of Fractal Statistics in 
Obscurant Transport Models 

by Sean G. O'Brien and Donald W. Hoock 




5 I 


... 


ARL-TR-1375 



April 1998 


19980410 015 

DTIC QUALTIY mS?EOTED S 


Approved for public release; distribution unlimited. 






The findings in this report are not to be construed as an official Department of 
the Army position unless so designated by other authorized documents. 

Citation of manufacturer's or trade names does not constitute an official 
endorsement or approval of the use thereof. 

Destroy this report when it is no longer needed. Do not return it to the originator. 



Army Research Laboratory 

White Sands Missile Range, NM 88002-5501 


ARL-TR-1375 


April 1998 


STATBIC—A Method for Inclusion 
of Fractal Statistics in Obscurant 
Transport Models 


Sean G. O'Brien 

Physical Science Laboratory, New Mexico State University 


Donald W. Hoock 

Information Science and Technology Directorate, ARL 


Approved for public release; distribution unlimited. 


unc QXJMJK DSmSOTED S 





Abstract 


A generic texture routine was developed for upgrading smooth obscurant 
cloud models by introduction of time- and space-dependent fluctuations 
in line-of-sight (LOS) propagation and image generation. The routine 
runs separately from or in conjunction with other obscuration models 
that predict electro-optical (EO) propagation for mean or average aerosol 
concentration contributions in the obscurant cloud. 

Atmospheric turbulence and eddy structures are the underl5dng sources 
of concentration fluctuations. Eddy structures can possess certain well- 
defined and statistically predictable correlations between larger and 
smaller eddies that are linked to the steady breakup of larger eddies and 
the cascade of energy to smaller eddy scales. The resulting effects of 
these correlations m concentration are simulated by prototype algorithms 
that provide either two-dimensional propagation overlays for image 
modification or three-dimensional volume fluctuations. Path-integrated 
concentration, LOS propagation fluctuations, and realistic cloud imaging 
are then simulated by multiplication of pseudo-random fluctuation 
outputs with smooth, ensemble-averaged outputs from more traditional, 
simple obscuration models. 

Two platform-specific implementations of the generic texture routine 
were developed for IBM PC and Silicon Graphics, Inc. (SGI), display 
hardware. Examples of graphical output for both the two and three- 
dimensional algorithms are shown. 




Contents 


1. Introduction.1 

2. Theory.2 

3. Implementation.7 

3.1 General Comments .;.7 

3.2 Platform-Specific Comments . 9 

3.2.1 PC Version .9 

3.2.2 SGI Version . 10 

4. User's Guide.......13 

4.1 STATBIC-3D . 13 

4.2 STATBIC-2D .17 

5. Sample Cases.18 

5.1 Uniform Fractal Field (PC Implementation) . 18 

5.2 Smooth Gaussian-Puff Concentration Field (PC Implementation) .19 

5.3 Fractal Gaussian-Puff Concentration Field (PC Implementation) .19 

5.4 Uniform Fractal Field (SGI Implementation) .20 

5.5 Fractal and Smooth Gaussian Plumes (SGI Implementation) . 20 

5.6 Fractal Plume, Varying Sun Angle (SGI Implementation) .20 

5.7 Fractal Puff, Varying Sun Angle, and Time (SGI Implementation) .22 

6. Conclusions.23 

References.24 

Distribution .25 

Report Documentation Page.29 

Figures 

1. Cl Hurst parameter FI as function of ratio of line of sight (LOS) separation r to 

LOS length L .5 

2. Fitted limiting path radiance curves for fog oil cloud, averaged over cube face that faces 

observer. 6 

3. Example case for STATBIC-3D PC implementation.18 

4. PC version of STATBIC-3D for smooth Gaussian concentration field.19 

5. PC STATBIC-3D sample case for fractal Gaussian concentration field.19 

6. Comparison of STATBIC-2D fractal and smooth Gaussian cases.21 

7. STATBIC-2D comparison for forward-scattered radiance and backscattered radiance for 

fog oil cloud.21 • 


111 
































1. Introduction 


The codes in use today for modeling screening obscurant transport and 
diffusion are frequently designed for rapid execution in war games. 
Because of this limitation, the transport and diffusion equations in these 
models are simplified. In modeling the down-wind transport and diffu¬ 
sive growth of an aerosol cloud imder the influence of nonuniform wind 
and temperature fields, the aerosol cloud is represented by a Gaussian 
puff approximation (or some similar structural primitive). Consequently, 
at any given time after release of an obscurant, the spatial concentration 
distribution predicted by such models is normally analytic or "smooth." 
In reality, the mechanical turbulence that is caused by the obscurant 
dissemination process (or that is present in the natural atmosphere) will 
produce concentration fluctuations in the obscurant plume. A real plume 
will thus show thick knots and holes where significant deviations from 
the mean concentration field are present. It is thus likely that the smooth 
concentration distribution of obscurant in these models does not properly 
represent cumulative engagement probabilities for opposing units com¬ 
posed of multiple combat entities [1]. 

For example, a combatant viewing a given spatial distribution of targets 
through an obscurant field that is fluctuating in both time and space can 
exploit transient holes in the obscurant screen, hitting more targets than 
would be estimated on the basis of a smooth concentration field. If more 
than one such combatant is viewing the same target field, a given target 
may be exposed to more than one opponent and thus have an even lower 
probability of survival relative to the average concentration estimate. 

One means of improving the statistical accuracy of transport models is to 
include stochastic processes on a microphysical scale. For example, large 
eddy simulation models treat the hydrodynamics of turbulent flow by 
numerically solving the Navier-Stokes equations, and provide a physi¬ 
cally accurate method for determining the fluctuating concentration field. 
Unfortunately, such models involve large numbers of calculations, and 
are thus too slow to employ in wargaming simulations. 

An alternative and faster approach to simulation of turbulent transport 
is first to use the simplified-transport methodology to establish the 
mean concentration field, and then to apply multiplicative factors to the 
mean that are determined by the Kolmogorov statistics of steady-state 
turbulence in the boundary layer. This approach is used for the three- 
dimensional (3D) variant of the Statistical Texturing Application to 
Battlefield-Induced Clouds (STATBIC) algorithm, called STATBIC-3D [2]. 
For situations where a 2D image of the obscurant cloud embedded in a 
scene is to be generated, STATBIC-2D has been developed to apply a 
Kolmogorov multiplicative factor for the column density of obscurant 
(also known as the concentration length) over a given line of sight (LOS) 
[ 2 ]. 


1 


The objective of the STATBIC algorithms is to generate pseudo-random 
4D realizations of LOS obscuration that are consistent with the statistics of 
spatial and temporal correlations within the turbulent boundary layer of 
the atmosphere. The homogeneous Kolmogorov turbulence field that is 
assumed to be present in the boimdary-layer region obeys a -5/3 power- 
law roll-off in spectral power density. The spatial frequency region over 
which the power law pertains is known as the inertial subrange. Higher 
spatial frequencies (smaller eddies) above the inertial subrange are sub¬ 
ject to viscous .friction damping and thus depart from the simple power- 
law cascade behavior. Below the inertial subrange, in the spatial fre¬ 
quency region known as the input range, the spectrum of the large 
eddies is driven by boimdary-layer depth, wind-field structure, and 
temperature-field structure, resulting in large departures from 
Kolmogorov behavior. 

In the inertial subrange (where STATBIC is applicable), the power-law 
characteristic implies that the turbulence-modulated concentration C{x,t) 
may be modeled as having fractal statistics and scaling properties [3]. If 
one wishes to find the mean-square fluctuation for time t + At after initial 
time t (for a fixed point in space) or position x + Ax separated from posi¬ 
tion X (at a fixed time), the fractal assumption yields the relations 

{\C{t-^At)-C{t)f) = {At)^oj , (1) 

and 

C(x + Ax) - C(x) = (Ax)^(t2 , (2) 

where o/ and a} are the variances at unit increments of time and position, 
respectively. The Hurst parameter H = E - D is the difference between the 
Euclidean dimension £ in which the fluctuations are embedded and the 
fractal dimension D of the fluctuation process. For Kolmogorov turbu¬ 
lence, H assumes the value of 1/3. 

We can use the above relations to examine the relationship between the 
Hurst parameter and the sense of correlation between concentrations at 
different times or positions. Suppose, for example, that the time interval 
At is built up as the sum of equal time steps 5t, and that the fluctuation is 
simulated by addition of random numbers to an accumulator at each time 
step. If one wishes to mimic Brownian fluctuations with zero correlation, 
one might select random numbers from a Gaussian distribution with 
mean zero and standard deviation O/ that are independent at each time 
step. For the Brownian process, a well-known result is that the mean- 
square fluctuation after n samples (or time interval At = nSt) is simply 
no}. The mean-square fluctuations given by equations (1) and (2) increase 
linearly with n and imply that H has a value of 1/2 in this instance. When 
H is larger than 1/2, the mean-square fluctuation increases more rapidly 
than n with each step, an indication that correlation is positive between 



successive random numbers in the process. Negative correlation holds 
when H is less than 1/2, as in Kolmogorov turbulence. In this latter case, 
there is a better than even chance that a fluctuation at a given time step 
will be in a direction opposite to what it was at the previous time step. 

With the statistics of the Kolmogorov fractal process established for a 
given turbulent eddy size, the next step in the simulation of the process is 
to extend these results to an ensemble of eddy sizes. The self-affinity 
property of a concentration field C(x,t), which obeys fractal statistics, 
means that the fluctuation difference functions 

Cit + At)-C{t) (3) 

and 

r«[C(f + r-AO-Qf)] (4) 

should be statistically equivalent for any scale factor r, with correspond¬ 
ing relations for variations in position x. Addition of such scaled fluctua¬ 
tions (with H = 1/3) over a representative set of inertial subrange 
eddy sizes should produce a fractal field with Kolmogorov statistical 
properties. 

An appropriate set of such summed basis functions is the Fourier series. 
Each term in the series represents a different eddy size, with amplitudes 
that are proportional to the scaling factor, and phase shifts (p{x,t) that 
represent position in space and time. These phase shifts may be randomly 
varied to produce temporal variations and relative position shifts for the 
eddies. As implemented in STATBIC, random phase shifts in (p define the 
relative positions for different-sized eddies at a given time, with the 
distribution at subsequent times being simulated by time-correlated 
random shifts in <p. The phase decorrelation operation is performed in the 
spatial frequency domain (fc-space) at each time step, so tiiat only the 
inverse Fourier transform is required to produce the fluctuation distribu¬ 
tion. The degree of correlation RQcj,t) at a given eddy spatial frequency kj 
depends upon the mean eddy lifetime tj, with an assumed exponential 
decay [2]: 


and 








(5) 

( 6 ) 


where Lq is the outer scale of turbulence, u is the horizontal wind speed, 
and ko = In/Lo- The phase (p(kj,t) is changed over time step At by the 
addition of a new independent random phase from 0 to Ztt) 

to the previous phase producing a random phase that tends to 
+ <Prz, for At much larger than tj: 

^ ^oid + [1 _ .(Af)] . (7) 


3 


With the composite phase the fluctuation/c for concentration 

C at location ix,y,z) is then obtained by the 3D inverse Fourier transform 


N;,/2 Ny/2 N,/2 

fc = X Z X 

i=-NJ2 ;=-Ny/2 fc=-N,/2 








( 8 ) 


with ki = Ini I Lx, kj = 2nj/Ly, kj^ = Ink/Lz- Lx, Ly, and are the largest 
scales along the x, y, and z axes, and Ny, and Nj are the number of 

volume elements along the x, y, and z axes, respectively. This fluctuation 
may then be applied to the mean concentration field C„i(x,y,z) to produce 
the fluctuating concentration C(x,i/,z): 

C(z,y,z) = CJx,y,z)fc{x,y;z) . (9) 

This is the ftmdamental result output by the STATBIC-3D algorithm at 
each scenario time. 

The 2D output of STATBIC-2D requires statistics on the LOS path inte¬ 
grated Cl rather than the concentration C. Ci is the path column density 
defined by the relation 

Q = £c(L')dL' , (10) 

for a path of length L. Individual points in the STATBIC-2D image are 
parallel projections in which Ci fluctuations are functions of transverse 
point separation and path length. The integration of concentration over 
an LOS means that for two parallel LOSs of length L separated by a 
distance p, the Q structure function may be expressed as a path average 
[ 2 ]: 


(l fcL fcL 

= 3.82 ^ ^ dxv(l - w) 1+ |£j 


/ \2/3 
1/3 


( 11 ) 




where use has been made of equation (2) for the concentration fluctua¬ 
tions with H = 1/3. The fluctuation strength C^that appears in equation 
(11) is estimated in terms of the local mean gradient in concentration and 
the turbulence outer scale Lq: 


C} = 2.8{Lof^ 


(C) 


= 1 . 91 Lo 2 / 3 ^ 


where Oc is the dimensionless standard deviation for concentration 
fluctuations. 


(12) 



Assuming that the Ci fluctuations scale in a manner analogous to those 
for the concentration C in equation (2), it is apparent that the slope of the 
log of the equation (11) integral with respect to the log of (p/L) (the ratio 
of path separation to path length) is twice the value of the Hurst param¬ 
eter H. Figure 1 shows the numerically integrated and differentiated 
results for H as a function of p/L. 

The Hurst parameter approaches a value of 5/6 (0.83) for small separa¬ 
tions at a given L, which implies that the Ci fluctuations are relatively 
smooth for small separations p. When the LOS separation becomes larger, 
the Cl fluctuations are larger and show less correlation. At very large 
separations, H approaches the Kolmogorov point value of 1/3. Note also 
that H has a value of about 0.5 when p/L is unity, indicating that the 
fluctuations are Brownian, with zero correlation. In essence, for a fixed 
LOS, the fractal dimension for Cl fluctuations varies with transverse 
scale. This implies that the Fourier series representation of the fluctuation 
multiplier /cl (similar to that given for/c by eq (8)) is not strictly appli¬ 
cable for Cl fluctuations. Basis fimctions have been developed that ac¬ 
count for the variable-scale Hurst parameter, but the resulting code will 
need to be further optimized to produce near real-time performance. At 
present, the /cl multiplier is represented by a fixed H 2D-inverse Fourier 
transform: 





(13) 


where cTy is the standard deviation width of the cloud plume (or length of 
the LOS through the cloud), and the composite random phase (pik is 
The fractal 2D Cl distribution is then given by 

Cl(x,2) = (Cl(x,z))^/cl(a:,2) , (14) 

where {Ci{x,z))jn is the mean (smooth) Gaussian Ci value in the {x,z) 
projection plane. 


Figure 1. Ci Hurst 
parameter H as 
function of ratio of 
line of sight (LOS) 
separation r to LOS 
length I. 



5 




Figure 2. Fitted 
limiting path radiance 
curves for fog oil 
cloud, averaged over 
cube face that faces 
observer. 


Unlike STATBIC-3D, which produces 3D concentration fields as its out¬ 
put, STATBIC-2D yields 2D maps of integrated path radiance Lp and 
transmission T{R) over a path of length R. The radiance fields are calcu¬ 
lated (in the present demonstration version of the algorithm) from fitted 
functional relationships between optical depth and limiting path radiance 
Lg for two example sun-cloud-observer relative geometries: 


Leye = 255 | 0.2 + 


1.273 


1 +0.293 T ' 


T _ occ f f cni _ 1.2093 ' 

^back 355 1.501 ^ ' 


(15) 


where Lgye is the limiting path radiance for the sim at an elevation of 30° 
above the horizon in the observer's eyes, Lback is Lg for a sun 30° above 
the horizon at the observer's back, and ris the optical depth. These 
results are fits to average values of Lg over the face of a cube of fog oil 
aerosol that faces the observer. They were produced by an early version of 
the BEAMS (Battlefield Emission and Multiple Scattering) model [4]. 
Figure 2 shows the behavior of the two fit curves with optical depth. 

The optical depth z (used to evaluate the fit function expressions in 
eq (15)) and the LOS transmission T(R) are given by the relations 


t(R) r C(s) ds — ttgxt ' 

Jo 


TiR) = e-^ , 


(16) 


where Ogxt is the mass extinction coefficient (m^ g“^) for the obscurant. 
Under the assumption of uniform limiting path radiance over the LOS, 
the integrated path radiance Lp(R) may be calculated and combined with 
background radiance L(0) to provide the apparent total radiance L{R) for 
the LOS: 


L{R) = T{R) L(0) + LpiR) = T(R) L(0) + [1 - T(R)] Lg . (17) 

Equation (17) may be viewed as a linear interpolation between a clear 
atmosphere backgroimd radiance L(0) (for T{R) = 1) and a path radiance 
Lp = Lg under totally obscured conditions (r(R) = 0). 





3. Implementation 


3.1 General Comments 

STATBIC-3D and STATBIC-2D are implemented through application of 
fractal multipliers/c and /cl to smooth individual Gaussian puffs or 
plumes, respectively. In principle, an arbitrary concentration distribution 
may be used in place of Gaussian distributions, but provision for user 
non-Gaussian input (aside from the trivial uniform distribution case) is 
not presently included in the STATBIC demonstration codes. It is left to 
the user either to modify the environmental parameter assignments 
within each code or to provide input/output (I/O) code that reads in 
environmental or obscurant plume parameters. 

The fractal multiplier/c for STATBIC-3D (eq (8)) is calculated with an 
inverse fast Fourier transform (FFT). We can enhance the efficiency of the 
FFT procedure if we note that the FFT of two real-valued functions (at 
two adjacent times) can be handled in a single transform by one of them 
being "packed" into the real part and the o&er into the imaginary part of 
the complex-valued argument of the transform [2,5]. STATBIC-3D em¬ 
ploys the inverse procedure, in which complex random functions in 
frequency (k) space are inverse-transformed to two real functions at two 
adjacent times. Thus, at each frequency point (fc/, kj, k^, there are four 
statistically independent random phase coefficients chosen for time fi (H, 
7, L, and N) and four chosen for time f 2 (I, K, M, and O) for the 3D inverse 
transform. In order for the spatial output array to have its real part associ¬ 
ated with time ti and imaginary part with time t 2 , the following symme¬ 
tries are imposed on the output function T [2]; 

for ki > 0, kj > 0, and k^ > 0, 

T = H + I + J + K + L + M + N + 0; 

for ki < 0, kj > 0, and k^ > 0, 

T = H-I-J + K + L-M-N + 0; 

for ki > 0, kj < 0, and > 0, 

T = H + I-J-K-L-M + N + 0; 

for ki < 0, kj < 0, and k^ > 0, 

T = H-I + J-K-L + M-N + 0; 

for ki > 0, kj > 0, and < 0, 

T=iH + I + J + K-L-M-N-0)*; 

for ki < 0, kj > 0, and k^ < 0, 

T={H-I-] + K-L + M + N-0)*-, 

for ki > 0, kj < 0, and k^ < 0, 

T=iH + I-J-K + L + M-N-0)*; 

for ki < 0, kj < 0, and fcjt < 0/ 

T = {H-l + J-K+L-M + N-0)*, 


7 



where the superscript asterisk in the last four relations implies complex 
conjugation. The output transform function T is then multiplied by the 
fractal filter function 


F[k,kj,k,) = 




and is then transformed via an FFT implementation of equation (8), 

N^/2 Ny/2 N ^/2 

fc ~ ^ ^ S ^}i ^k\ ^j' ^k\ 

i = -N^/2 / = -Ny/2 k = -N,/2 ' J <^1 \ ' J >^1 


(18) 


(19) 


to yield the fractal concentration multipliers/c at and f 2 - The sequence 
of transformations used in the equation (19) FFT is to transform first in z, 
then in y, and then in x (the reverse sequence to the forward transform). 
The/c multipliers are then applied to the mean concentration according 
to the prescription of equation (9), and the resulting fractal concentration 
field is written to output files for the two scenario times. 

STATBIC-2D follows a similar plan of implementation as that for 
STATBIC-3D, but in two dimensions. Instead of the four random coeffi¬ 
cients required at each scenario time for the 3D case, only two are needed 
(D and F at time and £ and G at time f 2 )- Symmetry considerations like 
those in the 3D case lead to the following constraints on the output 
function T (for an inverse transform from the (fc,-, fc/t) plane): 

for fc,- > 0 and fcjt > 0, 

T^D+E+F+G; 

for fc,- < 0 and kj^ > 0, 

T = D-E-F + G-, 

for fc, > 0 and fcjt < 0, 

T={D + E-F-G)*) 

for fc, < 0 and fcjt < 0, 

T={D-E + F-G)*. 

As in the 3D case, a 2D fractal filter F(fc,-, fcjt) is calculated from the relation 






H+l 


( 20 ) 


and the output transform function is then inverse-transformed via an FFT 
implementation of equation (13): 



(21) 


fcL M = 


NJ2 Nz/2 

. S,. , ZAKhmi,^] 


i=-N^/2 lt=-N^/2 




to )deld the fractal Ci product multipliers /cl at fj and t 2 - Note that the 
inverse transform in the y-direction of equation (13) has been omitted, 
because it appears as a Gaussian multiplier in the final result. The inverse 
transform is performed first along the z direction, then along x. In the 
example plume that is embedded within the STATBIC-2D demonstration 
code, meanderings of the plume center line in the vertical plane due to 
fractal vertical wind statistics are also included. Application of equations 
(21) and (14) to equations (16) and (17) then provides a 2D radiance 
distribution for the plume, in the (x,z) plane. 

Prospective application developers of STATBIC-2D should note that they 
must provide an integrated crosswind optical depth for any plumes that 
they might adapt to the algorithm. This parameter appears in the pro¬ 
gram driver as the TAU variable (and as the t quantity of eq (16)). The 
user thus must supply an obscurant mass extinction coefficient Ogxt and 
calculate the Cl product for the mean plume— {Ci{x,z))m of equation 
(14)—in order to obtain TAU at each crosswmd LOS. 

Currently, the STATBIC algorithms are configured as demonstration 
programs that are not flexible in terms of user input, particularly 
STATBIC-2D. User input for this demonstration code (detailed below) is 
limited to an ending time and a random-number seed. The emission rate 
of the source and transport characteristics of the boundary layer medium 
are preset and are not user-modifiable in the present version of STATBIC- 
2D. STATBIC-3D allows the user to have more control over the character¬ 
istics of the concentration field, but omits simulation of advected trans¬ 
port of that field through the scenario array. 

3.2 Platform-Specific Comments 

STATBIC source code and executables are available in packages for either 
a generic IBM PC with VGA-level graphics (coded in FORTRAN) or a 
Silicon Graphics, Inc. (SGI), minicomputer using SGI GL (graphics lan¬ 
guage) graphics (coded in FORTRAN and C++). 

3.2.1 PC Version 

In the PC edition, only STATBIC-2D presently makes use of video graph¬ 
ics to display a time-stepped "movie" of the notional radiance of a sample 
steady-state plume emitted from a point source. The plume is viewed in 
orthographic (parallel) projection. Two simultaneous views of the inte¬ 
grated path radiance of the plume are shown. The top half of the image 
shows the radiance field with the illumination source behind the plume 
("in the observer's eyes"); the bottom half is for the situation when the 


9 



sun is behind the observer. Both depictions rely on simple models (de¬ 
scribed in sect. 2) for the limiting path radiance field within the plume, 
and integration to obtain an apparent path radiance. 

The distribution disk contains both the PC and SGI versions of the 
STATBIC demonstration code. The root directory contains copies of the 
PKZIP and PKUNZIP file-compression utilities (version 2.04g) required to 
install the software, along with a text file describing the diskette contents. 
The PC version of the package is archived in the PCVER.ZIP file in the 
/PC subdirectory. PKUNZIP installs the following files for the PC 
version; 

• README. 1ST—PC package overview (text file) 

• README—Additional implementation comments (text file) 

• D3FRCTAL.FOR—STATBIC-3D source code 

• D2PLUME.FOR—STATBIC-2D source code 

• VGALIBDH.C—C source code for special VGA driver 

• COMPSTAT.BAT—Batch file for compilation and linking of PC package 

• VGALIBDH.OBJ—Object code for VGA graphics driver to be linked with 
D2PLUME.OBJ 

• VGALIBDH.SAV (same as VGALIBDH.OBJ) 

• D3FRCTAL.EXE—STATBIC-3D executable code for PC 

• D2PLUME.EXE—STATBIC-2D executable code for PC 

• CDEMO002.DAT—^Sample binary output concentration file for 
STATBIC-3D 

After installation, the user need only run either D3FRCTAL.EXE or 
D2PLUME.EXE to obtain immediate results. Any modifications to the 
source code will require execution of the COMPSTAT.BAT batch file to 
recompile and link the modified package. The FORTRAN compiler used 
for this version is Microsoft FORTRAN. Because modification of the 
custom VGA interface is not recommended, no C compiler should be 
required for the demonstration package. Also, no data reformatting or 
graphics postprocessing software is provided with the PC package. 

3 . 2.2 SGI Version 

The SGI version of STATBIC is first installed onto a PC from the /SGI/ 
SGrVER.ZIP file and is then transferred (via FTP, for example) to the host 
SGI machine. After transfer to the SGI, the user must set the permission 
mask on the NEWNAME batch file with the CHMOD utility (using a 
mask such as "777" or "a + x"). NEWNAME is then executed to rename 
the set of files to the SGI convention, which permits longer file names 
than are allowed on the PC. The installed files and their significance are 
the following (PC file names are in parentheses after the SGI names): 




newname (NEWNAME)—Batch file for renaming from PC convention to 
SGI convention. 

how2use.sgi (HOW2USE.SGI)—^SGI package overview (text file). 

how2use.shw (HOW2USE.SHW)—Outline for the use of the showconc 
routine (text file). 

comp_all (COMP_ALL)—Batch file that compiles and links both the 
STATBIC-3D and STATBIC-2D demonstration packages, as well as 
utilities. 

comp_3d (COMP_3D)—^Batch file that compiles and links the STATBIC- 
3D package (d3frctal) and its showconc utility. 

comp_demo (COMP_DMO)—Batch file that compiles and links the 
STATBIC-2D package and its utilities. 

comp_save (COMP_SAV)—Batch file that compiles and links the 
STATBIC-2D irisplume.f code. 

comp_flip (COMP_FLP)—Batch file that compiles and links the anima¬ 
tion routines for STATBIC-2D image files. 

d3frctal.f (D3FRCTAL.F)—Source code for STATBIC-3D. 

showconc.f (SHOWCONC.F)—^Source code for SGI/GL viewer of 
STATBIC-3D output concentration files. 

irisplume.f (IRISPLUM.F)—Source code for version of STATBIC-2D that 
does not display to the screen during execution. Output goes to anima¬ 
tion file, which may be read by the donsbw display postprocessor. 

rtirisplume.f (RTIRISPL.F)—Source code for STATBIC-2D version similar 
to irisplume. Top panel shows "sun-in-eyes" case, and bottom panel 
shows sxm-behind-observer case. Results are displayed on screen during 
run. 

rtirisgaus.f (RTIRISGA.F)—Source code for STATBIC-2D version similar 
to rtirisplume except that top panel shows fractal plume and bottom 
panel shows smooth Gaussian plume. "Sun-in-eyes" illumination is used 
in both cases. This version also generates an RGB output animation file 
that may be displayed by the anyflip utility. 

rtirisovrhd.f (RTIRISOV.F)—Source code for STATBIC-2D version similar 
to rtirisplume, except that view is from overhead and illumination is from 
the side. 

rtirisexl.f (RTIRISEX.F)—^Source code for a STATBIC-2D version that is 
similar to rtirisplume, except that the limiting path radiance map has 
been modified to show highlighted regions where single scattering is 
dominant; areas where multiple scattering dominates are dark. 

rtirispuff.f (RTIRISPU.F)—Source code for a STATBIC-2D version that is 
similar to rtirisplume, except that down-wind advection of a single 
Gaussian puff emitted at time f = 0 s is shown. 



rtgraphic.c (RTGRAPHI.C)—Source C routines for screen display during 
STATBIC-2D RT-series runs. 

anyflip.f (ANYFLIRF)—Source code for STATBIC-2D post-run animator 
for RGB-format files. Currently, only rtirisgaus outputs animation files 
compatible with this utility. 

donsbw.f (DONSBW.F)—Source code for STATBIC-2D animator for gray¬ 
scale files output by irisplume. The donsbw input file must be named 
"flip.dat". 

rtplot.c (RTPLOT.C)—C source code for anyflip and donsbw graphics 
drivers. 

confr001.dat (CONFR001.DAT)—Sample output concentration file output 
by the STATBIC-3D code for time f = 1 s (unformatted). This file may be 
used to demonstrate operation of the showconc utility. 

confr002.dat (CONFR002.DAT)—Sample output concentration file output 
by the STATBIC-3D code for time f = 2 s (xmformatted). This file may be 
used to demonstrate operation of the showconc utility. 

The SGI implementation of both STATBIC-3D and STATBIC-2D thus has a 
number of useful options and utilities not present in the PC version. SGI 
systems t 5 q>ically have many powerful image manipulation utilities 
available to edit output images for publication or in combination with 
other imagery. It is thus appropriate that the most versatile edition of 
STATBIC is configured for the SGI platform. 



4. User's Guide 


Input to the present (demonstration) editions of the STATBIC codes is 
simple, because these editions rely on preset parameters in the codes. 
Input to the STATBIC programs is interactive in the present implementa¬ 
tion of the algorithm. 

4.1 STATBIC-3D 

User input to STATBIC-3D consists of six to eight lines of free-format 
parameters, depending on the choice of fractal or (for test purposes) 
uniform or smooth concentration output from the code: 

(1) NVX, NVY, NVZ 

NVX, NVY, and NVZ are the array dimensions in the x, y, and z directions 
in the scenario array. Each of these dimensions must be equal to an 
integral power of 2, because of the choice of EFT implemented in the 
code. The upper boimds on these dimensions are set by the MAXNXS, 
MAXNYS, and MAXNZS values in a PARAMETER statement at the 
beginning of the code. 

(2) TARGOD 

The single Gaussian puff or uniform obscurant distribution considered by 
STATBIC-3D must be normalized by the CONORM parameter discussed 
below. As a guide before input of CONORM, the user may specify an 
optical depth along the y-axis with the TARGOD parameter. The code 
assumes a nominal mass extinction coefficient ALPHA equal to 4.302 
m^ g~^, which is appropriate to fog oil at visible wavelengths. Also, the 
code assumes that each cubical cell has an edge length of 1 m. The code 
then outputs an average concentration TARCON, given by the relation 

TARCON = TARGOD / (ALPHA * float(NVY)), 

which the user may consider before setting the following CONORM 
value. 

(3) CONORM 

The maximum of the mean concentration distribution is given by the 
CONORM parameter (units of g m"^). 

(4) lOTYPE 

Selection of the concentration field type produced by the STATBIC-3D 
code is controlled by the lOTYPE switch. Valid selections for this switch 
and their meaning are the following: 

1 = uniform concentration in the array volume, set equal to the 

CONORM value given above. 

2 = fractal concentration throughout the array volume, with a mean 

concentration of CONORM. 


13 



3 = smooth Gaussian puff concentration distribution centered at 
middle of array volume. The distribution has the mathematical 
form 


r CONORMpvr, 1 

SNORM 2 c7^/ct2/<t|, 


where Cjji, is the concentration (g m"^). 


_ float (i) - float (NVX) 
Xi- 2 

_ float (;■) - float (NVY) 

y._ _ 

_ float (A:)-float (NVZ) 


are the coordinates of the point relative to the scenario array 
center (in dimensionless units of cell edge lengths), 

_ float (NVX) 

<^xb - 4 3 


_ _float(NVY) 
4.3 


_ float (NVZ) 
4.3 


and SNORM = Oy^ a^. 

The sigmas given above are also in dimensionless units of ceU- 
edge lengths (in the code, the sigmas appear as sigxb, sigyb, and 
sigzb). The factor of 4.3 above is essentially arbitrary; this value 
tapers the Gaussian distribution to a value of about 10 percent of 
the peak central value and thus bounds the distribution in a 
region where it is "significantly" above zero. 

4 = Fractal Gaussian puff concentration distribution. This option 
applies a fractal filter to the smooth distribution described above 
under the lOTYPE = 3 selection. 

(5) USRFIL (for lOTYPE = 1 or 3, uniform or smooth distribution cases) 

When a uniform or smooth Gaussian puff distribution is used, the name 
of the file that receives the output is given by the CHARACTER*80 
variable USRFIL. (Note that PC users must use a name that conforms to 
DOS limitations for file names; i.e., the filename is at most 8 characters 
long, with an additional "and three-character extension, for a total of 12 
characters.) 


14 



(6) SEED (for lOTYPE = 2 or 4, fractal concentration case) 

The user supplies a real number SEED to initialize the random number 
generator, which supplies the random phases required to produce the 
T(ki,kj,k]c) function of equation (19). 

(7) ENDTIM (for lOTYPE = 2 or 4, fractal concentration case) 

The time at which the evolution of the STATBIC-3D algorithm is termi¬ 
nated (in seconds) is given by the ENDTIM parameter. Results are pro¬ 
duced at 1-s intervals, so an integer value of ENDTIM is appropriate. At 
least two output files are supplied (even if the user gives ENDTIM a 
value of 0 s), because the multiplexing of the EFT algorithm automatically 
provides a second event time separated from the first by 1 s. 

(8) ROOTNM (for lOTYPE = 2 or 4, fractal concentration case) 

Output concentration files produced imder the fractal options are stored 
imder names derived from the ROOTNM parameter. The user is 
prompted to supply a string of five characters in ROOTNM, which forms 
the prefix for a sequence of filenames for successive time steps. If the 
name supplied in ROOTNM is less than five characters long, ROOTNM is 
padded to five characters with trailing "X" characters. The particular time 
to which the given file pertains is designated by the next three numeric 
characters after ROOTNM: "001" for the first time, "002" for the second 
time, etc. The file extension ".DAT" is then appended to complete the 
output file name. Examples of valid file names for an initial time and the 
initial time plus 1 s are "CLOUD001.DAT" and "CLOUD002.DAT," where 
the user has supplied the string "CLOUD" in the ROOTNM variable. 

Other parameters are assigned values in STATBIC-3D that may be broken 
out as explicit user input in future versions of the algorithm. In general, 
these are used to calculate spatial or temporal correlation factors for 
Kolmogorov turbulence within the planetary boundary layer or to specify 
the times at which results are generated. The variable names, assigned 
values, and meanings for these parameters are the following: 

(1) Timing variables: 

• TIME = 0.0 (initial time minus DELTl, in seconds) 

(In subsequent assignments, TIME is the scenario time in seconds from 
the time the cloud evolution starts, i.e., TIME = TIME + DELTl or TIME = 
TIME + DELT2.) 

• DELTl = 1.0 (time increment between transform sets, in seconds) 

• DELT2 = 1.0 (time increment between the two members of a transform 
set, in seconds) 

Because the algorithm calculates results for a pair of times with each 
transform, the option exists to use one time increment between the two 
members of the transform pair (DELT2) and between the last member of a 
given transform pair and the initial member of the subsequent transform 
pair (DELTl). For example, the first two transform pairs yield the follow¬ 
ing four scenario times: 


15 



First transform; 


TIME(l) = DELTl 
TIME(2) = DELTl + DELT2 

Second transform: 

T1ME(3) = DELTl + DELT2 + DELTl 
TIME(4) = DELTl + DELT2 + DELTl + DELT2 

With the assigned values stated above, the scenario time begins at TIME = 
1 s and has a uniform spacing of 1 s for all subsequent times. When the 
value of TIME computed for the last member of a transform pair equals 
or exceeds the value of ENDTIM, the program terminates after the results 
for this last transform pair are written. With the assigned values above, 
this implies that results for TIME = 1 s and TIME = 2 s will be recorded, 
even if an ENDTIM value of 0.0 s is input by the user. 

(2) Boundary layer parameters for correlation scaling: 

• UBAR = 3.0 (mean wind speed, in meters per second) 

• LfHGHT = 2.0 (height of mean wind speed, in meters) 

• ZNOT = 0.005 (surface roughness height, in meters) 

These parameters are then combined with previous user-input or as¬ 
signed parameters to produce a chain of derived quantities leading to 
calculation of correlation factors: 

• USTAR = 0.4*UBAR/alog(UHGHT/ZNOT) (friction velocity, in meters 
per second) 

• XOUTER = float(NVX) (outer scale on x-axis, in meters) 

• YOUTER = float(NVY) (outer scale on y-axis, in meters) 

• ZOUTER = float(NVZ) (outer scale on z-axis, in meters) 

• TOUTER - sqrt(XOUTER*ZOUTER)/(2.0’'USTAR) (outer scale in time, in 
seconds) 

• TSMALL = DELTl/TOUTER (scaled time used as argument of correlation 
function for the DELTl interval) 

• TLARGE = DELT2/TOUTER (scaled time used as argument of correlation 
function for the DELTl interval) 

Program output from STATBIC-3D is routed to either the USRFIL file (for 
the uniform or smooth time-independent obscurant concentration cases) 
or to the (ROOTNM)NNN.DAT file (for the nonadvected fractal concen¬ 
tration field). 



4.2 STATBIC-2D 


Input to the STATBIC-2D demonstration program consists only of an 
initial random number seed and a scenario ending time: 

• LSEED 

The user supplies an integer number LSEED to initialize the random 
number generator, which supplies the random phases required to pro¬ 
duce the T{ki,kk) function of equation (21). 

• ENDTIM 

The time at which the evolution of the STATBIC-2D demonstration 
program is terminated (in seconds) is given by the ENDTIM parameter. 
Results are produced at 1-s intervals, so an integer value of ENDTIM is 
appropriate. 

As mentioned in section 3.2.2 on the SGI implementation of STATBIC-2D, 
program output may be routed to either the screen or output files. Thus, 
in some SGI versions of STATBIC-2D, the user is also prompted to enter 
the name of a file where output images are stored for animation playback 
by anyflip, donsbw, or other graphics postprocessor. 


17 



5. Sample Cases 

The STATBIC algorithm is easily applied to example cases that make use 
of the pre-set parameters in the compiled code. More difficult is the 
adaptation of the algorithm to user-defined environmental scenarios, 
obscurant types, and emission rates. It is also left to the user to reformat 
the run results and tailor them to specific applications, such as simulator 
displays or statistical analysis in wargames. For the user who wishes to 
employ the STATBIC algorithm in such contexts, we provide a few simple 
examples showing the code's capabilities. 


5.1 Uniform Fractal Field (PC Implementation) 


The PC or SGI version of STATBIC-3D may be used to generate fractal 
fields that are homogeneous or "uniform" over the scenario array vol¬ 
ume. The user makes this selection by setting the lOTYPE parameter 
described above to a value of 2. The array used here has xxyxz dimen¬ 
sions of 64 X 32 X16 m. The assumed mass extinction coefficient used here 
is 4.302 m^ g“^. The TARGOD optical depth parameter is set to 10 in this 
case, yielding a value of 0.07264 g m“^ for the mean concentration. This is 
also the value that the user enters as the CONORM parameter. Figure 3 
shows four adjacent horizontal layer sections of the resulting fractal field 
at four successive times (with ENDTIM = 4 s), using a 16-level gray scale. 
The top row depicts the evolving concentration field for layer 7 (out of 16, 
with 1 as the lowest layer) at times t = 1 s (extreme left frame) to t = 4 s 
(extreme right frame). The next three rows down represent results for 
layers 8,9, and 10, respectively. 


Careful examination of the density patterns within each layer shows 
fluctuations that strengthen with time and others that weaken. Correla¬ 
tions of fluctuation patterns between layers are also apparent in the 
results. The patterns displayed in this example are not transported later¬ 
ally across the scenario array by the wind. Evolution of the density pat¬ 
tern is thus due to the time constant for fluctuation decay and the time 
correlation statistics given by equations (5) and (6). 


Figure 3. Example case 
for STATBIC-3D PC 
implementation; 
uniform fractal 
concentration field; 
rows 1-4 correspond 
to scenario array 
horizontal layers 7-10; 
columns 1-4 
correspond to times of 
1-4 s. 



18 





5.2 Smooth Gaussian-Puff Concentration Field (PC 
Implementation) 

For comparison and checkout purposes, the lOTYPE = 3 option allows 
the user to create a smooth Gaussian puff distribution of the form given 
in equation (22). The PC version of STATB1C-3D produces the sectioned 
distribution shown in figure 4 with this parameter choice. The same 
64 X 32 X 16 m scenario array and 16-level gray scale used in the previous 
example are used for this case. Unlike figure 3, figure 4 shows the 
horizontal (xy) layers from the bottom (k = 1, upper left) to the top 
(k = 16, lower right). The maximum concentration for this example (1.12 x 
10“^ g m“^) is given by the ratio CONORM/SNORM of equation (22). 


5.3 Fractal Gaussian-Puff Concentration Field (PC 
Implementation) 


The selection lOTYPE = 4 imposes a fractal filter upon the smooth 
Gaussian-puff distribution shown in figure 4. In this case, the maximum 
concentration foimd (1.85 x 10"® g m"^) is somewhat larger than in the 
example above. Figure 5 is a display similar in format to figure 3, show¬ 
ing the time-stepped evolution of the four middle layers in the concentra- 


Figure 4. PC version 
of STATBIC-3D for 
smooth Gaussian 
concentration field; 
horizontal sections 
from lowest (layer 1, 
upper left) to highest 
(layer 16, lower right), 



Figure 5. PC STATBIC- 
3D sample case for 
fractal Gaussian 
concentration field; 
rows 1-4 correspond to 
horizontal section 
layers 7-10; columns 
1-4 correspond to 
times of 1-4 s. 



19 










tion field. The correlation of fluctuating density structures between 
adjacent times and layers is again apparent. Note that the demonstration 
software used here does not allow the puff to be blown across the sce¬ 
nario array. It is also apparent from this example that the puff is not 
allowed to diffuse out of the scenario array box. Both of these features 
may be added by the user at a later point. 

5.4 Uniform Fractal Field (SGI Implementation) 

On an SGI system, the example CONFR001.DAT and CONFR002.DAT 
binary-data files produced by the dSfrctal (STATB1C-3D) program may be 
examined with the showconc viewer. The screen output of showconc is in 
color; red, green, and blue colors are used to highlight each of the x,y,z 
planes in the scenario array. A "gray scale" is used in each color to show 
the relative concentration from the lowest (black) to the highest (bright¬ 
est). The user may step through the scenario array with the keyboard 
function keys: FI and F2 step backward and forward in the x-direction 
(red plane), respectively. F3 and F4 move backward and forward in the 
y-direction (green plane); F5 and F6 perform the same respective func¬ 
tions in the z-direction (blue plane). The user may also embed the high¬ 
lighted planes in a wire-frame that shows the position of all cell boimd- 
aries in the scenario array. The wire-frame may be turned on and off with 
the Fll and F12 keys, respectively (at program entry, the wire-frame is 
present). The user may rotate the entire scenario array with the system 
mouse (the default orientation at program entry is restored with the 
"escape" key). Zooming of the entire array is performed with the "page 
up" and "page down" keys. 

5.5 Fractal and Smooth Gaussian Plumes (SGI 
Implementation) 

The fractal 2D plume may be shown above its parent Gaussian plume 
with the rtirisgaus (RTIRISGA) SGI implementation of STATB1C-2D. This 
version of the STATBIC algorithm produces both an on-screen view of the 
comparison and a "flip-file" that may be viewed later with the anyflip 
animator. Images are stored at 1-s time increments in the animation file. 
When running anyflip, the user enters a real number between 0.0 (slow¬ 
est) and 1.0 (fastest) to control the speed of the animation. A negative 
value terminates the program. Figure 6 shows a typical sample frame 
from rtirisgaus. Both views shown here are for the "sun-in-the-eyes" 
forward-scattering geometry. 

5.6 Fractal Plume, Varying Sun Angle (SGI 
Implementation) 

The irisplume (IRISPLUM) and rtirisplume (RTIRISPL) STATB1C-2D SGI 
programs may be used to demonstrate fractal plume radiance as a func¬ 
tion of illumination direction. As mentioned previously, a radiative 
transport code was used to determine the average limiting-path radiance 


20 





over the visible face of a uniform cubic fog oil cloud for forward scatter¬ 
ing ("sun-in-eyes") and backward scattering ("sim-behind-back"), as a 
fimction of axial optical depth (eq (15)). The solar elevation was set at 30° 
in both cases. Figure 7 displays screen output from the rtirisplume pro¬ 
gram with the forward-scattering case above the backscattering case. The 
obscurant source emission rate is held constant in this example. The 
plume was allowed to meander in the vertical by fractal variation of the 
vertical wind component. Note the reversal of cloud core radiance rela¬ 
tive to the radiance at the outside edge of the plume between the two 
geometries. Also note, in the forward-scattering view, that the large hole 
in the plume has a dense knot to its upwind side. 


Figure 6. Comparison 
of STATBIC-2D 
fractal (top) and 
smooth Gaussian 
(bottom) cases. 



Figure 7. STATBIC- 
2D comparison for 
forward-scattered 
radiance (top) and 
backscattered 
radiance (bottom) for 
fog oil cloud. 












5.7 Fractal Puff, Varying Sun Angle, and Time (SGI 
Implementation) 

The STATBIC algorithm for the 2D case may be adapted to cases where a 
single Gaussian puff is transported across the scenario array and is also 
allowed to expand as it moves. The modification (implemented as the 
rtirispuff (RTIRISPU) program) makes use of the 2D description for the 
horizontal wind speed, plume meander, and diffusive spread for the 
Gaussian plume case. 


22 



6. Conclusions 


It should be emphasized that STATBIC is an algorithm, not an operational 
model package. The code that does exist is for a specific illustration of the 
algorithm's potential for application to obscurant screening problems. 
Practical real-time usage of the algorithm is, at present, limited to more 
powerful computers than PCs or low-end SGI machines. Execution of 
STATBIC for typical sample problems takes several seconds per time step 
for this latter class of machines, even with the doubled FFT packing 
strategy. 

As currently distributed, the STATBIC demonstration package is written 
primarily in FORTRAN, with a few support routines written in C. 

A version of STATBIC-2D has been translated to the C language (by 
D. Tofsted of ARL); this version is available to DoD users from the 
authors. 


23 



References 


1. D. W. Hoock, S. G. O'Brien, J. C. Giever, S. J. McGee, and M. A. Torres, 
Physics-Based Environmental and Embedded Process Models for Virtual Simula¬ 
tions, Proceedings of the 17th ITSEC Conference, Albuquerque, New 
Mexico, (November 1995). 

2. D. W. Hoock, Statistical Texturing Application to Battlefield Induced Clouds 
(STATBIC), MORS Military Operations Research Handbook, Volume 1: 
Terrain, Unit Movement, and Environment, edited by W. K. Olson, Mili¬ 
tary Operations Research Society, pp 4-8,4-15 (April 1994). 

3. D. W. Hoock, Theoretical and Measured Fractal Dimensions for Battlefield 
Aerosol Cloud Visualization and Transmission, Proceedings of the Battlefield 
Atmospheric Conference, Fort Bliss, Texas, pp 46-55 (December 1991). 

4. D. W. Hoock, P. S. Hansen, J. C. Giever, and S. G. O'Brien, Visualization of 
Obscuration and Contrast Effects Using the BEAMS Models, Proceedings of 
the Battlefield Atmospherics Conference, Las Cruces, New Mexico, 

pp 3-13 (December 1994). 

5. W. H. Press, B. P. Flannery, S. A. Teukolsky, and W. T. Vetterling, Numerical 
Recipes: The Art of Scientific Computing (FORTRAN Version), Cambridge 
University Press, p 397 (New York, 1989). 


24 



Distribution 


Admnstr 

Defns Techl Info Ctr 
Attn DTIC-OCP 

8725 John J Kingman Rd Ste 0944 
FT Belvoir VA 22060-6218 

Ofc of the Dir Rsrch and Engrg 
AttnR Menz 
Pentagon Rm 3E1089 
Washington DC 20301-3080 

Ofc of the Secy of Defns 
Attn ODDRE (R&AT) G Singley 
Attn ODDRE (R&AT) S Gontarek 
The Pentagon 
Washington DC 20301-3080 

OSD 

Attn OUSD(A&T)/ODDDR&E(R) R Tru 
Washington DC 20301-7100 

ARL Chemical Biology Nuc Effects Div 
Attn AMSRL-SL-CO 

Aberdeen Proving Groxmd MD 21005-5423 

Army Commtinications Elec Ctr for EW RSTA 
Attn AMSEL-EW-D 
FT Monmouth NJ 07703-5303 

Army Corps of Engrs 
Engr Topographies Lab 
Attn ETL-GS-LB 
FT Belvoir VA 22060 

Army Field Artillery School 
Attn ATSF-TSM-TA 
FT Sill OK 73503-5000 

Army Foreign Sci Tech Ctr 
Attn CM 
220 7th Stret NE 
Charlottesville VA 22901-5396 

Army Infantry 

Attn ATSH-CD-CS-OR E Dutoit 
FT Benning GA 30905-5090 

Army Rsrch Ofc 
AttnAMXRO-GS Bach 
PO Box 12211 

Research Triangle Park NC 27709 


Army Strat Defns Ciimd 
AttnCSSD-SL-L Lilly 
PO Box 1500 

Huntsville AL 35807-3801 
CECOM 

Attn PM GPS COLS Young 
FT Monmouth NJ 07703 

CECOM RDEC Elect System Div Dir 
AttnJ Niemela 
FT Monmouth NJ 07703 

CECOM 

Sp & Terrestrial Commetn Div 
AttnAMSEL-RD-ST-MC-M H Soicher 
FT Monmouth NJ 07703-5203 

Dpty Assist Secy for Rsrch & Techl 
AttnSARD-TT F Milton Rm 3E479 
The Pentagon 

Washington DC 20301-0103 

Hdqtrs Dept of the Army 
AttnDAMO-FDT D Schmidt 
400 Army Pentagon Rm 3C514 
Washington DC 20301-0460 

MICOM RDEC 

AttnAMSMI-RD WC McCorkle 
Redstone Arsenal AL 35898-5240 

Natl Security Agency 
Attn W21 Longbothum 
9800 Savage Rd 

FT George G Meade MD 20755-6000 

Science & Technology 
101 Research Dr 
Hampton VA 23666-1340 

US Army CECOM Rsrch, Dev, & Engrg 
AttnRF Giordano 
FT Monmouth NJ 07703-5201 

US Army Edgewood Rsrch, Dev, & Engrg Ctr 

AttnSCBRD-TD J Vervier 

Aberdeen Proving Ground MD 21010-5423 


25 



Distribution 


US Army Info Sys Engrg Cmnd 
AttnASQB-OTD F Jenia 
FT Huachuca AZ 85613-5300 

US Army Materiel Sys Analysis Activity 
Attn AMXSY-CR Marchetti 
Attn AMXSY-D J McCarthy 
Aberdeen Proving Ground MD 21005-5071 

US Army Matl Cmnd 
Dpty CG for RDE Hdqtrs 
AttnAMCRD BG Beauchamp 
5001 Eisenhower Ave 
Alexandria VA 22333-0001 

US Army Matl Cmnd 
Prin E)pty for Acquisition Hdqrts 
AttnAMCDCG-A D Adams 
5001 Eisenhower Ave 
Alexandria VA 22333-0001 

US Army Matl Cmnd 
Prin Dpty for Techlgy Hdqrts 
AttnAMCDCG-T M Fisette 
5001 Eisenhower Ave 
Alexandria VA 22333-0001 

US Army Mis Cmnd (USAMICOM) 

Attn AMSMI-RD-CS-R Documents 
Redstone Arsenal AL 35898-5400 

US Army Natick Rsrch, Dev, & Engrg Ctr 
Acting Techl Dir 
AttnSSCNC-T P Brandler 
Natick MA 01760-5002 

US Army Rsrch Ofc 

Attn G lafrate 

4300 S Miami Blvd 

Research Triangle Park NC 27709 

US Army Simulation, Train, & Instrmntn 
Cmnd 
AttnJ Stahl 

12350 Research Parkway 
Orlando FL 32826-3726 

US Army Tank-Automtv & Armaments Cnrnd 

AttnAMSTA-AR-TD C Spinelli 

Bldgl 

Picatinny Arsenal NJ 07806-5000 


US Army Tank-Automtv Cmnd Rsrch, Dev, & 
Engrg Ctr 

AttnAMSTA-TA J Chapin 
Warren MI 48397-5000 

US Army Test & Eval Cmnd 
AttnRG Pollard III 

Aberdeen Proving Ground MD 21005-5055 

US Army Topo Engrg Ctr 
Attn CETEC-ZC 
FT Belvoir VA 22060-5546 

US Army Train & Doctrine Cmnd 
Battle Lab Integration & Techl Dirctrt 
Attn ATCD-B J A Klevecz 
FT Monroe VA 23651-5850 

US Military Academy 
Dept of Mathematical Sci 
AttnMAJD Engen 
West Point NY 10996 

USAASA 

Attn MO AS-AI W Parron 
9325 Gimston Rd Ste N319 
FT Belvoir VA 22060-5582 

USArmy TRADOC 

AttnATRC-WEC D Dixon 

White Sands Missile Range NM 88002-5501 

USATRADOC 

AttnATCD-FA 

FT Monroe VA 23651-5170 

Nav Air War Cen Wpn Div 

Attn CMD 420000D C0245 A Shlanta 

1 Admin Cir 

China Lake CA 93555-6001 

Nav Surface Warfare Ctr 
Attn Code B07 J Pennella 
17320 Dahlgren Rd Bldg 1470 Rm 1101 
Dahlgren VA 22448-5100 

Naval Surface Weapons Ctr 
Attn Code G63 
Dahlgren VA 22448-5000 


26 






Distribution 


AFSPC/DRFN 
AttnCAPTR Koon 
150 Vandenberg Stret Ste 1105 
Peterson APB CO 80914-45900 

Air Weather Service 
Attn TechL Lib FL4414 3 
Scott AFBIL 62225-5458 

ASC OL/YUH 

Attn JDAM-PIP LT V Jolley 

102WDAve 

Eglin AFB FL 32542 

GPS Joint Prog Ofc Dir 

Attn COL J Clay 

2435 Vela Way Ste 1613 

Los Angeles AFB CA 90245-5500 

Phillips Lab 

Atmospheric Sci Div Geophysics Dirctrt 
Hanscom AFB MA 01731-5000 

Phillips Lab 
Attn PL/LYP 
Attn PL/LYP Chisholm 
Hanscom AFB MA 01731-5000 

USAF Rome Lab Tech 
Attn Corridor W Ste 262 RL SLTL 
26 Electr Pkwy Bldg 106 
Griffiss AFB NY 13441-4514 

DARPA 
AttnB Kaspar 
AttnL Stotts 
3701 N Fairfax Dr 
Arlington VA 22203-1714 


ARL Electromag Group 

Attn Campus Mail Code F0250 A Tucker 

University of Texas 

Austin TX 78712 

Ashtech Inc 
AttnS Gourevitch 
1177KiferRd 
Sunnyvale CA 94086 

Dir for MANPRINT 

Ofc of the Deputy Chief of Staff for Prsnnl 
AttnJ Hiller 
The Pentagon Rm 2C733 
Washington DC 20301-0300 

Natl Ctr for Atmospheric Research 
Attn NCAR Library Serials 
PO Box 3000 
Boulder CO 80307-3000 

New Mexico State University 

Physical Sci Lab 

Attn S O'Brien (3 copies) 

PO Box 30002 

Las Cruces NM 88003-8002 

US Army Rsrch Lab 

Attn AMSRL-IS-E D Hoock (3 copies) 

White Sands Missile Range NM 88002-5001 

US Army Rsrch Lab 
AttnAMSRL-BE-E 


NASA Spct Fit Ctr Atmospheric Sciences Div 
Attn Code ED 411 
Huntsville AL 35812 

NIST 

Attn MS 847.5 M Weiss 
325 Broadway 
Boulder CO 80303 


White Sands Missile Range NM 88002-5501 

US Army Rsrch Lab 

Attn AMSRL-CI-LL Techl Lib (3 copies) 

Attn AMSRL-CS-AL-TA Mail & Records 
Mgmt 

Attn AMSRL-CS-AL-TP Techl Pub (3 copies) 
Attn AMSRL-IS J Gantt 
Attn AMSRL-IS-E K Gurton (20 copies) 
Adelphi MD 20783-1197 


27 



REPORT DOCUMENTATION PAGE 

Form Approved 

0MB No. 0704-0188 

Public reporting burden tor this collection of information is estimated to average 1 hour per response, including the time for reviewing instructions, searching existing data sources, 
gathering and maintaining ttie data needed, and completing and reviewing the collection of information. Send comments regarding this burden estimate or any other aspect of this 
collection of information, including suggestions for reducing this burden, to Washington Headquarters Services, Directorate for Information Operations and Reports, 1215 Jefferson 
Davis Highway, Suite 1204, Arlington, VA 22202-4302, and to the Office of Management and Budget, Papenvork Reduction Project (0704-0188), Washington, DC 20503. 

1. AGENCY USE ONLY (Leave blank) 2. REPORT DATE 3. REPORTTYPE AND DATES COVERED 

April 1998 Final, from October to November 1996 

4. TITLE AND SUBTITLE 

STATBIC—A MethocJ for Inclusion of Fractal Statistics in Obscurant 
Transport Models 

5. FUNDING NUMBERS 

DA PR: B53A 

PE:61102A 

6. AUTHOR(S) 

Sean G. O'Brien (Physical Science Laboratory, New Mexico State 
University) and Donald W. Hoock (Army Research Laboatory) 

7. PERFORMING ORGANIZATION NAME(S) AND ADDRESS(ES) 

U.S. Army Research Laboratory 

Attn: AMSRL-IS-E (dhoock@arLmiI) 

White Sands Missile Range, MM 88002-5501 

8. PERFORMING ORGANIZATION 

REPORT NUMBER 

ARL-TR-1375 

9. SPONSORING/MONtTORING AGENCY NAME(S) AND ADDRESS<ES) 

U.S. Army Research Laboratory 

2800 Powder Mill Road 

Adelphi, MD 20783-1197 

10. SPONSORING/MONtTORING 

AGENCY REPORT NUMBER 

11. SUPPLEMENTARY NOTES 

AMS code: 61110253A11 

ARL PR: 7FEJ70 

12a. DISTRIBUTION/AVAILABILITY STATEMENT 

Approved for public release; distribution unlimited. 

12b. DISTRIBUTION CODE 

13. ABSTRACT (Maximum 200 words) 

A generic texture routine was developed for upgrading smooth obscurant cloud models by 
introduction of time- and space-dependent fluctuations in line-of-sight (LOS) propagation and image 
generation. The routine runs separately from or in conjunction with other obscuration models that 
predict electro-optical (EO) propagation for mean or average aerosol concentration contributions in 
the obscurant cloud. 

Atmospheric turbulence and eddy structures are the underlying sources of concentration fluctua¬ 
tions. Eddy structures can possess certain well-defined and statistically predictable correlations 
between larger and smaller eddies that are linked to the steady breakup of larger eddies and the 
cascade of energy to smaller eddy scales. The resulting effects of these correlations in concentration 
are simulated by prototype algorithms that provide either two-dimensional propagation overlays for 
image modification or three-dimensional volume fluctuations. Path-integrated concentration, LOS 
propagation fluctuations, and realistic cloud imaging are then simulated by multiplication of pseudo¬ 
random fluctuation outputs with smooth, ensemble-averaged outputs from more traditional, simple 
obscuration models. front'd on reverse) 

14. SUBJECT TERMS 

plume, simulation 

IS. NUMBER OF PAGES 

36 

16. PRICE CODE 

17. SECURITY CLASSIFICATION 18. SECURITY CLASSIFICATION 19. SECURITY CLASSIFICATION 

OF REPORT OF THIS PAGE OF ABSTRACT 

Unclassified Unclassified Unclassified 

20. UMITATION OF ABSTRACT 

UL 


NSN 7540-01 <280-5500 


Standard Form 298 (Rev. 2-89} 
Prescribed by ANSI Std. 239-18 
298-102 


29 



























13. Abstract (cont'd) 

Two platform-specific implementations of the generic texture routine were developed for IBM PC 
and Silicon Graphics, Inc. (SGI), display hardware. Examples of graphical output for both the two and 
three-dimensional algorithms are shown. 


♦ 



30 




