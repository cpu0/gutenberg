
i 

i 




Approved tor puoiac teieaa«^ 
pipt no ^rmn UixUsut^ 


19941221 011 

July-September 1993 












3Q 

93 



Carnegie Mellon University 

Software Engineering Institute 


Quarterly 

Update 


July—September 1993 


Accesion For 

NTIS CRA&I 
DTiC TAB 
Ui)ar)noLjnced 
JiJStiticatiGn 


-Ad. 

Distribution / 


Availability Codes 

Gist 

Avail 

Spe 

3nd/or 

cial 




Summary of Accomplishments 


The SEI hosted its annual Software Engineering Symposium 23-26 
August 1993 at the David Lawrence Convention Center in Pittsburgh, 
Pennsylvania. The theme of the s 5 nmposium was “The Business of Software 
Engineering: The Competitive Edge.” This year’s symposium had a broader 
focus than in past years, including increased participation from industry 
and government. The symposium also had 36 exhibitors this year, twice the 
number from last year’s event. The final attendance figure for this year’s 
sjmaposium was 1288, an increase from last year’s conference. 


This section provides 
a summary of 
accomplishments from 
July—September 1993 


Software Capability Evaluation (SCE) Version 1.0 implementation 
Guide was published this quarter. This guide was based on the material 
contained in a similar guide that was previously developed for a United 
States Air Force technical objectives and plans customer. 


'The Independent Risk Assessment Project (IRA) has developed and 
published Version 0.1 of the Software Risk Evaluation (SRE), and has 
continued to refine the definitions associated with the SRE and the IRA 


The Computer Emergency Response Team hosted the 5th Forum of 
Incident Response and Security Teams (FIRST) Computer Security 
Incident Handling Workshop in St. Louis, Missouri. The workshop was 
attended by 140 individuals from government, university, and corporate 
organizations. 

The Managing Software Development course will be offered during the 
fall semester at the SEI. This course will be offered to audiences at CMU 
and National Technological University (NTU). The course is an updated 
and expanded version of an earlier Academic Series course, “Software 
Project Management.” The course is videotaped during presentation to 
CMU students and broadcast over satellite to NTU students. With an 
enrollment of 43, “Managing Software Development” is the largest class 
registered at NTU this semester. 

The Computer-Aided Software Engineering Environments Project 

completed its work on the Navy’s Next Generation Computing Resources 
Project Support Environment Standards Working Group Reference Model 
for environment services. This reference model provides a definition of the 
services that can be offered by a full working environment and offers a 
frame of reference for understanding existing environments. 


The Software Process Measurement Project conducted a pilot offering of 
“Engineering an Effective Software Measurement Program” Workshop 
at Standard Systems Center (SSC), Gunter Air Force Base in August. The 
workshop was well received and attended by 35 SSC personnel 
representing the Quality Improvement Group and the program/project 
managers. The workshop was designed to formulate a software 
measurement installation plan for use as an end product. 


SEI Quarterly Update 3Q93 



Table of Contents 


Software Process Measurement 
Software Process Definition ... 

Capability Maturity Model.... 

Empirical Methods. 

Software Process Assessment.. 

Software Capability Evaluation 

Engineering Maturity Model .. 

Ada9X — Review. 

Dependable Real-Time Software Systems 

Real-Time Simulators. 

Open Systems Architectures. 

Transition Models. 

Application of Software Models. 

Software Engineering Information Modeling 
CASE Environments. 

Team Risk Management. 

Risk Management Improvement 
Independent Risk Assessment .. 

Curriculum Research . 

Academic Education.. 

Professional Education 

Computer Emergency Response Team.27 SEI Services 

Organization Capability Development.29 

Process Research.31 Technology Transition 

Initiative 


33 Program Development 

35 How to Get Additional 

Information 

SEI Quarterly Update 3Q93 


24 SEI Products 

25 
25 



14 Software Engineering 
10 Techniques 

17 


g Real-Time Distributed 
g Systems 

.9 

10 

11 

12 


1 Software Process 

2 
4 

4 

5 

6 


























Software Process 

Software Process Measurement 


Software Process 
Measurement 


Software Process 


The Software Process Program focuses on improving the process of 
software development. Projects within the program are assessing the 
actual practice of software engineering in the defense community, 
training organizations to gain management control over their software 
development processes, supporting the use of quantitative methods and 
measures as a basis for process improvement, and developing improved 
methods for software process management. 


The objective of the Software Process Measurement (SPM) Project is to promote 
and improve the use of measurement in managing, acquiring, and supporting 
software systems. Project members are formulating reliable measures of the 
software development process and products to guide and evaluate development, 
lb expedite Department of Defense and industry transition, project members are 
actively working with professionals from industry, government, and academia in 
encouraging organizations to use quantitative methods to improve their 
software processes. 

In August, the project conducted a pilot offering of “Engineering an Effective 
Software Measurement Program'’ Workshop at Standard Systems Center (SSC), 
Gunter Air Force Base. The workshop was well received and attended by 35 SSC 
personnel representing the Quality Improvement Group, and the program and 
project managers. The workshop was designed to formulate a software 
measurement installation plan for use as an end product. 

Also during this period, two site visits were conducted in support of the 
measurement work at Army Materiel Command, Ft. Sill site in Lawton, 
Oklahoma. An SPM staff member has been working to assemble a policy, 
procedure, and standard for software measurement practices at Ft. Sill. 

This quarter, three site visits were conducted in support of the Defense 
Information Systems Agency (DISA)/Center for Information Management 
technical objectives and plan. The site visits supported pilot efforts to use the 
SEI software measurement checklists at Columbus, Ohio; Battlecreek, 
Michigan; and Mechanicsburg, Pennsylvania. In addition, two working sessions 
were held at DISA in Washington D.C. 


1 


SEI Quarterly Update 3Q93 



Software Process 
Software Process Definition 


An SPM project member is leading a technical collaboration with IBM Federal 
Systems Center to develop guidelines for implementing software measures in 
conjunction with the key practices of the capability maturity model, further 
mapping the details of Levels 4 and 5. This project member also presented status 
of this collaboration at the SEI/IBM Semi-Annual Program Review. 

Project members delivered the following presentations at the 1993 SEI Software 
Engineering Symposium: 

• Integrated Process Tutorial 

• Software Cost Estimating Initiative 

• Siemens Case Study Effort 

• Measuring the Benefits of Software Process Improvement 

• Panel Session on Experiences in Using the SEI Measimement Definition 
Checklists 


A project member delivered a presentation on the SEI Software Cost Estimating 
Initiative at the Software Life-Cycle Cost Model User’s Group Meeting in Tyson’s 
Corner, Virginia. 

Anita Carleton, Bill Curtis, Larry Druffel, and Ronald Radice led panel sessions 
at the Cooperstown I Workshop entitled “Creating a National Vision and Force 
in Software Through Software Measurement.” Results of the workshop will be 
briefed to Vice President Gore in the fourth quarter. 


The objectives of the Software Process Definition Project are to establish the use 
of defined processes for the management and development of software as 
standard software engineering practice and to advance the capabilities required 
to define and automate the software process within an organization. A “defined 
process” means that a process is documented, supported by training, and 
practiced, and that the documentation, training, and practice are equivalent. 

Project members are exploring process definition methods and techniques 
through collaboration with several SEI sponsors. Project members participate in 
process improvement activities at GTE and Naval Air Warfare Center through 
resident affiliates. Project members are also exploring advanced applications of 
process definition technology through the Advanced Research Projects Agency 
(ARPAVSoftware Technology for Adaptable, Reliable Systems (STARS) Progi;am. 


Software Process 
Definition 


SEI Quarterly Update 3Q93 


2 




Software Process 
Software Process Definition 


Currently, project members are developing a software process framework based 
on the capability maturity model (CMM) for software, guidelines for defining 
enactable processes, and a workshop on software process definition for software 
engineering process group members. 

During this quarter, project members completed version 1.0 of "Software Process 
Definition Guide: Content of Enactable Software Process Definitions,” began 
development of version 3.0 of the "Software Process Framework,” and began 
working to make "Defining Software Processes: Getting Started” available to the 
public. 

During this quarter, project members held two one-day workshops on software 
process improvement for Standard Systems Center (SSC) management. The 
workshop "Software Process Improvement: Getting Started” is a one-day 
introduction or refresher course on software process improvement. The 
workshop includes working sessions where participants identify common 
process-related root causes of software production problems and apply the 
principles and concepts from the class to prioritize process improvement goals. 

Project members delivered a workshop on software process definition to program 
and project managers at SSC, and to the SSC Quality Improvement office. 
Following the workshop, a four-day working session was held to discuss and 
implement recommended changes to the SSC software engineering process. 
Recommendations were based on an evaluation of the SSC documented process 
against the project’s CMM-based software process framework. This evaluation 
identified areas within the documented process where policies, standards, and 
processes were inconsistent with the CMM. 

Project members are providing support to the ARPA/STARS demonstration 
projects and Process Technology Transition Affiliates (PTTAs). Project members 
are also providing limited technical support for the joint ARPA STARS/SEI 
process asset library (PAL), which is a joint effort between the SEI, an SEI 
resident affiliate from GTE, and several STARS prime contractors. Project 
members are also supporting the development of software processes for STARS 
demonstration projects and technology transition affiliates. This support 
provides early access to products being developed by the project and consulting 
support for planning, process design, and process development and review. 

This quarter, project members updated the electronic version of the PAL that is 
available in the electronic repository, Asset Source for Software Engineering 
Technology. The update involved a restructuring to increase the number of 
electronic formats in which PAL assets are available. PAL assets can now be 
retrieved in Macbinary, Rich Text Format, BinHex, and Postscript. Tests of these 
formats were conducted to ensure that the files could be printed from Macintosh, 
IBM, and Sun platforms using at least one of the PAL electronic formats. 


3 


SEI Quarterly Update 3Q93 


Software Process 
Capability Maturity Model 
Empirical Methods 


The Capability Maturity Model (CMM) Project maintains a model describing 
how organizations can improve their software process maturity. This model will 
be continuously updated with the state of the art as it evolves in software 
engineering, total quality management, and other relevant areas of 
improvement. It will elaborate on software development practices that provide 
clear strategies for capability maturity growth and improvement. 

The “Introduction to the CMM” course is aimed at providing software process 
assessment and software capability evaluation teams with a working knowledge 
of CMM vl.l and the concepts that will enable them to develop reliable, 
consistent key process area profiles and understand the process management 
problems that they encounter during a site visit. The course will also be of value 
to software engineering process group members who are doing software process 
improvement. This quarter, the course was pilot tested in an alpha version and 
will continue to undergo pilot testing as it is incrementally developed. The course 
is available on a limited basis during pilot testing. The target completion date 
for the course is February, 1994. 


The Empirical Methods (EM) Project develops, evaluates, and validates products 
(e.g., questionnaires, methods, and models) for use iri baselining and measuring 
software process improvement. EM staff members manage the software process 
database and generate periodic reports on the status of software process 
maturity and results of software process improvement. 

This quarter, EM staff members developed beta test versions of the auxiliary 
questionnaires. These questionnaires may be used in SPAs, software capability 
evaluations (SCE), mini-assessments, and other appraisal methods to capture 
consistent information to: 

• Determine the organizational scope of SPAs and SCEs. 

• Assist in selecting projects to include in a SPA or SCE. 

• Develop the plan for the on-site period of SPAs and SCEs, and select those 
who will complete the maturity questionnaires for use in efficient 
appraisals. 


Capability Maturity 
Model 


Empirical Methods 


SEI Quarterly Update 3Q93 


4 





Software Process 

Software Process Assessment 


Software Process 
Assessment 


Staff members from the EM and Software Process Definition Projects developed 
a survey that was completed by 339 people at the 1993 National Software 
Engineering Process Group (SEPG) Meeting. The survey addressed SEPG 
experiences and needs that the software process improvement (SPI) community 
perceives the SEI could address. Also, the survey was used to collect 
demographic data about the SPI community. The results of the survey will be 
summarized in a report that will be released in the fourth quarter. 

This quarter, EM staff members collaborated with a resident affiliate from 
Pacific Bell and through a technical partnering agreement with 
Hewlett-Packard to complete alpha tests and plan beta tests for an instant 
profile product. Instant profiling is a supplemental appraisal method to rapidly 
check software process improvement between SPAs. This joint product 
development effort began in early 1992 and resulted in pilot and division-wide 
implementation of instant profiling within Pacific Bell. Additional pilot testing 
and documentation of the method with Hewlett-Packard began this quarter and 
will continue through the end of 1993. A technical report describing the method 
will be released next quarter. 


The Software Process Assessment (SPA) Project helps organizations improve 
their software development process by providing a structured method for 
assessing their current practice, as well as continuously improving the 
assessment method and ensuring its focus on organizational process 
improvement. The objectives of the assessment method are to understand an 
organization’s current practices; identify key areas for improvement, utilizing 
the SEI capability maturity model (CMM) vl.l as a framework; and help the 
organization initiate those improvements. 

This quarter, SPA project members conducted two separate field exercises of the 
alpha2 version of the new CMM-based SPA method. Technical collaboration 
agreements were established with the Texas Instnunents Defense Electronics 
and Systems Group, Dallas, Texas, and with the Electronic Data Systems 
Engineering Applications Development Division, Troy, Michigan. Assessment 
teams from both organizations were trained during the previous quarter in 
preparation for their on-site assessment periods. Both field exercises were 
successful and yielded valuable information for incorporation into the beta 
version of the assessment method and training. 


5 


SEI Quetrterly Update 3093 



Software Process 
Software Capability Evaluation 


At the 1993 SEI Software Engineering Symposium, a SPA project member 
participated in the development and delivery of the “Integrated Approach to 
Software Process Improvement” tutorial and delivered the presentation 
“Upgraded SPA: CMM-Based SPAs.” Other SPA project members delivered the 
presentation “An Analysis of SEI Software Process Assessment Results.” 

This quarter, a SPA project member attended the International Standards 
Organization Software Process Improvement and Capability dEtermination 
(SPICE) meeting in Rome, Italy. 


The Software Capability Evaluation (SCE) Project defines, develops, and evolves 
an appraisal method that helps government acquisition organizations evaluate 
the capability of contractors to develop and maintain software. SCE is a method 
for evaluating the software process of an organization to gain insight into its 
software development capability. The project members document the method, 
train the software community in its use, develop guidance materials to support 
the use of the method, and pilot the method with users. Significant effort is also 
expended communicating with the software community about the SCE method. 

Software Capability Evaluation Version 1.5 Method Description was published 
this quarter. Work has immediately begun to update this document so that it 
includes capability maturity model (CMM) vl.l concepts. 

This quarter. Software Capability Evaluation (SCE) Version 1.0 Implementation 
Guide was published. This guide was based on the material contained in a 
similar guide that was previously developed for a United States Air Force 
technical objectives and plan customer. Approximately 90 copies of the guide 
were forwarded to government and industry personnel who requested to receive 
it upon publication. Efforts to update this document to the CMM vl.l have also 
been begun. 

This quarter, SCE project members delivered a 4-team SCE team training class 
to 24 people. The SCE Overview Seminar was delivered at a customer site and 
was offered once at the SEI. The 2-hour “Introduction to SCE” module was 
delivered to the Defense Systems Acquisition Course, Management of Software 
Acquisition Course in Fort Belvoir, Wginia. 

An SCE on-site was performed at Planning Research Corporation in Reston, 
Virginia, as part of the SCE pilot program with the National Oceanographic and 
Atmospheric Sciences Agency (NOAA) Advanced Weather Interactive 
Processing System program. Final preparations for the pilot program were 
completed this quarter. 


Software Capability 
Evaluation 


SEI Quarteriy Update 3Q93 


6 




Software Process 

Software Process Reports 


OOOOOOOOO 

Software Process 
Reports 

July—September 1993 


Project members made two presentations at the 1993 Software Engineering 
S 3 nnposium: “Software Capability Evaluation: A Method Description and “Use 
of the SCE Method in a Contract Monitoring Application: Lessons Learned.” 

The SCE Advisory Board met in July and September. SCE documents, listings 
from databases tracking issues, recommendations, decisions, and action items 
were reviewed and positive outbriefings were received. 

This quarter, a study of SCE use with the United States Army was completed; 
the results are being analyzed for suitability of publication and for replicating 
the study in other Department of Defense organizations. 


Concepts on Measuring the Benefits of Software Process Improvements 
CMU/SEI-93-TR-9 

Establishing a Software Measurement Process 
CMU/SEI-93-TR-16 

Software Capability Evaluation (SCE) Version 1.5 Method Description 
CMU/SEI-93-TR-17 

Software Capability Evaluation (SCE) Version 1.0 Implementation 
Guide 

CMU/SEI-93-TR-18 

A Software Process Framework for the SEI Capability Maturity 

Model: Repeatable Level 

CMU/SEI-93-SR-7 


For information about how to obtain copies of SEi reports, please turn to page 35. 


7 


SEI Quarterly Update 3Q93 


Real-Time Distributed Systems 
Engineering Maturity Model 


Real-Time Distributed Systems 


The goal of the Real-Time Systems Program is to improve the 
development of real-time distributed systems by integrating software 
engineering with systems engineering and reducing the risk associated 
with new technology. 


This effort is a feasibility study that focuses on the development of an 
engineering maturity model (EMM) to complement the capability maturity 
model (CMM). While the CMM aims to stimulate the evolution of organizations 
to a continuously improving, controlled state, the EMM seeks to stimulate the 
evolution of product engineering practices used to predict and control properties 
of software artifacts. While the CMM is typically used to evaluate the maturity 
of organizations, the EMM will be used to determine how practices can best be 
improved to gain better predictability and control over properties of software 
systems. 

This quarter, project members produced two drafts of a white paper that 
describes an EMM framework. Although the general framework was 
established, it has yet to be applied in depth to specific software engineering 
domains and specific artifact properties. In the next quarter, project members 
will produce a final version of the white paper as a technical report and will begin 
further work to explore the utility of the model. 


Engineering Maturity 
Modei 


SEI Quarterly Update 3Q93 


8 



Ada 9X—Review 


Dependable Real-Time 
Software Systems 


Real-Time Distributed Systems 
Ada 9X — Review 
Dependable Real-Time Software Systems 


The SEI is supporting the revision of the Ada programming language in a variety 
of ways. One member of the technical staff is a participant in the Ada 9X 
Distinguished Reviewers Group, which is responsible for reviewing the ongoing 
revision work. This group meets periodically to review the progress of the 
revision. Another staff member chairs the Ada Compiler Validation Capability 
Review Tteam, which is responsible for reviewing the direction and content of the 
test suite that will be used to validate Ada 9X compilers. The SEI also supports 
outside experts who participate in the Ada 9X effort as distinguished reviewers 
and as Ada Compiler Validation Capability Review Team members. Finally, the 
SEI provides electronic mailing facilities to the Ada 9X project and to the Ada 
Joint Program Office, facilitating communication among the various groups 
interested in the Ada standard and its revision. 

This quarter, meetings of both review groups were held, and documents 
pertaining to the efforts were reviewed. 


The goal of the Dependable Real-Time Software Systems Project is to develop a 
reusable and generalizable software architecture to support software evolution 
in mission-critical systems. 

The Navy’s Next Generation Computing Resource Program has developed a 
technical objectives and plan with the SEI to lead the development of a new 
high-performance real-time network standard based on the asynchronous 
transfer mode network standard. 

The project’s cooperation with MITRE on airborne radar continues. During a 
MITRE review in July, this cooperative work was ranked as one of the best at 
MITRE. Furthermore, a manager from the Advanced Research Projects Agency 
suggested that MITRE and the SEI submit a joint proposal to further this work. 

The project gave its first successful demonstration at the 1993 Software 
Engineering Symposium in August. Project members demonstrated: 

• The reusability of the project’s software architecture, design, and 

implementation, using two well-known sample control problems: the ball 
and beam device and the inverted pendulum device. Both are unstable 
without active computer control. 


9 


SEI Quarterly Update 3Q93 




Real-Time Distributed Systems 
Real-Time Simulators 


• The ability to introduce new software online to improve control performance 
without the need to shut down the device. 

• The robustness of the project's software, by inviting the audience to insert 
software bugs of their choice into the new software. Although some 
admirable attempts were made, no one has broken the system. 

To the best knowledge of the project's members, this was the first such 
demonstration in the world. 

This quarterj “A Systematic Approach to Design Distributed Real-Time Systems" 
was published in IEEE Computer Also, a project member was elected to be a full 
member of International Federation of Information Processing Working Group 
10.4 on Dependable Computing and Fault Tolerance. 

The paper, "Distributed System Design Using Generalized Rate Monotonic 
Theory," published in the 1992 Proceedings of the 2nd International Conference 
on Automation, Robotics, and Computer Vision, was selected by the conference 
committee as one of best innovative papers. An updated version will be published 
again in a special issue of the Journal of Integrated Computer-Aid Engineering 
in 1993. 


Real-time simulators, especially flight simulators, have traditionally used a 
software architecture that is optimized for efficiency. The focus on efficiency has 
complicated the achievement of certain types of functionality and has caused 
severe problems in maintaining and modifying software. Understanding the 
design tradeoffs involved in emphasizing certain non-functional qualities like 
the ability to maintain and modify will enable designers to develop model 
software architectures that satisfy these qualities, thereby improving the 
process of developing real-time simulators. 

The goals of the Real-Time Simulators Project are to: 

• Extend, validate, and document flight simulator and other real-time 
simulator architectures in a format that is accessible to practitioners and 
acquisition personnel. 

• Understand and codify the relationship between non-functional quality 
goals and software architectures. 


Real-Time Simulators 


SEI Quarterly Update 3Q93 


10 



Real-TInrie Distributed Systems 

Open Systems Architectures 


Open Systems 
Architectures 


This quarter, project members supported the development of several Air Force 
simulator programs, including the Simulator for Electronic Combat Training 
and the F22 Simulator. 

Project members also transitioned the main concepts of structural modeling to a 
broader audience. Project members are continuing to develop the structural 
modeling guidebook. 

Project members wrote a Carnegie Mellon University (CMU) School of Computer 
Science technical report on the use of general architectural concepts to evaluate 
user interface architectures. This report was prepared jointly with the 
Evolutionary Development Life Cycle Project within the Robotics Institute at 
CMU. 


The purpose of the Open Systems Architectures Project is to assist in the 
transition of systems to an open architecture. In the past, many systems have 
been based on proprietary components; there is now a strong trend to move to 
systems that are based on open components, particularly those based on formal 
standards such as the American National Standards Institute and the 
International Organization for Standardization. It is important to note, however, 
that there are issues that must be addressed in development of open systems for 
the mission-critical domain. Hence, another goal of the project is to identify these 
issues and seek solutions to problems. 

This quarter, project members supported the Institute of Electrical and 
Electronic Engineers 1003 Portable Operating System Interface (POSIX) 
standards effort. This work is supported by the Navy Next Generation 
Computing Resource Program. A new working group in POSIX was recently 
formed, entitled “Real-Time Distributed Systems Communications” (POSIX .21). 
The working group seeks to develop a language-independent specification and 
an Ada language binding that is suitable for the real-time domain. Project 
members are chair and co-technical editor for this group. At the last POSIX 
meeting, the working group reached an agreement on top-level requirements for 
the standard. The Institute of Electrical and Electronic Engineers (IEEE) has 
requested permission to publish the requirements document as part of its 
Emerging Practices Series. IEEE has also requested permission to distribute a 
brief document entitled “Beginner’s Guide to POSIX” that was developed by 
project members. 

Project members have begun to work on an externally supported effort to develop 
a prototype course for high-level managers in the area of open systems. The 
course is modular in content and, in addition to basic principles of open systems, 
includes emphasis on real-time distributed systems. This work is done in 
collaboration with staff members from the Software Engineering Tfechniques 
Program. 


11 


SEI Quarterly Update 3Q93 




Real-Time Distributed Systems 

Transition Models 


Project members continue to support the Master of Software Engineering 
Program at Carnegie Mellon University. A student is currently working with 
project members to develop a formal specification (using the Z language) for a 
subset of the POSK .21 interface. This work was presented at the last POSK 
meeting and a paper was submitted to a requirements engineering conference. 
An interesting aspect of the work is the ability to delineate different classes of 
issues associated with the development of a formal specification and then to state 
them in terms of Z. This is a collaborative effort with another project at the SEI. 


The goals of the Transition Models project are to determine and demonstrate a 
systematic, predictable, and replicable process for software technology 
transition. Work includes development and evolution of a conceptual framework; 
development and dissemination of guidance for general transition planning and 
for introducing new software technologies within organizations; and case studies 
of the transition of immature software technologies. Transition Models project 
customers include internal SEI staff as well as members of the SEI 
constituencies. Project members also maintain contact with researchers and 
others interested in software technology transition from business, government, 
and academic domains. 

This quarter, a project member reviewed the draft proposal for the National 
Tfechnology Transfer Center and the Technology Transfer Committee of the 
Council of Consortia. This proposal involves building a hypermedia inventory of 
knowledge and practice associated with technology transfer. 

Eighty participants have registered for the upcoming Working Conference on 
Diffusion, Transfer, and Implementation of Information Technology The 
conference is sponsored by the International Federation of Information 
Processing Tfechnical Committee 8 (Information Systems) with the cooperation 
of Tfechnical Committee 2 (Software Theory and Practice). The SEI is hosting the 
conference and the preliminary program has been distributed to participants. 

A technical paper, “From Theory to Practice: Technology Transition to the SEI,” 
was accepted for presentation in the mini track. Issues in Technology Transfer, 
of the Hawaii International Conference on Systems Sciences. 


Transition Modeis 


A project member presented a tutorial, “Managing Tfechnology Transition as a 
Project,” at the 1993 SEI Software Engineering Symposium. 


SEI Quarteriy Update 3Q93 


12 



Real-Time Distributed Systems 

Real-Time Distributed Systems Reports 


OOOOOOOOO 

Real-Time Distributed 
Systems Reports 

July—September 1993 


Structural Modeling: An Application Framework and Development 

Process for Flight Simulators 

CMU/SEI-93-TR-14 

Dependable Software Technology Exchange 
CMU/SEI-93-SR-4 

This report is availed)le in electronic format via anonymous file transfer protocol (FTP). 


For information about how to obtain copies of SEI reports, please turn to page 35. 


13 


SEI Quarterly Update 3Q93 


Real-Time Distributed Systems 
Application of Software Models 


Software Engineering Techniques 

The goal of the Software Engineering Techniques Program is to 
improve effectiveness and efficiency in engineering and reengineering 
of large software-intensive systems through increased use of 
engineering knowledge. Project members envision this to be 
accomplished through systematic application of models supported by 
methods and tools. 

The program consists of three projects. The Computer-Aided Software 
Engineering (CASE) Environments Project focuses on automation of 
the software engineering processes and addresses issues of engineering 
and adoption of environments. The Application of Software Models 
Project addresses the systematic creation and use of models in 
application engineering. The Software Engineering Information 
Modeling Project addresses issues of capturing, representing, and 
making accessible increasing amounts of engineering information 
ranging from requirements elicitation and system understanding to 
engineering knowledge typically found in handbooks. 


For systematic software reuse, organizations must invest in evolving a core 
competence in software modehng. This core competence involves modeling the 
common capabilities of software applications within a product family, and 
developing a generic design founded on a software/hardware architectural 
model. As an organization enriches its software assets with models, the process 
for developing or evolving software applications will become more an 
engineering change activity of mapping fi*om needs to software solutions than a 
synthesis activity of building from scratch. 


Application of 
Software Models 


SEI Quarterly Update 3Q93 


14 



Real-Time Distributed Systems 
Application of Software Models 


The Application of Software Models (ASM) Project is developing the technology, 
engineering process, organization structure, and transition planning involved in 
building and applying a core competence in software modeling. The activities of 
this project are based on the combined experience of the project members in 
domain modeling, software architecture, composition of systems via the 
application of models, design for and with reuse, and other key supporting 
techniques. The application of these techniques leads to the systematic creation 
and application of models, which form a codified technology base of engineering 
knowledge. The SEI has produced abstract models such as those which form the 
Feature-Oriented Domain Analysis (FODA) method, the Object Connection 
Update model, and the Object Connection Architecture model. The project also 
uses abstract models created by other organizations. 

Through collaboration with technical objectives and plan sponsors, the project 
has used abstract models as a basis for creating concrete models through domain 
engineering and is appl 3 dng these models in the creation of applications. The 
primary sponsors during this quarter include: 

• Army Communications and Electronics Command (CECOM) 

• Joint Modeling and Simulation S 3 rstems (JMASS) 

• Ballistic Missile Defense Office (BMDO) 

• The United States Navy 

• National Institute of Standards and Technology (NIST) 


CECOM is involved in the development of a domain analysis technique and its 
application in creating a domain model of Army movement control, a tactical 
decision aid supporting command and control. 

Representatives from JMASS are responsible for applying the Object Connection 
Update model for design of friendly and threat models. 

BMDO is using abstract models as a means of evaluating the BMDO Information 
Architecture and its ability to support system definition of Battle 
Management/Command Control and Communication applications. 

Navy personnel are creating concrete models to support the development of 
weapon system trainers. The ASM Project provided a report to be used by the 
Navy for assessing possible contractors in the areas of software development 
environment, software size and productivity metrics, and the software 
development plan. Project members used SEI recommended practices in 
Model-Based Software Engineering (MBSE), computer-aided software 
engineering (CASE)/tool adoption and metrics to prepare this report. Project 
members also delivered a report on Technical Performance Measures for the 
high-risk areas in software development. 


15 


SEI Quarterly Update 3Q93 


Real-Time Distributed Systems 
Software Engineering Information Modeling 


NIST is applying the FODA method for developing a model of network 
management systems software. 

The ASM Project is currently developing a set of support services, training and 
documentation for organizations wishing to develop a software modeling 
competence. Currently in place are: 

• An overview briefing describing the evolution to MBSE. 

• An overview briefing on abstract and concrete models to support design. 

• A multi-day tutorial/workshop on domain analysis. 


ASM project members attended the American Institute of Aeronautics and 
Astronautics Workshop on Satellite Autonomy at Philips Lab, Kirtland Air Force 
Base. 

Project members made presentations at the 1993 SEI Software Engineering 
Symposium, and met with personnel from the Air Force Software Technology for 
Adaptable, Reliable Systems demonstration project for a two-day information 
exchange. 


The Software Engineering Information Modeling Project is investigating the 
creation, maintenance, and use of models critical to software engineering. The 
project is conducting research into the techniques and tools that will improve a 
software engineer’s ability to capture, represent, and access reusable software 
engineering information, knowledge, and models. Work continues on developing 
pilot technology that facilitates access to software engineering information, 
initially focusing on the improvement of requirements capture and analysis. A 
first set of tools for associating and synchronizing video, audio, and their text 
transcripts has been developed. 

This quarter, the project continued its joint effort with Texas Instruments to 
develop multimedia engineering experience modules. The creation of these 
modules will be based on ongoing project work to develop multimedia knowledge 
representation techniques. The second series of modules was captured with 
multiple isolated cameras in the SEI video studio during this quarter. The 
decomposition and indexing of the modules has begun. The first prototype of 
AMORE (Advanced Multimedia Organizer for Requirements Elicitation) was 
demonstrated at the 1993 SEI Software Engineering Symposium in Pittsburgh, 
Pennsylvania, in August. 


Software Engineering 
Information Modeling 


SEI Quarterly Update 3Q93 


16 




Real-Time Distributed Systems 
CASE Environments 


CASE Environments 


Also this quarter, project members continued to work with the Naval Supply 
Systems Command on a technical objectives and plan project entitled “Research 
and Development of Advanced Technology in Support of the Naval Supply 
Systems Command ” Project members provided technical support for system 
requirement determination and evaluation of process, knowledge, and data 
requirements to automatically convert hardcopy engineering drawings into 
computer models. Project members attended a critical design review with 
Mantech, the Naval Supply Systems Command contractor. 

The project leader attended the Advanced Research Projects Agency Summer 
Study meeting on educational requirements of the National Information 
Infrastructure and was appointed to the editorial board for the Institute of 
Electrical and Electronic Engineers Computer Society multimedia computing 
magazine. 


The Computer-Aided Software Engineering (CASE) Environments project 
addresses the problem that, while a large number of software tools and 
integrating frameworks are currently available, generally there is not clear 
evidence to determine the precise impact of tools on productivity and quality. In 
addition, the integration of different tools is problematic, and the organizational 
issues for adopting technology and the support of tools for an organization’s 
software development process are not well understood or generally agreed upon. 

This overall problem is addressed through three general approaches: 

1. Developing conceptual frameworks to understand tool integration and tool 
adoption from the perspectives of technical mechanisms, users services, and 
organizational processes. 

2. Viewing both integration and adoption as design activities which require an 
analysis of the current state, and a coherent process to move to a desired 
state. 

3. Verifying the conceptual frameworks through small scale experiments. 


This quarter, CASE project members continued experiments on tool integration. 
These experiments have examined how different control integration 
mechanisms operate together, and how control integration and data integration 
provide complementary solutions to the integration issue. 


17 


SEf Quarterly Update 3Q93 



Real-Time Distribuied Systems 
Software Engineering Techniques Reports 


The project completed its work on the Navy’s Next Generation Computing 
Resources Project Support Environment Standards Working Group Reference 
Model for environment services. This reference model provides a definition of the 
services that can be offered by a full working environment and offers a frame of 
reference for understanding existing environments. 

Project members have participated with the Institute of Electrical and 
Electronic Engineers and the International Standards Organization on SC7 in 
developing a standard practice for CASE adoption. This group is using work from 
the project as a baseline document for a standard practice on CASE adoption. 

Project members delivered a tutorial on CASE Integration and Adoption at the 
1993 SEI Software Engineering Conference. In addition, project members 
delivered five papers that highlighted project work on environment integration, 
CASE adoption, configuration management, and the programming support 
environments reference model. In addition, the project sponsored a talk by 
Maureen Judd of IBM at the conference. 


Process-Centered Development Environments: An Exploration of Issues 
CMU/SEI-93-TR-4 

This report is avaiiable in eiectronic format via anonymous file transfer protocol (FTP). 

Safety-Critical Software: Status Report and Annotated Bibliography 
CMU/SEI-93-TR-5 

This report is available in electronic format via anonymous file transfer protocol (FTP). 


ooooooooo 

Software Engineering 
Techniques Reports 

Juiy— September 1993 


A Case Study in Software Maintenance 
CMU/SEI-93-TR-8 

This report is available in electronic format via anonymous file transfer protocol (FTP). 

Integrating 001 Tool Support into the Feature-Oriented Domain 

Analysis Methodology 

CMU/SEI-93-TR-11 

AMORE: The Advanced Multimedia Organizer for Requirements 

Elicitation 

CMU/SEI-93-TR-12 

This report is available in electronic format via anonymous file transfer protocol (FTP). 


SEI Quarterly Update 3Q93 


18 


Real’-Time Distributed Systems 
Software Engineering Techniques Reports 


An Investigation into the State of the Practice of CASE Tool 

Integration 

CMU/SEI-93-TR-15 

Reengineering: An Engineering Problem 

CMU/SEI-93-SR-5 

This report is available in electronic format via anonymous file transfer protocol (FTP). 


For information about how to obtain copies of SEI reports, please turn to page 35. 


19 


SEI Quarterly Update 3Q93 




Software Risk Management 

Team Risk Management 


Software Risk Management 


The objective of the Software Risk Management Program is to improve 
the management of risks that arise in the development of 
software-intensive systems. Project members are assessing the state of 
the practice of software risk management, developing methods and 
processes to improve the state of the practice, and transitioning these 
methods and processes into practice. 


The goal of the Team Risk Management Project is to establish a cooperative 
working environment throughout all levels of the program that gives everyone 
in the program the ability and motivation to notice and handle risks before they 
become problems. To reflect this emphasis, the project name has changed from 
Government Risk Management to its current name. Team Risk Management. 
The project will work toward its goal by developing a framework for acquisition 
that fosters cooperation and partnering through cooperative or team processes, 
explicit methods to structure and sustain the processes, and supporting tools to 
aid the practitioners and managers. 

The scope of this project is to develop and transition into practice a 
comprehensive set of software risk management products that ore aimed at 
serving program managers’ needs for effective support in managing the 
acquisition and development of large, software-intensive systems. The team risk 
management product set will focus on issues of modeling acquisition processes, 
developing team risk management methods to support these processes, and 
improving communications about risk within government and between 
government and industry program offices. The primary emphasis is on 
enhancing the capability of the customer and supplier to manage risks as a team 
in software development. 

This quarter, the project team continued on-line work with the Navy program 
office and its contractor to develop the partner relationship to jointly manage 
risks. Action plans are evolving strategies to mitigate the risks identified and a 
mechanism to continuously identify new risks has been put in place. 


Team Risk 
Management 


SEI Quarterly Update 3Q93 


20 



Software Risk Management 

Risk Management Improvement 


Risk Management 
Improvement 


The project presented the team risk management concept at the 1993 SEI 
Software Engineering Symposium and published the concept in a report to the 
Navy Program Executive Officer, a Risk Program strategic partner. 

The project team completed its planning activity with the National 
Oceanographic and Atmospheric Administration System Program Office, 
producing a five-year plan for National Oceanographic and Atmospheric 
Sciences software acquisition and development improvement. 

The project team coordinated the technical objectives and plan agreement to 
start work with the Air Force Follow-on Early Warning System in team risk 
management. 


The Risk Management Improvement (RMI) Project is focused on improving the 
state of practice of software risk management in the development of 
software-dependent systems in the Department of Defense (DoD) industrial 
community as well as in the commercial community. The strategy is to work in 
a collaborative manner with key industrial companies to develop, test, and 
transition risk management methods for the development of software-dependent 
systems. 

The goal of the RMI Project is to develop risk management methods that can be 
used on a regular basis by projects developing software-dependent systems. Tb 
do this, the RMI Project is developing material for training companies and 
appropriate third party groups such that they can apply the risk management 
methods, processes, and tools without the aid of the SEI Risk Program 
personnel. 

The Risk Program’s risk management paradigm is the framework in which the 
risk management practices are being developed. The work done by the Taxonomy 
project in developing a risk identification mechanism is being integrated into a 
risk evaluation process. Risk evaluation will be the method by which a project’s 
baseline of risks will be established. Methods are being developed for risk 
identification, analysis, planning, tracking, control, and communication. 
Through collaboration with selected DoD industrial firms, these methods will be 
tested and improved. When the methods are stabilized, that is, when the method 
has been field proven, the methods will be disseminated throughout the software 
development community to improve the state of practice of managing risks, lb 
accomplish this, project members have signed technical collaboration 
agreements (TCAs) with companies that fit into the RMI Project’s overall 
strategy. The TCAs describe tasks to be accomplished to further the work the 
RMI Project is doing in developing risk management methods. The companies 


21 


SEI Quarterly Update 3Q93 



Software Risk Management 

Independent Risk Assessment 


are participating in the development of the methods by providing pilot projects 
to be used as the test bed for prototyping the methods and tools. As part of the 
collaborative agreement the companies will critique the RMI Project’s methods 
and offer suggestions for process improvement. 

The products of the RMI Project are the methods supporting a risk assessment 
process, which identifies project-specific risks and mitigation plans to control the 
identified risks, and the training course to train industry to conduct risk 
assessments. 

This quarter, project members focused on developing analysis methods to 
determine the impact of the identified risks on the project in preparation for 
planning the mitigation strategies. These methods are being field tested on the 
pilot projects of our TCA companies as well as other companies as the 
opportunities are presented. The field tests will provide data not only to improve 
the processes but also to prove the effectiveness of the methods. The project 
leader presented the Taxonomy-Based Questionnaire in a plenary session at the 
1993 SEI Software Engineering Symposium in August. The half day tutorial 
“Introduction to Risk Management” was given in a session preceding the 
Symposium. The RMI Project also sponsored a panel of industry personnel who 
have firsthand experience with the taxonomy-based risk identification methods. 


The Independent Risk Assessment (IRA) Project has achieved noted success in 
attaining its goal of assisting government acquisition activities, program 
management, and software development, as well as assisting software support 
managers and offices in the execution of risk management within their 
applicable spheres of interest. The principal focus of the IRA Project is, therefore, 
aimed at the acquisition life cycle. 

The IRA Project has developed and published Version 0.1 of the Software Risk 
Evaluation (SRE), and has continued to refine the definitions associated with the 
SRE and the IRA. The SRE has been under review by the originating 
Department of Defense office and other service and agency representatives since 
its publication in April. Additional SRE events conducted by IRA project 
members have aided in refining the SRE and will be incorporated in the 
upcoming delivery of the SRE Version 0.2. 


SE! Quarterly Update 3Q93 


22 


Independent Risk 
Assessment 



Software Risk Management 

Software Risk Management Reports 


OOOOOOOOO 

Software Risk Management 
Reports 

July—September 1993 


IRA project members sponsored a panel at the 1993 SEI Software Engineering 
Symposium. The panel included individuals critical to the transition of this risk 
management technique into the broader usage across the acquisition 
community. These individuals provided support for the overall Risk Program 
while addressing their perspectives of the use of risk management techniques in 
their respective areas of expertise. 

Preparation is underway to take a leading role in the upcoming SEI Risk 
Symposium and the Air Force Materiel Command, Software Technology 
Conference. 


Taxonomy-Based Risk Identification 
CMU/SEI-93-TR-6 

This report is available in electronic format via anonymous file transfer protocol (FTP). 


For information about how to obtain copies of SEI reports, please turn to page 35. 


23 


SEI Quarterly Update 3Q93 



SEI Products 

Curriculum Research 


SEI Products 


With the goal of helping end-users help themselves, SEI Education 
Products works with other groups in the SEI to develop an integrated 
set of educational products and services for managers, practitioners, 
and educators. The program ensures that the results of SEI work are in 
a form that the software community can easily and effectively use to 
improve software practice and that educators can use to improve 
software engineering. 


The Curriculum Research Project (formerly called the Academic Education 
Project) focuses on the long-term development of a highly qualified work force. 
The project promotes and accelerates the development of software engineering 
as an academic discipline. Project members are developing model curricula and 
promoting the establishment and growth of software engineering programs, as 
well as working to increase the amount of software engineering content in 
computer science programs. The project produces educational materials that 
support the teaching of software engineering in universities. 

This quarter, the project leader presented a lecture entitled “The Current State 
of Certification and Licensing of Software Engineers” at the 1993 SEI Software 
Engineering Symposium. The lecture described the certification requirements of 
two organizations that currently offer certification of professionals in the 
software field: the Institute for the Certification of Computer Professionals and 
the American Society for Quality Control. Also discussed were the implications 
of U.S. equal employment opportunity laws with respect to certification as a 
condition of employment, the rationale for requiring licensing, and recent 
activities in the area of licensing. 


Curriculum Research 


SEI Quarterly Update 3Q93 


24 




SEI Products 

Academic Education 
Professional Education 


Academic Education 


Professional Education 


The Academic Education Project (formerly the Master of Software Engineering 
Project) focuses primarily on software engineering education at the graduate 
level. The project cooperates with the School of Computer Science at Carnegie 
Mellon University (CMU) in offering a 16-month master’s degree program in 
software engineering. The core of the program is based on the SEI curriculum 
recommendations for MSE programs. The Academic Education Project also 
produces the Academic Series, a set of video-based graduate-level courses on 
software engineering, and educational materials that support the teaching of 
software engineering topics. 

“Managing Software Development” will be offered during the fall semester at the 
SEI. This course will be offered to audiences at CMU and National Technological 
University (NTU). The course is an updated and expanded version of an earlier 
Academic Series course, “Software Project Management.” The course is 
videotaped during presentation to CMU students and broadcast over satellite to 
NTU students. With an enrollment of 43, “Managing Software Development “is 
the largest class registered at NTU this semester. 


The Professional Education Project (formerly called the Continuing Education 
Project) interacts with industry and government to increase the availability of 
high-quality educational opportunities for software practitioners and executives. 
The project produces video-based course materials designed for practitioners’ 
in-house education, and executive offerings designed for decision makers 
involved in improvement efforts. 

A course for executives, “Software Quality Improvement,” was offered at the SEI 
to 35 students at Tinker Air Force Base (AFB) and to 35 students from Army 
Materiel Command at Fort Leavenworth, Kansas. 

The executive course “Software Productivity Improvement” was taught in 
September to students from the Air Force Intelligence Command, Defense 
Information Systems Agency/Center for Information Management, Salomon 
Brothers, and UNISYS Brazil. Also participating was an SEI resident affiliate 
from the National Security Agency. 

Hughes Training Inc. in Herndon, Virginia and PARAMAX each purchased one 
videotape from the practitioner course “Software Project Management.” A 
complete set of course materials was purchased by McClellan AFB, Huntington 
District Corps of Engineers, and Kelly AFB. 


25 


SEI Quarterly Update 3Q93 




SEI Products 

SEI Products Reports 


Science Applications International Corporation purchased 10 videotapes from 
the practitioner course “Software Requirements Engineering.” This quarter, 115 
videotapes (23 copies of five lectures) were sold to Army Training and Doctrine 
Command; one videotape to Lawrence Livermore Laboratory; and one complete 
set of course materials to Huntington Corps of Engineers. 

The project released three new Technology Series videotapes focusing on risk 
management: Risk Management Culture by Robert J. Kirkpatrick, Motivation 
for Software Risk Management by Robert N. Charette, and Up the Down 
Escalator: ADynamic Three-Dimensional Model for Managing Risk by Robert N. 
Charette. These stand-alone videotapes are by-products of “Software Risk 
Management,” a course for executives. 

During this quarter, a total of 32 Technology Series videotapes were sold. 


Lecture Notes on Engineering Measurement for Software Engineers 
CMU/SEI-93-EM-9 

This report is available in electronic format via anonymous file transfer protocol (FTP). 


OOOOOOOO 

SEI Products 
Reports 

July—September 1993 


For information about how to obtain copies of SEI reports, please turn to page 35. 


SEI Quarterly Update 3Q93 


26 


Computer Emergency 
Response Team 


SEI Services 

Computer Emergency Response Team 


SEI Services 


SEI Services works with other groups in the SEI to develop, deliver, 
and transition services that support the efforts of SEI clients to 
improve their ability to define, develop, maintain, and operate 
software-intensive systems. To accelerate the widespread adoption of 
effective software practices, SEI Services works with client 
organizations that are influential leaders in the software community, 
promotes the development of infrastructures that support the adoption 
of improved practices, and transitions capabilities to government and 
commercial associates for use with their client organizations. 


The Computer Emergency Response Team (CERT) was formed by the Advanced 
Research Projects Agency (ARPA) (then called the Defense Advanced Research 
Projects Agency) in November 1988 in response to the needs exhibited during an 
Internet security incident. The CERT charter is to work with the Internet 
community to facilitate its response to computer security events involving 
Internet hosts, to take practical steps to raise the community’s awareness of 
computer security issues, and to conduct research targeted at improving the 
security of existing systems. 

This quarter, the CERT published a revised version of “Anonymous File Transfer 
Protocol (FTP) Configuration Guidelines” document. This document helps 
system administrators configure anonjnnous FTP capabilities in a way that 
minimizes unintended use of services or resources. 


27 


SEI Quarterly Update 3Q93 



SEI Services 
Computer Emergency Response Team 


The CERT published one updated advisory and four new advisories this quarter: 

CA-93:09a.SunOS,expreserve.vulnerability (updated) 
CA-93:10.anonymous.FTRactivity (new) 
CA-93:ll.UMN.UNIX.gophervulnerability (new) 

CA-93:12.Novell.LOGIN.EXE.vulnerability (new) 

CA-93:13.SCO.Home.Directory Vulnerability (new) 

The CERT hosted the 5th Forum of Incident Response and Security Teams 
(FIRST) Computer Security Incident Handling Workshop in St. Louis, Missouri. 
The workshop was attended by 140 individuals from government, university, and 
corporate organizations. 

At the workshop, CERT members gave presentations, held panel discussions, 
and conducted an "incident handling” role playing exercise designed to help 
participants develop an awareness of the many issues encountered when 
handling a complex incident. For the first time, CERT members fully exercised 
CERT’s capability for remote operations of its incident response capabilities, 
which includes policies and procedures for physical security, enayption, 
backups, and disposal of sensitive materials. The transition to remote operations 
was transparent to CERT constituents, and even to members of other incident 
response teams who attended the workshop. Law enforcement representatives 
and response team representatives were given an out-of-hours guided tour of the 
remote operations suite and provided positive feedback on the physical security 
and working environment. 

In July, several CERT staff met with members of the team working on providing 
Internet services to the Executive Office of the President. The purpose of the 
meeting was to explain CERT’s purpose and to consider how CERT might 
support the team’s activities. 

CERT staff met with members of the U.S. House of Representatives House 
Information Systems (HIS) group in Washington, D.C. in August. CERT 
personnel provided two days of instruction to 30-plus members of the HIS staff 
on network security issues. 

A CERT staff member participated in the Internet Engineering Task Force 
meeting in July. While there, meetings took place between CERT staff, the 
CERT-NL group, and a representative from the newly forming DFN-CERT. They 
discussed the procedures for handling incidents, vulnerability reports, and 
advisories. A meeting with a representative of the DFN-CERT was particularly 
beneficial since it provided an opportunity to have in-depth discussions about 
how they were planning to operate. 


SEI Quarterly Update 3Q93 


28 



SEI Services 
Organization Capability Development 


Organization 
Capability Development 


CERT staff members attended the Open Software Foundation (OSF) meeting of 
the Security Special Interest Group, held in July in Cupertino, California. In 
addition to formal presentations, there was much discussion concerning how 
CERT will be handling vulnerability reports related to OSF software. 

This quarter, CERT staff members attended the invitational National Institute 
of Standards and Technology (NIST) Workshop on Information Security Training 
and Education Needs, held in July in Gaithersburg, Maryland. At this 
govemment/industry workshop, approximately 60 IT security professionals 
focused on three fundamental areas: 

1. Security education, awareness, and training for users, operations staff and 
management. 

2. The knowledge base that serves as the foundation for security training, 
curricula, and testing. 

3. Professional development and career field definition for IT security 
practitioners. 


In July, a CERT staff member presented “CERT Incident Response” at JvNCnet 
Security Workshop, which was held in Princeton, New Jersey. 

CERT staff members attended INET '93 (International Networking Conference), 
which was held in August in San Francisco, California. The paper, “CERT 
Incident Handling and the Internet,” focused on the benefits of the Internet with 
CERT incident handling as the operational example. 

CERT personnel attended the 1993 SEI Software Engineering Symposium, held 
in August in Pittsburgh, Pennsylvania. The CERT manager gave a plenary 
presentation on CERT. A CERT staff member presented the tutorial “Network 
Security for Managers.” 


The Organization Capability Development (OCD) function supports SEI clients' 
software process improvement efforts by helping them develop the capability to 
manage the organizational aspects of improvement at their sites. Services 
include organizational assessment, vision setting and dissemination, strategic 
planning, transition infrastructure development, executive consulting, 
cross-functional team development, managing technological change, and 
consulting skills for software engineering process groups. The goal of the 
function is to provide to clients the self-sustaining capability of managing their 
own long-term improvement. 


29 


SEI Quarterly Update 3Q93 



SEI Services 

Organization Capability Development 


This quarter, the SEI “Managing Technological Change” course was presented 
to the Software Technology Support Center in Ogden, Utah, to Siemens in 
Munich, Germany, and to the public. 

The executive overview of “Managing Ttechnological Change” was presented to a 
total of 160 managers, from Defense Communications System Communications, 
Peterson AFB, the Software Technology for Adaptable, Reliable Systems 
Program, Texas Instruments, Union Switch and Signal, Unisys, and Warner 
Robins AFB. 

The Consulting Skills Workshop was held twice this quarter, once at the 
Software Technology Support Center in Ogden, Utah and once at Peterson AFB. 


SEI Quarterly Update 3Q93 


30 



SEI Services 

Process Research 


Process Research 


Technology Transition Initiative 

The Process Research Project investigates the factors that limit 
software development performance by conducting research on the use 
of software process principles by individuals and small teams. This 
research is seeking insight into the processes, tools, and methods that 
will be most helpful in improving the performance of software 
engineering professionals. 


The Process Research Project investigates the factors that limit software 
development performance by conducting research on the use of software process 
principles by individuals and small teams. This research is seeking insight into 
the processes, tools, and methods that will be most helpful in improving the 
performance of software engineering professionals. 

The Process Research Project continues to explore the use of statistical process 
management methods by individual software practitioners and small teams. 
Early work has demonstrated the potential value of such methods in improving 
the quality, productivity, and predictability of their work. With the completion of 
milestone 1 in the first quarter, the project has moved from the early exploratory 
phase to addressing the feasibility of the personal software process (PSP) 
method. Primary emphasis has thus moved to working with academic and 
industrial groups. Because of the substantial changes required in individual and 
management attitudes and practices, it is expected that both academic and 
industrial adoption of these methods will be slow. Work is thus underway with 
several groups with the objective of gaining usage experience from some of them 
during 1993 and 1994. 

The principal focus of the industry activities has been with Siemens Research of 
Princeton, New Jersey and Advanced Information Systems of Peoria, Illinois. 
Siemens completed the preparatory work and began using their tailored version 
of the PSP. During this quarter, project members met with Siemens personnel to 
assist them in defining a team process for the overall project and to tailor 
individual team member personal processes. 


31 


SEI Quarterly Update 3Q93 



SEI Services 

Process Research 


Work continued on preparing graduate course materials on the PSP. Materials 
on the first 9 textbook chapters and lectures have been completed and provided 
to professors at the University of Massachusetts and Howard University in 
Washington, D.C. Classes have started at Howard, with 20 students registered. 
At the University of Massachusetts, classes start in mid-September. The project 
has committed to make the balance of the text and lecture draft material 
available by early October. Both professors agreed to provide the project with 
data on the students’ work and course results. 

This quarter, the project leader visited Medtronics Corporation in Minneapolis, 
Minnesota and reviewed their process improvement status and plans. The 
project leader also participated in SEI Process Program Advisory Board 
meetings in July and September. 

This quarter, the project leader attended a software process improvement 
conference and reviewed the software process improvement work at several 
laboratories of the Philips Corporation in Holland. 


SEI Quarterly Update 3Q93 


32 


Program Development 


Program Development 


The vision of the Program Development Division (PDD) is to serve 
customer needs hy being the voice of the customer to the SEI and the 
voice of the SEI to the customer. The PDD mission is to understand the 
key requirements of SEI customers, translate these into responsive SEI 
program specifications consistent with the SEI mission, and facilitate 
the effective transition of best software engineering practice into use. 

PDD accelerates the transition of new SEI software technologies and 
methods by disseminating information, providing mechanisms for 
collaboration and technology exchange, and offering customers the 
opportunity to participate in technical interchange meetings, 
workshops, and educational offerings. Efforts used to facilitate this 
transition include the Customer Relations information line, the 
subscriber program, the resident affiliate program, events such as the 
annual SEI Software Engineering Symposium and Visitor's Days, and 
distribution partners. 


The subscriber program, in effect since January 1992, is open to any individual 
with a U.S. mailing address. Subscribers receive regular publications such as 
Bridge and the Annual Technical Review, a discount at the annual SEI Software 
Engineering Symposium, a 10% discount on all SEI technical reports ordered 
through Research Access, Inc., invitations to selected SEI events (e.g., the 
annual SEI Symposium), and first notification of SEI course offerings. The 1993 
fee for subscribers is $100 per individual per year. The fee is subject to change 
in 1994, as the benefits are reviewed and amended. 

Visitor's Day is hosted by the SEI three times a year to familiarize software 
practitioners, managers, and educators with the SEI. The next two Visitor's 
Days are scheduled for 3 March 1994 and 26 May 1994. Visitors must 
pre-register; walk-ins will not be accommodated. Registration forms are 
available fi"om Customer Relations. (See page 35 for more information.) 

The SEI hosted its annual Software Engineering Symposium 23-26 August 1993 
at the David Lawrence Convention Center in Pittsburgh, Pennsylvania. The 
theme of the symposium was “The Business of Software Engineering: The 
Competitive Edge." This year's symposium had a broader focus than in past 


33 


SEI Quarterly Update 3Q93 



Program Development 


years, including increased participation from industry and government. The 
S 5 rmposium also had 36 exhibitors this year, twice the number from last year s 
event. The final attendance figure for this year's symposium was 1288, an 
increase from last year's conference. 

As of 30 September, the SEI has 25 signed technical collaboration agreements 
(TCA). A technical collaboration is a fixed-duration, well-defined collaborative 
relationship between one or more SEI projects and one or more industry 
partners. This form of collaboration involves a mutual commitment of resources 
to generate a demonstrable product. The organizations with the signed TCAs are 
Citicorp Services; Harris; Hewlett-Packard; Electronic Data Systems; Hughes 
Aircraft; IBM ESC; Logicon, Inc.; Master Systems; Northrop; Process 
Enhancement Partnerships, Inc.; Siemens Corporate Research; Texas 
Instruments; University of Southern California Center for Software 
Engineering. There are 11 TCAs in progress. 

As of 30 September, the SEI has signed strategic collaboration agreements with 
4 strategic partners. A strategic collaboration is a long-term, corporate-level 
relationship between the SEI and an industry organization. The relationship is 
characterized by a mutual statement of strategic intent and goals, and by the 
existence of a historical, multi-year association through resident affiliate 
sponsorship, masters of software engineering sponsorship, or several technical 
or other forms of collaboration. The strategic partners currently are 
Hewlett-Packard, Hughes Aircraft, IBM Federal Systems Company, and Texas 
Instruments. 

The following organizations sponsored resident affiliates in the third quarter of 
1993: 

Industry Computer Sciences Corporation 

GTE Government Systems 
Hughes Aircraft Company 
IBM Federal Systems Company, Houston 
Pacific Bell 
Process, Inc. 

Siemens Corporate Research 
Texas Instruments 


Government 

Air Force 
Navy 

Other DoD 


Electronic Systems Center 

Naval Air Warfare Center 

National Security Agency 

Defense Contract Management Command 


Academic Madrid Polytechnic University 


SEI Quarterly Update 3Q93 


34 



How to Get Additional Information 


How to Order SEI 
Publications 


How to Obtain 
Copies of Electronic 
Documents 


How to Get Additional 
Information 


How to Get Additional Information 

For information about purchasing SEI publications, contact one of the 
following organizations: 


RAI Research Access Inc. 

800 Vinial Street 
Pittsburgh, PA 15212 

Telephone: 1-800-685-6510, FAX: (412) 682-2994 

NTIS National Technical Information Service 

U.S. Department of Commerce 
Springfield, VA 22161-2103 
Telephone: (703) 487-4600 

DTIC Defense Technical Information Center 

ATTN: FDRA Cameron Station 
Alexandria, VA 22304-6145 
Telephone: (703) 274-7633 


Some—not all—SEI documents are available electronically. Send electronic mail to 
info-manage@sei.cmu.edu for information about obtaining documents via 
anonymous file transfer protocol (FTP) on the Internet. Be certain to include your 
telephone number in the event that we have difficulty contacting you by electronic 
mail. 


For information about the subscriber program and other SEI offerings, contact: 

SEI Software Engineering Institute 

ATTN: Customer Relations 
Carnegie Mellon University 
Pittsburgh, PA 15213-3890 
(412) 268-5800 

Internet: customer-relationsQsei. emu. edu 


35 


SEI Quarterly Update 3Q93 





How to Get Additional Information 


SEI Quarterly Update 3Q93 


36 



