location, or as temporally processed 
image videos. Using the TSPT program, 
MODIS metadata is used to remove 
and/or correct bad and suspect data. 
Bad pixel removal, multiple satellite 
data fusion, and temporal processing 
techniques create high-quality plots and 
animated image video sequences that 
depict changes in vegetation greenness. 
This tool provides several temporal pro- 
cessing options not found in other com- 
parable imaging software tools. Because 
the framework to generate and use 
other algorithms is established, small 
modifications to this tool will enable the 
use of a large range of remotely sensed 
data types. 

An effective remote-sensing crop- 
monitoring system must be able to de- 
tect subtle changes in plant health in the 
earliest stages, before the effects of a dis- 
ease outbreak or other adverse environ- 
mental conditions can become wide- 
spread and devastating. The integration 
of the time series analysis tool with 
ground-based information, soil types, 
crop types, meteorological data, and 
crop growth models in a Geographic In- 
formation System, could provide the 
foundation for a large-area crop-surveil- 
lance system that could identify a variety 
of plant phenomena and improve moni- 
toring capabilities. 

This program was written by Rodney McK- 
ellip of Stennis Space Center'; Donald Prados 
of Computer Sciences Corporation; Robert 
Ryan, Kenton Ross, and Joseph Spruce of Sci- 
ence Systems and Applications; and Gerald 
Gasser and Randall Greer of Lockheed Mar- 
tin Space Operations, Information Systems 
Directorate. 

Inquiries concerning rights for the commer- 
cial use of this invention should be addressed 
to the Intellectual Properly Manager at Stennis 
Space Center (228) 688-1929. Refer to SSC- 
00261, volume, and. number of this NASA 
Tech Briefs issue and the page number. 


@ PyPele Rewritten To Use MPI 

A computer program known as 
“PyPele,” originally written as a Python- 


language extension module of a C++ 
language program, has been rewritten 
in pure Python language. The original 
version of PyPele dispatches and coor- 
dinates parallel-processing tasks on 
cluster computers and provides a con- 
ceptual framework for spacecraft-mis- 
sion-design and -analysis software tools 
to run in an embarrassingly parallel 
mode. The original version of PyPele 
uses SSH (Secure Shell — a set of stan- 
dards and an associated network proto- 
col for establishing a secure channel be- 
tween a local and a remote computer) 
to coordinate parallel processing. In- 
stead of SSH, the present Python ver- 
sion of PyPele uses Message Passing In- 
terface (MPI) [an unofficial de-facto 
standard language-independent appli- 
cation programming interface for mes- 
sage-passing on a parallel computer] 
while keeping the same user interface. 

The use of MPI instead of SSH and the 
preservation of the original PyPele user 
interface make it possible for parallel ap- 
plication programs written previously for 
the original version of PyPele to run on 
MPI-based cluster computers. As a result, 
engineers using the previously written 
application programs can take advantage 
of embarrassing parallelism without 
need to rewrite those programs. 

This program was written by George Hockney 
and Seungwon Lee of Caltech for NASA’s Jet 
Propulsion Laboratory. 

This software is available for commercial 
licensing. Please contact Karina Edmonds of 
the California Institute of Technology at 
(626) 395-2322. Refer to NPO-44729. ' 


Data Assimilation Cycling 
for Weather Analysis 

This software package runs the atmos- 
pheric model MM5 in data assimilation cy- 
cling mode to produce an optimized 
weather analysis, including the ability to in- 
sert or adjust a hurricane vortex. The pro- 
gram runs MM5 through a cycle of short 
forecasts every three hours where the vor- 
tex is adjusted to match the observed hurri- 
cane location and storm intensity. This 


technique adjusts the surrounding environ- 
ment so that the proper steering current 
and environmental shear are achieved. 
MM5cycle uses a Cressman analysis to 
blend observation into model fields to get a 
more accurate weather analysis. Quality 
control of observations is also done in every 
cycle to remove bad data that may contam- 
inate the analysis. This technique can assim- 
ilate and propagate data in time from inter- 
mittent and infrequent observations while 
maintaining the atmospheric field in a dy- 
namically balanced state. 

The software consists of a C-shell script 
(MM5cycle.driver) and three FORTRAN 
programs (splitMM5files.F, comRegrid.F, 
and insert_vortex.F) , and are contained 
in the pre-processor component of MM5 
called "Regridder.” The model is first ini- 
tialized with data from a global model 
such as the Global Forecast System 
(GFS) , which also provides lateral bound- 
ary conditions. These data are separated 
into single-time files using splitMM5.F. 
The hurricane vortex is then bogussed in 
the correct location and with the correct 
wind field using insert_vortex.F. The 
modified initial and boundary conditions 
are then recombined into the model 
fields using comRegrid.F. The model 
then makes a three-hour forecast. The 
three-hour forecast data from MM5 now 
become the analysis for the next short 
forecast run, where the vortex will again 
be adjusted. The process repeats itself 
until the desired time of analysis is 
achieved. This code can also assimilate 
observations if desired. 

This program was written by Nam Tran, 
Yongzuo Li, and Patrick Fitzpatrick of the 
GeoResources Institute at Mississippi State 
University for Stennis Space Center. 

Inquiries concerning rights for its commer- 
cial use should be addressed to: 

GeoResources Institute 
Mississippi State University 
Building 1 1 03, Room. 233 
Stennis Space Center, MS 39529 
Phone No.: (228) 688-4218 
Web site: iuiuiu.gri.msstate.edu 
Refer to SSC-00276/7, the volume and 
number of this NASA Tech Briefs issue, 
and the page number. 


26 


NASA Tech Briefs, April 2008 


