
NAVAL 

POSTGRADUATE 

SCHOOL 

MONTEREY, CALIFORNIA 


THESIS 


WIRELESS COMMUNICATIONS INFRASTRUCTURE FOR 

COLLABORATION IN COMMON SPACE 


by 


Kivanc METINGU 


March 2004 

Thesis Advisor: 

Curtis Blais 

Second Reader: 

Jeffrey Weekley 


This thesis done in cooperation with the MOVES Institute 
Approved for pubiic reiease; distribution s uniimited 




THIS PAGE INTENTIONALLY LEFT BLANK 



1 REPORT DOCUMENTATION PAGE 

Form Approved OMB No. 0704-0188 \ 

Public reporting burden for this collection of information is estimated to average 1 hour per response, including the time 
for reviewing instruction, searching existing data sources, gathering and maintaining the data needed, and completing 
and reviewing the collection of information. Send comments regarding this burden estimate or any other aspect of this 
collection of information, including suggestions for reducing this burden, to Washington headquarters Services, 
Directorate for Information Operations and Reports, 1215 Jefferson Davis Highway, Suite 1204, Arlington, VA 22202- 
4302, and to the Office of Management and Budget, Paperwork Reduction Project (0704-0188) Washington DC 20503. 

1. AGENCY USE ONLY (Leave blank) 2. REPORT DATE 

March 2004 

3. REPORT TYPE AND DATES COVERED 

Master’s Thesis 

4. TITLE AND SUBTITLE: Wireless Communications Infrastructure for 
Collaboration In Common Space 

5. FUNDING NUMBERS 

6. AUTHOR(S) Kivanc Metingu 

7. PERFORMING ORGANIZATION NAME(S) AND ADDRESS(ES) 

Naval Postgraduate School 

Monterey, CA 93943-5000 

8. PERFORMING ORGANIZATION 
REPORT NUMBER 

9. SPONSORING /MONITORING AGENCY NAME(S) AND 

ADDRESS(ES) 

N/A 

10. SPONSORING/MONITORING 

AGENCY REPORT NUMBER 

11. SUPPLEMENTARY NOTES The views expressed in this thesis are those of the author and do not reflect the official 
policy or position of the Department of Defense or the U.S. Government. 

12a. DISTRIBUTION / AVAILABILITY STATEMENT 

Approved for public release ; distribution is unlimited 

12b. DISTRIBUTION CODE 

13. ABSTRACT (maximum 200 words) 

Modern technology Is making virtual environments a part of daily life. However, some constraints about the 
usage of virtual environments, such as the need for high performance and well-configured computers, prevent users 
from accessing virtual environments in some places other than special computer rooms. Mobile devices may be used to 
solve this limitation in a virtual environment. 

The remote-control approach to access virtual worlds on the Internet or on a corporate network is a new 
concept that opens new doors to users. First step of this approach is already in use, such as games implemented for 
mobile devices using the screen of a mobile device as display, and has given satisfying results for some users. This 
research will take the user, who not only wants to be mobile but also does not want to sacrifice high resolution textures 
and complex models, closer to his/her goal. 

Mobile devices provide mobility to the user, but sacrifice not only the reality of the virtual environments but also screen 
size, which is very important for visibility of complex virtual environments. The hybrid approach with wireless internet 
connection by using mobile devices as remote control gives the user the advantages of mobility over desktop PCs. On 
the other hand, the realism provided by high-quality PCs on the server side exceeds the capabilities of mobile devices. 

14. SUBJECT TERMS Wireless, Wireless Ethernet 802.11, Bluetooth, Collaboration, Mobile 
Devices, Remote Control, Virtual Environment, X3D, VRML, Chess Game, Pocket PC, Pocket 
PC Cortona, Mobility, Reality, Java Application, Web-Services 

15. NUMBER OF 
PAGES 67 

16. PRICE CODE 

17. SECURITY 

CLASSIFICATION OF 

REPORT 

Unclassified 

18. SECURITY 

CLASSIFICATION OF THIS 
PAGE 

Unclassified 

19. SECURITY 
CLASSIFICATION OF 
ABSTRACT 

Unclassified 

20. LIMITATION OF 
ABSTRACT 

UL 


NSN 7540-01 -280-5500 Standard Form 298 (Rev. 2-89) 


Prescribed by ANSI Std. 239-18 



























THIS PAGE INTENTIONALLY LEFT BLANK 



This thesis done in cooperation with the MOVES Institute 
Approved for pubiic reiease; distribution is uniimited 

WIRELESS COMMUNICATIONS INFRASTRUCTURE FOR COLLABORATION 

IN COMMON SPACE 

Kivanc METINGU 

Lieutenant Junior Grade, Turkish Navy 
B.S., Turkish Naval Academy, 1998 


Submitted in partial fulfillment of the 
requirements for the degree of 


MASTER OF SCIENCE IN COMPUTER SCIENCE 


from the 

NAVAL POSTGRADUATE SCHOOL 
March 2004 


Author: Kivanc METINGU 


Approved by: Curtis Blais 

Thesis Advisor 


Jeffrey Weekley 
Co-Advisor 


Peter J. Denning 

Chairman, Department of Computer Science 



THIS PAGE INTENTIONALLY LEFT BLANK 


IV 



ABSTRACT 


Modern technology is making virtual environments a part of daily life. 
However, some constraints about the usage of virtual environments, such as the 
need for high performance and well-configured computers, prevent users from 
accessing virtual environments in some places other than special computer 
rooms. Mobile devices may be used to solve this limitation in a virtual 
environment. 

The remote-control approach to access virtual worlds on the Internet or on 
a corporate network is a new concept that opens new doors to users. First step 
of this approach is already in use, such as games implemented for mobile 
devices using the screen of a mobile device as display, and has given satisfying 
results for some users. This research will take the user, who not only wants to be 
mobile but also does not want to sacrifice high resolution textures and complex 
models, closer to his/her goal. 

Mobile devices provide mobility to the user, but sacrifice not only the 
reality of the virtual environments but also screen size, which is very important for 
visibility of complex virtual environments. The hybrid approach with wireless 
internet connection by using mobile devices as remote control gives the user the 
advantages of mobility over desktop PCs. On the other hand, the realism 
provided by high-quality PCs on the server side exceeds the capabilities of 
mobile devices. 


V 



THIS PAGE INTENTIONALLY LEFT BLANK 


VI 



TABLE OF CONTENTS 


I. INTRODUCTION.1 

A. RESEARCH OBJECTIVES.3 

B. SCOPE.3 

C. METHODOLOGY.3 

D. RESEARCH QUESTIONS.4 

E. OUTLINE OF THESIS.4 

II. BACKGROUND.5 

A. WIRELESS TECHNOLOGIES.5 

1. Bluetooth.5 

2. Wi-Fi (802.11 b 802.11 g) Wireiess Ethernet.5 

3. GSM/GPRS.6 

4. WANDA.7 

B. GRAPHICS TECHNOLOGIES.8 

1. Content Development.8 

a. Modeling: High-End Graphics Systems; 3ds Max, 

Maya. . 8 

b. Libraries: 3D Cafe, 3D Total, Amazing 3D . 8 

c. Web-based Graphics Editors: VRMLPad, X3D-Edit, 

Extrusion Editor . 9 

d. Performance Tips, VRML Optimizers, Converters.... 10 

C. CURRENT SIMILAR SYSTEMS.11 

1. Mobile Printing System.11 

2. Computer Games.12 

a. Chess Games for PCs . 12 

b. Chess Games for Mobile Devices . 12 

c. Handheld Devices Specially for Chess Game . 13 

d. Multi-User Chess Game for PC. . 13 

e. Screenshots, Pros and Cons . 13 

III. DEVELOPMENT OF NEW WIRELESS SERVER-CLIENT SYSTEM 

MODEL.15 

A. IDENTIFICATION OF NEW MODEL FOR MORE EFFECTIVE 

SYSTEM.15 

1. Definition.15 

2. Description and Design.16 

B. NEEDS AND REQUIREMENTS.17 

1. Hardware Needs.17 

2. Software Needs.17 

IV. IMPLEMENTATION.19 

A. SETTING THE NECESSARY ENVIRONMENT.19 

a. Connecting Pocket PC to PC and Synchronization.. 19 

vii 





































b. Installation of JeodeRuntime . 21 

c. Choosing Ja va Platform for PC . 23 

B. PROGRAM CODE AND EXPLANATIONS.27 

a. Positioning the Pieces . 29 

b. Setting Background. . 29 

c. Creating a Glass Chess Board Effect . 29 

V. TEST AND PERFORMANCE.31 

A. DEMONSTRATION TESTING.31 

B. ENCOUNTERED PROBLEMS.41 

1. System Related.41 

2. User Related.42 

VI. CONCLUSIONS AND FUTURE WORK.43 

A. CONCLUSIONS.43 

B. FUTURE WORK.45 

APPENDIX PROGRAM AND DEMONSTRATION FILES.47 

LIST OF REFERENCES.49 

INITIAL DISTRIBUTION LIST.51 


viii 




















LIST OF FIGURES 


Figure 1. Hoyle Majestic Chess.13 

Figure 2. Jamdat Mobile Chess.13 

Figure 3. Chess Brain Network.14 

Figure 4. Leather-Cased Glass Chess Set.14 

Figure 5. Remote 3D Chess Game Design.17 

Figure 6. Setting a Partnership.20 

Figure 7. ActiveSync Dialog box.21 

Figure 8. JeodeRuntime EVM console.22 

Figure 9. Server-Client Communication Design.28 

Figure 10. Server-Side Chess White Player View.31 

Figure 11. Server-Side Chess Black Player View.32 

Figure 12. Server-Side Chess Top View.32 

Figure 13. Server-Side Chess TV Reflection.33 

Figure 14. Server-Side Chess Room Light Reflection.33 

Figure 15. Server-Side Chess Reflection On Glass Board.34 

Figure 16. Server-Side Chess Inside Board Water Reflections.34 

Figure 17. Server-Side Chess Picked Left White Rook (White Player View).35 

Figure 18. Server-Side Chess Picked Left White Rook (Black Player View).35 

Figure 19. Server-Side Chess Picked White Queen (White Player View).36 

Figure 20. Server-Side Chess Picked White Queen (Black Player View).36 

Figure 21. Wireframe view of the scene.37 

Figure 22. Client for Pocket PC.37 

Figure 23. Initializing the client and the server.38 

Figure 24. Mouse pressed.39 

Figure 25. First Click.39 

Figure 26. Second Click.40 

Figure 27. Capturing the opponent’s piece.40 

Figure 28. One move in the demo.41 


IX 































THIS PAGE INTENTIONALLY LEFT BLANK 


X 



LIST OF TABLES 


Table 1. Initial Positions Chess Game Pieces.24 

Table 2. Initial Positions Chess Game Pieces.26 





THIS PAGE INTENTIONALLY LEFT BLANK 


XII 



ACKNOWLEDGMENTS 


The author acknowledges the following list of people whose assistance 
and support made this thesis possible: 

• Curtis Blais and Jeff Weekley from the Naval Postgraduate School 
for sharing their knowledge of VRML, guidance, and support during 
the course of this thesis research. 

• My father Macit Metingu, my mother Julide Metingu, my sister 
Berna Metingu and my fiancee Lien Nguyen and my all relatives in 
Turkey for incredible support, encouragement and unconditional 
belief in me. 

• Ltjg. Ekrem Serin, Ltjg Mehmet Guzey, Ltjg Kurtulus Bektas and 
Serhat Ozcanli for encouragement, tolerance to my unlimited 
questions and for making me love computer technology more. 

• Gurminder Singh for introducing Wireless Technologies to me. 



THIS PAGE INTENTIONALLY LEFT BLANK 


XIV 



I. INTRODUCTION 


This research describes innovations, technology and concepts related to a 
new system that supports wireless control of entities in a virtual environment and 
also provides the explanation and implementation of this system. 

These two concepts are used as the starting point: 

• Virtual Environments 

• Using Mobile Devices as a Remote Control 

Modern technology is making virtual environments a part of daily life. 
However, some constraints about the usage of virtual environments, such as the 
need for high performance and well-configured computers, prevent users from 
accessing virtual environments in some places other than special computer 
rooms. Pocket PC, a computer that fits in the palm of your hand which runs the 
latest Windows CE Operating System, may be used to solve this limitation in a 
virtual environment. 

Although some devices, like Pocket PC and some new types of hybrid 
phones, do offer more memory, most devices on the market are so-called thin 
clients that were simply not created with the file storage and access in mind. 
Windows CE/Pocket PC-based devices are used more like small mobile PCs, 
which explains why devices like the iPAQ have more memory. 

The remote-control approach to access virtual worlds on the Internet or on 
a corporate network is a new concept that opens new doors to users. First step 
of this approach is already in use, such as games implemented for mobile 
devices using the screen of a mobile device as display, and has given satisfying 
results for some users. This research will take the user, who not only wants to be 
mobile but also does not want to sacrifice high resolution textures and complex 
models, closer to his/her goal. 

Current solutions to accessing virtual environments: 


1 



• Traditional Computers; Almost perfect quality scenes, artificial 
intelligence embedded virtual environments; but no mobility. 

• Mobil Devices: World-wide mobility, poor scene quality. 

By using the current technology wisely, a hybrid approach can improve 
usage of Virtual Environments. Mobile devices provide mobility to the user, but 
sacrifice not only the reality of the virtual environments but also screen size, 
which is very important for visibility of complex virtual environments. The hybrid 
approach uses mobile devices as a remote control, a high quality computer as a 
server, a display unit as big as needed, and wireless internet to connect them. 
Actually even only entity data may need a lot of memory space; nobody wants to 
or can store sizeable data on a mobile device. Entity data should be stored 
remotely and the users use his/her mobile device as a remote control device. 
Users send commands as simple text by using GUI elements, such as buttons 
and sliders. The GUI can be implemented in Java or even with VRML using 
Cortona Pocket PC Client. 

Bluetooth technology, an alliance between mobile communications and 
mobile computing companies to develop a short-range communications standard 
allowing wireless data communications, can be considered for connecting clients 
and server. Bluetooth amplifiers can beam information from device to device up 
to 100-meter range without the need for uninterrupted sight lines. However, 
802.11b and Bluetooth occupies the same 2.4GHz band and therefore 802.11b 
operations interfere with Bluetooth. Because 802.11b is more effective than 
Bluetooth currently, and also the usage spectrum of the devices with Bluetooth is 
not broad enough yet, 802.11 will be used for main internet connection in this 
research. Detailed information can be retrieved from following URL: 
www.iec.org/events/2002/natlwireless nov/featured/d2 godfrev.pdf Bluetooth 
technology will be used for file transfers between PC and Pocket PC and 
installing necessary platforms, such as the JeodeRuntime java platform. In the 
near future Bluetooth Technology may enable new faster ways to transmit 


2 



information wirelessly from remote locations. Therefore this research may be 
modified and improved using Bluetooth in the future. 

A. RESEARCH OBJECTIVES 

The objective of this thesis, and of the research upon which it is based, is 
to improve collaboration in common space by providing a new system model for 
wireless entity control in virtual environments. 

The main deliverable of this thesis is a demonstration of a new system 
model which will provide both mobility and reality by implementing a remote 
control approach for virtual environments using mobile devices. The new model 
will be applied to a simple chess game. 

B. SCOPE 

Since this research is unclassified, the given virtual environment will only 
be a simple chess game without any deep logic for demonstration purposes. 
Because there will be no prompts or warnings the rules will be applied by users 
as in real life chess game. Real virtual environments, which have extreme 
complexity, will not be provided in this research. 

Once the research is completed, the same model may be used for other 
virtual environments and relevant areas with a few modifications on both server 
and client sides. 

C. METHODOLOGY 

Research progressed in four main phases: 1)Review of current related 
technologies, such as Wireless Technologies and Graphics Technologies; 2) 
Review of current systems similar to the demonstration-product of this research, 
such as Mobile printing system and Chess Game for PCs and Pocket PCs; 3) 
Identification of a better possible server-client system for a chess game that 
doesn't sacrifice reality while providing mobility by using current technology; 4) 
Development of the demonstration server-client application which provides more 
effective usage of the mobile devices for a remote control in a virtual 
environment. 


3 



D. RESEARCH QUESTIONS 

The primary goal of this thesis is to answer the following questions: 

• By implementing software programs for mobile devices, can we 
create human collaborative interaction in distributed common space 
of virtual environments with mobile users? 

• By implementing software programs for mobile devices, how can 
we widen the usage of virtual environments in daily life? 

• By applying a new server-client model for collaborative mobile 
device applications can we improve reality and mobility? 

• With a prototype capability can we identify constraints, limitations, 
performance? 

E. OUTLINE OF THESIS 

The rest of this thesis will adhere to the following outline. 


Chapter II 

Background 

Chapter III 

Development of a New Wireless Server-Client System 

Model 


Chapter IV 

Implementation 

Chapter V 

Test and Performance 

Chapter VI 

Conclusions and Future Work 


4 



II. BACKGROUND 


A. WIRELESS TECHNOLOGIES 

1. Bluetooth 

Bluetooth is a short-range wireless technology used to create PANs 
(Personal Area Networks) enabling seamless voice and data connections 
between both mobile and stationary devices. For instance, it specifies how 
mobile phones, WIDs, (Wireless information device: a PDA or similar-sized 
pocket computing device with built-in wireless connectivity, and that hence 
permits direct mobile access to the Internet without having to be interfaced to a 
mobile phone) and computers interconnect with each other, with computers, and 
with office or home phones. Bluetooth allows you to leave your phone in your 
pocket, while talking on your phone with a Bluetooth headset - with no wires. You 
can also exchange contact or scheduling information with other Bluetooth- 
enabled phones nearby, or send such information to a nearby Bluetooth-enabled 
printer. Another common use is to give a laptop computer or a PDA (Personal 
Digital Assistant) wireless high-speed Internet access via Bluetooth and your 
phone. Many newer automobiles also have Bluetooth, which can interface with a 
phone in a pocket, to allow automatic hands-free phone capability. More 
innovative uses include playing a game against someone with a similar phone 
nearby. 

Version 1.0 requires users to register the connection between the 2 
devices while version 1.1 allows a Bluetooth device to communicate with up to 8 
devices. 

2. Wi-Fi (802.11 b 802.11 g) Wireiess Ethernet 

Wi-Fi, short for "wireless fidelity", is the popular term for a high-frequency 
wireless local area network (WLAN). Wi-Fi is specified in the 802.11b 
specification from the Institute of Electrical and Electronics Engineers (IEEE) and 
is part of a series of wireless specifications together with 802.11, 802.11a and 
802.11g. All four standards use the Ethernet protocol. Products certified as Wi-Fi 
by Wireless Ethernet Compatibility Alliance (WECA) are interoperable with each 

5 



other even if they are from different manufacturers. A user with a Wi-Fi product 
can use any brand of Access Point with any other brand of client hardware that is 
built to the Wi-Fi standard at the 2.4 ghz spectrum using direct sequence 
spectrum (DSS). 

Unless adequately protected, a Wi-Fi wireless LAN can be susceptible to 
access from the outside by unauthorized users. Companies that have a wireless 
LAN are urged to add security safeguards such as the Wired Equivalent Privacy 
(WEP) encryption standard, the setup and use of a virtual private network (VPN) 
and a firewall. Many airports, hotels, and fast-food facilities now offer pubic 
access to a Wi-Fi network; these are known as hotspots. Although many charge 
a daily or hourly rate for access, some are free. 

3. GSM/GPRS 

GSM, short for Global System for Mobile communication, is one of the 
leading digital mobile telephone systems widely used in Europe and other parts 
of the world. GSM uses a variation of time division multiple access (TDMA), 
which allows eight simultaneous calls on the same radio frequency, and is the 
most widely used of the three digital wireless telephone technologies (TDMA, 
GSM, and CDMA). It operates at either the 900 MHz or 1800 MHz frequency 
band. 

GSM has over 120 million users worldwide and is available in 120 
countries. Because many GSM network operators have roaming agreements 
with foreign operators, users can often continue to use their mobile phones when 
they travel to other countries. 

American Personal Communications (APC), a subsidiary of Sprint, is 
using GSM as the technology for a broadband personal communications service 
(PCS). This service will ultimately have more than 400 base stations for the 
palm-sized handsets that are being made by Ericsson, Motorola, and Nokia. The 
handsets include a phone, a text pager, and an answering machine. 

GSM together with other technologies is part of an evolution of wireless 
mobile telecommunication that includes High-Speed Circuit-Switched Data 


6 



(HCSD), General Packet Radio Services (GPRS), Enhanced Data GSM 
Environment (EDGE), and Universal Mobile Telecommunications Service 
(UMTS). 

GPRS is a packet-based wireless communication service that promises 
data rates from 56 up to 114 Kbps, compared with current system's 9.6 kilobits, 
and continuous connection to the Internet for mobile phone and computer users. 

GPRS, which supports a wide range of bandwidths, is an efficient use of 
limited bandwidth and is particularly suited for sending and receiving small bursts 
of data, such as e-mail and Web browsing, as well as large volumes of data. The 
higher data rates will allow users to take part in video conferences and interact 
with multimedia Web sites and similar applications using mobile handheld 
devices as well as notebook computers. GPRS is based on GSM communication 
and will complement existing services such circuit-switched cellular phone 
connections and the Short Message Service (SMS). GPRS will also complement. 
GPRS is an evolutionary step toward Enhanced Data GSM Environment (EDGE) 
and Universal Mobile Telephone Service (UMTS). 

4. WANDA 

WANDA, short for Wireless Any Network Digital Assistant, is a new "tri¬ 
wireless" PDA concept designed by Tl (Texas Instruments). A Pocket PC-based 
PDA, the WANDA supports GSM/GPRS cell networks, Bluetooth, and Wi-Fi. 
WANDA is a modular architecture so it can support one, two or all three of the 
wireless capabilities Tl to enable simultaneous phone calls, web browsing, 
mobile commerce or printing by combining 802.11b and Bluetooth wireless 
capabilities, along with a GSM/GPRS tri-band radio, into a single low-power 
handset design. It sports Microsoft's Pocket PC operating system. Detailed 
specifications can be obtained from the following URL: 
http://focus.ti.com/docs/apps/catalog/general/general.ihtml?templateld=1101 &pat 

h=templatedata/cm/general/data/wire conceptdesign2 


7 




B. GRAPHICS TECHNOLOGIES 
1. Content Development 

a. Modeling: High-End Graphics Systems; 3ds Max, Maya 

Discreet's 3ds Max is a widely-used 3D modeling, animation, and 
rendering solution for film, television, games and design visualization. 3ds Max 6, 
the last version, is used for almost everything in the entertainment industry; from 
game design to highly advanced movies like “The Matrix: Reloaded” and “The 
Last Samurai”. 3ds Max gives you the ability to create 3D models, special effects, 
and much more; many of which are used in high-end films these days. It is 
popular due to the fact that it is very universal; there are several third party 
applications and plug-ins made for this application as well as its 
interchangeableness with 3D tracking systems, 2D compositing software, 
nonlinear editing systems and other animation solutions. 

Maya Complete, like 3ds Max, makes the foremost 3D content 
creation tools accessible to a broad range of computer graphics professionals in 
the film, broadcast, industrial design, visualization, game development and web 
design industries. It is one of the leading full 3D production solutions. Maya 
Complete is available for Windows 2000 Professional, Windows XP Professional, 
Mac® OS X, SGI IRIX® and Linux operating systems.. 

b. Libraries: 3D Cafe, 3D Total, Amazing 3D 

3D Model Libraries are extremely useful for the 3D artist who wants 
to enrich their 3D worlds by using already created 3D models. Using these 
meshes can easily shorten the project’s completion time. Models are usually 
offered in the following file formats: .x3d,.3ds, .max, Iws, vrmi (.wri), .dxf, .obj, or 
.cob. The SAVAGE group is building a large archive of dynamic 3D military 
models and authoring tools using Extensible 3D (X3D) graphics. 3D Cafe, 
Amazing 3D Graphics, 3D Daily Library are also good examples of the 3D Model 
Libraries. 


8 



c. Web-based Graphics Editors: VRMLPad, X3D-Edit, 
Extrusion Editor 

VRML (Virtual Reality Modeling Language) is a language for 
describing three-dimensional (3-D) image sequences and possible user 
interactions to go with them. Using VRML, you can build a sequence of visual 
images into Web settings with which a user can interact by viewing, moving, 
rotating, and otherwise interacting with an apparently 3-D scene. 

VrmIPad is a flexible authoring tool from ParallelGraphics that 
allows a user to design and develop professional VRML content. VrmIPad may 
be used to create VRML worlds for publishing on the World Wide Web. VrmIPad 
has powerful editorial abilities and visual support for the scene graph tree and 
resource operations. VrmIPad also fully supports the VRML 97 specification. 
VrmIPad 2.0 also includes an integrated script debugger that makes the process 
of finding and fixing errors and bugs in the VRML scripts considerably easier. It 
lets users run vrmiscripts step by step, set breakpoints, and watch the values of 
fields at runtime. Extrusion Editor, a visual plug-in for ParallelGraphics' VrmIPad, 
offers you an effective method for creating and editing extrusion models. It also 
provides visual support for every step in the creation of extrusions; all 
manipulations with the extrusion parameters are immediately displayed in the 3D 
window. One of the examples of extrusion generators can be found at the URL: 

Extensible 3D (X3D) is a software standard for defining interactive 
web- and broadcast-based 3D content integrated with multimedia. This is 
basically an XML version of the VRML 2.0 file format specification. X3D is 
intended for use on a variety of hardware devices and in a broad range of 
application areas such as engineering and scientific visualization, multimedia 
presentations, entertainment and educational titles, web pages, and shared 
virtual worlds. X3D is also intended to be a universal interchange format for 
integrated 3D graphics and multimedia on the web. X3D is the successor to the 
VRML, the original ISO standard for web-based 3D graphics (ISO/IEC 14772). 
X3D improves upon VRML with new features, advanced application programmer 
interfaces, additional data encoding formats, stricter conformance, and a 

9 



componentized architecture that allows for a modular approach to supporting the 
standard. 

X3D has a rich set of features to support applications such as 
engineering and scientific visualization, multimedia presentations, entertainment 
and educational titles, web pages, and shared virtual worlds. 

http://www.realism.com/Web3D/Examples/Extrusion/ frame.html 

d. Performance Tips, VRML Optimizers, Converters 

As mentioned before, because mobile devices have limited memory 
and CPU (Central Processing Unit) capability 3D artists must be careful about 
performance of their VRML files. On the internet there are a lot of VRML tutorials 
and performance tips. The following tips can help to improve the performance by 
decreasing the size of the file and using a better structured scene graph: You can 
find detailed tips at this URL: http://www.blaxxun.com/developer/contact/3d/vrml/ 

• Reduce polygons and simplify geometry 

• Remove unneeded faces 

• Use instancing (DEF once, USE many times) 

• Don't disable backface culling (solid FALSE) if it is not totally 
necessary 

• Use unlit textures; ImageTexture only 

• Share identical Texture, Material and Appearance nodes 

• Limit the number of lights; directional Lights are fastest 

• Help the browser by limiting the amount of active nodes 

• Using a switch node currently unneeded / invisible parts can 
be enabled / disabled 

• Complex animations can be disabled by disabling 
TimeSensors 

• Reduce the transformations 


10 





Internet Model Optimizer is a tool that provides an efficient way to 
optimize complex 3D models, which originate from CAD (Computer Aided Design 
systems and other sources, for use on the Internet. Some CAD models may not 
be used on the Internet because of their huge sizes. Optimizers allow users to 
dramatically accelerate the rendering of these models by polygonal simplification 
and offer a wide range of optimization modes - from batch processing to manual 
mode - plus the ability to optimize selected parts of the model only. Polygon 
simplifications are managed by highly complex optimization algorithms designed 
to maintain the visual aspects of the original object. 

PolyTrans and its more comprehensive version, NuGraf, provide a 
complete set of precise and quality import/export converters for the most popular 
industry standard 3d model formats. These are translators that can convert entire 
files from one format to another in a manner such that the exported file can be 
loaded and rendered in a target animation system with little or no changes 
necessary. Because the modeling editors do not provide the same tools, 3D 
artists may want to convert a file to another file type to use with a desired editor. 

Crossroads, a freeware 3D viewer and converter software, converts 
meshes into various popular file formats. However it does not have any modeling 
capabilities so it may be used by those who need simplicity. 3D artists can find 
detailed information about Crossroads from the URL: 
http://www.europa.com/~keithr/crossroads/ . 

C. CURRENT SIMILAR SYSTEMS 
1. Mobile Printing System 

AXIS 5800 Mobile Network Print Server is the first print server that 
supports wireless printing. The Mobile Printing vision from Axis involves wireless 
printing from mobile devices such as mobile/cellular phones, laptops, PDAs and 
digital cameras but also traditional PCs. Mobile Printing uses radio 
communication to transport the print data. Mobile Printing combines data 
connectivity and mobility. 


11 



In the Wireless Printing scenarios, the information to be printed resides in 
the memory, hard disk or other storage of the mobile device. Local refers to the 
physical location of the print content; i.e., calendars and e-mails found locally in 
your mobile phone/PDA or a document residing in your laptop. With Mobile 
Printing technology, you are free to print wherever you are in the office, 
whenever you want. Typically mobile phones do not include a lot of memory and 
computing capabilities, so printer drivers for PCs cannot be used for mobile 
phones. Furthermore, printing from a PDA allows users to output anything stored 
in the PDA such as e-mails, e-books, documents, calendar items, etc. 

Building on the Wireless Printing approach. Axis’ vision for further 
Mobile Printing Solutions is printing documents that are accessible over the 
Internet without first having to download them to a mobile device. Normally a 
mobile phone or a PDA would not have the capabilities of storing and displaying 
a large document, which makes it even more appealing to print the documents 
using the mobile device as a remote control. Remote Printing includes the same 
basic functionality as Local Printing; i.e., discovery and printer capability inquiry. 

2. Computer Games 

Because the demonstration of this research will be a 3D Chess Game, 
some examples of current games are listed below. For details URLs are 
provided. 

a. Chess Games for PCs 

Floyle Majestic Chess 

URL: http://www.gamespot.com/pc/puzzle/hoylemaiesticchess/ 

Enigma Chess Game 

URL: http://www.enigma.vu/chess.htm 

b. Chess Games for Mobile Devices 

CHESS for Pocket PC 

URL: http://www.995soft.com/995chessppc/ 

Kasparov Chessmate by Jamdat (Pocket PC) 


12 





URL: http://www.hexacto.com/qame kasparov.php 

c. Handheld Devices Specially for Chess Game 
Excalibur Electric Compact Hand held LCD Chess Game 375 

URL: http://store.vahoo.com/comfort1st/exelcohahelc.html 

d. Multi-User Chess Game for PC 

Chess Brain Chess Network 



URL: http://www.chessbrain.net/cbindex.html 

e. Screenshots, Pros and Cons 

PC (Hoyle Majestic ChessJ 


Figure 1. 


JAMDAT Atobile Canada - Screensho... ^~|[n IfX | 


Neutral: Tournament Feature with 
Computer generated players. 
Hoyle Majestic Chess 

Pocket PC (Jamdat Mobile) 


< PREVIOUS 


NEXT> 


Pros: High quality graphics, 
adjustable strength levels, 
multiplayer, chat capability. 

Cons : Weak Mobility -Cannot be 
used with Mobile Devices- 


Pros: Mobility, Chat capability 

Cons: Weak graphics compared 
to PC; Small Display. 


Figure 2. Jamdat Mobile Chess 


13 
















Livie GctiYi«±! 


Multi-user PC 


Chess Brain Network 

Pros: Distributed network to 
play a game against a super 
computer. 

Cons: Weak Graphics, Weak 
Mobility -Cannot be used with 
Mobile Devices- 


Figure 3. Chess Brain Network 



























































Che^sEr-ain vs . cbexp 

Move Black bo 1*0vc 



Chess Set 

Leather-Cased Glass Chess Set 
Pros: Real, Selectable material 
Cons: Expensive, heavy 
Neutral: Partly Mobile. 


Figure 4. Leather-Cased Glass Chess Set 


14 












III. DEVELOPMENT OF NEW WIRELESS SERVER-CLIENT 

SYSTEM MODEL 


A. IDENTIFICATION OF NEW MODEL FOR MORE EFFECTIVE SYSTEM 

1. Definition 

After examining the current similar systems in the previous chapters, it can 
be seen that graphics applications for mobile devices bck visual quality. The 
problems are the low resolution and the small size of the display, even anti¬ 
aliasing cannot be enabled due to the loss in the fps (frames per second) of the 
display, enabling anti-aliasing is not recommended for games. Also it is apparent 
that the more interactive a game is, the more it is fun. Interactivity may even 
sometimes create overhead for a PC CPU and this problem may cause damages 
on the PC. Implementing a game for a mobile device requires serious deign 
considerations. Optimization of written code is very important. Even at the 
design phase, assumptions must be made very carefully since post-optimization 
of a code may not be a solution. These days, Java is one of the most widely used 
languages for interactivity of the games. Java Code Optimizers may be very 
effective for reducing the size of the Java files driving the game. However even 
this enhancement may not be sufficient and one may have to sacrifice some nice 
aspects of the game. 

Although sacrificing the graphical interface and the interactivity of the 
game may be acceptable for the coder, users may not tolerate it. What users 
want is realistic high resolution graphics and total control of game play. This 
means that you need more memory space and a powerful CPU. We are going to 
plan a design for people who are not patient enough to wait for the production of 
a new mobile device as powerful as PCs. 

The fundamental constraint on PCs is lack of mobility. It is a simple 
concept: There must be something better than a computer. After notebooks were 
first introduced there was a tremendous trend about buying a notebook just for 
the sake of being mobile. While the modern world is pushing people to be more 

and more mobile, for businessmen who want to be ahead of their colleagues, 

15 



mobile devices become a must-have helper for presentations, preparing 
spreadsheets and their common activities.. You may find more information about 
how wireless becomes a business advantage at this URL: 
http://media.wilev.com/product data/excerpt/ 39/04711503/0471150339.pdf 

2. Description and Design 

Using mobile device as a remote control for printing documents also 
provides a new point of view on using mobile devices. A hybrid product or a 
design which can combine both PC and mobile device’s best aspects may be a 
solution without sacrificing reality of graphics, interactivity and of course mobility. 
A hybrid product approach has the physical limitation such as for a light-weight 
mobile device needing to keep screen size small. Until super-light screens 
become very common, mobile devices cannot pass this physical barrier. 

The second approach is a new design that uses both mobile devices and 
high-performance PCs. WLAN (Wireless Local Area Network) is a solution but 
does not provide wider mobility. Internet is the source that can provide us global 
mobility. If we can use mobile devices as remote control for the web-enabled 
virtual environments or games we can have mobility of mobile devices and 
realistic graphics of high-performance PCs. Imagine you are in a cafe and you 
want to play a chess game with someone in the same cafe. After finding 
someone to play with you connect to a site and open a new chess game and give 
a name to game. Your partner goes to same site and finds your chess game’s 
name and connects to it. Actually what you see on your mobile device screen is a 
simple GUI interface similar to TV remote controls. What we obtain here is 
mobility since even the place and the people are random; they connected to the 
same game via internet. You and the other people in the cafe can watch the 
shared state of this chess game at the same site via big screen projected by a 
high-performance PC and projector owned by the cafe. Nobody has to get 
together around the players to be able to watch the game. 

The following image is one of the possible designs of this model. 


16 





Figure 5. Remote 3D Chess Game Design 


B. NEEDS AND REQUIREMENTS 

1. Hardware Needs 

We are going to use iPAQ 5000 series Pocket PCs for this project as the 
client side of the application. The reasons of choosing this model are its wireless 
capability, 802.11 and Bluetooth, more memory space compared to earlier 
versions and its faster CPU. We are going to use a notebook with wireless 
capability, 802.11 and Bluetooth, and a digital projector. A high resolution digital 
camera will be used for good quality textures. 

2. Software Needs 

For modeling and editing chess game objects X3D, VrmIPad, 3ds max, 
Wings3D, Crossroads for file conversion and built-in plug-ins, 3ds max optimizer 
for optimizing the models, java files for interactivity, Textpad as java editor, 
JeodeRuntime java platform to run the java application on iPAQ Pocket PC, for 


17 








synchronization of PC and Pocket PC and ActiveSync transferring the files from 
PC to Pocket PC. Pocket PC Cortona is used as client side GUI. 

3. Final Product Requirements 

We will be able to change the positions of the chess pieces by using the 
iPAQ Pocket PC. We are going to use UDP (User Datagram Protocol), a 
connectionless protocol that, like TCP, runs on top of IP networks. Unlike 
TCP/IP, UDP/IP provides very few error recovery services, offering instead a 
direct way to send and receive datagrams over an IP network. It's used primarily 
for broadcasting messages over a network. Client side GUI interface will be 
implemented in Java. However an optimized VRML version of the chess game 
may be provided for client side GUI. 


18 



IV. IMPLEMENTATION 


A. SETTING THE NECESSARY ENVIRONMENT 

1. Setting Necessary Platform for personal Pocket PC 

To be able to run demonstration chess applications, after synchronizing 
the Pocket PC with a PC using ActiveSync, install Jeode runtime to the Pocket 
PC. Then copy KivancPocketChess.jar files to the Pocket PC. After 
accomplishing previous steps, first run ChessServer.java, which is the server in 
the demonstration server-client system, on the PC and then run ChessClient.java 
on the Pocket PC, which is client, by entering the arguments to EVM. Please 
refer to the README.txt file provided in the java folder under demonstration 
folder for further explanation about running Demonstration on Pocket PC and PC. 

Because the implementation process needs a lot of testing entering the 
arguments from EVM can be frustrating. Please read the “Creating a shortcut for 
EVM” section in the README.txt file to create a shortcut for your own 
applications. A shortcut for running the Client of the demonstration on the Pocket 
PC is provided in the demonstration folder on Pocket PC. It can also help to 
have an idea how to create shortcuts for future personal applications. 

Another reason for these explanations is to help the students, who want to 
continue this research, by providing complete directions running their own 
applications in the future. 

a. Connecting Pocket PC to PC and Synchronization 

Synchronization is the main concept for mobile devices to 
communicate with the PC. This section explains how it is achieved on an iPAQ in 
order to upload the executables to the Pocket PC. 

ActiveSync synchronization program has to run on both PC and 
Pocket PC. New Pocket PCs come with this program already installed. However, 
you can download the latest version of this program from the Microsoft web site 
for your PC free at: 


http://www.microsoft.com/windowsmobile/resources/downloads/pocketpc/actives 

19 



vnc37.mspx or you can use your iPAQ CD to install ActiveSync into your PC. 
Now both devices have been installed and are ready to connect. When you 
connect the iPAQ USB port to your PC, the following prompts appear.. 



Figure 6. Setting a Partnership 

Two options are presented: Partnership or Guest connection. A 
Guest connection is enough for copying and moving the files between the device 
and the computer. When the Guest connection is established, the Pocket PC’s 
directories can be browsed. Now it is a part of the computer directory on the PC. 

With the ActiveSync window, options and other functionalities about 
this connection are presented. Figure 7 shows the ActiveSync window and its 
tools. 


20 














Figure 7. ActiveSync Dialog box 

b. Installation of JeodeRuntime 

After establishing the connection between the devices, now it is 
time to install one of the run time environments into the Pocket PC. There are 
two options: JeodeRuntime or Personal Java. JeodeRuntime is used because it 
comes on the Pocket PC’s distribution CD. Microsoft provides JeodeRuntime on 
the iPAQ CD. JeodeRuntime is a fully-certified implementation of Sun's 
PersonalJava 1.2 specification The latest Java DK (Development Kit) 
specification that can be used with JeodeRuntime is the JDK 1.2 development kit 
specification. 

When the JeodeRuntime emulator is installed into the PC, it is 
automatically installed to the Pocket PC. Now the Pocket PC is ready to run Java 
native applications and applets. Java source code cannot be developed on iPAQ; 
only Java jar files are executed. To run a Java application using JeodeRuntime, it 
is needed to copy the user defined application classes, libraries and properties to 
iPAQ Java files can be run on Pocket PC by using EVM (Emulator Virtual 
Machine) console provided by JeodeRuntime. Figure 8 shows the EVM console 
on iPAQ. 


21 













E\TVI Console 

igr-fx:! 

Enter args: 



Figure 8. JeodeRuntime EVM console 
There are restricted commands, which can be used on the EVM 
Console. Here are some examples. 

-?, -h or -help : help files. 

Launch JeodeRuntime can be managed in two ways: 

• Running JeodeRuntime as a shortcut 

• Tapping on the EVM icon (Start > Programs > Jeode), and entering 
following : 

-classpath <pathnames> or -cp <pathnames> 


Specify the path(s) used for loading application classes. Semi¬ 
colons separate the pathnames. For example, to include classes contained in 
remotechess.jar, that is provided in this research following command must be 
entered: 

-classpath \Windows\lib\remotechess.iar 

-D<propertyName>=<value> 


22 









This type of command supplies the value for a JeodeRuntime or 
standard Java system property. For example, to keep the display console open, 
use the command: 

-Dieode.evm.console.local.keep=TRUE 

-V, -verbose 

This command causes messages to be displayed on the 
JeodeRuntime console when a class file or dynamic library is successfully 
loaded. A garbage collection cycle is performed. 

-version 


This command dsplays JeodeRuntime version information on the 
EVM console. 

-Xnowinceconsole 


Use the -Xnowinceconsole option to disable the EVM console if its 
display is unwanted - for example, when running graphical applications. 

c. Choosing Java Platform for PC 

When developing the application for the iPAQ Pocket PC in Java, 
JDK (Java Development Kit) 1.2 is used. The most recent version can also be 
used without problems but in this case no classes other than those in the 
JDK.1.2 Specification can be used. Latest versions of Java include both JRE 
and JDK so the user does not have to install these separately. 

2. Modeling Chess Environment in VRML 

The chess game requires the folowing models: 

• 12 white pieces; King, Queen, Bishop (2), Knight (2), Rook (2), Pawn (8). 

• 12 black pieces King, Queen, Bishop (2), Knight (2), Rook (2), Pawn (8). 


23 



• 1 chess board. 


A name and the initial positions of the pieces are provided on Table 1 


_ 8 _ 

brl 

bkl 

bbl 

bQ 

bK 

bbr 

bkr 

brr 

7 

0 06 0 -0 48 

0 12 0 -0 48 

0.18 0 -0 48 

0 24 0 -0 48 

0 30 0 -0 48 

0.36 0 -0 48 

0 42 0 -0 48 

0 48 0 -0 48 

_6_ 

bpi 

bp2 

bp3 

bp4 

bp5 

bp6 

bp 7 

bp 8 

5 

0.06 0 -0 42 

0 12 0 -0 42 

0.18 0 -0 42 

0 24 0 -0 42 

0-30 0 -0 42 

0.36 0 -0 42 

0 42 0-0.42 

0.48 0 -0 42 

_4_ 

3 

0 06 0 -0 36 

0 12 0-0.36 

0 18 0 -0 36 

0 24 0 -0 36 

0.30 0 -0.36 

0.36 0 -0.36 

0 42 0 -0.36 

0 48 0 -0 36 

_ 2 _ 

1 

0 06 0 -0 30 

0 12 0 -0 30 

0 18 0 -0 30 

0 24 0 -0 30 

0 30 0 -0.30 

0.36 0 -0.30 

0 42 0 -0.30 

0 48 0 -0 30 

_ 8 _ 

7 

0 06 0 -0 24 

0 12 0 -0.24 

0 18 0 -0 24 

0 24 0 -0 24 

0.30 0 -0 24 

0.36 0 -0 24 

0 42 0 -0.24 

0 48 0 -0 24 

_6_ 

5 

0 06 0 -0 18 

0 12 0-0 18 

0 18 0-0 18 

0.24 0 -0 18 

0.30 0 -0 18 

0.36 0 -0.18 

0.42 0 -0 18 

0 48 0 -0 18 

_4_ 

wpl 

wp2 

wp3 

wp4 

wp5 

wp6 

wp7 

wp8 

3 

0 06 0 -0 12 

0 12 0-0 12 

0 18 0-0 12 

0.24 0 -0 12 

0.30 0 -0 12 

0-36 0 -0 12 

0 42 0 -0 12 

0 48 0 -0 12 


wri 

wkl 

wbl 

wQ 

wK 

wbr 

wkr 

wrr 

1 

0 06 0 -0 06 

0 12 0-0.06 

0.18 0 -0 06 

0 24 0 -0 06 

0.30 0 -0 06 

0 36 0 -0 06 

0.42 0 -0 06 

0 48 0 -0.06 


A 

B 

C 

D 

E 

F 

G 

H 


Table 1. Initial Positions Chess Game Pieces. 


24 




















Pieces: 


(bri: black rook on the left) 

(bkl: black knight on the left) 

(bbl: black bishop on the left) 

(bQ: black g_ueen) 

(bK: black king) 

(bbr: black bishop on the right) 

(bkr: black knight on the right) 

(brr: black rook on the right) 

(wri; white rook on the left) 

(wkl: white knight on the left) 

(wbl: white bishop on the left) 

(wQ: white g,ueen) 

(wK: white_king) 

(wbr: white_bishop on the right) 

(wkr: white knight on the right) 

(wrr: white rook on the right) 

Algorithm 

When writing an application for the Pocket PC, Pocket PC’s restrictions 
must be considered. If sending a packet to the server as in this application, 
packet size is very important considering the wireless bandwidth. Hence an 
algorithm is needed that sends the least number of bits in a data packet possible. 
The algorithm and associated data used for sending data is provided in Table 2 
and discussed below. 


25 



z8 

1 1; 


2 

3 

4 

5 

6 

7 

B 

z7 

9 


10 

11 

12 

13 

14 

15 

16 

z6 

17 


18 

19 

20 

21 

22 

23 

24 

z5 

25 


26 

27 1 

■ 

28 

29 

30 

31 

32 

74 

33 


34 

35 


36 

37 

38 

39 

40 

z3 

41 


42 

43 


44 

45 

46 

47 

48 

z2 

49 


50 

£1 


62 

53 

54 

55 

56 

Zl 



58 

59 


60 

61 

62 

63 

64 


x1 


x2 

x3 


X4 

x5 

x6 

x7 

x8 

8 

J 

/ 

B8 

C8 


D8 

E8 

F8 

G8 

H8 

7 

A7 

B7 

C7 


D7 

E.’ 

F7 

G7 

H7 

e 

A6 

B6 

C6 


D6 

E6 

F6 

G6 

H6 

5 

AS 

B5 

C .3 

f 

D5 

E5 

F5 

G5 

H5 

j 

M 

B4 

C4 

D4 

E4 

F4 

G4 

H4 

3 

A3 

B3 

C3 

D3 

E3 

F3 

G? 

H3 

2 

A2 

B2 

C2 

D2 

E2 

F2 

G2 

H2 

1 

A1 

B1 

Cl 

D1 

E1 

FI 

G1 

HI 


A 

B 

c 

D 

E 

F 

G 

H 


Table 2. Initial Positions Chess Game Pieces. 

Each square represents a square on chess board. Traditionally, they are 
labeled as “A1 ” or “B2” but for performance purposes two digit representations of 
squares are used. For example 1 ” means “A8” and ‘27” means ‘C5”. Actually 
the traditional way was attempted first while testing the demonstration software, 
but it became apparent that the numeric approach improves performance. The 
values are used to calculate the new position of a picked piece. For example, the 
first mouse click by a user defines which square is chosen. The client sends the 
related square id, such as ‘1” (A8). When the server receives this data, it finds 
the mapping piece name by looking at the initialized piece-square mapping table 


26 






















































by using location “1”. At the beginning of the game bri (blackrookleft) occupies 
square “1”. The server then waits for the second mouse-click from the user. After 
the second mouse click the ID of the associated square is sent in the same way. 
If “C5” is chosen, then “27” is sent. In the VRML chess board each square side is 
0.6 units. Therefore, to find the new position of the chosen piece, the following 
calculation is performed: 

ID: type=integer, value=27 

Translation on X axis = ((ID-1)mod8)-i-1) * 0.06 = 0.18 unit 

Translation on Y axis = Do not update. 

Translation on Z axis = ((8- ((ID-1)/8))) * 0.06 =-0.42 unit 

Between the first click and the second click the software emphasizes the 
chosen piece by simulating a spot light illuminating the piece from the top and 
turning scene headlights off. After the second click, the scene headlight and spot 
light states are reset. 

B. PROGRAM CODE AND EXPLANATIONS 
1. Overview 

For the communication between the client and server, the following files 
are used: 

Client Side 
o ChessClient.java 
o ChessView.java 
o Cell.java 
Server Side 
o ChessServer.java 
o Mover.java 
o Chess.wrI 


27 



Chess Server 


ChessClient 



c 


Y 


At 




































& 






































Click) 


INTERNET 


(2'’«'Click) 




Figure 9. Server-Client Communication Design 

2. Java Files 

As seen on Figure 9, ChessClient is responsible for handling the mouse 
events created by user. ChessView is the necessary GUI part of client side. Cell 
is a GUI component representing each square on the chess board. ChessView 
has 64 Cell Class objects. 


UDP protocol is used to send the data packets since the communication 
packets are small, and the scene does not need too many updates with short 
time intervals and the rate of the risk of losing packets is not high. The worst 
case is that if an error occurred due to packet missing the user can correct the 
error easily. If he/she sees that the action he/she took did not work correctly, 
such as if a click to move a piece does not change the position of a picked piece 
user simply click the button again. 


ChessServer is responsible for receiving messages sent by the client. It 
uses the content of the message as a key and checks the associated piece name 
from the mapping tables. It also decrypts the message to find the necessary 

28 






















































transformation by applying the message data to the transformation formula 
mentioned in the previous section. ChessServer passes the new transformation 
values and the name of the picked chess piece to Mover.java by invoking one of 
public methods of Mover.java. 

Mover.java extends the Java Script Class to be able to communicate with 
Chess.wrI file. It is responsible for passing new transformation values and the 
name of the picked chess piece to the Script Node in the Chess.wrI file. 

Chess.wrI is the file displaying the 3D Chess environment. This file is the 
high resolution version of the chess environment to display on the big screen. A 
highly optimized version of this file is designed for the Pocket PC as the client 
side GUI component. However due to the Java limitation of Pocket PC Cortona 
instead of the VRML file, ChessView.java, extending Frame Java GUI 
component is used for the client side. The Pocket PC version of the chess 
environment and is provided in the Appendix A as a starting point for future work 
in this research area. 

3. VRML Files 

a. Positioning the Pieces 

Placing the chess pieces on the board as mentioned in the previous 
chapter provides enough flexibility to implement necessary Java code to modify 
the screen. However a new transformation of the piece does not change the Y 
value since each piece is initialized as tangential to the chess board with a 
certain Y value. This rule keeps pieces moving on a flat surface (x-z plane) 

b. Setting Background 

The background of the chess game is made of 6 high resolution 
jpeg files: front, back, top, bottom, left, right. The pictures are taken from the 
center of the room which represents where the imaginary chess board is placed. 
A 2M Sony digital camera and tripod are used for this purpose. The tripod is 
necessary to keep the camera in place. Otherwise the background view may 
have a distorted appearance at the connection points of the images. 

c. Creating a Giass Chess Board Effect 

Glass effect of the board is created by the following steps: 


29 



• Setting a transparent color value for the chess board. 

• Placing the 180 degree rotated (mirrored) pieces to the bottom of each 
piece. By doing this the rotated geometry is seen through the 
transparent chess board. 

• Even though it is not a very recognizable effect, using a frosted glass 
texture to reflect a colorful object improves the feeling of reality in the 
chess scene. Reflected objects cannot be recognized since the glass 
is frosted in real life. Because of the unknown reflection on the frosted 
glass observers assume it is the TV’s reflection on the frosted glass. 

This fake reflection effect is partly effective since it needs a 
reflection for any object in the scene. Therefore it doubles the size of the VRML 
file. However as mentioned earlier one of the purposes of this research is to 
overcome the memory, CPU and graphics card limitations of Pocket PCs. The 
realism provided by high-quality PCs on the server side exceeds the capabilities 
of mobile devices - with the technique demonstrated in this thesis, the mobile 
user retains the benefits of the capabilities on the server side. 


30 



V. TEST AND PERFORMANCE 


A. DEMONSTRATION TESTING 

1. OVERVIEW 

The demonstration product was separated into modules in the design 
phase of this research. In this chapter, the integration issues of program modules 
are addressed above the associated screenshots. All modules are implemented 
but some problems occurred due to Java configurations while connecting the 
modules. Therefore all modules are tested individually. 

2. SCREEN SHOTS FROM DEMONSTRATION 
a. Server Side Chess VRML File 

Server-Side Chess Player Views: 



Figure 10. Server-Side Chess White Player View 


31 












>o ro I • 1 i*H <» 




Figure 11. Server-Side Chess Black Player View 

Reflection Effects : 


Figure 12. Server-Side Chess Top View 


32 

















Figure 13. Server-Side Chess TV Reflection 



Figure 14. Server-Side Chess Room Light Reflection 


33 
















^ - o--■» 


Figure 15. Server-Side Chess Reflection On Glass Board 



— O —fli 


Figure 16. Server-Side Chess Inside Board Water Reflections 


34 

















Picked Chess Pieces: 



Figure 17. Server-Side Chess Picked Left White Rook (White Player 

View) 



Figure 18. Server-Side Chess Picked Left White Rook (Black Player 

View) 


35 












Figure 19. Server-Side Chess Picked White Queen (White Player View) 



Figure 20. Server-Side Chess Picked White Queen (Black Player View) 


36 

















Figure 21. Wireframe view of the scene 



Figure 22. Client for Pocket PC 


37 





















Working Demonstration Screenshots (LocalHost is Used) 



Figure 23. Initializing the client and the server 


38 































Figure 24. Mouse pressed 



Figure 25. First Click 


39 




























































■•t oll<-lk* ri> n4>w •• 

1$« b pioKfHI : ‘ 

■'•d titbk* ro (»ew o« 

itt click,^iwcft |]lcki»4 7 


Figure 26. Second Click 


b g K 

I (TTT 


^corr« la ir« Remote 3D Ch««« Demesenei 
Thi&rtomdiecteaiedrof rwritft dOrnDieov'^it i>i«f 


(iienl -l 92 168 22Ai^ 92186 2.24 


•‘PACKET RECEJVSP 
'rom«:U6m 192168.2 2411921862 2< 
:ilem|ion S 133 

,enijin 2 


Figure 27. Capturing the opponent’s piece 


40 

















































Figure 28. One move in the demo 


B. ENCOUNTERED PROBLEMS 

There was no significant problem during the implementation period other 
than configuration problems and some software support problems. The 
problems are explained in following sections. 

1. System Related 

For the client side Cortona for Pocket PC of Parallel Graphics is used first. 
Flowever due to some Java limitations it was not applicable to the design with the 
current technology. Because the client side VRML file is already implemented 
and optimized for Pocket PCs it can be used as a stand alone chess game or it 
can also be used as the basis for future work. The biggest problem with this 
VRML file was optimizing the file with 3ds max polygon optimizer which caused 
some odd appearances on piece models. These oddities were not visible until 
converting it from 3ds max file to VRML file. The size problems also caused drag 
and drop problems in the VRML file on Pocket PC. After decreasing the size 
1/10, the speed and accuracy of piece moves become very usable. The complete 
VRML files can be found in Appendix A. 


41 





The Mover Java file which extends Script did not work with the computer 
used for the thesis due to a Java security error. Even though the client-server 
connection and data transfer are achieved, the server which is supposed to feed 
the Mover with new transformations could not invoke methods of the Mover 
Class. The methods and interaction between Java files was checked carefully 
and no logical error found. The Java code part which provides this interaction 
between the Mover file and server is currently commented out but was not 
deleted. For demonstration purposes the part the server is supposed to do is 
adapted to Mover files so it can feed the server side VRML file with new 
transformations. The Java code is provided in Appendix A. 

2. User Related 

No user related problems were encountered in the demonstration 
software. 


42 



VI. CONCLUSIONS AND FUTURE WORK 


A. CONCLUSIONS 

The objective of this thesis, and of the research upon which it was based, 
was to improve collaboration in common space by providing a new system model 
for wireless entity control in virtual environments. The main deliverable of this 
thesis is a demonstration of a new system model which provides both mobility 
and reality by implementing a remote control approach for virtual environments 
using mobile devices. The new model has been applied to a simple chess game. 
The demonstrated approach may be used for other virtual environments and 
relevant areas with a few modifications on both server and client sides. 

Research progressed in four main phases: 

• Review of current related technologies, such as Wireless 
Technologies and Graphics Technologies. This was accomplished 
(Chapter II). 

• Review of current systems similar to the demonstration-product of 
this research, such as Mobile printing system and Chess Game for 
PCs and Pocket PCs. This was accomplished (Chapter II). 

• Identification of a better possible server-client system for a chess 
game that doesn't sacrifice reality while providing mobility by using 
current technology. After carefully reviewing similar systems, the 
work developed a new model for remote control of entities in a 
virtual environment. The design approach was described in 
Chapter III. 

• Development of the demonstration server-client application which 
provides more effective usage of the mobile devices for a remote 
control in a virtual environment. This research successfully 
implemented a server-client approach that provides high-quality 
graphics and high performance computing on the server side with 


43 



economical processing demands on the client side. This was 
described in Chapter IV. Specific capabilities and limitations in the 
implementation were further discussed in Chapter V. 

The primary goal of this thesis was to answer the following questions: 

• By implementing software programs for mobile devices, can we 
create human collaborative interaction in distributed common space 
of virtual environments with mobile users? Based on this research, 
this goal is certainly achievable within the constraints of the mobile 
devices. 

• By implementing software programs for mobile devices, how can 
we widen the usage of virtual environments in daily life? This 
research has shown the possibility of mobile control over entities in 
a virtual environment for multi-player entertainment, creating new 
opportunities for wider adoption of virtual environments in daily life. 

• By applying a new server-client model for collaborative mobile 
device applications can we improve reality and mobility? Using 
mobile devices as remote control gives the user the advantages of 
mobility over desktop PCs. On the other hand, the realism 
provided by high-quality PCs on the server side exceeds the 
capabilities of mobile devices - with the technique demonstrated in 
this thesis, the mobile user retains the benefits of the capabilities on 
the server side. 

• With a prototype capability can we identify constraints, limitations, 
and performance? From this research, it was not clear how to 
overcome problems with Cortona and current Java versions. 
Workable techniques or alternatives need to be explored further. 


44 



B. FUTURE WORK 

The new system design introduced by this research opens a new door to 
virtual environments. The main concept of this research may be applied any 
other games and interactive virtual environments. 

Special to the demonstration of this research, the new technologies which 
give ability to display VRML files on Pocket PC should be monitored to be able to 
use a VRML file as a graphical interface for the client-side of the remote chess 
game. Multi-user capable browsers do not support Pocket PCs yet so in the 
future new capabilities of these browsers should be monitored and employed to 
enable multi-user capability in the chess game. The fundamental design used in 
this thesis can be employed in other games or to control entities in quite different 
virtual environments, for example to control entities in a military simulation. 


45 



THIS PAGE INTENTIONALLY LEFT BLANK 


46 



APPENDIX 


PROGRAM AND DEMONSTRATION FILES 


Client-side VRML File 

Full Application Software Files 


47 




THIS PAGE INTENTIONALLY LEFT BLANK 


48 



LIST OF REFERENCES 


1. Bernie Roehl, Justin Couch, Cindy Reed-Ballreich, Tim Rohaly, Geoff 
Brown,Late Night VRML 2.0 with Java, Macmillan Computer Publishing 
1997 

2. VRML tips, http://www.blaxxun.com/developer/contact/3d/vrml/ February 
2004 

3. Comfort Product s Excalibur Electric Compact handheld Chess Game 
http://store.yahoo.com/comfort1st/exelcohahelc.html February 2004 

4. VRML 2.0 (Andrea L. Ames, David R. Nadeau, John L. Moreland) 

5. Jamdat Chess Game 

http://www.hexacto.com/game kasparov.php , February 2004 

7. Web3d Consortium X3D and VRML technologies 
http://www.web3d.org/index.html February 2004 

8. Webopedia, Definition of GSM 

http://www.webopedia.eom/TERM/G/GSM.html February 2004 

9. Bluetooth Site 

http://www.mobilebluetooth.com/whatisbt.htm February 2004 

10. Axis Communications “Mobil Printing Today and in the Future” ,White 
Paper,February 2003.Available from 

http://www.axis.com/documentation/whitepaper/5800/wp 5800.pdf 

February 2004 

11. Crossroads 3D homepage: 
http://www.europa.com/~keithr/crossroads/ February 2004 

12. OKING Computer Graphics Flomepage: 
http://www.okino.com/conv/conv.htm February 2004 

13. Don Brutzman’s homepage: 
http://web.nps.navv.mil/~brutzman/ February 2004 

14. Discreet Products 3ds Max Page 
http://www.discreet.com/3dsmax/ February 2004 

16 Maya, Alias producs page 

http://www.alias.com/eng/index flash.shtml February 2004 
17. Savage Library 

http://web.nps.navy.mil/~brutzman/Savage/ February 2004 


49 















19. Texas Instruments, Tri-Wireless PDA Concept Design 

http://focus.ti.com/docs/apps/cataloq/qeneral/qeneral.ihtml?templateld=11 

01 &path=templatedata/cm/qeneral/data/wire conceptdesiqn2 

February 2004 


50 




INITIAL DISTRIBUTION LIST 


1. Defense Technical Information Center 
Ft. Belvoir, Virginia 

2. Dudley Knox Library 
Naval Postgraduate School 
Monterey, California 

3. Don Brutzman 

Naval Postgraduate School 
Monterey, CA 

4. Gurminder Singh 

Naval Postgraduate School 
Monterey, CA 

5. LTJG Ekrem SERIN 
Arastirma Merkez Komutanligi 
Istanbul, Turkey 

6. LTJG Mehmet Guzey 
Onarim Destek Komuntanligi 
Zonguldak, Turkey 

7. Berna Metingu 
NLP 

Istanbul, Turkeyl 


51 



