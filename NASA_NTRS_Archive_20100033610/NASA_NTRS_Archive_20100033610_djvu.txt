ing occurs during scheduled periods 
every day of the week, the ACR soft- 
ware continuously monitors the an- 
tenna equipment. 

This work was done by Roger Y. Chao, 
Scott C. Morgan, Martha M. Strain, 


Stephen T. Rockwell, Kenneth J. Shimizu, 
Barzia ]. Tehran! , Jaclyn H. Kwok, 
M ichelleTuazon-Wong, and Henry \ /altier 
of Caltech; Reza Nalbandi of MTC; 
M ichael Wert of ITT; and Patrick Leung of 
ISDS/Averstar for NASA's Jet Propulsion 


Laboratory For more information, contact 
iaoffice@jpl.nasa.gov. 

T his software is available for commercial 
licensing. Please contact Daniel Broderick of 
the California Institute of Technology at 
danielb@caltech.edu. Refer to NPO-47002. 


$ Efficient Parallel Engineering Computing on 
Linux Workstations 

NASA's Jet Propul si on Laboratory, Pasadena, California 


A C software module has been devel- 
oped that creates lightweight processes 
(LWPs) dynamically to achieve parallel 
computing performance in a variety of 
engineering simulation and analysis ap- 
plications to support NASA and DoD 
project tasks. The required interface be- 
tween the module and the application it 
supports is simple, minimal and almost 
completely transparent to the user appli- 
cations, and it can achieve nearly ideal 
computing speed-up on multi-CPU engi- 
neering workstations of all operating sys- 
tem platforms. The module can be inte- 
grated into an existing application (C, 
C++, Fortran and others) either as part of 
a compiled module or as a dynamically 
linked library (DLL). 


This software has the following 
major advantages over existing com- 
mercial and public domain software of 
similar functionality. 

1. It is especially applicable to and pow- 
erful on commercially, widely avail- 
able, multi-CPU engineering work- 
stations; 

2. It hasa very simple software architec- 
ture and user interface and can be 
quickly integrated into an existing 
application; and 

3. Its code size isvery small, and its per- 
formance overhead is minimal, re- 
sulting in nearly ideal parallel-com- 
puting performance for many 
computing-intensive scientific and 
engineering applications. 


The approach adopted in this 
technology development does not re- 
quire any additional hardware and 
software beyond what's typically 
available on any commercial engi- 
neering workstations, that is a native 
operating system and C, C++ or 
FORTRAN compilers that an applica- 
tion needs. 

This work was done by John Z. Lou 
of Caltech for NASA's Jet Propulsion 
Laboratory. For more information, contact 
iaoffice@jpl.nasa.gov. 

The software used in this innovation is 
available for commercial licensing. Please 
contact Daniel Broderick of theCalifornia In- 
stitute of Technology at danidb@caltech.edu. 
Refer to NPO-46892. 


O FAILSAFE Health Management for Embedded Systems 

NASA'sJet Propulsion Laboratory, Pasadena, California 

The FAILSAFE project is developing 
concepts and prototype implementations 
for software health management in mis- 
sion-critical, real-time embedded systems. 

The project unites features of the indus- 
try-standard ARINC 653 Avionics Appli- 
cation Software Standard Interface and 
J PL's Mission Data System (MDS) technol- 
ogy (see figure). The ARINC 653 stan- 
dard establishes requirements for the 
services provided by partitioned, real-time 
operating systems. The MDS technology 
provides a state analysis method, canoni- 
cal architecture, and software framework 
that facilitates the design and implemen- 
tation of software-intensive complex sys- 
tems.TheMDStechnologyhasbeen used 
to provide the health management func- 
tion for an ARINC 653 application imple- 
mentation. In particular, the focus is on 
showing how this combination enables 
reasoning about, and recovering from, 
application software problems. The FAILSAFE model-based health management concept is depicted in the block diagram. 


Software 

Monitoring 

Failsafe 

^ Fault Response 


s< 

oftware Far 
Protection 
System 

Model or 
Software 

^ J 

Jit 



ARINC 653 


36 


NASA Tech Briefs, September 2010 


