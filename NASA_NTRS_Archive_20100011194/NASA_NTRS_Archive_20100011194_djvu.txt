Software 


PPC750 Performance 
Monitor 

The PPC750 Performance Monitor 
(Perfmon) is a computer program that 
helps the user to assess the performance 
characteristics of application programs 
running under the Wind River VxWorks 
real-time operating system on a PPC750 
computer. Perfmon generates a user- 
friendly interface and collects perform- 
ance data by use of performance regis- 
ters provided by the PPC750 
architecture. It processes and presents 
run-time statistics on a per-task basis 
over a repeating time interval (typically, 
several seconds or minutes) specified by 
the user. 

When the Perfmon software module 
is loaded with the user’s software mod- 
ules, it is available for use through Perf- 
mon commands, without any modifica- 
tion of the user’s code and at negligible 
performance penalty. Per-task run-time 
performance data made available by 
Perfmon include percentage time, 
number of instructions executed per 
unit time, dispatch ratio, stack “high 
water” mark, and level-1 instruction 
and data cache miss rates. The per- 
formance data are written to a file spec- 
ified by the user or to the serial port of 
the computer. 

This program was written by Donald Meyer 
and Igor Uchmik of Caltech for NASA’s Jet 
Propulsion Laboratory. Further information is 
contained in a TSP (see page 1 ). 

This software is available for commercial 
licensing. Please contact Karina Edmonds of 
the California Institute of Technology at 
(626) 395-2322. Refer to NPO-35237 '. 


Application-Program-In- 
staller Builder 

A computer program builds applica- 
tion programming interfaces (APIs) 
and related software components for in- 
stalling and uninstalling application pro- 
grams in any of a variety of computers 
and operating systems that support the 
Java programming language in its binary 
form. This program is partly similar in 
function to commercial (e.g., Install- 
Shield) software. This program is in- 
tended to enable satisfaction of a quasi- 
industry-standard set of requirements 
for a set of APIs that would enable such 


installation and uninstallation and that 
would avoid the pitfalls that are com- 
monly encountered during installation 
of software. The requirements include 
the following: 

• Properly detecting prerequisites to an 
application program before perform- 
ing the installation; 

• Properly registering component re- 
quirements; 

• Correctly measuring the required 
hard-disk space, including accounting 
for prerequisite components that have 
already been installed; and 

• Correcdy uninstalling an application 
program. Correct uninstallation includes 
( 1 ) detecting whether any component of 
the program to be removed is required 
by another program, (2) not removing 
that component, and (3) deleting ref- 
erences to requirements of the to-be-re- 
moved program for components of 
other programs so that those compo- 
nents can be properly removed at a 
later time. 

This program was written by Paul Wolgast 
and Martha Demure of Caltech and Paid 
Lowik of Sun Microsystems for NASA’s Jet 
Propulsion Laboratory. Further information is 
contained in a TSP (see page 1 ). 

This software is available for commercial 
licensing. Please contact Karina Edmonds of 
the California Institute of Technology at 
(626) 395-2322. Refer- to NPO-30778. 


@ Using Visual Odometry to 
Estimate Position and Atti- 
tude 

A computer program in the guidance 
system of a mobile robot generates esti- 
mates of the position and attitude of the 
robot, using features of the terrain on 
which the robot is moving, by process- 
ing digitized images acquired by a 
stereoscopic pair of electronic cameras 
mounted rigidly on the robot. Devel- 
oped for use in localizing the Mars Ex- 
ploration Rover (MER) vehicles on Mar- 
tian terrain, the program can also be 
used for similar purposes on terrestrial 
robots moving in sufficiently visually 
textured environments: examples in- 
clude low-flying robotic aircraft and 
wheeled robots moving on rocky terrain 
or inside buildings. 

In simplified terms, the program auto- 
matically detects visual features and 


tracks them across stereoscopic pairs of 
images acquired by the cameras. The 3D 
locations of the tracked features are 
then robustly processed into an estimate 
of overall vehicle motion. Testing has 
shown that by use of this software, the 
error in the estimate of the position of 
the robot can be limited to no more 
than 2 percent of the distance traveled, 
provided that the terrain is sufficiently 
rich in features. This software has 
proven extremely useful on the MER ve- 
hicles during driving on sandy and 
highly sloped terrains on Mars. 

This program was written by Mark Mai- 
mone, Yang Cheng, Larry Matthies, Marcel 
Schoppers, and Clark Olson of Caltech for 
NASA’s Jet Propulsion Laboratory. 

This software is available for commercial 
licensing. Please contact Karina Edmonds of 
the California Institute of Technology at 
(626) 395-2322. Refer to NPO-41886. ' 


@ Design and Data Manage- 
ment System 

The Design and Data Management 
System (DDMS) was developed to auto- 
mate the NASA Engineering Order 
(EO) and Engineering Change Request 
(ECR) processes at the Propulsion Test 
Facilities at Stennis Space Center for effi- 
cient and effective Configuration Man- 
agement (CM) . Prior to the development 
of DDMS, the CM system was a manual, 
paper-based system that required an EO 
or ECR submitter to walk the changes 
through the acceptance process to obtain 
necessary approval signatures. This ap- 
proval process could take up to two 
weeks, and was subject to a variety of 
human errors. The process also requires 
that the CM office make copies and dis- 
tribute them to the Configuration Con- 
trol Board members for review prior to 
meetings. At any point, there was a poten- 
tial for an error or loss of the change 
records, meaning the configuration of 
record was not accurate. 

The new Web-based DDMS eliminates 
unnecessary copies, reduces the time 
needed to distribute the paperwork, re- 
duces time to gain the necessary signa- 
tures, and prevents the variety of errors in- 
herent in the previous manual system. 
After implementation of the DDMS, all 
EOs and ECRs can be automatically 
checked prior to submittal to ensure that 


NASA Tech Briefs, December 2007 


21 


