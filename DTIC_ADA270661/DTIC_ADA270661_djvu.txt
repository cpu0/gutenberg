Naval Research Laboratory 


Washington, DC 20375-5320 



AD-A270 661 


NRL/MR/5521..93-7390 


Control of Integrated Voice/Data 
Multi-Hop Radio Networks Via 
Reduced-Load Approximations 


Evaggelos Geraniotis 

Locus, Inc., Alexandria, VA 
University of Maryland, College Park, MD 

Ie-Hong Lin 


University of Maryland 
College Park, MD 

Prepared for 

Communication Systems Branch 
Information Technology Division 


DTIC 

' FLECTEJ 
" OCT 15 1993 ^ 


£ 



September 30, 1993 


Approved for public release; distribution unlimited. 

93-24126 - 




'iS 

'V 

\J 










REPORT DOCUMENTATION PAGE 


Form Approved 
0MB No. 0704-0188 


ruMIc raponing turpan for thw eoHactian ol mt o im w ton la aatanaiad to avaraga t hotr par laaponaa. Including tha dma tar ravlawing aiaiructiona. aaarctang aaMIng data aomaa. 
gadtaring and maint a ining tha data naadad. and camptaUng and rawlawlng tha c olla eO on o* Mormatlon. Sand comman u ragarding thia btrdan aatanata or any olhar aapact ol ttaa 
e oPac tl o o o« Intatmaaen, Including auggaation a tar raducing tWa butaan. to Waahing tu n I laa it auwa t i Sarvicaa. Diractorata tar Intarmadon Opar a t i on a and W^ot ti . 121S Jaltaraan 
Davla HIghiwav, Stdta 1204. Arlington. VA 22202-4302. and to tha Offwa ol Managamant and Budgat. hapamorli Haductlon Prolact I07044>1SS). Waahlr«ion. OC 20S03. 


1. AGENCY USE ONLY {laava Uanki 

2. REPORT DATE 

3. REPORT TYPE AND DATES COVERED 


September 30. 1993 

Interim Report 12/91-12/92 


4. TITLE AND SUSHTLE 


S. FUNDING NUMBERS 


Control of Integnted Voice/DaU Multi-Hop Radio Networks Via Reduced-Load Approximations PE •611S3N 

__ PR -RR015-09-41 

6. AUTHOR(S) wu -DN159-036 

Evaggelos Geraniotis* and le-Hong Lin** 


7. PERFORMING ORGANIZATION NAMEISI AND AOORESSIESI 

Naval Research Laboratory 
Washington. DC 20375-5320 


8. PERFORMING ORGANIZATION 
REPORT NUMBER 

NRL/MR/5520-93-7390 


9. SPONSORING/MONITORING AGENCY NAMEISI AND AOORESSIESI 

Office of Naval Research 
800 North Quincy Street 
Arlington. VA 22217-5660 


11. SUPPLEMENTARY NOTES 

*Locus. Inc. and the University of Maryland 
**University of Maryland 


12p. DISTRIBimON/AVAIlABIUTY STATEMENT 

Approved for public release; distribution unlimited. 


10. SPONSORING/MONITORING 
AGENCY REPORT NUMBER 


12b. DISTRIBUTION CODE 


13. ABSTRACT {Maximum 200 words) 

In this report we develop reduced-load approximation techniques based on the stochastic knapsack and the Pascal distribution, 
which enable the compuutionally efficient arid accurate evaluation of the probability of voice blocking, the probability of data 
queueing, and the average dau delay in integrated voice/dau multi-hop radio networks. Monte-Carlo sumnution techniques are also 
used to verify the accuracy of the approximations. The reduced-load approximations exhibit excellent to very satisfactory accuracy 
for the entire range of network and traffic parameters of interest, while the computational effort necessary for their evaluation is 
subsuntially lower than that of the exact expressions (which is prohibitive for multi-hop radio networks of even moderate size). 

They are also used successfully to approxinute the derivatives (sensitivities) of the above perfotmaiKe measures with respect to 
network and traffic parameters. These approximations are applicable to single-rate and multi-rate voice models, as well as to models 
with voice activity and silence periods. Besides the accurate and time-efficient performance evaluation of integrated voice/data multi¬ 
hop radio networks, the computational efficiency and die accuracy of these approxinutions enables their use for control and 
optimization purposes. 


14. SUBJECT TERMS 



15. NUMBER OF PAGES 

Coiiununications network 

Radio network 


171 

Voice/Data Integration 
Admission Control 

Approximation 


16. PRICE CODE 

17. SECURITY CLASSIFICATION 

OF REPORT 

18. SECURITY CLASSIFICATION 

OF THIS PAGE 

19. SECURITY CLASSIFICATION 

OF ABSTRACT 

20. LIMITATION OF ABSTRACT 

UNCLASSIFIED 

UNCLASSIFIED 

UNCLASSIFIED 

T'’ 


NSN 7S40-01-280-5500 


Standard Form 298 (Rav. 2*891 
Praacrtbad by ANSI Std 239-18 
239 “.OZ 




























CONTENTS 


Pa^ 

1. INTRODUCTION . 1 

1.1. Outline of the Report . 5 

2. SYSTEM MODEL FOR THE JOINT VOICE ADMISSION CON- 

TOOL AND DATA ROUTING PROBLEM . 7 

2.1. Network Model . 7 

2.1.1. General Multi-Hop Multi-Rate Network Model . 7 

2.1.2. Multi-Hc^ Radio Network Model . 7 

2.2. Source Models. 8 

2.2.1. Multi-Hop Multi-Rate Network . 8 

2.2.2. Single-Rate Multi-Hop Radio Netwwk. 11 

2.3. Cost Function / Performance Measures . 12 

2.4. Basic Notation. 14 

2.4.1. General Multi-Rate Multi-Hop Network . 14 

2.4.2. Single-Rate Multi-Hop Radio Netwoiic. 17 

3. STEADY-STATE DISTRIBUTION FOR THE SYSTEM STATE. 19 

4. REDUCED LOAD APPROXIMATIONS FOR THE VOICE BLOCK¬ 

ING PROBABILITY. 23 

4.1. Kelly’s Approximation. 24 

4.2. Knapsack Approximation —. 26 

4.3. Pascal Approximation . 28 

4.4. Mitra’s Approximation. 30 

4.5. Knt^sack and Pascal Approximations for the Radio Network 

Model of Section 22 . 31 

5. KNAPSACK APPROXIMATION TO THE PROBABILITY OF 

DATA QUEUEING. 32 

5.1. General Multi-Hop Multi-Rate Networks . 32 

5.2. Radio Network Model of Sections 2.1.2, 2.2.2, and 2.4.2. 36 

6. PASCAL APPROXIMATION TO THE PROBABILITY OF DATA 

QUEUEING . 40 

6.1. General Multi-Rate Networks. 40 

6.2. Radio Network Model of Sections 2.1.2, 2.2.2, and 2.4.2. 44 

7. EXTENSION OF APPROXIMATIONS TO M/D/c DATA MODELS 

AND THE AVERAGE QUEUEING DELAY AS THE PERFOR¬ 
MANCE MEASURE. 45 

7.1. Approximations to the Probability of Data Queueing for M/D/c 


iii 































Data Models. 45 

7.2. Approximatitms for the Average Queueing Delay of Data. 46 

7.2.1. Knapsack Approximation. 47 

7.2.2. Pascal Approximation. 48 

7.3. Network Model Modification for Guaranteeing Finite Data Delays 
. 49 

8. EVALUATION OF PERFORMANCE MEASURES VIA THE 

MONTE-CARLO SUMMATION METHOD . 50 

8.1. The Monte-Carlo Summation Method . 50 

8.2. Monte-Carlo Summation for the Probability of Voice Blocking. 54 

8.3. Monte-Carlo Summation for the Probability of Data Queueing . 55 

8.4. Monte-Carlo Summation fcH* the Average Queueing Data Delay 
. 57 

9. ADMISSION CONTROL VIA REDUCED-LOAD APPROXIMA¬ 
TIONS . 58 

9.1. Models for Admission Control. 58 

9.2. The Knapsack Approximation Method via Conditioning on Addi¬ 
tional Constraints . 59 

9.2.1. Probability of Voice Blocking . 60 

9.2.2. Probability of Data Queueing . 61 

9.2.3. Extension to Multiple Control Constraints. 61 

9.3. The Knapsack Approximation via the Introduction of Fictitious 

Links. 61 

10. REVENUE SENSITIVITY VIA REDUCED-LOAD APPROXIMA¬ 
TIONS . 63 

10.1. Revenue Sensitivities for General Multi-Rate Networks. 63 

10.1.1. Sensitivity of Voice Revenue. 64 

10.1.2. Sensitivity of Data Revenue. 65 

10.2. Revenue Sensitivities for the Multi-Hop Radio Network of Sec¬ 
tions 2.1.2 and 2.2.2 . 67 

11. NUMERICAL RESULTS AND PERFORMANCE COMPARISONS 
. 68 

11.1. Network and Traffic Models for the Paradigms Used. 68 

11.2. Comparisons of Approximations for the Radio Network of Fig¬ 
ure 2 without Admission Control. 69 

11.2.1. Results for a Radio Network with Eight Transceivers per 

Node . 69 

11.2.2. Results for a Networic with Fewer Transceivers per Node 


73 





































11.2.3. Results fen- a System with Transceivers Reserved for Data 
. 73 

11.3. Comparisons of Approximations for the Multi-Rate Network of 

Figure 3 without Admission Control . 74 

11.4. Threshold Admission Control for the Radio Network of Figure 2 
. 77 

11.5. Voice and Data Revenue Sensitivities fm* Networks of Figures 2 

and 3. 80 

11.6. Required Computational Effon for Various Approximations . 81 

12. CONCLUSIONS. 83 

12.1. Accuracy and Computational Advantage of Approximations. 83 

12.2. Application of New Approximation Techniques to a Broad 

Range of Network Architectures and Traffic Types . 83 

12.3. Application to Control and Optimization Problems . 84 

12.4. Application to High-Speed Netwwks. 85 

ACKNOWLEDGEMENT. 85 

REFERENCES . 86 

APPENDIX A: Proof of Part (a) of Proposition 3.1 (System Steady-State 

Distribution) . 88 

APPENDIX B: M/M/c and M/D/c Data Models . 90 

APPENDIX C: Proof of Proposition 5.1 (Knapsack Approximation). 98 

APPENDIX D: Four-Dimensional Knapsack Approximation (Proofs of 

Propositions 5.2 and 9.1). 101 

APPENDIX E: Proof of Proposition 6.1 (Pascal Approximation) . 105 

APPENDIX F: Proof of Proposition 6.2 (Pascal Approximation). 108 

APPENDIX G: The Knapsack and Pascal Approximations to the Probabil¬ 
ities of Blocking Voice and C^eueing Data Are Identical for Net¬ 
works with Single-Rate Traffic . 114 

APPENDIX H: Proof of Proposition 10.1 . 118 


























CONTROL OF INTEGRATED VOICE/DATA MULTI-HOP RADIO NETWORKS 

VIA REDUCED-LOAD APPROXIMATIONS 


1. INTRODUCTION 

In this report, we address one of the major issues in multi-media networks: the com¬ 
bined (joint) admission control of voice calls and routing of data packets through the 
network. These two problems have been traditionally dealt with separately [l]-[3]. How¬ 
ever, with the advent of ISDN and multi-media services [3], it has become necessary to 
design routing and call set up or scheduling schemes jointly, so that the network resources 
(bandwidth of links, processors at nodes) are used eflBciently and all user requirements 
about the offered quality of services (QOS) of the different traffic types (e.g., data, voice, 
and video) are met. 

One of the major obstacles in the joint optimization of voice admission control (or 
schedxiling) and data routing schemes and, in general, of schemes which control admission, 
access, and routing for multi-media traffic, is the difficulty in obtaining (or the complete 
lack of) closed-form expressions for the performance measures characterizing QOS of the 
different traffic types. 

In many practical situations where such optimizations are required, simplistic ap¬ 
proximations of low accuracy are used to evaluate the performance measures of interest. 
These approximations neglect the interaction and interdependencies caused by the multi¬ 
hop network operation and the sharing of the network resources by the different traffic 
types. Consequently, the control schemes derived &om the optimization of these coarsely 
approximated performance measiires are sub-optimal and the network resomces may not 
be utilized efficiently. 

By contrast, the emphasis of this report lies in (i) the identification of appropriate 
methods for approximating accurately the performance mesisures involved in the problems 
of admission control of voice calls and of routing of data packets in integrated networks and 
(ii) the derivation of optimal schemes for admission control and routing on the basis of these 
approximations. In this context, some existing results on reduced-load approximations 
for voice traffic [4]-[10] are used, their applicability is extended from wired networks to 
wireless networks, zmd their accuracy is validated for a broader range of network and 
traffic parameters; in addition, new results for data traffic are derived for the first time. 
All approximations used are compared to each other and to confidence intervals of the 


Mamiscript approved June 23. 1993. 


1 








actual performance measures derived via the Monte-Carlo smmnation method for a broad 
range of parameters of the traffic types. 

Although the approximations and performance measures used in this report pertidn 
to voice and data traffic and are used for the optimization of voice admission control and 
data routing schemes, they are in principle applicable to other problems (e.g., scheduling 
or set up of calls and data routing) and different traffic tyi>es (e.g., data, voice, and video). 
Actually, regarding the latter issue, our results cover multi-rate scenarios, according to 
which different traffic types may have different bandwidth requirements; thus, if voice 
but not video traffic is involved, voice traffic of different bit rates (and thus quality) can 
be accommodated. When video traffic is also present, our approach requires substantial 
modification to accommodate the variable rate traffic of video somces; however, it can be 
definitely extended to this case and thus it finds application to true multi-media scenarios. 

Moreover, in our model of voice sources, we accommodate both periods of activity 
and silence. If the silent periods can be sensed by the network nodes, then the data users 
can, at least in theory, take advantage of this and utilize the released bandwidth, thus 
increasing the efficiency of the protocols. In practice, this monitoring of silence periods 
and talkspurts can be readily implemented only in certain situations and architectures and 
at the expense of channel bandwidth and additional complication in the network protocols; 
this issue is disctissed further in Section 2.2.1. 

Finally as elaborated in Section 12.4 the approximations of this report are also ap¬ 
plicable (after suitable modification) to interesting problems of high-speed networks such 
as (i) call set-up and admission control in Asynchronous Transfer Mode (ATM) and (ii) 
multicasting of hierarchically encoded data. 

The cost function that can be employed in the optimization of the voice admission 
control and data routing schemes consists of the weighted sum of 
(i) the average blocking probabilities along the paths of voice calls 
and 

(111) the average probabilities of quemng of data along the links of the network or 

(112) the average data delays along the links of the network 

Closed-form expressions for the above quantities are either not available [as is the case for 
(iil) and (ii2)], or, even when they are available [as is the case for the product form of 
(i)], they are very difficult to compute for moderate to large size networks. This difficulty 


2 









is actually amplified by the fact that in optimization problems such as joint voice and 
data routing or voice admission control and data routing, the performance measures above 
may have to be evaluated repeatedly for several differents paths or links. It is exactly this 
difficulty that we attempt to circiunvent in our work. 

The approach followed in this report can then be summarized as follows. We use 
existing approximations or develop new once for the average probability of voice blocking, 
the average probability of data queueing, and the average data-packet queueing data delay, 
and employ those instead of the exact expressions to derive near-optimal admission con¬ 
trol schemes based on thresholds for the voice traffic (see Table 20). We do not derive 
optimal routing schemes for the data traffic in this report but since we approximate accu¬ 
rately the data revenue (and voice revenue) sensitivities with respect to the link capacities, 
the offered voice loads, and offered data loads, we can obtain near-optimal data routing 
schemes by using standard routing algorithms [2] based on these derivatives (sensitivities). 

For voice blocking probabilities, we consider approximation methods suggested 
by Kelly [4]-[5] and the knapsack, Pascal, and Monte-Carlo summation approximation 
methods employed by Rx)ss (6]-[9]. Mitra’s approximation method [10] is also critically 
considered. All these approximations are known to be asymptotically correct (accurate) 
xmder a limiting regime, according to which both the capacity of the links of the radio 
network and the average input voice traffic (loads) increase to large values, while their 
ratio remains constant. 

These approximation techniques are based on several distinct concepts emd have vary¬ 
ing degrees of accuracy and convergence range. Kelly^s approximation [4]-[5] is based 
on an inter-link independence assumption for voice traffic. The knapsack approxima¬ 
tion (used by Ross in [6] and [8]) is based on a stocheistic knapsack concept. The Pascal 
approximation (used by Ross in [6] and [9]) is based on a birth-death process for mod- 
eUng voice traffic that follows the Pascal distribution. The Monte-Carlo summation 
method employs acceptance/rejection methods used primarily in simulation techniques 
in order to evaluate multi-dimensioneil integrals under constraints [7]. This method gener¬ 
ates confidence intervals for estimators of the actual performance measures of interest, and 
thus can be used to provide reliable raezms of comparison among Eill other approximations 
even when the exact expressions are not available or require prohibitive computational 
effort. Mitra's approximation [10] uses a Taylor series expansion on the normedization 


3 






constant of the product form of the voice steady state probability distribution. 

As part of our effort, the accuracy and convergence range of the knapsack and 
Pascal approximations were verified by comparing the approximate results with tho:-e 
obtained using the exact expressions (where feasible) or confidence intervals generated via 
the Monte-Carlo summation method. The agreement was found to be very satisfactory, 
not only for the average performance measures, i.e., the probabilities of voice blocking 
and data queueing (or the data queueing delay) when averaged over the trafiic of all 
circuits or links, respectively, but also for similar performance measures corresponding to 
the individual circmts or li nks of the network. 

Consequently, we use the knapsack approximation for the optimization of the 
thresholds for the admission control of voice calls. Besides the wired mi'lti-rate 
loss networks of [6]- [10], we aJso considered radio networks modeled as in [11]-[12] where 
the transceivers at the nodes (rather than the link capacities) are the network resources. 
The application of these approximations to radio networks is new, and different technical 
problems than those of the multi-rate loss networks had to be addressed. However, the 
results based on Mitra’s approximation were rather disappointing and will not be used in 
our optimization, despite the fact that we had extended the approach to general network 
topologies and miilti-rate networks. A brief discussion of Mitra’s approach and our assess¬ 
ment of its applicability to the problems considered in tfiis report is presented in Section 
4.4. 

For the probabilities of queueing and the queueing delays of data, we use Klein- 
rock's independence assumption for data traffic; according to this assiunption, the 
distribution of interarrival data packet times to the various internal nodes of the network 
remains exponential, even after the data packets have been serviced at intermediate links. 
Voice always maintmns priority over data in our models. Due to the much longer average 
duration of typical voice calls compared to that of data packets (whose arrival process is 
characterized by a Poisson distribution), it is reasonable to assume that the voice state of 
the network changes much slower than that of the data state. 

We can thus evaluate the probability of queueing of data (and the queueing delay) 
conditioned on the voice state (i.e., the number of active and inactive voice calls in the 
network); then we average with respect to the steady-state probability distribution of the 
voice state. Both M/M/c and M/D/c models for data queueing at the links have been 


4 





considered. We have performed the aforementioned averaging of the M/M/c or M/D/c 
expressions (conditioned on the voice state) with respect to the voice state, according to 
the knapsack and Pascal approximation methods. This is a novel approach first appearing 
in this report. We Umited attention to these data models because of constraints in the 
preparation time and the length of this report; the applicability of our approach is not 
restricted to these models, it can be applied (with proper modification) to any other data 
models as long as the assumption holds that changes in the state of the network voice 
traffic are much slower than those in the data traffic. 

Finally, the sensitivities of suitably defined voice and data revenue measures 
with respect to link capacities (or number of node transceivers), voice loads, 
and data loads were evaluated via the knapsack approximation and shown to be very 
close to the actual values (refer to Tables 21 and 22). Again, these approximate sensitivities 
are much more computationally efficient than the cumbersome (and usually prohibitive) 
exact expressions. Actually, as our results establish, there will be almost negligible loss 
in revenue when voice-control schemes use these approximate sensitivities in place of the 
exact ones. 

With the help of the aforementioned revenue sensitivities, important practical prob¬ 
lems of allocating additional network resources in response to increasing voice and/or 
data network traffic demand can be easily handled with our approach, as well as problems 
of data routing in which the derivatives of the data delay (or the probability of queueing) 
are used by standard optimal routing algorithms. In this context near-optimal schemes for 
the joint voice admission control and data routing can be derived for both single¬ 
rate and multi-rate networks. This can also be accomplished for ner.r-optimal schemes for 
joint call set-up and data routing. The range of applications of this methodology 
actually includes single-rate and multi-rate networks, wired or wireless (radio) networks, 
as well as high-speed networks. 

It should be noted that, as summarized in Table 23, the computational effort required 
for the knapsack zind Pascal approximations and the Monte-Carlo summation method 
compares very favorably with that necessary for the evaluation of the exact expressions. 
The reduced complexity permits the use of the approximations of this report for on-line 
optimization purposes. 

1.1. Outline of the Report 


5 



The report is organized as follows. In Section 2, the network models, the source 
model for voice and data traffic, and the cost function together with the individual per¬ 
formance measures for voice and data of interest are described in detail. In Section 3, the 
steady state probabihty distribution of the voice state over the entire network is derived 
and the evaluation of the probability of voice-call blocking and of data-packet queueing 
is discussed. In Section 4, fovur approximation methods for evaluating the probability of 
voice blocking are reviewed, namely, Kelly’s, knapsack, Pascal, and Mitra’s. In Section 5, 
the knapsack approximation is extended and applied to the probability of data queueing. 
Subsequently, in Section 6 the Pascal approximation is extended and applied to the prob¬ 
ability of data queueing. Following is Section 7 with the application of the knapsack and 
Pascal approximation techniques to the average data packet queueing delay. In Section 8. 
the Monte-Carlo Summation method is described in detail for the evaluation of the prob¬ 
abilities of voice blocking and data queueing. In Section 9, the knapsack approximation 
method is applied to voice admission control problems. In Section 10, the sensitivities of 
suitably defined voice and data revenue functions with respect to the link capacities, voice 
loads, and data loads are evaluated via the knapsack approximation. In Section 11, the 
various approximations are compared to each other and to confidence intervals generated 
via the Monte-Carlo summation method; the use of the approximations in obtaining near 
optimal thresholds for admission control is also described. Finally, in Section 12 several 
conclusions are drawn from this study. 


6 






2. SYSTEM MODEL FOR THE JOINT VOICE ADMISSION CONTROL 
AND DATA ROUTING PROBLEM 

In this section we present the network and traffic models of interest in chis study. A 
general purpose multi-hop multi-rate-voice/data network model and a voice/data multi¬ 
hop radio model are described first, followed by detailed models for the voice and data 
traffic, and by the definition of suitable {>erformance measures. 

2.1 Network Model 

In both network models FDMA (frequency division multiple-access) is the multiplexing 
technique used; thus frequency channels (rather than time slots) are used to carry the 
packetized traffic (voice or data). Circuit-switching is the primary mode of communication 
for the network (for voice traffic), whereas packet-switching is used for data traffic. 

2.1.1 General Multi-Hop Multi-Rate Network Model 

The network we consider can be defined by a triplet (A/", £,c) where AT is a set of 
nodes, £ is the set of all possible directed hnks (each directed link / connects two nodes 
in A/") and c = [cj,/ € £]ix|C| is the (row) vector containing the capacity (number of 
channels) c/ for each link / € £, where \C\ denotes the number of elements in set £. The 
set of consecutive links directed from source node n to destination node m constitutes the 
path p; we denote by V the set of all such paths; similarly Vi denotes the set of all paths 
that use link /; i.e., 

p, = {p€P|/€p}, UC 

and is used frequently in our analysis. The routes followed by the network traffic are 
chzuracterized by the |£| x \V\ routing matrix A whose elements Aip = 1, if the p-th path 
(p € P) uses link / (/ € £), and Aip = 0 otherwise. 

2.1.2 Multi-Hop Radio Network Model 

The notation is basicaJly the same as in tne previous section. However, in this model 
(motivated by the work of [11]), the number of transceivers at each node is the important 
resource instead of the capacity of the links of the previous section. Let T„ denote the 
number of transceivers at node n (n € Af)- The vector of node trzinsceivers T = [T„,n € 
ATjix|A/'| replaces c defined above. Moreover, instead of Vi defined above, the set Vn defined 
as 

"Pn = {P € T I n € p}, n e Af 

and denoting the set of all paths p intersecting at node n appears frequently in our analysis. 


7 




2.2 Source Models 

2.2.1 Multi-Hop Multi-Rate Network 

We assume that the data packet and voice call arrival processes from outside the 
network with originating node n and destination node m are Poisson distributed with 
rates and respectively. Moreover, Ff (F®) denotes the data (voice) flow in hnk 
/, Fy (F®) denotes the data (voice) flow input from outside the r'^Jtwork to path p, pf is 
the data service rate on the 1-th link (/ € C), and /x® is the voice service rate on the p-th 
path (p € V). The units of all these quantities (arrival and service rates) are packets per 
sec. 

Since the network we are considering is of middle-size or larger and the data traffic 
loads are moderate to heavy, we may assume that Kleinrock’s independence assumption 
holds for data. According to this approximation, which has been verified through simu¬ 
lations for networks with data-only traffic, the data-packet serial arrival process at each 
link, which includes both arrivals from outside the network, as well as packets forwarded 
by upstream nodes, can be accurately approximated with a Poisson process independent 
of the interaction taking place inside the network among the various nodes (queueing and 
servicing). For a multi-media network this assumption/approximation for the data traffic 
has not been verified but we expect it is valid for moderate to large size networks. In 
particiilar, we expect it to be valid for scenarios characterized by voice traffic that changes 
much slower than the data traffic; because eis elaborated in Section 2.3 below, in these cases 
we can condition on the state of the voice traffic and work with conditional performance 
measures for the data traffic. 

Two models are considered for data traffic. In the first, the packet length is exponen¬ 
tially distributed, resulting in an M/M/c queueing model, where c is the number of servers 
(channels) available for data. * The mean packet length is denoted as secs). In 

the second, the packet length is a deterministic constEint resulting in an M/D/c 

model. 

The length of voice calls is exponentially distributed with parameter /i®„,. Actually, 
we assxime that every call is composed of active and inactive (silent) periods which are 
exponentially distributed with pariuneters a and ^3 (in sec~*), respectively. The mezui 

* The number of channels available for data depends on the number of voice calls in 
progress. 


8 






diiration of active periods is 1/a (secs) and the mean duration of inactive periods is Ijfi. 
The speaker “activity fraction” is defined as and typically takes the value 

0.4 for normal conversational speech (in half-duplex mode). In full-duplex mode, the value 
40% is valid for the activity of each of the source and destination nodes, in the sense that 
40% of the time each node talks and another 40% of the time it hstens to the other side 
talking. Therefore, the assigned circuit for the voice call remains occupied for 80% of the 
time; an intermediate node will be in transmit mode 80% of the time, i.e., 40% of the 
time transmitting in the "downstream” direction and 40% of the time transmitting in the 
"upstream” direction. The quantity ^/(a -f /9), and its complement with respect to 1, 
i.e., the spezdcer silence fraction a/(a 4- /9), enter in the key expressions for the probability 
distribution of the state of voice calls in the network (see Section 3). 

Under the model of the previous paragraph, the rate of active arriving calls is 
+ $) and the rate of inactive arriving calls is F^^a/{a + 0)* ; an active call 
turns inactive with rate a and a silent call becomes active with rate 

We assume that the portion of the channel capacity (the time-vsirying number of 
channels c in the M/M/c and M/D/c queueing models) left unused by voice calls is used 
by data users. This represents a very desirable situation with the most efficient use of 
chzmnel resources but not necessarily an easy one to achieve. It is required that the status 
of all voice conversations using a link is monitored and that this information is fed to the 
data users that have access to that link so that they can use the chemnel; they must however 
stop using the channel once the next talkspurt begins. If the silent period is less than a 
packet length and thus the data message must be interrupted by the resumption of the 
voice call, we may assume that the data message completes its packet transmission before 
the voice call resumes; since the paurket length is so much smaller than the typical length of 
the voice conversation (or even the length of a talkspurt), the effect on the resumed voice 
conversation is anticipated to be negligible. 

In systems that cam not taike advamtage of voice call silent periods, adl cadis axe aissumed 
to be active throughout their duration. Under this model it is commonly accepted that the 
probability of blocking remains relatively insensitive to the specific form for the probability 

* Although it would be more reaisonable to aissume that all calls are active when they 
arrive, the aissumption that they may be in either the active or the silent mode simplifies 
the mathematical model, while resulting in little impact on numerical results. 


9 





distribution of the duration of voice calls [17] and it basically depends only on the mean 
of call length With this simpler model the entire analysis is also simplified and 

can be obtained as a special case of the analysis for the two-state (active, inactive) voice 
call model presented in the following sections. This translation requires that we set a = 0, 
^ = 1, that the number of inactive calls denoted by n* is set to 0 in all equations of the 
subsequent sections which involve it, and that we use the conventions 0! = 1 and 0° = 1. 

It is assiuned that the bandwidth of each of the channels comprising the links of the 
network is equal to the data rate (in bits per sec) of the data traffic and is obtained from 
the data packet arrival rate (in packets per sec). Thus the capacity c/ of any fink /(/€£) 
represents the ntimber of channels and is an integer. For voice traffic we consider single¬ 
rate and multiple-rate scenarios. In the single-rate case all voice calls have identical data 
rate (denoted by r) and require the same bandwidth for transmission. In the multi-rate 
case we assume that all voice sources using path p have data rate as in (6). The values 
of r and Vp used in the following sections are normalized with respect to the bandwidth of 
a single channel. These normalized r and Vp are not necessarily integers. 

At this point let us clarify that by using the multi-rate traffic model of the previous 
paragraph we can model multi-class voice traffic. Thus, voice traffic of several different 
quality specifications (such as fully compressed, partially compressed, or imcompressed 
voice, secure voice etc.) and bandwidth requirements can be modeled. Indeed, all we need 
to do is to characterize the paths p € "P not only by the collection of consecutive links 
included in them, but, also by the (possibly) different data rates of voice traffic that 
flow through them. In this way more than one element of V may follow the same physical 
path (route) inside the network but carry different amounts of information (have different 
data rates). Finedly, the multi-class traffic of the above model need not be limited to 
voice only; traffic types requiring higher bandwidth than voice, such as video of different 
bandwidth requirements and rate variabilities [such as video telephony (teleconferencing) 
with medium high variable rate or full-motion video (television) with high variable rate] 
can also be dealt with in the same manner. 

Since voice cedis can be blocked but can not tolerate delay whereas data can be delayed, 
we assume that voice has priority over data. Data arrivals axe routed in a packet-switching 
manner so that the input data flow in each node is separated into several subflows and 
each subflow takes a different path to its destination. Each voice call, after being admitted. 


10 








is allocated a channe l along a fixed multihop path to its destination in a virtual circuit 
manner, that is, once the path is chosen, the call uses only this path to transmit until the 
call is finished. 

On the other hand, data messages (following a M/D/c) traffic model) can use only 
the residual capacity c|, that is the portion of the link capacity C( that remains unused 
after t^e active voice calls on paths emplo}ring link / have occupied the necessary number 
of r mnels. The appropriate expression for the data link capacity cj is provided in Section 

2.4.1 below. 

An alternative model that always guarantees that a portion of the capacity of each 
link is allocated to data conunumcations is also considered in this report [refer to equation 
(7.17) of Section 7.3]. 

2.2.2 Single-Rate Multi-Hop Radio Network 

The model for voice calls for the radio model of Section 2.1.2 is similar to the one 
described above, except that we address only the case in which a single-rate model for all 
calls is adopted, that is, 

rp =: r = 1 for all p € 7^. 

Also data messages use the same data rate as voice calls. 

For the data traffic we \ise an M/D/cJ model where the number of data messages that 
can be transmitted simultaneously over link I = (n,m) (connecting nodes n and m) is 
limited by the residual capacity c} of the link; that is, the remaining number of channels 
once the active voice calls have occupied the necessary tramsceivers at nodes n and m. The 
appropriate expression for the residual capacity is given in Section 2.4.2. Data packets are 
queued at buffers available at the nodes. The above M/D/c model assumption can not be 
fully justified here as it was done for the general wired network of Section 2.2.1., because of 
the need to coordinate the transceivers at the two nodes of each link. A radio network will 
most probably use some more complicated access protocol for the data traffic, resulting in 
arrivals to intermediate data links (or nodes) which are not Poisson. Therefore Kleinrock’s 
independence assumption is less likely to be valid in a radio environment. However, the 
simple M/D/c model enables us to evaluate the accuracy of the approximations described 
in this report without having to evaluate complicated protocols for the data traffic. For 
different protocols than the M/D/c, certeiin conditionid probabilities pertaining to data 
behavior [which are conditioned on the number of ongoing (active) voice calls] will have 


11 











to be uned instead of the M/D/c formulas; except for this change the basic steps of our 
approach are applicable to these cases as well. A more detailed discussion of this issue is 
provided at the end of Section 2.4.2. 

An alternative model that always giiarantees that some transceivers (and thus some 
hnk capacity) are dedicated to data traffic is also considered in Section 7.3. [refer to 
equations (7.18)-(7.19)]. 

2.3 Cost Function / Performance Measures 

The performance measures of interest to our study are: 

(i) the probability of blocking of calls Bp along each path p (p € V), as well as its 
average over the voice arrival process at all paths, B, 

(ii) the probability of queuing data Qi at each link / (/ € C), as well as its average 
over the data arrival process at all links, 

(iii) and the average queueing delay of data Wi at each link / (/ € £), as well as its 
average over the data arrival process at all links, W. 

The first of these quantities Bp is defined as the probability that an arriving call of 
class p (i.e., destined to follow voice path p) finds all available channels busy at one or 
more links on path p, and is therefore blocked. A precise mathematical definition of Bp is 
provided by equation (3.12b) of Section 3 as the quotient of two normalization constants. 
The quantity Qi is the probabiUty that a data packet arriving at hnk / finds all channels of 
that hnk busy and is queued, and Wi is the average delay at the queue of link / experienced 
by a typical data packet. Since Wi provides only the average vedue of the delay and the 
distribution '>f the delay is very difficult to obtain, we also provide the probabihty of 
queueing Qi (which is easier to obtain) in order to supplement the information given by 
Wi about queueirg at link /. Links are considered in isolation here because of Kleinrock’s 
independence assumption, which we assume is valid for the data traffic; this is discussed 
in more detail below. 

The aforementioned average quantities B, and W are defined by 


ft Upev Pp^p 

(2.1a) 

^peT Pp 

^ T,ecPf ’ 

(2.16) 


12 






and 


= (2.1c) 

respectively, where the utilization factors for voice and data traffic (p^ and pf), are defined 
in equations (2.7) and (2.8) later in this section. 

The cost function C of interest to problems of joint admission control and data routing 
(or joint voice and data routing) consists of weighted sums of B and (j or of B and U'. 


that is. 

C = KiB + K2Q 

(2.2a) 

or 

C = A'lB -1- K 2 W 

(2.26) 


where K\ + K 2 = \ and Ki,K 2 > 0. Therefore, in order to perform any optimization 
involving the above cost functions we need to have expressions (closed-form or accurate 
approximations) available for the probability of voice blocking (B), the probability of data 
queueing (Q), and the average queueing delay of data [W). Since such computations are 
typically invoked many times dtuing optimization the evaluation of the exact expressions 
(or the approximations) should be computationally efficient, otherwise optimization is not 
computationally feasible. 

Let us revisit now Bp, the performance measme for the voice calls. Since voice calls 
have preemptive priority over data, the performance of voice calls is not affected by the 
data; consequently, the well-know': product-form solution of the probability of blocking 
([3], [4]) is valid. The difficulty in evaluating Bp of course lies in the computational 
complexity of the expression for the probability of blocking. Our approach here is to 
consider approximations to the probability of blocking that are asymptotically accurate 
under specific limiting regimes. Although Bp is of greatest interest in most applications, 
two additional voice blocking probabilities are also used: Bip (approximations to it are 
denoted by Lip in Section 4), the probability that the capacit/ of link / along the path of 
a voice call of class p {p € V) is not available [whose precise mathematical definition is 
given in (3.12a) as the quotient of two norma:iLc^xion constants]; and B/, the probability 
of blocking of voice calls due to unavailability of the capacity of link / (/ € C). Both Bp 
and B; are approximated with the help of Bip\ details are provided in Section 4. 


13 





Next consider Qi and Wi, the performance measures for data. Since the states of data 
at different hnks are dependent—for example, for all hnks on the path of a voice call the 
data states depend on the state of calls of the path and as such are mutually dependent—it 
is not possible to consider Qi for hnk / without the couphng with the other li nks . To obtain 
Qi (/ € £) we have to consider the state of all links at a particiilar time, which is very 
difficult when the output data process of each link is not Poisson. 

To facihtate the analysis of data we need an additional assumption (beyond Kleinrock’s 
independence assiimption). Since the state of voice calls changes much slower than the data 
states, we assume that data can reach steady-state during the sojourn time of calls within 
a particxilar state. The validity of this assumption has not been verified via simulation; in 
the future, we plan to check the accuracy of this approximation via simiilation, at least 
for small-size networks with voice and data traffic. However, a similar assumption has 
been made in [14] for the analysis of Voice/Data (VD) Interleaved-Frame Fixed-Length 
(IFFL) protocols in the context of movable-boundary channel-access schemes for integrated 
voice/data networks. It was shown that this assumption is pessimistic at moderate to 
high throughput levels. VD-IFFL protocols work with time-slotted networks, and use 
reservations for the voice traffic and IFFL (which combines reservation with contention) 
for the data traffic. Under the above assumption and the aforementioned Kleinrock’s 
assumption (discussed in detail in Section 2.2.1) we can examine eetch Unk in isolation and 
consider M/M/c' or M/D/c' models for the data conditioned on the state of the voice 
taking on a particular value. 

2.4 Basic Notation 

The notation introduced here is used in all subsequent sections. However, additional 
notation is introduced in each section as necesszu'y. In this section attaching an “a” or a 
“b” to the number of an equation respectively signifies the single-rate or the multi-rate 
genersd (not necessarily radio) network scenarios; attaching a “c” signifies a single-rate 
radio network with transceivers at the nodes. 

2.4.1 General Multi-Rate Multi-Hop Network 

The system state is described by a triplet that contains global (networkwide) infor¬ 
mation in the voice state, along with local information on the data state at one particular 
link. 

Denote the state as where 


14 





= number of calls taking path p in the system, p 6 V]m\-p\ 

Nf = [n* : n* = number of calls in silent phase out of n" calls, p € T’IixIT'I 

nf = number of data messages at link / 

Thus the number of ongc^g voice calls along the paths (circuits) and the number of 
data messages along the links are the network states of interest to this report. System 
performance must be evaluated for each of the £ links in the network. Links can be 
considered in isolation because of Kleinrock’s interlink independence assumption (discussed 
at the beginning of Section 2.2.1) and the additional assumption about the state of voice 
varying much slower than that of data (cited at the end of Section 2.3) which decouples the 
variations of data traffic from voice traffic and gives meaning to Kleinrock’s assumption 
for the conditional data traffic (conditioned on the voice state). We reiterate here that 
it is not necessary for the validity of our approach to consider the data links in isolation; 
we do it because it simplifies the computations (at least with respect to the data part) 
and allows us to test our approximations for performance measures (for data traffic) which 
are available in closed form (when conditioned on the voice state). Om approach can be 
extended to apply to performance measures (for data) which reflect the interaction between 
several data links; however, this requires additional computational complexity. This issue 
is discussed further in Section 2.4.2. 

Note that \P\ denotes the number of the elements in set V, i.e., it is the number of 
call types and thus the number of paths, N” and N* are l'P|-dimensional vectors, and nj* 
is a scalar. Denote the set of all possible (N '',N*,nf) for the single-rate case as Q, where 


D = 


(iV^iV^n}')|0 <n;<n;,0<n;< Cp/r,p € 7>; < c,/r, / € £ i (2.3a) 

P€7>, J 


where Cp = min {c/, / € p} denotes the capacity of path p, and Vi was defined in Section 
2.1.1. The terms Cp/r and c//r in (2.3a) represent the 8u:tual niunbers of voice channels in 
Cp and Cl] recall that the link capacities c/ are normalized to the data traffic rate and thus 
represent the maximum number of data channels, and division by r (the voice data rate) 
is required in order to provide the corresponding number of voice chzinnels. 

Actually, the intuitive constraint 0 < n" < Cp/r for p € P, which guarantees that the 
number of calls on path p does not exceed the (voice) capacity of path p defined as Cj, = 


15 








mm{c{, / 6 p}, is satisfied whenever the more powerful constraint ^ ^ ^ 

is met. Therefore, the necessary (with the minimum ntimber of constraints) form of fl is 


fi = I < n; < n;,p 6 7>; 5 ; n; < c,/r, / € £ } . 

I pev, 


1 


(2.3a') 


Note that in the m\ilti-rate case Q. becomes 


«=|(iV*,iV',nf)|0<n;<n;,0<r,n;<c„p€7>;5]r,n;<c,, /crj. (2.36) 

The following additional notation is used in subsequent sections. In the single-rate 


case 


„ A -y " „ 

p€Vi 

p£Vi 


(2.4a) 

(2.5a) 


denote the total number of calls and “silent” calls, respectively, that use link /; both n* 
and n* are clearly integers and satisfy the inequalities 


0 < n' < n" < c/. 

The corresponding definitions in the multi-rate case are 


= 51 ^p^p 

(2.46) 

p€V, 


kf = Yp 

(2.56) 

p€V, 



where kf and kf now denote the total number of channels occupied by all calls and by the 
inactive (silent) calls, respectively, on link /; clearly these must satisfy 


0<kf < kf < Cl. 


Since, the voice data rates may not be integers, kf and kf may assume non-integer 
values as well. 


16 





Moreover, nf (the number of data messages at link /) follows an M/D/c| model with 


residual data capacity 

cj = ci - (nf - nf) 

(2.6a) 

for the model of (2.3a) or 

cj = c, - (if - kt) 

(2.66) 

for the model of (2.3b). 



Finally, since F and p appear in the form p = F/p in 

all the formulas derived hereafter, 

we can simply use the variable 


(2.7) 


pi = Ff/pf 

(2.8) 


Pi=12 Pi 

p€Vi 

(2.9) 


.V _ j^d I V 

Pnm ~ ■^nm/ “nm 

(2.10) 


pirn = fim/pim 

(2.11) 

and 

Pi„= E P’r 

(2.12) 


p€^nm 


2.4.2 Single>Rate Multi-Hop Radio Network 

In this model, the link capacities C| (/ £ C) are replaced by the ntunber of transceivers 
at node n, Tn (n € A/"). The key sets of paths Vi(l ^ C) are replaced by the sets n ^ 
Now the number of calls n" of class p (along path p, p € 'Pn) satisfies the constraints 


J2n;<Tn, n € AT (2.3c) 

P^Vn 

instead of (2.3a) or (2.3b), and the residual data capacity of link I = (n,m) connecting 
nodes n and m is 


Cl = min < 


- E ("J - - E ("J - "J) 1' 

p€T„ p€T„ J 


/ € £, n,m 


(2.6c) 


17 


This formulation implicitly assumes that all transceivers at nodes n and m that are not 
currently supporting active voice caUs are available to support data traffic between nodes 
n and m. Thus it neglects the possibility of data traffic between either of these nodes and 
their other neighbors. Therefore, Eq. (2.6c) should be accepted with reservation and only 
as representative of the simplest data model that we can handle with our approach. 

In a more realistic scenario the performance measure for the data operating under 
a particular protocol over link I = (n,m) (connecting nodes n and m) depends not only 
the Tn and Tm of these nodes and the total number of active voice calls 
and ~ corresponding values of these quantities for all the 

neighbors of the nodes n and m. Thus the residual capacity / = (n, m) depends on the 
way in which the unused transceivers at nodes n and m are allocated to support data links 
with their other neighbors as well. 

To determine this residual capacity one must very carefully enumerate all i>ossible 
pairs of transceivers that are occupied by voice traffic for eawrh voice state, and then use 
a (not yet defined) protocol to determine how the unused transceivers are to be allocated 
to support data traffic between the pairs of users. Typically, a transceiver may be paired 
with several of its neighbors (one at a time) to form a link-activation schedule, in which 
case the data-traffic queueing model will have to be revised to reflect the fact that the 
server is not always available (as in a queueing system with vacations). As long as this 
allocation depends only on the voice state (i.e., not on the data queue sizes at each node), 
our formulation that addresses the data state at each link in isolation remains valid. 

Once this allocation is made, the performance measure of interest can be thought as 
a functional which depends on several terms of the form ~ where n is an 

immediate neighbor of n or m. If the number of neighbors of the nodes n and m is small 
then we can use the approsw:h of Section 9.2 (based on eulditional conditioning) to average 
the performance measure for data with respect to the steady state distribution of the voice 
state vector. If the number of neighbors of n and m is leirger, we may use the approach of 
Section 9.3 (based on fictitious links) to carry out this averaging. 

In this report the M/D/c model of (2.6c) is sufficient for establishing the accuracy 
and computational efficiency of the knapsack and Pascal approximation techniques for a 
first application to integrated voice/data radio networks. In the future we will apply these 
techniques to more complicated data protocols. 


18 





3. STEADY-STATE DISTRIBUTION FOR THE SYSTEM STATE 


In this section we provide the steady-state distribution of the state of the network, 
that is of for the single-rate and multi-rate cases under the assiimption that 

the the state of voice calls changes much slower than the state of data. 

Proposition 3.1. When the state of voice calls changes much slower than the data-packet 
state, the stea^ly state probability of can be closely approximated by 


PiK\N\nf) = PiN^N') • Pinf\N\N*) 


where 

(a) the steady state probability of the voice is 


P€V 





and 


G= E n 






for 


(3.1) 


(3.2) 


(3.3) 




{K\K’) 

'{N\N^) 


0 <n* <n",peP;0<n}’<c,, /€£> 
0<n;<n;,peV;0<k]’<c,, UC 


single — rate case 
multi — rate case 

(3.4) 


(b) the conditional steady state probability of the data for an M/M/c model is 


where 


P{nf\N\ir) 


Po 


Po 



ifll 


■' c! 


cjJc 


nf < cj 
nf > c\ 



19 


(3.5) 


(3.6) 









/>; = and 

, _ r C( — nf + nf > 1 single — rate case 

~ \ Cl — kf + k* > 1 multi — rate case 

Note that 

P(nf = oo\N”.N*) = 1 when cj = 0, or cj > 1 but pf/c'i > 1 


(3.7) 


(3.8) 


i.e., the data-packet queue becomes infinite when there is no residual capacity for data or 
when the offered data load of the link exceeds the residual link capacity. 


(c) the conditional steady state probability of the data for an M/D/c model can not be 
obtained in closed form but can be approximated with arbitrary accuracy using Tijms* 
iterative algorithm (see [13]) on a M/D/cJ system (recall cJ = c/ — kf + kf); the procedure 
is sketched in Appendix B. 

Proof: The proof of the main result (a) is provided in Appendix A. 

Comments: 

1. Note that the expression for E<1- (3-2) is a modified version of the 

traditional product form for the steady state probability of the voice state. In the more 
frequently studied rase, in which the occurrence of silent periods is not addressed, we have 
(see for example [4] or [6]) 


pev p' 


(3.9) 


where 


G = 


E n 

p€T 


n-! 


(3.10) 


is the normalization constant associated with the state space 





0 < ripp 6 ^-,0 < < Cl, 

p£Vi 


lec). 


(3.11) 


The reason that we need instead of the usual P{N,'’) is that we assume that 

silence periods of voice calls can be detected and the data traffic can use the released 
bandwidth, thus increasing the overall efficiency of the resotirce allocation. 


20 




2. Under the M/M/c data model and a single-rate network, (nf corresponds 

to an M/Mf Cl ~ n\ + n* system when c\ = c/ — n® -h n* > 1 and pf/c\ < 1, whereas 
Pr(nf = oo|A*’*'. N‘) = 1 when cj = 0 or cj > 1 but p//c\ > 1. The same is valid for 
(nf jiV*'. N*) imder an M/D/c/ — n" -f n* data model. For the multi-rate case we only need 
to replace n" and nf by and k/ in the above comments. 

3. The probability of voice blocking at link / of a call of class p (Bip) can be expressed 
([4]-[6]) as the ratio of two normalization constants (also termed partition functions) G 
defined in (3.10); specifically, the probabihty that such blocking does not occur is 


1 — Bip = 


Gici,C 2 , • • • - rp,ci+i,- ■ ■ ,cc) 

G(ci,C 2, - • • ,C/_i,Cj,C/+i, • ■■ ,Cc) 


(3.12a) 


where the normalization constants G of (3.10) are denoted as functions of the 1 x \C\ 
row vector of hnk capacities c. The right-hand side of (3.12a) represents the steady- 
state probability of the vector of the number of voice calls over all paths of the network, 
when a single (voice) channel is removed from link / (and thus its capacity decreases 
to Cl — Tp). This is indeed the probability of no blocking because a new arriving caJl 
(requiring bandwidth Vp) can be accommodated by the link capacity. The evaluation of 
Bip in (3.12a) requires the computation of the normalization constant G of (3.10). This 
may be a very computationally demanding task even for moderate size networks, because 
of the large number of points in the state space over which the summation is performed. 
Therefore, accurate and computationally efficient approximations are necessary. Several 
such approximations have been developed under different conditions (limiting regimes) (see 
[4]-[10]). In Section 4 we review some of them and select to work vdth two: the knapsack 
and the Pascal approximations, which we extend and modify (in Sections 5 and 6) so that 
they apply to performance measures pertaining to the data such as the average probability 
of queueing and the queueing delay of data at the links of the network. 

Finally, Bp, the blocking probability for a call of type p {p € V, [4]-[6]), can be 
evaluated from the expression 


1-Bp = 


G(c-rpAj') 

G(c) 


(3.12b) 


where c was defined above and aJ is the transpose of the p-th column (a |£| x 1 vector) 
routing matrix A defined at the beginning of Section 2. Equation (3.12b) is similar to that 


21 





in (3.12a) with one major difference; in (3.12a) only the capacity of link / has been reduced 
by Tp (corresponding to availability of channel capacity along link / for an additional voice 
call) in the argument of the normalization constant G in the niimerator; in (3.12b) the 
capacities of all links / used by path p (I € p) have been reduced by Vp (corresponding to 
availability of channel capacity along all links / along path p for an additional voice call). 
The expression in (3.12b) requires about the same level of computational complexity as 
that of (3.12a); this becomes prohibitive for even moderate size networks. However, the 
approximations obtained for Bip in Section 4 can also be used (with proper modification) 
for Bp as well. 

4. The probability of data queueing at link / is given by 

Qi = Pr(data queued in link 1) 

= Pr{ci -rif < nf) 

= 1 - Pr{ct - + nf > nf where (n|’,n*) ^ (c/,0)) 

fcl-i 
[nf=o 

for a single-rate system; for a multi-rate system we must only repl£w:e the nf and n* 
by kf and k* defined above, respectively, in the above equation; I denotes the indicator 
fimction taking value 1 when its argument is true and 0 if it is false. Consequently, 
Qi can be evaluated directly from the conditionad steady state probabilities of the data 
•P(”fthe steady state probability of the voice P(iV*', jV*). However, the 
computational complexity of the summation involved in the definition of P{^'’,N^) [see 
(a) of Proposition 3.1] coupled with the additional summation necessary for obtaining Qi 
becomes prohibitive for large \V\. This computation is carried out through computationsJly 
efficient approximations in Sections 5 and 6. 

5. The queueing delay of data at link I can also be evaluated (actually approximated) 
using the basic results of this section. The detmls are provided in Section 7. 

6. The results of this section were derived for a generzd multi-rate multi-hop wired network; 
they are valid for the single-rate multi-hop radio network of Sections 2.1.2 and 2.2.2 after 
we replace c/ (/ € C) with T„ (n € AT), Vi with and set r-p = 1 for zill p € “P. 


P{N.\K‘) (3-13) 


22 










4. REDUCED-LOAD APPROXIMATIONS FOR THE VOICE BLOCKING 
PROBABILITY 


As disciissed in the comments following Proposition 3.1 in Section 3, the evaluation of 
closed form expressions for the probability of voice blocking at link I or along path p require 
substantial computer resources and time. In particular, when these expressions must be 
computed munerous times (i.e., for different control p>olicies), as is the case in a variety of 
optimization problems including admission control and routing, it becomes imi>erative that 
computationally efficient approximations are developed that exhibit satisfactory accuracy 
and allow the speedy evaluation of these quantities. 

In this section we describe a number of approximations that can be used to evaluate 
the probability of voice blocking with computational complexity considerably lower than 
that of the brute force approach. These are termed “reduced-load” approximations, and 
have been applied to mvilti-rate loss networks by a number of researchers [4]-[10] with 
very encouraging results. The term reduced-load pertains to a reduced- (or thinned-) load 
approximation of the traffic from all paths using a particular link, because of traffic blocked 
at other Hnks, and is discussed in detail in Section 4.2. The approximations are known 
to be asymptotically correct in the limiting regime characterized by heavy offered traffic 
loads and large link capacities. These approximations had not been applied to data traffic 
analysis before otir work in this report. 

In the context of the advancement of this approximation theory amd its applications 
to practical multi-media network problems, our main contribution elaborated upon in this 
report is fourfold. First, we estabhsh that two of these approximation techniques (knapsack 
and Pascal) exhibit satisfactory accuracy even when applied to situations different from 
those of the limiting regime; we actually show that they maintain excellent accuracy over 
the entire range of useful traffic scenjuios and sirchitectures. Second, we show how to use 
these approximations to evaluate performance measures for data (such as the probability of 
queueing for data and the average queueing delay for data) in networks with multi-media 
traffic. Third, we extend the application of these approximations to radio network models 
that are distinctly different from the multi-media networks of [4]-[10], which use optical 
fiber or copper as the transmission medium. Fourth, we apply these techniques to systems 
with admission control schemes and to the subsequent optimization of the thresholds or 
other control parameters involved. 


23 






The purpose of reviewing these approximation techniques here is twofold. First, as 
we show in Section 11 through comparisons with results based on the exact expressions 
and the Monte-Carlo summation method, these techniques have satisfactory accuracy and 
we can use them to approximate the average voice blocking probability of Unks or 
paths (routes) for radio networks of interest to our project. Second, we need to introduce, 
motivate, and describe the fundamental principles of these techniques before we extend 
and modify them in order to approximate the average probabilities of queueing and 
the average waiting delays of data at the links of the network. These extensions are 
described in detail in Sections 5, 6, and 7, and enable us to approximate accurately and 
with reasonable computational complexity important performance measures for the data 
in multi-media networks. 

In this section we describe the principle of four of these approximation techniques: 
Kelly’s, Knapsack, Pascal, and Mitra’s approximations. We Umited our consideration to 
these four for two reasons. First, these four axe the ones that have been applied most 
successfully to a variety of networking problems with very satisfactory results. Second, we 
were able to extend and modify two of those (the knapsack and Pascal approximations) to 
accommodate performance measures for the data (such as average probability of queueing 
and average queueing delay). Kelly’s approximation ([4]-(5]) was included in this review 
because it is a useful starting point for introducing the notation and the principle of the 
reduced lozwl approximations. Mitra’s approximation wais included because we considered it 
early during the course of this work, we extended its application to more general topologies 
than the tree network of the original paper [10], and we extended and modified it so that it 
applies aJso to the probability of queueing and the queueing delay of data. Unfortunately, 
as we found out through comparisons with the exact expressions and the Monte-Carlo 
summation method, this approximation is accurate (actually converges) only under rather 
restrictive assumptions about the loads of the links aind thus it is not presented in greater 
detail in this work. 

4.1 Kelly’s Approximation 

Consider a network supporting multi-rate traflBc (say with data rate Vp for path 
p e V). Denote by Li the approximate probability that “all circuits are busy on the 
link or equivalently the probability of blocking for link I (1 € C). Under the assump¬ 
tion ([4]-[5]) that these events occur independently from link to link, class p connections 


24 






(voice calls vising path p) arrive to link / according to a Poisson process with offered load 
Tfi' ~ arriving traffic at link I (belonging to all classes 

p € P) is also Poisson with aggregate load 

En d-M''- ( 41 ) 

p€V, t€p,t^l 

where the expression represents the “thinning” or “reduced load” effect 

associated with the blockage of calls of type p at the other links along the path. Hence, 
under the link independence assvunption, we must have 


Li = E 


p£Vt 


lec 


(4.2) 


where 

/>”/»! 

is the Erlang loss formula (see [1] or [4]). In the above notation we used Li instead of Bj to 
distinguish between the exact value of the voice blocking probability and the reduced-load 
approximation Li. If rp = r for all p € P, then (4.2) becomes the standard reduced load 
approximation for single-rate loss networks. 

Repeated substitutions are often used for finding a solution (Li,L 2 ,• • • ^I'\c\) the 
fixed-point equation (4.2). Although oscillation can occur in (4.2), repeated substitutions 
typically converge to a fixed point for networks of practical interest. One of the featvu-es 
of this approximation scheme is that (4.2) has a unique fixed-point solution. The proof of 
vmiqueness relies on the monotonicity properties of the Erlang loss formvda; unfortunately, 
these properties are not possessed by the knapsack and Pascsd approximation schemes 
discussed below. 

Once a fixed point is foimd, the probability Bp that a call is blocked along path p (or 
equivalently a class-p connection is blocked as we saw in the discussion of Section 2.2) can 
be approximated by 

1€P 

a formvda that invokes again the link independence assumption. 


25 







The above approximation is asymptotically accurate (correct) imder the following 
limiting regime: the ratio of offered load and of the number of channels in each link is held 
fixed while the individual values of these two quantities become asymptotically large. 

4.2 Knapsack Approximation 

For this approximation scheme as well as the one of the following section we work first 
with a single-Unk multi-rate system and then extend the result to multi-hnk networks. 

This technique is termed the knapsack approximation because the single-link multi¬ 
rate system corresponds to a stochastic knapsack resembUng the knapsack model in combi¬ 
natorial optimization. The term stochastic knapsack is motivated by the fact that typically 
the system modeled resembles a knapsack to which items (states) are added or from which 
items are taken out according to a probability distribution. This approximation was suc¬ 
cessfully applied to circuit-switching problems by Ross [6]-[9]. 

Consider a single-link system with link capacity c/, which supports classes p € Vi 
(or eqiiivalently several paths p use link /) with data rates and offered loads pp. The 
probability that a class-p connection is blocked (or a voice call along path p is blocked), 
when arriving to the stochastic knapsack, is given by 

p", q€V,] = l- p€V, (4.5) 

where 

w(n) = - rgp^w(n - r,), n = l,2...,c/ (4.6a) 

” qe-Pi 

with initial condition 

«;(0) = 1. (4.66) 

The intviitive explanation of (4.5) is that 1 — A'lp represents the probability of no blocking, 
i.e., the probability that up to c/ — (/ 6 p) voice calls are in the system (inside the 

stochastic knapsack) so that an arriving cedi (requiring Vp chzinnels) can be accommodated 
by the cap8w:ity of link / without being blocked. In (4.5) w(n) provides the probability that 
n voice calls are currently in the system, and the recursion (4.6a) for the update of w(ti) 
is typical of stochastic knapsack system models. 

For a multi-rate loss network with multiple links, we denote by Lip the approximate 
probability that “less than Vp channels are available on link T (probability of voice blocking 


26 








on link / along path p); Lip is an approximation to the quantity Bip defined by (3.12a) 
in Section 3. As in Kelly’s approximation, we again assume here that these events occur 
independently from link to link. This approximation decouples the blocking phenomena 
on different links and enables the evaluation of an approximate expression for the amount 
of unblocked traffic traveling through the network and finally for the desired blocking 
probabihty. Under the interhnk blocking independence assumption, class-f connections 
arrive to link / according to a Poisson process with offered load 

p", n 

This load is termed thinned or reduced, because it is smaller than the corresponding load 
p" (from circuit p) of the link / (for / € q), when considered in isolation, in a manner that 
reflects the effect of blocking at the other links in the network through the approximate 
probabiUties This aspect of the approach gives the name reduced-load approxima¬ 
tion to the knapsack approximation method (as well as the Pascal approximation method 
described in Section 4.3). Consequently, imder the link independence assumption, we have 

Up = K,,[c,; p", n <1 - « S ^'1’ P S ' S £• (4.8) 

Ek}uations (4.8) define a continuous mapping from the compact convex set 
[0, I into itself; thus, by the Brouwer fixed-point theorem, there exists 

a solution {Lip, p £ Vi, I = 1,2, - ^ICj) to (4.8). The method of successive approx¬ 
imations (i.e., repeated substitutions) can be employed to find such a solution. Once a 
solution to (4.8) heis been obtsuned, the probability of blocking a class-p connection can 
be approximated by 

i€p 

and the probability of blocking any voice call on link I can be approximated by 

Bi=J2 ( 410 ) 

p£V, 

In contrast to the fixed-point equation (4.2) the solution to (4.8) of the knapsack ap¬ 
proximation is not necessarily unique. This is because the knapsack equations (4.5)-(4.6) 


27 










do not have the nice monotonicity properties of the Erlang formula (4.3). Multiple solu¬ 
tions to the fixed-point equations of (4.8) can alert the designer of potential instabilities 
in the network. Ross [6] provides an example where the network alternates between long 
periods of carrying only narrowband coimections and long periods of carrying only wide¬ 
band connections. Kelly’s approximation does not expose this instability, since it always 
gives rise to a imique fixed point. But the knapsack approximation gives oIi^.. solution with 
almost 100% blocking of narrowband coimections and another solution with admost 100% 
blocking of wideband calls, which reflects the instability that actually exists in the system. 

The knapsack approximation is shown in (6] and [8] to be asymptotically correct un¬ 
der the same limiting regime as Kelly’s approximation (see end of Section 4.1). However, 
compsLcison of the accuracies of the two approximations, the exact expressions, and the 
Monte-Carlo summation method indicate that the knapsack approximation maintains sat¬ 
isfactory accuracy even far outside the limiting regime. 

4.3 Pascal Approximation 

The Pascal approximation technique is based on the use of a birth-death process with 
Pascal distribution to model the voice state in the system. This was applied to circuit- 
switched problems by Ross [6]-[9]. 

We again address first the case of a single link. Consider a birth-death process on 
the state space 0,!,•••,c/, which, when in state n, has a death rate of n and a birth 
rate of + n(l — c/<r^), where c and axe given positive numbers. Let q{n), for 

n = 0,1, • • •, c/, be the equilibrium probability of being in state n, that is, q{n) satisfies 

»^9(") = + (” - 1)(1 - c/o'^)]g(” - 1), for n = 1,2,••• ,ci (4.11a) 


where 


Denote 


^9(n) = 1. 

n=0 


Ct C f-T p 

P/p(c/-,c;a^) = ^ 9(") = 1 - 9(«)- 

n=ci—Tp-fl n=0 


(4.12a) 


(4.13a) 


The right-hand side of (4.13a) represents the probability that the birth-death process n 
is in a state > c/ — r^. This corresponds to blocking since there is no room left in the 
capacity of link I for accommodating any arriving voice call (which requires channels). 


28 





When Cl = oo, g(n) has the Pascal distribution, and the means and variance of the birth- 
death process are given by e and respectively (see [6]). The Pascal approximation uses 
the same approach but for finite values of C{ necessitating the solution of £q. (4.11a), as 
described below. 

If instead of g(n) we use the normalized version 

g'(n) = g(n)/g(0) 


the recursion of (4.11a) becomes 

g'(n) = ^leyff^-h(n-l)(l-e/cT^)W(n-l), for n = l,2,- -,Ci (4.116) 

with initial condition 

9(0) = 1. (4.126) 

This is easier to evaluate [it does not require knowledge of 9(0)], and results in 


.n=sO J 


-1 


= 9(0). 


Using this result to modify (4.13a) yields 


Pip(cr,e;(7^) 


E^=o9'(n) ' 


(4.136) 


Next consider the stochastic knapsack model, discussed in the previous subsection, for 
the isolated link /. When c/ = oo, the mean and variance of the number of busy circuits 
[under the knapsack approximation for the steady-state voice distribution] are obtained 
after some manipulations by 


and 


e, = r, 



= E 

g€Vi 


(4.14) 




= E 

q€V, 


E(" - =") 


LnsO 


= E 


.V 

rgPg 


q€Vi 


(4.15) 


29 








respectively. Thus, the infiiute-capau:ity stochastic knapsack gives the same mean and 
variance for the number of busy circmts as the birth-death process with parameters e = (j 
and <r^ = It is, therefore, natural to approximate the probability of blocking a class- 
p connection arriving to the stochastic knapsack with finite capacity (i.e., ci < oo) by 

For the multi-rate network with multiple links we use the same notation as in Section 
4.2 and make again the link independence assumption, so that class -9 connections arrive to 
hnk I according to a Poisson process with the rate given by (4.7). By invoking the Pascal 
approximation, we obtain the probability that the capacity of hnk / is not available for a 
call of class p as 





Ery, n 

«ei>i t€9,e^i 


geVi, l€£ 


(4.16) 

where the function P/p( • • • , • • • , • • • ) is given by (4.13) eind we use Lip to denote the 
approximation to the probability of blocking of voice path p on link / for the Pascal method; 
the same quantity for the knapsack method was denoted by Lip. In general Lip ^ Lip] 
however, in the important single-rate case (r^ = 1 for all p € V), we show in Appendix F 
that tip - Lip (p € / € C). 

As with the knapsack approximation of Section 4.2, there exists a nonunique solution 
to the fixed point equation (4.16). Once having found such a solution. Bp, the probability 
of blocking a class-p connection (or a voice call along path p) is approximated by (4.9); 
similarly, Bi, the probability of blocking any voice call on link I is approximated by (4.10). 

The computational complexity and the accuracy of the Pascal approximation are very 
comparable with those of the knapsack approximation. Moreover, the Pascal approxima¬ 
tion technique was shown in [ 6 ] to be asymptotically accurate (correct) under the same 
limiting regime as Kelly’s and the knapsack approximations. Through our comparisons it 
has also been established that the Pascal approximation is accurate over a broader range 
of load pzirameters than Kelly’s approximation. 

4.4 Mitra's Approximation 

The approximation technique suggested by Mitra [10] relies on a Taylor series expzin- 
sion of the normalization constant of (3.10). Although it has the advantage that we can 
control its accuracy by increasing the number of terms in the Taylor series expansion, it 


30 






has the disadvantage of converging only for a rather Umited number of scenarios. Actually, 
we were not initially aware of that disadvantage, since [10] remains silent about it. 

In [10], the approximation technique was applied to a tree network. However, in that 
paper there was not any stated constraint on the traffic loads and number of channels (of 
the circuits), without which convergence was unattainable. We simulated Mitra’s results 
smd foimd out that he only presented in his paper the scenarios for which convergence 
was attained. By increasing the loads we found out that the convergence was no longer 
guaranteed. 

Consequently, although we were able to extend the apphcability of Mitra’s approxi¬ 
mation method (a) to more general topologies than trees, (b) from single-rate networks to 
multi-rate networks, and (c) to the probability of data queueing (besides the probability 
of voice blocking), the severely limited range of convergence precludes the application of 
this method in most cases. Since all our simulation results using this method showed poor 
accmracy (except for the results presented in Mitra’s paper about the tree network and for 
only the traffic loads reported there), we opted not to present the mathematical details of 
the application of this approximation method even for our novel work (i.e., the extensions 
to general topologies and to multi-rate networks). 

4.5 Knapsack and Pascal Approximations for the Radio Network Model of 
Section 2.2 

In Appendix G we show that for networks with single-rate traffic the knapsack and 
Pziscal methods provide identical approximations to the probabilities of voice blocking and 
data queueing. Consequently for the radio model of Sections 2.1.2 and 2.2.2, which is 
characterized by = 1 for all paths p € 7^, we use only the knapsack approximation in 
deriving the munerical results for the voice blocking probability in Section 12. 

The application of the knapsack approximation method to the evaluation of the prob¬ 
ability of voice blocking for the radio model of Sections 2.1.2 and 2.2.2 is a straightforward 
modification of the approach described in detziil in Section 4.2. In particular, we replace / 
(links) by n (nodes), £ by M, Vi (set of paths using link /) by (set of paths intersecting 
at node n), c/ (link capacities) by Tn (number of transceivers at nodes), zuid rp = 1 (for 
all p € V). We are then able to use the resiilts of subsection 4.3 directly. 


31 







5. KNAPSACK APPROXIMATION TO THE PROBABILITY OF DATA 
QUEUEING 

In this section we describe in detail the application of the knapsack approximation 
to the probability of data queueing- This development appears for the first time in this 
report. The approximation is first developed for general multi-rate networks in Section 5.1 
and then modified in Section 5.2 to be suitable for the multi-hop radio network of Sections 
2 .1.2 and 2.2.2. 

5.1 General Multi-Hop Multi-Rate Networks 

The key idea behind the application of the knapsack approximation to the probabihty 
of data queueing is to use the technique described in Section 4.2 to approximate the external 
sum in (3.13), while treating the internal sum (the sum with respect to nf) as a single 
entity for given values of and use Proposition 3.1. This approach is described in 

the following in detail. 

As for the case of voice traffic (Section 4.2) in order to derive the knapsack approxi¬ 
mation to the probability of data queueing in Unk /, Qi, we first consider the probability of 
queueing for a single-link multi-rate system. As we saw in the comments after Proposition 

3.1 of Section 3, the probability of data queueing for link / can be expressed as in (3.13) 
which we may modify as 


Qi = l- 


(N»,N*)en. 


c;-i 


5] /(W,n;)#(c,.0)JP(nfUV',iV') 


n‘=0 


P{N\N*) 


Cl k 

k=0 m=0 


c',-1 


L"f=° 


P(ib,m) 


(5.1) 


where 


= < 


while 


(iV^ JV-) 0 < n; < n;, 0 < < c/, p € Vr, r^n; = m ; ^ r^n; = k 

pevi p€Vi 

(5.2) 


P(k,m)= Yi 

(N'',N')€n(lk.m) 


(5.3) 


32 







with 


f;^P(t,m) = l (5.4) 

*=0 mssO 

and 

c\ = Cl — k + m (5-5) 

is the number of channels available for data, where c; is the total number of channels in the 
link, k is the number of voice calls in progress, m of which are presently in silence mode, 
and PinflN”,N*) is the steady-i^tate probability of an M/M/c'i or an M/D/c\ system. 
In (5.1) we simplified the notation for P(n^\N '’to P(n{*|cJ) because it depiends on 
only through c}. 

The parameters k and m in (5.1)-(5.5) represent the total bandwidth (channel ca¬ 
pacity) occupied by the number of total ongoing voice calls and of voice calls in silent 
mode, respectively, on which the expression for queueing probability under the M/D/c 
data model is conditioned. The importance of this conditioning should not be under¬ 
estimated; the fact that we can obtain efficient recursive expressions for the probability 
distribution (mass function) of (it,m) (see Appendix C) enables us to perform the final 
averaging with respect to k and m and evaluate the imconditional expressions for the 
performance measures of interest. 

Regarding the evaluation of 


cj-l 

p(c;,pf) = Y, 


nj*=0 


(5.6) 


which is a factor in Eq. (5.1), we proceed as follows depending on the model used for the 
data traffic 

(a) For an M/M/cJ data model, P{c',,pf) is given by a well known formula [1] (also see 
1 - n,„ in Appendix B.l), which can be put in the recursive form 




1 



(c;-i-pf)p(c;-i,p|') 


(5.7..) 


P(0,pf) = l 


(5.76) 


33 





Consequently, P(c\,pf) can be evaluated iteratively. 

(b) For an M/D/c\ data model, rather than evaluating P{c\,p*) directly, we evaluate 
P(nf|cJ) iteratively via a special-purpose overrelaxation method (see Tijms [13] and 
Appendix B), and siim up the resulting P(nf\c'i) to obtain P(cJ,pJ*). 

The quantity in (5.6) represents the total probability that the residual data capacity c) 
of the /-th link [given by (5.5), which depends on the number of active voice calls] is 
not exceeded by the munber of data messages using link /. Thus, it corresponds to the 
conditional probability of no queueing of data (or alternatively one minus the probability 
of finding the system totally occupied) when conditioned on the voice state. 

In order to evaluate P(A:,m) we define 


P'(k,m) = P(fc,m)/P(0,0) 
as the normalized version of P(ib, m). This results in 


k-0 mso 


-1 


P(0,0). 


(5.8a) 


(5.86) 


Then P'(k,m) can be obtained iteratively from Proposition 5.1 that follows, and the 
probability of data queueing Qi for link I (and a single-link network) can be approximated 
by 

Cl k 

Qi{ci\PpiP € = 1 - 53 /[(fc.ni) (c/,0)] • Pic,,pf)P{k,m) 

k^O m=0 

1 ELo ^ 0) • P(c;,^f) • P-(fc,m) 

E*=o Em=0 

In (5.9) we used the notation Qi{ci\p^^p € Pi) in order to emphasize the dependence 
of the probability of data queueing on the voice loads {p^,p € Vi). The importance of 
this notation will become clear below when the approximation for a multi-link network is 
obtained. 


34 






Proposition 5.1 

P\k,m) satisfies 

Ep€^>. ^pPpP‘i^ -rp,m-r,) , if Vj, < m < k < ci 
Ep€P. - Tp, m) , if 0 < m < Tp < i < 

1 , ift = 0,m = 0 


P'(0,0) = 1 


if i: or m axe not positive integer 
multiples of 

(5.10a) 

(5.106) 


P\k,m) = 0 if 


m > fc, or A: < 0, or m < 0, 


y or if (A:,m) can not be represented as the linear combination of r,, p£Vi 

(5.10c) 

Proof: It is provided in Appendix C. 

Finally, to evaluate the probability of data queueing for a multi-link network we 
proceed as follows. We use the thinned voice load (under the interlink independence 
assumption) 

Kl' = p; n (5-“) 

offered to link / from voice path p in place of the original in the fimctional form of (5.9). 
The resulting approximation to the probability of queueing at link / (and a multi-link 
network) is 


Qi[cr,pl JJ (1 -I/p),p€ P/ 




(5.12) 


where Ltp is the probability of blocking voice calls taking path p at link f, which is obtained 
via the knapsack approximation on the voice part (Section 4.2). 

A comment is in order here regarding the theoretical accuracy of the approximation; 
the practic 2 d accuracy is very satisfactory as demonstrated in Section 11 where the var¬ 
ious approximations sure compared with the results of accurate Monte-Carlo summation. 
Assuming that the computation of the data portion P(c,, pf) of (5.1) is ac jurate, we claim 


35 





that the same limiting regime (i.e., when both voice load and number of channeb in each 
link are large but their ratio is held fixed) that yields the probability of voice blocking 
Bi asymptotically accmate also yields the probability of data queueing Qi asymptotically 
accurate. Our justification is at this point only a conjecture (it has not been proved 
mathematically) and is based on the facts that (a) the same inter-link voice independence 
assmnption was used as in the voice blocking probability calculation, and (b) in the evalua¬ 
tion of Qt, the knapsack approximation was applied to the voice portion (i.e., to determine 
the expected residual data capacity) for which it has already been shown to be accurate. 
We anticipate to be able to establish this claim rigorously in the future. 

5.2 Radio Network Model of Sections 2.1.2, 2.2.2, and 2.4.2 

As discussed in Sections 2.1.2 and 2.2.2 the radio network model considered in this 
report assumes that the data traffic over link / = (01,02) 6 C connecting the network 
nodes 01,02 € A/* follows an M/D/c\ system model independently from the other links of 
the network. The residual capacity available for data is given by 

c; = niin|T„,- 5] (n;-n;),T„.- K - nj) I , / 6 £, n,,r„ € W (5.13) 


where 

Ylri;<Tn neAf. 

It is assumed that the data are queued at buffers (of infinite capacity) available at the 
node transceivers. The above equation for the data link capacity expresses the dependence 
of the M/D/c data model on the current voice trafiic at nodes o and m. However, it does 
not address the way in which a node’s tmused transceivers are allocated to support data 
links with each of its neighbors, as was discussed in Section 2.4.2. 

To simplify the notation we consider the link I = (ni,n2) = (1,2) connecting the 
network nodes 1,2 € AT. The above data capacity can be written as 

c{ = min {Ti — fci-f mi, T2 —fc2+m2} (5.14) 

where 

0 < ki = < Ti, i = 1,2 (5.15a) 

pGVi 


36 





0 < mi = ^ nj < fci, 1 = 1,2 

peVi 


(5.156) 


and Vi is the set of paths containing node t, for i = 1,2. 

To employ the knapsack approximation in this case for a single-Unk network involves 
defining 

P(ki,mi,k2,mj)= ^ P(N\N*) (5.16) 




where 


i,mi,k2,m2) = I (N^,N*) | 0 < nj < n«, p € P; = ki, ^ nj = mi, i = 1,2 i 

{ peVi peVi ) 


V = Vili Vi 

7 \ iki Aj 

Iz H ^(*i,mi,A:2,m2) = 1 

ki =0 mi =0 fcjsO m]=0 


and writing 


T\ k\ Tj kt 

g/ = l-5^ 51 H ^ ^ic'i¥^0)^Pic\,pf)‘P(kumuk2,m2) 

AlsO misO fc]s0 mjsO 


where 




(5.17) 


(5.18) 


is provided by the M/D/c data model (Appendix B). 

After the appropriate normalization 

P’{kumi,k2,m2) = P(ifci,mi,*:2,m2)/P(0,0,0,0) 


(5.19) 


and using the approach of Section 5.1, the above single-link approximation is put in the 


form 


___ , Ej;,oE».=oEi:=oE»,=o^W5^0)P(ci,^f)P'(t„m„t2,m,) 

QliT^Tip^p € P.UP,) = 1-—— ^r , —^k, - p». „ t r„\ - 

2^kis0 2^mi=0 2^ki=Q ■* m 2 ) 


(5.20) 


37 







with 


c} = min {Ti - ibi + mi, T 2 -k 2 + m2} . (5.14) 

First we consider the case V\ = P21 which means that the same set of paths passes 
through node 1 and node 2. In this case, ibi = m\ = m2, and Qi simplifies to 


Q/=l- 


SL. 0) ■ PWi.i4) ■ P'(t.m) 

ELoELo^t."-) 


(5.21a) 


where 

r = min{Ti,r2} (5.216) 

cj = min {ri,r2} — + m = r — Ar + m (5.21c) 

The recursion for P\k,m) is given by (5.10). 

Next we consider the case Vi ^ V 2 , in which case calls of one or more types are 
supported by only one of the nodes of interest. The following Proposition holds 
Proposition 5.2 

P\ki,mi,k 2 ,m 2 ) satisfies the recursion 


P'(fci,mi,fc2,m2) = 

[ 7^7' -1. -1; * 2 , »n2)+Epei>inr/»?P'(^i -1, mi -1; ^2 -1, m 2 -1)] 

if 1 < mi < Jbi < Ti, 1 < m2 < ib2 < 12; 

[Zpe^tnPi »*!»*- l,mi - I;fc2,m2)]; 

if 1 < mi < < Ti, m 2 = 0 < k2 <T2; 






1 


peVinV: 


,e PpP'{ki,mi\k 2 - l,m 2 - 1 )] ; 


if mi = 0 < A:i < Ti, 1 < m2 < 1:2 < T? 


ki —m\ a+0 


1; 
10 ; 


Ppi"(fci-l,mi;*2,m2)+EpG7>in7»,Pp'P'(*i-l>”*i;*2-l,m2)] ; 

if mi = 0 < fci < Ti, m2 = 0 < 1:2 < T2 
if ki = 0, mi = 0, 1:2 = 0, m2 = 0 
otherwise 


(5.22) 


38 






where denotes the complement of the set V 2 . 

Proof: Refer to Appendix D where a more general proof involving constraints of the form 

0 < ki = < Zi, * = 1,2 

p€Vi 

0 < ^ ^ki, i = 1,2 

peVi 

is provided. For the approximation described in this section we considered only the special 
case 

= 1 peViU V 2 

and 

Zi=Ti, i = l,2 

For the multi-link network, the knapsack approximation for node / = (** 1 , 02 ) is ob¬ 
tained with the help of the thinned load method, thus we use the function of (5.20) (where 
1 = ni and 2 = 1 * 2 ) with voice loads p® Instead of p® to get 

<?l(T„„r„, ;<>; I] (l-i„),p€PiU7’2j, /={ii,,ii 2 )€£ (5.23) 

\ n6p,n^ni,nj / 

for a fixed value of pf and 

cj = min {Tn, - +mi,r„, -k2 + m2} . 


39 






6. PASCAL APPROXIMATION TO THE PROBABILITY OF DATA 
QUEUEING 

In this section we describe in detail the application of the Pascal appraximation to the 
evaluation of the probability of data queueing, a development that appears in this report 
for the first time. This approximation is first developed for general multi-rate networks in 
Section 6.1; in Section 6.2, we describe how it can be modified to suit the multi-hop radio 
network of Sections 2.1.2 and 2.2.2. 

6.1 General Multi-Rate Networks 

In Section 4.3 the Pascal approximation used a one dimensional birth-death process 
whose equilibrixun probability mass function is the Pascal distribution to approximate the 
number of busy circuits (paths with ongoing voice calls). In order to approximate the 
probability of data queueing given by (3.13), which involves conditioning on the total 
number of voice calls and the on the number of silent (inactive) calls, we need to extend 
the Pascal approximation to two dimensions. 

In this context, we consider the two-dimoisional birth-death process (k—m, m) (where 
k — m roughly represents the total rate used by all active calls and m the rate of all inactive 
calls) on the state space {(ib,m) |0 <ib<c,0<m<fc} with the transition diagram of 
Figure 1, where 



0 ,l,2 ,...,c 


( 6 . 1 ) 


and Cj,<T^, for j = 1,2, are given positive numbers. Let q(k — m, m) denote the equilibrixun 
probability of being in state {k—m, m). Furthermore, consider the associated process {k, m) 
and denote by P{k,m) the eqxiilibrium probability of being at state {k,m). 

Prom the local balance equations for the birth-death process (fc — m, m) we know that 
q{k — m,m) must satisfy the conditions 


{k -m)- q{k -m,m) = • q(k - 1 - m, m) (6.2) 

and 

m • q(k — m,m) = A 2 ,m-i • 9(^ — m,m — 1). (6.3) 

The resulting conditions for P{k,m) are 

(fc - m) • P{k,m) = • P(k - l,m) (6.4) 


40 




and 


m • P{k, m) = A 2 ,m_i • P{k - 1, m - 1). (6.5) 

Using the above equations we can evaluate P{k,m) from the following rectusion 


m=0 ;l<i<c 


where 


S H P(fc,m) = 1. 

k=0 m=0 


If instead of P(k, m) we use the normalized version 

P\k,m) = P(k,m)/Pi0,0) 


then the recursion (6.7a)-(6.8a) becomes 


W. m, = / ^ - 1.0)- m=0;l<t<c 

’ yh^.p>{k-l,m-l), l<m<k‘,l<k< 


with initial condition 


(6.7a) 


(6.8a) 


(6.75) 


P'(0,0) = 1 (6.86) 

which is easier to evaluate (it does not require knowledge of P(0,0)] and results in 


Lfc=0 m=0 


-1 


= P(0,0). 


Proposition 6.1 

When c = oo, P{k,m) is two-dimensional Pascal-distributed with the following pa¬ 


E[k — m] = Cl 

(6.9) 

£;[m] = C2 

(6.10) 

var{k — m) = aj 

(6.11) 

41 



rameters: 







var(m) = a\ 
cov(k — m,m) = 0. 


( 6 . 12 ) 

(6.13) 


Proof: It is provided in Appendix D. 

The application of the Pascal distribution to the probability of data queueing involves 
(as in the case of the knapsack approximation) considering first a single-link multi-rate 
network, applying the Pascal approximation, and then obtaining the result for the mtilti- 
link case using thinned voice loads in place of the initial voice loads. We start with the 
following proposition 
Proposition 6.2 

For the single-link multi-rate network, when the link capacity c = oo, denote by n« 
the number of channels occupied by voice calls in the link and denote by n« the number 
of channels occupied by silence voice calls in the link , then 



(6.14) 


(6.15) 

EK n.l = ^ E 

(6.16) 

var{n^) = ^ rjp" 

P€V 

(6.17) 

t.<.r(n,)= 

^ p£T 

(6.18) 

var(n, ^ 

^ pev 

(6.19) 

cov{nv — n„n,) = 0. 

(6.20) 


Proof: It is provided in Appendix E. 

From the above two propositions we observe that the infinite capacity single-link 
multi-rate model employs the same means and variances for (n^ — n*) and n« as the 
two-dimensional birth-death process with parameters ci = E[nv — n,], C 2 = <7’i = 


42 






var(np — n,), and tri = var(n,). Note that the covariances cav{n„ — n«,na} and coi;{Jb — 
m,m} are both zero. Therefore, as in the voice case, the probability of data queuring in 
(3.13) for the finite-capacity single-link multi-rate model can approximated by 

Cl k 

Qi (ci;p;,p € p,) = I - E E ^ 

iksO m=0 

^ 1 _ EL. LLo + (c,,0)|. P(c;.pf) ■ 

ELo EUo-P'C*.’") 

where P(cJ,pf) is given by (5.7a)-(5.7b) for an M/M/cJ data model and can be evaluated 
from Appendix B for an M/D/cJ data model, and P\k,m) is the equilibrium probability 
of the above birth-death process with parameters 


0 t* 

(6.22) 

^ i: 

(6.23) 


(6.24) 

Oi 2 V 

a + 0 

^ p^v, 

(6.25) 


which can be evaluated iteratively via (6.7b)-(6.8b). We used the notation 
Qi {piiPpiP € Vi) in order to emphasize the functional dependence of the probability of 
data queueing on the voice loads (Pp,p € Vi)- This is necessary for the extension to the 
multi-link case that follows. 

For the multi-link multi-rate network we use as the approximation to the probability 
of data queueing at link I the expression 


<?1 n ( 6 - 26 ) 

\ / 

where Lip is the (approximate) probability of voice call taking path p being blocked at 
link £, which is obtained via the Pascal approximation as in Section 4.3. As it was done in 


43 




Section 5, we again used the interlink independence approximation for voice and thiimed 
the voice loads pj to pj ~ p€Vim (6.26). 

The same comments about the practical accuracy and the asymptotic accuracy of this 
approximation with those made at the end of Section 5 are valid here. 

6.2 Radio Network Model of Sections 2.1.2, 2.2.2, and 2.4.2 

The general approach described in Section 6.1 above can be extended to derive a 
four-dimensional Pascal approximation for the approximation of probability of queueing 
data of the radio network model of Sections 2.1.2 and 2.2.2. The basic steps are similar 
to those detailed in Section 5.2 for the knapsack approximation. The key step is again the 
derivation of recursive expressions for the quantity P(ki,mi,Jb 2 ,m 2 } defined as in (5.15) 
but evaluated via the Pascal method for the multi-rate case. We omit the details here which 
are similar to those provided in Appendix D. For the single-rate case characterizing the 
radio network model of this report the knapsack and Pascal approximations }rield identical 
results (see Appendix F) and thus there is no need for additional work. 


44 





7. EXTENSION OF THE APPROXIMATIONS TO M/D/c DATA MOD¬ 
ELS AND THE AVERAGE QUEUEING DELAY AS THE PERFORMANCE 
MEASURE 

As disciissed in Section 2 the performance measures of interest for the data traffic are 
Qi= probability of data queued at link / (/ € £), 

Wi= average waiting time (not including service time) of data in queue at hnk / 

{1 € £), 


and their averages Q and W [refer to (2.1b)-(2.1c)] with respect to the data loads of the 
links. In this section we first show (Section 7.1) that the approximations to the probability 
of data queueing of Sections 5 and 6 are apphcable not only to the M/M/c data model 
but also to the M/D/c data model. By contrast, for the average data queueing delay these 
approximations are shown (Section 7.2) to apply only to the M/D/c data model. Finally, 
in Section 7.3 a modified network model that guarantees finite data delays by dedicating 
a portion of the link capacity (or the number of node transceivers) to exclusive data use 
is provided. 

7.1 Approximations to the Probability of Data Queueing for M/D/c Data Mod¬ 
els 

Recall that for the M/M/c data model and a multi-rate system, the probability 
of data queueing Qi takes the form 


Qi = Pr{nf > Cl - ki + k*) = 1 - Pr [c/ - kf ■+■ kf > nf, where {k^, kf) ^ (ci, 0)] 




c;-i 


p(AL^iv:') 


(7.1) 


where 

pev, 

p€T, 

and 

c\ = Cl — kf + kf. 


(7.2) 

(7.3) 


(7.4) 


45 







is the steady state probability of the voice calls evaluated in Section 3, and 
is the steady state probabUity of the number of data packets in an M/M/c\ 
system. The apphcation of the knapsack and Pascal methods for obt aining approximations 
to the probabihty of data queueing Qi was described in Sections 5 and 6, respectively, for 
an M/M/c data model. 

The corresponding formula for the M/D/c data model is obtained by simply re¬ 
placing the P{nf\c\) of an M/M/cJ system by that of an M/D/c} system (see Appendix 
B). Consequently, the application of the knapsack and Pascal approximation methods to 
Qi and an M/D/c data model is a straightforward extension of the results of Sections 5 
and 6. 

7.2 Approximations to the Average Queueing Delay of Data 

The average data queueing delay Wi for the M/M/c data model and the 
M/D/c data model takes (upon application of Little’s formula) the form 


W, = 


average ntimber of data packets in the queue at link / Nf^ 


average data rate to Unk I 


= ir (^. 5 ) 


where 



= c} + n|c}) 




nsO 


PiK\N') 


(7.6) 


= (7.7) 

and P(nf |c}) and P{^ ,N^) are as described above for the two models. Therefore, Wi can 
be evaluated by applying the various approximations on and treating ^P{^i = 

c}-|-n I c}) in the same manner as I treated in the original performance 

mezisure, i.e., in the probability of data queueing. Finally, ^P{^f = c} -I- n | c}) can 
be evaluated in closed form (omitted here) for an M/M/c} system zuid via Tijms’ algorithm 
(see [13] and Appendix B) for an M/D/c} system. 

The application of the approximation methods of Sections 5 and 6 to the queueing 
delay for data Wi and a M/D/c model is described in more detail next. 

7.2.1 Knapsack Approximation 

As discussed above we apply the approximation methods directly to the evaluation 
of the average number of data packets in the queue {Nf^) required for the evaluation of 


46 


the average queueing delay Wi — IFf. As in Section 5 we start with a single-link 

multiple-rate scenario and write for link / 




k—O m—0 


53 = c; -I- n I c\) 


LnsO 


P{k,m) (7.8) 


where 

c\ = ct — k + m (7.9) 

P(ib,m)= 53 P{N\N;) (7.10) 

and 


Q{k 


Let 


,m) = I (jV”, JV') I 0 < n' < n"; 0 < r,nj < c,; p € P/, 53 ’“p”? = 53 = * [ • 


^(cj>P?) = 53 = c» + n I c',) 


(7.11) 

(7.12) 


n»0 


which is the average number of data packets in the queue for an M/D/c| system, and 
is isolated from other terms in and can thus be evaluated separately. The evalua¬ 
tion of N{C(,pf) is straightforward from Tijms’ algorithm (see [13]) after the steady-state 
probability for M/D/c[ data has been obtained. 

Then, following Section 5 we obtain an approximation to Nf^ as 



c/; Pp n ~ ^tp)^P € Pi 


(7.13) 


where Ltp is the approximate voice blocking probability for link £ across voice path p 
evaluated in Section 4.2 (via the knapsack approximation) and p", p € Vi) is a 

function of c/ and (p®, p € Vi) given by 


p;, P6 P,1 = (T,4) 

lZk-0 ^m=0 P (*»"') 


47 






and P*(k,m) is given by the same equations (5.10a)-(5.10c) of Section 5. 

7.2.2 Pascal Approximation 

For the Pascal approximation, we define N{c'i,pf) as in (7.12) and still use the ex¬ 
pressions (7.8)-(7.11) as in the kn^sack method above. However, for the average length 
of data queue of link / (and a single-link network) we now use 

15) 

instead of (7.14), where P'(Jb,m) is now obtained from (6.7b) as described in Section 6. 
Subsequently, the approximation to (for a multi-link network) is obtained again as 


N?[cr, p;,peVt]^ 


^ (c,,0)l • Njc'i.pf) • nk,m) 

Em=0 


(7. 



c/; pI n “ ^tp),P € Vt 


e€V,,t^i 


(7.16) 


where Ltp is the approximate voice blocking probability for link £ across voice path p 
evaluated in Section 4.3 (via the Pascal approximation). Finally, the desired performance 

(i/Q 

measure Wi is obtained as IV) = 


48 







7.3 Network Model Modification for Guaranteeing Finite Data Delays 

Since the link capacity available for data given by (7.4) can take the value 0 we can not 
guarantee finite data delays unless we assume that a (small) fraction of the hnk capacity 
is always reserved for data use. 

For the multi-rate network model of Sections 2.1.1 and 2.2.1 the above requirement 
implies that 

c', = cf + cf - rpTjp + (7.17) 

p€T, pev, 

where cf and c® are the portions of the hnk capacity reserved for data and voice traffic 
resp)ectively; if c® is not used by the ciirrent voice traffic it can be used by the data traffic 
as (7.17) indicates. 

For the single-rate radio network model of Sections 2.1.2, 2.2.2, and 2.4.2 the 
above requirement imphes that the capacity available for data at hnk / = (ni,n 2 ) is 


cj = min { T;?, , } +min { 


pCPnj J 

(7.18) 


where T* represents the munber of transceivers at node n that are dedicated to data and 
r® represents the number of transceivers which are primarily used by voice; the portion of 
T® not occupied by voice calls can by used by data but voice maintains preemptive priority 
over data over this portion. The total number of transceivers at node n is 


T„ = r;? + r®, 


(7.19) 


Similarly to the comment following eq. (5.13) and the discussion in Section 2.4.2, the 
above equation (7.18) does not address the way in which a node’s unused transceivers are 
allocated to support data links with each of its neighbors. 

Finally, note that, even if a portion of the hnk capacity (cf or T^) is set aside for 
exclusive data use, the data delay remains finite only for average data loads smaller than 
cf (i.e., pf < cf); refer to the relevant comment (Comment 2) following Proposition 3.1 in 
Section 3. 


49 







8. EVALUATION OF PERFORMANCE MEASURES VIA THE MONTE- 
CARLO SUMMATION METHOD 

For the purpose of comparison and testing the accuracy of the the knapsack and Pascal 
approximations to the performance measures of interest we also evaluate the probability 
of voice blocking, the probability of data queueing, and the queuing data delay via the 
Monte-Carlo summation method. In the next subsection this method is described in some 
detail and then in the following subsections it is explained how it is applied to the various 
performance meastires. 

The key difference between the approximation method described in this section and the 
approximation methods of the previous sections (Sections 4, 5, 6, and 7) is that the Monte- 
Carlo summation method can provide an estimate (approximation) to the performance 
measmre of interest within any desired confidence interval at the cost of an increase in the 
number of calls to random nxunber generators performed. In this sense the Monte-Carlo 
summation method constitutes out baseline for the true values of the performance measmes 
of interest in this report, and, where exact values are not available, the accmacy of all other 
approximations is compared to the values generated by the Monte-Carlo simulation of the 
appropriate sums. 

It should be emphasized that in contrast to the familiar Monte-Carlo simulation 
method the Monte-Carlo summation approach does not involve a simulation of the dynamic 
behavior of the system imder study. As is explained in the following section, quantities re¬ 
lated to system performance are evaluated by using known properties of their distributions 
in conjimction with a random generation process. 

8.1 The Monte-Carlo Summation Method 

It is now generally accepted that, in the absence of a special structure, multi¬ 
dimensional integration (or sununation) is best performed by Monte Carlo methods [7], 
[15]. This method has been shown to be efficient and accurate in several applications 
involving expressions of the form 


K 

® = E !!«("*) 

n€n *r=l 


(8.1) 


where fl denotes the state space of an underlying A'-dimensional vector stochastic process 
n = (m,..., tik) and qk{-)i k ~ 1,..., A', are known fimctions. For the czises of interest to 


50 








OUT study, G represents the normalization constant of (3.10) for product-form stochastic 
networks with voice traffic. However, as we have seen in Secticm 3 [eqs. (3.12a)-(3.12b) and 
(3.13)] and Section 7 [eqs. (7.5)-(7.7)], the perfomance measures of interest can actually 
be expressed as nonlinear functions of normalization constants. Therefore, expressions of 
the form 


En€A /(»)9(ll) 
E„€A 9 ( 21 ) 


( 8 . 2 ) 


where /(•) is a known function are even more necessary than expressions of the form (8.1) 
in the evaluation procedure. The method for the evaluation of (8.1) is also applicable to 
(8.2). Thus, here, we will first describe briefiy the method for evaluating (8.1) and then, 
at the end of this subsection we will describe the evaluation of (8.2). 

The starting point is to let 


K 

9 («) = I{lk € J^) n (S-3) 

fc=i 

where /(•) is the indicator function and rewrite (8.1) as follows; 


N, AT, Njf 

?= E E-E (*■■*) 

n,=0n}s0 nx—0 


where iV* = max{nfc : n € Thus calctdating G involves a multi-dimensional summa¬ 
tion. 

First, we let V' = (Vj, V^), i = 1,2,..., n, be a sequence of n i.i.d. random 

vectors, where each V* takes values in A = {0,...,} x {0,..., A^ 2 } x • • • x {0,..., Nk). 
Next, we define P»{n) = P{Y^ = n), for n € A, which is a sampling distribution that cam 
be specified in a way that optimizes the efficiency of the Monte Carlo method, and set 


g(r) 

p»iry 


Then the quamtity 



(8.5) 


( 8 . 6 ) 


51 








provides an unbiased estimator for G (i.e., E{Zn] — G). Moreover, the Central Limit 
Theorem implies that, for large n. 




(8.7) 


where c{r)) is the critical value of the standard normal distribution N{x), that is, it satisfies 


= Ar(x)^ 


( 8 . 8 ) 


and <T^{Z) is the sample variance of Z', for t — 1,..., n, i.e., 


tsl 


(8.9) 


Notice that, for any fixed n (simiilation size), "Zn is an estimate for G, whose accuracy 
can be assessed for the confidence interval 100(1 — t})% by 


c(»/)<r„(Z) ^ . c(»7)a„(Z) 
^,1 — . ^ 


Vn 




( 8 . 10 ) 


induced by (8.7). As the samples are being drawn, the sample variance can be calculated 
and the confidence intervals can be given explicitly. Furthermore, if greater accuracy 
is desired, more samples can be drawn, thereby decreasing the width of the confidence 
interval. This method is particularly well suited for optimization, as only rough estimates 
are needed for performance me .ores and gradients when the current solution is not close to 
optimal. Ross [7] actually shows that the gradients of the performance measures pertaining 
to voice can be obtained with little additional effort. 

From (8.7) it is clear that the effectiveness of the Monte Carlo siunmation method 
depends on 

1. the effort required to generate F* from the distribution P*(n), n € A; 

2. the effort required to evaluate the ratio q{-)/Ps{-) during the sampling procedure; 

3. the size of <t^, the variance of Z'. 

To improve the eflSciency of the method the following steps are usually 
taken. First, if the random variables Fj*, Fj’,..., are independent (i.e., F,(n) = 


52 






Pi(ni)P 2 (*^ 2 ) • • • ■PK'(wif)), the ^ can be generated in a total of 0(K) time with the 
alias algorithm (e.g., see [16]); this computational eflFort is independent of the number of 
values the stochastic process (which in our example is link occupancy) can take on. This 
means that the method can handle networks with large Unk capacities. Second, selecting 
the appropriate sampling distribution P«(n), for n 6 A, can significantly reduce the vari¬ 
ance In particular, it is desirable to sample more frequently the points n, at which 
q(n) is important, which is typically done by considering functions P«( ) that are similar 
to g(-). Ideally, one would like to be nearly constant; however, there exists a 

tradeoff between this similarity and the effort required to sample from P«(-). 

As we already mentioned, many performance measmes of interest are given by non¬ 
linear functions of normalization constants, and thus quantities of the form (8.2) must be 
evaluated. A natiiral estimate for $ based on an n sample simulation is 


where 


and 


~ Er=i z' 

(8'1) 

= f(r)q{r)ip.ir) 

(8.12) 

r = qiryp.iv!). 

(8.13) 


Although converges (almost surely) to ^ of (8.3), has the imdesirable property 
of being biased. Fortunately, this bi£is diminishes as n becomes leu'ge. It is also known [7] 
that the ratio estimator can be made free of bias to order 1/n with a modification that 
requires an insignificant amount of additional CPU time. Moreover, the confidence interval 
for $ can again be constructed (see [7]) as the sampling proceeds (i.e., on line) as follows. 
Let Yn and be the sample mezm and variance associated with Fi, i = l,...,n 

[defined aneJogously to of (8.6) and <t^(Z) of (8.9)]. Furthermore let 


UY,Z) = ^ fl(Y‘ - Y„)(,Z‘ - Z„) 
^ «=1 


(8.14) 


be the sample covarizince 2 issociated with the two sets of random variables. Then the 
(1 — T/)100% confidence interval for is 


'F„Z„ - - r„ Y,Z„ - Z) + r„ 




Zl - ^'rUZ) 


(8.15) 


53 





where c{rf) is as defined above and Tr is given by 






<^iv) 




n 




7n- 


n 




kl - 

« > 


c^{rj) 


n 


uy) 


(8.16) 


Note that the width of the confidence interval is 0{l/y/n). 

8.2 Monte-Carlo Summation for the Probability of Voice Blocking 

The method described in Section 8.1 for the estimator (8.5)-(8.6) of (8.1) and the ratio 
estimator (8.11)-(8.13) of (8.2) is directly applicable to the evaluation of the voice blocking 
probabilities of (3.12a) and (3.12b). We need only set K = \V\, q{n) = PiN.^) of (3.9), 
k = p for p € V, Nk = Cpfrp, and qk(n) = {PpYln\ and estimate first the normalization 
constant G of (3.10). The key is of course the choice of the sampling function P(n) = P*(n). 
In [7] it is suggested that we select 


p,(„) 1 n4 


(8.17) 


where 



p^V m=0 



(8.18) 


The 7 p for p € P are the important sampling parameters. These can be set as 7 p = p" or 
they can be selected according to a more tedious procedure (see [7]), which yields narrower 
confidence intervals. The estimator of (8.5)-(8.6) then takes the form 


G = Zn 


1 y- qiT) 


= —y' a'I{V^ € fi") 


(8.19) 


where Gg is given by (8.18), fl*' is defined by (3.11), and 



( 8 . 20 ) 


Once G is obtained (as a function of the vector of link capacities c), the blocking probabil¬ 
ities Bi of (3.12a) and Bp of (3.12b) are obtained from those expressions where G is used 
instead of G. 


54 










Is is also possible to estimate Bp directly tising the estimator (8.11)-(8.13) as 


= *n 



E?-! “‘KT 6 n;) 
Er-i e fl') 


( 8 . 21 ) 


where Q” is given by (3.11) and Q.” is obtained firom (3.11) by replacing the 1 x |£| vector of 
link capacities c by the vector c—^ defined below (3.12b). The voice blocking probability 
Pi of (3.12a) can be estimated directly in the same manner. We may use (8.21) again with 
fl* instead of fl" in the numerator; is obtained from fl** of (3.11) by replacing ci by 

Cl — 1 . 

8.3 Monte-Carlo Summation for the Probability of Data Queueing 

We rewrite 1 — Qi, where Qi is the probability of data queued at link I (I € C) as 
follows, 


l-Qi = 


5Z(JV*.N')6A 


where 


p€V ' I» p^v, 


cj 

jur,iv) = E 1‘^i) ■ -fK E E ’-.■"J) 5^ 

nj'=0 I»6'P| p€^i 

A = {(AL',iV:')|0 < rpfi; <Cp,0<n;< n;,p € V} 

and 

1> _ ^ .V ^ V 

0 + 0 '^^ ’ " a + ^ ’ 

Then 1 — Qi can be estimated by the ratio estimator of (8.11) eis 


( 8 . 22 ) 


(8.23) 


(8.24) 


(8.25) 


where 




Er=i Y' 

Er=i 


f{v\w) ■ q{v\u:) 
p.{v\!r) 


(8.26) 


55 






(8.27) 


9(V\W) 

P.(V\W) 

and (V',^'),t = 1 , ...,n is a sequence of i.i.d. random vectors, where each QC,W) takes 
values in A; P«(V1ML') are importance sampling functions of the form 


••• 




where 


^p/^p ^'*p~'*p^’^p ^p/^p "JI 


and the importance sampling parameters 71 ^ and 72 ^ are given by 


(8.29) 




(8.30) 


With the above definitions and the definitions of T^n. ^n, 
of ( 8 . 6 ), (8.9), and (8.14), respectively, we obtain from (8.15) that the \ —rf confidence 
interval for 1 — the estimate of 1 - (?i is 


(, r.,r„-^.7;(r.z)+r. r„r.-4i^g;(r,z)-r, \ 

V "Zi - ^tUZ) ’ 7l-s!M^nz) ) 

where c(r}) and r„ are as defined in ( 8 . 8 ) and (8.16). 

Notice that (Vi',C/i'),(V 2 ,t^ 2 )i"M(^(V|’^|V|) independent, i.e., 

p.iv' = isT'.i:' = it') = n = "J- 

pe7» 


(8.31) 


(8.32) 


Pp{v; = n;,uj, = n;) = p,{v; = n ;)• p.iu; = n;\v; = n;) , 


where 


(8.33) 


P.iv: = n;) = 


-■ -r»-, 0 < r-rip < c- 

TT^p/rp 2l1 


(8.34) 


56 









and 


P.(Ui = F.;|v; = „;) = 


_ (ot»l*> 


K - n;)!n;! ’ 


(8.35) 


Therefore, \V\ of (y*,U^) can be generated independently by first generating Vy from 
P,iV*) and then generating £/; from P,{Uj,\V*). The alias algorithm is used for both 
generating processes of ly and Cy. 

In our numerical results we simulate for a 95% confidence interval with n = 300,000 
based on the importance sampling scenario 7 ^ = € V. 

8.4 Monte-Carlo Summation for the Average Queueing Data Delay 

This is the same as for the probability of data queueing except for the different function 
The new function is given by (7.5)-(7.6) in Section 7 . 


57 




9. ADMISSION CONTROL VIA REDUCED-LOAD APPROXIMATIONS 

Admission control strategies can play an important role in integrated voice/data net¬ 
works because, by controlling in a coordinated manner the admission of new calls in all 
network circuits, the overall probability of voice blocking can be reduced and so may the 
probability of queueing data and the data packet delay. In this paper admission control 
strategies based on (a) thresholds on the individual path traffic and (b) linear combina¬ 
tions of voice traffic over selected sets of paths are considered. The justification for this 
is two-fold: First, such admission control strategies have been shown in [11]-[12] to work 
well for voice-only multi-hop radio networks of small size. Second, this type of admission 
control strategies enables the extension of the approximations of this report from prob¬ 
lems without control to problems with control at the expense of only minimum additional 
computational complexity. Therefore, since our approximations can handle mid-size and 
even large-size multi-hop radio networks, near-optimal control strategies can be derived 
for networks of any size based on the approximate performance meastures evaluated below. 

After describing the relevant models for admission control in Section 9.1, we present in 
Sections 9.2 and 9.3 two distinct methods for incorporating admission control strategies into 
the approximation methods outlined in Sections 4 (for the probability of voice blocking) and 
in 5 and 6 (for the probability of data queueing). The development in these sections appears 
for the first time in this report. Only the modification of the knapsack approximation is 
described in detail. The Pascal approximation can be also modified in a similar way but 
this is omitted from the report. 

9.1 Models for Admission Control 

The problem of admission control is formulated in the context of our exposition in the 
previous sections, as follows. Together with the resource (bandwidth) constraints 

5;r,n;<c,, l€C (9.1) 

p€Vi 

[where Tp = 1 for all p € "P and cj, Vi, I € £, must be replaced by Tn, P„ for n € A/" for the 
radio network of Section 2.1] which have played am importamt role in the previous amadysis, 
we also consider the additionad control constraints 

Y, 2 <®' 2 ) 

p€V. 


58 






These control constraints result in the blocking of voice calls, even when network resoiurces 
are available to support them. We refer to a system without such control constraints (i.e., 
one in which only the resource constraints of Eiq. (9.1) are applicable) as an “uncontrolled” 
system. In Eq. (9.2) 5 is the set of all such constraints, Y, is the threshold for the 
s-th constraint, and V, is the set of paths involved in the constraint. These control 
constraints couple the voice traffic over selected sets of paths. Moreover, direct threshold 
constraints of the form 

per (9.3) 

can be considered as special cases of the more general constraint of (9.2). Also notice that 
the quantities rp*^ for p € 'P* involved in the s-th constraint need not be equal to (the data 
rate) rp nor do they need to be equal to each other. Clearly, with this model any linear- 
combination type of constraint on the nximber of calls of classes p € P can be considered. 
The objective is to determine the set of constraints (which collectively constitute a control 
policy) that results in optimal performance. 

9.2 The Knapsack Approximation via Conditioning on Additional Constraints 
We now show how to incorporate one additional control constraint into the knapsack 
approximation, which is obtained under the standard resource constraint of (9.1). The 
procedure can be extended to apply to two or more control constraints at the expense of 
an increasing computational effort due to the dimensionality of the problem. 

For this section we assume that 5 = {s} (a single-element set), that Y, is the control 
threshold [it can actually be Yg/r^*^ for Tp*^ = (p € P*), when all are equal to each 
other], and that c/ is the capacity of the /-th link (/ € £). We rewrite the two constraints 
(the resource constraint for link /, and the control constraint with threshold Yg) as 

0 < Tpu" = ki <ci (9.4) 

p€V, 

0<Y1 = k2<Yg (9.5) 

p€T. 

in terms of the quantities and k 2 representing the sums in (9.4) and (9.5), respectively. 


59 



9.2.1 Probability of Voice Blocking 

Application of the knapsack appro9dmati<»i to the above formulation 3 rid<l 8 

e,-r, 

= E E (»•«) 

iki»0 ikjsO 

(for p € Pin Vs) as the voice blocking probability where 

Piki,k2)= 53 PiN\N*) (9.7) 

^ikuk2)= |(iV*,iV-)|0<n;<n;,peP,UP,;0<53 = 53 

{ p€‘Pi pev, 

(9.8) 

After the normalization P'{ki,k 2 ) = P(iki,k2)/-P(0,0), 

(9.6) becomes 


l-ScftsS‘ 


(9.9) 


Proposition 9.1 

P'iki,k 2 ) satisfies the recursion 


f TT'^ [T,p€V,nPi rpP^P'if^i -rp, fc2)+Epe7»,nr»/p^?^'(^i *^2-rl*^)] ; 


if r- < ti < c/,ri*^ ^ k 2 <Y, 


i :• Eper»,nr>; *^ 2 ); 


if Pp < ki < Cl, k2 = 0 


P'(ki,k2)- ^ ^^ Epe2».nr»f »*p'Vp-P'(fci. ^2 - 4’^) 




1 ; 

0 ; 


if kj = 0,rj,*^ < k2 < Vs 
if fci = 0, ^2 = 0 

if iri is not an integer multiple of Vp 
or k 2 is not an integer miiltiple of rp 

(9.10) 


60 


<n 




where r, < ki <ci and < T«- 

Proof: It follows easily as a special case of of Appendix B; we only need to set = r^, 

Vi = Viy V 2 = P*, Z\ = ci, Z 2 = y,, and use only the constraints on ki\ we 
set mi = 0 for : = 1 , 2 . 

9.2.2 Probability of Data Queueing 

The application of the knapsack approximation to the probability of queueing data 
when conditions (9.1) and (9.2) are present reqtiires an extension of the method of Section 

5.2 to incorporate additional dimensions. In particular, instead of the ki, mi for 1,2 
defined and used in Section 5.2 to represent the necessary integer entities for nodes ni = 1 
and 02 = 2 (connected by link /) and which reflect only the bandwidth (or transceiver) 
conditions, we must introduce additional such entities to represent the threshold condition 
of (9.2). Actually, we need a total of six integers {ki,m\; k 2 ,rn 2 ; k 3 ,mi) to represent all 
necessary entities: (ki,mi) for the transceiver constraint on the set Vi D P,, (k 2 ,m 2 ) for 
the transceiver constraint on the set V 2 HP,, and (ksjrna) for the threshold constraint 
on the set P,; compare with (9.4)-(9.5) and (5.15). This requires the definition of a six¬ 
dimensional entity P(k \, mj; k 2 » ks, m 3 ) similar to that of (5.16) and the corresponding 
recursion. The details are complicated but straightforward and are omitted. The rest of 
the knapsack approximation for this case proceeds as in Section 5.2. 

0.2.3 Extension to Multiple Control Constraints 

The formulation, the knapsack approximations, and the recursions for the probabil¬ 
ities of voice blocking and data queueing can be extended to include additional control 
constraints of the form (9.2) for several distinct s £ S. For a small cardinality number |5| 
the computational effort, although increasing exponentially (as 2 *^ 1 ) with the totaJ number 
of control constraints, remains reasonable; however, for large |«S| it becomes prohibitive. 
This is the reason for our consideration in Section 9.3 of a different approach that requires 
a substantiadly reduced computational effort. 

9.3 The Knapsack Approximation via the Introduction of Fictitious Links 

The second method for applying the knapsack approximation to integrated voice/data 
networks with admission control is very straightforward and does not suffer from the 
computational problems of the first. Actually, the required computational effort grows 
only linearly with the number of control constraints. The key idea here is to introduce 
fictitious links /, with link capacity Y, that represent each of the control constraints (s € «S) 


61 





of (9.2). On these fictitiotis links the paths carry information at a rate (which may 
not be equal to r^). In this manner all voice calls transmitted over the paths (circuits) 
which satisfy a particular control constraint (i.e., p € V,) use this fictitious link, that is 
/« € p for all p € Pa- This means that besides the nattiral links of the network (part of the 
given architectvire) new hnks are added which do not represent any physical connection 
but rather they signify satisfaction of control constraints. After the set of links C has been 
expanded to include the new links, that is £' = £U5, we apply the usual procedure for the 
knapsack approximation to the new expanded set of links £'. For example for the voice 
blocking probability we use the recm'sions 


Li>q = Kfq JJ (1 — L/*p), p € P/s /'€£' = £ U5 

for q € Vi', where Vp = {p € V\l' € p,/' € £'} and finally B, = 1 - 

computing iv;», [for example via (4.5)-(4.6)] we must be careful to use (c/,rp) for the real 

links (when V 6 £) and (F,, ) for the fictitious links (when /' 6 5). The above approach 

is also applicable to the approximation of the probability of data queueing and the average 
data delay (Section 5) after the expansion of £ to £' has taken place. 


62 





10. REVENUE SENSITIVITY VIA REDUCED-LOAD APPROXIMATIONS 
In several practical problems of performance evaluation and optimization in networks 
such as optimal data routing and the allocation of additional resources in response to 
increases in traffic demand, the rates of change or derivatives (termed sensitivities) of 
certain i>erformance measmes (termed revenue) with respect to network resources (e.g., link 
capacities) and traffic loads (e.g., average offered voice or data traffic) play an important 
role. If accurate approximations to these sensitivities that require modest computational 
effort for their evaluation can be derived, then they can be used in a variety of optimization 
problems to derive near-optimal control or allocation strategies. This is exactly what is 
accomplished in this section. 

Specifically, we first present certain popular measures of revenue and then derive their 
(approximate) sensitivities with respect to link capeurities, voice loads, and data loads. 
This is first accomplished in Section 10.1 for the general m\ilti-rate network model (of 
Sections 2.1.1 and 2.2.1); in particular. Section 10.1.1 deals with smtable sensitivities for 
voice revenue and Section 10.1.2 deals with suitable sensitivities for data revenue. Then 
in Section 10.2 we outline how to modify and apply these results to the r alti-hop radio 
network model of Sections 2.1.2 and 2.2.2. 

10.1 Revenue Sensitivities for General Multi-Rate Networks 

Suitable choices for the long-nm averse voice and data revenues for the multi-rate 
network of Sections 2.1.1 and 2.2.1 are 

»'•(£':£)= (10.1) 

P€V 

WH/,p'’;c) = Y,7!p1(1-Qi). ( 10 . 2 ) 

where 7" (p G V) and 7^ (/ G C) is the revenue rate when a path-p czdl is accepted and 
link-£ data traffic is served, respectively. Thus (10.1) and (10.2) provide natural definitions 
of the (long-term) average revenue generated when voice calls are accepted (not blocked) 
and data packets are served (not queued), respectively. In the above notation £*' and £** 
denote the vectors of voice and data losids {Pp,p G V and pf, I E C) and c the vector of link 
capacities (cj,/ G C). In this section it is assumed that the probabilities of voice blocking 
Bp and data queueing Qi are evaluated via the knapsack approximation. 


63 




10.1.1 Sensitivity of Voice Revenue 

The sensitivity of the voice revenue with respect to link capacities and voice loads is 
evaluated in [ 6 ] (see also [7]) via the knapsack and Pascal approximation methods. Here 
we repeat the results for the sake of completeness and to introduce the necessary notation. 

For the voice revenue the following sensitivity measures are defined with respect to 
link capacity and voice loads: 

c5,==W"(£";c-r,e,)(10.3) 
AW” 

— (10.4) 

where Cp is an |£1 x 1 vector with unit value at entries / € p and zero value at all others. 

The quantities cj'p in (10.3) have been called shadow prices in [ 6 ] and represent the 
expected revenue lost (number of blocked voice calls) when we remove r, circuits from link 
/ (or accept a call of path p at link /) for one xmit of time. If we make the approximation 
that class -9 calls arrive at link / according to a Poisson process with offered load 

n 

(termed thinned load, with as defined in Section 4.2), then the expected loss in revenue 
from class -9 connections being blocked at link / due to the removal of Vp circuits for one 
unit of time is p® • hiqp * 7 ,, where 


hlqp = K,qlci-rp,p:;. JI {l-LtqU eVl\-K,qlci,p^^, J] {I - q' £ V,\ 
\ / \ / 


(10.5) 


where Kiq is given by (4.5)-(4.6). However, each class -9 connection blocked on link I (if it 
had been accepted), would have used rq circuits on each link ( £ q,£ ^ 1. Thus the expected 
gain in revenue from additional connections being accepted on links ( £ q,£ ^ I due to a 
class -9 connection being blocked at link / for this one unit of time is p" ■ hiqp ■ ^j^q j^i cj,. 
Subtrjurting the gain from the loss and summing over q € Vi yields the following system 
of linear equations: 




- S - rp^Pq'^9' € Vl) -PqKlq {ci,Pg.,q' £ Vi)] 

qePi 



E c?.) 

teqjgti j 




64 








( 10 . 6 ) 


- Yi (1 - ^9 U - ^p^p))] • I 7, - Y, ^*9 

9ev, \ e€l,t^l 

In deriving (10.6) we first use the results of Section 4.2 to show that the relationship 
between the load p” and the thinned load p” on link / is 

p«(l - Xi,) = p'(l - B,) 

and from this it follows that 



p",K,, (c,,p;.,,' 6 p,) = pjx,, = p",-p;(i- fl,{£)). 


Finally, the right hand side term in (10.4) can be interpreted as follows. An additional 
call offered to route p will be accepted with probability (1 — Bp); if accepted it will earn 
7 y revenue, but at a cost cip for each link / 6 p. 


10.1.2. Sensitivity of Data Revenue 

In contrast to the previous section that reviewed the results of [6] for the sensitivi¬ 
ties of the voice revenue, the derivation of sensitivities for the data revenue of integrated 
voice/data multi-rate networks appears for the first time in this section. The following sen¬ 
sitivity measures with respect to link capacities and data loads, respectively, are suggested 
for the data revenue of (10.2) 

e,) (10.7) 


dw^ 

dpi 




( 10 . 8 ) 


where e; is an |X| x 1 vector with unit value at the entry I (ihe link in question) and zero 
value at all other entries. 

Since link data behavior is assumed to be mutually independent (refer to Section 
2.2.1), the term in (10.7) can be obtained in the form 

cf S [p{(\ - (?,(£)) - pf(l - Q,(i - £,))] • if (10.9) 


following similar reasoning to that which resulted in (10.6) above for the voice revenue 
shadow prices. However, because of the inter-link independence assumption the approxi¬ 
mation in (10.9) can not be fully trusted. 


65 








The term in (10.8) again can be obtained intuitively by noting that additional data 
(^ered to link / will not be queued with probability (1 — Qi)] if accepted, it will earn 7 / 
revenue but at a cost cf. 

Instead of obtaining dW*/dp* from (10.8) for which (10.9) is necessary, an alternative 
way of computing dW*/dp* is used in this report, according to which 


dW* 

dp* 


- 7i'(l - Qi) + 1(1 pf 


Mi-Qi) 

Ap* 


( 10 . 10 ) 


where A(1 — Qi)/Ap* denotes the ratio of finite differences for Ap* = .001. 

The evaluation of the data revenue sensitivity with respect to voice load is considerably 
more complicated. The result is given by the following Proposition: 

Proposition 10.1 

The data revenue sensitivity with respect to voice loads takes the form 


dW* 

dpl 




$ 


+ /3 


W"‘'(c - Tj,e ) - W*ic) 


a 


-- rr— 


0 + ^ C?(c-rpCp) 


(AL*.A*).€n(c-r,*,)p€^ 


= (1-B,) 


0 


■^W*(c-r,^)-W*(c) 


a 


Q + 0 


UV“.A')en(c-r,e, ) 




( 10 . 11 ) 


where G is given by (3.3), P{c\,p*) is given by (5.6), the residual capacity for data is 

cj = c/ - and 

l€C 

The terms in (10.11) and (10.12) can be approximated by applying the knapsack or Pascal 
methods. In particular, the knapsack approximation is applied to the Qi terms in 

W*{C - TpCp) = llpfil - Qlic - TpCp)), (10.13) 

(€C 

tec 


66 









and to the term 


Ul\iL*)€a(e-r,e^) 

e',-1 

= Y,itpl E Pis.-r.uM’, a') ■ E ■ -ft'i > *)• 

'€£ (W''.N‘)€n(c-r,*^) nf=0 

Proof: Provided in Appendix H 

10.2. Revenue Sensitivities for the Multi-Hop Radio Network of Sections 2.1.2 
and 2.2.2 

Recall that for the multi-hop radio network of Section 2.1.2 and 2.2.2, the link capacity 
vector c should be replaced by the node transceiver vector T and the rate of voice calls in 
all circuits is = 1, p € V. 

To obtain the sensitivities of the voice revenue we must replace c by T, ci by Tn, / € £ 
(links) by n 6 A/" (nodes), Vi (set of all circuits or paths using link 1) by P„ (set of all 
paths passing by node n), and c — by X “ ^ (where ^ is an \J^\ x 1 vector with unit 
value at entries n € p and zero value at all others) in (10.3), (10.4), (10.6) and all other 
expressions of Section 10.1.1. 

To obtain the sensitivities of the data revenue we must carry out the same substitu¬ 
tions in (10.10) and in (10.11)-(10.14) as we did for the voice revenue sensitivities in the 
previous paragraph. In (10.11)-(10.14) the following additional substitution is necessary: 
the residual (data) capacity 


c/ = c/ - 

p€Vi 

of link / € £ connecting nodes ni,n 2 € Af (i.e., I = (ni,n 2 )) must be replaced by 
cj = min{r„, - (Wp - n*) , ^ (n" - n^}. 

p€‘f*ni P€^i,2 


67 




11. NUMERICAL RESULTS AND PERFORMANCE COMPARISONS 

The presentation of the numerical results in this section is organized as follows. In 
Section 11.1 the network paradigms used for general multi-rate wired networks and for a 
radio multi-hop network are described in detail in terms of architectures, network param¬ 
eters, and traffic parameters. In Section 11.2 comparisons of the approximations to and 
the exact values of the performance measures of interest are carried out for the radio net¬ 
work paradigm with no admission control. This is repeated in Section 11.3 for the general 
multi-rate multi-hop wired network paradigm. Admission control schemes for voice traffic 
(based on thresholds) in the radio network paradigm are described in Section 11.4. Section 
11.5 presents the approximations to the voice and data revenue sensitivities for the radio 
and wired network psiradigms of Section 11.1. Finally, Section 11.6 discusses the required 
computational effort for the various approximations. 

11.1 Network and Traffic Models for the Paradigms Used 

The two networks of interest are shown in Figures 2a-2b and 3a-3b. The network of 
Figure 2a is the paradigm shown in [11]-[12]. It is a ten-node multi-hop radio network, in 
which the main resource of interest is the number of transceivers at each of the network 
nodes. In most of our examples involving this network, T (which denotes the vector of 
transceivers at the ten network nodes) takes the value T = (8,8,8,8,8,8,8,8,8,8); we also 
study T = (4,4,4,4,4,4,4,4,4,4) to demonstrate the quality of the approximations when 
applied to a smaller system. In Figure 2b, the five circuits used by voice calls in the network 
of Figure 2a are shown. The voice calls follow the model of Sections 2.2.1 and 2.2.2 and 
have in all examples (unless specified otherwise) activity factor = .4 (half-duplex); 
however; limited results are also presented for voice activity factors of 0.8 (full-duplex) 
£ind 1.0 (corresponding to a voice model with no silence periods). The network data traffic 
is transmitted over the same nine links, that are used by the aforementioned five voice 
circuits. As discussed in Section 2.2.2, an M/D/c model is used for data traffic over the 
above nine links, with capacities defined by Eq. 2.0. In this model, the data can only 
use transceivers that are not occupied by voice calls. In the model of Section 7.3, some 
transceivers at every node are a priori dedicated to data traffic and the data link capacity 
is defined by (7.18); we will come back to this model when we show results for the average 
data delay. The network of Figtires 2a-2b is characterized by a single data rate, which 
assumes a conunon value for both voice and data traffic. 


68 








Figures 3a and 3b, show the multi-rate star network of [6], which is used in this 
section as a paradigm of a general-purpose integrated voice/data multi-rate wired network. 
The main network resource is the vector of link capacities c. Initially we reproduce the 
example of [6] by setting c = (90,100,110,120) for the four links of the network; later we 
demonstrate the accuracy of the approximations for smaller values of the Unk capacities 
as well. There are twelve voice circuits in the network of Figure 3a; and Figure 3b lists the 
links used and the transmission bandwidth reqmred for each voice circuit. Data traffic is 
asstimed to always require vmit transmission bandwidth. The voice model is described in 
Section 2.2.1 and the activity factor for the voice calls is = .4. An M/D/c model is 
again used for data traffic with link capacity given by (3.7b). In this model, data traffic 
is allowed to use only the capacity left unused in the four network links after the voice 
call requests have been accommodated. In the model of Section 7.3, some portion of the 
capacity of each link is a priori dedicated to data traffic and the data link capacity is given 
by (7.17); we will come back to this model when we show results for the average data delay. 

11.2 Comparisons of Approximations for the Radio Network of Figure 2 with¬ 
out Admission Control 

This group of numerical results pertains to the radio network model of Figure 2 in 
the absence of admission control, i.e., a voice call is admitted if and only if a transceiver 
is available at every node along the predetermined path.. Networks with eight transceivers 
per node are evaluated in Section 11.2.1 and networks with four transceivers per node axe 
evaluated in Section 11.2.2. In these two subsections, the entire number of transceivers 
at each node is available for use by the voice traffic; data traffic is served only if some 
transceivers remain unoccupied. However, in Section 11.2.3 we eJso evaluate networks for 
which one pair of transceivers is dedicated to data traffic for each of the nine data links in 
the network of Figure 2. 

11.2.1 Results for a Radio Network with Eight Transceivers per Node 

We first consider the case of T = (8,8,8,8,8,8,8,8,8,8), i.e., each node has eight 
transceivers. Figures 4 and 5 show the exact value, knapsack approximation, and Monte 
Carlo summation (the midpoint of the confidence interval is shown) for the average prob¬ 
abilities of voice blocking and data queueing, versus the offered voice and data loads, 
respectively. The “exact value” solutions for the probability of voice blocking are based on 
the product-form solution. Those for data packet queueing are based on the M/D/c model 


69 






and Kleinrock's independence assumption, thus in the latter case the results are not tiuly 
exact but rather they are based on closed-form approximations. In both figures, the prob¬ 
abilities of voice blocking and data queueing represent the averages of such probabilities 
over all voice circuits and data links in the radio network, respectively, that is, 

llpevp; 

and 

^leCpfQl 
^ Ei^cPf ■ 

In Figure 4, the value of the data load is irrelevant (since voice has priority over data) 
and the offered voice load ranges from 0 to 15. In this case, we have a single-rate 
network with r, = 1 for all paths, and p* takes the same value for all five paths (voice 
circuits). Notice that the knapsack approximation, the Monte Carlo s umm ation method, 
and the exact expression for the probability of voice blocking yield results that, are very 
close to each other for all values of the offered voice load. Recall that the knapsack and 
Pascal approximations yield identical restilts for single-rate networks. 

In deriving the approximation via the Monte Carlo siunmation method, we used 
300,000 sample points (calls to the random number generator computer routines), which 
resulted in a confidence interval of 95%. Importance sampling scenarios according to 
which = Pp (p € V) for the probability of voice blocking (refer to Section 8.2) and 
'Tip = Ppfil{a + /3), 72 p = p®a/(o + ^) (p € V) for the probability of data queueing (refer 
to Section 8.3) were used. Recall from the discussion in Section 8 [following equations 
(8.7)-(8.10) and (8.14)-(8.15)] that the confidence interval parameter r) and the number 
of samples (calls of the random number generator) n are related in a complicated man¬ 
ner [e.g., see (8.10)], which involves the sample variance a„(Z); therefore, the appropriate 
value of n that guarantees the desirable confidence interval is found through trial and error. 
The number 300,000 given above represents the result of several such attempts to find a 
number that is sufficiently large to work for most situations of interest (for all different 
values of the sample variances for the numerical examples considered). The variation of 
the 95% confidence interval did not exceed 2% of its mean value during this search. 

Similar results are shown in Figure 5, in which the offered voice load is p^Vp — 5.5 
for all voice circuits, and the offered data load pf ranges from 0 to 4. The data loads of 


70 







all nine links are assumed equal. Again, the knapsack approximation is very close to the 
exact value of the probability of data queueing. 

Tables 1-4 amplify the results of Figures 4 and 5 by providing detailed comparisons of 
exact values, knapsack approximation, and Monte Carlo summation for the probabilities 
of voice blocking and data queueing for a broad range of offered voice and data loads. 
The column denoted “percent error” refers to the percent relative error generated via a 
comparison of the results obtained using the knapsack approximation to the exact values 
[ = 100 X (knapsack-exact)/(exact)]; the sign of the relative error has been maintained in 
these calctilations. The results are organized in a manner that first presents the results for 
the average quantities (averaged over the traffic loads of all paths or links) and then the 
individual results for each path or link. This organization plan is followed for basically all 
the numerical resxilts presented in tabular form in this report. Table 1 shows the average 
probability of voice blocking B (over all paths) for different average voice loads p* defined 
as 



Then Table 2 shows the individual probabilities of voice blocking Bp for each of the paths 
p (p € V) for three values of the path voice loads p"; recall that = 1 for the radio 
network of Figure 2. 

Similarly, Table 3 shows the average probability of data queueing Q (over all links) 
for different average voice loads p", average data loads p** defined eis 



and for the three voice activity factor values 0.4, 0.8, 2 uid 1.0. 

Then Tables 4a, 4b, and 4c show the individual probabilities of data queueing Qi for 
each of the links I {I e C) for various data loads pf, for voice activity factors 0.4, 0.8, and 
1.0, and for voice loads 0.1, 1.0, and 2.0, respectively. 

In the case of the single-rate radio network of Figure 2, since Vp = 1 for all p € 'P, 
if the utilizations p” are equal for all paths, then as well. Similarly, equsJ values 

of pf for all data links imply that p^ — pf as well. Therefore, since in all tables of this 
subsection the Pp’s are equeil to each other for all voice paths and the pf’s are equal to 


71 





each other for all data links, no distinction is made in the text between the values of p* 
and ^ or between the values of pf and pi*. In any event the caption of each table omtains 
all necessary information about the voice and data loads. 

In particular, in Table 1, the approximations and the exact value of average probability 
of voice blocking are compared for different values of the average offered voice load = 

P € is observed that the agreement between the approximations and the exact 

value is from excellent to very satisfactory over the entire range of values of the offered 
voice load considered. 

We take the opportunity here to quantify the terms excellent, very satisfactory, and 
satisfactory (or fair) pertaining to approximation accuracy and used throughout this sec¬ 
tion. By excellent accuracy we mean that relative error between the approximation and 
the exact value is smaller than 1%; by very satisfactory we mean that the relative approx¬ 
imation error is smaller than 5%; and by satisfactory (or fair) we mean that the relative 
approximation error is most of the time smaller than 10% and occasionally between 10% 
and 20%. In all of our examples, the exact value always falls within the confidence interval 
provided by the Monte-Carlo summation method. 

In Table 2, the results of Table 1 are shown in greater detail for the voice-blocking 
probabilities of each of the five voice circuits of the radio network and for offered voice 
loads equal to 1.0, 5.5, and 10.0 for all paths. Again, the approximations are very accurate 
for all voice circuits, although a variation in accuracy is observed from circuit to circuit. 

Similarly, in Table 3, the knapsack approximation and the exact value of the average 
probability of data queueing are compared for different values of the offered voice and 
data load. For each of these tables the results are shown for data loads {p* = pf, / € C) 
of 0.5, 2.5, and 4.0 (corresponding roughly to situations of light, moderate, and heavy 
data traffic) and for several values of the voice loads (p” = Pp, p € V). The accuracy 
of the knapsack approximation remains very satisfactory over the entire range of traffic 
parameters of interest. 

Tables 4a - 4c show certain results of Table 3 in greater detail for the probabilities of 
data queueing at each of the nine data links of the radio network of Figure 2. The results 
are compared for the three voice activity factor values 0.4, 0.8, and 1.0 for voice loads 
0.1 (Table 4a) and 1.0 (Table 4b) and data loads 0.5, 2.5, and 4.0. Results for percent 
error are included only for queueing probabilities greater than 0.0005. Again, the knapsack 


72 







maintains from excellent to satisfactory accuracy over the entire range of traffic parameters 
of interest. 

The results of Tables 2 and 3 (for probability of voice blocking) and Tables 3 and 4 (for 
probability of data queueing) demonstrate that the knapsack approximation is accurate 
not only when averages are taken over all circtiits (paths) or links, but also when the 
network is examined at a more detailed “microscopic” level. 

11.2.2 Results for a Network with Fewer Transceivers per Node 

In the next group of tables (Tables 5, 6, and 7), we repeat the above results for 
the radio network of Figure 2 and a node transceiver vector T = (4,4,4,4,4,4,4,4,4,4), 
that is, each node has fom transceivers. The voice activity factor is y9/(o -f ^9) = 0.4 
for all results in this subsection. Table 5 shows the average probability of voice blocking 
(knapsack approximation and exact value) for different voice loads. It is observed that 
the accuracy of the knapsack approximation for this paradigm is inferior to that of the 
the radio network with transceiver vector T = (8,8,8,8,8,8,8,8,8,8) (Tables 1 to 4); that 
is, there is a degradation in the accuracy of the approximation, as the number of the key 
network resource (the node transceivers) decreases. However, the (relative) approximation 
error still remsuns smaller than 5% of the exact value for offered voice load greater than 
4.0. 

Table 6 shows the knapsack approximation and the exact value of the average proba¬ 
bility of data queueing for different voice and data loads. Similar trends to those observed 
for the average voice-blocking probability are observed here as well. Table 7 shows in detail 
certain results of Table 6 for the probabilities of data queueing of each of the nine data 
links of the radio network and, in particular, for the values 0.2, 1.0, and 2.0 of offered 
data lo8^ and the values 0.1 (in Table 7a), 1.0 (in Table 7b), 5.0 (in Table 7c), and 10.0 
(in Table 7d) of the voice load. Again, the knapsack provides satisfactory performance, 
although the agreement with the exact values is not as good as for the larger system of 
Section 11.2.1. 

11.2.3 Results for a System with TVansceivers Reserved for Data 

The last group of Tables in this subsection (Tables 8, 9, and 10) pertains to the 
radio network model of Figure 2 modified according to requirements of Section 7.3 so that 
finite data delays can be guaremteed. According to this model, a peiir of trzinsceivers for 
each of the nine data links is dedicated to data traffic; that is, the data link capacity 


73 








vector = (1,1,1,1,1,1,1,1,1) is guaranteed a priori. Thus, instead of the original node 
transceiver vector X = (8,8,8,8,8,8,8,8,8,8), the five voice circuits of Figure 2b can 
only use the transceiver vector T* = (5,7,7,7,4,7,4,7,7,7) that remains after the data 
transceivers have been assigned. The voice activity factor is )3/(o + /9) = 0.4 for all results 
in this subsection. 

In Table 8, the Monte-Carlo summation and knapsack approximations are compared 
to the exact value of the blocking probability for each of the five voice circuits and for 
the average value for a voice load of 2.5. The accuracy of the approximations remains 
satisfactory but it is inferior to that of the Tables 1 and 2 for which the voice transceiver 
vector was T = (8,8,8,8,8,8,8,8,8,8); the smaller nvimber of transceivers available for 
voice traffic degrades somewhat the accuracy of the approximations. In Tables 9 and 10, 
the average data delay 

Pi 

(measured in terms of packet duration prior to starting transmission) and the delays of each 
of the nine data links Wi (/ € C), respectively, are shown in terms of the exact value and 
the knapsack approximation for values 2.5 and 10.0 of the offered voice load and 0.7, 0.9, 
and .999 of the offered data load. Again, as in the case of the probability of queueing data, 
the “exact value” for the queueing delay is actually a closed-form approximation based 
on the M/D/c model and Kleinrock's independence assumption. Satisfactory accuracy is 
observed in all cases. 

11.3 Comparisons of Approximations for the Multi-Rate Network of Figure 3 
without Admission Control 

Figures 6 and 7 and Tables 11 to 14 pertain to performance results and compar¬ 
isons of approximations for the multi-rate network of Figure 3, in the absence of ad¬ 
mission control. The twelve voice circuits of this network (see Figure 3b) have rates 
r" = (1,1,1,1,1,1,5,5,5,5,5,5) and the four data links have rates r** = (1,1,1,1). Fig¬ 
ures 6 and 7 pertain to the multi-rate network of Figures 3a and 3b with the link capacity 
vector c = (18,20,22,24). The voice activity factor is 0/{a + fi) = 0.4 for all results in 
this subsection. 

In Figure 6, the average voice blocking probability is depicted versus the offered voice 
load p^Tp over the range 0 to 3. The load PpVp takes the same value for all twelve voice 


74 






circuits. Whenever p'^Vp (p 6 V) assumes a particular value, e.g., 1.5, the corresponding 
value of Pp is obtained from 1.5/rp for each p€V, where Vp takes values 1 or 5 according 
to the vector of voice path (circuit) rates above. 

For all tables in this subsection the offered loads (p") of the first six voice paths with 
= 1, p = 1,2,..., 6 are equal to each other, and the offered loads of the ronaining six 
voice paths with = 5, p = 7,8,..., 12 are also equal to each other and equal to one fifth 
of the common value of the first six. This implies that the average voice load p” = p\ = 5p^. 
Once these relationships are established the sp>ecific values of the loads are only shown in 
the caption of each table and they are not elaborated up>on in the accompan 3 ring narrative. 

As obseirved in Figure 6, the difference between the knapsack and Pascal approxi¬ 
mations and the middle of the confidence interval of the Monte-Carlo summation is very 
small for the entire range of values of the offered voice load. Similarly, in Figiire 7, the 
average probability of data queueing is illustrated as a function of the offered data load 
pf. The data loads of all four link s are assumed equal and the offered voice loads p"r^ 
are all equal to 2.0. Again excellent agreement is observed between the three approxima¬ 
tions. The exact values for the probabilities of voice blocking and of data queueing are 
extremely time-consuming to compute for the multi-rate network in question, so they were 
not generated. However, since the Monte-Carlo summation method provides a confidence 
interval for the value of the p>erformance measure of interest, we can judge the acctiracy of 
the approximations even without having their exact values. 

In Table 11, the average voice blocking probability is shown for the multi-rate network 
of Figure 2, different hnk capacity allocations, and different values of the offered voice loads. 
The four link capacity allocations considered are c = (90,100,110,120), c = (18,20,22,24), 
c = (9,10,11,12), and c = (5,5,6,6) and they are termed allocations 1, 2, 3, and 4, 
respectively. Allocation 1 is the example studied in (6). The others are obtained by 
reducing the link capacities proportionally (or nearly so). The offered voice loads depicted 
in Table 11 have been selected so that they correspond to conditions of very light traflfic 
(voice-blocking probability smaller than 0.1%), light to moderate traffic (voice-blocking 
probability around 1.0%), and moderate to heavy traffic (voice-blocking probability larger 
than 10.0%), for each of the four capacity allocation scenarios. Note that as the number 
of channels per link decreases, the offered voice load that corresponds to any particular 
blocking probabihty decreases at a much faster rate. For example, let us compare the 


75 






results for capacity allocations 1 and 3. Although the link capacities are decreased by a 
factor of 10, the traffic levels corresponding to a specific blocking probability are decreased 
by a considerably larger factor, especially at low blocking probabilities. Such a behavior 
is expected; the availability of a large number of channels permits operation at higher 
throughput levels, because we can take advantage of the law of large numbers. 

The knapsack and Pascal approximations remain relatively close to (but generally 
above) the upper edge of the confidence interval obtained via the Monte Carlo summation 
method. However, they appear to move farther away from that upper edge (corresponding 
to larger error) as the number of channels in the capacity allocation schemes decreases. 
Although we cannot claim that the knapsack approximation is uniformly more accurate 
than the Pascal approximation, it appears that the former ought to be trusted over a 
broader range of traffic (offered voice loads) and network (link capacities) parameters than 
the latter. 

Tables 12a and 12b show in greater detail the voice-blocking probabilities of each of 
the twelve voice circuits of the network of Figure 3. In particular, in Table 12a the detailed 
results (knapsack, Pascal, and Monte Carlo approximations) are shown for offered voice 
loads of 8.0,10.0, and 15.0 and for capacity allocation 1. The loads of tb^ individual voice 
circuits are such that the average voice load takes the values 8.0, 10.0, or 15.0 once the 
rates of the different circuits have been accotmted for. Again, the knapsack approximation 
appears to be superior to the Pascal approximation. Table 12b shows the probabilities of 
blocking for all twelve voice circuits for capacity allocation 2 and for offered voice loads 
0.3, 0.7, and 1.7. The knapsack approximation appears lo be superior to the Pascal 
approximation over a broad range of traffic and network parameters. The accuracy of 
the approximations exhibits a slight degradation, as the number of link channels in the 
capacity allocations decreases from that of capacity allocation 1 (90, 100, 110, 120) shown 
in Table 12a to that of rapacity allocation 2 (18, 20, 22, 24) shown in Table 12b. 

Tables 13 and 14 parallel the results of Tables 11 and 12 for the probability of data 
queueing. In particular. Table 13 shows the average probability of data queueing for the 
four capacity allocations and the different voice and data loads. The specific values of 
the offered voice and data loads have been selected so that they result in probabilities of 
data queueing of the order of 0.1%, 1.0%, and 10.0%, respectively, corresponding to light, 
moderate, and moderately heavy traffic. The knapsack and Pascal approximations appear 


76 





to be either within or close to the edges of the confidence interval obtained via the Monte 
Carlo svunmation method. Again, the knapsack approximation appears to be superior to 
the Pascal approximation over a broad range of traffic and network parameters. Table 14 
complements the results of Table 13 by showing the probabihties of data queueing at 
of the four data links of the network of Figure 3 for capacity allocation 2 and for different 
voice and data loads. The voice loads, for which results are shown, are 0.3, 0.7, and 1.7; 
the data loads are selected in the manner discussed in Table 13. Observations similar to 
those made for Table 13 are valid here as well. 

11.4 Threshold-Based Admission Control for the Radio Network of Figure 2 

The group of Tables 15-20 presents a comparison of the voice blocking probabihties 
and probabihties of data queueing for t ; radio network of Figure 2, when admission 
control is used, iii particular, three types of admission control are employed for deriving 
the results of Table 15: (i) Ek^ual thresholds Xp = 6 on the voice traffic of all five circuits 
of Figure 2b, (ii) Optimal threshold-only pohcies such that Xp < 6 on the voice traffic of 
all five circuits, and (iii) Optimal fuU admission control pohcies that consist of thresholds 
Xp on individual circuit traffic and thresholds V, on linear combinations of circuit traffic 
over selected sets of circuits. The threshold constraints on individual circuit traffic take 
the form 

n;<Xp, p= 1,2,3,4,5 
The hnear constrmnts on selected sets of voice circuits are 

n\ + < yj (control constraints from node 5) 

Tij -f nj < Y 2 (control constraints from node 7) 

”1 + ^5 < Y 3 (control constraints from node 5) 

”3 + ”5 ^ ^4 (control constraints from node 5) 

nj -f- rig < Ys (control constraints from node 7) 

These are identical to the admission control schemes considered in [11] and [12]. To the 
above control constraints one should add the resource constraints of the form 

n;<T„, neM 


77 





where Tn is the number of transceivers at node n and Vn is the set of paths intersecting 
at node n. 

Together with the results of Table 15, one should also go back to Table 1, where 
no admission control was used. In Table 15, the optimal thresholds obtained for con¬ 
trol policies (ii) and (iii) are shown for different values of the voice load; in the former 
case they are of the form (Jfi,Xj,X3,J^4,Xj), in the latter case they are of the form 
{Xi,X 2 ,X 3 ,X 4 ,Xi,Yi,Y 2 ,Y 3 ,Y 4 ,Y!i). In this table, the optimal thresholds are selected 
on the basis of the exact average probability of voice blocking which is obtained from the 
product-form solution (as in [11]). The Monte Carlo summation and knapsack approxi¬ 
mations are also shown for these thresholds, so that the accuracy of the approximations 
is checked against the exact value when admission control is used. The comparisons are 
favorable for both approximations, although the accuracy would be better if the number 
of transceivers at each node were higher. However, the knapsack approximation does not 
achieve its minimum value imder the optimal thresholds of control policies (ii) and (iii); 
these optimal thresholds were obtained by using the exact value of the blocking probability. 
Consequently, we can not repeat the comparisons of [11] for the (-afferent control policies 
based on the knapsack approximation. However, as established with the results of Table 
20 below, meaningful comparisons can be made for thresholds obtained from the knapsack 
approximation. 

Table 16 shows the exact value and the knapsack approximation of the voice blocking 
probabilities for each of the five voice circuits of Figure 2b, voice loads /o” = 2.5 for all 
circuits, and several different thresholds of the admission control policy (ii). The knapsack 
approximation shows satisfactory accuracy for all situations examined. Table 17 presents 
similar results as Table 16, but for different thresholds of the full admission control policy 
(iii). Again, the knapsack approximation shows satisfactory accuracy for all situations 
examined, but the accuracy is inferior to that observed in Table 16. In both tables, the 
accuracy of the knapsack approximation can be improved at the expense of significant 
computational complexity, if the method of Section 9.2 is used instead of that of Section 
9.3, which was used to derive the numerical results presented. 

Tables 18 and 19 complement Tables 15, 16, eind 17 by presenting results for the 
probabilities of data queueing in the presence of voice admission control. The voice activity 
factor is $/{q = 0.4 for all results in this subsection. Table 18 shows the average 


78 








probability of data queueing for a data load of 2.5, for all nine data links and for different 
voice loads and admission control thresholds. The thresholds are the optimal thresholds for 
control policy (ii) in Table 15. Again, the observed accuracy of the knapsack approximation 
remains satisfactory, but inferior to that of networks without admission control (see Table 
3). Similarly, Table 19 shows detailed results of the probabilities of data queueing at each 
of the nine data Unks of the network in question for a data load of 2.5 and different voice 
loads and admission control thresholds. Observations similar to those made for Table 18 
are vzdid; moreover, the accuracy of the knapsack approximations appears to decrease as 
the offered voice load increases. 

Table 20 compares the exact value and the knapsack approximation for the average 
voice blocking probability of the radio network of Figure 2 for different voice loads and 
three admission control scenarios: (a) no control, (b) threshold control on individual voice 
circmts based on thresholds selected by minimizing the knapsack-evsiluated average block¬ 
ing probabihty, and (c) threshold admission control based on optimal thresholds obtained 
by minimizing the exact average voice blocking probability [controls of type (ii) in Table 
15]. The percentage improvement (decrease) of the exact blocking probability of the un¬ 
controlled system when knapsack-based thresholds and optimal thresholds are used is also 
shown in separate columns. 

As shown in Table 20, the optimal thresholds derived under policies (b) and (c) dif¬ 
fer in one or more voice circuits; however, the performzmce obtained using the knapsack- 
optimized thresholds is silmost as good as that obtained using the truly-optimal thresholds. 
For example for an offered voice load of 5.5, the optimal knapsack-optimized thresholds 
are (1,8,8,8,8) and incur an exact blocking probability of 0.453, whereas the truly optimal 
thresholds are (1,8,8,8,2) and incur an exact blocking probabihty of 0.448; the correspond¬ 
ing exact value for the uncontrolled system is 0.472. This corresponds to a 4% improvement 
(decrezise) of the voice blocking probability when the knapsack-optimized thresholds are 
employed, versus the 5% decrease that can be achieved with the truly optimal thresholds. 
This improvement resulting from admission control is more drastic for large offered voice 
loads and for voice blocking probabilities. Up to a voice load of 6.5 the improvement 
increases as the voice load increases; however, for higher voice loads the improvement 
decreases with increjising offered voice load. 

The results of Table 20 above together with those of Table 23 below (which estab- 


79 












lish the significant computational advantage of the knapsack approximation over the exact 
expressions) provide major motivation for applying the knapsack approximation to prob¬ 
lems of control and optimization. Thus the knapsack approximation is useful not only for 
performance evaluation (as shown in Tables 1 to 14), but for control and optimization as 
well. 

Voice and Data Revenue Sensitivities for Networks of Figures 2 and 3 

The next group of tables (Tables 21a-21c and 22a-22c) pertains to the voice and data 
revenue sensitivities of the multi-rate network of Figure 3 and to the radio network of Figure 
2. These sensitivities were derived in Section 10 and find diverse applications to problems 
of addition of network resources (e.g., additional transceivers), optimal data routing, joint 
voice control and data routing etc. In evaluating the revenue sensitivities we need the 
voice-revenue rates 7" for all voice circuits, and the data revenue rates yf for all data 
links of the network. In Table 21, the revenue sensitivities are obtained for the network of 
Figure 3, an average voice load of 10.0 with circuit loads (10,10,10,10,10,10,2,2,2,2,2,2) and 
rates (1,1,1,1,1,1,5,5,5,5,5,5), and offered data loads of 50 for each of the data links in the 
network. The capacity allocation is c = (90,100,110,120), the vector of voice revenue rates 
is arbitrarily chosen to be (1.0,1.2,1.4,1.6,1.8,2.0,3.0,3.6,4.2,4.8,5.4,6.0), and the vector of 
data revenue rates is (1.0,1.2,1.4,1.6). The voice activity factor is /?/(o + 13) = 0.4 for all 
results in this subsection. 

Table 21a shows the Monte-Carlo summation, knapsack, and Peiscal approximations 
to the average voice revenue sensitivity with respect io the loads of all twelve voice circuits. 
The two approximations are either within or relatively close to the edges of the confidence 
interval obtained via the Monte Carlo summation method. Table 21b shows the average 
data revenue sensitivity with respect to the loads of each of the voice circuits. Again, 
the approximations and the confidence interval are in relatively satisfactory agreement 
with each other. Table 21c shows the average data revenue sensitivity with respect to 
the loads of the four data links of the network in question. Similar observations for the 
approximations like those for Table 21b are valid. It is significant that in all these tables 
the sign of the exact values of the sensitivities and of the approximate sensitivities is always 
the same. This guarantees that the the use of the approximate sensitivities (instead of the 
computationally inefficient exact expressions) in optimization routines will still move the 
optimization algorithm (e.g., the gradient descent algorithm) to the right direction for 


80 









optimizing the objective function (performance measure) of interest. 

In Table 22, the voice and data revenue sensitivities for the radio network of Figine 
2 are presented for a vector of voice revenue rates (1.0,1.2,1.4,1.6,1.8) and for a vector of 
data revenue rates (1.0,1.2,1.4,1.6,1.8,2.0,2.2,2.4,2.6). In Table 22a, the exact value and the 
knapsack approximation to the average voice revenue sensitivity with respect to the loads 
of each of the five voice circuits are shown; the voice loads of all circuits are equal to 5.5. 
There is satisfactory agreement between the knapsack approximation and the exact value; 
the relative error remains below 10%, for most circuits. In Table 22b, the average data 
revenue sensitivity with respect to the loads of all five voice circuits of the same network 
are shown for a load of 5.5 for all voice circuits and for two different data load scenaiios: 
one for which the load of all nine data links is equal to 4.0 and another for which it is 2.0. 
The accuracy of the knapsack approximation here is inferior to that observed in Table 22a, 
or in Table 21b. This is because the radio network has fewer resources and the knapsack 
approximation’s accuracy decreases as the number of channels in each link decreases. In 
Table 22c, the average data revenue sensitivity with respect to the loads of each of the nine 
data links of the network in question is shown for a lottd of 5.5 on all five voice circuits and 
the two data load scenarios of Table 22b. The knapsack approximation here appears to be 
more accurate than that of Table 22b. Similar comments about the common sign of the 
approximate sensitivities and the exact expressions as for Tables 21a*21b are valid here. 

Overall, the accuracy of the knapsack approximation for the voice and data revenue 
sensitivities appears reeisonable and suggests that it can be used instead of the exact values 
(whose evaluation is computationally prohibitive) in problems of data routing, addition of 
resources, and so on. A detailed study of these issues will be addressed in the future. 

11.6 Required Computational Effort for Various Approximations 

Table 23 provides a comparison of the computational effort required for generating 
the various approximations and exact values of the probabilities of voice blocking and data 
queueing for the radio network of Figure 2 and the multi-rate network of Figure 3. In 
the framework of this comparison, the radio network of Figure 2 is typical of a small-size 
network emd that of Figure 3 is typical of a medium- to large-size network. SUN SPARC 
Station II workstations were employed for all necessary computations. The computer code 
was written in C emd was not optimized. 

From the table we see that the computational advantage of the knapsack and Pascal 


81 





approximations over the exact expression is tenfold and over the Monte Carlo s umma tion 
is thirtyfold for the small-size network of Figure 2. For the mid-size network of Figure 3, 
the advantage in speed of the knapsack and Pascal approximations over the Monte Carlo 
Slunmation becomes six-hundred-fold, whereas the time necessary for the evaluation of the 
exact value is prohibitive for most computers. With the latter statement we mean that the 
required computation time is estimated to be of the order of 6 to 7 days for that paradigm 
and thus useless for optimization (control or resource allocation) piuposes. 

The computation time for the probabilities of voice blocking and data queueing ap¬ 
pears to be identical for both network paradigms, despite the fact that the probabiUty of 
data queueing is inherently more complicated (additional conditioning and averaging are 
involved), for the following reason. We store the pre-computed (recursively) values of the 
conditionsd M/D/c data queueing probability (conditioned on the voice state) and then 
use them in the knapsack approximation (refer to Section 5 for the appropriate equations 
indicating the conditioning and final averaging). Of course, the memory (storage) require¬ 
ments for the evaluation of the probability of data queueing are considerably larger than 
those of the probability of voice blocking. 

Table 23 establishes the imquestionable computational advantage of the knapsack 
and Pascal approximations over the exact expressions for the performance measures of 
interest and for networks of any size. These two approximations appear to require a 
computational effort that remains relatively insensitive to the network size. The Monte 
Carlo summation method is computationally efficient only for small- and mid-size networks. 
These facts, together with the very satisfactory accuracy of the approximations over the 
entire range of traffic and network parameters of interest, establish these approximations as 
excellent candidates for the time-efficient and accurate performemce evaluation of networks 
of arbitrary size and resources (link capeicities), as well as for the derivation of near-optimal 
control schemes that optimize the above performance measures. 


82 








12. CONCLUSIONS 

In this section we recapitulate the most imi>ortant features of the approximations 
developed in this report and draw concliisions about their applicability to problems of 
network control and optimization, sensitivity analysis, and performance evaluation. 

12.1 Accuracy and Computational Advantage of Approximations 

In this report, we developed reduced-load approximations (based on the stochastic 
knapsack and the Pascal distribution) and Monte-Carlo summation techmques, which en¬ 
able the accurate and computationally efficient evaluation of the probability of blocking 
of voice calls, the probability of data link queueing, and the average data link delay in 
integrated multi-hop radio networks. Accurate and time-efficient approximations are nec¬ 
essary, because the computational effort for the evaluation of the exact expressions for these 
performance measures is prohibitive for networks of even moderate size. By contrast, the 
approximations of this report (refer to Table 23) are very time-efficient. 

12.2 Application of New Approximation Techniques to a Broad Range of Net¬ 
work Architectures and lyafflc Types 

Although the knapsack, Pascal, and Monte-Carlo Summation methods had already 
been applied to multi-rate voice-only circuit-switched networks, they had never been ap¬ 
plied before either to the performance evaluation of multi-hop radio networks or to networks 
with integrated voice and data traffic. And, even for multi-rate voice networks, they were 
thought to be accurate only in the limiting regime characterized by large link capacities 
and large offered voice loads while their ratio mainteuned a fixed value. 

In this report, besides extending the applicability of the aforementioned approxima¬ 
tions to radio networks (with transceivers at the nodes being the network resource rather 
than the link capacities) and to integrated voice and data traffic, we showed that these 
approximations exhibit excellent to very satisfactory accuracy, for the entire range of 
network parameters (e.g., size, link capacities, number of transceivers at nodes) and 
traffic parameters (e.g., voice and data loads, voice activity and silence periods) of inter¬ 
est. Moreover, the accuracy of the approximations is very satisfactory not only for the 
average performance measures (i.e., averaged over all circuits and links of the network) 
but also for the performance measures characterizing individual circuits or links. 


83 






These approximation methods are apphcable to single-rate networks characterized 
by a single bandwidth assignment for all voice circuits, as well as to multi-rate networks, 
in which calls with different bandwidth requirements are accepted; in both cases, the data 
may be transmitted at a lower rate than that of the voice traffic. Moreover, our methods 
can handle voice models with periods of activity and silence, in which data is trans¬ 
mitted during the silent periods of ongoing voice calls. Finally, oiu* methods are applicable 
to variable-rate traffic voice or video; in these situations the rate of the source can 
assiune a niimber of different values (from a fixed set) as time varies. Our preliminary 
results actually show that our approach (based on the knapsack approximation) is appli¬ 
cable to sophisticated Markov-Modulated Poisson Process (MMPP) models for the 
variable-rate voice or video traffic with only a small increase of computational complex¬ 
ity. In this context, besides variable-rate voice, video telephony as well as full-motion 
video sources can be modeled and networks with such traffic can be analyzed. 

12.3 Application to Control and Optimization Problems 

Besides employing these approximation methods for the accurate and time- 
efficient performance evaluation of integrated multi-hop radio networks (and of more 
general midti-rate networks) we can use them for control and optimization piurposes, 
because of their computational efficiency. The recommended general methodology here is 
to use an accurate and computationally time-efficient approximation (e.g., knapsack) to 
evaluate the specific performance measure(s) (single measure or multiple measures in a 
weighted sum) of interest and carry out the minimization (optimization in general) with 
respect to the most promising classes of controls. The controls derived will be near-optimal 
in the sense that their performance will be very close to those of the really optimal ones 
that are derived from the optimization of the exact performEince measures. 

In particular, we have shown (refer to Table 20) that threshold policies for voice- 
admission control that minimize the knapsack-evaluated probability of voice blocking 
improve substantially the performance of the controlled network over that of the network 
without admission control 8md actually come very close to the performance of the optimal 
thresholds (which minimize the actual voice blocking probability). Without these compu¬ 
tationally efficient accurate approximations to the performance measures of interest, the 


84 





derivation of near-optimal control schemes is not feasible and one has to resort to ad-hoc 
designs. 

Moreover, the sensitivities of suitably defined voice and data revenue measures 
with respect to link capacities (or number of node transceivers), voice loads, 
and data loads were evaluated via the knapsack approximation and shown to be very close 
to the actual values (refer to Tables 21 and 22). Again, these approximate sensitivities are 
much more computationally efiicient than the ctunbersome (and usually prohibitive) exact 
expressions. Actually, as our results establish, there will be almost neghgible loss in revenue 
when these approximate sensitivities are used in place of the exact ones. Consequently, 
important practical problems of allocating additional network resources in response 
to increasing voice and/or data network traffic demand can be easily handled with our 
approach, as well as problems of data routing in which the derivatives of the data delay 
(or the probability of queueing) are used by standard optimal routing algorithms. 

12.4 Application to High-Speed Networks 

The approximations to the probabilities of voice blocking, data queueing, and the 
average data delay developed in this report can be also applied to important problems in 
the area of high-speed networks, with proper modification. These include: 

(i) algorithms for the set up of virtual paths for video, .voice, and high rate data sources 
in asynchronous transfer mode (ATM) networks. 

(ii) schemes for admission control of different classes of trafi[ic in ATM networks, and 

(iii) specific formulations of the problem of multicasting hierarchically encoded data to 
destinations that can receive subsets of the trjinsmitted signal according to their band¬ 
width and access constraints. 

In all such high-speed network applications, the approximations of this report are expected 
(after suitable modification) to provide both accurate and time-efficient performance eval¬ 
uations and to be used for deriving near-optimal control schemes and resource allocations. 
ACKNOWLEDGEMENT 

The authors would like to express their sincere thsuiks to Dr. Jeffrey Wieselthier of 
the Naval Research Laboratory for the insightful advice and the stimtilating comments 
that he hiis offered throughout the preparation of this report. 


85 








REFERENCES 


[1] L. Kleinrock. Communication Nets. Stochastic Message Flow and Delay. New York: 
McGraw-Hill, 1964. 

[2] D. Bertsekas and R. Gallager. Data Networks. Prentice Hall International, 1987. 

[3] J. Y. Hui. Switching and Traffic Theory for Integrated Broadband Networks. Boston; 
Kluwer Academic Publishers, 1990. 

[4] F. Kelly. ^‘Blocking Probability in Large Circuit-Switched Networks.” Advances in 
Applied Probability, Vol. 18, pp. 473-505,1986. 

[5] F. Kelly. “Adaptive Routing in Circuit-Switched Networks.” Advances in Applied 
Probability, Vol. 20, pp. 112-144, 1988. 

[6] S. P. Chung and K. W. Ross. “Reduced Load Approximations for Multirate Loss 
Networks.” Preprint, 1991. 

[7] K. W. Ross and J. Wang. “Monte Carlo Summation Applied to Product-Form Loss 
Networks.” Preprint, 1991. 

[8] K. W. Ross and D, D. Yao. “Monotonidty Propertied of the Stochastic Knapsack.” 
IEEE Transactions on Information Theory, Vol. IT-36, pp. 1173-1179, 1990. 

[9] K. W. Ross and D. Tsang. “Teletraffic Ehigineeringfor Product-Form Circuit-Switched 
Networks.” Advances in Applied Probability, Vol. 22, pp. 657-675, 1990. 

[10] D. Mitra. “Asymptotic Analysis and Computational Methods for a Class of Simple, 
Circuit-Switched Networks with Blocking.” Advances in Applied Probability, Vol. 19, 
pp. 219-239, 1987. 

[11] C. M. Barnhart, J. E. Wieselthier, and A. Ephremides. “An Approach to Voice Admis¬ 
sion Control in Multi-Hop Wireless Networks.” Proceedings of IEEE INFOCOM’93, 
March 1993, pp. 246-255. 

[12] C. M. Barnhart, J. E. Wieselthier, and A. Ephremides. “Admission Control in In¬ 
tegrated Voice/Data Multi-Hop Radio Networks: Analysis.” NRL Memorandum Re¬ 
port, NRL/MR/5521-93-7196. 

[13] L. P. Seelen and H. C. Tijms. “Approximati*. ns to the Waiting Time Percentiles in 
the M/G/c Queue.” Teletraffic Issues, Vol. ITC-11, pp. 53-57, 1985. 


86 





[14] J. E. Wieselthier and A. Ephremides. “A Movable-Boundary Channel-Access Scheme 
for Integrated Voice/Data Networks.” Proceedings of the IEEE JNFOCOM ’91, pp. 
721-731, April 1991. 

[15] R. Y. Rubinstein. Simulation and the Monte Carlo Method. New York: John Wiley 
and Sons, 1981. 

[16] P. Bratley, B. L. Fox, and L. E. Schrage. A Guide to Simulation. New York: Springer- 
Verlag, 1987. 

[17] D. Y. Burman, J. P. Lehoczky, and Y. Lim. “Insensitivity of Blocking ProbabiUties 
in a Circuit-Switching Network.” J. Appl. Prob.. Vol. 21, pp. 850-859, 1984. 


87 







APPENDIX A 

Proof of Part (a) of Proposition 3.1 
(System Steady>State Distribution) 

The starting point is the chain rule for the steady-state probability of the voice state 
iKv^Kv)^ namely 

P(fLr,KT.’'i) = PiJLv.fLv) ■ P(’‘1\lLv<lLv)- - 1 ) 


Since voice has preemptive priority over data, the analysis of the voice component can 
be isolated from that of the data component. Consider the voice state vector (N.^,£Lv)f 
denote 

Nii = K. • • • ... ,n|i,|) 

JjL'Pp ~~ (.*^1 > • • • 1 1 ’ * * • • »^17*1/ 

^jPp ~ 

IlLpp ” 1 • • • ^^p~i^^p ~ *^^+ 1 ’• • •»*^i'P|)‘ 

The global balance equation for ** 


pm,m . 5^ nX -h (n; - n;)n; + (n; - n;)o -h n;p + f;- 

p€T ^ 


+ 0 


+f: 




a-p 


= E pmvM.v,) + PiK^-,<m>) ■ p;-^ 

f€P ^ 

+ pm^Kvp) • (n;+1)^+ p(M.hiiv;) ■ (n; -«;+i)o 

+p{KVr&i.) ■ ("J+IK+ puiVi’iLv) ■ ("; - "j+Df*; 

for all (Kv>iivU!lv%K^,) € «.• 

The local balance equations for are 

■ nXp = pm-p^N^-p) • p;-^ 




p{m>,m ■ (n; - = pm^m • p;-^^ 


{A-2) 


(A-3) 
{A-A) 


88 







Piui.Kv) ■ w; - = pqlt.i&,) ■ (»; + - 5 ) 

PW-.Et) ■ = PUlT.lLT,Xn; - + l)o (A- 6) 

P(ia,Ni.) ■ P;-^ = PiMvrKv,) ■ (n; + 1 V; (A - 7) 

PiKixKT) ■ = P(&,’llv) •("; + !- KK - 8 ) 

for aU m<m.),Uli%,lLv,) € fi.. 

It is straightforward to show that the P{Wp^NJp) provided in Part (a) of Proposition 
1 is a solution to the above local balance equations. Any solution to the local balance 
equation must also be a solution to the global balance equation and, as P (N ^.N^) in 
Part (a) satisfies the balance equation, it is the steady state probability. 


89 








APPENDIX B 

M/M/c and M/D/c Data Models 

This appendix reviews all important formulas of the M/M/c and M/D/c data models 
and sketches the relaxation method proposed by Tijms [13] for the evaluation of the steady 
state probabilities and other quantities of interest for the M/D/c model. 

B.l Useful Expressions for M/M/c Data Model 
The steady-state probabilities satisfy the recursion 

Apj_i = min(j, c)pp>, j = 1,2,... 


and are given by the expressions 


i = 0,i. C-I, 

1 J > C 


where 


The probability of finding the system busy (blocking probability) !!«, = P{j > c} = 

llT=cPj 

n M" , M" 1 

““’-c!(l-p)\;^ k\ ■^c!(l-p)/ • 

The average number of customers in the queue E{Nq} = ~ given by 

- cKl - p)^ k'. *c'.{l-p)j 

Finally, the probability distribution of queueing delay (i.e., waiting time, not including 
service time) Wq is given by 


P{W',>x) = ^py 

>=C 


J-C 


Jt=0 


(cpx)* 

k\ 


X > 0. 


90 









and the average queueing delay io given by 


E{W,) = 


£{N,) 


A c!c/i(l — 


^. (cpy 1 


B.2 Useful Expressions for M/D/c Data Model 

The steady-state probabilities satisfy the following equilibrium equations 

C 

p„(< + D) = 'rp,(()e-‘° 


— M + 2^ Pk{t)e —— , , J>1 


Pj(t-\-D) = Y,Pkit)e 

t=0 fc=c-H 


where D is the service time. 

From those we can derive the recursion 


P, = 




where 


J2pj = 1 - 


The average number of customers in the queue can be also derived as 


E{N,) = 


(cp? - c(c- 1)-|-X;j=j{c(c- - l)}Pj 

2 c(l-p) 


and its second moment as 


E{N,{N, - 1)) = 


{cp? - c(c - l)(c - 2) -I- - l)(c - 2) - j{j - l)(i - 2)}pj 


3c(l-p) 




91 









B.3 Relaxation Algorithm for Evaluating Steady State Probabilities of M/D/c 
Data Model 

The above recursion for the p^’s can not be used directly to find the pj's of the 
M/D/c system because it is equivalent to an infinite system of linear equations. Thus we 
first tnmcate it to a finite system by using a sufficiently large integer I. chosen so that 

f;py<fpr<io- 

j=L jsL 

where p**** for j = 0,1,... denote the steady state probabilities of the M/M/c system, 
which are available in closed form (see Section B.l above); the inequality reflects the 
intuitive fact that the M/D/c queue involves less variability than the M/M/c queue. 

It turns out (see [13]) that for light traffic it is preferable to use the tnmcation to L 
terms described above. However, for non-light traffic, \macceptably large values of L may 
be needed. In this case it is advantageous to use the theoretical fact [13] that 

ss T for all sufficiently large j 
Pi 


where 

r = \ + b/X 

and 6 is determined as the unique positive solution to the equation 

A(e*^/" - 1) = 6 

This asymptotic result is exploited in the following manner: for all j such that 0 < j < N 
we use pj and try to determine their value from the system of linear equations; for all 
j > N ■we use 

Pj « T^~^pN for j > N 

where N > c. It turns out (see [13]) that the necessary value of N is smaller than the 
necessary value of L (of the previous paragraph). The procedure for obtaining the p/s is 
sketched next (following [13]). 


92 





After tnincating the linear system of equations involving the pj's to an {N+l)x(N+1) 
linear system and replacing the probabilities pj by pnt^~\ for j > N, we obtain the 
following system of linear equations: 


N 

Pj = ^ajkPk, j=0,l,...,N 

kmO 

Mi 


with 

N 

^Pj + y^PN = 1 (16) 

i=0 

where 

0<j<iV — 1, 0<1:< min(c + j,N — 1) 

iV — c < j < i* — 1, k = N 
j-N, 0<k<N-l 
otherwise 


/ a(nim(j,i-*+e)) . 
l-a(min(i,c)) ’ 


ajk = < 


■ , ■ V-.. . • 

l-a(inin(i,c)) ’ 

a(min(i,j-t4-c)) 

tO; 


Here, 

a{e) = e-^^{\DY/£\, for £ > 0. 

The above system of linear equations is solved via the modified successive overrelaxation 
method of Tijms [13]. 

According to the standard successive overrelaxation method the operator associ¬ 
ated with a relaxation factor u transforms each vector x = (lo, ,xn) into the vector 

Bu,x, whose components {Bu,x)i are defined recursively by 


{Bu,x)i = (1 - u)xi -h U} 


i-l 


N 


^ aijXj 

i=o i=t+i 


i = 0,1,... ,N. 


Assuming that the integer N is sufiiciently large—so that the reduced system of linear equa¬ 
tions has a solution—then this solution is an eigenvector of with associated eigenvalue 


93 







1 . Letting Ai(u;) be the eigenvalue having the largest absolute value among the eigenvalues 
of Bu unequal to 1 , the standard successive overrelaxation method with a fixed relaxation 
factor uj converges only if |Ai(a;)| < 1. Moreover, the standard overrelaxation method has 
the best convergence rate for that value of a; for which |Ai(u;)l < 1 is smallest. It should be 
noted that the optimal value of u; may be rather sensitive to the parameters of the specific 
problem considered and, in some cases, will be close to 1 . 

The problems of the standard overrelaxation method are avoided with Tijms’ algo¬ 
rithm [13]. In this algorithm u is always kept between 1 and 2. In case Ai(u;) is real, 
the algorithm estimates Ai(u;) after some iteration of the overrelaxation method (see the 
parameter r* in the algorithm below). This estimate provides a method to formulate a 
successive overrelaxation algorithm, in which the relaxation factor is dynamically adjusted 
in order to search for that value of u), for which lAi (u;)| < 1 is smallest. The steps of Tijms’ 
algorithm for the calculation of the state probabilities in the M/D/c queue are provided 
below. 

Special-Purpose Overrelaxation Method for the M/D/c Queue 
Step 0. Choose N > c and i° > 0 with 

+ r(r- =T 

i=0 

Also, h :=0 and w ;= 1.20. 

Step 1. := 0, A(a;‘''‘') := 1, /* := := oo. 

Step 2. h := h + l. Compute the vectors 

-ft _ D —^*“1 


K = 


N 


1 -1 




L»=o 


r — 1 


Nl 


X 


and the scalar 


1 ^ 

/* :=iT 

i=0 






94 







If /* < c/v, with tN prespecified accuracy number, then go to Step 4. Otherwise 


r 


k 



If r* > 1 or h > 10, then w is likely too large and decrease u>, as u; := 1 + — 1), 

put 1 ° X* and h := 0, and go to Step 1. If r* < 1 and r* has stiflSciently converged, 
according to |(r* - r*"^)/r*| < 0.025, then go to step 3; otherwise, return to Step 2. 
Step 3. A(u)) ;= r*. Test for one of the following four possibilities: (a) u > and 
A(u;) > A(u;«'''); (b) u; > and A(a;) < A(u;‘’'^); (c) w < w*'*' and A(a,) > (d) 

u < and A(u?) < A(u;®*‘*). For the cases (a) and (d). 


A(u;®'‘') := A(a;), u; := 1 + 0.85(u; - 1) 


whereas, for the cases (b) and (c), 

AK'**) := A(u;), u; := 1 + 1.25(u; - 1) 

Next, z® := X*, h := 0, /* := r* := oo, and then go to Step 2. 

Step 4. If 

^ r — 1 


and 



< 10 "® 


then the algorithm is stopped and the state probabilities pi are obtained from 


Pi = xf for 0 < i < iV emd p, = ^x^ for * > N. 


The above stopping criteria use the fact that the probabilities sum to 1 and that the 
average number of busy servers equals cp. Otherwise, 


X® := X* for 0 < I < iV and x® 


—Xi_i for iV < i < TV + 10 

T 


95 







N := N -k-10, h := 0, and then go to Step 1. 

B.4 Recursive Algorithm for Evaluating the Probability Distribution of Queue¬ 
ing Delay under the M/D/c Data Model 

To compute the probability distribution of the queueing delay Wq, that is P{W, < x}, 
we first find an integer m and the remainder u {0 < u < D) such that 


X = mD + u. 

Then we obtain the desired quantity from 

P{Wq < x} = 6mc+c-l(«) 

where the fe/(u) satisfy the recursion 


= for i = 


i=0 k=0 


with initial value 

5o(u) s= C^“po- 

Actually, for computational purposes the following recmsion is preferred 




bj{u) = H fc)! ’ ^ = ^2,, 


1=0 *=0 


or equivalently 


bj{u) = - Y, (j^ - ^ for i = 1.2,... 

The above recursion should be used in combination with the approximation 

P{Wq > x} w ac”** for x > D/y/c. 

In the above approximation 6 is again determined iis the solution to the equation 

_ 1 ) = ^ 


96 




and a is given by 


where 


_ ^*7 

A(r — 


r = l + - 


and 


c/r — \D 


Tf = lim T^pj = 
i-*oo 


97 






APPENDIX C 
Proof of Proposition 5.1 
(Knapsack Approximation) 

fVom the proof of Proposition 3.1 we know that satisfies several local 

balance equations. But actually the first two of them are sufficient for solving P (N '’,N*). 
For the same reason, the following two local balance equations are sufficient for obtaining 
P(k,m) 

= n;PiN\N'), n;, n; > 1 (C- 1) 

= n;>i (c-2) 

where we have dropped the subscript V in and in the other vectors in order to 

simplify the notation; as usual, p” = Fp/tip- Siunming both sides of equation (C-1) with 
respect to (N ^.N*) £ Cl(k,m), one can obtain 

E E (c-3) 

where 

Q(fc,m)n {n®,n* > 1} = 

= < n' < n", Tp < r^n" < c/, 0 < n* < n", 0 < r,nj| < c,, q,p p; 

52 ^<i^q + -l) = m-rp, 52 ’’ 9 ”? + ^P^K - 1 ) = * - ? • 

q^Vuq^p ?€'P|,7^P J 


For the RHS of (C-3) we used the fact that, if n* = 0 then RHS = 0 and if n" = 0 then 
n* = 0 and thus RHS = 0. If we define 


^9 


"^9 


{ 

( 


- 1, P = 9 

nj, P 7^ 9 

”p-li P = 9 
P?^9 

98 




and replace (njf.nj) by (nj;,nj) in the LHS of (C-3), then ft(ib,m) n > 1} = 

— r^,m — Tp) with the new variables and we can rewrite the LHS of (C-3) 

-^p^^P(k - rp,m - rp). 

Moreover, we can rewrite the KHS of (C-3) as 


E 

(W»,N*)€n(/fc.m) 


PjN^N;) 

* P(fc,m) 


P(fc,m). 


Note that 


Y, =">. E ’■•"J = ‘)=(5®^’ 

^ oth6rwis 


) € Qik,m) 
otherwise 


Denote 


E[n;\k,m]= Y ’>',PiK\N‘\Y<-,n’-m,Y’-,’‘",='=)- 

(N«,W*)€n(t.m) q€V, qeV, 

Then the RHS of (C-3) becomes 


P[n*|fc,m] • P(*:,m) • 

Equating the modified LHS and RHS of (C-3) we have 

-rp,m- Tp) = E[n*|fc,m] ■ P{k,m). (C - 4) 

Following similar arguments, we obtain 

~ I*’ H ’^) ~ 

from equation (C-2). Multiplying equations (C-4) and (C-5) by Tp, summing with respect 
to p 6 P/, and using the facts that 



f 


Ei 


k,m 



i 


99 






and 


we obtain 


I H («;-»*?) I** I=*- 


m 


, m — Tp) = m • P{k, m) , < m < k < ci 


a + /3 


p€^i 


and 




a + /? 


E - rp,m) = (ib — m) • P(fc,m), 0 = m < r, < it < C|. 


Finally, by defining 

P'(fc,m) = P(ib,m)/P(0,0) 
we derive (5.10a) and Proposition 5.1 follows. 


100 







APPENDIX D 

Four-Dimensional Knapsack Approximation 
(Proofis of Propositions 5.2 and 9.1) 

In this appendix we provide the recursion for the computation of the four-dimensional 
knapsack approximation used for evaluating the probabihty of queueing of data and the 
average queueing delay of data (Sections 5.2 and 7.2) and for the probability of voice 
blocking with admission control (Section 9). We present the proof only for Proj>osition 
5.2; Proposition 9.1 follows as a special case of 5.2. 

Here we provide a recursion for P{ki,mi,k 2 ,m 2 ) defined as 

Pikumi,k2,m2)= PiN\N*) 


where P, for i = 1,2 are two arbitrary sets of paths, with Vi ^V 2 . 

0 < Jbi = ^ < Zi, i = l,2 

pCPi 

0 < m, = ^ * = 1>2. 

p£Vi 

Notice that these inequalities can represent any constraint involving a linear combination 
of the number of voice calls n* of all classes p € Vi. The coefficients r),'^ (i = 1,2) may be 
equal to the rates or may be arbitrary non-negative constants. For example, Zj = c/ 

and = Tp whereas Zg = T, and = rp*^ corresponds to the scenario of Section 9.1. 
Also the general czise of unequsJ rates rp'^ of path p under the two constraints t = 1,2 (i.e., 
Tp*^ ^ Tp^^) can be hemdled by our analysis. Finally, n(A:i,mi,fc 2 ,m 2 ) is defined by 

fi(Ari,m,,Ar2,m2)={(iV‘’,iV-)|0 < < n;,p € V = V, UV 2 ; = 

p€Vi 

= = 1 , 2 ! 


101 





Zi ki Zt *j 

H H = 1- 

Je|sO misO Aja>0 mjaiO 

Tlie starting point is to consider the first two of the local balance equations for PiN”, N*) 
given in Appendix A, namely 

-^pIP{N:-,N^-) = n;P(N\N^), n;, nj > 1) 

and 

= (»; - n;)P(N\N‘), n; > 1 

where we have dropped the subscript V in iVp”, and in the other vectors in order 

to simplify the notation; as usual, p” = Fp/n^. After summing both members of these 
equations with respect to all (iV", jV*) in the set Q(Jbi, mj, it 2 , mj) defined above we obtain 


o 

a + fi 


E 




Y, ri;P{N\N*) 


(D-l) 


and 


0 .V 

■^^Pp 2^ ^ v-p -p 

(N»,N*)€n(fc,,m,,*,,m,)n{fi;.nJ>l} (N",N*)en(fc,,m, 


P{E^~,Mf) = 


inl-n;)P{N\ir) 
{D-2) 


where 


Q{kumi,k2,m2) H {n^.n* > 1} 

= {{N\Pr) , \<n;<n;, 0<n;<n;;; q€V-, 

52 - /(p € Vi)) = - rj,')/(p € Vi) 

qSVi ,q^p 

Y, rWn; + rW(n;-/(p€Pi)) = ‘i-’'t‘’np€^i). * = 1,2 

q€‘Pi ,q¥p 


102 




The LHS of (D-2) becomes 


P(i, - r<»/(p € P.),m, - ri‘>/(p € V ,), h - r»>/(p € V,), mj - r^^/Cp € T>j)) 

Note that if mi = 0 then p ^ Vi, (since mi = 0 implies that n' = 0, Vp G Vi). The RHS 
of (D-2) can be written as 


P(*:i,mi,fc2,m2) 


E 


P{N\N‘) 

P{ki,mi,k2,m2) 


where 



I ,mi ,ki,mt) ’ 


(iV",iV-)€D(*,,m,,A:2,m2) 


V 0; otherwise 

Since the RHS has thus taken effectively the form of the conditional expectation of n* 
given iki,mi,k 2 ,m 2 ), by combining the RHS and the LHS we conclude that 


P (fci - r;,')/(p € Pi),mi 


€ Vi),k2 - r^p^I{p € V2),m2 - rj,^^/(p € P 2 )) 


= E[n*\{ki,Tni,k2,m2)] P{ki,mi,k2,m2) (D - 3) 

Fiom equation (D-2) we cein obtain in a similar way the equation 

—' ^ PpP (fci -rj,^^/(p€Pi),mi,fc2-r^^^/(pGp2),»Ti2) = 

= P(n" - n*l(fci,mi,fc2,m2)l • P(*:i,mi, ^ 2 ,^ 2 ) (D - 4) 

If we multiply equations (D-3) and (D-4) by rj,*^ and siim with respect to p G Vi, for 
i = 1,2, we obtain 





P(fci,mi,fc2,m2) = 

if <rni < ki < Zi,r^p^ < »ti2 < ^2 < ^ 2 ; 

■^■■^ [Lpev^nvi^p^PpPi^i -rj^\mi -rJ*^A:2,m2)] , 

if <mi<ki< ZuO = m2<k2< Z 2 ; 

[Ep€P.nl>j r^p^PpPikumi ,k2 - rj*\m2 - , 

=< if 0 = mi < iki < <m2 < *2 <^ 2 ; (D - 5) 

T^-lsh [Ep€^,npjVp-P(*:i-rp \ ^ 1 ; ^ 2 , W2)+Epe?>in7>,»‘i^ »^i; ^2 m 2 )] 

if 0 = mi < Tp^^ <ki < Zi ,0 = m2 < r^p^ < ^2 < ^2; 

1; if fci = 0,mi = 0, A:2 = 0,m2 = 0 

0; if ki,mi are not positive integer multiples of 

f 2) 

or k2,m2 are not positive integer multiples of r), 

which provide the desirable recursions for evaluating P{ki,mi,k2,m2) for all 
(fci,mi,ik 2 ,m 2 ) after performing the normalization 


P'iki,mi,k2jm2) = P(fci,mi,l:2,m2)/P(0,0,0,0). 


104 




APPENDIX E 
Proof of Proposition 6.1 
(Pascal Approximation) 

When c = oo, we may rewrite equations (6.7) as 


P{k,m) 


1,0), m = 0;l<ifc<oo 

^2^ . P{k - l,m - 1), l<m<k\ l<k< 


where 

£ Y. P(fc,m) = 1. 

JrsO m=0 

To express P(ib,m) as a function of P(0,0), we write 


P(k,m) 


n::: 




nr>..^ n‘ 

m! 


P(0,0), 

k-m-t , 


fer 

P(0,0), 


1.1 


mo), 


’t» = 0;1<A:<oo 
l<m<ib-l, 2< 
m = k, 1 < k < oo 


and equation 


OO k 


Y H = 1 


k=0 m—0 


becomes 


oo k — 1 


P(0,0) + P(t, 0) + #■(*. t) + E E * 


*=1 


k=i 


k=2 m=l 


which results in 


oo i-rJr—1 \ rr*~l \ \ tt*— m —i , 

T , V lli=0 -^1.1 I V lli=0 lli=0_^ . lliso_^ 

^ k\ ^ k\ ^ ^ m! (A: — m)! 

*=1 k=l *=2m=l '' ’ 


rit —Tit — 1 


Let 



k < oo 


•P(0,0) 


105 








for j = 1,2. Then by definition, 


+ * * bj 

for j = 1,2. After certain manipulations, we have 


,, /' na Am , nL-„‘ a..A . ^ nr.;’ a,, nLT-‘ a., 

k\ *' *’ ) kk (*--")! 

= (1 - 61 )-“/*' . (1 - 62 )— 


Then 


P(0, 0) = (1 - 5i )•»/*> . (1 - 62)“*/** 


Consider the moment generating function 


= P(0,0) 


fc=i 


1 + 


— 00 t—1 

i;[r*5’"] = .P(o,o) + 5^(P(it,o)r‘ + P(k,k)T^s^] + J] 5^ p(jb,m)r*5 

k =2 m=l 


^ ( nf=o , nf=o(‘^2.«- 

*' >='■ ) 


00 k — 1 1 


r-g) nL7’~’(-^i.. r) 


+EE 

ksi 2 m=l 


mi 


{k — m)\ 


Note that 


Ai,i • r = oi • T + ibi ■ T 


A2,i • TS = 02 • T5 + t&2 ’ T" S. 


Therefore, 





Then the first and second moments of k and m are 


E[k - m] = E[k] - E[m] = 

— { ^ _ Q2 

~\l-b2 l-bij 1-i 


\T=S-1 


ds 


ir=s=i 


1 - 6 , 


E[m] = 


dE[T^S”^] 


lT=S=l 


1-62 




var{m) = E[rn^] - E[rnf =-- -E[mY 


IT=S=1 


fal+a2b2 , <^2 \ f aj \ 


<*2 _2 

(1-62)2 


var{k — m) = 


d^E[T’^S”'] 

dJ^ 


ir=s=i 


' dTdS 


+var{m) + fJfik] • (2£;[m] - E{k]) 


ir=s=i 


(l-6i)2 

cov{k — m,m) = E[{k — m)m] — E[k — m] • £(m] 


a2f;[r‘5’"] 

dTdS 


-E[fc]£[m] — uar(m) 


IT=S=1 


107 




APPENDIX F 
Proof of Proposition 6.2 
(Pascal Approximation) 

For the single-link, multi-rate, infinite capacity scheme, the steady-state probability 
of voice in Section 3 is 


P(N” N‘) = . IT-* 

G Unj!(n;-n* 




- n;)l (o + 


where 


G = 


V n ’ os^s-, 

ii <“ + 


0<n;<nf,p€V 


and it is approximated by 


E 




a”f/9"p~"p 




0<n;<n; 


which means that the voice states of the different paths are assiuned mutually independent 
in this single-link analysis. This is motivated by the same interlink blocking independence 
assumption discussed in Sections 4.1 and 5.1. Therefore, we may define 


p(N\N')= 

p€V 


where 


and 


P(<i”p) = 


yPp) ^ (o+0)n; 

nf !(n" — n?)! 



G,= E 


(PiP 


a P 






0<nj|<oo 

0<TiJ<nj; 




108 





In the following we use P(N*,N*) instead of P(AL*>iiL*) P{l!C) iMtead of P{iO 
to distinguish the approximations from the exact values. Next we evaluate the first and 
second moments of as follows 




0<nj;<ae 

0<nJ<nJ[ .P€V 


0<n^<oo 


where 


PilC) = 


n 


(/>;)’ 


n 


vl 


p€V P‘ 


E n 

0<n^<oo |>€^ 
~P€V 




n 


p' 


pev 


and 


Pi<) = 


lippK] 

/ 

(pp)”p 

n"! 

/ 

n"! 

'‘p- J 

/ 

0<nj<oo J* 


P(^) is the approximate steady-state probability of state N**, where the state vector JV” 
represents the ntunber of channels occupied by voice taking path p, for p EV. Combining 
these results yields 

-S^[«v]= X! Z) n pK) = H Z) P(”p) = Z 

p£T 0<ny<oo p£V 


o<n^:eop£V p£V 

P€'* 


and similarly 


^[”.1 = Z Z n P^”^ = Z ’'P Z P(”^ "P- 

p£V 0<nj;<t 


0<nJJ<oo p€^ p€^ 

0<n‘^<n^,p€'P 


0<Tij<fiy 


Note that using the definition ri p{n^,n*) above we can express n* • p{np,n‘) as 

\Pp) /_LO\nS-» 


K-piK'^^p) = 


(q+/?)"p“^ QPp 


(n' - l)!(n" - nf)! o -t- Gj, 


109 






and thus through stuxunation obtain 


n*,P(nl,nf) = 


O£n«<oc 

0<nJ<nJ 


l<n;<nj; 


o + )9' 


Therefore, 


E[n.] = 


a 

a + 0 


pev 


Since n® depends on JV" but not on TV', we can use directly the result of [6] for voice-only 
traffic (without silent periods): 


uar(n„) = 

p€V 


Moreover, 


E[nl] = 


0<fiJJ<oo 

0<n;<n^,pev 



PiN'’,N‘) 


/ 


E 

0<nj[<oo 

0<n;<n",pev \ 


\ 




per 


p£ViiT 

75^P 


PiN^Nf) 


) 


= I]^p 51 p(’^^”p)+ 5^5I»’p^9 Y Y 


p€^ 


0<nJ<nJ 


p^V i€T 
«9*P 


0<fiy<oo 0<nj|<oo 
0<nJ<nJ0<nJ<n« 


110 




Then, since 


53 


0<n;<n» 


= y (n- -1 +1).^^_ lo+n’'- _f£L. 1. 


l<n*£oo 

l<n*<nj 


Pp 


_ /-« ^■^ *^ (o+g)">-* Y' ^ 

a + "\„._i)!(n»-n;)!‘^ (nl - 


l<fi|J<oo 

l<nj<nj; 


l<n^^cc 

l<nj<n}: 


a* 

/*»\n!:-loV *S » » 

(n;-l)!(nj-n*)! 


a + ;9' 


2<«j[<oo 

.2<nj<n; 


Q I P _L 


- ^ «> A j. -A 




0<n*<ao O^fiJJ^oo 

0<nJ<nJ 0<nJ<nJ 


0<nJJ <oo 
0<n;<nj 


0<ny <oo 
0<n;<nj 


Q r Q r 


we obtain 


^1-21 = Er,(^) 

9^P 

-5'’^'=*(5'-^'=)’- 


111 





FVom the &bove expressions for £(n«] and £[n^] we can easily derive that 


var(n.) = E[nl\ - (£(n.l)* = ^ rjpj. 


Similarly, we can write 


BKn. - n.)’l = E (e’•'K - 

os«;s«»\F€t> / 


0<n»<nj; 


= E’-J E 


p£V os«;s. 


0<nJ<nJ 


+E E ■ E («; - E 

P€Vi€T OSnf^oo '>S«;S'» 


P^V ifP OSnf^oo 

0<nj<n}; 


and since 


0<n;<nj 




E KE ("» "J (nj)!(n;-n*-l)! a+ ^'’ 

9S*;soo is-js* ^ p p > ^ p 


0<fi*<n; 


0<nj<n*-l 


we derive that 


<-2 

V .!!L_-Ji±£EE!l- 

.S^. (n;)!("; - n; - 1)! o 

0<nJ<nj;-2 


a + a + 


£|K-n,« = ^ j:rjp;+ 


^^Pp + ^p o + 


and conclude that 


uar(n„ — n,) = ^[(n„ — n,)^] — (J?(n„ — n,])^ = 


Q + 0 




112 


» IL 


Finally, we write 


E[n„ . n.] = 53 (II 

\P€V 


os»;soo 

0<nj<nj; 


52 r,-.;) PUL',1L‘ 


) 




0<nj[<oo 

0<n;<nj 

and since we have that 


p^T f€»» 
t*p 


\/ 


51 n;p(n;,n;) 

l)<nj;<ee 
\o<n;<nj 


51 n;p(n;,n;) 

><n*<oe 

/ \o<n;<«; y 


53 n;n;p(n«,n;) = -^p. 


0<n*<eo 

0<n;<nj; 


V .V 

(a+/J)"* 




0<n*;<oo 

l<nj<n« 


p/-v> -p; 


a 


a + /3' 


E "W)+i 


j_0<nj;<oo 


a 

a + 0 


p;ii+p;) 


we derive that 


Ein. • n,i = 52 +'>") E E 

p€T> p£Tf€T 

9^P 


+^(e 

^^P€V \p€T ^ 


and conclude that 


cou[n„,n,] = E[n„ • n,] - £;[n„] • F{n,] = ^ ^ ^ 51 ^pPp- 


peP 


Consequently, since 

C(w(n„ - Tig,rig) = f^[(n„ - n,)na] - f?(n„ — n,] • fJ[n,] = cot;(n„,n,) - var{ng) 
and as we established above cot»(n„,nj) = var{ng), we also obtain that 

cov(nv — rig,rig) = 0. 


113 







APPENDIX G 


The Knapsack and Pascal Approximations to 
the Probabilities of Voice Blocking and Data Queueing 
Are Identical for Networks with Single-Rate TVafflc 

In this appendix we prove the validity of the claim made in the title. We show that the 
knapsack and Pascal methods provide identical approximations to the main performance 
measures of this report: the probability of blocking voice (Section 4) and the probabihty 
of queueing data (Sections 5 and 6). The same is true for the average queueing delay of 
data (Section 7), as well as for the probability distribution of the data queueing delay, but 
we omit the proof since it resembles the one for the probabihty of data queueing. 

The single-rate case is characterized by 

Tp = 1 for all p 6 P 

where 1 is the required data rate (bandwidth) of voice; the required bandwidth for data is 
then 1/r (where r > 1). 

G.l Probability of Voice Blocking for Single-Rate IVafflc 
Knapsack Approximation 

In the single-rate case, the reciursion of equations (4.6a)-(4.6b), which provides the 
weights necessary for the knapsack approximation to the voice blocking probability of 
(4.5), reduces to 




w{n — 1) for n = 1,2,..., c/. 


Pascal Approximation 

In the single-rate case, the recursion of equations (4.11b)-(4.12b), which provides the 
weights necessary for the Pascal approximation to the voice blocking probability of (4.13b), 
reduces to 

q'{n) = q'{n — 1) for n = l,2, ...,c/ 
n 


114 




where 


with 


and 




< = £{«.} = "£ r,p; 

p€Vt r€V, 


= t;ar{n„} = rjp^ = ^ p^. 

r€T, p£V, 


Since « = <7*, Ab-i simplifies to 


A«_j = « = ^ Pp 

P€V, 


resulting in 

Since as we know 

ti;(0) = ^'(0) = 1 

comparison of the above simplified recursions for the knapsack and Pascal approximations 
shows that they are identical, that is 


w{n) = q'{n) for n = 0,l,...,c/. 


Therefore, since the form of the approximations in (4.5) and (4.13b) is the same except 
for the t&(n) and q'{n), the two approximations coincide in the single-rate case. 

G.2 Probability of Data Queueing for Single-Rate TVafiic 
Knapsack Approximation 

In the single-rate case, the recursion providing the quantities P'{k,m) of (5.10a) in¬ 
volved in the knapsack approximation to the probability of data queueing given by (5.9) 
reduces to 


i ([q/(o + 0)] pfj - l,m - 1) l<m<k<ct 

i [ma + 0)] i’'(* - 1,0) 0 = m < fc < c. 


115 






Pascal Approximation 

Similarly, the recmrsion providing the corresponding quantities P*{k,m) of (6.7b) in¬ 
volved in the Pascal approximation to the probability of data queueing given by (6.21) 
reduces in the single-rate case to 

P‘(k m)= f ~ '^<rn<k<ci 

^ ^ \{Xi,t-i/k)P\k-l,0) m = 0 


where 


with 


~ 1) -7^ 

^2 \ ^2 / 

= £{m) = £(„.) = = 


and 


'2 = = «<.r(n,} = ^ rj,,; = ^ ^ p", 


pevi 


per, 


Since cj = <^ 2 ) simplifies to 


A,.™-, = «, = Y. Pr 


per, 


Similarly, 


A,.,-, = ^+(*-!) (l-^) 


and since 


Cl = E{k - m) = r^p; = pI 

^ ^ per, ^ ^ per, 




and 


a] = t;ar{fc - m} = t;ar{n„} = Pp 


0 


per. 


per, 


116 






imply that cj = (Tj , Xi,k-i simplifies to 


\ ^ V 

= '■ = ^ '’r 

Using the above simplified expressions for Aj,*_i and A 2 ,m-i in the recursion for P*{k,m) 
results in an expression whose functional form is identical to that obtained for P’{k,m) 
in the knapsack rectirsion earlier in this subsection after the simplifications. Since we also 
have that 

P'f0,0) = .^(0,0) = l 

the knapsack and Pascal recrusions are completely identical and thus 

P\k,m) = P'{k,m) for all 0 < m < Jb < c/. 

Moreover, since the expressions providing the approximations to the probability of data 
queueing in (5.9) and (6.21) have the same functional form for both the knapsack and 
Pascal recursions, we deduce that the approximations in question are identical for the 
single-rate case. 


117 




APPENDIX H 
Proof of Proposition 10.1 

The starting point is the definition 


cl-l 

= E •'W • E ■ E W) ■ -f*'! > ®) 

tec Ci£*,N*)6n nfsO 


CN" j/*)en 


from which we obtain 


dpl 


E 

(N»,jv*)€n 


dP{N\N‘) , , 

—-,£ ’£)• 


Define 


f_ 




and G(c) as in (3.3); then from (3.2) we have 


Moreover, 


and 


dP{N\N*) 

dp; 


d 1 IT/ 4.-1— TT f ^ 

dpi G(c) 11 G(cy' 11 ■'*' dpi' 

,^-pq^p f'p 


dU 

dp; 


(a+p^p 

nl!(n» - n*)! 


(n; + n;- ni) 


a 


(pl) 


w^n,—1 a * ff * r 




a + P (n* - l)!(nj - np! 


1 


• P /-. I 


+ 




a + /5 n*!(n"-n; - 1)! 


dp; G(c) 


= -(G'(c)] 


-2 


I(< > 0 ) 


I(n; - n! > 0) 


TT / • — 

11 apj- 


(^•,^*)€n(£) 96‘Pg¥p 


118 









Therefore 


dW^ 


dpi 


(N",N»)€n(c)F€^ 


— y 

a+/9 ^ 


(N“^*)€n(c) 


n f i^L—jES!niZf(n» > 0) 

11 •'« (n» _ iVfn*’ - nM' ^ ^ 

^ p P p’‘ 


ot+0 


C^-,^*)en(c)b€T»*9ij> 


m* 


TT f (o+py 

.y. n*!(n;-ni- 


n!:-l a"»/»-"»- 
(a+^)""-* 


J-1)' 


/(n; - n; > 0) 




(N"^*)€n(c) b€^*94|> 




n/.TbrTW&^K>-')-“V.£'..) 




ot+0 


(^•.^•)€n(e) 


n ^ (o+P)> r,^v _ »\...d/,.d ^d ^ 

J: n.!(-;-nr-Tr''"'^"><2.£.f 




The above expression can be put in the simpler form 


dW^ 

dpi 


= -[G{c)] 


-2 


+ G(c) 


-1 


(N'',N‘)6n(c) 
a 


[oi + d 


■(C) + 


Q + $ 


Q + 0 


M) + 


(D) 


0 


Q + 0 


{B) 


• n /r £**’£) 

p€V 


where the terms (A), (B), (C), (D) are appropriately defined. 

The term (A) can be obtained as 

(A) = 53 n “ '"P-P^- 

(j^''.Nn€acc-r,s^)peP 


119 



In order to simplify (B), let ns consider which can be rewritten as 


r,n* < c|,/€ £;0 < ^ r,n* < ^ ^ p, 

'• 9€V, qev, tev, 

0< Y, r,n; < Y € p,/ € rj = 

*€T>j q€T, J 

= j(iV;*’,iV*)|0 < Y ^9^9 ^ ^ ^ 53 ^ p; 

'■ 9€^« «€^i 9€Vi 

0< 53 - 1) < C/ - rp,0 < 53 ^ 51 - l)i ^ € p] 

jG'Pi 9^‘f*i9^P 

Therefore ft(c)P|{n* > n*] for vector (JV *.JV*) is identical to ft(c — for vector 
JV*), where iV”“ = iV® — and (B) can be represented as 


(B) = G(c~rpc^). 


FVom a similar argument as for obtaining (B) and from the fact that 


cj = c/ — 53 ^9^9 + 53 ^’”9 

»€9>, q€V, 


= (c/ - Tp) - 


53 ^ 9 ”?+ ^pi^p - 1 ) 

9^‘Pi9^P 


+ 53 '’ 9 "^ 

9€T, 


lep. 


we can rewrite (D) as 

(iJ) = G(£-r,£,).|V'U-r,e,). 


Also following similar arguments as in simplifying (A), we can obtain (C) as 


(c) = Y. n 

JV*)€n(£-r,e^) f€T» 


120 








Therefore 


dw* 

dpi 


= -[Gic )]-^. G(c - r,c,) . n 

(N»^*)€0(c) rev 


1 o 


G(c)[a + yS 


(N»,N‘)€n(e-r, €,)>€?» 


n ” »'|.C,)W^^(£ - ^rl,) 


+ 7T0 G(c -r,^) u,.j[l* • “ <2 ■£ ■£)} 


= (1 - ^i'){7f^»''(£ - ’■fSf) - 


a + 


(N“,N*)€ft(e-r,«,) 


J’(.-r,i,)(iV',iV*) • E ■ 2(<=i >0)} 


where 


c{ = + 5Z (iiL^^') € ft(c - r,c,). 

p€^i jiei»i 


121 





Figure 1. Two*Dimenslonal Birth-Death Process Used for 

the Pascai Approximation 


122 








Figure 2a. The ten-node multihop radio network of [4] 



C2 

^3 

^4 

^5 


Figure 2b. The five superimposed circuits on the radio network of Figure 2a 


123 










Hgure 3a. The multi-rate star network of [3] 


Figure 3b. The twelve voice circuits of the network of Figure 3a 
and their bandwidth requirements 


Voice 

Circuit 

I .inks 
Used 

Bandwidth 

Required 

1 

U 

1 

2 

1,3 

1 

3 

1,4 

1 

4 

2,3 

1 

5 

2,4 

1 

6 

3,4 

1 

7 

1,2 

5 

8 

1,3 

5 

9 

1,4 

5 

10 

2,3 

5 

11 

2,4 

5 

12 

3,4 

5 


124 







100 



IT) 


00 


CM 


0. 

CL 

Oi 


T3 
CO o 


ID 

O 

> 

a 

c 

m 


CO 


CM 


o o 

03 CO 


o o o o o o 

CO lO CO CM 


o 


(g) SuTOfooia aoTOA Jo AnTq^qoJd^OOT 


125 


Figure 4. Exact value and approximations to the probability of voice blocking 
versus the offered voice load for the radio network model: no admission control 








to 

CO 


cu 

CO 


*s 

9 

« 

9 

cr 


« 

•0 


CO 

cvi 


cvi"^ 

‘•a 

to 

o 

CVJ eo 


« 2 

Q E 


CV2 


9 2 E 

c a 

« 

•o 
a 
« 

« 
9 

1 

u 
« 
K 

H 


CO 


« 

k 

9 

W 


O lO 

CO lO 



to O lO o 

Tj* CO CO 

Suianano JO 


to o 

CV2 CV2 


to 


Xiinq®qojc3*ooi 


to o 


a 

o 

u 

a 

o 

•m 

m 

JS 

E 

•s 

o 

a 

»• 

*5 

T> 

O 

E 

O 

V 

a 


•a 

a 

k 

<** 

k 

tS 

•a 

a 

o 


a 

•a 

•a 

w 

k 

fa 

o 

V 

JS 


9 

«a 

k 


126 





Table 1. Probability of Voice Blocking for Different Traffic Loads, Node Transceiver 
Vector r = (8,8,8,8,8,8,8,8,8,8), Voice Activity Factor )9/(a + /3) = 0.4, 
and no Admission Control 


Offered 

Voice Load 

r 

B 

Exact 

Value 

Monte Carlo 

Summation 

Knapsack 

Approximation 

Error 

% 

0.1 

0.000000 

(0.000000, 0.000000) 

0.000000 

- 

0.5 

0.000160 

(0.000096, 0.000224) 

u 000174 

8.75 

1.0 

0.008654 

(0.008355, 0.009262) 

0.009802 

13.26 

1.5 

0.047401 

(0.044829, 0.061187) 

0.053400 

12.66 

2.0 

0.112365 

(0.107544, 0.121025) 

0.122152 

8.71 

2.5 

0.183607 

(0.179594, 0.185808) 

0.194000 

5.66 

3.5 

0.307931 

(0.302761, 0.316174) 

0.317236 

3.02 

4.5 

0.401453 

(0.385203, 0.417037) 

0.411132 

2.41 

5.5 

0.472130 

(0.434905, 0.514719) 

0.483226 

2.35 

6.5 

0.527213 

(0.505836, 0.540619) 

0.539849 

2.39 

7.5 

0.571417 

(0.546001, 0.603585) 

0.585356 

2.44 

8.5 

0.607742 

(0.534647, 0.646869) 

0.622658 

2.45 

10.0 

0.651634 

(0.616248, 0.705557) 

0.667461 

2.43 

15.0 

0.745317 

(0.676021, 0.778351) 

0.761318 

2.15 


127 





Table 2. Probability of Voice Blocking at Each Path for Different TVafflc Loads, 
Node Transceiver Vector T = (8,8,8,8,8,8,8,8,8,8), and Voice Activity 
Factor ^/{a + 0) = 0.4 


Voice 

Offered 

Bp 

Path 

Voice Load 

Exact 

Monte Carlo 

Knapsack 

Error 

P 

Pi 

Value 

Summation 

Approximation 

% 


1.0 

0.014202 

(0.011101, 0.018019) 

0.016567 

16.65 


1.0 

0.000730 

(0.000000, 0.001098) 

0.000837 

14.66 


1.0 

0.007371 

(0.005950, 0.011421) 

0.007925 

7.52 


1.0 

0.007371 

(0.003915, 0.008254) 

0.007925 

7.52 

5 

1.0 

0.013596 

(0.010745, 0.017536) 

0.015753 

15.86 


5.5 

0.701485 

(0.688131, 0.717825) 

0.703886 

0.34 


5.5 

0.209734 

(0.174270, 0.210641) 

0.247334 

17.93 


5.5 

0.409218 

(0.379417, 0.428384) 

0.413480 

1.04 


5.5 

0.409218 

(0.384999, 0.433277) 

0.413135 

0.96 

5 

5.5 

0.630995 

(0.617493, 0.652789) 

0.638292 

1.16 


10 

0.885902 

(0.858356, 0.887236) 

0.869108 

-1.89 


10 

0.421298 

(0.361902, 0.432984) 

0.475328 

12.82 


10 

0.571870 

(0.502697, 0.570099) 

0.593330 

3.75 


10 

0.571870 

(0.542950, 0.607079) 

0.592867 

3.67 

5 

10 

0.807232 

(0.777385, 0.817837) 

0.806672 

0.07 


128 

























Table 3. lOOx Probability of Queueing Data for Different Voice and Data Loads, Voice 
Activity Factors, and Node Transceiver Vector X = (8,8,8,8,8,8,8,8,8,8) 



lil(a + 0) = 0.4 

;9/(o-1-/3) = 0.8 

p 

II 

+ 

Voice 

Data 

Q 

Q 

0 

Load 

Load 

Exact 

Knapsack 

Error 

Exact 

Knapsack 

Error 

Exact 

Knapsack 

Error 

P'' 

P' 

Value 

Approx. 

% 

Value 

Approx. 

% 

Value 

Approx. 

% 

0.1 

0.5 

0.00 

0.00 


0.00 

0.00 


ISl 

0.00 

0.00 

0.1 

2.5 

0.561 

0.563 




m 


mgm 

0.00 

0.1 

4.0 

6.319 

6.321 

m 

B 

wmm 




0.00 

1.0 

0.5 

0.016 



mg 

0.743 

3.34 

2.202 

2.250 

Qjl 

1.0 

2.5 

3.658 



fm 

14.077 

0.39 

22.102 

22.102 


1.0 

4.0 

18.994 

19.096 



41.051 

-0.08 

52.352 

52.223 

-0.25 


0.5 


0.184 

8.88 

5.934 

5.875 

-0.99 

17.536 

17.368 

-0.25 

2.0 

2.5 


9.579 

-1.29 

41.319 

40.400 

-2.24 

59.504 

58.066 

-2.42 

2.0 

4.0 

34.945 

33.929 

-2.91 

73.337 

72.121 

-1.66 

84.803 

83.551 

-1.48 

3.5 

0.5 

0.430 

0.412 


13.750 


-2.95 

39.469 

38.276 

-3.02 

3.5 

2.5 

15.318 

14.991 


62.819 


-2.56 

82.570 


-2.37 

3.5 

4.0 

46.638 

45.838 

BBl 

87.403 


-1.46 

95.741 

94.775 

-1.01 

5.5 

0.5 

0.625 

0.597 

HQ 

19.891 

19.298 

-2.98 

55.611 

54.038 

-2.38 

5.5 

2.5 

18.868 

18.491 


74.061 

72.677 

-1.87 

91.884 

90.556 

-1.15 

5.5 

4.0 

53.027 

52.286 


94.322 

93.527 

-0.84 

98.617 

98.172 

-0.45 

10. 

0.5 

0.865 

■■ 

-7.05 

26.723 

25.830 

-3.34 


70.262 

-2.64 

10. 

2.5 

22.286 


-2.11 

83.032 

81.898 

-1.36 

97.437 

96.739 

-0.72 

10. 

4.0 

58.569 


-1.28 

97.608 

97.203 

-0.41 

99.761 

99.624 

-0.14 


129 
















































































Table 4a. lOOx Probability of Queueing Data, for Voice Loads p*' = p" = 0.1, for 
Different Data Loads and Voice Activity Factors, and Node Transceiver 
Vector T = (8,8,8,8,8,8,8,8,8,8) 



^/(q-|-^) = 0.4 

00 

o 

II 

+ 

o 

II 

+ 

Data 

Data 

Qi 

Qi 

Q/ 

Link 

Load 

Exact 

Knapsack 

Error 

Exact 

Knapsack 

Error 

Exact 

Knapsack 

Error 

/ 

pi 

Value 

Approx. 

% 

Value 

Approx. 

% 

Value 

Approx. 

% 



0.00 

0.00 

- 

0.00 

0.00 

- 

0.00 

0.00 

- 


ig 

O.OO 

0.00 

- 

0.00 

0.00 

- 

0.00 

0.00 

- 


0.5 

0.00 

0.00 

- 

0.00 

000 

- 

0.00 

0.00 

- 


0.5 

0.00 

0.00 

- 

0.00 

0.00 

- 

0.00 

0.00 

- 

5 

0.5 

0.00 

0.00 

- 

0.00 

0.00 

- 

0.00 

0.00 

- 

6 

0.5 

0.00 

0.00 

- 

0.00 

0.00 

- 

0.00 

0.00 

- 

7 

0.5 

0.00 

0.00 

- 

0.00 

0.00 

- 

0.00 

0.00 

- 

8 

0.5 

0.00 

0.00 

- 

0.00 

0.00 

- 

0.00 

0.00 

- 

9 

0.5 

0.00 

0.00 

- 

0.00 

0.00 

- 

0.00 

0.00 

- 


2.5 




0.616 

ggn 

Bi 



0.00 


2.5 

B 



0.616 


in 



0.00 


2.5 


0.606 

1.56 

0.822 

wgm 

0.00 

0.946 

0.946 

0.00 


2.5 

n 

0.564 

0.35 

0.734 

0.734 

0.00 

0.833 

0.834 

Da 

5 

2.5 

0.562 

0.564 

1.31 

0.734 

0.734 

0.00 

0.833 

0.834 

m 

6 

2.5 

0.980 

0.980 

0.00 

0.834 

0.834 

0.00 

0.980 

0.980 

0.00 

7 

2.5 

0.562 

0.564 

1.31 

0.734 

0.734 

0.00 

0.833 

0.834 

0.12 

8 

2.5 

0.562 

0.564 

1.31 

0.734 

0.734 

0.00 

0.833 

0.834 

0.12 

9 

2.5 

0.562 

0.564 

1.31 

0.734 

0.734 

0.00 

0.833 

0.834 

0.12 

1 

■g 

6.013 

6.015 


6.649 

6.650 


6.986 

6.986 

0.00 

2 


6.013 

6.015 


6.649 

6.650 


6.986 

6.986 

0.00 

3 

lEI 

6.601 

6.603 

0.03 

7.882 

7.883 

0.02 

8.566 

8.566 

0.00 

4 

4.0 

6.324 

6.326 

0.03 

7.334 

7.336 

0.03 

7.885 

7.885 

0.00 

5 

4.0 

6.324 

6.326 

0.03 

7.334 

7.336 

0.03 

7.885 

7.885 

0.00 

6 

4.0 

6.624 

6.625 

0.015 

7.971 

7.972 

0.02 

8.705 

8.706 

0.00 


4.0 

6.324 

6.324 

0.00 

7.334 

7.336 

0.03 

7.885 

7.885 

0.00 


4.0 

6.324 

6.326 

0.03 

7.334 

7.336 

0.03 

7.885 

7.885 

0.00 


4.0 

6.324 

6.326 

0.03 

7.334 

7.336 

0.03 

7.885 

7.885 

0.00 


130 







































Ttible 4b. lOOx Probability of Queueing Data, for Voice Loads p” = = 1.0, for 

Different Data Loads and Voice Activity Factors, and Node Transceiver 
Vector T = (8,8,8,8,8,8,8,8,8,8) 



0/{a + /9) = 0.4 

^/(a + $) = 0.8 


Data 

Link 

/ 

Data 

Load 

pi 

Qi 

Qi 

Qi 

Ex8u:t 

Value 

Knapsack 

Approx. 

Error 

% 

Exact 

Value 

Knapsack 

Approx. 

Error 

% 

Exact 

Value 

Knapsack 

Approx. 

Error 

% 


la 



200 

mam 


10.00 

0.410 

0.430 

4.88 


ig 



200 

Mil 

mm 

10.00 

0.410 

0.430 

4.88 


0.5 

0.019 


73.68 

Igl 


3.60 

2.719 

2.780 

2.24 


0.5 

0.018 


55.55 


■B 

3.65 

2.446 

2.511 

2.66 

5 

0.5 

0.018 

0.028 

55.55 

0.795 

0.824 

3.65 

2.446 

2.511 

2.66 

6 

0.5 

0.031 

0.018 

41.94 

1.348 


2.13 

4.052 

4.052 

0.00 

7 

0.5 

0.018 

0.028 

55.55 

0.824 

■iii 

64.93 

2.446 

2.551 

4.29 

8 

0.5 

0.018 

0.028 

55.55 

0.795 

0.824 

3.65 

2.446 

2.551 

4.29 

9 

0.5 

0.018 

0.028 

55.55 

0.795 

0.795 

0.00 

2.446 

2.551 

4.29 


2.5 

2.073 

2.115 

2.03 

6.659 



10.486 

10.581 



2.5 

2.073 

2.115 

2.03 

6.659 


IjQ 

10.486 

10.581 

^^9 


2.5 

4.479 

4.549 

1.56 

17.166 

17.217 


26.923 

26.862 

-0.22 


2.5 

3.821 

3.821 

0.00 

15.031 

15.080 


26.886 

23.831 

-11.36 

5 

2.5 

3.821 

3.871 

1.31 

15.031 

15.080 

0.33 

23.886 

23.831 

-0.23 

6 

2.5 

5.188 

5.260 

1.39 

20.560 

20.641 

0.39 

31.856 

31.859 

0.00 

7 

2.5 

3.821 

3.871 

1.31 

15.031 

15.080 

0.33 

23.886 

23.831 

-11.36 

8 

2.5 

3.821 

3.871 

1.31 

15.031 

15.081 

0.33 

23.886 

23.831 

-11.36 

9 

2.5 

3.821 

3.871 

1.31 

15.031 

15.080 

0.33 

23.886 

23.831 

-11.36 


Ql 

13.490 

13.606 


26.953 

26.988 


34.960 

34.904 

-0.16 


mm 

13.490 

13.606 

B 

26.953 

26.953 


34.960 

34.907 

-0.15 


4.0 

22.250 

22.353 

0.46 

48.131 

48.131 

0.00 

60.682 

60.524 

-0.32 


4.0 

19.525 

19.619 

0.48 

43.041 

42.917 

-0.29 

55.032 

54.856 

-0.32 

5 

4.0 

19.525 

19.619 

0.48 

43.041 

42.917 

-0.29 

55.032 

54.856 

-0.32 

6 

4.0 

24.089 

24.207 

0.49 

52.516 

52.556 

0.07 

65.402 

65.393 

-O.Oi 


4.0 

19.525 

19.619 

0.48 

43.041 

42.917 

-0.29 

55.032 

54.856 

-0.32 


4.0 

19.525 

19.619 

0.48 

43.041 

42.917 

-0.29 

55.032 

54.856 

-0.32 


4.0 

19.525 

19.619 

0.48 

43.041 

42.917 

-0.29 

55.032 

54.856 

-0.32 


131 







































T^ble 4c. lOOx Probability of Queueing Data, for Voice Loads p” = = 2.0, for 

Different Data Loads and Voice Activity F^ictors, and Node TVansceiver 

Vector T = (8,8,8,8,8,8,8,8,8,8) 



fi/{a + /9) = 0.4 

Ma + = 0.8 

)8/(a 4-/8) = 1.0 

Data 

Link 

/ 

Data 

Load 

pf 

Qi 

Qi 

Qi 

Exact 

Value 

Knapsack 

Approx. 

Error 

% 

Exact 

Value 

Knapsack 

Approx. 

Error 

% 

Exact 

Value 

Knapsack 

Approx. 

Error 

9f 

1 


0.193 


-50.78 

1.688 

1.727 

2.31 

5.085 

5.253 

3.30 

2 


0.191 


-50.28 

1.688 

1.727 

2.31 

5.085 

5.253 

3.30 

3 

0.5 

0.437 

0.354 

-18.99 

7.510 

7.392 

-2.41 

21.926 

21.562 

-l.CC 

4 

0.5 

0.360 

0.279 

-22.50 

6.418 

6.333 

-1.32 

19.231 

18.958 

-1.42 

5 

0.5 

0.360 

0.279 

-22.50 

6.418 

6.333 

-1.32 

19.231 

18.958 

-1.42 

6 

■a 

0.560 

0.495 

-11.61 

10.430 

10.368 

-0.59 

29.570 

29.461 

-0.37 


0.5 

0.360 

0.279 

-22.50 

6.418 

6.333 

-1.32 

19.231 

18.958 

-1.42 


0.5 

0.360 

0.279 

-22.50 

6.418 

6.331 

-1.35 

19.231 

18.952 

-1.45 


0.5 

0.360 

0.279 

-22.50 

6.418 

6.333 

-1.32 

19.231 

18.956 

-1.43 


2.5 

6.950 

6.836 

-1.64 

22.198 

21.868 

-1.49 

34.654 

33.990 

-1.92 


2.5 

6.950 

6.836 

-1.64 

22.198 

21.868 

-1.49 

34.654 

33.990 

-1.92 


2.5 

15.750 

14.820 

-5.84 

48.730 

48.559 

-2.35 

69.777 

68.087 

-2.92 


2.5 

12.493 

12.140 

-2.82 

44.225 

42.972 

-2.83 

63.989 

62.043 

-3.04 

5 

2.5 

12.493 

12.140 

-2.82 

44.225 

42.972 

-2.83 

63.989 

62.043 

-3.04 

6 

2.5 

17.381 

17.331 

-0.29 

56.619 

56.462 

-0.28 

76.507 

76.330 

-0.23 

7 

2.5 

12.493 

12.140 

-2.83 

44.225 

42.970 

-2.92 

63.989 

62.041 

-3.04 

8 

2.5 

12.493 

12.135 

-2.87 

44.225 

42.965 

-2.85 

63.989 

62.034 

-3.04 

9 

2.5 

12.493 

12.140 

-2.82 

44.225 

42.970 

-2.92 

63.989 

62.041 

-3.04 

1 

ISI 

28.411 

27.943 

-1.65 

53.795 

52.836 

-1.78 

67.209 

65.870 

-1.98 

2 

HI 

28.411 

27.943 

-1.65 

53.795 

52.836 

-1.78 

67.209 

65.879 

-1.98 

3 


47.734 

46.904 

-1.74 

82.588 

81.412 

-1.42 

92.433 

91.445 

-1.07 

4 

mm 

41.161 

40.244 

-2.23 

76.716 

75.168 

-2.02 

88.363 

86.855 

-1.71 

5 

4.0 

41.161 

40.244 

-2.23 

76.716 

75.168 

-2.02 

88.363 

86.855 

-1.71 

6 

4.0 

51.141 

51.031 

-0.22 

86.280 

86.172 

-0.13 

94.567 

94.487 

-0.08 

7 

4.0 

41.161 

40.243 

-2.23 

76.716 

75.166 

-2.02 

88.363 

86.854 

-1.71 

8 

4.0 

41.161 

40.234 

-2.25 

76.716 

75.162 

-2.02 

88.363 

86.850 

-1.71 

9 

4.0 

41.161 

40.243 

-2.23 

76.716 

75.166 

-2.02 

88.363 

86.854 

-1.71 


132 







































Table 5. Probability of Voice Blocking for Different lYafflc Loads, Node Transceiver 
Vector T = (4,4,4,4,4,4,4,4,4,4), Voice Activity Factor ^/(o + fi) = 0.4, 
and No Admission Control 


Offered 

Voice Load 

B 

Exact 

Value 

Knapsack 

Approximation 

Error 

% 

0.1 

0.000292 

0.000327 

11.98 

0.5 

0.050059 

0.058689 

17.24 

1.0 

0.195044 

0.215835 

10.66 

2.0 

0.417121 

0.442862 

6.17 

3.0 

0.541520 

0.569988 

5.62 

4.0 

0.619669 

0.649299 

4.78 

5.0 

0.673842 

0.703402 

4.39 

6.0 

0.713922 

0.742704 

4.03 

7.0 

0.744934 

0.772556 

3.71 

8.0 

0.769724 

0.796051 

3.42 

10.0 

0.807006 

0.830684 

2.93 

15.0 

0.862375 

0.880563 

2.11 


133 






Table 6. lOOx Probability of Queueing Data for Various Voice and Data Loads, 
Voice Activity Factor + /9) = 0.4 and Node Transceiver Vector 

T = (4,4,4,4,4,4,4,4,4,4) 


Offered 

Voice Load 

P' 

Offered 

Data Load 

0 

Exact 

Value 

Knapsack 

Approximation 

Percent 
Error (%) 

0.1 

0.2 

0.033 


3.03 


1.0 

2.860 


0.00 


2.0 

20.796 

19.687 

-5.33 


0.2 

1.636 

1.585 

-3.12 

1.0 

1.0 

14.590 

14.202 

-2.66 

1.0 

2.0 

45.702 

44.874 

-1.81 


0.2 

4.762 

4.505 

-5.40 


1.0 

27.737 

26.754 

-3.54 

5.0 

2.0 

64.540 

63.299 

-1.92 

10.0 

0.2 

5.773 

5.411 

-6.27 

10.0 

1.0 

31.143 


-3.94 

10.0 

2.0 

68.419 

lESBESiil 

-1.82 


134 


































Table 7a. lOOx Probability of Queueing Data at Each Link for Voice Loads p*' = 
p* = 0.1, Different Data Loads, T = (4,4,4,4,4,4,4,4,4,4), and Voice 
Activity Factor fi/{a + y3) = 0.4 
































Table 7b. lOOx Probability of Queueing Data at Each Link for Voice Loads p* = 
p* = 1 . 0 , Different Data Loads, X = ( 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 ), and Voice 
Activity Factor /9/(a + ^9) = 0.4 



Qi 

Exact 

Knapsack 

Error 

Value 

Approximation 

% 

0.820 

0.796 

-2.93 

0.820 

0.796 

-2.93 

2.219 

2.130 

-4.01 

1.645 

1.589 

-3.40 

1.645 

1.589 

-3.40 

2.639 

2.599 

-1.52 

1.645 

1.589 

-3.40 

1.645 

1.589 

-3.40 

1.645 

1.589 

-3.40 

9.928 

9.676 

-2.54 

9.928 

9.676 

-2.54 

18.381 

17.832 

-2.99 

14.670 

14.226 

-3.02 

14.670 

14.226 

-3.02 

19.721 

19.524 

-0.99 

14.670 

14.226 

-3.02 

14.670 

14.203 

-3.18 

14.670 

14.226 

-3.02 

37.127 

36.479 

-1.75 

37.127 

36.479 

-1.75 

53.274 

52.282 

-1.86 

45.880 

44.920 

-2.09 

45.880 

44.920 

-2.09 

54.387 

54.070 

-0.58 

45.880 

44.920 

-2.09 

45.880 

44.879 

-2.18 

45.880 

44.920 

-2.09 




136 




























l^ible 7c. lOOx Probability of Queueing Data at Each Link for Voice Loads p” = 
p* = 5 . 0 , Different Data Loads, X = ( 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 ), and Voice 
Activity Factor 0/(a + fi) = 0.4 


Data 

Offered 

Qi 

Link 

Data Load 

Exact 

Knapsack 

Error 

/ 

Pi 

Value 

Approximation 

% 




3.202 

-10.06 




3.202 

-10.06 


0.2 


6.263 

-11.46 



4.285 

4.215 

-1.63 

5 


4.285 

4.216 

-1.61 

6 

0.2 

7.235 

6.909 

-4.50 

7 

0.2 

4.285 

4.213 

-1.68 

8 


4.285 

4.113 

-4.01 

9 

0.2 

4.285 

4.213 

-1.68 



23.141 

21.667 

-6.37 


1.0 

23.141 

21.667 

-6.37 



37.104 

34.331 

-7.47 


1.0 

25.917 

25.615 

-1.16 

5 

1.0 

25.917 

25.617 

-1.16 

6 


36.666 

35.430 

-3.37 

7 

1.0 

25.917 

25.608 

-1.19 

8 

1.0 

25.917 

25.238 

-2.62 

9 


25.917 

25.609 

-1.19 



58.607 

56.549 

-3.51 


■■ 

58.607 

56.549 

-3.51 


2.0 

76.910 

73.960 

-3.84 


2.0 

62.263 

61.840 

-0.68 

5 

2.0 

62.263 

61.840 

-0.68 

6 


75.419 

73.927 

-1.98 

7 

2.0 

62.263 

61.832 

-0.69 

8 

2.0 

62.263 

61.360 

-1.45 

9 

2.0 

62.263 

61.832 

-0.69 


137 






























T^ble 7d. lOOx Probability of Queueing Data at Each Link for Voice Loads p* = 
p* = 10.0, Different Data Loads, T = (4,4,4,4,4,4,4,4,4,4), and Voice 
Activity Factor /9/(a + 0) = 0.4 



Qt 

Exact 

Knapsack 

Error 

Value 

Approximation 

% 

4.684 

4.193 

-10.48 

4.684 

4.192 

-10.50 

8.786 

7.567 

-13.87 

5.023 

4.958 

-1.29 

5.023 

4.958 

-1.29 

8.694 

8.110 

-6.72 

5.022 

4.956 

-1.31 

5.022 

4.812 

-4.18 

5.022 

4.956 

-1.31 

27.294 

25.533 

-6.45 

27.294 

25.529 

-6.47 

42.279 

38.508 

-9.39 

28.449 

28.223 

-0.79 

28.449 

28.225 

-0.79 

41.173 

39.049 

-5.16 

28.449 

28.218 

-0.81 

28.449 

27.731 

-2.52 

28.449 

28.219 

-3.40 

63.910 

61.736 


63.910 

61.732 


81.697 

78.150 

-4.34 

65.276 


-0.41 

65.276 


-0.41 

79.873 

77.490 

-2.98 

65.276 


-0.42 

65.276 

65.430 

0.24 

65.276 


-0.42 



8 


2.0 

2.0 



























Table 8. Probability of Voice Blocking for Different TVafflc Loads 
Node Transceiver Vector X = (&• 

Voice Transceiver Vector T* = (5,7,7,7,4,7,4,7,7,7) 

Data Link Capacity Vector ^ = (1,1,1,1,1,1,1,1,1) 

Voice Activity Factor 0/{a -I- )9) = 0.4 


Voice 

Path 

P 

Offered 

Voice Load 

Pi 


Exact 

Value 

Monte Carlo 

Summation 

Knapsack 

Approximation 

Error 

% 

1 

2.5 

0.634 

(0.673, 0.686) 

0.705 

11.19 

2 

2.5 

0.144 

(0.133, 0.150) 

0.147 

2.08 

3 

2.5 

0.429 

(0.416, 0.433) 

0.416 

-3.03 

4 

2.5 

0.429 

(0.416, 0.433) 

0.416 

-3.03 

5 

2.5 

0.641 

(0.627, 0.642) 

0.658 

2.65 

Average 

2.5 

0.465 

(0.453, 0.69) 

0.468 

0.65 


139 





























Tkble 9. Average Data Delay for Different Voice and Data Loada 
Node IVanaceiver Vector X. ^ (&< 8,8,8,8,8,8) 

Voice lYansceiver Vector 21* = (5,7,7,7,4,7,4,7,7,7) 

Data Link Capacity Vector = (1,1,1,1,1,1,1,1,1) 

Voice Activity Factor )d/(a •¥ $) — 0.4 


Offered 

Voice Load 

P* 

Offered 

Data Load 


Exact 

Value 

Knapsack 

Approximation 

ErrcMT 

% 

2.5 




9.52 

2.5 




14.51 

2.5 

— 



14.97 

10. 


0.034 

0.036 

5.88 

10. 


0.108 

0.111 

2.78 

10. 

0.999 

9.324 

9.599 

2.95 


140 

























TVible 10a. Average Data Delay at Each Link for Voice Loads p” = p” = 2.5, Dif¬ 
ferent Data Loads, T = (8,8,8,8,8,8,8,8,8,8), T* = (5,7,7,7,4,7,4,7,7,7), 
^ — (1,1,1,1,1,1,1,1,1), and Voice Activity Factor fi/{a ■+■ fi) = 0.4 


Data 

Link 

/ 


! Wi 

Exact 

Value 

Knapsack 

Approximation 

Error 

% 


0.7 

0.004 

0.006 

50.00 


0.7 

0.004 

0.006 

50.00 


0.7 

0.026 

0.028 

7.69 


0.7 

0.023 

0.026 

13.04 

5 

0.7 

0.023 

0.026 

13.04 

6 

0.7 

0.039 

0.039 

0.00 


0.7 

0.023 

0.026 

13.04 


0.7 

0.023 

0.026 

13.04 


0.7 

0.023 

0.026 

13.04 



0.011 

0.017 

54.55 


■■ 

0.011 

0.017 

54.55 


0.9 

0.077 

0.086 

11.69 


0.9 

0.068 

0.079 

16.18 

5 

0.9 

0.068 

0.079 

16.18 

6 

0.9 

0.119 

0.120 

0.84 


0.9 

0.068 

0.079 

16.18 


0.9 

0.068 

0.079 

16.18 


0.9 

0.068 

0.079 

16.18 


0.999 

0.743 

1.149 

54.64 


0.999 

0.743 

1.149 

54.64 


0.999 

6.210 

7.097 

14.28 


0.999 

5.516 

6.512 

18.06 

5 

msm 

5.516 

6.512 

18.06 

6 

19 

10.175 

10.297 

1.20 


■9 

5.516 

6.512 

18.06 

8 

0.999 

5.516 

6.511 

18.04 

9 

0.999 

5.516 

6.512 

18.04 


141 











l^ble 10b. Average Data Delay at E2ach Link for Voice Loads p'’ = p” = 10.0, Dif¬ 
ferent Data Loads, X= (8,8.8,8,8,8,8,8,8,8), X* = (5,7,7,7,4,7,4,7,7,7), 
= (1,1,1,1,1,1,1,1,1), and Voice Activity Factor $/{a + )9) = 0.4 


Datn 

Offered 

Wi 

Link 

Data Load 

Exact 

Knapsack 

Error 

1 

_ d _ 

Value 

Approsdmation 

% 





0.00 





0.00 


0.7 

0.046 

0.046 

0.00 


0.7 

0.035 


5.71 

5 


0.035 


5.71 

6 


0.063 

0.063 

0.00 

7 

0.7 

0.035 

0.037 

5.71 

8 


0.035 

0.037 

5.71 

9 

0.7 

0.035 

0.037 

5.71 




0.039 

0.00 




0.039 

0.00 


0.9 

RQ 

0.142 

-0.70 



RiH 

0.116 

5.45 

5 

0.9 


0.116 

5.45 

6 

0.9 

0.202 

0.200 

-0.99 

7 

0.9 

0.110 

0.116 

5.45 

8 

0.9 

0.110 

0.115 

4.45 

9 

0.9 

0.110 

0.116 

5.45 

1 

0.999 

3.032 

3.029 

-0.09 

2 

0.999 

3.032 

3.029 

-0.09 

3 

0.999 

12.390 

12.350 

-0.32 

4 

0.999 

9.458 

10.008 

5.82 

5 

0.999 

9.458 

10.009 

5.83 

6 

0.999 

18.173 

18.007 

-0.91 

7 

0.999 

9.458 

10.006 

5.79 

8 

0.999 

9.458 

9.949 

5.19 

9 

0.999 

9.458 

10.006 

5.79 


8 




























a> 


o 

(g) 9ui3iooia aotoA Jo X:^inq«qoJd*00I 


143 


Input Voice Load 

Figure 6. Approximations to the probability of voice blocking versus the offered 
voice load for the multi>rate network modelt no admission control 








ooooooooooo 
ooioor^cDua-^cow—< 


(0) Suianano Jo Anm^cioJd+OOI 


144 


Figure 7. Approximation* to the probability of data queueing versus the offered 
data load for the multi-rate network model: no admission control 






Table 11. Percentage of Voice Calls Blocked for Different Capacity Allocations 
in the Multi-Rate Network of [6] 

Capacity Allocation 1 c = (90,100,110,120) 

Capacity Allocation 2 c = (18,20,22,24) 

Capacity Allocation 3 c = (9,10,11,12) 

Capacity Allocation 4 c = (5,5,6,6) 

Vector of Voice Path Rates r = (1,1,1,1,1,1,5,5,5,5,5,5) 

Voice Activity factor )9/(a + y9) = 0.4 



Offered 

B 

Capacity 

Voice Load 

Monte Carlo 

Knapsack 

Pascal 

Allocation 

P* 

Summation 

Approximation 

Approximation 

1 

8.0 

(0.052, 0.058) 

0.061 

0.072 

1 

10.0 

(0.669, 0.732) 

0.741 

0.756 

1 

15.0 

(9.947, 10.275) 

10.359 

10.487 

2 

MSM 

(0.042, 0.042) 

0.042 

0.109 

2 


(0.707, 0.785) 

0.779 

0.921 

2 

Hal 

(9.466, 9.686) 

10.137 

9.758 

3 

0.004 

(0.049, 0.070) 

0.061 

0.038 

3 

0.04 

(0.630, 0.696) 

0.681 

0.437 

3 

0.4 

(9.884, 10.096) 

10.613 

8.857 

4 

0.0002 

(0.046, 0.046) 


0.045 

4 

0.003 

(0.629, 0.679) 


0.677 

4 

0.05 

(9.626, 9.864) 

10.584 

9.999 


145 































Table 12a. Percentage of Voice Calls Blocked at Each Path for Average 
Voice Loads p” = 8.0, 10.0, and 15.0 Capacity Allocation 1, c = 
(90,100,110,120), r = (1,1,1,1,1,1,5,5,5,5,5,5), and Voice Activity Factor 


^/{a + 0) = 0.4 



Monte Carlo 
Summation 


(0.008, 0.030) 
(0.002, 0.034) 
(0.002, 0.034) 
( 0 . 001 , 0 . 001 ) 
( 0 . 001 , 0 . 001 ) 
(0.000, 0.004) 
(0.194, 0.207) 
(0.144, 0.217) 
(0.157, 0.199) 
(0.000, 0.048) 
(0.000, 0.052) 
( 0 . 000 , 0 . 022 ) 


(0.34, 0.35) 
(0.29, 0.30) 
(0.28, 0.29) 
(0.07, 0.07) 
(0.06, 0.06) 
( 0 . 01 , 0 . 01 ) 
(2.29, 2.30) 
(1.96,1.98) 
(1.90, 1.92) 
(0.49, 0.50) 
(0.43, 0.44) 
(0.08, 0.08) 


Knapsack 

Approximation 



146 

















Table 12a (com’d) 




Monte Carlo 

Summation 

Knapsack 

Approximation 

Pascal 

Approximation 

(5.70, 5.70) 

5.70 

5.70 

(4.60, 4.60) 

4.60 

4.60 

(4.10, 4.20) 

4.20 

4.20 

(2.40, 2.40) 

2.50 

2.50 

(1.90, 1.90) 

2.00 

2.00 

(0.80, 0.80) 

0.90 

0.90 

(28.00, 28.10) 

28.60 

28.50 

(23.30, 23.40) 

23.80 

23.70 

(21.40, 21.40) 

21.60 

21.60 

(13.20, 13.20) 

13.80 

13.70 

(10.90, 11.00) 

11.40 

11.30 

(4.80, 4.80) 

5.40 

5.40 




147 
















Table 12b. Percentage of Voice Calls Blocked at Each Path for Average Voice 
Loads p*' = 0.3, 0.7, and 1.7, Capacity Allocation 2, c = (18,20,22,24), 
r = (1,1,1,1,1,1,5,5,5,5,5,5) and Voice Activity Factor /9/(a + /9) = 0.4 



Monte Carlo 
Siunmation 


(0.003, 0.003) 
(0.003, 0.003) 
(0.003, 0.003) 
( 0 . 000 , 0 . 000 ) 
( 0 . 000 , 0 . 000 ) 
( 0 . 000 , 0 . 000 ) 
(0.134, 0.176) 
(0.090, 0.130) 
(0.078, 0.134) 
(0.034, 0.086) 
(0.056, 0.056) 
(0.000, 0.023) 


(0.166, 0.227) 
(0.148, 0.209) 
(0.143, 0.186) 
(0.033, 0.085) 
(0.030, 0.058) 
(0.000, 0.059) 
(2.214, 2.402) 
(1.791, 1.966) 
(1.616, 1.773) 
(1.022, 1.149) 
(0.836, 0.958) 
(0.375, 0.464) 


Knapsack 

Approximation 


0.006 

0.005 

0.004 


Pascal 

Approximation 






0.001 

0.148 

0.107 

0.102 

0.059 

0.054 

0.012 


0.202 

0.184 

0.167 

0.069 

0.052 

0.034 

2.410 

1.946 

1.737 

1.147 

0.937 

0.465 


0.011 

0.009 

0.005 

0.339 

0.281 

0.256 

0.149 

0.123 

0.056 


0.243 

0.202 

0.182 

0.119 

0.099 

0.058 

2.708 

2.258 

2.033 

1.352 

1.125 

0.668 


148 


























Table 12b (cont’d) 


Voice 

Path 

P 

Offered 

Voice Load 

_ el _ 

__ 

Monte Carlo 

Summation 

Knapsack 

Approximation 

Pascal 

Approximation 



(3.135, 3.368) 

3.422 

3.284 



(2.574, 2.778) 

2.836 

2.780 



(2.255, 2.459) 

2.526 

2.4S0 



(1.826, 2.002) 

2.012 

1.935 

5 

1.7 

(1.499, 1.665) 

1.700 

1.633 

6 

1.7 

(0.916,1.046) 

1.103 

1.120 

7 

0.34 

(24.198, 24.763) 

25.706 

24.626 

8 

0.34 

(21.002, 21.547) 

22.265 

21.311 

9 

0.34 

(19.007, 19.601) 

20.065 

19.215 

10 

0.34 

(14.912, 15.391) 

16.246 

15.670 

11 

0.34 

(12.699, 13.148) 

13.875 

;3.423 

12 

0.34 

(8.795, 9.179) 

9.885 

9.616 


149 

















Tftble 13. l(Mhc Probability of Queueing Data for Different Capacity Allocations 
in the Multi-Rate Network of [6] 

Capacity Allocation 1 c = (90,100,110,120) 

Capacity Allocation 2 c= (18,20,22,24) 

Capacity Allocation 3 c = (9,10,11,12) 

Capacity Allocation 4 £= (5,5,6,6) 

Vector of Voice Path Rates r s= (1,1,1,1,1,1,5,5,5,5,5,5) 

Voice Activity Fhctor ^/(o + ^) = 0.4 



150 

















































Table 13 (cont’d) 



Offered 

Offered 

0 

Capacity 

Voice Load 

Data Load 

Monte Carlo 

Knapsack 

Pascal 

Allocation 

P* 

P" 

Summation 

Approximation 

Approximation 

3 

0.004 

2.0 

(0.080, 0.084) 


0.016 

3 

0.004 

4.0 

(1.676, 1.703) 


0.888 

3 

0.004 

6.5 

(15.230, 15.290) 

12.866 

12.864 

3 

0.04 

1.8 

(0.091, 0.095) 

0.051 

0.073 

3 

0.04 

3.6 

(1.326, 1.353) 

0.822 

0.737 

3 

0.04 

6.0 

(11.691, 11.759) 

9.621 

9.536 

3 

0.4 

0.3 

(0.059, 0.067) 



3 

0.4 

2.0 

(1.071, 1.099) 



3 

0.4 

5.0 

(11.887, 11.996) 

10.929 

10.409 

4 


0.8 

(0.083, 0.086) 



4 


1.4 

(0.889, 0.893) 

0.891 

0.889 

4 


2.8 

(12.345, 12.348) 

12.347 

12.348 

4 


0.7 

(0.104, 0.116) 



4 


1.4 

(0.964, 0.978) 

0.966 


4 

0.003 

2.8 

(12.460, 12.473) 

12.463 

12.475 

4 


||||Q|7n||[|| 

(0.495, 0.525) 


HQgH 

4 


1.0 

(1.248, 1.298) 



4 

0.05 

2.6 

(11.255, 11.304) 

11.348 

11.471 


151 

















































Table 14. lOOx Probability of Queueing Data at Each Link for Different Voice 
and Data Loads, Capacity Allocation 2, c = (18,20,22,24), r = 
(1,1,1,1,1,1,5,5,5,5,5,5), and Voice Activity Eactor j9/(a + )9) = 0.4 



152 






































Table 14 (coitt’d) 



Data Offered Offered 

Link Voice Load Data Load 
/ 0“ oi 





Monte Carlo 
Sumnuition 


(0.212, 0.238) 
(0.090, 0.107) 
(0.031, 0.040) 
(0.011, 0.018) 


(2.541, 2.632) 
(1.088, 0.107) 
(0.481, 0.520) 
(0.184, 0.207) 


(24.714, 24.963) 
(13.433, 13.621) 
(7.186, 7.331) 
(3.443, 3.539) 


Qi 


Knapsack 

Approximation 


0.036 

0.014 


2.521 

1.104 

0.488 

0.202 


24.514 

13.383 

7.169 

3.508 


Pascal 

Approximaticm 


.229 
.107 
0.049 
0.023 


2.351 

1.130 

0.537 

0.254 


23.500 

12.965 

6.830 

3.479 



153 



























TVible 15. Probability of Voice Blocking for Different TVafflc Loads, X= (8,8,8,8,8,8,8,8,8,8) 
Voice Activity Factor fil{a + ^) = 0.4, and Three Types of Admission 
Control 


(i) Equal Thresholds = 6 on Individual Voice Path TVaffic 


Offered 

Voice Load 

r 

B 

Thresholds 

Exact 

Value 

Monte Carlo 

Summation 

Knapsack 

Approximation 

Percent 
Error (%) 

2.5 

0.185545 

(0.179594, 0.185808) 

0.201855 

8.79 

(6,6,6,6,6) 

3.5 

0.312365 

(0.302761, 0.316174) 

0.331030 

5.98 

(6,6,6,6,6) 

4.5 

0.408949 

(0.385203, 0.417037) 

0.429108 

4.93 

(6,6,6,6,6) 

5.5 

0.482665 

(0.434905, 0.514719) 

0.503491 

4.31 

(6,6,6,6,6) 

6.5 

0.540419 

(0.505836, 0.540619) 

0.561224 

3.85 

(6,6,6,6,6) 

7.5 

0.586800 

(0.546001, 0.603585) 

0.607042 

3.45 

(6,6,6,6,6) 

8.5 

0.624825 

(0.534647, 0.646869) 

0.644257 

3.11 

(6,6,6,6,6) 

10. 

0.670493 

(0.616248, 0.705557) 

0.688468 

2.68 

(6,6,6,6,6) 

15. 

0.766014 

(0.676021, 0.778351) 

0.779502 

1.76 

(6,6,6,6,6) 


(ii) Optimal Individual Thresholds < 6 


Offered 

Voice Load 

P'’ 

B 

Thresholds 

Exact 

Value 

Monte Carlo 

Summation 

Knapsack 

Approximation 

Percent 
Error (%) 

2.5 

0.185512 

(0.183525, 0.186201) 

0.202398 

9.10 

(5,6,6,6,6) 

3.5 

0.310001 

(0.308286, 0.311606) 

0.317236 

2.33 

(2,6,6,6,5) 

4.5 

0.400543 

(0.398409, 0.402028) 

0.431677 

7.77 

(2,6,6,6,3) 

5.5 

0.469876 

(0.468602, 0.471287) 

0.509798 

8.49 

(1,6,6,6,2) 

6.5 

0.524440 

(0.523098, 0.526017) 

0.562409 

7.24 

(1,6,6,6,2) 

7.5 

0.569865 

(0.568632, 0.570945) 

0.613359 

7.63 

(1,6,6,6,1) 

8.5 

0.607519 

(0.606093, 0.608414) 

0.647777 

6.62 

(1,6,6,6,1) 

10. 

0.654345 

(0.653336, 0.655637) 

0.689589 

5.39 

(1,6,6,6,1) 

15. 

0.755467 

(0.754448, 0.756588) 

0.778174 

3.00 

(1,6,6,6,1) 


154 
































Table IS (cont’d) 


(Ui) Optimal Full Admission Controls for x, < 6 


Offered 


B 



Thresholds 

Voice Load 

P” 

Exact 

Value 

Monte Carlo 

Sununation 

Knapsack 

Approximation 

Percent 
Error (%) 

2.5 

0.185511 

(0.183525, 0.186201) 

0.220061 

18.62 

(5,6,6,6,6,8,8,7,8,8) 

3.5 

0.309905 

(0.308566, 0.312519) 

0.355329 

14.66 

(3,6,6,6,5,8,8,5,8,8) 

4.5 

0.399708 

(0.399676, 0.403976) 

0.451758 

13.02 

(2,6,6,6,4,8,8,4,8,8) 

5.5 

0.468216 

(0.469929, 0.474508) 

0.524826 

12.09 

(2,6,6,6,3,8,8,3,8,8) 

6.5 

0.522607 

(0.525087, 0.529143) 

0.584340 

11.81 

(2,6,6,6,2,8,8,2,8,8) 

7.5 

0.567119 

(0.571885, 0.576496) 

0.625008 

10.21 

(2,6,6,6,2,8,8,2,8,8) 

8.5 

0.605317 

(0.610714, 0.615877) 

0.658781 

8.83 

(2,6,6,6,2,8,8,2,8,8) 

10. 

0.652700 

(0.658680, 0.664670) 

0.699545 

7.18 

(2,6,6,6,2,8,8,2,8,8) 

15. 

0.754687 

(0.757665, 0.766253) 

0.785185 

4.04 

(2,6,6,6,2,8,8,2,8,8) 


155 

















Tftble 16. Comparison of Exact Value and Knapsack Approximation of the Probability 
of Voice Blocking for DilSerent Threshold Admission Controls, Voice Loads 


= = 2.5, j9/(a + )9) = 0.4, and £=(8,8,8,8,8,8,8,8,8,8) 


B 

Thre8holds=(6,6,6,6,6) 

Thre8hold6=(6,6,6,6,5) 

Thre6holds=(6,6,6,6,4) 

Thresholds=:(6,6,6,6,3) 

Bv 


Bv 

__ 

Exact 

Value 

Knaps. 

Approx. 

Exact 

Value 

Knaps. 

Approx. 

Exact 

Value 

Knaps. 

Approx. 

Exact 

Value 

Knaps. 

Approx. 


0.289575 

0.316342 

0.288406 

0.313684 

0.282039 

0.306347 

0.263071 

0.289559 


0.047056 

0.064568 

0.047098 

0.064794 

0.047404 

0.065425 

0.048638 

0.066899 


0.160361 

0.168923 

0.159399 

0.167262 

0.154592 

0.162693 

0.141113 

0.152319 


0.160361 

0.168906 

0.159399 

0.167265 

0.154592 

0.162744 

0.141113 

0.152452 

5 

0.270387 

0.290538 

0.274139 

0.3007.55 

0.295341 

0.329219 

0.363408 

0.39589^1 

Mean 

0.185548 

0.201855 

0.185688 

0.202752 

BBl 

0.205286 

0.191469 

0.211425 


Voice 

Path 

P 

Threshold8=(6,6,6,6,2) 

Thresholds=(6,6,6,6,l) 

Thresholds=(5,6,6,6,6) 

Thresholds=(5,6,6,6,5) 

Bv 

Bp 

_ ^ _ 

_ Bv _ 

Exact 

Value 

Knaps. 

Approx. 

Exact 

Value 

Knaps. 

Approx. 

Exact 

Value 

Knaps. 

Approx. 

Exact 

Value 

Knaps. 

Approx. 

Bi 

0.228059 

0.258735 

0.182889 

0.214820 

0.291666 


0.290500 

0.322249 

mm 

0.051652 

0.069716 

0.056587 

0.074001 

0.046530 


0.046571 

0.064073 


0.117384 

0.133544 

0.088578 

0.107302 

0.159831 

0.167579 

0.158866 

0.165881 

n 

0.117384 

0.133729 

0.088578 

0.107406 

0.159831 

0.167581 

0.158866 

0.165905 

mm 

0.505113 

0.525033 

0.722943 

0.729526 

0.269719 

0.288164 

0.273474 

0.298491 

Mean 

0.203918 

0.224151 

0.227915 

0.246611 

0.185615 

0.202398 

0.185655 

0.203320 



Thresholds=(5,6,6,6,4) 

Thresholds=(5,6,6,6,3) 

Thresholds=(5,6,6,6,2) 

Thresholds=(5,6,6,6,l) 

Voice 


Bp 


Bp 


Bp 


_ 

Path 

Exact 

Knaps. 

Exact 

Knaps. 

Exact 

Knaps. 

Exact 

Knaps. 

P 

Value 

Approx. 

Value 

Approx. 

Value 

Approx. 

Value 

Approx. 


0.284161 

0.315225 

0.265329 

0.299243 

0.230826 

0.270156 

0.187319 

0.229298 


0.046869 

0.064666 

0.048063 


0.050938 

0.068647 

0.055425 

0.072548 


0.154044 

0.161223 

0.140500 


0.116583 

0.131662 

0.087227 

0.105221 


0.154044 

0.161299 

0.140506 

■SBI 

0.116583 

0.131875 

0.087227 

0.103339 


0.294691 

0.327185 

0.362802 

0.394364 

0.304595 

0.523975 

0.722627 

0.729078 

Mean 

0.186762 

0.205920 

0.191440 

0.210235 

0.163905 

0.225263 

0.227965 

0.247897 


156 






















































































Tkble 17. Comparison of Exact Value and Knapsack Approximation of the Probability of Vcuce 
Blocking for Different Full Admission Controls, Vcnce Loads ^ = p* = 2.5, 

X=(8,8,8,8,8,8,8,8,8,8), and Voice Activity Factor P/{a ■+ 0) = 0.4 


m 

Th=(6,6,6,6,6,8,8,8,8,8) 

Th=(6.6,6,6.6,8,8,7,8,8) 

Th=(6,6,6,6,6,8,8,6,8,8) 

Th=(6,6,6,6,6,8.8,5,8,8) 

_ ^ _ 

_fip_ 

_ ^ _ 

_ Bp _ 

Exact 

Value 

Knaps. 

Approx. 

Exact 

Value 

Knaps. 

Approx. 

Exact 

Value 

Knaps. 

Approx. 

Exact 

Value 

Knaps. 

Approx. 

n 

0.289575 

0.331588 

0.290114 

0.341043 

0.299332 

0.358541 

0.338108 

0.394865 


0.047056 

0.063302 

0.046979 

0.062597 

0.045832 

0.061112 

0.041908 

0.058403 

D 

0.160361 

0.192089 

0.159809 

0.188046 

0.151728 

0.179596 

0.124889 

0.164308 

O 

0.160361 

0.192232 

0.159808 

0.188228 

0.151728 

0.179853 

0.124889 

0.164312 

1^9 

0.270387 

0.309768 

0.271007 

0.319049 

0.281622 

0.338953 

0.325117 

0.377960 

Mean 

0.185548 

0.217796 

0.185543 

0.219793 

0.186048 

0.223611 

0.190982 

0.231969 


m 

Th=(6,6,6,6,5,8,8,8,8,8) 

Th=(6,6,6.6.5,8,8,7.8.8) 

Th=(6,6,6,6,5,8.8,6,8,8) 

Th={6,6,6,6,5,8,8,5,8,8) 

_ Bp _ 

_Bp___ 

_ Bp _ 

_ Bp _ 

Exact 

Value 

Knaps. 

Approx. 

Exact 

Value 

Knaps. 

Approx. 

Exact 

Value 

Knaps. 

Approx. 

Exact 

Value 

Knaps. 

Approx. 


0.288406 

0.329649 

0.288937 

0.338184 

0.298430 

0.356612 

0.338108 

0.393149 


0.047098 

0.063465 

0.047019 

0.062760 

0.045855 

0.061269 

0.041908 

0.058581 


0.159399 

0.190586 

0.158921 

0.186694 

0.151316 

0.178507 

0.124889 

0.163610 


0.159399 

0.190735 

0.158921 

0.186875 

0.151316 

0.178752 

0.124889 

0.163605 

5 

0.274139 

0.318288 

0.274612 

0.327005 

0.283788 

0.345839 

0.325117 

0.383145 

Mean 

0.185688 

0.218545 

0.185682 

0.220304 

0.186141 

0.224196 

0.190982 

0.232418 


m 

Th=(6,6,6,6,4,8,8,8,8,8) 

Th=(6,6,6.6,4,8,8.7.8.8) 

Th=(6,6,6,6,4.8,8,6.8,8) 

Th=(6,6,6,6,4,8,8,5,8,8) 

_ Bp _ 

Bp 

Bp 

_ Bp _ 

Exact 

Value 

Knaps. 

Approx. 

Exact 

Value 

Knaps. 

Approx. 

Exact 

Value 

Knaps. 

Approx. 

Exact 

Value 

Knaps. 

Approx. 

B 

0.282039 

0.324108 

0.282489 

0.332499 

0.291800 

0.350841 

0.333782 

0.387673 


0.047404 

0.063930 

0.047328 

0.063232 

0.046101 

0.061737 

0.041997 

0.058941 

B 

0.154592 

0.186303 

0.154254 

0.182783 

0.148010 

0.175258 

0.123861 

0.161392 

B 

0.154592 

0.186474 

0.154254 

0.182972 

0.148010 

0.175487 

0.123861 

0.161365 


0.295341 

0.342958 

0.295602 

0.350382 

0.301656 

0.366705 

0.333778 

0.399807 

Mean 

0.186794 

0.220755 

0.186785 

0.222374 

0.191456 

0.226006 

0.187115 

0.233836 


157 









































































Tftbte 18. lOOx Probability of Queueing Data for Different Voice Loads and Thresh* 
olds. Node Transceiver Vector Z = (8,8,8,8,8,8,8,8,8,8), Data Loads 
^ = pf = 2.5, and Voice Activity Esctor /9/(o + /9) = 0.4 


Offered 

Voice Load 

r 

Path 

Thresholds 

Q 

Exact 

Value 

Knapsack 

Approximation 

Percent 
Error (%) 

2.5 

(5,6,6,6,6) 

12.073 

11.611 

-3.83 

3.5 

(5,6,6,6,5) 

14.054 

13.358 

-4.95 

4.5 

(2,6,6,6,3) 

16.012 

14.794 

-7.61 

5.5 

(1,6,6,6,2) 

15.284 

13.834 

-9.49 

6.5 

(1,6,6,6,2) 

16.778 

15.104 

-9.98 

7.0 

(1,6,6,6,1) 

16.839 

14.511 

-13.82 

8.5 

(1,6,6,6,1) 

17.897 

15.357 

-14.19 

10. 

(1,6,6,6,1) 

19.110 

16.345 

-14.47 

15. 

(1,6,6,6,1) 

21.397 

18.474 

-13.66 


158 











'Table 19. lOOx Probability of Queueing Data at Each Link for Data Loads ^ = 

pf = 2.5, Different Voice Loads and Control Thresholds, (S> 8,8,8,8,8,8), 

and Voice Activity Factor j8/(a + fi) = 0.4 


Voice Load p" = 2.5 
Thresholds=(5,6,6,6,6) 

Data _ Qi 

Link Ebcact Knapsack E^or 
I Value Approx. % 





6.864 

6.864 

15.103 

12.490 

12.490 

17.376 

12.490 

12.490 

12 490 


6.633 

6.633 

14.573 

11.998 

11.998 

17.123 

11.998 

11.994 

11.998 


% 


-3.37 

-3.37 

-3.51 

-3.94 

-3.94 

-1.46 

-3.94 

-3.97 

-3.94 


Voice Load p** = 3.5 
Thre8hold8=(5,6,6,6,5) 


Qi 


Exact Knapsack Error 
Value Approx. % 


7.443 

7.444 


% 


-4.75 

-4.74 

-5.41 

-5.27 

-5.28 

-3.51 



14.491 

14.491 



13.726 

19.864 

13.730 

13.707 

13.730 


Voice Load p" = 4.5 
Thresholds=(2,6,6,6,3) 


Qi 



10.232 

10.232 

20.562 

16.014 

16.014 

23.009 



Knapsack 

Apprcnc. 

Elrror 

% 

9.325 

-8.86 

9.325 

-8.86 

18.905 

-8.06 

00 

-7.51 

14.810 

-7.52 

21.579 

-6.21 

14.816 

-7.49 

14.760 

-7.84 

14.816 

-7.49 


Data 



Voice Load p” = 5.5 
Thresholds=( 1,6,6,6,2) 


Qi 


Exact 

Knapsack 

Error 

Value 

Approx. 

% 




9.280 

9.280 

19.603 

15.302 

15.302 

22.885 

15.301 

15.301 

15.301 


9.127 

9.127 

17.888 

13.642 

13.642 

20.317 

13.646 

13.472 

13.646 


-1.65 

-1.65 

-8.75 

-10.85 

-10.85 

- 11.22 

-10.82 

-11.95 

-10.82 


Voice Load p* = 6.5 
Thresholds=( 1,6,6,6,2) 


Qi 


Exact Knapsack Error 
Value Approx. % 


10.390 10.217 

10.390 10.217 

21.527 19.503 

16.753 14.843 -11.40 

16.753 14.843 -11.40 

24.930 21.992 -11.78 

16.753 14.847 -11.38 

16.753 14.623 -12.71 

16.753 14.847 -11.38 


Voice Load p* = 

7.5 

Thresholds=(l,6,6,6,l) 

Qi 

Exact 

Knapsack 

Error 

Value 

Approx. 

% 


11.626 

11.626 

21.915 

16.329 

16.329 
24.733 

16.330 
16.330 
16.330 


11.214 

11.214 

19.077 

13.783 

13.783 

20.581 

13.786 

13.371 

13.786 


-3.54 

-3.54 

-12.95 

-15.59 

-15.59 

-16.79 

-15.58 

-18.12 

-15.58 



159 





















































Table 19 (cont’d) 


Voice Load p” = 8.5 

Thre8hold8=(l,6,6,6,l) 

Data Qi 

Link Exact Knapsack Error 
/ Value Approx. % 


12.389 

12.389 

23.239 

17.373 

17.373 

26.189 

17.373 

17.373 

17.373 


DJ 


14.570 

21.654 

14.577 

14.101 

14.577 


Voice Load p® = 10.0 
Thre8holds=(l,6,6,6,l) 


Qi 


Exact Knapsack Error 


-13.45 

-16.13 

-16.13 

-17.32 

-16.09 

-18.83 

-16.09 


Value 


13.268 

13.268 

24.747 

18.572 


18.572 

27.844 

18.572 

18.572 

18.572 


Approx. 


12.869 

12.870 
21.356 
15.520 
15.520 
22.936 

15.527 
14.981 

15.528 


-3.00 

-3.00 

-13.70 

-16.43 

-16.43 

-17.63 


Voice Load p® = 15.0 
Thresholds=( 1,6,6,6,1) 


Qi 


Exact Knapsack Error 
Value Approx. % 


14.793 


.932 

.932 


.842 
20.842 
30.931 


14.793 

23.974 

17.534 

17.535 
25.648 


-16.39 20.842 17.551 


-15.87 

-17.08 

-15.79 


-19.33 20.842 16.888 -18.97 
-16.39 20.842 17.552 -15.78 




























T^ble 20. Comparison of Voice>Bk>cking Performance of Admistmn Control Policies 
Whose Thresholds are Obtsdned by Optimising the Knapsack Approximation 
Node Transceiver Vector 21= (8,8,8,8,8,8,8,8,8,8) 

Voice Activity Factor /3/(a + /3) = 0.4 



No Control 

Knapsack-Based Thresholds 

Optimal Threshcdds 

Voice 

B 

B 

B 

Load 

Exact 

Knapsack 

Knapsack 

Path 

Exact 

Gain 

Exact 

Path 

Gain 


Value 

Approx 

Approx 

Thresh 

Value 

% 

Value 

Thresh 

% 

3.5 

0.307931 

0.317236 

0.318865 

(3.8,8,8,8) 

0.305456 

0.80 

0.304054 

(2,8,8,8,6) 


4.5 

0.401453 

0.411132 

0.407689 

(1,8,8,8,8) 

0.386530 

3.72 

0.385776 

(1,8,8,8,3) 


5.5 

0.472130 

0.483226 

0.477817 

(1,8,8,8,8) 

0.453197 

4.01 

0.448496 

(1,8,8,8,2) 


6.5 

0.527213 

0.539849 

0.534412 

(1,8,8,8,4) 

0.507246 

3.79 

0.498001 

(1,8,8,8,1) 

5.53 

7.5 

0.571417 

0.585356 

0.580005 

(1,8,8,8,3) 

0.550631 

3.64 

0.541157 

(1,8,8,8,1) 

5.29 

8.5 

0.607742 

0.622658 

0.617512 

(1,8,8,8,2) 

0.584775 

3.78 

0.578903 

(1,8,8,8,1) 

4.74 

10. 

0.651634 

0.667461 

0.662817 

(1,8,8,8,2) 

0.632611 

2.92 

0.626443 

(1,8,8,8,1) 

3.86 

15. 

0.745317 

0.761318 

0.758245 

(1,8,8,8,1) 

0.730823 

1.94 

0.730823 

(1,8,8,8,1) 

1.94 




161 































T^ble 21. Revenue Sensitivities for the MuIti>Rate Network of [ 6 ] 

Link Capacity Vector c = (90,100,110,120) 

Vector of Voice Loads £* = (10,10,10,10,10,10,2,2,2,2,2, 2) 

Vector of Data Loads = (50,50,50,50) 

Vector of Voice Rates r = ( 1 , 1 ,1,1,1,1,5,5,5,5,5,5,) 

Vector of Voice Revenue Rates 7 * = (1.0,1.2,1.4,1.6, 1 . 8 ,2.0,3.0,3.6,4.2,4.8,5.4,6.0) 
Vector of Data Revenue Rates 7 ^ = (1.0,1.2,1.4,1.6) 

Voice Activity Factor 0/{q + 0) = 0.4 


Table 21a. Voice Revenue Sensitivity With Respect to Voice Loads 


Voice 

Path 

P 

Offered 

Voice Load 

Pi 

dW^fdpl 

Monte Carlo 

Stimmation 

Knapsack 

Approximation 

Pascal 

Approximation 


10.0 

(0.88, 0.99) 

0.90 

0.90 


10.0 

(1.13, 1.24) 

1.12 

1.12 


10.0 

(1.27, 1.39) 

1.33 

1.33 


10.0 

(1.50,1.61) 

1.57 

1.57 

5 

10.0 

(1.61, 1.81) 

1.77 

1.77 

6 

10.0 

(1.97, 2.09) 

1.99 

1.99 



(2.19, 2.43) 

2.35 

2.37 



(3.00, 3.24) 

3.07 

3.08 


2.0 

(3.54, 3.79) 

3.69 

3.70 

10 

2.0 

(4.48, 4.73) 

4.58 

4.57 

11 

2.0 

(5.19, 5.24) 

5.21 

5.21 

12 

2.0 

(5.75, 6.02) 

5.95 

5.94 


162 

















l^ible 21b. Data Revenue Sensitivity With Respect to Voice Loads 


Voice 

Path 

P 

Offered 

Voice Load 

Pp 

dW^/dpl 

Monte Carlo 

Sununation 

Knapsack 

Approximation 

Pascal 

Approximation 


10.0 

(-0.413765, -0.391275) 

-0.395828 

-0.385843 


10.0 

(-0.334608, -0.313041) 

-0.321129 

-0.314085 


10.0 

(-0.321502, -0.300196) 

-0.307425 

-0.299321 


10.0 

(-0.117725, -0.101117) 

-0.106280 

-0.106447 

5 

10.0 

(-0.104447, -0.088175) 

-0.092525 

-0.091626 

6 

10.0 

(-0.024743, -0.009671) 

-0.017448 

-0.019493 



(-2.552438, -2.500914) 

-2.501584 

-2.444003 



(-2.038939, -1.992859) 

-1.997447 

-1.960893 



(-1.937221, -1.892167) 

-1.892145 

-1.852493 

10 

2.0 

(-0.787522, -0.758234) 

-0.767471 

-0.759875 

11 

2.0 

(-0.682234, -0.654666) 

-0.659719 

-0.648903 

12 

2.0 

(-0.144140, -0.126442) 

-0.138872 

-0.149429 


T^ble 21c. Data Revenue Sensitivity With Respect to Data Loads 


Data 

Link 

/ 

Offered 

Data Load 

Pi 

dW^/dpi 

Monte Carlo 

Summation 

Knapsack 

Approximation 

Pascal 

Approximation 

B 


(0.000519, 0.012731) 

0.130102 

0.148864 



(0.927529, 0.934309) 

0.940640 

0.940621 

H 

50.0 

(1.356462, 1.359009) 

1.356561 

1.352288 

■1 

50.0 

(1.595059, 1.595804) 

1.595164 

1.593700 


163 




















T^ble 22. Revenue Sensitivities for the Single-Rate Radio Network of [11] 
Node IVansceiver Vector X = (8,8,8,8,8,8,8,8,8,8) 

Vector of Voice Revenue Rates 2 " = (1.0,1.2,1.4,1.6,1.8) 

Vector of Data Revenue Rates 7 ^ = (1.0,1.2,1.4,1.6,1.8,2.0,2.2,2.4,2.6) 
Voice Activity Factor /3/(o + /9) = 0.4 

Table 22a. Voice Revenue Sensitivity With Respect To Voice Loads 


Voice 

Path 

P 

Offered 

Voice Load 

pS 

dW^ldpl 

Exact 

Value 

Knapsack 

Approximation 

Percent 
Error (%) 

1 

5.5 

-0.276503 

-0.221452 

-19.91 

2 

5.5 

0.628294 

0.503593 

-19.85 

3 

5.5 

0.412164 

0.373352 

-9.42 

4 

5.5 

0.455148 

0.415531 

-8.70 

5 

5.5 

0.103284 

0.114084 

10.46 


Table 22b. Data Revenue Sensitivity With Respect To Voice Loads 

Vector of Data Loads = (4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0) 


Voice 

Path 

P 

Offered 

Voice Load 

p; 

dW^/dpl 

Exact 

Value 

Knapsack 

Approximation 

Percent 
Error (%) 


5.5 

-0.313773 

-0.435772 

38.88 


5.5 

-0.301060 

-0.376670 

25.11 


5.5 

-0.096402 

-0.277122 

187.46 


5.5 

-0.327656 

-0.427354 

30.43 

5 

5.5 

-0.262378 

-0.382214 

45.67 


Vector of Data Loads = (2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0) 


Voice 

Path 

P 

Offered 

Voice Load 

pI 

dW^ldpl 

Exact 

Value 

Knapsack 

Approximation 

Percent 
Error (%) 


5.5 

-0.068434 

-0.089658 

31.01 


5.5 

-0.056307 

-0.067183 

19.31 


5.5 

-0.029062 

-0.059503 

104.76 


5.5 

-0.073209 

-0.088104 

20.35 

5 

5.5 

-0.061949 

-0.081633 

31.77 


164 




























Tftble 22c. Data Revenue Sensitivity With Respect To Data Loads 
Vector of Voice Loads p" = (5.5,5.5,5.5,5.5,5.5) 


Data 

Offered 

dW^/dpf 

Link 

Data Load 

Ebcact 

Knapsack 

Percent 

/ 

Pf 

Value 

Approximation 

Error (%) 


4.0 

-0.204096 

-0.189882 

-6.96 



-0.244915 

-0.227802 

-6.99 



-0.499528 

-0.496486 

-0.61 



-0.440876 

-0.431286 

-2.17 

5 

4.0 

-0.495986 

-0.485410 

-2.13 

6 

4.0 

-0.672845 

-0.671192 

-0.25 

7 

4.0 

-0.606184 

-0.593026 

-2.17 

8 


-0.661292 

-0.645434 

-2.40 

9 


-0.716399 

-0.718822 

0.34 


HB 

0.732983 

0.742983 

1.36 


■■ 

0.879579 

0.891355 

1.34 


2.0 

0.755747 

0.774882 

2.53 


2.0 

1.044098 

1.052112 

0.77 

5 

2.0 

1.174610 

1.183667 

0.77 

6 

2.0 

1.048758 

1.052783 

0.38 

7 


1.435631 

1.446897 

0.78 

8 

2.0 

1.566143 

1.580366 

0.91 

9 

2.0 

1.696655 

2.079021 

22.54 


165 























Table 23. Computational Effort Required for the Different Approximations and 
Network Models 



Radio Network 

Multi-Rate Network 


T = (8,8,8,8,8,8,8,8,8,8) 

c = (90,100,110,120) 

Approximation 

r = (l,l,l,l,l) 

r = (l,l,l,l,l, 

1 ,5,5,5,5,5,5) 

Method 

Probability of 

Probability of 

Probability of 

Probabihty of 


Voice Blocking 

Data Queueing 

Voice Blocking 

Data Queueing 

Exact 



prohibitive 

prohibitive 

Monte Carlo 



25 min 

25 min 

Knapsack 

2 sec 

2 sec 

2.5 sec 

2.5 sec 

Pascal 

2 sec 

2 sec 

2.5 sec 

2.5 sec 


166 






















