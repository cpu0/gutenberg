jgj Processing Raman Spectra 
of High-Pressure Hydrogen 
Flames 

The Raman Code automates the 
analysis of laser-Raman-spectroscopy 
data for diagnosis of combustion at 
high pressure. On the basis of the the- 
ory of molecular spectroscopy, the soft- 
ware calculates the rovibrational and 
pure rotational Raman spectra of I I 2 , 
0 2 , N 2 , and H 2 0 in hydrogen/ air 
flames at given temperatures and pres- 
sures. Given a set of Raman spectral 
data from measurements on a given 
flame and results from the aforemen- 
tioned calculations, the software calcu- 
lates the thermodynamic temperature 
and number densities of the aforemen- 
tioned species. The software accounts 
for collisional spectral-line-broadening 
effects at pressures up to 60 bar (6 
MPa). The line-broadening effects in- 
crease with pressure and thereby com- 
plicate the analysis. The software also 
corrects for spectral interference 
(“cross-talk”) among the various chemi- 
cal species. In the absence of such cor- 
rection, the cross-talk is a significant 
source of error in temperatures and 
number densities. This is the first 
known comprehensive computer code 
that, when used in conjunction with a 
spectral calibration database, can 
process Raman-scattering spectral data 
from high-pressure hydrogen/ air 
flames to obtain temperatures accurate 
to within ±10 K and chemical-species 
number densities accurate to within ±2 
percent. 

This work was done by Quang-Viet Nguyen of 
Glenn Research Center and Jun Kajima of the 
National Research Council. Further information is 
contained in a TSP ( seepage 1 ). 

Inquiries concerning rights for the commer- 
cial use of this invention should be addressed 
to NASA Glenn Research Center, Innovative 
Partnerships Office, Attn: Steve Fedor, Mail 
Stop 4-8, 21000 Brookpark Road, Cleveland, 
Ohio 44135. Refer to LEW-17769-1. 


@ X-Windows Information 
Sharing Protocol Widget 
Class 

The X-Windows Information Shar- 
ing Protocol (ISP) Widget Class 
(“Class” is used here in the object-ori- 
ented-programming sense of the 
word) was devised to simplify the task 
of implementing ISP graphical-user-in- 
terface (GUI) computer programs. ISP 
programming tasks require many 
method calls to identify, query, and in- 


terpret the connections and messages 
exchanged between a client and an ISP 
server. Most X-Windows GUI programs 
use widget sets or toolkits to facilitate 
management of complex objects. The 
widget standards facilitate construc- 
tion of toolkits and application pro- 
grams. The X-Windows Information 
Sharing Protocol (ISP) Widget Class 
encapsulates the client side of the ISP 
programming libraries within the 
framework of an X-Windows widget. 
Using the widget framework, X-Win- 
dows GUI programs can interact with 
ISP services in an abstract way and in 
the same manner as that of other 
graphical widgets, making it easier to 
write ISP GUI client programs. Wrap- 
ping ISP client services inside a widget 
framework enables a programmer to 
treat an ISP server interface as though 
it were a GUI. Moreover, an alternate 
subclass could implement another 
communication protocol in the same 
sort of widget. 

This program was written by Matthew R. 
Barry of United Space Alliance for Johnson 
Space Center. For further information, con- 
tact the Johnson Innovative Partnerships Of- 
fice at (281) 483-3809. 

MSC-23583 


t? Simulating Humans as 

Integral Parts of Spacecraft 
Missions 

The Collaborative-Virtual Environ- 
ment Simulation Tool (C-VEST) soft- 
ware was developed for use in a NASA 
project entitled “3-D Interactive Digital 
Virtual Human.” The project is oriented 
toward the use of a comprehensive suite 
of advanced software tools in computa- 
tional simulations for the purposes of 
human-centered design of spacecraft 
missions and of the spacecraft, space 
suits, and other equipment to be used 
on the missions. The C-VEST software 
affords an unprecedented suite of capa- 
bilities for three-dimensional virtual-en- 
vironment simulations with plug-in in- 
terfaces for physiological data, haptic 
interfaces, plug-and-play software, real- 
time control, and/or playback control. 
Mathematical models of the mechanics 
of the human body and of the afore- 
mentioned equipment are imple- 
mented in software and integrated to 
simulate forces exerted on and by astro- 
nauts as they work. The computational 
results can then support the iterative 
processes of design, building, and test- 
ing in applied systems engineering and 
integration. The results of the simula- 


tions provide guidance for devising 
measures to counteract effects of micro- 
gravity on the human body and for the 
rapid development of virtual (that is, 
simulated) prototypes of advanced 
space suits, cockpits, and robots to en- 
hance the productivity, comfort, and 
safety of astronauts. The unique ability 
to implement human-in-the-loop im- 
mersion also makes the C-VEST soft- 
ware potentially valuable for use in com- 
mercial and academic settings beyond 
the original space-mission setting. 

This program was written by Anthony C. 
Bruins of Johnson Space Center; Robert 
Rice of Dynoverse Corp.; Lac Nguyen, Heidi 
Nguyen, and Tim Saito of HPN Software 
Consultant, Inc.; and Elaine Russell of the 
Institute of Somatic Sciences. For further in- 
formation, contact the Johnson Innovative 
Partnerships Office at (281 ) 483-3809. 
MSC-23454 


w Analyzing Power Supply and 
Demand on the ISS 

Station Power and Energy Evaluation 
Determiner (SPEED) is ajava application 
program for analyzing the supply and de- 
mand aspects of the electrical power sys- 
tem of the International Space Station 
(ISS). SPEED can be executed on any 
computer that supports version 1.4 or a 
subsequent version of the Java Runtime 
Environment. SPEED includes an analysis 
module, denoted the Simplified Battery 
Solar Array Model, which is a simplified 
engineering model of the ISS primary 
power system. This simplified model 
makes it possible to perform analyses 
quickly. SPEED also includes a user- 
friendly graphical-interface module, an 
input file system, a parameter-configura- 
tion module, an analysis-configuration- 
management subsystem, and an output 
subsystem. SPEED responds to input in- 
formation on trajectory, shadowing, atti- 
tude, and pointing in either a state-of- 
charge mode or a power-availability 
mode. In the state-of-charge mode, 
SPEED calculates battery state-of-charge 
profiles, given a time-varying power-load 
profile. In the power-availability mode, 
SPEED determines the time-varying total 
available solar array and/or battery power 
output, given a minimum allowable bat- 
tery state of charge. 

This work was done by Justin Thomas, 
Tho Pham, Raymond Halyard, and Steve 
Conwell of United Space Alliance for John- 
son Space Center. For further information, 
contact the Johnson Innovative Partnerships 
Office at (281) 483-3809. 

MSC-23621 


14 


NASA Tech Briefs, February 2006 


