I 

J DEPARTMENT OF 
, COMPUTER SCIENCE 

I 
I 


I 

I 

I 

I 

l 


ATARI INTERACTIVE 
DEBUGGER 
by T.P.LOVE 
( M.Sc. Disssrtation ) 



HCL 

STORE 


The University of Liverpool, Chadwick Building, P.O. Box 147, Liverpool L69 3BX 

LIVERPOOL 

UNIVERSITY 

THESIS 


LOV 












Contents: 


Aims, Requirements and Design 
Specification of User-visible Routines 
Windows. 

Coding and Testing. 

Program Description. 

Evaluation. 

References 


User's Handbook. 






CHAPTER 1 


AIMS, REQUIREMENTS AND DESIGN 


The basic requirement was clear enough; a debugger for 68k 
code on the Atari ST to be used by future undergraduates within 
the department, but it was felt that as much should be done to 
explore the potential of the WIMP enviroment as possible. 
Initially I thought that debugging, where one requires fast 
response to simple requests, and the users are likely to be 
profficient keyboard users, wouldn't lend itself naturally to 
such a treatment and I wanted to retain a command line option 
but as the project rolled on, I thought that I should move with 
the times and accept some gratuitous wimping for the benefit of 
those of the intended users who are likely to remain 
inexperienced 68k programmers. 

My part in the production of STID (STID : ST interactive 
debugger) was to Design the program and do as much programming 
as I could. 

Many of the facilities the program would be expected to 
provide were standard. I took as a basic model the *ID chip for 
the 6502 (as presently used in the university), adding 
facilities that I had found useful while using the MAXAM 



AIMS, REQUIREMENTS AND DESIGN 


Page 1-2 


moni tor/assembler for the Amstrad micro from Amor and a 
monitor/ assembler called GEM (no relation) for the Commodore 
64. Perhaps the majority of lowlevel programmers nowadays work 
on home micros and the fruit of their experience shouldn't be 
ignored. Also there seems to be little difference between 6502 
and 68k debugging methodologies. One error that may crop up in 
68k but not 6502 code is that of not lining up commands on even 
addresses. I have tried to ensure that the user is made aware 
of this risk without imposing inflexibility. For instance, when 
displaying memory in words they must be displayed from an even 
address but byte display can begin at an odd one. 

I also tried to find out as much as possible about monitors 
for 68k machines. I found magazine reviews of programs useful 
but I also looked at some programs that have been used on the 
Atari, Mac etc. The salient features of these are summarised 
la ter. 

I consulted articles and books on debugging. The little of 
relevance that I found is summarised later. 

User-friendliness and the exploitation of windows was 
exellently covered in an article on the Dbx-Tool for the Sun 
Workstation(1) (They had two engineers working on this problem 
for months ) and in an article on the design of the Star user 
interface(2). These, augmented by the experience gained by my 
limited use of MAC and ST programs provided the bulk of my 
conception of the final product. 







AIMS, REQUIREMENTS AND DESIGN 


Page 1-3 


C was always going to be the language used. GEM more or 
less decided that. It took longer than expected for me to come 
to terms with C and the ST. The books I consulted are listed 
later. Before I felt I knew what GEM could do, and how fast it 
could do it, I found it impossible to decide on details of the 
implementation, so the design and the coding continued in 
tandem. 

Throughout, I was aware that this program would be taken 
over by others with different ideas to mine so I didn't feel 
oblidged to specify the operations down to the smallest detail. 

First, some general design points. 

I decided early on that I wanted an experienced user to be 
able to use the minimum number of "keypresses" without losing 
flexibility or reducing the display of options that a new user 
would need. Using dialog boxes and as many defaults as 
possible, such an interface is possible. Nearly all facilities 
provide default values. In deciding what the default value 
should be, I plumped for uniformity rather than the ideal; it 
might have been tempting to have the value used in the last call 
of a function being the default for one function and perhaps 
'start of block' being the default for another, but the small 
theoretical gain in keypresses is easily outweighed by the 
greater user- friendliness of a consistent default setting. 




AIMS, REQUIREMENTS AND DESIGN 


Page 1-4 


The debugger should cater for personal programming style, 
retaining as much flexibility as is tenable. For instance, I 
wanted the user to be able to keep as many windows open as 
possible and be able to perform any reasonable inter-window 
operation. However, I decided not to allow dragging of screen 
blocks of code/memory (as MacWrite). The risk of user 
imprecision causing irreversable damage would be too great. 

I initially intended using the viewpoint philosophy (i.e. 
when "looking" at memory you could view it as hex values, 68k 
code or a dynamic entity whose actions only are visible) but 
this high-level interpretation of the program makes it less easy 
to use. 

I have neglected color and sound. I'm told that there are 
spreadsheets that use color and I can see where color coding 
could be used in a debugger (e.g. when showing memory, ROM 
values could be printed in black to show that they are "dead", 
fixed) but the concommitant reduction in effective screen size 
would be crippling. 

Soon there will be 2M and 4M versions of the ST. This 
affects default values of the top of memory. If chips other 
than the 68000 are used then the register display will have to 
be augmented (for details see later). 

In line with the prevailing GEM applications philosophy I 
have not updated every window each time the contents of the 
active window is changed. By doing this I have allowed 
contradictory data to appear simultaneously on screen which 




AIMS, REQUIREMENTS AND DESIGN 


Page 1-5 


shouldn't confuse the seasoned user but may puzzle others. 

I have taken the liberty of allowing not more than one 
label display window and not more than one break point display 
window to be on screen at a time. My justification of this 
reduction in the user's freedom is that 

i) I can think of no reason why 2 windows of either of 
these types should be needed. 

ii) 'Virtual' inconsistancias are reduced. 

Some programs have a notepad option that allows the user to 
type in passing thoughts. I think that the typical assembler 
writer works with a listing and various scraps of paper around 
the keyboard, ticking off corrections as they are typed in etc, 
and a computer notepad would be superfluous. 

Originally, activation of the HELP option was to have 
caused an explanation of the usage of a facility to be displayed 
prior to the facility's activation. I was advised that the 
trend is towards a separate HELP document being on the same disc 
as the program which can be printed out and refered to when 
necessary. 

I wanted labels to be used whenever possible. Mindful of 
the fact that debugging a program usually takes more than a 
session, I thought it would be useful to allow the user to save 
and load labels. The labels are kept in numerically ascending 
order. At present there is no sorting procedure; the labels are 
added and removed one at a time except when loading labels, and 



AIMS, REQUIREMENTS AND DESIGN 


Page 1-6 


loaded labels are presumed to be in the correct order. 

One general feature worth mentioning is that of 
Highlighting. Whenever sensible, the user is allowed to 
highlight an address (or a label ) and this address would be the 
default for subsequent commands. In view of the above paragraph 
it should be noted that at times the user may not know which of 
the visible highlighted lines is the current one. This may 
confuse the first time user but I feel the advantages outweigh 
the disadvantages since it reduces the need to type numbers. 

I had considered changing the form of the pointer to some 
effect. For instance, in a memory display window the pointer 
could change according to whether the character beneath the 
pointer was editable or not. I have not implemented this but it 
could be useful. 

Error detecting and reporting must be comprehensive in a 
program like this, to save irritation on the part of the user 
(and the harrassed tutor). 

Error prevention is included at the lowest possible level 
(e.g. during the changing of memory only hex characters are 
accepted. Within dialog boxes such restrictions are impossible 
to implement so the job is done by glong). I have included many 
error traps but have been rather remiss in providing informative 
error messages. SID tries to read from every memory location 
that it changes and claims to give an error message if the 
expected value is not read back. In fact it crashes. 







REQUIREMENTS AND DESIGN 


Page 1-7 


The loading and saving facilities will need many error 


messages, 


Now some more specific design details. 


There are 2 global variables, 'lblock' and 'hblock' which 
are initialised to 0x000000 and OxFFFFFF respectively and take 
the start and end addresses of any hex file which is loaded in. 
Having such a default block is useful but if the user wants to 
look outside of this block then care must be taken by the 
programmer to avoid silly default values being offered. 

Backtracing is a possible addition but is beyond the scope 
of this project. 


It would be useful to be able to put background processes 
on the interrupt.For example, one could have an updated window 
on memory showing while a program is being run. This doesn't 
sound difficult to implement; I just haven't got round to 
thinking about it. 

I have implemented a facility I called 'tagging' whereby 
suitable windows can be linked so that they scroll together. 

A few of the function keys have fixed uses, but most can be 
redefined so that up to 5 of the menu calls can be held under 
them. It would not be difficult to save and load the function 
key redefinitions but it's hardly worth it. The intention was 
to show the keys on screen (perhaps not permanently) so they 


could be clicked on. 







AIMS, REQUIREMENTS AND DESIGN 


Page 1-8 


I have tried to take advantage of what visible structure 
68k code has by having an option during disassembly that 
highlights commands that alter the SP. 

At least one 68k monitor allows searching for assembly code 
instructions with wild fields. I haven't included this facility 
because I know no one with sufficient knowledge of 68k 
assembling to tell me whether this facility merits the work 
involved. No one in the department seems to have done any 68k 
programming to speak of, which has made me less assured about 
some of my design decisions. 

I have suggested a facility called 'check corruption'. 
Given 2 addresses, 'start' and 'end' say, this facility starts 
the program from 'start' and makes a note of which registers 
have been changed as it passes to 'end' whereupon it reports its 
findings. It doesn't check whether registers have been saved on 
the stack. 

Monitors on micros often have a code relocation facility. 
68k code can easily be written to be relocatable so I haven't 
included a provision. 

Monitors for micros are often relocatable (or at least have 
'top of memory' and 'bottom of memory' versions). I don't know 
how this useful facility might be included in this program. 

Some of the TOS calls return information that might be 
useful to a debugger (e.g. where the top of memory is). I 
haven't included a provision to call these from within the 




AIMS, REQUIREMENTS AND DESIGN 


Page 1-9 


debugger. Such a provision would sometimes be useful but to be 
fully implemented would require a 'command line' style of entry 
with TOS documentation near at hand. 

Screen and Menus: The menu bar is DESK, GO, LOOK, ADD, BLOCK, 
SET, TRANSPUT 

DESK:( contains desk accessories and Exit) 

GO: (Dynamic Features) 

Go 

Trace 
Set Breaks 
Show Breaks 
Check Corruption 

LOOK:(Look and Change) 

Same? 

Disassemble 

Find 

Replace 

Inspect 

Registers 

Graphics 

ADD: (Extra Code) 

Assemble 
Patch Insert 
Preset Patch Area 


BLOCK:(Large scale changes) 





AIMS, REQUIREMENTS AND DESIGN 


Fill 

Copy 

SET:(Setting up formats etc) 

Help 

Base 

Define label 
List labels 
Trace Format 
Block Set 

TRANSPUT: 

Redirect 

Save 

Load 

Delete 

Save Labels 

Load labels 

Function Keys: 

Redefinable (Soft) 
f2 Set Break 
f 3 
f 4 
f 5 

Fixed 

fl Start redefine 

f6 Cont (After a break,continue) 
f7 Repeat (Repeat the previous menu call) 





AIMS, REQUIREMENTS AND DESIGN 


Page 1-11 


f8 Tag 

f9 Untag 

flO End redefine 


*********************************************************** 





CHAPTER 2 


SPECIFICATION 


Specification of the user-visible menu functions 
and some lo^er level routines to simplify the 
descript ions. 


0. DATA STRUCTURES and main variables etc 
WI_KIND1 

= (SIZERBMOVERSFULLER3CLOSER3NAME) 

WI_KIND2 

= (SIZERBMOVER JFULLER® CLOSER*NAMEIUPARROW*D NARROW*VSLIDE) 


LAB _LENGTH =8 

onoff-iO’ J ="off " ronof f’ , jl 1 J ="on" 
int phys_handle 
int handle 

int xdesk,ydesk,wdeck,hdesk 
int msgbuff’jS’j 
char string"s80j 
char target^80’j 








SPECIFICATION 


Page 2-2 


char wild',80', 
char chbuf f ^80., 
char numbuff^,80’., 

int no_of_brkpts 
int first_brkpt 

int no of labels 
int first_label 

int no of_windows 
int max_no _windows 
int stack'j3'^ 

long lblock, hblock, lblockl, hblockl, lblock2, 
long bl_size 

long ltemp 
long total 

char * addr,addrl 


int top_handle 
int topwnum 

long hiliteaddr 
int hilite_on 

int tag 


hblock2 


int button 









SPECIFICATION 


Page 2-3 


int redef 
int newkey 

int no of_formats=l 
int pres_format=0 
int base 

int bytes_per_line 

int bwl (byte,word or long) 

int digits 

struct labelitem .char name^LAB_LENGTHV; long num;3 
struct labelitem labels’jSO’^; Kept in inc. numerical order 

struct brkitem 

.char name^LAB LENGTH'.,; long num; int count, on, saved_word; • 
(note that the labelitem structure could be used for the 
first two fields. ) 

struct brkitem brkpts^SO’,; Kept in inc. numerical order 

struct formatitem .char name^LAB^ENGTH’,,; long flags;* 
struct formatitem formats^lO’j 

format’jOX "Registers" , fffff fff ) 

(I proposed to used bit flags to show which of the 16 
working registers and other 68k registers were selected 
for that format. This may be unnecessarily niggardly on 
memory. I don't know how easy bit manipulation is in C. 
Note; The 68000 has 2 A7 registers. 

The 68010 has a vector base register and 
2 alternate function code registers. 



SPECIFICATION 


Page 2-4 


The 68020 has a cache control register and 
a cache address register.) 

struct windowitem 

.int xwork, ywork, hwork, wwork, xold, yold, hold, wold, 
on, type, han, fulled, bwl, tag; 
long loc;> 

('han 1 is short for handle. Note that not all the fields are 
used for all windows. E.g. 'bwl' shows whether a memory 
window is displaying byte, word or long values. ) 
struct w'iS 

struct fn key .int on,num fns, (*fns)()\5• 
struct fn keys’jlO', 


1. MAIN SUBROUTINES 
g_long_(string) 

Octal,decimal and hex numbers are accepted. 

Label inputs are accepted. 

A long is returned into ‘total’ and TRUE returned, 
else FALSE. 

•k k k kk k *********************************************** 

int find(target,wildmask,from,to,&addr) looks for the 
target array of values in the block from-to. 

If nothing is found it returns 0 else it returns 1 and 


the address. 







SPECIFICATION 


Page 2-5 


***************************************************** 

add_label (&temp_lab_item) 

if the labelname exists, delete old item, noof labels— 
check if already max no_of_labels. 

If so, print warning and return(O) 

Find correct insertion point for new label? 
make space for if; 
no_of_labels++;return(1) 

***************************************************** 
print_addr(x,y,addr) 

This prints the address, or the first label 
in the label list with this value, at 

position x,y on the screen. 
***************************************************** 

2. FUNCTIONS 

**** EX it**** 

0. (possibly) If no code or no labels have been saved then warn. 

1. Close all windows 

2. Blank out the menubar 

3. Close workstation etc. 

*****QQ***** 

0. Open dialogue box 

1. last exeaddr = g_long 

2. Call a 68k routine 

. Save regs 

. Set regs up as they were last seen/set by user 




SPECIFICATION 


Page 2-6 


. Save the interrupt mask 
. Reset the USP ? 

. Set up brkpts 
. Put PC onto stack 
. put last_exe_addr into PC 
. Restore PC 
. Restore brkpts 
. Restore mask 
. Restore regs 


3. End 

**SHOW BREAKS** 

0. Open a window type WIKIND2 

1. Using sprintf("%8s %1 %d %s", 

brkpts . name’ji’j, brkpts . num^i^, 
brkpts . count'ji'j, onoffVorkpts. onof f 'j) 
print the breakpoint information, 
starting with first brkpt 

2. Set breakflag. 

3. Await window/menu event, 1 return 1 or mouse button. 

If mouse pressed on name,value or count 

then allow change. Beware of name duplication. 
If mouse is double clicked on a line 

then remove the brkpt from the table, 

decrement no_of_brks and refresh window. 
Beware of removal of the only brkpt. 


***SET BREAK*** 




SPECIFICATION 


Page 2-7 


0. Open dialog box 

1. Await inputs 

temp = g_long; 
default count=l 

2. If temp is odd, 

give an alert and return to stage 1 
else last_brk=temp 

3. Add new brkpt to the table and reorder. 

Increment noofbrks 

4. End 

****TRACE**** 

0. Open dialog box 

v/ 

1. Await inputs 

trace_from=g_long (default trace from) 
trace_type= l(STEP) or 2(FAST) (Radio buttons) 
trace_depth=0(SHALLOW) or l(DEEP) 

2. Open an output window 
3 ??? 

*** CHECK CORRUPTION /WATERGATE *** 

0. Open a dialog box. 

1. Await inputs 

start=g_long 
finish=g_long 

2 . ? ? ? 


****FIND**** 






SPECIFICATION 


Page 2-8 


0. Open dialog box 

1. Await inputs 

start_block =g_long with default BLOCK; 

end_block =g_long with default BLOCK; 

target is an array of values 

This can be a string, introduced by a quotation mark 
or a set of hex bytes. 

When the 2nd digit of a 2 dig v it hex value is typed in, 
the cursor skips a space. 

Wild cards are allowed. 

Within a string, 1 ?' represents an unspecified 
character. 

When a 1 ?' is typed in a hex input the 2-byte cell is 
taken to represent an unspecified value. 

2. If output is to screen, open a full screen window. 

3. Using the format of 'inspect memory 1 

print the target bytes as they are 

found, together with some neighbouring bytes. 

/* NOTE: INCLUDE ABORT PROVISION */ 

***REPLACE*** 

0. Open dialog box 

1. Await variables 

(as in FIND, except for 'new' and 'confirm y/n') 

2. Check that len(target)==len(new). 

If not, then return to step 1 

3. temp=start_block 

while(find(target,wildmask,temp,end_block,&temp)) 












SPECIFICATION 


Page 2-9 


do . if(confirm) THEN REQUEST CONFIRMATION 

If all's ok, 

replace the instance of 'target' by 'new' 


3 


***CHECK SAME*** 

0. Open dialog box 

1. Await variables 

(default source is BLOCK, 
default dest start is the 

current highlighted line, if any) 

2. Open a window WI_KIND1 for output 

3. Check same. Print differences. 

4 .End 

/* INCLUDE ABORT PROVISION */ 
**** INSPECT **** 

0. Open a dialog box 

1. Await radiobutton ByteWordLong 

and from= g_long selection 

2. If Word or Long and odd addr 

go back to stage 1 with a warning 

3. Close window. 

4. Open a WI_KIND2 window 

5. Display addr,bytes/words/longs,chars 

6. Await window/menu and button events 

byte values and chars can be changed. 


* **DISASSEMBLE** * 






SPECIFICATION 


Page 2-10 


0. Open a dialog box. 

1. Await variables: > 

from=g_long default is highlighted line 
else last dis_addr 
line numbers(y/n) default NO 

highlight option(brkpts,stack ops,none) 

default is last choice or NONE 

2. If from is odd, return to stage 1 after a warning. 

3. Close box 

4. Open a WI KIND2 window with info line containing headings. 

5. Print 

^ line no .-2 \ labels hex addr source code hex 

dec 4 digits LABLENGTH 6 digits 20 chars 14 digits 
if hex addr = a brkpt value and option=brkpts or 

if command is RTS RTI JSR,etc and option= stack ops 
then Highlite the output line. 

The addresses to which jumps and branches 

go can be printed using 

'print_addr' in the source code field. 

*** Remember to decode the Axxx commands *** 

6. Await menu/window and mouse button events. 

Clicking on a hex byte will allow it to be edited 

resulting in a window refresh. 

Clicking on the addr will make it 
the current value of 'hilite'. 

Note that movement of the scroll bar 
should never allow display starting 


from an odd addr. 





















SPECIFICATION 


Page 2-12 


Register Display 


Registers 


DO 

01 

Oa 

ff 

57 

AO 

01 

33 

e5 

ff 

D1 

01 

Oa 

ff 

57 

A1 

01 

45 

e5 

ff 

D2 

01 

Oa 

ff 

57> 

A2 

01 

65 

f4 

ff 

D3 

01 

Oa 

ff 

57 

A3 

09 

77 

b6 

ff 

D4 

01 

3d 

ff 

57 

A4 

08 

66 

b4 

ff 

D5 

01 

6d 

ff 

57 

A5 

88 

77 

c6 

ff 

D6 

01 

7a 

ff 

58 

A6 

99 

57 

fl 

ff 

D7 

01 

7d 

ff 

59 

SA7 






uA7 

88 

33 

d9 

ff 


lode A6 


bin 


Flags 

1 

0 

5 

1 

0 

1 

1 

0 


Trace 


Supervisor 

Interrupt. 

X 

N 


Z 

V 

c: n 


looi iooi oioi oiii mi oooi 1111 1111 















SPECIFICATION 


Page 2-13 


***Preset Patch Area*** 

0. Open dialog box. 

1. Await variables 

patch_start = g_long() 
patch_end = g_long() 

2. If the defined block overlaps ROM, STID or Block 

then issue warning. 

3. End 


***ADD*** 

(This facility allows the writing of simple 68k code ) 
(which will go into the next piece of free space in ) 
(the patch area. I'm leaving this for those who ) 

(programmed similar things before ) 

***PATCH AT*** 

(This call is used to show where the patch is to be ) 
(called from the main sequence. } 


****FILL**** 

0. Open dialog box 

1. Await variables 

(as in 'find' except no wilds in the input string ) 

2. Fill 
3 . End 


* * *C OPY* * * 


0. Open dialog box 




SPECIFICATION 


Page 2-14 


i 


1. Await variables 

(default block to be copied is BLOCK 
default deststart is highlighted line, if any) 

2. Do intelligent copy 
3 . End 


***BLOCK SET*** 

0. Open dialog box 

1. Await variables 

2. Check that start_block \ end_block. If not, go to stage 1. 

3. Reassign start block, end block 

4. End 

*****BASE***** 

0. Open dialog box with radio buttons. 

1. Await 'ok' 

2. Reassign 'base' to 2,8,10 or 16 

3. End 

**DEFINE LABEL** 

0. Open dialog box. 

1. Await a string 'labelname' and a value 

(which could, I suppose, be a label) 

2. Call add label. 

3. Close dialog box 

*****LIST LABELS***** 

0. Open a window WI_KIND2 

1. Print the labels in numerical order using 






SPECIFICATION 


Page 2-15 


/\ 

sprintf("%3s % .default base* ", 

labels . name^i’j, labels . num’jil ) 
starting from first_label 

2. Set lab_flag. 

3. Await window/menu operations and mouse button. 

If mouse pressed on name or value 

then allow change. Call addlabel. 

If mouse double clicked on a line, 
remove label from table, 
reorder, 
no of labels— 

Beware if the only label is removed 
*** So how can a line be hilited? *** 

*** COMMAND LINE *** 

???Maybe this is unnecessary??? 

*** TRACE FORMAT *** 

0. Display the names of trace formats . 

Highlight the present one. 

1. Await selection. 

2. If a new name, check to see that max not exceeded; 

add name to formats.names with flags set to ffffffff 
format++;pres_format=selection 

3. Close display 

4. Display, fulLscreen, the Registers of selection with 
non-selected items blocked out. Print the formatname. 

5. Allow clicking on Regs to de/select them. 






SPECIFICATION 


Page 2-16 


*** TABULATE *** 

0. Open Dialog box 

1. Await variables 

Yes/No 

2. If Yes then all subsequent inspect and disassemble output 
will be arranged so that no information is lost off the 
edge. In inspect() this is acheived by adjusting 
bytes_per_line. 


* * *LOAD LABELS*** 

0. Open a window showing available .lab files using fsel_input 

1. Await filename selection. 

2. Load the file into memory represented by 'labels'. 

3. Reset first label to zero. 

4. Count thru the labels until 

there is a label field full of OxFF bytes 
(denoting end of labels) and reset nooflabs. 

5. If there's an open label window 

then activate it and 'redraw' it. 

5. Close window. 

**** SAVE LABELS **** 

0. Open a window showing available .lab files. 

1. Await filename selection. 

2. If chosen filename is already being used, 

then erase the file. 

3. Save the file from memory represented by 'labels'. 














SPECIFICATION 


r 


Page 2-17 


4. Close window. 


* * * *load** * * 


NOTE: If you have a problem with the restoration of the 

screen after an fsel() call then consult AUG '86 BYTE, 
Atari notes. 

0. Open a WI_KIND2 window to show all relevant filenames 
using fsel_input. 

1. Await selection of a file and load_addr= g_long 

2. Check loadaddr (and length of file ?!) to ensure that 
sensitive memory (eg stid space) is not overwritten. 

3. Load. 

4. Update block start,block end 

5. Close window. 

*** DELETE *** 

0. Open a window using fsel_input to show all files on the 
default disc. 

1. Await file selection. 

2. Ask for confirmation ( The delete,load and save screens are 
visually similar) 

3. Delete the chosen file. 

4. Close window. 

**** SAVE **** 

0. Open a WI_KIND2 window to show .hex files 

1. Await selection, start= g long (default block start) 




SPECIFICATION 


Page 2-18 


end = g_long (default block_end ) 

?! exe = g_long 

2. If not a new filename,ask confirmation,then erase 
old program. 

3. Save new program. 

4. Close window. 

**** REDIRECT **** 

0. Open a dialog box. 

1. Await 'printer' or 'screen' radio button selection. 

2. Exit. 

**** GRAPHICS **** 

0. Open a dialog box. 

1. Await variables. 

Start Address 
Width (pixels) 

Height (pixels) 

2. Open a WI KIND2 window to show how the block of memory 
looks in high resolution graphics. 











CHAPTER 3 


WINDOWS 

WINDOW MANAGEMENT 

The info about the windows is kept in a struct called w. 

There is a (sort of)stack containing the struct indices of 
the windows, ordered by depth, so stack^O', contains the struct 
index of the top window. 

WINDOW CREATING 

Each option requiring a window needs its own routine to 
create a window, entitle it etc. 

WINDOW OPENING 

One routine can open all windows as long as an adequate 
window positioning stategy can be included in it. Minimal 
overlap (also known as tiling) has the advantage from no 
information or corners are eclipsed, but overlapping is often 
more convenient for the user. The present ’strategy’ is that 
all windows are half screen size, except for label windows which 
are set to minimum size ,and they appear on alternate sides of 
the screen. The stack routine ’newwind’ should be called. 




WINDOWS 


Page 3-2 


CLEAR WINDOW 

Clears the window to white. 

MOVE/CHANGE SIZE OF WINDOW 
Standard. See any GEM book 

TOPPED/NEWTOP 

Standard. The stack routine 'topper' should be called. 

FULLED 


Standard. 


REDRAW AN AREA 


See program. 


CLOSE TOP WINDOW 

Standard. The stack routine 'closetopwindow' should be 
called. 


THE STACK 

Stack management is performed by 3 routines:- 
newwind:- Puts the struct index of a newly opened window onto 
the top of the stack. 

topper:- Puts an existing window's struct index on top of the 

V 

stack. 


closetopwindow:- Removes the top of the stack. 





CHAPTER 4 


CODING AND TESTING 


I inherited from the program development package a program 
which included routines for moving and changing the size of a 
single window. 

First I added a menu and extended the program to handle 4 
windows. 

Then, being more aware of GEM capabilities and having 
decided what the user should expect from the system I wrote a 
specifications document describing the user-visible routines. 

As I programmed using GEM, the specification changed. The 
structure only 'emerged 1 as the program grew. 

I began designing the program from the top and coding from 
the bottom, trying to keep the scope of variables as restricted 
as possible and trying to emphasise modularity though it must be 
remembered that adding a new facility requires additions to be 
made at various places in the program. The necessary bottom 
level functions emerged during the design phase and were coded 
first as stubs then as restricted versions, adequate to test the 
higher level functions. 




CODING AND TESTING 


Page 4-2 


The decision as to which functions to code was made 
according to these criteria: 

1. The need to check speed/feasibility of functions. 

2. The desire to use a wide spread of C facilities. 

3. The desirability of producing an integrated suite of 
functions. 

Some functions are completely coded, others are unstarted. To 
cater for the different sort of documentation that this range of 
completion requires I have chosen a pseudocode representation, 
allowing flexibility of depth of detail. 


As an example of my testing style let's suppose I discover 
during a run that the 'find* facility doesn't work. Now there 
is one level above ( the command,menu, function key handling ) 
and 2 levels below 'find' ('findit(...)' and 'glong()' are just 
below and ’glong()' calls on 'val() ). 

'val()' is simple and short, 'glongO' is a simplified and 
up to now unfailing version of the final routine, it only being 
able to handle labels and hex numbers and the top level is 
unlikely to be the culprit so the error is likely to be in the 
'find' routine itself, where most of the code is. Having 
localised the source of the error as far as possible I would add 
some print statements to help confirm or deny a hypothesis. The 
output of these can often mess up the GEM display so they should 







CODING AND TESTING 


Page 4-3 


be used sparingly. 

If all this fails I would put the offending code 
little program of its own and work on it further. 


into a 















CHAPTER 5 


PROGRAM NOTES 

PROGRAM NOTES 

Here I have tried to give a general overview of the program 
then some helpful, informal notes to those who will, I trust, 
continue the project. This part of the write-up, even moreso 
than the other parts, is written for my successors to the 
project. It is to be read beside an Atari loaded with STID and 
a list- ing of the program. It should help you find your way 
about the program. At the end is a list of bugs and places 
where work is needed. 

Most of the work is done in multi() which looks for events 
using a switch. The consequences of these events depend on the 
type of contents of the active window, necessitating other 
switches, so the final shape of multi() is almost grid-like. 
Adding a new facility often means adding to many parts of the 
program. 

Declarations:- 

Obj ects:- 

Dialog boxes: find,replace,inspect,fill,copy,same 


PROGRAM NOTES 


Page 5 


lab 

General, low-level graphic routines:- 
hidemouse 
show_mouse 
open_vwork 
set_clip 
do redraw 

open_owindow 
open_ewindow 
open_mwindow 
open_lwindow 

openw 
close _wi 
els 

dialbox 


main 

multi:- (See later) 

Highlevel routines:- 
draw_ellipse 
showmem 
showlabs 
find 


replace 






PROGRAM NOTES 


Page 5-3 


inspect 

fill 

copy 

same 

def_lab 

loadhex 

Window Stack commands:- 
close_top_window 
topper 
newwind 

General, lowlevel nongraphics routines 
invcolor 
locator 
value 
wildstr 
wildbyte 
findit 
g_long 

block2 ^ 

find_vacant 

add_labei 

chop 

cursor 

count_labs 

num^alert 

wind alert 


lab alert 







PROGRAM NOTES 


Page 5-4 


sh lab alert 


mul ti: - 

mn 

redraw 

arrowed 

vslid 

newtop,topped 
sized,moved 
fulled 
closed 

tag check 

last command check 
click in window check 
check function keys 


Some "informal" program notes, put here because they need 
only be read once and would clutter up the program. 

** Dialog boxes: 

Need some tidying up. The input lengths are presently 
rather arbitrary. Hex inputs for search/replace options are not 
presently supported. 























program notes 


Page 5-5 


Not all the suggested defaults for inputs have 
implemented. 

It's a pity that GEM sets the cursor to the end of 
string in an editable field. 

All labels need to be distinguished from numbers and si 
by a preliminary quoteVmark. A final quote mark is optional 

** doredraw: 

Beware. This doesn't work correctly. 


** 

open owindow 

1 




* * 

open ewindow 

1 

I decided to 

keep the 

window 

* * 

open mwindow 

1 

parts of the 

routines 

separate 

** 

open lwindow 

I! 




** 

openw: 






All window opening passes thru here so this 
is where an algorithm to place the windows 
to maximum advantage should go. So far only 
label windows are treated so that they are 
opened at the minimum size that hides no 
information. 


** 


dialbox: 


** 


draw ellipse: 


Only kept in for test purposes. 


been 


the 


ring 


* * 


showlabs:0K 







PROGRAM NOTES 


Page 5-6 


** main: 

All system initialisation is left to appl_init, 
which should close all windows etc. 

** find: 

This can't handle output that overflows the window. Two 
things can be done to solve the problem; overwrite old output 
lines or save the locations of the targets in readiness for 
scrolling the window. There needs to be an Abort facility 
rather than just a Continue one after a line of output has been 
printed. 

** replace: 

Presently only works for strings. 

Perhaps a check should be made to see if 
the memory has been successfully updated. 

** inspect:0K. See Showmem. 


fill: 

Presently only works for strings. 

Perhaps a check should be made to see if 
the memory has been successfully updated. 

copy: 

Intelligent copy. 

Perhaps a check should be made to see if 
the memory has been successfully updated. 









PROGRAM NOTES 


Page 5-7 


This can't handle output that overflows the 
window. Two things can be done; overwrite 
old output lines or save the locations of 
the targets in readiness for scrolling the 
window. 

There needs to be an Abort facility rather 
than just a Continue one after a line of 
output has been printed. 

** def_lab: 

Presently allows definitions of strings that 
begin with a digit. 

** loadhex: Only the fsel_input call is here at the moment. 

Window S tack command s:- 
close_top_window 
topper 
new wind 

General, lowlevel nongraphics routines 
inv_color 

** locator: 

The screen editor for memory dump. The 
code here could be sharpened up perhaps, 
but it is the part of the program most 
nearing completion. Two possible, easy 
improvements are: 

The ability to move the cursor between hex 










PROGRAM NOTES 


Page 5-8 


** 


and ascii 

The ability to move the cursor to the rightmost 
visible hex digit. Presently the program only 
allows you to move into a block of hex digits 
if the whole block is visible. 

No messages are returned if the user tries to. 
change ROM, an I/O port or non existant memory. 
Perhaps a check should be made to see if the 
memory has been successfully updated. 

The cursor doesn't loop around at the end of a 
line. This is easily implementable. The window 
doesn't scroll up when an attempt is made to 
move the cursor up from the top line. Similarly 
for the downward direction. 


value 
wildstr 
wildbyte 
findit 
glong: 

This presently only accepts short labels and 
hex numbers. 


block2 
findvacant 
add label: 

Not tried out. 

chop 


cursor 







PROGRAM NOTES 


Page 5-9 


count_labs 
num alert 
windalert 
labalert 
sh lab alert 


mult i: - 
** mn: 

None of the menu items are disabled during use yet. 
These are some possible events where this needs to 
be added to the program. 

'Assemble' should be disabled until a patch area 
has been set. 

'Save labels' should be disabled until at least one 
label exists. 

do_redraw 

arrowed 

vslid 

newtop,topped 
sized,moved 
fulled 
closed 

** tag check: 

The original intention was this: 




PROGRAM NOTES 


Page 5-10 


If F8 was pressed then the active window (if there was one, 
and if it was of type MEMORY or DISASSEMBLE) would be tagged to 
the next window of type MEMORY or DISASSEMBLE activated. 
Henceforth, whenever a tagged window is scrolled by clicking on 
an arrow, the other tagged windows scroll too. I haven't 
decided what would be the best thing to do if the scroll bar of 
a tagged window was operated; it may be best to leave the other 
tagged windows unaffected. 

At present, if the F8 button is pressed then all existant 
memory windows are tagged together. 

last command check 

** click in window check: 

This has to look out for the various 
intentions of the user: highlighting, 
changing memory etc 

** check function keys: 

There are at present no messages 
displayed during function key 
redefinition. The original intention 
was to do this: 

Have the buttons represented on screen with their 
abbreviated functions. 








PROGRAM NOTES 


Page 5-11 


If FI were activated, show alert box "please redefine 
function key 2,3...or & or Cancel" and change the button text 
from "REDEF" to "ENDDEF". 

Disable menu commands until another function key is 
pressed. (not strictly necessary but advisable). 

Show the functions presently under the chosen key. 
Clicking on a function would remove it from the list, clicking 
on a menu item would add the revelant command to the list. 

FI re-activated would signal the end of key redefinition. 

I have only implemented this in skeletal form. To define 
F2, say, so that pressing it displays the labels, the 
breakpoints and then the dialog box for inspecting memory, this 
is what must presently be done. 

Press FI 

Later, but not necessarily immediately after, press F2. 

Click on 'show labels', 'show breakpoints' then 'look'. 

Press F10 (note: not FI because that would have meant 
checking that the button had been released before being pressed 
to signify another redefinition. Using FI is neater from the 
users point of view.) 


BUG LIST 

1.Sliders crash. Arrows don't. I haven't detected clicking on 
the scroll bar that isn't on the slider. 











PROGRAM NOTES 


Page 5-12 


2.The double 
mysterious. 

3 .Having hit 
instead of 
tutor knows 


showing of the contents of the first window 

return after editing memory another cursor 
the expected pointer. This is a problem 
the answer to. 


remains 

appears 
that my 










CHAPTER 6 


CRITICISMS:- 


I should have found more 'rival' programs. I could only 
find brief write-ups of them. 

The memory display is too slow. This may be because the 
number of bytes displayed per line is not fixed, so the forma: 
of a line is not fixed, being built up unit by unit within a 
loop. Scrolling of windows could be accelerated by blitting but 
for the fact that a tagged window may be partly obscured by 
another. The top window could always be blit-scrolled though. 

The design shouldn't need radical changing though some 
routines may need an extra parameter added to them to make them 
more general. The design isn't complete, neither is the 
program. Of course, the program couldn't be finished in the 
time but the design could have been. I had to decide what the 
purpose of the programming aspect of the project was. I could 
merely have used programs to check the feasibility of design 
ideas. I decided to use programming as a source of ideas as 
well as a testbed and a way to broaden my program experience. 
To have completed the design having done little programming in 
GEM and having done no 68k assembler programming let alone 








CRITICISMS: - 


Page 6-2 


debugging would have been at least pretentious. 

The suggestion of my putting shells and comments in the 
program to show how the final program would work did not receive 
encouragement from my tutor. 

The choices that I have made for the defaults may not be 
optimum. In the program I have never used as a default 
parameter the parameter used on the previous call of that 
facility. The best way to make such choices is by experience. 

Labels need a quotation mark before them to distinguish 
them from numbers, but when there is no risk of confusion (e.g. 
when defining a label) , the quotation mark is not required. 
This is an inconsistancy. 

The window refreshing problem really should have been 
sorted out earlier. I lived with this problem, being unable to 
solve it. This illustrates two other points: 

1. At times I lacked the imagination to come up with hypotheses 
to base diagnostic investigations on. If I followed the 
book and it didn't work I didn't do any explorations. I 
asked other people and if that got nowhere I just left the 
problem. 

2. I acted as if I were part of a team effort even tho' I knew 
the rest of the team would only start, if at all, after I 
had finished. Some of the evident lack of thoroughness 
results from my suggesting something and not having the 
self- confidence to be definitive without feedback from 





CRITICISMS 


Page 6-3 


team-members-to-be. 















CHAPTER 7 


REFERENCES ETC 

*** Present 68k Monitors/ Debuggers *** 1. TUTOR (Described in 
"The Motorola MC68000" by Jean Bacon. It is the monitor that 
comes free with the 68k development board) 

A non-graphic program. The only notable feature is that 
the Memory Display option asks whether you want a hex or 68k 
output. 

2. SID (Described in the Atari documentation) 

Occupies the top 20k of TPA. It allows labels, (preceded 
by 1 .') and is non-graphic. 

The facilities are a subset of those suggested for STID 
save for a "load and run" option and 2 facilities whose 
descriptions I supply here. 

" The I command prepares a file control block (FCB) and command 
tail buffer in the base page of the last file loaded with the E 
? ji.e. "load and go" j command. The form is as follows: 


Icommandtai1 










REFERENCES ETC 


Page 7-2 


where commandtail is the character string which usually contains 
one or more filenames. The first filename is passed into the 
default File Control Block at 005Ch. The optional second 
filename, if specified, is passed into the second default File 
Command Block beginning at 0033h. The characters in the command 
tail are also copied to the default command buffer at 0080h. 
The length of the command tail is stored at 0080h followed by 
the character string terminated with a binary zero." 

"V This causes... the starting address and length of each of 
the segments contained in the file, the base pointer, and the 
intial stack pointer to be displayed. " 

The documentation also has a list of error messages which 
may be useful checklist for those writing the file handling part 
of the program. 


- References, Atari 

Technical Data, current debuggers and notes about the utility 
programs 

*** PERIODICAL REFERENCES *** 

l."Dbx Tool- A Window based symbolic debugger for the Sun 
Workstation" in Software Practise and Experience V16(7) p.653 


J uly 1 86 












REFERENCES ETC 


Page 7-3 


This is based on UNIX 4.2 BSD dbx and can handle C, Pascal, 
Fortran and assembler. The article concentrates on the user 
interface, to which much time was devoted. These desirables 
emerged from a study:- 

NEEDS: Scrolling window for source text. 

Mouse driven 

Graphical display of breakpoints, execution locus. 

Dynamic values of variables 

EXTRAS: Should source window be part of debugger? 

Should all commands be mouse-constructable? 

IIow should variables be displayed? 

How should the command dialog ensue? 

They used 5 screen width, variable height windows: 

STATUS (giving filename,range of line numbers), 

SOURCE 

BUTTONS (rather than popdown menus, because a few commands 
were found to be used most of the time) 

COMMAND (button commands echoed) 

DISPLAY (vaiable values etc displayed) 

The button window was scrollable and extra buttons could be 
added. The 6 most common functions were found to be:- PRINT, 
STEP/NEXT, STOP AT(Setting a breakpoint), CONTINUE, STOP IN 
(Setting a breakpoint at the start of the procedure that the 
cursor is in), REDO. 





REFERENCES ETC 


Page 7-4 


The user selects an option by clicking on a button then 
provides the parameters by pointing to the source code. 

The article provides an annotated, illustrated walkthru of a 
short session. 

2 similar programs are:- BugBane in the Cedar Enviroment at 
Xerox PARC ( details available in a research paper). Joff, a 
debugger for the BLIT terminal at ATT, Bell ( details in Tech. 
Journal 63(8) ) 


2. "Designing the Star User Interface" (V7 No.4 BYTE Apr ’73) 

The mouse is considered to be better than a light pen or tablet 

because 

1. It provides as easy and quick a way of pointing as a finger. 

2. It stays where it is if left untouched. 

3. It has buttons. 

The main principles pursued in designing the interface were: 

1. Familiar user's conceptual model. 

2. Seeing and Pointing is preferable to Remembering and Typing. 


3. 


WYSIWYG. 





REFERENCES ETC 


Page 7-5 


4. Universal commands. 

5. Consistency. 

6. Simplicity. 

7. Modeless Interaction. 
3. User tailorability. 


Few would argue with this list, but the ruthless 
implementation of these aims is not easily done. In addition 
the system should minimize the need to learn or memorize and 
should give feedback and have a symmetrical command structure. 


3. "A tour through Cedar" (IEEE software 1 (’84) ) by Teitelman 

Issues addressed here are:- 
Default window placings 

i) Tiling the screen allows maximum readability. 

ii) Overlapping the windows gives the user flexibility and 
access to more onscreen information but can lead to "lost" 
underwindows, wasted screen space or covered window corners. 

The importance of command interface uniformity. 


4. "A fundemental approach to debugging" by Tratner in Software 
Practise and Experience V9, p.97 '79 

















REFERENCES ETC 


Page 7-6 


During debugging one should:- Reduce uncertainty, Record 
history, Exert controls, Examine/Modify values. 


5. "ADDS: A dialog development system for ADA" by A.Burns and 
J.Robinson. in J. of Man-Machine Studies V24 p.153 '86 

The authors suggest that:- Help should be sensitive to context 
and user-experience. 

Backtracking, allowing the reversal of past actions, would be 
useful. 

Interfaces should be adaptable and multi-level. Experts' needs 
(Minimal information Redundancy, Minimal keypresses) may not be 
the casual users' needs. 


6. "Piet: An Interactive Graphical Programming enviroment" by 
E.P. Glinert and S.L.Tanimoto in IEEE Computer '84 

What is needed is a representation that resembles the users' 
thought processes. The emphasis should be on accuracy, feedback 
and directness so that the user feels that s/he is "doing" 
rather than "telling". 

2 unobtainable PhD theses are mentioned, both of which describe 
programs written in Smalltalk and using Icons. 












REFERENCES ETC 


Page 7-7 


*** NOTES ON THE ATARI *** 


* BIOS 1 

s-! 

> TOS « 

a- _b 

S VDI AES ■ 

a-a 

•user programs 
a a 


The TOS consists of GSMDOS from Digital Research. 

XBIOS routines are called by putting the function number 
and parameters on the stack then tripping a TRAP 14. Some 
useful calls are: 

#2 returns base of physical screen RAM 
#20 does a screen dump 

GEMDOS routines are initiated by a TRAP 1. Some example 
call are: 

$20 get into supervisor mode 
$30 get version number 

BIOS routines are initiated by TRAP 13 

An assembler Axxx call creates a trap, giving 14 fast,primitive 
graphics routines. 












REFERENCES ETC 


Page 7-8 


The ROM lies between FCOOOO and FEFFFF. 


A few useful locations are:- 
00 SP boot up value 
04 PC boot up value 
$42e phystop (=RAM+1) 

$434 memtop (usually (42e)-32k 

$44e base of screen memory (usually $f8000 on the 1040ST. Notice 

that the uppermost 768 bytes 
(32k-32000) are free to 
squirrel little 68k routines in.) 

To access the system variables you must be in Supervisory mode, 


* * * BOOKS * * * 

Programmer's guide to AES and VDI- D.R. 

The Anatomy of the Atari ST - 

Geritis, Englisch and Bruckman (1st Publishing) 
GEM on the Atari - 

Szczepanowski and Gunther (1st Publishing) 
Tricks and tips of the Atari ST (1st Publishing) 

The Atari ST explored - 

J.Braga (Kuma Computers) 

The C toolbox - 

W.J. Hunt (Addison-Welsey) 

C:A Reference Manual - 

S.Harbison and G.Steele Jr (Prentice-Hall) 










REFERENCES ETC 


Page 7-9 


The complete guide to writing Software User Manuals - 
3.M.McGehee. 


*** UTILITIES *** 

MicroEMACS editor: Non GEM. Has most of the required 
facilities tho' a TO LINE ? would have helped and some 
facilities (eg Merge) aren't explicitly mentioned. 

Digital Research C compiler: A 3 pass compiler which produces 
200k intermediate files from 50k programs. It needs far fewer 
CAST's than Lattice C for example. 

Atari Resource Construction 3et:We used version 1 which had no 
documentation and was crashable. I only used it when I was 
confident that it wouldn't let me down. 













1 


Desk 


1 


4 jr:fe 


Odd El 


labels 


label JL— 
Iabel2- 
1 abe13- 
label 4— 
labels-- 
labels— 


■- 0 FFF 30 

.OFFF 50 

-BFFF 70 

- 0 FFF 80 

. 0 FFF 90 

—OFFFflO 



Transput 


sni-SIIB! 


^ ' ! •' II : 


main n 


BFFE58_BBBB.QOQB.E 


i | p mm« ..••(iiinww 


ffi |i||||||||||||||j ||jj||||lliill!|llill!|illjjll lli ||||||jlH oc k n enoryj 

TTra3aRn_„ u 0O0O , 0000.0000,0000_ 

0FFE88_0000,0000.0000.0000,_ 

0FFE90—.0000.0000.0000.0000 .- 

ftgPPQQ riLfton nr.rrn r*r>nin ftftfin 


Find 


f ron 


FFE 


tos 


‘FF 


strings- k? 6 | 

U- 


; ok j 


cancel 


BFF’EE 0 _ZBOT 0 T 0 OT 0 TW 0 ¥ 70 F 0 Fr 

OFF 
0 F I 
OFF 


OFF 

JUE 


EES._6018.3078.2E20.396C.k86x. 01 

EF0..003B . 6F39.3830 ■ 0000 j 008;.__ 

EF8_0000.0000.0000,0000.-__ 

F0O_0000.0000.0000.0000._ 

F08--00B0 .0000.0000.0000___ 

Ei_a_rmnn nnnnn nnn nnnn _ _ 













































































CHAPTER 8 


HANDBOOK 


This program is an interactive debugger for 68000 code on 
the Atari STF1040. 

It uses Trace and illegal instruction exceptions, so beware 
if your program uses them. It saves the state of the interrupt 
mask prior to running a program and restores it afterwards. 

Windows are extensively used. For instructions on their 
operation see the Atari manual. 

"Clicking" unless otherwise stated means pressing the left 
button of the mouse. 

The program is designed so that key/button pressing is 
minimised. Default values for input parameters are provided 
wherever possible. Many operations work within a default block 
of code that can be reset by the 'block set' command.lt is 
initialised to the whole memory size, then set to the size of a 


loaded hex file. 








HANDBOOK 


P ag e 3-2 


Wherever reasonable, labels and addresses can be clicked 
on, which will cause them to change to inverse video. 
Henceforth this value will be used as the default address for 
facilities. The line becomes de-highlighted by i) reclicking on 
it ii) closing the window iii) highlighting another line. If 
neither of these above possibilities are relevant then the value 
of the parameter used in the previous call is the default value. 

The default base is hex but binary,octal and decimal 
numbers are supported. E.g. %1101 ,015, ,13, $d all represent 
the same number. 

Labels can substitute for values. They must appear in 
quotes (the final quotation marks are optional) and can be up to 
8 characters long. 

The function keys are used, but can also be activated using 
the mouse. Keys f0-f7 can be redefined to perform one or more 
of the menu functions as follows 

1. Hit/click REDEFINE button. The button will change to read 
ENDDEFINE. 

2. Hit/click the button to be redefined. A box showing the 
curent function of the button appears. 

3. Clicking on a menu item will cause this to be added to the 
functions. Clicking on a function in the box removes it. 

4. Repeat step 3 until redefinition is complete then hit/click 
the ENDDEFINE key. 











HANDBOOK 


Page 8-3 


Wherever it makes sense, windows can be "tagged" so that 
they scroll together. This is done as follows 

i) Activate one window. 

ii) Hit/click the TAG button. (F8) 

iii) Activate another window. 

More than 2 windows can be so tagged. Hit/click UNTAG or close 
a window to cease tagging. 

If ever you want to repeat the previous command then press F7. 

LOOK 

This displays memory in hex and ascii form, and allows 
modifications to be carried out. 

The window can be manipulated as usual. To change the 
contents of memory, click on the character to be changed. The 
pointer will dis- appear, to be replaced by a cursor which can 
be moved using the arrow keys. New values can be typed in. The 
pointer can be recalled by pressing RETURN. 

If the displayed memory is wholly within the block 
then the vertical slide bar size and position is relative to the 
block and the window is headed 'block memory' else the scroll 
bar is shown relative to main memory. 


FIND 

All occurrences of the target string within the 
specified block are reported. Wild characters in the target 
string are represented by a '?'. 

REPLACE 


All occurrences of the target string within the 














HANDBOOK 


Page 8-4 


specified block are replaced by its substitute. Wild characters 
in the target string are represented by a 

FILL 

The specified block of memory is filled with as many 
consecutive copies of the string as possible, the remainder 
being filled by a part of the string. 

COPY 

One block of code is copied onto another. Only 3 of 
the 4 block enders need to be legal? the other is deduced. 

SAME? 

One block of code is compared with another.Only 3 of 
the 4 block enders need to be legal? the other is deduced. Any 
differences are reported. 

DEFINE LABEL 

A label plus its value is defined. 

SHOW LABEL 

The current labels are displayed. 



















































“7'! 


i on9 idc; > WL.,>j ; ■ * nar^nara Le, lot:- i oc^rjon cm- nrsr. mem ,i,ocai: ion tn 

wind aw ■«/ 

« l ' r u. c L 3. a I: o j. t e rn 

V char 1 ab m, C LftfiM. PNOT-t J 5 J, onq va.l up ; > \ a n o ] s IMA XL AES 3 5 


s I", r l 1 c t 1 a b _ i. t e 1 n i: e rn p 3 . a b q 


-d r-- 4 : ic.t fn^kov 

< trft. iich i vff, num_f ; nt. s p t _ 1 ; o fn f Vif*. DHAXFN® II 5 > t n__beys [ 10 II 3 
/a i-or- the 'FiiTici.: Xori h:dyts e:o wyr-k* each f a. c: i 3 i t y in the menu, must return 
an i nteaer •*/ 

i nt op ©n_&?w i nclow \ | , i ntappet C 1 ,, upon. 1 w;I ndpw O J' i nd C) , rep 1 acre ( ) „ F :i, 1 3 . < ) ,, 

copy ( ) , came ( ) , cics l r __] ab ( > ? IciD Mi ex ( ) 5 


fsi_i. inpattip " A : /««-„ KSC 11 5 . 

f s _ j i n s 0 i il 1 ■- 11 S T I i >.M t ,W W* 1iS ('.' ! 1 ^ 
#'■0 oh :i t * 


hiii h.e : 

hi 3 . i t.c_ on—F ; 


b rk _ f 1 a q -- p A L A F 5 
] ah^F '.I tffl q^FhhL SF - 
i t __ F 1 a u| ’ ■ f- A L AF ; 


1 b l rjf:k-o><*f f Ohio hh 3 ac 3 : --Ox-Ff F*0 ? 1 b j. oc h: j , hh 1 ock 1 n ] b 1 pc k2 , rib 1 ookli, bt _s.i zef 
] ow,_l i mi h ^ h i <3 h ] im i t , 1 enqth, b y’i eja_ v i, s i b le ; 
but ton: 

*■ a ,d ci r 1 * 

* u cl d r | 

bytp^ jjer _ I i nr- : 8 = / * dof aci 31 tor mesmory d i sp I ay <•/ 

pn yaha/n » /b u*;qfcl in look* tear and cursor */ 

>< c ha r i y eh "< r*, y h £.• # y-ho h \ / m x rj y q o o r ds for rnern o r y changing ■*/ 


Uag = :: C ( ; / «■ I: h r n u rn □ e r of t. a g q a cl window is ^ / 

rtsde - u, riewkr'V, Fn i t ; /•# for F:oy redef inition */ 

q 1 ^hchar n q 1 wehar,g 1 whan,ql hbax; /* system silis */ 

mask --'225 ■ 

phys^hand II <= ; phy '* i, coa. 1 workstation hand ] e */ 

N 4V id i i?; / 4 v i r t li* 3 . vjor I: s t a l: i on handle * / 


w ind‘Count c 0 ; 
rn-ix rui rm^j i nds-’nq 
tup kiand le ? 
t.npwnurn | 
stack F 3 j ■; 


><de«-lk 4 ydesk , 
target F.8Q1 i 
s t r i nq C F C> d ; 
wiidclbd| 
chbuf f L8 C IIII ^ 
rembuff r.'SO II : 


/ * l lpo. vi-ng on*-? 4 ? rp*o For output etc */ 

/-f' l*j F•;rI:acl| 1 * 0 ] i . ban s h-and 3 e o f I:op window */ 
/*• ::: sl;ac 3 :F 0 H, r -;t.rue- index of t.op window *,/ 
/1 no 1 / & i.. r us! % t a c!: „ ft. hold s l: 1 1 e depth-- o r d e r 
of the windows,' */ 

he leek , Lwde ck j 


insqbu.f f CStlij 

/ # 

!■ e y c a d e q 

nu.rn_cl ic ko; 

/ « 

mx f rny : 

/ * 

c I-L t dovjn ; 

/ * 

ret. 5 

/ * 

fata 1 q 


i. ? J ! k 1 

/* 

ch 5 


no_of„ 1 abss 7 ? 

/* 

f instil a be 2 L «0 

q 

p i c 1 : evd_ 1 b 01 q 




w {44 

y. . j 







>v v fc 



kycjode ref.nr-ned by ev <2 n t- keyboard -f/ 


ingiyn 

I :;i u t t d s 


and y potn *-/ 

k t at e t eu> ted f or , UP/DQWN «■ / 
311 j. r n v a r i a b l e * / 


to be used with care *t/ 


/* For t es.t purper-ies 'I’ve initial], sxcc.l 


labels */ 


1 ■ ■ ■ "'mwmmvm m 

.u-.p. ■$&&%"■?■■■■■;. .: r,v 














t urs.-'.-c-.'Sr- 
















] ung 

menu., tree, 

1 rvt 

tempC4 1 5 

i. n t 

con t r ] F .12 ] ?, 

] nt 

i nt 111 1 1283 5 

i nt 

pt.i5inr.1283 5 

:! nt 

intout r 122 I 

i n !- 

p t sou hC \7B1 


i] 

ynt 

p x yarrayf 

i 0 3 1 

4 

e h a r 

t; .i tl.C: - 

"Tind"- 


c'loar 

t i 12 r ;i a 

" Rep “L ac>:# “ ; 

m 

c h a r 

t i t .3 11 - 

,! Inspect ,! 5 

,\ 

ch*r 

t it 4 C 3 = 

" F i ] 1 Bloch 

R 

|l «• 

c: h a r 

t i 1:5 C 1 « 

"Copy Bloc:! 

r h <0 r 

t :i t6 r J =* 

" Sarne 7 " ; 


,v'h a r 

t i, b .7 il ! ■* 

11 !De Fin© Vab 

i • 

c hi a r 

te_toC 3 « 

11 -bo s - 

* 

c:har 

to_ Fr C ] ■•;; 

" F Om i - 


eh ^ r 

bej^tr r II 

: - " a \: r :i nq = 



v ''J'-fft'i* • V* *vrr;. ! : ":V; *»■• * 4^«4Y'.--v '. 'M-jcs-v. . ^t.gf>* y/ r : 

£ *•). ** \*-\, * «' 4 a- -A# ^ # » »> > • -»• — .faf" M f t 4 ‘-*» fr- ^ -jf*V .f* * Au\»' » *» ft «* - • - . '■» #. 

: -J»; • ff SS-i* •:.*. jj 3 ?S w ~-; w r ' "'* r~ ..J^;. :;L;^' v ; . ::'S'JT--£i- -*C, 


. .f«^ •-*. -•*.- 







/ * 1 1 ■* rj 11 h I;, ci G; B X p a r a rnc? f 0 r a r r a y # / 

/-«• Owt.pul: From GSX par,'^met<er array */ 
/* inf::■ ut po 1 nt array •»/ 


rl: r i nq : - 


c:h a r 

i;e_ 1 ah r 1 -■■ " 1 

at)» I : - _ _ 

char 

t p_va 1 r H “ " va Lno :'-__ 

char 

te^tov^l C 1 ■= 

,: Xrinnnn ,l ; 

on a r 

tejFrvM U = 

" XnnrVcm !l “ 

c h ar* 

t«_! 5 tr va \ C b= 

" X X X X X X !! 

c:Kar 

to_byt va1 r1 = 

" nnhcmn " j 

char 

te_i5ubva ITJ- 

l: X X X X X X ,: 1 

c h a r 

te^lflhvfllr n = 

" X X X X XX X x 

C h a. r 

te_v«Lva H 3 - 

"nnnnnn"j 




c ? h a r 


te_totoxi: [1^ " 
te_Frts»tC1~ 
te_toltext TT- 
he_fr 1 hex t F 1 — 

te_£tt rlt?K tt\I = 

te_byttex t Cl=t 
t C 3 = 

te"l abtwt C 1- 

oU C ^ -■ !, oic" * 


H 

„__ «T 




char t. e a 

, call r J « " 

c*nc.» X " 



J 

m- 

char to 

4 byt e L]-t 

"h ytf "^ 





char to. 

_word i' 1 :; - 

! ' word " i 




•» 

clear t«f’_ 

l onq C]-: 

'■ ] onq " ? } 





TEL INFO 

t i _. bn -- 

F I- e t n t c >< t n t e? 

t 0 , t c 

t ova l , T B N n 0 , TE CNTF-?, Ox 1. If 0,0, i H 7,12 >; 



TEDINFO 

t:i._fr 

t to f r tc H t H t e 

_ f r , 1 0 

_frva1,I BN, 0 ,TE_CNTR,Ox 1 If0,0, 1,7, 14 > 5 


1 

TEDINFO 

t i _. t a J 

--■ T t. & i 0 11. e %< t,.. 

t ® .to, 

t e tova3. , I BM , 0 , TE_.C:NTR , Ox 1 1. f 0, 0, 1,7 , 12 > ; 

^ i 


TED INF0 

t j._f r 1 

r1 tont, 

tc._Fr , 

t r*[j r va 1 , IBM, 0 , TE_CN TR , Ox .11 f 0.0 , 1,7, 14 > ; 

b ,: H 


TEDINED 

ti.str 

--Fto.ntr t c>; tn 

to.Btr 

, t s..Rtr va 1 , IBM, 0 , TE..CNTR , Ox llf0,0, 1,7, 16} 


• 

TEDINFO 

t :i _by t 

”< to by1 1 ex b, 

t c_l.vyt 

, t c by t v a 3 , IBM,0,TE„CNTR,Ox 11f 0,0, 1,7, 17 > 

■4 


TED]NFG 

t itr 0 

1 : b c? -C t e _ s u. b t e x t, 1 0 ..._ 

sub , t e _subva 1, I BM, 0, TE_CNTF\, Ox 13 f 0,0, 1,7,' 

* tS 

1 

TED INFO 

ti_lab 

-- {t e_ 1 ab t ex t, 

te„1ab 

, te.1. ab va 1., I BM „ 0 , TE_CNTR , Ox 1 1 f 0, 0, 1,9, 1 6 > 



T e:d I NF 0 

t :i. va 3. 

“< te oub ten t • 

t e va 1 

, t e? .. va Ival , I BM, 0, T E. Cr^TFi, 0 x 1 :i. f 0,0, 1,7, 14 > 



--*«-- ',1 . 

S .fembi 

lTY ? ^ v "* 

cf« ^-SS'-^V roS nT«Vv' r" J 
*-*• • *]•-.' . <C«8OTH U 




.- - • n : 

Sa^.i - y- ' •• - 

•l‘v~ r 2,!; ivvEffiPst -i '■ ■■*'.*: ' : "&t. &’■ vV. 






























uj 

OBJECT a, 
OBJECT a, 
OBJECT a, 

OBJECT o_ 

OBJECT o. 

/ *- 

OBJECT o 
OBJECT o. 
OBJECT a_ 

OBJECT o. 

OBJECT a 

OBJECT o 

OBJECT a 

OBJECT a 

/*— - *— 

OBJECT a 
OBJECT o 
OBJECT a 

QB-.TECT o 

OBJECT o 

OBJECT a 

OBJECT a 

OBJECT a 

i/*- 

OBJECT o 
OBJECT a 
OBJECT a 

OBJECT o 

OBJECT a 

OBJECT a 

OBJECT a 


/*- 

OBJECT 


OBJECT 

Ji eject 

□ EJECT 
OBJECT 
r EJECT 


TV A* -N 1 

WT 



C3r rr^ 

f r=* 

■C/* 2 

*•/ 3 

j-i, 


to •■=. 

</* 3 

*/ 4 

n 1 , 

“'J , G, 

c;tr- 

</* 4 

*/ 5 

, 1 , 

-1, <3. 

, a k - 

</% S 

*/ 6 

,-l , 

- :l , G. 

.c:anc| 

E / -)»■ 6 

->t- / 0 

A" l, 

-1 ,G. 

rep]ace-I/# 

a */ 

-1 , 

■i ,7,< 

.t i 12 — 

■c /* 

l */ 

1 

1,-1 

f r 1 

T /■« 

2 * / 


■L, -1 

t O 1 ” 

^ X* 

3 * / 

4 3 - 

1 , -1 

i»t. r 1, -- 

■c/* 

4 */ 

5, - 

l r i 

sub ~ 

<./*■ 

5 */ 

6, - 

i., -1 

o k 1 ™ 

<./•* 

6 * / 

7, — 

i , -1 

canc .1 -- 

</*' 

7 */ 

0, - 

l, *-1, 

i m:>pec 

t -= T / * 

0 -x- / 

“I n 

.!, , ? A 

t i t3- 

■C/* 

1 */ 

2 j - 

1, -1. 

f r2~ 

< /■« 

2 */ 


.1 , — L 

byte- 

■c/* 

-3* 

4, - 

1 , -1 

word — 

</* 

4 -*/ 

5 < ” 

1 f - 1 

1 onga 

■c / *■ 

5 */ 

6,, - 

1,-1 

ok 2* 

■c / * 

6 *7 

7, - 

•1 ,-.1. 

canc2'-‘ ::: 

•c /* 

7 * / 

0 j ~- 

1 , — 1 

fill •-= 

■C / k- <;> 

*/ - 

i, :i , 

6, CiJ 

t i 14-- 

<./* 1 

x- / 2 

, -1, 

- 1. , ('; i 

-P>3-- 

■C/* 7. 

«•/ 3 

, - X , 

- :l.E. r 

to3 — 

■C/ * 3 

*/ 4 

, - j „ 

-1, G- 

sub3— 

■C/* 4 

*/ s 

,-l, 

-1, G 

ok 3= 

C/* 3 

* / 6 

n - 1 , 

-1 „ G, 

canc3- 

{/* 6 

* / 0 

, -■ \ | 

- 3 , G. 

copy- 

</* 0 

•••• 

1 , 1 , 

' 

titS^ 

.1 

*/ 7 

? - 1 - 2 

-i,e. 

sf r~ 

</* 2 

/ ' 3 

A-i, 

-1,6. 

sto - 

3 

%/ 4 

, r " .1 , 

-1 , G. 

d f r -- 

</* 4 

* / S 

, -1 , 

- 1 , GT. 

dto ■= 

-CX i a- 3 

*/ 6 

aE 

- 1 , G. 

ok 4= 

< / * 6 

*/ 7 


-1 , G. 

ca.nc:4 

•C/* 7 

-*/ 0 

, ~1 * 

« 1 , G. 


30, 130 % 20 > 5 


2 O j SO , 13 0, 70 > f 
', NORMAL. , , 

20, 1 Oii3, 64,74 > \ 
NORMA*!. f t '-jeon „ 

150, .1 <V5 ; 64 , 24 > ; 


30,130,20 


5-1, GJ r BDXTEX T, FJ> I TABLE , NORMAL , i... frtr , 

, - l , E.BnXTl. : XT , I T> 1 TAT: I r , NORMAL, &1; tr-tiub 
, - 1 , GLUTTON , SELECTmOUV 1 E X T T ! DEFAULT , NORM 


F Al J[.'T , IU0RMAi_| t e_aft „ 
20, 130,*4,24)5 
STi'J 13i NORMAL., c e_ cgn 
jSO,130„ &4 n 74■>; 


i: T: 0 X1 E X f , l_T) f, TAB.'LL , NORMAL , 64 j _ 


20 . ctO , £$, 74 > ; 

0 _B:Ul' TON , SELECTABLE ! REUTTON, SELECTED , tc?_word, 

06,, SO, 63, 24 > ; 

G__B!!,JT' i ON , SirL.ECTABLE ! R BUTTON, NORMAL , 1 o^ej f 


BUTTON f SELECT ABLE I H X IT i DEFAULT , NORMAL, t® _ok 

70 , 130 , 65 , 24 >; 

JBLJTTQN, 'EEi.LCTiOIO-L ; j/f ! I jJSTQBj NORMAL s te_c4A 

;i CEL 1,30,6S724 > : 


5t.rj&u.b q 

20, .1 03d , 160 .j ET1 > 
r, NORMAL., te_ak , 
20 ,130,64,24 >5 
, NORMAL., te i _cem, 
20,133,64,7.4 > ; 


;< , MQNE, NORMAL, Oh 0002 1 1 60L, 3, ■- 


.. AC i ts, 5 

,0 q 3 n •; 

700 ,2 

OB? 


NOFlt'IAL, 

£it X i 1 

■O'M 





20 ,3 

0 , 1 

.30, 24 > 5 

N0l : Xr4AL, 

6 Li., I 

a , 





70, t : i 

5, ;i 

30 ,74 > 1 ; 

NCJRMAL, 

6 ,t :i .J 

: rl , 





160, 

30 „ 

1 30, 24 > 

NORMAL., 

3: t .1 ! 

:ol , 





j 60 , 

FIS, 

130,24}- 

EX IT !m 

:faui_' 

r , NOR 

:MAL 

lA? ( .ak , 



70, 

13C 

A 64A24> 

EXIT 1 LA 

3TQB, 

, NDRMA1 , 

n, 




SSSSW-A • 






;:r to -72 .. ... 

























h a n d I g - p h y s, hfe n 
v_._tfp.nvwk C,work .i 



mm 


"»j' 

wM 1 ' 
































i . 

}i 


/ ft S XXX-XXX * X XXX* X ft X-K X XX XXX XX X ft -4 XXX'X * XXXXXXXX XXX XXX * -it - : ss*-K X-H X -ft -ft- X -ft X X XX* / 

/ & create window For e.l i ipso, x/ 

/ -A X -s * * * ft- * * * XX X * .« ft * S >jC* -ft -;C- -ft X * K- * -ft -ft ft* -ft- X * -ft * -x- -ft- -X X * * * X X if X * -ft- it X* ft * * X X * X X XXX X -X X* / 

a r t v? n _ ffi V'j i i I d g w ( > 

<' i nt vac-ant, i m \ yht : 

vacant--F i ntf v*qanfc ( ) 5 a. F ( vac 9 rrf; < £)) return (0) g 
w ivo.c*n t .1 . type :: ELL l PS FI; 

w T vacant H , harv^wi nd or 00. to (W I J<I N.D, x de?sk , yd op k ,, wclesk , hcfes i : :) ; 

w i nd jse t. ( w Cvacan L 3 „ h an „ WF_ NAME, " Q...L. .1 R3E " , 0 7 0) 5 

opfsnw pv^c-a.nt) ? t 

1 1 r aw _.\a 11 i p£e I vaca 11 c .j * 

red:, ur n ( 1 ) * 


‘ 

,- • ,. ; . «.4 *Wi 

»' ; -j ’ ... . _ , c'jj 

-A- 

Kp : 'Fp --‘CCf -'. 


/■* create window For mo merry. */ 

/ * * X * X-XX XXXXXXXX XX* X XX X X X ft X X X X X-ft X XX X XX X X X X XXX XX ft X X X X X X XXXXX XXX X XX/ 

upen_inwi n d». jw (s t an t, b w 1 ) 
i.nt hwl ; Long *t&ri; - 
< i n t ✓ a l: a n i: f 

vsran t- -f tnd, vaonnl £ ) r ; 1 F ( v^centi 0 ) t w 1 ncl^a 1 ert < ) i return s > 
to l.. v a can t ’I Sow j --hw.1 5 w recant j . I oo-bw .1 » (star t/bwl ) ; 
w [vaceni: II . t ype~MEHORY 5 

w l vo,c an t j . h n.n - w i nd _ err & a 1 0 (W 3 _K IMD 2 , xdes k , y d esh:, wd esk , h d 0 sk ) ; 

<0 p e n w ( vo. c: a n t '> ; 
o.-tiowrn €j rn ( t op w n 1.1 rn) ; 

> 

/XX XX XXX X X * ft X X X -ft X ft A ft X X X X is XX X* X XXX* ft XX ft X XX X X XX X X* X X XX XX- XXXX XXX XXX* / 

/xxxxxx create window for labels xxxx/ 

/ » X ft fS* X * X X X ft X X X ft ft- X X X v -■'* a fSr ft x X X X Xx X X X * X XX-XX * X X * X X X X ft X * ft X X X X X X X-X X X X X X X / 

op m\ 1 w a neiow ( 3 
( i n i \/ax:-anL * 

i f ( 3 at)_ F 1 o.q ) l a h o i sr t ( ) g r At u r n l 0 ) ;; > 

Pr-b,_f 3 aq-TKiJS 3 f x ”0 thor.ft' wn’ t to'O '■? of chose windows */ 

vacant:~f i ndnanf v ) - i f ( vic/mtv ©) (wi ncl id<?r f ( ) ^ r eturn (0) ; } 
w l v m t:«f 1 b j . t y \c - i.FiPipi_ o ^ 

w [vacant 1 = hnnvw ) nal /crest f' (. W \ I ■ ! ND$, x cler i-- ,, yclef’sk ^ wderdOj hdesk) 5 

wind^et (v; [ v-ocanf J . han, W.l-_NAMI " i abe 1 n M , 0 , C>) 5 

opis'nw 1. v iix>an +:) 5 

te'n fpw 1 ab c ( v a.rou n L 5 ; 

rot urn (1 j 

> 

/XXX XXX XX* XXX XX XX XXX « XXX X*XX * * '* XXXX ft ft S X X ft X XXXX XX X XX X X xxxxxxxxxxxxxxxxxxx/ 

/xxxxxx cjrjrtej*. bo j j window (: 1 ns t on 1 e F l kia.lF F screen, 2 nd on right etc) x/ 

/ X * xxx ft X X XX X Xft X X * X X ft K XXXXX X «X XX KXX XXXXX XX XX X X X XXXXX XXX XXX X ft*X XXX XX'XXX XXX/ 

o;:enw (vAcwit) 
int vacant^ 
tin t h e i y 111 red :t h ; 
it Cw [vacant 1 . t yp I .HBELS) 

1 1 - 1 e j. q h t - rn i n ([ 1 d e s k, C c, Hr- n o _ r> F _ l.nb s) x g ]. j-1 c bar) j w 3 d t h =2 8 * g l_wcha.r 5 > 
e .1 se <hc I ghf. --11de• ik ; w j ci t h - J u)de<r> k /2 ; > 
w [vacant 1 . orr-‘ TRUE. ■ 

w i nd _ open ( w [vacawLl . han , _x c! c ; k v < vacant ' 142 ) w d c v: I-.: /2, vdea k, width, hoi qht.) ; 
w i nd __qe t ( w T vac 1 an F j h ari, WR _U)0PKX YWH , 

d.w [ v a can t ],xwor k , -?/w [vacant 1 , y wor k , ?/w [vacant H . wwor k , ?/w [vacant. 1 . hwor k ) 5 
rnpjiaiid j e-«w l Vacant 1 . han ; topwnurn-vacant; 
ne?wwi nd ( vacant) = 
w i ndcoun L h- +- 5 

> 

/ X XXX X XXX XX * ft >: X XXX K-X X XX A XX X ft X X X X X X XXX X XXX X X X X XX XX X XXX X X X XX XXXXX XXXXX XXX XXXXX *-«<-/ 

/*■ clear window */ 

/XX XXXXX-XX XXXXX XXX X-X X XXX XX XXX XX X X-XXX X'XXX XX--X X X XX XXXXX X X- *X XX XX XXX XXX xxxxxx xxx-xxx/ 
c 1 is < wnurn) 

i n I- WTn : u : r$ } 








/Y ;> 






F^ WrnT ^ i,;,v 

■a ; ; t. - : .• < h# ; - , 


U it ^ 




; > .j/.r .»>*r.* ^ 




pv'§ Py: : 4 ; W'>:• / 




PP. 


















I */ '!•• » : p’ - r-'. 


■-£ 






:, Lernp’^3) ; 


vsf __s t y ] e (hand .1 @, 8) ; 
vsF _co1or(h and 1e,0) ; 

wi nc:! _qet C w Cwnurn.Il = nan, U;F_WGF.:KXYWH, temp , temp-- L i , ternp-r i 
t e rn p L 2 H +- t c rn p E 01—1 j 
t ern p E 3 ”1 ■+ -1 m rop C. i 3—1 ; 
v b a r ( h a n d X e , t e rnp ) % 


' *S * * * * * * * * *■ * * * * * * * * ->; * * X **'■:$*******■**« * * * * * * * *■****■*• ************* * * * / 

'*-*■*-*•** clcsu top window */ 

*« #S -x * * * * *** ** S *** * * ** ft** *** * * * * ‘X***** *•** ****** X K* «**-* *• X ***-***•*■*** / 
: j #se wi (j 

j nt i ; 

W C t Gpwnurn.i „ on- FALSE ; 
s w i t c h(wC t op win irn ."I a t. y p (-?) 


(case 


case- 1 

case 


LAYELS: 
/ * F. n F 

XteftKEJ; 
MEMORY : 


:?E 5 break; 
*/ 


1 ah u f Iag:r:Ff*iLAE.; h i 1 i t e_yrn-sf'ALi 
h i 1 i );c?d ad dr may not be here 
b r k w _ f 1 a g —F AL S E ; b r e a. k :j 
i f ( w C topwnurn j . tag ) 

£ w Ctapwn l pa 3 . t a<J~F : ALSE!; 

(ag i 

/* i f (: h i r s leaves only one window taq ,; ied then detag the window */ 

i l : ( t. a g - - :1 1) < f p r C i «--*0 ; i < 4 ; i r h- ) 

wC i 3 .. tacp-FALSE 5 
taq « 05 


wi nd_e! oso ’ w Etopwm*m j ,. nan' ; 
w i nc| _dit 1 e ta: < lm Ct opw ni. im il * nan) j 
w indcoimt— ? 
q 1 ose_ top _wi nc5ow | j ; 

t o P w ri t! rn-a i;.« C 0 1 ; I; on _ h a. t ) cl I ta~ w Cl: op w n u rn 1. ha n ; 
f * note t h a t c: 1 os i n q t op w i. r a d o w a uta-t o p s t h e w i n d o w ben tea t \ \ 
so th/it Lopwni.im, et will not be updated in multi f) 

t ****** 'S ****** •***■**’* * ****** i«i * * * k- * * i 


*/ 


/m open dialog box 

/ *- * * *■■***■** Si- ***** "^ ******* i» * * * * i 

jl nt d i a 1. box < p d j a 1 , f i r si f i e 1 d > 
1 on*3 a _d i a \ ; ini f i r s t _ F i m i. d ; 


*• * % * * * * 


* ** ***-*?! 


: i nt x 


5 y j w ? h 


, c.; x h‘i i!; ; 


11 


F o > ■■• 11 j ^ 0 e ri h e r C o d I -s. I „ 

F o r rn_rj i a | C 0 i 0 ,. i 0 . I. 

For if) y I i a 1 ( 1;, 1 0 ,, 1 0 ? 1 

‘n tele rno.,1 x,m (i| 

- :i I:, j c __d r o.w (t a l . 0 , 1 0 , >■ 

?..h qw pi)c iij.se i. ) ; 

ex _y;u d:.--t orrn_do < o__d i. a 1 , f 
f or m_ d i a 1 ( 2 j 1.0 , 10 , 1.0 j 1 F 

o v rn d 5 . a 1 - C * 3 , i. 0 , . 1 . 0 , 1 0 , J. C 

r 01: i ir-fi ( ex. __bu t) ; 

> 


;t-h) 


0 , 


, y , w, h ) ; 

i r*d:. _y' : in 1 d ) ; 
, x i, y , w , h ) ; 
x , y, w, h ) i; 


/■* find and redraw all clipping rectangles 
/ *■■* * * * ***** *■**■* ******* * * * * *■ * *• * * * * * *• * * * * *•**•* s 
/*. Tbiis doasii’ t work c 1 ^an'.i y. Reason unknown**/ 
c. I o _ r e d r a w < x c,, y c, ujo , r| c: i 
i. 111 x c , y a , wc, f* c ; 
i 4 CnRF-CT t.Kt2; 

;i fi i; .i , t h e __ w i n d o w ; 

h i de_rriov.se () ? 

w i t Id _ u. p d a t e ( T RIJ E) * 

t. 2 »q _X=XC ^ 

t2.g._y~yc; 

t2, g_w"‘wc *, 

t2-q_h-he; 


r**** ************■*•/ 
*■/ 

i * * * * *-* *■ * *• / 



-’*•< Vr^r ‘ *’•?>-V A V 

• r > ; ^a*rji.*‘'‘tffe.4te» \>R , ry/o > ■■,» 1 . T .. ~ 

- •'r> ' . . i ‘ ' • 

. ■**... • r .: J _ ■ r k 


* Tf k i • ^ 1 

• . . •. A-'- 




*•- 

' '7 •■« 

p'V. ’ • • • , 


V('« * ; -' 








































«. r. 7. 




ityrvT^vs moei 

-C t h e __ w i n d o w ^ s t a c k r i 3 ; 

w :i n d _ g e*t l w E l: h e_ wind o w 3 . h an , WF_.Fl R B T X Y W I- \ ,, Sc t 'J „ g _o? , Set 3 . q _ y , Sc t J, . q _ w, Sc t j . g_h ) ; 
wh i 1e (11. q_w StSe f. i . y__h ) 

•C i f (re __ j nt: GtrBecTfc ( $ct 7 , Set i ) ) 

■Cbc?__ c \ i p < ti . q__x , t 1 . q __y , 1:1. y ; _w 3 1 1. d__h ) ; 
ew 1 t ah ( w E t.hw i nd nuj 1 „ t: yjpe) 

i ca 1 eta ! r I,L 1PSF : draw__e.1.1 :L j:> b (3 ( l".he_w i ndow) ;break 5 
c;a j v.f.i HFMGRY : 3howmpin C t hew i nd aw) ;br r?. k ; 
baa?; LA PELS s 5 hi:iw 1 ab« (the_w i 1 ndcDw) ; break 5 

> 

w i nd.qet. (w Ethe_w i riciow 3 « ban„ WF_NF.XTXYWH, Set 1 . q _x , Set 1 . g_y, Set 1 • g_w, &t :l ♦ 

9_u; 

} / -m «j n d w h i ] e - / 

>/*«■ end for •&/ 

w 1 nd 1... 1 pdat © ( F AL 1 >F ; ;; 


F i r 5 t K-. v e n Y _ M u. 3 , 1 : i * / 

a * -x s _ r- -*? * * x x x x * * * * -x •* -x * * x * * / 


< 1:1 e? d-1 ■;, a yd © a k , Sew c:i © s k 7 a hdesk ) ; 



Bhrif) w rnct use 

.0 ( ) : 


> 



/** **■»•'«••■»-X--X- :< x-^' x >-K x 

-X -X “X -X 'X 1 X* -X -Ji'X s -X* -X -<■ 


/ * A e c e -3 3 0 r y Ini t - 


/ -X -X X X -X- -X X X •X-’R- -X •#!■ Hr * -X -x- 

X- 3 ; -X -X X- X X -X X X -X X X > 


!tia i n ( ) 



app l __ in 11 : 

( ) ■ 


ph ye_r' F Ad 

1 f'~ A r 4 ^f _hJivid 1 B: 


lj i nri„qof f 

0 j W l- _ Wfj R!: X Y kJH 


Dpen.vwer 

is: 1) 5 “ 


qr 3 I- 1 no Li 3 

<:? ( ARFIUW ? Ox Ui_ 1 j 


buticlown-T 

F'.;L F | 


i f ( :rarc _ 

-load i " :it ? dinc-mu 


f T orrn _0 

1 art ( 1 , 11 Cnq 


i f C r 3 r c q 

a di d r r 0 , 0 , V. 1 n 011 u 


i i t (> 


{f or m_a lent* L , " [-3 \ EABORT 1 [burr y II *' ) ,5 app ] _©>< i t C ) 5 > 

1 ne n i.i_b or ( mil*r j yi t r o^ , 1 '» 5 

last: cornrn^ ncP j napped ■ X * , * / 

f r sr ( i --C) ■ i 1 4 ; 1 +•■1-) 

(w r. i :i, oiT^'f 5. w r i 1 p.m 1 «d a p al bf ■ > 

f or ( 1 --l'i ; i ( 1 1 ; 2 h-h- ) 

f n_ i: f?y= r;j 2. art 1 V^- f f'M r.£ ■ 


1 - or C i#<»; 

!< LAB 

_ 1-FMGTH 5 1 + 

H- ) 



dr 1 

rvri E i 3 

n■pep 

• 




str 3 

no r i ] 

-O " 





it t r- c. p y ( ] 

a be -1 a 

FOi - 

1 \ '1 e ] , 

" ]abb 1")5 

1 abed! :* E 

0 3 u va 1 u.e—Ox f f f 1 0; 

^tr Opy ( 1 

a b e 1 % 

[ 11 . 

1 abe 1 , 

11 1 abd 1 1 " ) 

; labels 

Ell., va 1 llo-Ox f f f 30 ; 

- 3 1 1 ’ c: p y ( ] 

abfMl b 

E^i 3 n 

la tie l , 

" 1 at'LR j 4 : l! ) 

1 ] abcLLfr 

E2! 3 . val ue—Oxf f f 50 5 

3 1:ropy < 1 

a b < p . 1 -3 

[ 3 J n 

1 ab<el , 

11 labtalo ,! ) 

; 1 abe 1 s 

E33 . va 1 ue“0>< ff f 70 ; 

SStrcpy ( ] 

abo ] 

E43 . 

label, 

lAbi«3.il " ) 

; labe; 1 b 

E43 . va ]. Lie-Oxr Ff 80 5 

B t r O | j y ( 1 

a be 1 3 

E3 3 n 

Label, 

" label 5") 

i lab e \ ot 

E 5 ] „ va X ue --Ox f f f 90 5 

oti-opy ( 3 

a be ] 4 

E 6 3 . 

label, 

" lab c; 1 6 11 ) 

'i 1 a b e 1 3 

E 6 3 . va I.ue 0 >< f f f a 0 5 

3 tr copy ( \ 

iab m 1 b 

E7 3 , 

labe /1 , 

% 1 : r i, n<q ) t 



county 1 at 

bee 1 f* C 

) i 





rnu. J t; i ( ) j 








> 

/ -*■-**-•**•-**■*-* ->*** ■»-#■;■ * *-****■*-** *-*-*-*-■*■*r*- x■«•■* «-x-x ^ -x ***-s •* 

/* d i «p a t ohais ail a c c: e s o r y t a s k r» * / 

/ * *--a *-x -x-* *-x * * *-x-x -x -x * -x -x -x * * -x x -x -x-** s-x -s -x- x *-* * * * * * * ■»-■« *-x -x -x--a'*■«**■» / 

mu'i t i. ( ) 

{ 

i nt f2venl: ; 

ft a f 

n u rn _ c 1 i c k s = 0 ; /■» n e c: 0 s ?i a r y t. c:i a void b u. 11 o n ~ p r o s b a n d b u. t. ton-release 

& a eh b e i. n q c o n b i. d e? r e d a bu 11 o 11 o? v e 111 . 




I . Ema^ aaiet-- 

.-..LWjii... 

■■■ ■ r J " •' SasS? 1 

H A . 

■ • * >■ n"*• f‘*iTu iUbCw(l .Cl/ 


?: : */3r ;***» 

















■ tHiBiuuq^i tfji'ti j«k* •!.% ~ .- p- 






wn' i wiiiii 1 







































fn_ki.?yst newkey 3 . f.ns C (f n_k«ys Cnewkey J • nurft.fns) +i- j 

1 Oci.d^_h ex 5 

(••? 1 se < 1 a s t _e <• :• m f n -:•>. n cJ ^ 1 n a / .1 _h e v f 1 n a d. .hex< > ; > 
break 5 
d <2 f A. 1..(J t 5! ;i r o a W ; 


mi\- 


menu _t normal (menu. ' r e e , rnsqtauff C33,1 3 ; 


F>i;. o r e n o r rna. 3 . t. y p e 




,.UU. 1:/- 

tw.»v T^r— «. ><* .** 




i'i« !•!!•■_• > >ViM: 

do_ redraw (rnd q b u f f f 4,3 7 insqbu.f f Q5 3 , nrsgbi.i.f-F [ 6 .1 ,, in'^y buff 117 3 ) 5 
b r e a k 


vp-C: k.lr 1 _ARF : -:C!l^D r 

i f ( (m :'a-ihu f f [4 H=»=*2).^;S* ( iai [ top wnurn II * t. ype ,=:: -MF: : .MGF\ , Y ) ) 
f .1 l : \ i: ay ) vF o‘r ( ?, «<>; i{ 4 : i r-r) 

if < w f. i 1 .. tag ) w [ i 3 . ] ac--byte'fe^per _ 1 i n« 5 > 

C 31 <s«; w [ i: cj pirin 1 j.mJ Inc~why t 5 ?sy..|p.pr 4 _ 3 ine 5 

J’ 

i F (; (rnsq bu F f C 4 3 ——7, 3 ;?/&■ ( w C top wnurn II „ t yn^-v.-MFIMGR y) ) 

-f if ( t, „:Vq > f f rs r - ( 1 . s-<*) j :'l < 4 ^ l-Wi- ) 

if ( w l 3. ,1 .. bay ) w C i II „ te?>_p«r;.l i ne; li¬ 

ra \,=>•* v-j il i; op w V'lU in II ,. 1 oc-i- -by iy fc3ft_jae^F. 3, i vie 5 

> 

if C w Miopwnurn li . type^"-LABF*!LS> 

s - 1 F i 1 n '■£ q b y. f f u 4 2 —-£ > F 5. r ? t _ 3 a be 3. : - m ay ( 0, F i, Y *pfc _ 1 abe-Js- i ) | 

3 f i. rneqbu F f [413 =-<5) f i i^at._ I ab« .1,'-m:i n ( no_of __ 1 abs- 3 , F i rst„ 1. abel -t 

y 

if ( HT-aq > Z:ti ( w Uiopwnurn 3 „ i: ype=~MF.MGRY ) ) /■* 1 . hen refresh rnern winds 

f f ryr < , 1 . '--i i i ndcount -1 ° :i. > — .1 3 J —3 
if ( w Oatack il i ,7 3 . baq ) 

»0w 1 nrj .net ( w l ^tack C i 3 3 .. ban, WF_UiGF : :KX YWH 5 
temp, teanur-i -1 9 temp f,?, tempf.',?) ; 
do p'^dritw (temp i!OII, t «rnp C 3 3 ,, t r*rnp £23 , temp [33 j - 


* 1 sef vi 1 nd _yj r ’t •’ w F t op wnurn 3 . han H l‘JF_WDF\KX YWH, 

Is 'inp-, i.emg -i 1 ! , I.;.e 1 nj:> i-2, I.:. ernp r3 3 
dr tydr ; ;u‘i (t sinp [OJ , t ernh' l .1, 3 , temp F 2 3 „ temp f 3 3 ) 3 


ray WM_VSLI.ps 

i t eh ( w [ 3 : op w mn 3 . l“ y psi) 
{cj gef? M E M 0RY ; / -x T la 1 1* t? r a <: 


hytesi^vis i bl e:-~ ( w Ctopwnurn 3 - lawor k*bytera_p'C-.?r 1 i ne) /<3 1 _hehar 1 
{ f C ( v* F li o p w i 1 u rn .3 „ ,1 oc:Y. 3. b X rat: k.) I ! 

i (w[ t. o p 1 w n li rn J - [oc -Ha y t e s _ v i s i b 1 e) > h t j 1 * :• c k) ) 

f low. 1 :i. m i ta- 0 >< OL ; h i.qh 1 1 rn it. —TQPMEM 5 > : 

»1 so < . 1 . o w 1 i rn i t --1 b \ pc: It 5 h i q h 3 i m i t. -31 b 3 oc k 5 > 

3. enq t h --h i qh __ 1 i m ii:, - 1 . ow_ 1 . i rn i t j 

iq l t npi wnurn 3 , 3. oc * 1 I o vj_ 1 .i rn i t- 1 * (rnpyf.ueff F 4 3 ) ^ 1 eng t h / i 000 ; 
l-j L nd a, e 1; ( w C t o p nmn II „ h a n , l*JF __ VS!.. T D E, rn-a g h uf f C 4 j , 0,0,0 ) 5 
pr i nt F ( % Id. % (fnsghiiFf f 4 3 ) * ( 3. tenqth ) / 1000) ^ 

breaks 

qase LABFiLS: 

•f : i rs; t. _ 3. a t) e 3. ::::; rn a h ( 0 , rn?:■ c| b u f f F. 4 3 * ( no _ of... 3. ab s - 3. ) / 1 OOO) ; 

it 1 i nd. sea I: ( w C t,q|-j Wnurn 3 „ ban, WP.VSi.. J. DP., rn-agbuf f [4 3,0,0,0) ; 

> /*switch type end *V 

wind get. ( w [ i..apwnurn3 . han , WF. WGFsKXYWH 7 temp , t.ernpf 1 , t.ernp-i-2, temp + 3) 
do redraw(temp CO3,temp[13,temp[23,temp[33) ; 


1 enq t h - s h i q 
w l t np wnurn 3 
wind (w 


WM NEWTOP: 





























vJk&SSBBB *u+frtt 




WMffic 


r or v ]. —u 5 —mux niunw n ncr->, i-r-i-; 

f i f ( w f. ;L j □ han-- ; --1:.ap_hanii 3 ,o) f hopwviu.rn — i 5 br-c?ak j > > 
t o p p or (t. o p w n u. rn) 5 
br Oak ; 

caao WM_S I 7. E::D ; 
case WM^MOVED s 

if c rn-gbuFf ilcVIK MXW... WJ ©TH} msqhuff II6'II =*MJN _W I !DTH $ 

:i f (rnugbu. I- f C7 1 < MT NHE I mil T) rnrgbuf f C 7 3 : --M I M_HE I GHT 5 
W i nci ,f 3 t C f op, ...hand 1 e , WF^CURRXYWH, 

rnpqhuf f I'43 „ losgbuf f I*'a.1 , m'jqbuF f II6 3 , nragbuf f L 
w i nd j. 1 of < t,op h a nr 1 1 a, WF __ WORK X YWH, 


few I* top wnurn j « h wr k , few I* t c: 
?*W C f op mnu m li « wwqr k , few II t.c: 
h-rm*k : 


lip wnurn II . yw or k , 
jp wnurn 3 „ hwor, k > ,■ 


c?apa wM F'ULi..ED ? /-i- i h i <5 3 o©k*■; toa 1□ nq */ 

if i w C too wnurn .1 „ y ; :<«i > Ski M G f{Yj rot* - IJ I .. K I N!0 ;'<•? 3 tfc*:a r c? i.“-W I_K 1 ND2 ; 

1 r (& i: fop an., tro 3 , + u I 1 «d > 

f w i nd c;^. .1 •£ ( W(3_ WQR K & r # f , 

v.! Ft opwnum j . kh I d , h II top.'an urn .1 . yo.I.d , a Ctopumurn 3 . wo I. d , w L~ top wnurn 3 . ho 
C l-.;:«p w v< torn 1 „ Ki'jgr k , 'yw t top wnurn h l „ ywcrrk , 
few C t.opi/inum li , wwor k , few I! fop wnurn .1 „ hwor k ) ; 
w i nd ^co-f ( w C top wnurn .3 , ki, a .v, WF ..CJ.JRRX YNH # 
w (It op wnurn j , >< o 1 cl , w II to pi wnurn I!. yril d , 

w fl t npwuurn 1 , wo 1 d , w (I f op wnurn .3 . h o 1, oi > ; 

> 

-■ o-fw i rid yu 1 (i*JC__f:fjFvIjE:IR,, rof , 

w C topionum J . x work , w C h Op wnurn 3 - ywor}< t 
w C top wnurn 3 * wwor k, w rt op wnurn 3 • hwor k , 
ifWCtopwnuml . xo l d ^ few fit op wnurn 3 . yo l d , 
i op wnurn 3. wo 1 d T Stw C t *p t-murn 1 . hold ) ; 
wi rtd_calc< WC7 WKcK, rot* xdBsk , ydesk 7 wdesk * hde^k , 
few C t opvmiifo 3 » xnw k, few r top wnurn 3 » ywor k , 
few Ctopwnurft 1 * wujork ^fewttapwnttml. hwor k 5 ? 
wintl_s€ft < wr t of^wmiml • h^tn, WF^’URKXVkJH, kdes>lr, yde^k wdesk, hdesk> j 

> 

w IItc;.r:a*rnurn j . fu 3 1 reel TRUE 5 
broak; 

0 WM_CLO'.iEl) r 
01 ose w :i ( ) *, 
h r & j.» I s * 

> /* switch y h viahij.f t C0il ) and -* 

/% nriw ohwoli for tAtyj i nq „ Prwssun11 y trigcqer^d by FF1 */ 

/» wh ich t .<71 q 71 \ 1 ap&ral iana 1 rn®anor-y wi ndoa*/ 

i f ( ( evoni: ?» MU_KEY’J;:‘D) fefe ( ( Iday.oodo/S!^*;'.) =- : --66) 
l-d- 1, w 11 o p wnu rn II . t y p ©«»MEM>1)R Y ) 5 


*F or ( i - T -0 ; i < rn a x nmrnw i Vida ? i -r-4*) 

i. F ( ( w C j 3 . tvpe^MEMDRY) fefe ( wCa 3 « cn»—TRUE!) ) <w II i 3 . tag “TRUE ; tag-M- 
i P < taqr- l ) 

Yf nr ( 1 ~0 !; i < rna.K nurnw indss, i. -w-*-) 
w L i 3 , t :; 

t acyO ; 


/* chock for ’ ropwaf 1 a at command ’ u Kay F7 ■*'/ 

i f ( ( o v' o q t ?;,■ r^1. j_ |EY.E: JJ ) fefe ( ( k 0 y ca dr# / 2 $6 ) 65) ) 

(*ldst_cnrnrnancl) ( ) ; 

-*** m- *•* *■*■**■* * * •**'**•# i< *** ^-kv 






yV> ■ 




: * r iv'wvT. ? 







































v h 


Cf n_key_h it: 1 „ act ive) > 


•wkey 1 . nuin_f ni3-=0 


rny) ) 


□pwnum 


y—w L rapwnurnJ „ ywork ; 

F i r «t _ 1. a b e I 5 
% >no__of _ 1 ab <& )break 
* t hen nra ee o 1. d v i 


:;t If 1 c-.; \ - 1 - i-j \] t a p w n u. rn .1. h w q r k / q 1 c h a r) ) ) 

3 = w [1;opiMnurn 1 . x wnr k 5 
3 ■ w[ hcapi^jnijm 3 n yujor k ■+■ 

q 1 __hchar'X- ( 1 h- i -f i rst__ 1 abel > ; 

i = t. 0 m f j l 0 1 + a I't. n p w n urn ] „ wv-j o v k — x ; 

] - t e 1 n p l :l 1 »- q X _h c h a r 5 


l*i i, 3. i t.e= 3 jabe* 1 s Cp\ oked_ 1 ab & 3 1 „ va lue ; h i lit e^on- TRUS 
fcvemp HO J :: w[ ttjpwnurn1 „ H wor k § 

F «>rrip I' 1 J sw Ft opwnurn 3 „ ywir ka- 

q ] _h c: h a r * ( 1 , +p i c k e d ^ 1 ab e ].—f i rs 1 : __ 1 , a b el) 5 
hemp £21—temp l 01 Hm Ft op unurn 1. wwork^l ; 

1:. <3 rnp £31 - £ a mp C 3,1 - 3 1. _ h c har; 
i nv__ccD lor (t ernp ) \ 


whi1e(w i ndcount> 0) 
-C close wi ( ) 
rnemi r _bar (rnenu_tree 

V _a 3 n. vv.vi k ( h a n d \ qj ) 5 . 
























f it ■** it if if if -ft- -tT if if if -£* *3- if if -j 


* if 7t if -fc if if if if if if if &* if if if if -*- -*• if if ■*- -£• if it if if if if if if it -*- -*- if / 


/x Draw F i 1 loci Ellipse, R«? t a i nwd For test, purpa^es to chock redraw */ 

/ X X- X- X X X* -X X X- XX- X- ■"■ X X- X- X X- X X- X X X X- X- X- -X X X* -X ■X' ’X- X X- X- X- -X- X- X- X- X- X- X- X X- X X-X X X - X X' X’ X- X X- X- X' X- X- X X- X- X- X X X- / 

r.1raw_aJ. 1 .i ptrfe ( wnum ) 
int wnum ? 

-C c i *s ( w n u rn) i 

v*r>*F _ i ntavr i o r ( hand 1 a , 4) - 
vtd f v c g 1 or ( h --a 11 d 1 © , ) ) i 

v x 01 l 1 p eve ( hand i*® n w uwnurn 3 u x wor k-^w C. wnurn 1 „ wwgr k, / 2, 

wi!wnum.j ■ ywor k+w Cwnum J . hwork/S ., w Cwnuin] . wwpr k/2, w rwnurn 3 „ hwnr!:;./2) ; 


/ X X- X X X X X X X- X XXX- 

/ x- s h o w rn e i n o r v 


XV 

X X XX XXXX-XX X X x-xxx X X«XX XXX XX-X XX #X XX XXX X XX XXXX'XXXX XX-X'XXXX-/ 


sh owrrvarn (whu.m) 

5! rn; wnurn y 
tc'huvf x- t£pb i nt irr 5 
J nt* x wpo i nt o J r ; 
tony x Lj-JD i ;; 

l o n q r) y t t*g t _. v itsibl*; 

lo'ivj nurtisr at.or , n urn 2 or a t o r , ] onq fch ; 

1 onq 3.0 w^ 1 j\ rn i t. „ h i q h _,L i rn i t 5 
i n l: i., .j : -q 1 ,_ti <::h ar , k ? 
i n t. b w 1 - w [ wn 1.1. rn 1 = :b w ] ; 
cVa(wrium) ; 

bytrxr.^ y i rat b 1 »'* < w Twriuirn j . NlvctV' kfr _ J in©) /q,l Jiohar s 
if ( ( u.i r wrnjrn j . i«rnor.'t t b .lock ) i ! ( ( w II w nfjxn j „ l(3«:+by t visible?) >hbiockJ ) 
A. X a.w_ ] i rnit =Km OL, 5 h i qrp_ 1. i rni f. - 'TClT :, MEM 
wa-nd^s^oet, C wnurn 2 . nan, l ! Jf .NfuriF , " rn,u tn memory" , 0 , 0 ) i 

> 

e 1 se 11 ow^ 1 i in i f ^J b 1 oc k ki i qh_ 1 :i. rn i t «hb 1 >vck ; 

L/j 1 nd^^cjt ( w l, wnum ] , han , 'dF NAME , " Ij ] ock rncoinory " , 0,0 ) 5 


i #n q t h H-n 1 q h „ 3 \ rn i t - X ow i rn 1, t ; 
riMin<??-r«2d:of*- : 1 00fix ( l,i r.wfnurn 1 . 1 o>:: i -- 
nurn2«rx> tar - X <j<X>*byt * \ b I © \ 

i "numor n t or,/ i*‘ng (iln j 


irn.il:) u 


wi i’ir:is?t ( w l>jviurn J = hi?.fr 5 NTE, V^'L j Of.N 
i t 0; 0 j O') 

w( Vi iu^nuifp j . haH 4 _V'3l -O' 7.1-^ 
k , 0 , 0 , 0) r, 

wind ( w [ L-jrnjrn th^n;, Wr^NCiftl XVWM, i. ^m-p , t urfifri-j,^ kawnp-i'S, bump - 1 - 3 ) ; 

i.p 1 f urn; 1 i"0 ’ , !. i^mn [ H , I . ump l‘Ti ] -.1 „ r ;*fk,p l 31 —,L ) j 
for r j =»0 ; i.< by t g 3 sp. vi _•• 0 b 1 s :j i. 4*-=tj.yt*u'P« _p©r _^vl ncU'l 

tbjiwrn.fi tnr q-j iP-jnijin 1 , j,,■;■ cr .i " wp.io i ntsr ;: l/pb i. rrl:ur 5 .l.fio i n!:er ::: bpo i nttrr ;; 
f ur .< k ~0 ; k< byt m;:-; |?;xu) 

i c h -* x {b p d t *■? r H- !•:.) ?«in ak ^ 

i f- < bvU-“ -:l ) rip r .i, nt f ( nurnbu-r : fU"kx-,q, !i v, 02 h , " , c.h ) • 

if ( (low] &?/ ( t -k ) ) opr i nt P ( nurnbuf f h- ( k/ 2 ) *5, "%04*x « ,! 

( w p i. n k r #t: / 2 ) ) , 

i f ( ( bw.l - - / l ) < k Z4-) 'X j ] •■•---*]::) ) nvnr i nt’.f ( numbuf f -r ( !i/4 ) x-9 , l! aCjSLk . 

x ( i 1 j a i n t p r h- i:: / 4) ) q 

i i : ( ( cbi< 04b)) i ! ( oh ) 0 1.76 i unp r i nt.aih X e •*/ 

nhb ui F f r Ifcroh 5 

a hb l iff C k II --0 ;; / * t ©r rn i n a t © <:•;f. r 5, nq v\) i i: h 0 / 

ap r i n t f (rrabr i nq , ,fc aOoLk bpra i nt err , nurnbu ff , chbuf f) 3 

v_q te;x t ( hnnd 3 © , w C wnurn 3 , x wor k4 10 , w l wnurn 3 = ywor k-<- j , st: r i ng ) 5 
i f ( ( bp a 1 nt pr—-h i 1 ita) ( h ill. i ke_on) ) 

{. t;crnp il O] — w [ wnum 3 * >s war k ; 
t prop t 1 3 T -w r wnurn 3 . y werr k-r j 5 
torn p ri 2 3 ~t e r n p ■> C O 3 ->■ 1 O h -6 *-q ], _ w c | - k ^ r | 

I: © rn p II13 3 -1 p rn p r t 3 -- q It Inch a r 5 






















nqtn 5 vtf* r.jt» *** * & ^ ^#* 

's^a&k&ik *:i • m 






















US&*:. • V.£f 




mMKSt 1 


' :^{> 'd.' 

: ’ »■* ~vfin-»f *'' »**"V 'jf i 7 ^ 
v . ••!*:{vv*t, *.>:t ,> ?;> 5* 

*<‘-^V—*> ■"*i*^C * f- *wayfc. tf£! 

4*5'vtt> . ^ 'W. V'' - *&&#&=*& * '.' *> 

' m. 

» *....-*- , •• *■"> . . • 


whiled (rnas k & evnt _. keybd ( ) ) \ -■■l .:>) 


C 1 OS EL’_ W i ( ) i 

show mouse() 


~e turn(1) 


s-a aaaa* a a a-a aa aa -s -a * -a -a--a a* a a -a aa -a--a-a a- a -a- aa 


rep 1ace 


/**********•********•****** aa aaa-a a -a-a a-* a a a a-aaaaaa aa* a* a* a-* a a* a-a a a a a-a a a--* 
rep 1 ace() 

<int stleng; 

1ong 1ow,high ; 

s>pr j ntf (t e_frtex t., " a 06Lx 11 , ]. b 1 ock ) ; 
spr i ntf (t estate,x t, " XOol.x 11 , hh 1. ock > i 
o_ok1.ob_stat ©^NORMAL^ 
o cane 1 » ob_stat e—NDRriAL ; 
bu11 on-d i aIbox ( ?/o_r-ep 1 acve, tl) i 
i f ( bu t ton -=~= fc) 

■{.ohop (t e_ subtex i.) 5 chop ( i:«■,_ st rt m >< t3 ; 
st 1 eng~str 1 en ( t.ip_ ( su.b tex t) " 

i f ( ( 1 st 1 eng ) ! ! ( st) eng 1 — str ] en ( to- '«rtr text) ) ) 

-C f a r m_a 1 © r t ( \ , 

11 C33 CThe length of the rep 1 ac^meni ■ dossft’t ftwvtch that of tha 
y again. 2 Cok1"); 
return(0); 


a-a aaaa/ 
t a a aa a a / 


if (g__ 1 ong (te_.frtext) '> low-total , e 1 so u-Cnurn_£\ I ort l) ; r.e L urn £ 0 ) - > 
i f ( q_. 1 onq (te_ totex t ) ) h i gh*=t ata 1 ; r? 1 sc? tnuin r _ a’U-'V V >\ ;rt?l-.urn(0) :> 
wi 1 dst r (t.e__strtext) ; 

wh i 1 e ( f i nd i t (t e__/st r t ®x t, wi Id, 1 ow, high, ?* 1 awl 3 
for ( k ”0 ; k< st ]. eng ; k++) 

■Caddr —law + k ; 
aaddr=te__subtext Li: 3 ; 

> 

> 

return( X )j 
.}• 

/* INSPECT 

i nspect(> 

•C if (hi U te_ on ) spr i ntf < t.e_frt ex t , " a06Lx '*, h i 1 i te) « 
e 1 se spr i nt f (te_f rt©x t, " X 0 «it.>< 11 , 1 b 1 opk > j 
o_nk2. ob_ stat.e~NQRMAL 
o._canc2 . ob_st ate-NQRMAL ; 
button—d i a 1 box ( i nsgoct., 2 ) s 

i f ( h 11 on ~~6) 

-C if < ( ! q 1 eng (t e__f r hex t) ) ) -Cnurn _a 1 ert ( ) r et urfu' 0 ) r. .1 
if (o_byte, o b s t a t e 2/ SEL E C T E 5) r e t -----1 ; 

:i.f ( o_wor d. ob_ state SEL,ECTED) ret~ f! 5 
X f ( Q_ 1 ong . ob^state 5,: BELECTEu > re h--0 j 
openrnw indow (t ot a 1 5 ret.) ; 
r et u r n ( 1 ) ; 

> 

r e f u r n ( 0 ) ; 


S' a a a- * a* a a / 


/ a aa-aaaa aa a a a a a 1 a -a a a# aa-aaaa a - a a aa a*a aa - 


s a a a a s a a a a a a k a 


/a fiU 

/aaaaaa a-aa aaaaaa aaaaaaaa a a aaaaa a a-a a a-a a x aa aaa a s a aa aa aaaa a a aa aaaa aa aa 
f i 11 (> 

11 ong 1 ow, hi gh , 1 t ernp "= 
sprint F(te_frtext, "X06Lx", 1block) ; 
spr i.ntf (t e_totex t, "X06Lx " ,hb].ock) ; 
o ok 3.ob st a t e-N□RMAL s 





















t-S* y* ?f x > 


k^SWv 

X • ■ -•■,•>'** 3 T : 


• - :. \ 


* • vt-**r?» •*■•-• w ri jrJ»/t»*»tKi i ''* 







BfPWS®'*: 


|r - • 




a 


Ye 

- 


• - 


i * 


&P* 




U_uWH -• . vTfTJ 

butt orr=d i a 1 box (?/o„f i 1 \ , ^) $ 

chap (te_©wtf tex t) ; 
if(button—“ 5 ) 

< i f (g.long (t.0_ f r te v t.) ) 1 ow-1ata 1 ; «1 *>»■ Cn 1.1m_«nI ©rt ( ) ; re?1.1...1 rn( 0) ; J 

if (<j_ 1 onq (t&_ta10x t) ) h i y h~!:o ta 1 5*). *s e •{nurn._.a 1 er1 ( ) s r©i:ur n ( 0 > ; > 

1.1 ern p -• 1 o w ; r e t - : - s t r'! on (t e_ out t; e x t ) ^ 

if ( (hi <jh -1 ow) < - 0) Cnurrw.\ 1 gr t () ; r*t lit fi ( 0 ) ; > 

i f ( h iqh-] dw > =- rpt > 

•{for ( 1 tamp- i ow; 1 tf?inp{ h i gh— r'st 5 3 t ainp+--:ret ) 

F 6 r ( j*-0 * ;i < rot v ,i +H-) 

{^ddr- ! t:€>! np <-.i 5 ad dr 1 -tp^subt »xt* j :j 

>: a d d r— ( * a d d r .1 ) ■ 

> 

> 

i'cr C j—O ; .j< -hi cjh- 1 temp ; j -m ) 

Caddr-- \ t ernp+ j ; addr 1 ~ t c__sub 10x t*i- j 5 
d cl v-=- ( * ac!cir:l ) : 

> 

> 

rc^: urn ( X ) 3 

i * * * * * ** * * * **• * *#* 45 - * -S- -X-■ -X X -X * i(- -* ■«- -X- «• -K -X * X H X **■*■**•*•#--* X *-«• * * *X * * * * -X -X * / 

** / 

*>**■# •«****« *«****s-s S-« *■* x- -«• -K jf-s-iiJ K-X'^i -X *-*■#* X-X-^-X «-«-S‘X X X**M* X>* XX MXXX X-XX-X X-XX**X X -x-x / 

ccrjp y ( ) 

{long i; 

sp r : nt f < te_f rtt, " YFjYl ?>. 11 , ] b 1 ock) ; 

opr i ntf ( 10__ tot ox l:., " %Oa'L.?- !! hb 1 C3ck ) ; 

opr i nt f i tjo_f r L + .f'X t. 5 :I '/.06Lx " , ] h ] a ck > ^ 

asPr 1 nt F < ts_t.0 1 t ox t, ” Y-Q 6Lx " 7 hb 3 . ock) ; 

q _ a k n . o b _ p t a t b ==r’ 4 G R M til 5 
o^c«i «4 . ob _ _ o t, a 1: o -1"J 0 T\ 11 Y-iI.. ?, 
buf,ton-' ; ci5 a 3 b cvx (£:o_copy, 2) ; 
i F ( but ton -“f>) 

Y i f ( b i o o I:: 2 ( ) ) 

if ( 1 b 1 ock'L'< - 1 b 1 oek i 3 

f or ( t- 0 | * h I __ ?. i ::<:o ■ i -MO 

f/id.-J r - l b ! o 1 d: 1 i- i , ad dr- \ i b 1 ock2-i- i ;; 
x -uildr J “ l <aeldr ) j; 


t? 1 >0 


f o r ( i = b 1 _ c >'i s •? m > - • 0 ; 1 - ) 

Cad£lr - 11 3 11 ick 1 ’Hr Jl 5 a(irrl r 1 ^ 1 b* vjc 1 ; 2 -i- i ; 
•x 4 tcldT i :_i # ad dr ) : 


return(J); 

> 

/ s- -X X < -v X -X- -X -X ft -X -X < X X -X * * * X X X **->;* S ********** X * * -fi -X * x s *• X- *■* X * * * * * * * * * * -**■** * / 

/* same ■ */ 

/********* #*-*■*****’ * ****** * X ******* X * * * * X ** * * * X * X *• X *-***■ x- * *■*-*•**•*** X ******* -****- * * / 

pame() 

< 1 nt vc.i. cant , 1 t) ,j ; 

opr 1 n tf (t f.s__ l : r t ax I,:, ' ! “/. 0 h L.x ' ! , 1 b .1 a c k > ; 
epr i nt f f t. e_t ol’.cx t, " VlOaLx ", 11 b 1 oc k ) ; 
op r i n t f (t op.fr 1 1 ex t , " '/, 06Lx " , 1 b 1 och :) ; 

©pr int:f (t. e_. t ol text, " V. 06 Lx " , hb 1 oc k) ; 

□ _ok 5 .ab tate-NGRMAL \ 
o _ ca n c 5 «c:ib^_s t. cs t c - N 0 R M A L s 
b u 11; a n dial box ( ?* o _ s a i n e ,, 2 ) ; 
if (but tow-^6) 

Cif<block2()) 

Yvacant-find_vacant() ;jf(vacant< 0) Cwind_aJ ert() ; r eturn(0) ;> 
h i,de_rnaui3e ( ) ; 
o p c- 1*3 __ a 1 .'! i ndo '-*j ( v a o ant) r, 

1 .. . 1 «i 




H.* V.^c. •. V 


y*L\ ■': , p; 4 inStjXtft' 




y.Vv-rt./*** 












































i ' i*fflfjfn ii(j i ^ 11 ( ^ I • *<' f» -'?/ * f "^r'- •' V> ■ ‘-‘•Vr** < “r :*' 

'Jp&>=«* •*«.lyMSpi 

. - • * •« ..*• . ■• .> '-■ - 

' 




X 


fWHRSSft 




. 


»-or ( j ~-0 5 i ( h ] i ze ; H-+) 

<<U;ddr l‘ : 1 b 1 oc:l< 1 -i- i ; addr-= J. b 1 ©ck2 + i ; 
i f (x*addr 1 ! =« ( addr)) 

■Cspr ihtf ( str inq , 11 7.06Lx_’402x . . . 7.06U<_7.02x " ., 

addr, * aeJ|jr & ffo-as k, addr 1 , xaddr :i & rn«isk ) 5 
v _ 9 te 0 x t ( h a nd 1 e, w C t op w nu m D . x wof k *10, w t t op wnurn 1 „ ywork + .j, string) 
jas j *• q 1. Jin ehar ; / * If :j > w ttop)wnurn 1 . h wor k the? a ptput will 

defenestrate. Svta pray rioter */ 

v_cjteo< t f hand 1 m , w f. top wnurn H = x wor k >• 10, w II tapwnurn 3 . ywor Iff .j , 
l! pr*?«5S return to continue ” ) j 
wh.i lev (mabk & ©wit 1-3 ft* y be l ( ) ) '-l 3) :; 

> 

> 

b \ ooe__w i \ ) } 

'£how_rnausss ( ) ; 




return( 1 ; t 


/XX*-X-X******X-*X*-X-*XXXXX XX «' « * s-*X it X ***•-*»; it * it- XX* X -X- ft -x -X XX-X*****-*-** X- X- X *x -x xxxxxxxxxxx* / 
/ * d 0 f i 11 e 1 a I :>») * / 

/ x-x-xx-x-*■*•** x -x xx-x -x- tr jfx-x*^ x* ***• a xx-x ***•»* x *-*■•*•**• **x x x-xx-x-xx x-**xxx-*x*x x *********** / 
def_1ab() 

f0 _ o k* ob t a % eN ORM 01 .5 

Q_i::jnc „ ob at e-NORMA'L.; 

pui:tnn--dialhox C1 ab , 3:) ; 

.i f- ( b u*h t? o n - - A-) 

<11* I 1 q_ l nnq r t ©_%Litrt t-? k l ) ) retvvr n v 0 ) : 
chwp C11? _ 1 ab t ®k t) ; 

fi t r op:> y (t E?rnp 1 -:\ti. l ^1 tn* 1 - +:.t #>_\ at.i t t.) r, t e?inp 1 ab « va 1 uo—’tot. a 1. 5 

acid_] Jib# ], I^d'.emp ] ab ) ; 

> 

re turn( 1 > 5 

> 

/jpf-R-X-X-X-s-X-***^: X ■*£•** -X •<(-»*««-* X X *•**•**<*•**-* * xx-x-x x-«x**x--x-xxx-xxx**x-xxx-xx--x*x-x-x-x-x/ 

/* .load a new hex file */ 

/x x-x-x x-x-x-x X X *X X X X X * X -f * X < X -* n X-* X X X X X X X s. X X *X X X X X x-x X-X X X -xx x x-x-xx x-x xx-x XX-X-X A M X XXXX*XXX X/ 
load_hL-'K ( ) 

if oe 1 n fi ft t ( r*_i in fa at h , f 1 m:-e ] , S<f «r^«x it); 

/x I. n a cl Hturg* an >.1 r «-;i e? t 1 b 1 o c: k , h b l o c k * / 

ro-tu'r n ( 1 ) « 

> 

/ X XX X XX X X X X XX XXX X XX X X X x -X * XX- XX * X *X X X * X X X X x xx-xx * *- xxx- a xx-x-xxxx- x x-x-x-x-x-x-x-x-x-x-x x-xx-x x-x x-x / 
/ x n \ nciovn J& t ,3cL op er a t i on m * / 

/x-x-XX-XX X-X n-X X-x X A X-X * f- x X X XX• X it X-X X * X X X X XX X XX X X X * X X X- XX K X X X X X- X X-x-x x-x x-x- X xx-x-x-x XXX X- X* XX- XX-/ 
ro 1 o « 0 __ 1: r: p _ o i n rJ v? ^ ( ) 
t i nt i ; 

for ( i ■ - 1 ; i v ^ ; i h- +) 

r. t a c k C i - 11 « a t a c- kill; 

> 

/X-X XX- X-X X-X- <-A X X X"*x X * S X X ft XX XX X X X X XX'XX-X- X X x-x x-*x x-x-xx X x-xx-x-xx X-X-XX X-* XXX XXX XXX XXX X-X XX X X X-/ 

tapper (wnurn) 
i nt ism urn;; 

-C i n t i , ii 

i f ( wnun 1 ! "itac 1 ■■ L 0II ) 

for ( i -1 ; i, ( wi nd count; i f + ) 








( wnurrr^-iiit act: til) 


tor v j ■=- i ; d > 0 ; j —) »t a c k t. j 1 -stac k t j -1 1 5 
■■j tael: tOl -wnurn ; 
r«turn: 


xxxxxxxxxxxxxxxxx-x-xxxxxxxxxxxxx-x xxx x xxx-xxxxxxx-xxxxxxxxxxx-x / 


ne?ww 1 nd ( wnurn ) 
int wnurn: 


met 










%-U- 


mi 




v. 


























.^-a .*.. r.vAxc^'- . • : ■■'.-• i- 

-.>V - • . -•^i. * ____ — - -C. . . - < ■ , . -J- 




for 


( i =»3 5 i > 0 ; i*—) 
st jack nil -s Uc k r_i -1 J § 
r.tack CO] -wnum ? 


/ ft! * ft -x- * * -S' ft * ft 'A ft ft * ftt -ft ft ft M* -X * ft ft- ft ft ft ft- S' Jr S'ft -ft ft ft ft -ft ft S' ft ft -ft ft- ft ft-ft ft -ft 'ft-ft ft -ft ft -ft= ft ft ft -ft- -ft -ft ft -ft ft -ft S' ft- ft -ft- i 


i nv_.(20 lor (temp ) / * l i nkfc'r ''loG-ni 1 t 1 ike 1 : h :i © , 'tea i t ’ s d i sab 1 ed * / 
j.vt -ft temp 5 
€ 1 a i i <5| 1 I: e m p - 0 x 0 L ; 
h :i do_mou.se ( ) ; 


vru^cpyf rn ( hand 1 e, :l 0 ,, t amp ,, ?/ 3 tamp , & 11 amp } 5 
s h cjw^rn a a s e () ; 

3 


/ ft -ft ft -ft- ft -ft- ft -ft- -ft- -ft- ft ■;< -ft- ft "ft ft ft 1 -ft* ft' -ft* -ft -ft ft ft ft -ft ft ft- ft -ft ft- ft- ft -ft- ft ft ft ft -ft ft ft ft ft ft ft ft ft ft ft ft ft- ft ft ft ft ft ft ft ft -H ft ft- ft ft ft- ft 1 ft ft -ft ft ft* ft ft ft -ft ft / 

/ * 3 ac-atar . deals w i kh ©w rs5or p r ssb i ri 1 n>emory w i nd ow * / 

/ft ft ft ft ft ft-ft--s-ft -ft ft ft ft ft ft- ft ft ft ft-ft ft ft ft -ft ft ft ft * * ft -ft ft ft ft ft ft ft ft ft ft ft s ft-ft ft- ft--ft ft-ft ft- ft ft ft ft ft ft ft ft-ft ft -ft -ft-**-**** ft -ft ft -ft-* ft ft ft / 

i nt j o a*t or ( ) 

< 

a h a r -* a d d r 1 ; 
i nt: k*y.„ hi t 5 
i nh chi'T-itart ; 

i nt hax st r <art =- LOft-q! _ujc:h-Ar -ft -fi; /« rr: 1 » K—coord of 1st hex */ 

i nt wh ich>.:o 1 wh i<-hb l0ak < wh i allraw , i nhox , 1 a«'tcca 1 vis, ] asthcalvis; 

i nt b w 3 , d i q j t *,: 

b w 3 -- v-j C t 0 p w n u. rn . 1 . b w 1 s 
d .1 g i t, 1 *7 5 

cha r start- 3.0+ 9 J jwc.har ft < 3+ i C bytes„per^ 1 i ne) /t.)w 3 ) * Cd iq i ts+ 1 > > ;/* x coord of 1 st ch 

c' 1 Y' * / 

po_char -- rnx — w C t op) wnum ] * x work— char start ; 
if (po^ohar ‘>^0 ) /* then no a char ft-/ 


•£ 


eJ s 


whi i c h c c 3 - v po^cnar 3 ,/q 3 w^bar 5 
wh i. chb lock ”wh i ch co 1 / b w I ; 
i vihex * ( wri 1 cd teo I VU'Ag L ) ; 

if ( wh i. chcn | )- r -b yt e4>._per* linte ) rf?t'urn(0) ■ /^beyond the line end */ 

> 

/ft pn a hex „ Now era 1 cu 3 a t o? wl'iiah b/w/1 b 3 cc'k is being pointed to */ 
f wh i ch lo 1 osck*- (rnx ~w C Wruim j „ x war k ~\ 1 ax c t a r f ) / ( ( d i q L L s +.1 ) ftq 1 _wchar ) 5 

\ f t ( i nhex-- ( f rnx - w [. t op wnum ] * x war k - I icx a I; a rt ) a, ( ( cl i q j t s-i-1 > ft g ] wcha r) > / g 1 wchar ) 
>-- : di-qf l:*3 T < r^iiiirmrii ■ /*or> an interhex space */ 

mh i chco 3 wh i oh b 1 a*': 3 : * hw I *f 1 nh/ 7 ; 

> 


wh i 

i f 


civraw- (rny-*w C t opwm, irn . 1 . ywork) /q 1 _hchar ; 
i wh i ah b \ o c k < 0 * / * b e f ore he x v 1». 1 m css , sc» hi] i t e 

ft 3 r ba c,I y i n t h i s window 0 hihu ].. d 
( nat i mp 1 emant ecj, y«H; > 4/ 

ih i 1 i t o—w ft opwm.im J » loc+wh i r h r o w * b y t o :;_per l in a 5 
h i l- i t e _ an -TRUE ; 


the 

bs 


t crop l 0 3 - : w C t opwni irn ] . x war k 

hemp L 1 ] »w C tapwnurn j . ywork fwhl i dtlrowftg 1 __hchar 5 
t amp l'2 ] = 5 temp Cu] +1 Oft 6*q 3 wchar ; 

1 0? rnfi Z 3 j - ::: t p 1 n p C 1 j #* g I _ 1 1 c h a r 5 
inv co1or(tamp); 
re turn < 1 ) ij 


.1 


addreSBn Any 
do—hi1ighted 


hi 1 ite 


/ft now cfilcu] ste the; address of location pointed to and coords of corresponding 
< 5 c r e e 11 c h a r acr t >. ? r s. -ft / 

if ( po.,char > “0) ^ddr 3,—w Ct opwruirn ] . 1 oed wh i. chrow ft by te 5 i__p)er _ ]. i ne+wh i cheo 1 ; 

e .1 addr 3 - : wC t ojpwnyrn ] , ] a d r wh i c:h r o w*by t es__p er _ 1 i ne +wh i chb 1 ocl=: *bw 1. + i nhex /2 ; 

xhex~ w C top wnu.rn 1 . xwork+hexstart + (d ig its ft- 3 ,) *9 I jwc:har*wh i rhb lock+i nhex-ftg 1 _wohar ; 
x char - w C t pp wnurn ] . x w ar 3 : tchar s t a r i: + g 1 __wchar *wh i c:hc:o 1 ^ 
yhex-w Ctopwnurn] . ywtjrk+(whichrow+l) *91 hi char ; 
ychar—yhex* 

if <po^char > - 0 ) po__cheir• T'F<UE: 5 e 1 se pa_rrhar = F"AL SE 5 
h i de_inousf3 ( ) ; 








































*rvow c: 


' 1 ]. n'o -• .1. , 

iurn II . wwgr I-;: 
■Iine/bw] 
ii.im .i , wwor k 


a st h ca ] v i &*=rn i n ( b y t 


JARROW 


WCir |: 


'pwnurn II. hwor k —q 1 ,_hchar ) 

• u r c i: j r ( ) ; a d d r 1 + -- b y t ©C5 __ p 


< > ; ,v c'h ar t-9 l^wchcir ; cursor ( ) 
?.) -ilx hex -tc| j ^wchar*2 • i nh gxh-~ 
vchjsr ; i nhex>-O ; wh i chb lock +■+ ; 


iv h 


v n n 


< i f (rsi h i chb 1 Qck< 1 asthen lvis ) 

{cursor ( ) >< liex + 

cursor(); 
wh j.ohb 1 ock-H- - 


wcharsinhex =0 








































wh ic?hco1 ++ 5 xch t rr+=g 1 wc har ; 


break 5 

case LARRQUI : 

if ( inhex ) Ccursior ( ) j_xhex-3=g 1 . wch *r . inhpi>< . 

cursor()- " 

•i f (l n h (4 x X 2) 

1 1 -5^ ; xc,h^«. g ,_ wcha ^. , 

61 S ° '' * ' ‘ WH * Chb 1 ° r;k5 * cl,r «r <> i «►>«*" 7« q ■!_ Mch *„ , , r)h „„^ . 

Wtf i chh 1 Cj i;:; k --- - 
#ddr j . 

wh i f'hecj] -~ 5 xc,-ft; l r-.= g] _ wchar - 


breakj 

case UARROW■ 

if (yheK-wttopwnurn]. ywork 4 . q i hr | rir -) 

ft: ur stir () ; yh**-* g (> - Wdrl . 

yohar q i hchar : 11 '' ''' u >'i i n* ; 

> 

b r e a k ; 

case DARROW: 

ychar+.^f heh # rf lH ! «?"> 1 +-=byi ;t »5_p e - r _ U n „ . 


valid hex rhar */. 


break; 
default: 

next three lines change memory if the Input i< 

I »f * terrpC2]»val (key^hit fc ma5 k) ) > , ' 

xnhex /. 2 ) <ter*p C03-240itemn r 1 l -1 ■ w i . ,, 

^ VT ^ rl * temptoj): ^ > 

if t whichco1< =]asteca1 v i s > /* if t hn 

<ch-< *-addr X) ; ^ “ ‘ ' 1 m ^pona ] ng char act&r */ 

i F < (ch( 040) ! ! (ch>0)76! > ch = ’ */ 

wtf IngCd^ch 5 string c i 3 =o * ~ * 

} V - 3tel< t < hand 1 e, x char , ych-ar , str 1 ng > , 

sprintf (string, "y.Ozix", (**,cl<arl >S-rnn-,k) - 
cursor ( ) ; .. 11 

cursor'll 1 - wchaM ( i nh*xX2> , vh,,,., Bt r i ng, , 

iff i nhex< d i si t-1 > Kcursor (,,x hex *-g, nehsr « i nhe* -u,- r 
Curator ( ) ‘ ' ‘ i 

iff! C i n h o x /: 7{) ) 

,. ■ iad drl^ i-iwhjchfcijH. ! ,xRh«rt-»gi wcfl4(r , > 


else f ifi w hichhl n ck( ]««thcolvis) 

Cursor ( ) !Xh e x-KJ.*gl wchar .; inl,ex=0; 
r:u r (5jp r (i| ' * a 

wki i chbl oc-|.;4 -|. - 
ati d r L .W; 

whiehefl]+ + ; xchar-k-g h pr fc 


ire a k 


} /« end switch on ret -* / 
> / *• end while */ 

Jh^or ( ) ? 

^^rnause ( ) ; 
tMrvi ( j ) ; 


V^ i', v' 


« ”* J. . / *• •»'? 

9 A: ' . , 


: 

■ 




;l, if >*£•’?- L > 

h »■»" • t 

' r . .. 




r Hi 




•V. 






^ ' '- r - *<- « v,-;.*/*:“ 

. 




t 

|P?WSvK^2? V-• •,pf* M^¥> 1 


m 


‘ ' • *'' J C h • • ^ • . . 

1* ^- - -i ^ X.\, |,4=. .ill'ji»*y 

'■■■■• . ■■ . - . 


_ _ _ " " " ‘ *r • r ‘ 

. a We . ; . y ( • .^r _ .; 

,_C >.. .... fd . * ' **■ T"!* 














***?«*• 




































- v»' 


*&«&«£« 


^^^i****^*** **mm mw&i 






























'•&'}*?' • & ’’ •' * : v.'-. ‘y, -m 

«'• byS^i*^ » ^1 Viy,..'.'l^C* ~ 7 ?r ’,4 j< 


. *•' * ’ i-Vi*^ 1 




I 


{ ± • = : n o_o F ^ 1 oi ft ?i ) 

< s t r c: p y ( 1 a b o l'sf C i 1 ! „ ] a. b »I, I a b ar 1 s II i - J 'I . 1 a t)e ] ) « 

.1 abe 1 s [ i J . val us = 1 ah01 s [ i ~ 1 11 . va Hue j 

*trcpy ( ] absl s C i —1 ] n Label , t,ernp_ 1 ab’- > 1 #tb«s I ) 1; 

1 abt? 1 s t i - 1 li „ va 1 ue^l-, 0mp _. 1 ab -- > v« 1 u 0 j 

> 

>0 OF or ( j -rio^a F__ I ahs ; j > i 5 j*— ) 

• < strcpy < j ah 0 I -$C j j . 1 abs I , 1 abs 1 « [ j - .1 1 „ labe li ; 
1 abe 1 0 C j 3 ,, va lu»- 1 alow 1 . s F, .j — JL li . v$ 1 i.ua-? 

■j. 

s-trQpy ( 1 a bo] s r j. 'j . 3 , t*smp H lab’**) 1 a be? 1 ) ^ 

X ab 01 s F i J > va .1 uer*- t, crnp 1 , a. D --■ > y a 1 afe ; 


3 

rsbu/rn ( 1 ) 


/**•* *** **** *-X -X X--X *** X XXX -X -fr-fi X * * s X X fr*** **■* X X-X X X -X ***** -X * -X * -X * X X * -X -X -X * ***** ***** * * ***** / 


&;> 4 i «*4K r /^J^rt£fTM 


/* truncate shr inq, r-singvinq all the under 1 in© characters 

/***►**■* X * * * -X * ■ X ***** * ft * R ********** **•**• X * * * 

oh o p (pah r :i. n q ) 
char * pstrinq; 

-Cf or ( i -0 ; 1 < h 5 i t-O 

i f ( * ( p«rt r i nqa J, ) --- 1 _ ’ ) l M (p at r j.nq* i ) --<); iarel{ ^ > 

} 

/**■**-* *■*-*'*• * * * ***-***** * :< * *-** X- X ******* *'-A * X-X-* * * * *-j 

A * caynt t h 0 l ab 0 1 -?5 

/** x * ****** t * ***** *• x x.** ******** x** ** * ****** * *** ***** x * x * x * 
coi.m h__ labp'^s ( ) 

</* chsKjfr thru label as unt. i 1 a labnj ' ~ ’ — j then r state t no_tjf _ 1 aba 
for ( i. : --0 t j < UhF;. ! .OtiOTH ^ i h-h- ) 
at.r ) nq F i 3 zr 2 hr:*, • 
strinq r i J-■ 0 - s 
for < i -40 sj j < rIPiXLfVBO ; i -t-iv 

if C istrernp ( at r i viq l|tb*» I -'• [in. 1 ) ) -Cno^of _J abs r ~:L 5 return; > 

[ f you rr?«.c;h h«r« you’ v« hn,<j i i; */ 


*/ 

t **-* ******/ 


<■*****/ 
*• / 
(* / 


/ * * * ** * X * *■*•* * * * * * *•* ******* ******* ** * X ** * ** * X ■*** * ***** *** ****** **** **** * ** *•**•** / 

/* cursor . Show/eraee the cursor */ 

/*-* ****** ********** *S< * * X * * **** X ********** * * ** X ** ******* ********** ******** ***** / 

cri.ir sor ( ) 

X v%wr _rncjd 0 ( h ancl 1 «e, -3 ) ; / * v< or * t 

vs F ,i n i: 0r i tor ( 1 1 ant 11 1?, (J ) ; / x ho 11 aw * / 

i f C ptpehar) { 1 0rnp l 0 11 x c i h-or 5 1 :0rnp 11 d ych»:-\r ; 

t.omp [ 2 1 ::: x r.lier -1-9 1 or 5 1 ;omi.i 113 1 --ychar -g 1 Jichar ; > 

0 1 tv-«} C t fr.-i rnri F;0 3 *= k h c.?H j’t 0Ui p F 1 1 ■- y l i 9. x ; 

t orr.p f. 2 11 -->< h ox i-q 1 wch ar 51 ernp II31 - y h tea---a 1 _hch ar ; > 

\y_h tirr ( hand J ?>, ternp ) “ t 
vcsi^jr __rnod0 ( hanri 1 0 , 1 ) 5 


- 1 


/*•***•** X* ***************** X X-** ***• X ********* X * X X* ************** ******* *********/ 

/* Calcul ate rnurnora. tor * 1000/donorn i nat.ar car t?f u 1 1 y*/ 

/**-** ************************* ******-*-*-*••* ********** *************************** « / 
i nt f r a ction( no rn or a tor,, d onorn i n a tor ) 

1 n t n l trn0r a t or, donorn i na t or 5 
■C 1 cony t op ~ num‘d r a to r , Loot, tom-d® noinn nator " 
i n t an s wer= < 1 00 * t o p ) / b c j 11. a m 5 
return(max(an bo or,1))5 


(»■****»************■«■»■ 

/* a lords * / 

/*■#*** -X -X -X X ***** ^ * -X -X X K *** *^f * X--X**0i * **** *-x -x -x ***-) 

nurn_a 1 ert: ( ) 

f f arrn_alert ( 1 , " C33 C label misspelt or number wrong, i Please try aga i n 3 Cok 11 " ) 5 > 


wind alert() 







.... . V. . ... 

% I• 1 '♦*V: v^ i t »«3 '3*,> o l.^r r♦ •.-tgJj* ;',‘ ^v-V ^ 

I -?3 

i 


I 

-v.'JrtqlN 


: V/ U-'F 


itojMptt r~~ 1 "Vi^infn rWti^'-i 


























































