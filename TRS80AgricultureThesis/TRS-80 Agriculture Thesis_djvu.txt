A MICROCOMPUTER BASED FINANCIAL RECORD MANAGEMENT 


SYSTEM FOR PRODUCTION AGRICULTURE 


by 

William Scott Watson 


An Abstract 


Of a thesis submitted in partial fulfillment of the 
requirements for the degree of Master of Science 
in the School of Applied Sciences and Technology 
Central Missouri State University 

November 1982 

Thesis supervisor: Associate Professor Richard Tabor 






As profit margins for agricultural products become narrower, 
the successful farm operator must maximize the efficiency of their 
management techniques. While carefully maintained manual book¬ 
keeping systems can help identify weaknesses in. the farming en¬ 
terprise, the labor intensive nature of these systems rarely insures 
the timeliness of the information they produce. The scope of this 
thesis is to interface existing farm management financial record 
bookkeeping systems with the ease of use, dependability, and fast 
processing speed of a microcomputer. 

While no original bookkeeping principles were utilized in this 
software package, certain abilities were incorporated that are 
generally considered too time consuming to be practical with manual 
bookkeeping systems. These abilities include: 

1. The ability to manage and report information for 
more than one agricultural enterprise, 

2. The ability to manage and report information for 
more than one bank account. 

3. The ability to manage and report information for 
more than one farm operator. 

4. The ability to collate various bookkeeping infor¬ 
mation to produce financial end-of-year analysis. 

5. A degree of user friendliness that allows untrained 
users to operate the system with confidence. 

6. Only information important to the user is displayed 
on the video screen or lineprinter. 

Complex data and program manipulations are not ap¬ 
parent to the user in order to avoid confusion. 




The package was written using Disk BASIC computer language 
on a 48K Model I TRS-80 microcomputer with two five and one 
quarter inch mini-floppy diskette drives and one parallel inter¬ 
face eighty column lineprinter. 


Abstract approved 


: QLJUl 

. 


LLzlzl^ 


thesis advisor 
title and department 
date 





CENTRAL MISSOURI STATE UNIVERSITY 


WARRENSBURG, MISSOURI 


This Thesis for the Master of Science Degree 

by 

William Scott Watson 


Has been Approved for the Department 
of 

Agriculture 


by 

HU 


November 1982 










A MICROCOMPUTER BASED FINANCIAL RECORD MANAGEMENT 


SYSTEM FOR PRODUCTION AGRICULTURE 


A Thesis 
Presented to 

the Faculty of the School of Applied Sciences and Technology 
Central Missouri State University 


In Partial Fulfillment 
of the Requirements for the Degree 
Master of Science 


by 

William Scott Watson 
November 1982 


CENTRAL MISSOURI 
STATE UNIVERSITY 


WarrensburQ, 

Missouri 









Table Of Contents 




CM** 

/?*£ 


Page 

Acknowledgments. iv 

1. Microprocessor And Peripheral Operation ....... 1 

2. DOS Operation. 9 

3. Program Overview. 12 

4. Program Operation . 15 

Appendix I: Program Listings. 20 

ANALYSIS/BAS. 21 

BACK/BAS. 30 

CBMEBF/BAS. 34 

CGPBLSD/BAS. 41 

CGRBL/BAS. 49 

CONFIG/BAS. 57 

DEPREC/BAS. 80 

EDITOR/BAS. .. 89 

EXPENSES/BAS.101 

FINVEN/BAS.114 

FISCAL/BAS. 123 

INIT/BAS.127 

MASTER/BAS.132 

MINVEN/BAS.139 

NETWORTH/BAS.149 

RECEIPTS/BAS. 164 

REPORTER/BAS.177 

RINVEN/BAS.. 188 

SUMMARY/BAS.197 

Appendix II: BASIC Command Cross Reference . 210 

ANALYSIS/BAS.211 

BACK/BAS.215 

CGMEBF/BAS..217 

CGPBLSD/BAS.220 

CGRBL/BAS. 224 

CONFIG/BAS.228 

DEPREC/BAS.236 

EDITOR/BAS. ..240 

EXPENSES/BAS.245 

FINVEN/BAS. ..250 

FISCAL/BAS.254 

INIT/BAS.256 

MASTER/BAS.259 

MINVEN/BAS.261 

NETWORTH/BAS.265 

RECEIPTS /BAS.270 

















































Page 

REPORTER/BAS. 275 

RINVEN/BAS.279 

SUMMARY/BAS. 283 

Bibliography . 288 










Acknowledgments 


The author wishes to express gratitude for the generosity 
f time and wisdom from the following persons: 

John White, president, Computer Analysts 
John 0 T Hara 
Tom Lewis 

Dr. Richard Tabor, Chairperson of Department of Agri¬ 
culture, Central Missouri State University 
John Watson 
W. L. Watson 

Joe Rowland, Department Head of Agriculture, Moniteau 
R-VI High School, Tipton Missouri 
Vernon Hester, president, Cosmopoliton Electronics 


Bill Lisica 




1 ) 


Microprocessor And Peripheral Operation 

The software presented in this thesis is designed to execute 
in a specific hardware environment. While translation of the 
software and substitution of the hardware is certainly possible, 
the following is a list of the necessary hardware to insure proper 
operation of the software as presented: 

1. Radio Shack TRS-80 Model I or Model III microcom¬ 
puter. 

2. Parallel interfaced eighty column lineprinter. 

3. Two double density, single sided, five and one quar¬ 
ter inch mini-floppy diskette drives. 

The TRS-80 microcomputer utilizes a Zilog model Z-80 micro¬ 
processor as its central processing unit. The Z-80 has an eight 
bit data bus and a sixteen bit address bus, giving it the capacity 
to address a total of 65,536 eight-bit bytes. The native logic 
of all components of the TRS-80 is binary (or base two). All pro¬ 
grams executed by the Z-80 must be encoded in memory as binary 
information.- - 

Binary information, while inconvenient to humans as a number 
system, is essential to all microprocessor applications. In elec¬ 
tronic format, the numbers one and zero are represented by the 
presence or non-presence of electricity at a given instant at a 
specific location. For purposes of nomenclature, a location which 
may contain a one or a zero electronically is termed a bit . By 
placing bits side-by-side, a larger number can be represented. In 
order to convert binary numbers to their decimal equivalents 








it is necessary to understand how the binary number system op¬ 


erates . 

As an example, suppose a four-bit binary number exists in 
an electronic circuit with a value of llOl^ (the subscripted 
number implies the number base of the numerals; in this case, 
the subscripted '2' shows that 1101 is a binary number). In 
order to convert this value to decimal (base 10) equivalent, 
each bit must be converted to decimal individually. First, 
consider the decimal number 2,547. If this number is dissected 
one digit at a time from right to left we find: 

7 X 10° = 7 

4 X 10 1 = 40 

5 X 10 2 = 500 

2 X 10 3 - 2,000 

Therefore: 2,000 + 500 + 40 + 7 = 2,547 
If this same process is executed on the binary number above: 


on 1 

1 X 2 2 
1 X 2 3 


= 1 
= 0 
= 4 
= 8 


10 

10 

10 

10 


Therefore: 8 4-4 + 0 + 1 = 13 


By observation, the largest number that four binary bits can rep¬ 
resent is 1111^ which would equal 15^. As mentioned earlier, the 
Z-80 has a data bus of eight bits. The data bus width limits 
the largest number that can be passed to or from the central pro¬ 
cessing unit (or CPU) at one time. This places the numerical 




range of the Z-80 at 0^ to 255^ (since llllllll^ equals 255 ^q). 
The address bus determines how many memory locations can be 
accessed by the CPU for passing data. The sixteen bit wide ad¬ 
dress bus of the Z-80 allows up to 65,536 locations of memory 
to be accessible by the CPU. Again, as a matter of nomenclature, 
the number of bits assigned to a memory location is termed a byte . 
Since the data bus of the Z-80 is eight bits wide, it would be 
inefficient to use more or less than eight bits per byte. Thus, 
the TRS-80 uses eight-bit bytes as do nearly all other micro¬ 
computers. Progressive technology in the microprocessor field 
has produced a new generation of microprocessors which have a 
sixteen bit data bus and a thirty two bit address bus. 

Memory can be defined as simply as a large collection of 
bits. It is up to the microprocessor to use the bits intelli¬ 
gently for storing data. In the TRS-80, memory is arranged in 
groups of eight bits, each group given an identifying number, 
called the address . Addresses are assigned in a sequential 
manner, beginning with memory location zero and ending with 
memory location 65,535. It is important to note here that memory 
is generally referred to in quantities of 'K'. While 'K' is the 
metric system abbreviation for one thousand, in computers 'K' is 
given the closest binary equivalent, 1024 (which is two to the 
tenth power). Therefore, we would refer to a computer having 
65,536 bytes of memory (64 X 1024 bytes) as a ' 64K' computer. 

Even though memory is given sequential addresses, the GPU 
does not have to search through the first 42,000 bytes to find 
the value of address 42,001. By simply placing the binary 










4) 


equivalent on the address bus (42,000 ^q = lOllOllOOOOlOOOl^), 
the CPU can access the contents of that address directly. Be¬ 
cause of this characteristic, this sort of memory is termed 
Direct Access Memory , or more commonly, Random Access Memory 
(RAM) . 

When power is first applied to the microprocessor, execution 
of an assumed program immediately begins at address zero. If no 
deliberate program instruction has been placed in this memory 
location the microprocessor will execute whatever random instruc¬ 
tion does exist, and will continue to do so sequentially through 
memory indefinitely. 

The Z-80 microprocessor has an instruction set of over 500 
commands. While this may seem a large number, each command per¬ 
forms. a somewhat primitive action, such as a branch in execution 
address, a simple addition, or a test of a single bit. Instructions 
exist as a series of one, two, three, or four bytes, depending on 
their relative complexity. For example, a single byte instruction 
is 00000000^* This number refers to a specific instruction called 
No Operation . By the value of the first byte, the microprocessor 
knows if the instruction is a single byte instruction, or if further 
bytes need to be loaded to complete the instruction. Data is placed 
in memory the same way. Since the microprocessor cannot differ¬ 
entiate between program Instruction bytes and data bytes, and error 
in program logic can cause disasterous results- causing the CPU 
to execute data values as if they were program instructions. 

Program instructions that can be processed directly by the micro¬ 
processor comprise an instruction set referred to as machine 
language . 











Obviously, coding a machine language program by hand is a 
tedious and error-prone chore. The first high level language 
was written in order to solve this problem. In this language 
the individual instructions were given abbreviated labels. In 
the case of the No Operation instruction (00000000^), the symbol 
NOP was assigned. Since these labels are easier to memorize 
and use than groups of binary digits, programming time was more 
efficiently used. Since the letters NOP are meaningless to a 
microprocessor, it was the duty of this language to translate 
these instruction symbols into their meaningful binary equiv¬ 
alents. This language was termed assembly language , and the 
actual program that did the translation was called the assembler . 

Even though machine language instructions execute at incred¬ 
ible speeds (on the order of nanoseconds in the TRS-80), it is 
very difficult to write machine language programs because of the v 
primitive nature of the instruction set and the inconvenient- 
manner of numeric manipulation. The simple concept of floating 
point decimal numbers can take thousands of machine language in¬ 
structions to emulate. Therefore, it became necessary to construct 
even higher level languages. Examples of these languages include 
FORTRAN, COBOL, and most recently, BASIC. 

These languages became popular for several reasons. They 
were more English-like in their instruction sets, they performed 
difficult tasks with few commands, and they reduced the time 
necessary to train programmers. Even though these languages 
execute slower than pure machine language programs, it takes 
much less time to write the program and insure that it is 
operating correctly. Each of these languages is nothing more 





than a computer program, designed to translate groups of sym¬ 
bols into machine language instructions. 

Whenever electric power is applied to the TRS-80, a program 
called BASIC is immediately executed. This program is stored in 
a special non-volatile type of memory which has been addressed 
to the lowest 16K of memory. While random access memory loses 
its contents when power is turned off, BASIC is permanently 
burned into a type of memory called Read Only Memory (ROM) . 

ROM does not lose its contents when power is turned off, and the 
contents of ROM cannot be changed once a program has been elec¬ 
trically burned into it. Thus, the TRS-80 operator does not 
have to learn complicated power-up procedures or key in BASIC 
by hand each time the computer is used. While it does limit 
the amount of memory that can be used for programs, it is a small 
trade for the convenience and power of a high level language such 
as BASIC. 

It is for this reason that confusion exists about how much 
memory a fully expanded TRS-80 contains. A fully expanded TRS-80 
is usually sold by the label ! 48K f . This refers only to the 
48K bytes of memory available for user programs. Including the 
dedicated lower 16K of ROM, the computer actually contains a tot¬ 
al of 64K bytes of memory. 

RAM and ROM are not the only types of mass storage available 
to the microcomputer. Indeed, it would be unfortunate if a pro¬ 
gram would have to be retyped into the computer each time the 
power was disconnected. The most popular forms, of mass storage 
for the TRS-80 are cassette tape and mini-floppy diskettes. An 
additional mass storage device would be a lineprinter. Even 






though information cannot be reentered to the computer from a 
printout, it is a valid form of information storage. 

The electronically simple processes of operating a cassette 
recorder and lineprinter are actually short enough to be included 
within the BASIC language. The more elaborate mini-floppy disk¬ 
ette drives require so many instructions to operate that a lan¬ 
guage separate from BASIC had to be written just for the use of 
the disk drives. When BASIC first begins to execute upon power- 
up, it electronically checks to see if a mini-floppy disk drive 
is connected to the computer. If it finds at least one disk 
drive connected it begins a special program sequence. If it does 
not find a disk drive connected, BASIC continues its power-up 
sequence as normal. ‘ 

The special program sequence executed when a disk drive 
is detected is known as a boot sequence; a term derived from 
the phrase "picking oneself up by the bootstraps". During the 
boot sequence, execution of BASIC is aborted, the disk drive is 
turned on, and a special program called the Disk Operating System 
or DOS is loaded into the computer and executed. DOS (pronounced 
to rhyme with boss) contains several programs designed to fully 
utilize the capabilities of the mini-floppy disk drive. 

In addition DOS contains a small program called Disk BASIC . 
Disk BASIC interfaces with the resident ROM BASIC adding several 
commands to use the mini-floppy disk drive to save and load pro¬ 
grams as well as to facilitate storage and retrieval of data files. 
However, since at least part of DOS, and probably Disk BASIC will 
be in memory, the amount of user available memory is lowered to 
around 32K in a fully expanded system. 







The method by which data is encoded on a mini-floppy disk¬ 


ette is of prime concern to the programmer. A mini-floppy disk¬ 
ette is divided into forty concentric circles, called tracks . 

Each track is divided into a variable number of pie-shaped wedges 
which are called sectors . For the TRS-80 mini-floppy diskette 
operating at double density, each track is divided into sixteen 
sectors of 256 bytes each. Therefore, a mini-floppy diskette 
would have the capacity of 163,840 bytes of storage. For a 
computer having only one disk drive part of that storage space 
will be dedicated to DOS. However, each additional disk drive 
would have the full 163,840 bytes available to the user as storage 
space. 

One track of each diskette is reserved for the diskette’s 
directory. The directory instructs DOS where on the disk cer¬ 
tain programs or files are located. In addition, the directory 
maintains a table of free space available, and where it is loc¬ 
ated on the diskette. For this table, each track is split in 
half and that group of eight sectors is called a granule . The 
free space map keeps track of each granule’s status- whether it 
is being used or not. If a data file containing only seven bytes 
of data were to be stored on the diskette, an entire granule of 
2,048 bytes would still be allocated to the file. 

In order to operate properly, the software presented in this 
thesis relies upon the above hardware environment.. Since all 
programs are written using Disk BASIC, it is not recommended that 
any of the above hardware specifications be changed without full 
understanding of the software. 





9) 


DOS Operation 

From a hardware view, microcomputers may seem an intricate 
world of binary and acronyms. However, the ultimate goal of a 
sound computer program is to be easily understood and used by 
persons untrained in microprocessor and peripheral operation. 
Again, it is the duty of the programmer to utilize the computer 1 s 
power to simplify the task of the end user. Since the software 
presented in this thesis heavily depends on fast, error free 
disk operation, a short discussion of disk software operation 
is presented here. 

As mentioned earlier, a mini-floppy diskette may contain 
both program or data files. The type of file on the diskette 
is identified by information in the diskette’s directory. Each 
file, whether it is a program or data file, is given a descrip¬ 
tive name. This name may be up to eight characters in length, 
and may contain both letters and numbers as long as the first 
character is a letter. In addition, the program name is given 
an extension which may be up to three characters in length. An 
extension tells the disk user what type of file it is (program 
or data), 

In the disk directory, the program name and extension are 
separated by a backslash (’/ T ) character. It is left to the 
programmer to be consistent in extension names to avoid confusion 
at a later date. There are three uniform extensions used by the 
software in this thesis: 

1. BAS - identifies file as a BASIC program. 

2. CMD - identifies file as a machine language program. 


3. DAT - identifies file as a data file. 








Therefore, a directory entry called EDITOR/BAS would show there 
is a file on this diskette called EDITOR and it is a BASIC pro¬ 
gram, Likewise, an entry called NAMES/DAT would show there is 
a file called NAMES and it is a sequential data file. Athough 
several other conventional extension names exist, these are the 
only ones used by the programs in this thesis. 

There are only three Disk BASIC commands which govern the 
use of BASIC programs: LOAD, RUN, and SAVE. Each of these com¬ 
mands require a target file specification placed in quotes, such 
as the command LOAD "EDITOR/BAS”. In addition, a disk drive 
number can be specified at the end of the file specification to 
speed up searching for the file. An example of this is: LOAD 
"EDITOR/BAS:0". 

The SAVE "FILESPEC" command would magnetically write on 
the diskette contained in the specified drive (or the first 
drive found to have free space if no drive number is specified) 
whatever BASIC program is in memory at that time. The LOAD 
"FILESPEC" command would retrieve a previously stored program 
and place it into memory, ready to execute. The RUN "FILESPEC" 
command functions exactly as the LOAD "FILESPEC" command, but 
execution of the program begins automatically after it has been 
loaded into memory. Using just these three commands, all BASIC 
program manipulation is accomplished. 

Data file manipulation is not quite as straightforward as 
BASIC program manipulation. The sequential data file has a 
first-in-first-out (FIFO) access arrangement. That is, to read 
the fifty first data record in a sequential data file, the first 


fifty records would have to be read in and discarded. The file 
is made accessable to the BASIC program by a command called OPEN. 
The OPEN command must specify whether the data file is to be 
input from or output to because DOS will not allow data to be 
moving in opposite directions simultaneously. In order to change 
a file access from input to output, or vice versa, the file must 
be closed using the command CLOSE and then reopened with the 
desired specification of data movement direction. 

The largest limitation of the sequential data file is the 
inability to easily edit mistakes from the file. Since infor¬ 
mation cannot be inserted or deleted from the middle of a data 
file, a copy of the file must be made with the corrections placed 
in the copy. Then the old file is destroyed and the new file is 
renamed the old file’s directory name. Fortunately, DOS does 
allow new data to be added to the end of a sequential data file. 

The nature of sequential data files defines its use for 
data that once entered does not change. A permanent file of 
receipts or check stubs, as used by the programs in this thesis. 


would meet this criterion. 





Program Overview 


The programs presented in this thesis require a diskette 
storage space of approximately 125,000 bytes, and an execution 
memory (RAM) of nearly 250,000 bytes. Since this is more memory 
than is available on a fully expanded (48K RAM) TRS-80, a chained 
module method of execution was incorporated. 

The chained module method splits the overall function of the 
package into its integral parts. A separate program is used to 
maintain each of these parts, and a menu driven selection scheme 
allows the user to select the appropriate program for the desired 
task. When a particular task is completed, the menu program is 
executed, and the user can select the next desired task. An im¬ 
portant consideration for the use of chained program modules is 
not to allow any single program to occupy more memory than is 
available. 

Two disk drives are used in the execution of this package. 
One drive is used to hold the program diskette, while the other 
is used for storage and manipulation of data files. Two small 
data files are kept on the program diskette, however, to ident¬ 
ify the diskette and the current configuration of the package. 
This was necessary since the programs needed more storage space 
than is available on a single diskette, and were divided into 
two program diskettes. The identification file thus instructs 
the menu program which of the program diskettes is currently in 
the disk drive so that a diskette switch could be made if nec¬ 


essary. 




13) 


The configuration file is a vital part of the package, 
its function being to customize the package to the individual 
requirements of the user. This file is accessed by nearly all 
of the programs in the package constantly, so the placement of 
the configuration file on the program disk was done to increase 
efficiency. The configuration file contains the codes and des¬ 
criptions of all expense and receipt account categories, codes 
and descriptions of all enterprises, codes and descriptions of 
all bank accounts,' and codes and descriptions of all farm oper¬ 
ators . 

Three types of data files are used by this system: receipts, 
expenses, and special. A different diskette is used for each 
type of file. Each of these diskettes has an identification 
file to instruct programs whether the correct data diskette is 
in the disk drive for the particular job being executed. This 
method is used to keep the various data separated and eliminate 
the possibility of incorrect data being stored on a data diskette. 
The special data diskette is used for all data not associated 
with receipts and expenses. Examples of this data would be 
inventories, capital gains records, and depreciation schedules. 

For security, the identification files on both data and 
program diskettes are similar in structure. This eliminates the 
possibility of accidental placement of a program disk in the 
data drive, and having data written over important programs. 

Before any data is written to a diskette, its identification 
file is interrogated. If the wrong diskette is inserted, the 
user is alerted and given the opportunity to correct the mistake. 


446219 




At any time, the user may abort a specific job and return to 
the menu. In addition, the identification file allows the 
data file to actually span more than one physical diskette, 
that is, a receipts file can be as long as the user needs. 

No limits are placed on the number of entries that can be 
made to a data file. When a certain number of entries have 
been stored in a data file, the user is instructed to initial¬ 


ize a new data diskette. 




Program Operation 


The scope of this thesis is the construction of a finan¬ 
cial record management system for production agriculture imple¬ 
mented on a microcomputer. Actual information manipulation is 
no different in this system than in conventional manual book¬ 
keeping systems. The particular bookkeeping system emulated 
in this system is the Ohio State University Commercial Farm 
Account Record Book. Because of the flexibility of the config¬ 
uration file used by the computerized bookkeeping system, it is 
compatible with any manual bookkeeping system for agricultural 
use. 

In addition to providing timely information by virtue of the 
computer's extremely fast processing abilities, the package was 
designed to include the following abiliites: 

1. Ability to manage and report information for more 
than one agricultural enterprise. 

2. Ability to manage and report information for more 
than one bank account. 

3. Ability to manage and report information for more 
than one farm operator. 

4. Ability to collate various information to provide 
end-of-year financial evaluation of any of the 
above criteria or the operation as a whole. This 
information includes debit and credit summary for 
each receipt and expense account category, deprec¬ 
iation schedules, and net worth statement. 





5. A degree of user friendliness that allows untrained 
users to operate the system with confidence. 

6. Complex data and program manipulations must not be 
apparent to the user to avoid confusion. Only in¬ 
formation important to the user is displayed on the 
video screen or lineprinter. 

The configuration file used by the system is defined by the 
user, as well as fiscal year information. This allows a user to 
adapt the system to the manual system that is most familiar to 
them. In addition, the user may expand the configuration to in¬ 
clude features that manual systems do not employ, such as enter¬ 
prise and bank account cross referencing reports. The ultimate 
goal of this project was to provide a record management system 
so flexible that a user could easily generate any cross refer¬ 
ence of the data entered into the system. For instance, a valid 
report might be the amount of veterinary bills used for a swine 
operation which were paid by cash between the dates of February 
23 and June 15. 

Each of the program modules in the package perform a speci¬ 
fic function. The following is a description of each of the pro¬ 
grams included in the package. 

ANALYSIS/BAS - This program surveys and collates all credit 
and debit information to produce a profit or loss 
statement. 

BACK/BAS - This program provides a means to make backup 
copies of data diskettes- a necessary function of 
good data processing operation. 




17) 


CGMEBF/BAS - This program stores and prints out a record 
of Capital Gains For Machinery, Equipment, Buildings, 
and Farm Land. 

CGPBLSD/BAS - This program stores and prints out a record 

of Capital Gains For Purchased Breeding Livestock Sold 
Or Died. 

CGRBL/BAS - This program stores and prints out a record 
of Capital Gains For Raised Breeding Livestock. 

CONFIG/BAS - This is the largest program in the package due 
to its enormous flexibility. The function of this pro¬ 
gram is to configure the bookkeeping parameters based 
upon the preference of the user. From this information 
a file entitled CONFIG/DAT is placed on both program 
diskettes and is accessed by any program that performs 
a bookkeeping function. This program can be used to 
create CONFIG/DAT, add or delete items from CONFIG/DAT, 
print out a hardcopy record of CONFIG/DAT, sort CONFIG/DAT 
by code number, or sort CONFIG/DAT alphabetically 

DEPREC/BAS - This program stores a permanent depreciation 
schedule for depreciable items on the farm. Although 
the program does not calculate actual depreciation 
schedules, the information is necessary to perform end- 
of-year analysis. 

EDITOR/BAS - This progra allows the user to correct mistakes 
in a receipts or expenses data file. The program can 
display entries, delete entries, restore deleted entries, 
or purge a data diskette of deleted entries to make room 
for additional entries on that diskette. 




EXPENSES/BAS - This program is used to enter and store 
expenses incurred. All expense entries are made to 
the EXPENSES data disk and the information file is 
updated to show the current number of expense entries 
in the file. 

FINVEN/BAS - This program stores or prints out a record 

of Inventory of Feed, Crops, and Supplies. Like other 
inventories and capital gains records, this data is 
placed on the SPECIAL data diskette. 

FISCAL/BAS - This program allows the user to customize the 
package to perform end-of-year analysis based on the 
fiscal year dates used by that farm operation. This 
data is placed in a file called FISCAL/DAT and stored 
on the SPECIAL data diskette. 

INIT/BAS - This program allows the user to create a new 
RECEIPTS, EXPENSES, or SPECIAL data diskette. An 
identification file entitled HEADER/DAT contains 
either the word RECEIPTS, EXPENSES, or SPECIAL in 
order to alert bookkeeping programs which type of 
data diskette has been placed in a disk drive. 

MASTER/BAS - This is the program which acts as a menu to 
select other programs in the package. Upon power- 
up, this program is automatically executed and upon 
completion of any other program this program is again 
loaded and executed. Unlike any other program in the 
package, this program is placed on both program disks. 

MINVEN/BAS - This program stores and prints out a record 

of Inventory of Market Animals, Feeders, and Poultry. 




NETWORTH/BAS - This program surveys all credit and debit 
data entered and calculates a net worth statement. 

A copy of the statement is retained on the SPECIAL 
data diskette for later reference. 

RECEIPTS/BAS - This program is used to enter and store 

receipts obtained. All receipt entries are made to 
the RECEIPTS data diskette and the identification 
file is updated to show the current number of receipt 
entries in the file. 

REPORTER/BAS - This program is used to construct and print 
out cross reference reports to the user’s specifica¬ 
tion. As its function is only to survey and collate 
data, it performs no file manipulation or bookkeeping 
operations. 

RINVEN/BAS - This program stores and prints out a record 
of Inventory of Raised Breeding Livestock On Hand At 
End Of Year. 

SUMMARY/BAS - This program totals and prints out monthly 

and year end records of receipts and expenses by each 
receipt and expense account category. These totals 
are posted to a special file on the SPECIAL diskette 
to be used by other programs such as ANALYSIS/BAS and 
NETWORTH/BAS. 




APPENDIX I; Program Listings 





P r o 9 r a m Lis t i n 9 : f i N fl L Y SIS / B Fi S' 


10 CL-S « CLEAR 10000 * FI ■$= " *$# > ###, ###. ## " * PR I NT " > > OP t i on •' 
Print Out fl Financial Analysis of Year-'s Business 

«" •’PRINT : PRINT 

29 PRINT"Do you wish to : " : PRINT : PRINT"! > Print out 
analysis" : PR I NT ”2 'j Abort and return to MASTER 

MENU" PR I NT: RRI NT " Enter y our cho i ce ( 1 or 2 ) " 

30 P0“:=539: fl 1 1 •• G0SUS491 68 * fl$=AN$ > IF ri$< > " 1" AND A#< > " 2 " 

GOTO 38 ELSE IF fl$= i, 2" THEN CL3 : PR I NT" Return in9 to MASTER 
MENU" RUN " MFISTER/-8AS " 

48 CLS:PRINT"Place the disk marked SPECIAL in Drive 1, the 
Press <ENTER>" 

50 POfc* 128 : fl 1 GOSUB40 i 38 

50 OPEN "I'M, "HEADER/DAT : 1" : IMPUT#1,0$ : CLOSE •• IF 

D$=”SPECIAL" GOTO 100 ELSE CLS : PRINT"ERROR - this is not a 

SPECIAL disk! It is marked -' " j DT 

70 PR I NT = PRINT"Do you wish to=" = PRINT : PR!NT"1> Try 
a9ain"'PRINT"2) Abort and return to MASTER 
MENU" ■' PR I NT: PR I NT"Enter y our cho i ce < 1 or 2 )" 

80 P0’;=475 = A1 ’<= 1 ■ GOSUB40160 * A$=AN$ ■' IF fl$< > " 1 11 AND m< > " 2 " 
GOTO 30 ELSE IF A**"2" THEN CLS : PRINT"Returnin9 to MASTER 
MENU" :RUN"MASTERrBAS" 

30 GOTO 40 

100 OPEN " I", 1, " HEADER/DAT : 1" ■ DI fl ST< 14 > : IMPUT# 1, DT « FOR 2= 
TO 14 : INPUT#! , ST< 2 ) ; NEXT 2 CLOSE 

118 IF ST< 1 X >0 AND ST<2.X>@ AND ST< 3 X >0 FIND 8T< 4 X >8 AND 



22 ) 


ST<5X >0 AND ST< 6 X >0 AND ST< 7 K >0 AND ST< S X >9 GOTO 200 
128 CLS ; PR I NT" ERROR - before I can Proceed you must •• " : PRINT 
130 C=0 : FOR 2=1 TO S'READ fl$' IF ST< Z X >8 THEN NEXT Z •• GOTO 

190 

140 C=C+1' PR INTO.; " > " s fl$ NEXT Z 

150 DATA "Post a s urnma r y of’ y ear* * f s bu& i ne&s to d i sk 51 ^ M Post* 

•an inventory of Feed.. Crops^ and Supplies ".."Post an 
inventory of Market Animals.. Feeders.- and Poultry " 

160 DATA "Post an inventory of Raised Breeding Livestock on 

t. 

hand".. "Post Capital Gains for Raised Breeding 
Livestock"Post Capital Gains for Purchased Breeding 

Livestock" 

1 1 * 0 DATh 1 Post CaP i ta. L La-sins t or M-schinery , u4uiP«... E*Idgs-■ a 
and Farm".• "Post Annual Depreciation Record" 

198 PRINTS9S0,. "Press <ENTER> to 

cent i nue "; •• P0X= 1820 ' A1 X=0 ' GOSUB 40130 ' CLS •• PR I NT " Return i n9 to 
MASTER MENU"'RUN"MASTER/BAS" 

290 CLS PR I NT"Retr i ev i n9 F i sea 1 Year Data" ' DIM 

BM< 12), BD( 12), M< 12), D< 12)' OPEN " I" .. 1.- "FI SCAL/PAT ' 1" ' FOR Z= 1 

TO 12=1 NPUT# 1, BM< Z ),. BD< Z)a M< Z )a D< Z ) = NEXT Z ' CLOSE 

210 CLS'PRINT "Retrieving inventory of Feed.. Crops a and 

buP P1ies" 

220 OPEN" i " a 1 a "FINVEH'-'PAT = 1" 

238 INPUT# 1 a 0$' IF 0$="TOTALS" GOTO 240 ELSE 
I NPUT# 1 a Q8$ a QE$.. PB#aPE#a TB#a TE# ' GOTO 230 
£40 I NPUT#1 a TB# a TE# = CLOSE'C1#*TE#-TB# 

258 CLS'PRINT "Retrieving inventory of Market Animals.. 




23 ) 



Feeders.. & Pou. 1 try " = OPEN " I", .1, " MI NVEN/DAT • i " 

268 INPUT# 1 .■ D$■' IF D*="TOTALS" GOTO 270 ELSE 
INPUT#I, MB, HE, BW#, EW#, PB, PE, TB#, TE# ’ GOTO 266 
270 INPUT#i, TB#, TE# •• CLOSE •• C2#»TE#-TB# 

280 CLS : PRINT "Retrieving i nventora of Raised Breed i n9 
Livestock ,! •• OPEN " I'M, "RINVEN/’dat : 1" 

280 INPUT# 1.. 0$ : IF 0$="TOTALS" GOTO 300 ELSE 

INPUT# 1, BN, EH, BV#, EV# •• GOTO 298 

388 INPUT# 1, BV#, EV# ■' CLOSE > C3#*EV#-BV# 

310 CLS : PR I NT" Retr i ev i n9 Cap i ta I Ga i -ns for Ra i sed Breed i n9 
Livestock"*OPEN "I'M, "c9rbl/dat’ i " 

320 G1#“S ; FOR Z=1 TO 

ST( 3) : I NPUT# 1, Dm , NS, TR# • G1 #=G 1 #+TR# * NEXT Z = CLOSE 
330 CLS : PRINT"Retrievin9 Capital Gains for Purchased 
Breediri9 Livestock " : OPEN" I".. L "cQPblsdrdat •• 1" : G2#=0 : FOR 2=1 

TO STC 6 ) 

340 I NPUT# 1,0 Fi $, NR, S V#, UC#, CG#, IC# : G2#®G2#+CG# ■' NEXT Z < CLOSE 
350 CLS ■' PR I NT" Retr i ev i n9 CaP i ta l Ga i ns for Mach i ner y , 

Equip., BId9s. i & Farm" ; OPEN "I'M.."csmebf■ / dat •• 1" = G3#=8•• FOR 
Z*1 TO ST(7) 

360 INPUT# 1 > DE'$, D’rl'i- > NS# .■ OE#.. OC# > CG# •' G3#=G3#-+-CG# ■' NEXT Z : CLOSE 
370 CLS : PRINT"Retrievin9 annual dePreciation 
record" ■■ OPEN" I’M , "dePrecrdat =1" : G4#=8G5#=8 G6#=0 •' FOR 2=1 
TO ST< 8) : I NPUT# 1, DE$, DA$, TV, UC#, DY# 

380 IF TY=1 THEN G4#=G4#+DY# ELSE IF TY=2 THEN G5#~G5#+DY# 
ELSE IF TY=3 THEN G6#=G6#+DY# 


3 NtXi 



46Ci CLS = RR I NT" Retrieving annual summary of receipts an 

expenses" 

410 DIM R#C 12 >, E#< 125 = OPEN " I'M , "summaryMat = 1" = FOR Z 
12= INPUT# 1, R#< 25, E#< 2 5 = NEXT 2 = CLOSE 
420 CLS = PRINT"A11 necessary information has been 
retrieved." = PRINT”Ready Printer, then P ress < ENTER>" 
430 P0’<~ 123 = A 1 "1=0 = GO SUB 48138 

440 RS~ "FI NfiNCIAL ANALYSIS OF YEAR *S BUSINESS"=LPRINT 
TflBC 33-( LENC AS 5/2 ) 5 ; AS = LPR I NT 

Tfi3( 33-C LENC AS 5/2 5 5; SIR I NGSC LENC AS 5, " = " 5 = LPR I NT = LPR I NT 

450 LPR I NT STRI NGSC 66, "-"5 = LPR I NT " Rece iPts and 

ExP enses"; TAB< 35 5 s " Gfl IN " ; TABC 55 5 ,= "LOSS " = LPR I NT 

STR I NGSC 21,"-" 5; T ABC 38 5; STR I NGSC 14," - " 5 ; TREK 58 5 ; STR ING 


455 FOR 2=1 TO 

12 = BM$=STR$C BMC 2 5 5 = SDS=STRSC BDC Z >) = M$=STRSC MC 255 = DS=ST 
) = 8M$=RIGHTS< BM$, LENC BMS 5~1 5 = BD$=RIGH7f< 80 '$, LENC 80$ 5-1 
GHTIC m> LENC MS 5-1 5 = DS*RIGHTSC DS, LENC DS 5-1 > 

468 P$==6MS+ " / "+BDS+ " to " +MS+ " / " +DS = LPR I NT 
PSTPBC 38 5; = LPR INTUSI NG FIS; R#C Z), = LPR I NTT ABC 50 5; = LPR I 
USING FIS;E#CZ 5 = TG#*TG#+R#CZ 5= TL#=TL#+E#CZ > = NENTZ = LPRI 
STRINGSC 66 .>5 

470 LPRINT "Tota I Cash Recei p ts";TABC385;=LPRINT USING 
FIS;TG# = LPRINT "Total Cash Expenses";TABC585; =LPRINT U 
FIS; TL# = LPRINT STRINGSC 66 ,"-"5 
483 LPRINT "Chanae In 

I nventory "; TABC 35 5, " GAIN "; TABC 55 5; " LOSS " = LPR I NT 





25 ) 


STRING** 13..>; TREK 30 >; STRING** .14, >; TAB* 50 ); STRING** 14, " 

") 

498 LPRIHT "Market Rnimals"; ■■ IF C2#0@ THEN LPRINT 
TAB* 50) ; ■ C2#“~* 02# ) : TL#~TL#+C£# ■' ELSE LPRI NT 
TAB* 30 )} : IG#~TG#+C2# 

588 LPRINT USING FI*;C2# 

510 LPRINT "Raised Breeding Stock * IF C3#<*8 THEN LPRINT 
TAB* 58).: * C3#“~* 03# ) : TL#*TL#+C3# = ELSE LPR I NT 
TAB* 38); * TG#“TG#+C3# 

528 LPRINT USING FI*;03# 

539 LPR I NT " Feed, CroP s, S< Sup Plies"; •• IF Cl #< =Q THEN LPR I NT 
TAB* 59 >; = C1 #=~* C1 # ) ■■ TL#*TL#+C 1 # : ELSE LPR I NT 

TAB* 30); ■■TG#«TG#+C1# 

540 LPRINT USING FI*.; Cl# 

550 LPR I NT STRING** 66, " - " > 

560 LPR I NT " Cap i ta t Ga i ns or 

Losses "; TREK 33 ); " Gfl IN"; TAB* 55); " LOSS " •• LPR I NT 

•STRING**23, ); TAB* 38 >; STRING** 14, >; TAB* 58); STRING** 14, "• 


570 LPRINT "Raised Breedir.9 Stock Tfl'B* 38 LPRINT USING 
FI*; Gl# : TG#=TG#+G1# 

580 LPRINT "Purchased Breedin9 Stock"; : IF G2#<=8 THEN LPRINT 
TAB* 50); •• G2#=-* G2# ) •' TL#*TL#+G2# * ELSE LPR I NT 
TAB* 38); TG#«TG#+G2# 

598 LPRINT USING FI*;G2# 

680 LPRINT "Machinery $< Equipment"; •• IF G3#<=8 THEN LPRINT 
TAB* 58) ; G3#=-< G3# > ■ TL#=*TL#+G3# « ELSE LPR I NT 





26 ) 


TflBC 30 )j •• TG#=TG#+G3# 

610 LPRINT USING FIKG3# 

628 LPRINT STRINGS* 66, LPRINT 

"Depreciation"; TAB< 35 >; "GRIN"; TRS< 55 >; "LOSS" LPRINT 
STRINGS 12,>; TR8< 38 >; STRINGS 14, ); TAB< 58>STRINGS 14, " 

ii ^ 

630 LPRI NT " Bu ildi n9s & I mP rovements " > TflB< 58>* LPRI NT US ING 

FI*.; G4#; TL#“TL#+G4# 

648 LPRINT "Machinery & EquipmentTflB<58 =LPRINT USING 

FI*; G5# : TL#=TL#+G5# 

650 LPRINT "Purchased Breeding Stock "; TREK 58 >; : LPRINT USING 
FI*; G6# •' TL#~TL#+G6# 

660 LPR I NT 3TRING-K 66, "-"> = LPR I NT 

STRI NG*< 66, " ■- " ) •• LPR I NT " Tot a I Ga x ns " ; TR8< 39 >; * LPR I NT US I NG 

FI*; To# 

570 LPR I NT " To ta 1 Losses "; TRB< 59 >; •• LPR I NT US I NG 

FI*; TL# * LPR I NT STR I NG*< 66, " - " > = LPR I NT STR I NG*C 66, " - ” > 

680 ID#=TG#-TL# : IF ID#<*0 THEN LPRINT "Total Farm 

Loss"; TABC 39 > ; : ELSE LPRINT "Total Farm Prof it"; TREK 30 >; 

63S LPR I NT US I NG FI *; ID# •• LPR I NT STR I NG*< 66, " - " ) * LPR I NT 
STRING**! 66, > 

780 CLS*PRINT"Returning to MASTER MENU" : RUN "MRSTERr'SAS" 

40870 RN*=" " •• POKE VARPTRi.' AN* >, R1 •• POKE 
VflRPTRs AN* >+2, INK PQ-V256 >+69 * POKE 
VfiRPTR< AN* )+l, P05S-INT< PQV25S >*256 : RETURN 
48138 Fft=0 ’ PR I NTSF'Ol;, STR I NG*< A1 V ,, 132 >; 

40131 IF R*;=fl 1 THEN49134ELSEPRINT®P0’4+fl’i, CHR*< 132 > 





27 ) 


40132 RT= I NKEYT * I FRT* " " THEN40132ELSEIF X NSTR< " 

!#$;•&'< >*+<-. 30123456789 ■'; <* >?8RBCDEFGH I JKLMNOPQRSTUVWKYZabcd 
ef9hi J k 1 roriOP q rstuvwxy 2 ”, RT JTHENPRINTSPOJj+'flJs, fit- s ■■ RJs=fi«+ 1 G0T04 

0131 

4S133 

0NINSTR( CHRT< 8 >+CHRT< 31 >+CHRT< 13 >, RT >GQTO40135, 46138,48138 = GO 

TO40131 

48134 m* I NKEYT : IF RT~ " " THEN40134EL3E46133 

40135 1 FfftC Fi 1JJTHENPRI NT(8POSS+flJS, CHRT< 132 ) ; 

40136 flJs*RJS“ 1’ 1 FRM< 0THENfl/S*0 •• G0T046131ELSE40131 

40137 R”»=0 

40138 

IFR$~CHRT< 91 >THENPR I NTSPO%, SIR I NGT< R1M, 132 ); ELSEPR X NTSPO^+RJi, 
3TRI NGT< Fi 1 y.~f\y ., " " 

48139 GOSUB40070•RETURN 

43148 S’4=> 1 •• RNT* "" = PR I NT8P0?S, " T"; SIR I NGT< R1 '4 , 132 > j " 

"j •'PR!NT3PQJ.+R 1 ."4-2, 

40141 

8$=INKEYT > IFRT*" " THEH40141 ELSE IFI NSTR< "0123456789”, FIT )THEN461 
43ELSE0HINSTR< "-"+CHRT< 8 )+CHRT< 31 >+CHRT< 13 ), FIT )G0T048145, 4814 
0,40140,40147 

40142 GOT046141 

40143 

fiNT=RNT+RT * I FLEW FiNT >*1THENRNT=CHRT< 132 HRNTELSE I FLEW RNT >>R1 
1 THENRNT»L£FT T< RNT, BIZ-1 /ELSE I FLEW FlNT >=3RN0L£FTTC RNT, 1 )=CH 
R$< 132)THENRNT=R I GHTT< RNT, 2 ) 


40144 





28 ) 


PR I HTSPO'4+fl 1 '-4-LEW FiNT 'j, LEFT$< LEW FiHt- >-2 ); ” . "; RIGHTS FlN$, 2 

).; : GOTO40141 

49145 

S'<=-S.’^PRIHT@PO.*;+fil";+l, " " ■ I FS’.'“~ 1THENPRI NT " - 11 ; * GGT049141ELSE 
PRINT" ■' GOTO40141 

46146 IF fi$=CHR$< 91 )THENPRINT8P0r4+i, STRINGS Bi 132 >; " 

11 i : PR INTSPO Jl+fl 1 -<~~2; " ."i ■■ G 0 T040149ELSE P RIN T 2 P 0 .”4 .■ STRINGS fll’4+2, 

" "•' GQTO40149 

40147 I FLEW AN* /"©THENPR I NT@PO.-4, STRI NG$< Fl 1 Z+2 , " 

"); = G0T048149 ELSEPRINT2PQJ4+1,STRING$< fl 1 ”4~.1 -LEW flHT ), " 

" >; IFLEFT$< Hm, 1 >*CHR*< 132 ) THENPR I HTQP0?4+fl 1 .V-1, "0" « MIDTC AN# 

,M>="0" 

40148 

FIN$j 1, LEW ANT >-2 )+". " +RIGHTT-C RN$, 2 > = IFS'.-4~~1 THEMFlN$= " 

40149 GOSUB 4817© ■RETURN 

40160 S',-1 •• AN$= " ” • PR INT2P0JJ, STR I HG$< fl 1 *4, 132 > j " " ; 

48161 

B$- 1 NKEY& ■ I Ffl$* " " THEH40161 ELSE IFI NSTR< " 0123456789 ", l=i$ )THEN491 
62ELSE0NINSTR< CHR^< 8 >+CHR$< 31 >+" . »+”-'*+CHR$< 13 >,R* >G0T048i 6Q., 
48160,40165, 4© 1 S3, 401 66 : GOTO40161 

40162 

fiN*=FIN$+fl$ = I FLEW flN$ »fli!sTHENfiN$=LEFT$< FlN$.. fii”4 > * GOTO40161ELSE 
PRINT@P0';4-Fi 1 “;-LEW RN$ ), RN$; = GOTO401S1 

48163 

S’4=-S'4 -■ PR I MTSPO'4+fl 1 *;, " "; •' I FS-4=-1 THENPR I NT " - !! ; ELSEPR I NT M !! ; 


48164 G0T04©161 





40165 IFIHSTR< flRJU " . " /“0THEH40 i 62ELSE40161 

46166 I FflN$= " " THEN40168ELSEPRI NTSPQJi, SIR I NG$< R i 5{-LEN< AN* V " 

It V . 

n 

48167 IFSJJ*-1 THENAN$»+AN$ • G0T04Q1S3ELSE481 69 

48168 IF R$=CHR$< 91 >THENPR INTQPO’-;SIR ING$< Fll■<.. 132); " 

,! ; ELSEPRI NTSPO.--;, SIR I NG*< fl 1, " " >; " '* 

43169 GOSUS 40179 ■■ RETURN 

48170 flN#*VflL<RN$ ) ■ RH#*< INK < RN#+.0Q5 >4:100 VI03 > * RETURN 


56300 REM X Data Entry Subroutines X 

38801 REM X Gosub 40140 - Dollar entry 4: 

38002 REM 4 Gosub 40158 - Numeric entry 4: 

30803 REM X Gosub 40130 - filPhavnumer ic entry % 

58004 REM X Parameters ; X 

50005 REM 4: Input : PO’i ~ Prints Position X 


58886 REM 4. fli”. = Number of characters to al low# 

58807 REM X Output : RH$ ~ Response # 

X 


38088 REM * 


Fi.N# : = Numeric rounded equivalent 





10 CLS : PRINT 


Program Listing : 8ACK/BAS 


'' > > 0 P t i o n •' B a c k u PAD a t a D i s k e 11 e 
< <" •• PR I NT • PR I NT" Do You W i sh To ■■ " = PR I NT = PR I NT" 1 ) Execute 
BackuP" : PRINT"2 ) Abort and return to MASTER 
MENU": PR I NT • PR I NT" Enter a our cho i ce < i or 2 >" 

20 P0’:=475 = A1 1 = GOSUB40160 » ASIANS ; IF AS< > " 1 " AND AS< > " 2 

GOTO 20 ELSE IF AS="2” THEN CLS * PR I NT "Returning to MflSTE 
MENU" 1 RUN "MASTERxBAS" 

30 CflD "backup" 

40 RUN 

40070 AN$= " " = POKE VARPTR-:; AHS >, A 1 Js = POKE 
VflRPTR( A NS )+2.< INT( P0"i/25S >+60 : POKE 
VRRFTRX A NS )+l, F'Of-INTC P0t/25S >*256: RETURN 
40130 A*i=0 : PR INT0PO5J, STRI NGS< A1X., 132 > ; 

48131 IF R’:”A 1 P»THEN40134ELSEPRINTQPO/J+AJ;.. CHR$< 132); 

40132 AS= INKEYS > I FAS-- " " THEN40132ELSEIFI NSTR< ” 

! #$U.' < >*+<-.70123456739 « ; <=>?<BABCDEFGHIJKLMNOPQRSTU 1 VWXY 
ef 9hi jk 1 mnoP q rstuvwxa z ", AS JTHENPRI NTGF05S+A ?£ .> AS; •• AJSFflJi +1 : 
0131 

40133 

0HIHSTR( CHRS< 8 )+CHRS< 31 )+CHR#< 13 ), AS >GOTO40135, 40130,401 

TO40131 

48 134 R$~ INKEYS •• IF AS~ " " THEN40134ELSE40133 

40135 I FA*:< A1 THEN PR I NT@P0”H-A’4, CHRSC 132 >; 

40 136 flJj*Al;~ 1 * I FA %< 0THENA";=0 * G0T048131ELSE40131 


it 

p 


2 abed 
GOT 04 



48137 fJ/a-O 




31 ) 


40133 

IFfl$*CHR*<91 >THENPRIHTSP05S > STRINGS fill;.. 132ELSEPRINTfiPQJi+RJS, 

STRINGS 

40139 GOSUB40070 RETURN 

40140 S5J« 1 < flH$= " " ' PR I NTfiPOJi, " $ " i SIR 1 NG$< fi 1JJ, 132 > * " 

: PR I NTfiPO":+fl 1 4-2 .< ", " ; 

40141 

fi$ s INKEY$ > I Ffl$= " " THEN40141 ELSE IFI NSTR< " 0123456789 ", m )THEH4S i 
43ELSEQHINSTR< "-"+CHR$< 8 >+CHR$< 31 HCHRTC 13 ), AT }GQT040145,4014 
0.' 40140 > 40147 

40142 GOTO40141 

40143 

•' I FLEW RN$ )=1THENFIN$=CHR$< 132 )+flN$ELSEIFLEN< flH$ ?>R1 
1 THEMfiN#“LEFT $(. RN$, flUs-1 >ELSEIFLEW AN* >«3fiNDLEFT$< RHS, 1 >=CH 
m 132 >THENfiN$*RIGHT#< fiHT, 2 > 

40144 

PRlNTSPQM+fi 1 'l-LEW FIN#LEFT$< FiH*, LEW RN# >-2 " , " ; RIGHTS RN$,2 

); : GOTO40141 

40145 

Sy.=S’4: PR I NTSPO^+fl 1 4+ 1, " " } > I FS>,~~ 1THENPRI NT 11 - " = GOTO40141 ELSE 
PRINT" " ,i : GO TO 4 0141 

40146 IF fi$~CHR$< 91 > THENPR INT0P0 Ji +1, STRI HG#< Fi VA,\ 32 >" 

".! < PR I NTffiPQJS+R 13-2 , " . "; ■■ GOTO40149ELSEPRINTSPQJS, STR I NG#< fi 1 4+2 , 

" ")/ : GQTO40149 

40147 I FLEW AN# I 1 =0 T H E H P RIH T fi P 0 4 .< STRINGS R1.-1+2, " 

") J GOTO40149 ELSEPRI NTSPOJS+1, STR I NG*< fi 1 4 -1 -LEW AN# >, " 

">; ’ IFLEFTfC RN$, 1 >=CHR#< 132 >THENPRINT2P0.”Wfii.’;-i.. "0" ; « MID$< RN$ 






40148 

flw$, i, len< am >-2 >+". "+right$< am., z > i fs”;=~ i thehrn$= " 

-"+AN$ 

40148 GOSIJB 40170 'RETURN 

40160 Sl.= l « RNT=" ” •• PRINTSPO*, STRINGS fll 132 " 11 ; 

40161 

fl$= INKEY# •' IFfl$*" "THEH401 6 1 ELSE 1FINSTR< "0123456789", FIT >THEN401 
62ELSE0NIN$TR< CHR** 8 >+CHRT< 31 >+" „ "+"-"+ CH R$< 13 >, AT )GQTQ401S0, 
46166,40163,401 S3,40166- GQTO401S1 

40162 

AN*=AN*+fl$ : IFLEN< ANT t>fl 1 %THENriNT=LEFT $( RNT, fll5S>« GOTO40161ELSE 
PR I NTfiPOSJ+fl 1X-LENC PINT ), AN*; ! GOTO401S1 

40163 


$>.=-$‘4 < PR IHTSPO JH+fl 1 H ,•• IF-S^-ITHENPRINT' 


ELSEPRINT" 


48164 GOTO401S1 

40165 IFINSTR<flNT,">*0THEN40162ELSE40161 

40166 I PRINT-" "THEN401S3ELSEPRINTSPO";, SIR INGT< fil«-LEN< ANT " 


II \ , 

) > 

40167 IFS%«-1THEN ANT= "-"+ANT■GOTQ401S9ELSE40169 
40158 IF FIT=CHRT< 91 )THENPR I NT SPG";, STRING** A1 ?■;, 132 >} " 
11 i ELSEF’R I NTSPO";, STRI NGT< Pi 1 %, " " ?; " "; 

40169 GOSUB 40170 : RETURN 


40173 AH#=VAL< ANT > •• RN#«< I NT< < AN#+. 865 >* 130 V100 ) RETURN 
50080 REM % Data Entry Subroutines % 

30001 REM t Gosub 40140 - Dollar entry % 

% 


50882 REM % Gosub 401o8 - Numeric entry 





33 ) 



50003 

REM * 

Gosub 40130 - 

R l P h a. / n u m e r i c e n t r y 

50004 

REM # 

Parameters : 


50905 

REM % 

Input-* PQ”; = 

Prints position 

50006 

REM % 

A1 y. = 

Number of characters to alio*. 

50907 

REM * 

OutPut : ANT - 

ResP onse 

50908 

REM .4: 

AN# * 

R o u n d e d n u. m e r i c e 4 u i v a I e n t 

50999 

REM * 

3 1 r i n 9 C o mi p r e s 

s i o n S u b r o u t i n e 


51000 IF LEH< RNf )=0 THEN RETURN ELSE IF MID:T< AN*.- 1 , 1 >" 
THEN flN$*R IGHT $<■. ANT, LEW RN$ GOTO 51OO0 
51010 IF LEW ANT >=0 THEN RETURN ELSE IF 

mid$< m$, lew ant i >=" " then fin$*left$< nm, lew: ant >~i > > 

51010 


& 


■Ay 

•T* 


•As 


GOTO 


51020 RETURN 






34 ) 


P r- o 9 r a m List! n 9 : C G M E B F B fl S 

0 REM % c9mebfVbas version i 88.--09/S2 

13 CLS « CLEAR 10000 : FI$=" $$#, ###, ###. ## 11 = PR I NT " > > OP t i on 

Or Print Out Record Of Cap it.3.1 Gains For <<" : PRINT ">> 

Machinery.. Equipment, Bui ldin9s.. Or Farm 

20 PR I NT ••PR I NT "Do you wish to ; " = PRINT : PRINT" i ) Post an 

to the record" ! PRINT"2> Print out the stored 

record" : PR I NT "3 > Abort and return to MASTER 

MENU" : PRINT : PR I NT" Enter your choice <1... 2.. or 3>" 

33 PO'i=607 : R1 •;= 1 •• GOSUB 40160 •• R$“flNT « PR I NT •• IF m~ " " OR 
AND R$<>"2" AND A$<>"3"> GOTO 30 
40 IF fl$“"3" THEN CLS : PRINT"Returnin9 to MASTER MENU" : 
"MflSTER/'BflS" 

50 IF R$="2" GOTO 3S8 

53 CLS 1 PRINT"PIace the disk marked SPECIAL in Drive 1, 
Press <ENTER>" 

70 PC.t-S4 * fl 1 ";=0 •• GOSUB40130 

30 OPEN "l" > If "HEADER/DAT •• 1" = INPUT#! , DT = CLOSE * IF 
D$=" SPECIAL" GOTO 100 ELSE •• CLS* PRINT "ERROR - this is n 
SPECIAL disk! It is marked" ;D$=GOTO 2680 
100 OPEN "I'M," HEADER/DAT : 1" •• INPUT# 1, D$ = DIM ST< 14 ) = FO 
TO 14 * I NPUT#1,ST<Z)»NEXT Z = CLOSE 
i 18 CLS •• PR I NT " Entry # " i ST< ? H1 

120 PRINT ■'PR I NT "Enter a description of the item CuP to 

chars. >"«P0”t= 192 « A1J{*25 •• G0SUB48138 « D£$==AN$ •• PRINT 

130 PRINT“Enter the date this item was sold or Junked 1 


■' Post 

S ,/ If 

entry 


RUN 

th*£’Ti 

Ot 3. 





35 ) 


8 chars. >“= PGX=328 •• F! 1-4=8 ‘ G0SUB4813© •• DRT=ANT •• PRINT 

140 PRINT •• PR I NT "Met Sale Price 

" ••P0.’.'=463 ‘ 10 ‘ GOSUB40140 ‘ N3#=AN# * PRINT 

138 PRINT"Depreciation taken in Previous 

years" : P0’i=549 '■ Al-”4=1 0 : G OS US 40 i 40 : DE#"flN# ; PRINT 

158 PR I NT •• PR I NT" Or i 9 i na l 

cost" : P0'4=S54 = AI ¥»- i0 ‘ GOSUB40140 « OC#=AN# ‘ PRINT 

170 CG#=NS#~< OC#-DE# ) 

130 CLS : PR I NT"Verify that what you typed is correct ;: PRINT 
1 93 PR I NT " Descr iPti on ‘ " > DE$ 

260 PR I NT "Date sold or junked‘ ",;DE$ 

2 10 PR I NT PR I NT " Net Sa l e Pr i ce ‘ •• PR I NT US ING FIT; NS# 

220 FRI NT "Depreciation taken in Prior years ! "i ! PRINT USING 

FI$;DE# 

230 PR I NT" Or 19 i na 1 Cost •• "; • PR I NT US I NG FI $; OC# 

240 PRINTSS60.T'Is this information 1 < Incorrect or 


238 PQ'<~ 18 i 8 ‘A 1*= 1 ‘ GOSUB40168 ■ RT"flNT * IF RT< > " 1 " AND FiT< > 11 2 " 
GOTO £50 ELSE IF AT="2” THEN RUN 

260 CLS: PR I NT" Do a ou w i sh to ‘"‘PRI NT •• PR I NT" i > Post th i s 
entry to disk" PR I NT "2 > Abort and return to MASTER 
MENU "‘PRINT'PRINT "Enter your choice <1 or 2>" 

270 PQJi-347 •• A1 ”;•= 1 ‘ GOSUB40168 ‘ A$=flNT = IF A$< > " 1" AND AT< > " 2 " 
GOTO £70 ELSE IF A$«"2" THEN A$="3"‘GOTO 43 

239 CLS‘PRINT"Place the disk marked SPECIAL in Drive i, thei 
Press <ENTER>■" 

230 P0-1-S4 ‘ A1 ”4=3 ‘ GO SUB 40138 





m 

300 OPEN " IM, "HEADER/DAT * 1" = INPUT#! , OZ ■ CLOSE ' IF 
D$=" SPECIAL 11 GOTO 350 ELSE PR I NT "ERROR - this is mot a 
SPEC I ftL d isk ! 11 i s mark ed ■ ” >D Z ■ PR I NT 

313 PR I NT "Do you. wish to ; " : PRINT : " i ) Try aQaim" = PRINT"2 > 
Abort and return to MASTER MENU" : PRINT : PR I NT "Enter your 
choice <1 or 2>" 

323 P0S«475 = fl 1 *= 1 •• GOSUB401 68 : RZ=FINZ : IF Fl$< > " 1" AND A$< > " 2 " 
GOTO 323 ELSE IF A$«"2" THEN RZ ss "3 ,i : GOTO 40 

338 * j 0 T0 230 

333 CLS- 1 PR I NT "Writing entry to disk ... p lease stand by " : OPEN 
"E'L L "csrnebfvdat> 1" •• PR I NT# 1, DE$; ", "; OnZ,i ", '•; NS#; DE#j OC#;CG 

CLOSE 

368 ST( 7 )~ST( 7 )+1 •• OPEN " O'M, " HERDER/DAT " « PR I NT# 1 OZ = FOR Z= 
TO 14 •• PR I NT# 1, ST< Z > = NEXT Z •’ CLOSE 

370 RUN 

380 CLS : PRINT"Place the disk marked SPECIAL in Drive i, the 
Press <ENTER>" 

390 P0“:-S4 < A1 '■;=& •• GOSUB40130 

480 OPEN "I'M, "HEADER/DAT■' 1" •• INPUT#! , OZ ■■ CLOSE * IF 

D$="SPECIAL" GOTO 450 ELSE CLS'PRINT"ERROR - this is not a 

SPECIAL disk! It is marked 1 ";D$ : PRINT 

410 PRINT"Do you wish to ; " ■' PRINT ; PRINT" 1 > Try 

a9a i n" : PRINT"2) Abort and return to MA3TER 

MENU" PRINT : PRINT "Enter your choice ( 1 or 2>" 

420 PCM411 = A ! 1 = GQSU840168= FiZ-fiNZ > IF F\Z< > " 1" AND FlZ< > " 2 " 


GOTO 420 ELSE 
4.jLi' uu I u 330 


T CT Ci-:*—' n c » * 

J. I I JH*"**” jU 


HEN A$'-"3" : GOTO 40 





37 ) 



450 DIM ST< 14 ) ■■ OPEN ” I’M , "HERDERS DAT •• 1" = INPUT#!, DT •• FOR Z=1 
TO 14 INPUT#!, S'T< Z ") ■ NEXT 2 ! CLOSE ! IF ST< 7 X >0 GOTO 500 
460 CLS : PRINT "ERROR - there .are 'no such entries on this 
SPEC I fiL d i sk !" ' PR I NT * GOTO 418 

500 CLS * PRINT "Ready Printer, then press < ENTER >" 

313 P0t=i£S * fll Jj*0 * G0SUB48130 

323 CAPITAL GRINS ON MACHINERY, EQUIPMENT, BUILDINGS, & 
FARM"< LPRINT TRB< 33-< LEN< R$ V2 > ft$ ■ LPRINT 
TflB( 33-( LEN< fl$ V2 > > i STRI HGT< LEN< AT >, " = " > 

525 OPEN " I ", 1, "CGMEBF/d-at = 1" ' TC#*8 
533 LPRI NT ' LPRI NT ! FOR 2= i TO ST< 7 > •• LPRI NT 
STRINGS 66, >' LPRINT "Entry #"; 2 * LPRINT 

543 INPUT# 1, OE$ , DRT, NS#, DE#, OC#, CG# 

550 LPR I NT 11 Descr i P t i on • " > DET LPR I NT " Date So I d Or Junk ed ■; 

"DPT 

563 LPR I NT: LPR I NT " Net S.a 1 e Pr i ce ■■ "; TREK 48 ); •• LPR I NT US ING 

FIT;NS# 

570 LPRINT "Depreciation taken in Previous 
y ears" j TRB< 48 > ; •• LPR I NT US I NG FIT; DE# 

380 LPR I NT LPR I NT " Or i 9 i na 1 Cost = "; TRB< 48 >; •• LPR I NT US I NG 

FIT;DC# 

380 LPRINT "Net Capital Gain Or Loss : "; TREK40); : LPRINT USING 

FIT;Cu# 

600 TC#=TC#+CG# ■' NEXT Z 

610 LPRINT STRING^ 1 '. 66, )'LPRINT STRINGS 66, >'LPRINT 

"Tota 1 Cap i t a t Ga i n Or Loss : "; TRB< 48); : LPR I NT US I NG 
FIT; TC# •' LPRINT STRINGS 66, ' CLOSE ' RUN 






38 ) 


2033 PRINTG960; “Press <ENTER> to 
I coTit i me" j : POX* 1 028 •• ft i X=0 •' GOSUB 48138 * RUN 
40073 RN$= 11 " •• POKE VfiRPTRX AN* >, fl 1 X ■■ POKE 
VfiRPTRC am)+2, INK P0-V256)+69 ‘ POKE 
VRRFTFX FiNS >+l, POM-INK PQV256 >*256 * RETURN 

43130 QSX-PQX ■■ 93X=ft i % '■ ftX=Q • PR I MTSPGM, SIR I NG$< fl i X, 132 >; 

43131 IF AM* A 1 MTHEN40134ELSEPRIHTSPO.M+AM > CHR$< 132); 

46132 fl$= I NKEY* : I Ffl£" " 11 THEN40132EL3E IPX NSTRC " 

j ■’ ( )*+<. -. ?8123456733 ; < = >?S--‘flBCDEFGH I JKLriNOPQRSTUVWNYZe.be 
defshi Jk ImnoPRrstuvwxyz", fl* )THENPR I NTSPOM+flM .< fl*; ■ flM*BM+l ■ GOTO 
40131 

40133 

ONINSTRC CHR*< 3 HCHR*< 31 >+CHR*< 13 ), fl* )G0T048135,48 1 3©, 48138 * GO 

T040131 

40134 ft $-1 NKEY* •' IF ft$* “ “ THEN43134ELSE48133 
4S135 I FRX <fl 1 MTHEHPR INT@FQM+flM , CHR*< 132 >; 

40136 fiM=FiM~ 1 : I FRM< 0THENflM=0 •' GOTO40131ELSE48131 

40137 flM=Q 

40138 

IFfl*«CHR*< 9 1 )THENPRINTGPOM, SIR I HG*< ft IX, 132 ); ELSEPRINTSPOM+BM, 
STRINGS AIM-AM, 11 " ); 

40133 GOSUB48070 ; GOTO 51080 

43140 SM=i •• AN**" " = PRINTQPOM, "*"; STRINGS AIM, 132); " 

•' PR I NTSPOM+A 1 *1-2,; 

40141 

RS* INKEY*‘IFA*~"“THEN4014iELSEIFIN3TRC“0123456789“,fl* )THEN43i 
43ELSE0NINSTR< "~“+CHR*< 8 )+CHR*< 31 >+CHR*< 13 ), fl* )G0T04©145,4014 



39 ) 


0.. 401 40,40147 

40142 GOTO40141 

40143 

RN*=flN$+fi$ •' IFLEN< AN$ >= 1 THENflN$=CHR$< 132 >+RM$ELSE I FLErK RH$ )>Ri 
:;-lTHENRH$”LEFT$< AN$, AUs-1 )ELSEIFLEN< AN* >~3RNDLEFT £■< RHT, 1 )*CH 
R*< 132 >TH£NFiN$=R IGHT $< AH$, 2 > 

48144 

PRINTSPO^+A 1 ";~LEN< R m >, LEFT$< RN$, LEN< AN# >-2 >; ". "; RIGHTS RN$, 2 

); ••GOTO40141 

40145 

S/.=-S'; : PRINT2P0JS+A1 ‘4+ 1, " "i •• I FS”-~~ 1THENPRI NT " ~ 11 ; • G0T048141ELSE 
PRINT" : GOTO40141 

40146 IF fi$*CHR$< 9 1 I'THENPR I NTl2P0Ji+1, SIR I NG$< A1 %, 132 > s " 

■■ PR I NT8PQ^+R1 "4-2 > : G0T049143EL3EPRI HTSF'G'i, STRI HG$< A1 ";'+2, 

" )> : GGTQ40149 

40147 IFLENC f\H$ )=0THEHPR I NTSPQv, STR I NG*< A1 Ji+2, " 

"); ‘ GOTO40143 ELSEPRI NTfiPO%+1, STR I NG$< R1 ’1~ 1 -LEN< RH7 ), " 

11 ).; * IFLEFT$< RN$, 1 132 )THENPRINT©PQ>!+R15j-1, "0"; •• MID$< AN* 

,1,1) = "0" 

4S148 

flN$*MID$< RN$‘, 1, LEN< AN* )-2 >+" . "+RIGHT*< AN*, 2 > •• IFSfcs-lTHENAN**" 

-''+fiN* 

40143 GCSUB 48170 ■'RETURN 

48163 S"!*i '« AN*=" ’* « PRINTSPO’., STRINGS PIT;, 132 " " > 

43161 

INKEY* « IFA*="“THEN401S1ELSEIFINSTRC"0123456739" , A*>THEH431 
62ELSE0HINSTRC CHR*< 3 )+CHR*< 31 >+ " . " + " - " +CHR*< 13 >, A* >GCT0431 S3, 



40 ) 


40160, 48165.. 40163, 48166 = GOTO40161 

40162 

AN*aflN$+R$ ■■ I FLEW RN$ ) >R 1 ’;THENfiN$=LEFT $< RN£, RIM ) « G0T048161 ELSE 
PRINTSPCfc+fl 1 Ji-LENC RN$ >, RN$•• G0T0481 6 1 

40163 

3X=-S.‘: * PR I NTSPOJS+fi 1, 11 " i ■■ I F3“l=~ 1THENPR1 NT ELSEPRI NT " "> 

40164 G0TG48161 

43165 I FI HSTR< RN$, 11 . " >0THEN40162ELSE40161 

48166 IFflH$="THEN40168ELSEPRINTGP0’<, STRINGS RUi-LEW RN$ >, " 


40167 IFSJja- i THENRN$=” - " +RN$ ; GGTQ40163ELSE49169 
43168 IF fi*«CHR$< 9 1 >THENPR I NTfiPOfc, SIR I NG$T fl 1?£, 132 > > " 

"ELSEPR IHT8PQJS, SIR I NG$< R1 X , " " " " ; 

48163 G0SU8 49179 RETURN 

40178 RN#«VflL< am > < RN#«< INK < RN#+.005 >*100 >/100 ) ‘ RETURN 
50333 REM £ String Compression subroutine 

* 

51808 IF LEN<flN$>*0 THEN 31029 ELSE IF MID$<PN$, 1, 1 >=" ” 

THEN RN$*RIGHWRN$, LEW RN$ )-1 > •• GOTO 51899 
51010 IF LEWRN$ y~Q THEN 51929 ELSE IF 

mid$< ms , lew am >, i >= " then rn$*left$< am , lent bn* 1 > •• goto 

51013 

31820 IF < LEW RN$ )=9 RND Q9X< >9 > THEN PO”;=QS”» : : GOTO 

40139 

51038 RETURN 





41 ) 


Pro9ram Lis t i n9 : CG P BLS'D3flS 


!a i ns 

For « " : PRINT">> 

Died 

k 2 " 

■'PR IN 

T* * ^ i *; O .•»*, .*** **#« ,**, * •« •}*« mi, % ( 4h 

5 l y i 44- v « | v t -i L* 

out a 

.... .!» -4 

MASTE 

p 

, 

HP o **{ N 

1 .* LL 

^ f S w / 

' R$=" 

" OR <A$<>"1" AND 


0 REN % c9PbIsd--'bas version 1 QS/QB/SS 

18 CLS ; CLEAR 1 ©060' FI , ###.. ###.## " « PR I NT" << Op t i or. 


Purchased Breed ins Livestock Sold or 
26 PRINT ••PRINT" Do you wish to'"'PRIf 
cap i t a I 9a i ns record 11! PRI NT " 2 > Pr i rr 
record” : PRINT"3 > Abort and return to MASTER 
MENU" •• PR I NT ' PR I NT " Enter y our cho i ce < i, 2, OR 3)' 

30 rO':=S0? •• : GQSUB401S0 = R$*flN$ ' 

WO"2" AND A$< >"3” > GOTO 30 

40 IF fl$="3" THEN CLS* PR I NT "Return i r.9 to MASTER MENU"'RUN 

"MASTER/BAS" 

58 IF "2" GOTO 320 

68 CLS'PRINT"Place-the disk marked SPECIAL in Drive 1 then 

Press < ENTER)-" 

70 POX® 128 : fll ■' GOSUB40.130 

80 OPEN "I", 1, "HEAOER.--OAT ' 1" * INPUT#!, D$ : CLOSE •• IF 

CTO "SPECIAL” THEN CLS •'PR I NT "ERROR - this is not a SPECIAL 

disk! It is marked : ";D$'GOTQ 2800 

30 DIN ST< 14) ■' OPEN " I" , 1, "HEADER/'OfiT = 1" •• INPUT#! , D$ •• FOR Z=i 

70 14 •• INPUT#! , SIC Z ) ' NEXT •' CLOSE 

133 CLS« PR I NT » Entry # "ST< 6 )+1 'PRI NT 

118 PR I NT"Enter date sold or died <uP to 8 

chars. )” ' P0X=!63 = A1X=8 = G0SUB40138 ' DFlT=flNT ' PRINT 

120 PR I NT"Enter number of animals sold or 





42 ) 


I died" : PC-'-,“222 •• Rit'=5 ■■ GOSU8401S0 : NB=VAL< RNT > = PRINT 

130 PRINT ■ PR I NT "Net Sale 

■Price":PC''.=335 * FiIi0 * GQSU840140 •• SV#=AH# »PRINT 
HQ PRINT" Uti recover ed 

I Cost" : PQy.=40l • fllP;=10 : G0SUB40140 : UC#=fiN# : PRINT 
159 PR I NT : PR I NT" CaP i ta I Gain or 
Loss" : P0”;=533 fli;c*10: GOSUB40140 « CG#«RN# * PRINT 
M3 PRINT" Investment Tax Credit 

Recaptured" : PQX~6Q9 ■ Aii 0 = GOSU840140 ■■ IC#=RN# - PRINT 
170 CLS : PRINT"Verify that what you. typed is correct : " : PRINT 
180 PR I NT . PR I NT " Date so 1 d or d i ed * "; DPT • PR I NT " Number of 
animals sold or died ! " jNR 

190 PRINT'PRINT "Net Sale Price *"; : PRINT USING FliUSV# 

208 PRINT "Ur,recovered Cost-- : PRINTUSING FI$;UC# 


210 

PRINT : PRINT 

• "c 

aP i t 

at 

220 

PRINT"Jnves 

■tm 

ent 

Ta, 

FI$ 

; IC# 




230 

PRINT89S0J" 

Is 

thi 

s 

2= 1 1 

•icorrect)"; 1 

PO 

%-i 009 

(R$' : 

;>"1" AND R* 


"2" ) 

Q 

B$- 

'3": GOTO 40 




248 

CLS •• PR I NT 11 D 

o 

y ou. 

bJ i: 

entry to d i sk " : 

p* jtjj 

I NT" 

2 > 

MENL 

1"= PRINT : PRINT 

"Ent 

S' i"*‘ 

250 

PQy,-'34 7 '■ R1 

=1 

■' GOS 

UB« 

fi$< > 

"2") GOTO 2 

rr,£i 

ELS 

E 

260 

CLS : PRINT"P 

1 3.i 

... .u 
L. 'C L‘ 

he 


Formation ■; incorrect or 
ore*,1009 ‘ R1JS* 1 G0SUB4Q i60 ■ fl$-RN$ •• IF fli 


Dr x ve 





43 ) 




? ress < ENTER > " * POX* 128 •• fi 1 5i *0 ' GOSUB40130 
278 OPEN " I'M, "HEADER/DAT ' 1" ' INPUT#! .. 0$ * CLOSE •• IF 
07= "SPECIAL" GOTO 383 ELSE CLS : PR I NT" ERROR - this is -not -a 
SPECIAL disk! It is marked•• ";D$ 

280 PR I NT ' PR I NT" Do y ou w i sh to : " ' PR I NT ' PR I NT " 1 > Try 
as* in" : PR I NT ”2 > Abort arid return to MASTER 
MENU " •' PR I NT = PR I NT "Enter y our cho i ce < 1 or 2 >" 

285 PO’i-475 ' R1X-1 ' G0SU3 43168 •• R$=AN$ = I 
AND AT<>"£"} GOTO 285 ELSE IF fl$*"2" 7 
280 GOTO £63 

308 CLS'PRINT "Writ in9 entry to disk - Please stand by " : OPEN 
'EM/'CGPBLSD/DAT 1" ' PR I NT# 1, DA$; ", "NR; SV#; UC#; CG#j IC# •• CLOS 


R$= ,f 51 

OR (A$< >"1" 

N fi:?— 

"3"'GOTO 48 


310 ST< 6 >=ST< 6 )+1 : OPEN " 0 'LL " HEADER/DAT " = PR I NT# 1, DT = FOR Z= 1 
TO 14 = PRINT#! , ST< Z >' NENTZ = CLOSE ' RUN 

320 CLS : PR I NT" P1 ace the disk marked SPECIAL in Drive 1 .• then 

Press < ENTER > " ' PQJs* 123 * A1 X~® ' G0SUB43138 

330 OPEN "I'M, "HEADER/DAT : 1" : INPUT# 1, FM * CLOSE« IF 

D$=" SPECIAL" GOTO 488 ELSE CLS * PRINT "ERROR - this is not a 

SPECIAL disk! It is marked' " D$ 

340 PR I NT' PR I NT " Do y ou w i sh to " •• PR I NT ' PR I NT ” 1 ) Try 
3.91 in" 'PR I NT" 2) Abort and return to MASTER 
MENU "' PR I NT' PR I NT " Enter y our cho i ce < 1 or 2 > " 

358 POk-475' A 1X=* 1 ' G0SUB48168 ' A$=AN$' IF A$- " " OR < m< > " 1" AND 
A$<>"£") GOTO 338 ELSE IF A$="2" THEN R$-~"3" ' GOTO 48 
360 GOTO 323 

488 DIM ST < 14 ) ' OPEN "I ", 1, "HEADER/DAT ' 1" •• I NPUT# 1, D$' FOR Z=1 




TO 14: INPUT# 1 , ST( Z ) : NEXT Z CLOSE •• IF ST< S X >8 GOTO 418 ELSE 


CL3 - PRINT "ERROR - There are -no such entries Posted on this 
SPECIAL disk i" : GOTO 348 

418 CLS : PRINT "Ready Printer, then Press < ENTER > " 

420 ?0k,=S4«rl 1 ■<=& ■■ GOSUB40138 

439 11 CAPITAL GRINS FOR PURCHRSED BREEDING LIVESTOCK SOLD 

OR DI ED" * LPR I NT TRB< 33-< LEN< m V2 ) > ; •• LPRI NT 

TflB< 33-< LEN< fr$ V2 ) > i STRI NG$< LEN< m >," = " > : LPR I NT = LPR I NT 

433 TC#=8 

448 OPEN »i", i, " CGP8L3D/0RT " = FOR 2* i TO ST< 6 > : LPR I NT 
STRING$<66, >•• INPUT#! , DR$, NR, SV#, UC#, CG#, IC# 

430 TC#=TC#+CG# 

460 LPR I NT "Entry 2 : LPRINT 

473 LPR I NT "Date sold or died : "TRB< 48 )j DRT 

438 LPRINT "Number of animals sold or died : ; TRB< 40 X Nfl 

430 LPR I NT * LPR I NT " Net 3a l e Pr i ce •• "; TRB< 49 ) j * LPR INTUSING 

rl$i SV# 

388 LPR I NT "Unrecovered Cost = "; TRB< 48 ); > LPR I NTUS I NG FI * j UC# 
313 LPRINT = LPRINT "Cap ital Gain or Loss : "TRB< 48 )j = LPRINT 

USING F1$j CG# 

529 LPRINT" Investment Tax Credit 

Recap tured ••"; Tfi3< 48 >i = LPR I NT US I NG FI $ i IC# 

539 NEXT Z 

546 LPRINT STR I NG$< 66 , ) * LPR I NT STR I HG$< 66, " - " ) * LPR I NT 

" Tota l Cap i ta l Ga i n or Loss •• ”} TflB< 48 > > •• LPR I NT US I NG 
71$.; TC# * LPRINT STRINGS 66, ) : CLOSE : RUN 

2009 PRINTS968, "Press <ENTER> to 




45 ) 


I continue"•• PO*=1020 = fll?i*0 = GOSUB40130 •• RUN 
4007S m *" " •• poke vrrptrc an*>, R1 ’4 ■ POKE 
VnRFTRC RN$ >+2, I NT< P0"i.--256 >+60 • POKE 
Vf)RPTR( am >+i, PQ"'.~ I NT< PG-V25S >*256 * RETURN 
48 i 30 Q8fc«PQ3s •• 1 •• fl?i*0 •• PR INTQPO”;, SIR I NG$< R V<, 132 > i • 

48131 IF R”;~R 1 ’;THEN40134ELSEPRI NTSPOK+flJJ, CHR$< 132 > ; 

49132 fl$-INKEY$ •• I Ffl*= "" THEN40132ELSEIFI NSTR< " 

! *m .■'( )*+<-.?0123456789 =;<*>?SRBCDEFGHIJKLMH0PQRSTUVWNYZ/'3,bc 
defyhi Jk IrnnoPRrstuvwxy z" , >THENPRINT@PO”-»+fl’;, R$; : R”,'-~RR-*-1 : GOTO 

49131 
48133 

ONINSTRC CHR3K S HCHR$< 31 >+CHR*< 13 >, fi# >GO7O40135, 40130, 40138 •• GO 

TO40131 

49134 fl$=IMKEY$ •• IF A$»" ” THEN40 1 34ELSE40 1 33 
48 :35 IFR’-K R1 JiTHENPR I NTfiPQJj+fiJs, CHR$< 132 >; 

40136 flJjsflX-1 I FR5S< 0THEHR“;=8 * G0T048 i 31ELSE43131 

49137 flJs*0 

40138 

IFfi$=CHR$< 9 1 >THENPR I NT8PQ5S, SIR I NG$< R1 Js, 132 > > ELSEPRI NT0PO.^+fl3:, 
STRINGS R1X-RM, " " >■; 

40133 GO3UB40078 = GOTO51800 

40140 S."-:= 1 am* " " « PR INT8P0*;, " $ " j SIR I NG$< R1 y ., 132 >; " 

: PR I HTOF'OR+R 1 "4™2, ", " ; 

49141 

A*=INKEY*= I FR$= ”" THEN40141 ELSE I FI NSTR< " 0 123456783 " , R$ >THEH401 
43ELSE0NINSTFK "~"+CHR$< 8 >+CHR:IK 31 >+CHR$< 13 >, >G0T048145,4814 


8,40148, 40147 




46 ) 


4G142 GQTO40141 

40143 

•• I FLEW F\m )*1THENRN$*CHR$< 132 >+RN$ELSEIFLEN< RN$ »R1 
JJ-1 THEMflH^ : =LEFT $'■. RH$, fll Js-i )ELSEIFLEN< BNS i>=*3RNDLEFT$< F! H$, 1 >=CH 
R$< 132 )THENRN$*R I GHT$< RN$ ,2) 

40144 

PR I NTEPOL-rft 1 J4-LEW RN$ ), LEFT$< R N$, LEW RN$ >~2 >; " . " ; RIGHTS RN$ > 2 

Y, GOTO40141 

40145 

S.';=-3L ■ PR I HT@FO*;+Rl -4+1, " "; ■ I FS.*4=-1 THEN PR I NT " ■~ "•• GOTO40141 ELSE 
PRINT" " i •• GOTQ40141 

40146 IF fl$=CHR$<-91 ?THENPRIHTi2PO"4+l, STRINGS fll*, 132 >; » 

• PRIN73PQ’;+fl 1 *-2.>"."rG0T048149ELSEPRINT8PQ*..STRINGSfll*+2, 

" ! G0T04014S 

46147 I FLEW FiNT >*0THENPRINT«PO5S, STRINGS fll*+2, ” 

K ); : GOTO40143 EL3£PRINTeP0*+l, STRINGS fll*-l-LEN< RN$ >, " 

"); « IFLEFT$< AN$, 1 )=CHR$< i 32 >THENPR INTSPQ *+fl 1 ”4-1, " 0".; ••Ill D$( FiH$ 

,M)="0" 

40143 

flN*=MID$< rlN$s 1, LEW FIN# >-2 )+“ . "+RIGHT$< FlN#, 2 > •• IF8’4-~1 THENRN$= " 

-"+flN$ 

40143 GOSUB 40170 : RETURN 

43 i 63 S*= 1 •• fiH#= " ” : PR I NTSPO*, STRI NG*< R1 ”4, 132 >; *• "j 

43161 

R*=INKSY# : IFRf® 11 ” THEN40161 ELSE IFINSTRC " 8123456789, fl$ ) THEN401 
S2ELSEGNINSTR< CHR$< 3 >+CHR$< 31 )+ +CHR$< .13 >, fl* >G0704© 163, 


40160, 40165, 43163.. 40166 •• GOT040161 




47 ) 


« IFLB-K fiH$ )>fll J£THENflN$=LEFT:f< RH:£, BV4 > = GGTQ48161 ELSE 
PR I N7@PQJi+fl 1 “;-L£H< flN$ ), flN$; = GOTO40161 

4016-.3 

$%*-$?. ■■ PR I MTQPOrc+fi 1 •"<, "" ; » I FS.";=" 1THENPRI NT ELSEPRI NT" "; 

43 1 £4 Gu i U4y l£>! 

40163 IFINSTR< flN$, " V8THEH40162ELSE401S1 

43166 IFRN$~"" THEN40163ELSEPR l NT8PQ5; > STRI NG$< fi 1 ’1-LEN< RN$ ), " 

48157 IFS>.~- iTHEHF1NT--” -" +FlN$ = GOTG40169ELSE40169 
40163 IF flf=CHR$< 9 1 j'THEHPRIHTSPO'i, STRINGS Rl“l, 132); " 

: ; ELSEPR INTSPOM, 3TRI HGK R iX> " " >; " " ; 

40169 GOSUB 40170 = RETURN 

40170 fiN#*VRL< RH$ ) = FlN#=< INK < RN#+.0Q5 )*100 VI 08 ) « RETURN 


56300 REM $ Data Entry Subroutines .+: 

30331 REM % Gosub 40140 - Dollar entry % 

50802 REM % Gosub 40150 - Numeric entry % 

30893 REM % Gosub 49130 ~ fi 1P ha/nurnei- i c entry % 

38804 REM t Parameters •• 4: 

38005 REM % inPut : P o’/, ~ Print 0 Position % 

38066 REM % al'l ~ number of characters to allow % 

30087 REM % output : an$ ~ response % 

30008 REM % an# = numeric rounded equivalent % 

53999 REM % StrinS Compression subroutine 


51000 IF LEN< fi'NT )=0 THEN 51029 ELSE IF MIDT( FlN$.. 1 * 1 )=" " 
THEN fiN$~R IGHTK FiH$, LEN< AN* )-1 ) = GOTO 51 ©89 





48 ) 



51010 IF LEN<fiN£>~@ THEN 51028 ELSE IF 

hid*< m, len< am >, i >=" " then rn$»left$< am, len< am >-1 > = goto 

51010 

51020 IF < LEN( RN$ >=0 FIND Q3X< >©> THEN PQ?«=Q8* = •• GOTO 

40120 





49 ) 


P r o 9 r a m L i s t i n 9 : C G R B L B Pi S 


0 REN t c9rbl/bas version 2 88/05/82 

10 CLS* CLEAR 1 0008 : DIM ST< 14 !:■ * FI $* "$$#, ###, ###, ## " * PR I NT " > > 
Option : Post or Print Out Record of Capital Gains For 
«" : PRINT">> Raised Breedin9 Livestock Sold 


/ / H 
\ \ 


15 FB$ S " ############ " 

20 PRINT : PRINT”Do you wish to 1 " ■' PRINT PRINT" 1 ) Post an entry 
to capital 9a in record" : PRINT"2> Print out capital 9a in 
record" : PR I NT • PR I NT " 3 ') Abort and return to MASTER 
MENU" = PRINT * PRINT"Enter your choice <1, 2, or 3>" 

38 P0'l s 671 : P1 M 1 * GOSUB40160 < A$=AH$ : PR I NT IF A*= " " OR 

1" AND AT< >"2" AND A$<>"3"> GOTO 30 
48 IF fi$="3" THEN CLS'PRINT"Returnins to MASTER MENU"<RUN 
"MflSTER/BflS" 

39 IF A$="2" GOTO 340 

60 CLS* PR I NT "Place the disk marked SPECIAL in Drive 
1,." : PRINT"then Press < ENTER >. " 

70 PCM 123 * fl 1 y.=8 * GOSUB40 i 30 

30 OPEN "I'M, "HEADER/DAT * i " * INPUT# i, OS ■ CLOSE 

90 IF D$=" SPECIAL" GOTO 110 ELSE CLS : PRINT " ERROR - this is 

not a SPECIAL disk! It is marked* "sOS 

180 GOTO 2800 


110 OPEN 


if : ji *f u i 


1, "HEADER/DAT i " * INPUT#! , OS * FOR Z 


14* INPUT#!, ST (. Z ) ■■ HE NT Z * CLOSE 

120 EN=ST< 5) * CLS * PR I NT" There are "; EHj " entr i es i n record. " 



50 ) 


138 EN*EN+1 

148 PR INI "Entry #";EN 

150 Dfl$="" ; PRINT "Date sold ( up to 8 chars.) 

" PC':* 135 * R1 y.~Q ■ GOSUB40139< DR^=FiN$ •• PR I NT 
160 IF LENC Dfi$ X >3 GOTO 135 

165 CLS = PRINT "ERROR - you. must tape in a date!" = GOTO 2280 
170 CIS: PR I NT " Do y ou. w i sh to • " •• PR I NT » PR I NT" 1 > Ret y P e 1 as t 
entryPRINT"2) Abort and return to MASTER 
[ MENU'"i PRINT' PR I NT "Enter your choice <1 or 2>" 

180 P0':=347 « fl 1 y,* 1 ■ G0SUB48160 • fl*=RN$ « PR I NT = IF R$= " " OR 
■fl$<>"l" PHD n$< >"2" ) GOTO 188 ELSE IF FlT="2" THEN 
P$="3" ! GOTO 40 
190 CIS ’PRINT ■ GOTO 140 

195 IF LEN<DR$»8 THEN DF!$=LEFT $<. DFi$> 8 ) 

209 PRINT-PRINT "Number of animals sold 

"•• P0>.=273 •• fir-;==5 * G0SU848168 •• NS*VflL< ANT > • PRINT 

205 PRINT 

210 PRINT "Total amount <$> received " : P0":==411 : F) 1 18 ; GOSUB 

40148 ••TR#=flN# : PRINT 

220 CLS-'PRINT"Verify that what you typed is 
correct :: PRI NT « PR I NT" Entry #"; EH 

230 PR I NT" Date so l d « "; 0F\$ ■■ PR I NT * PR I NT" Number of an i ma l s 
sold : NS-PRINT ! PRI NT " To ta l amount received •• "j-PRINT USING 

FI$;TR# ! PRINT : PRINT@360.» "Is this information- <Incorrect or 
2=incorrect )"> 

240 po.":= i q 10 •• fi i y.= i = G 0 SUB 48 160 •• m=m$ •• i f "" or < m< >" i" 

AND fl$<>" 2 ") GOTO 240 ELSE IF R$="2" CLS : GOTO 2200 



51 ) 


BN CLS : PRINT "Mount the disk marked SPECIAL in DRIVE 
[ 1," • PR I NT" Then P ress < ENTER >. " 

|2b*0 POX- 1 28 * A1 y.~Q ■■ GOSUB40138= PR I NT 
270 OPEN "I'M, "HEADER/DAT: 1" * INPUT#!, D$ < CLOSE 
283 IF 0$="SPECIAL" GOTO 310 

290 CLS = PR I NT "ERROR - this is not a SPECIAL disk! It is 
nark ed ■ "; D$ •• PR I NT •• PR I NT " Do a ou w i sh to * " : PR I NT •• PR I NT "I > Try 
[ a9ain" •• PR I NT "2 ) Abort and return to MASTER 
: MENU" = PRINT « PR I NT "Enter a our choice <1 or 2) 

300 PC‘:=475 fl 1 :<= 1 •• GOSU840 ! 60 ■■ ATTAINT « PR I NT •• IF m -" " OR 
I (fl$<>" 1" AND fl$<>"2" > GOTO 300 ELSE IF m="Z" THEN 
h$="3" : GOTO 40 
305 GOTO 250 

313 CL5'PRINT "Writing entry #";EN;"to disk - Please stand 
by." ••OPEN "E", 1, "CGRBL/'DAT•'1" < PRINT#!, DAT.; ", "; NS; TR# ■ CLOSE 
323 OPEN "O’M , "HEADER/DAT =1" ST< 5 )=EN « PR I NT# 1, DT; " FOR 
Z=i TO 14 : PR I NT# 1, ST< Z ) ■' NEXT 2 : CLOSE 

338 RUN 

340 CIS’PRINT" Place the disk marked SPECIAL in Drive 
1," •' PR I NT" then P ress any key. " 

333 P0’:= 128 = A! X=Q * GO SUB40130 •' PR I NT 

360 OPEN "I'M, ”headerrdat i" = INPUT#!, D* •' CLOSE 

not a SPEC IAL d i sk ! It is mark ed •• "; D$ ■■ PR I NT •• PR I NT" Do a ou 
wish to =" : PRINT : PRINT" 1) Try a9ain" < PRINT"2 ? Abort and 
return to MASTER MENU" : PRINT ■' PR I NT "Enter your choice < i or 


370 IF D$=" SPECIAL" GOTO 400 EL3ECLS •• PRINT "ERROR 


2 )" 




380 P0'-;-473 • fl 1i GOSUB40160 fl#=AN$ • PR I NT •• IF " " OR 

IfllO'T" AND fl$<>"2" > GOTO 388 ELSE IF A$="2" THEN 

fi$="3" : G0T0 40 
333 GOTO 348 

400 OPEN "I", 1, 11 HERDER/DAT : 1" : INPUT# 1, D$ •• FOR 2= 1 TO 
14 = INPUT# 1, ST< Z > •• NEXT Z ■■ CLOSE 

410 IF ST( 5 X >8 GOTO 458 ELSECLSPRI NT" ERROR - No entri 
have yet been stored on this disk ! " : PRINT : PR I NT "Do you 
to : " : PRINT•• PRINT" 1 > Try a9ain" PRINT !, 2) Abort and retu 
MASTER MENU" ; PRINT : PRINT "Enter your choice <1 or 2>" 

430 P0*=475 « fi 1 '■;= 1 : G0SU848168 ■ A$=AN* * PR I NT « IF R$= " " OR 
" AND flf< >"2" > GOTO 428 ELSE IF A^= i! 2 ! ' THEN 
; G0T0 40 
430 GOT0 348 

453 CLS * PR I NT" Ready P r i n t er > then _ p r ess any k ey " 

460 P0*= 12S •' A1";=8 : GO SUB48138 : PR I NT 

478 fif="CAPITAL GAINS FOR RAISED BREEDING LIVESTOCK 
SOLD": LPRI NT THB( 33-< LEN< AS V2 ) D; AS * LPRI NT 
TRB< 33-( LEH< AS V2 > ); STRI NGS< LEH( AS >, " = " ) 

475 LPR I NT ‘ OPEN "IM, "CGRBL/DRT" •• TG#=S 

480 FOR 2=1 TO ST< 5 > : L PRINT STRINGS 66, )* LPR I NT !, En 

#";Zj "of"; ST< 5 ) : LPRINT 

439 INPUT# i, DAS, NS, TR# : LPR I NT " Date so 1 eh TAB< 56 >; DAS 
590 LPR I NT : LPR I NT " Number of an i ma l s so 1 d : " / 7 ABC 52 ) : L 

USING FB$;NS 

■10 LPRINT •• LPR I NT " Iota I amount rocs i ved •• "; TAB< 58 )> •• LP 


USING FI id TR# 




53 ) 


520 LPRINT ! TG#=TG#+TR# : NEXT Z 

530 LPRINT STRING*< 66 > "-">■• LPRINT STRINGS 66, > 

540 LPRI NT " To ta l cap i t a I 9a i ns • "TflB< 50 >■; = LPRI NT US IHG 

Fl 'Si lb# 

550 LPRINT STRING*?66, "-">•• RUN 
2000 PRINTffi960, "Press < ENTER > to 
continue".; = PQ>;*1020■' FiVi~Q : GQSUB40130 * CLS : RUN 
2203 PR INTS960," Press < ENTER > to 
eonti nue"; = P02 = 1020 P1 "1=8 ■■ G0SUB48130 ’ GOTO 170 
1 40070 AN*«" " POKE VflRPTR< BN* >, B i X « POKE 
VfiRP7R< AN* )+2, INK PGV256 >+60 •• POKE 
VfiRPTR< AN* >+l, POJi-INK PQ5J/25S >*256 : RETURN 

40130 A3fi*0 « PR I NTQPO’;, STR I HG*< B1 *, 132 >; 

43131 IF 1 JJTHEN40134ELSEPRIHTSPO"l+B":, CHR*< 132 >; 

43132 A**INKEY* •• I FB*« " " THEN40132ELSEIFI NSTR< " 

\mV<. >*+<-. ?0123456789 : i <~>?SRBCDEFGHIJKLNNOPQRSTUVNNYZrabc 
def9h i J k ImrioPArstuvwxyz", B* >THENPR I NT@PO^+B^, fl*; •• B>;<=BX+i » GOTO 

40131 
40133 

0NIHS7R< CHR*< S >+CHR*< 3 1 >+CHR*< 13 >, B* >G0T040135, 40130,40138 = GO 

TO40131 

46134 A**INKEY* IF R*= " "THEN40134ELSE40133 

43135 I Ffl'-K fl 1 “S THEN PR I NTSBOS+fi*, CHR*< 132 > j 

43136 fi”;=flM-1 •• I FB'K 0THENfl5S*0 ■' GOT043131ELSE40131 

43137 Pl- v ,-0 

43138 

IFR$=CHR*( 31 > THEN PR INT8P0M, STR I NG*< fl 1M, 132 >; ELSEPRI NTfiPOJS+fVS , 




54 ) 


STRINGS ftl'i'-Pi’..’ " " > 

40133 GOSUB49070 ■ GOTO510Q8 

49140 S'/M ■ RH$«"" PRINTQPQ5J; i STRINGS MZ, 132).; " 

:| ; : PR I NTSP05i+fl 1 Z~21 "."i 

40141 

fl$=INKEY$ : I FR$-" " THEN40141 ELSE IFI NSTR< " 0123456789 " , f\$ )THEN401 
43EL3ECNINS'TR( "-"+CHR$< 8 >+CHR$< 31 >+CHR$< 13 >,BS >GOTO40145, 4014 

0j 40140 j 43147 

49142 GQTO40141 

49143 

IFLEN( RN$ >*1THENRN$«CHR$< 132 >+flN*ELSEIFLEN< RN$ »R1 
1;-1THENRN$=L£FT Si RN$, fll?£-l ?ELSE I FLEhK RN* >=3RNDLEFT Si RN$ > 1 )=CH 
R$( 132 )THENFiN$=R IGHT$< RN$, 2 ) 

40144 

?OT£PGl;+mi;~LEN< RN$ ), LEFT* ms, LEW. RN$ >~2 >; ” . " RIGHTS RHS, 2 

); : G0TG43141 

48145 

S’i=-S’4: PR I HT8P0J!+fl bZ+ 1, 11 " i ■■ 1 FSZ=~ 1THEHPRI HI" - ■■ GOTO40141 ELSE 

PRINT" "i : GOTQ40141 

40146 IF fl$*CHR$< 9 1 >THEHPR I NTSP05S+1 .• SIR I HGS<. fl 1 Z , 132 >j " 

: PR I NT8P0*J+R 1 Z-2, ". "; •• GOTO40149ELSEPRINT2P0 ”;, STRINGS MZ+2, 

• ")j ‘GOTO40149 

40147 I FLEhK RN$ )™0THENPR I NT8P0-. > SIR I NGT( RlJs+2, " 

?);: GOTO40149 ELSEPRI NT8P03S+1, SIR I NG* R1 Z~ 1 ~LEH< RN4? >, 1! 

*)> ■■ IFLEFT$< RH$, 1 132>THENPRINTSPO^+fl 1 -4-1, "0”.; = MID* ms 

,IA )= !, 0" 


49143 




55 ) 


l,LEN<flN$)-2?+". "+RIGHT$< AN#. 2 > IF'S’i --1 THEHftN$= " 
I 40149 GQSUB 49178 -RETURN 

40163 $X= 1 « m$~"" ■■ PR I NTSPm, SIR I HQ$< ft1 *, 132>;" " i 

40161 

■DINKEY* I Fft$«"" THEN40161 ELSE IFINSTRC " 9123456789 " , fl$ )THEN401 
KELSEQNINSTRC CHR$< 8 >+CHR$< 31 )+ +« - " +CHR$< 13 >, m )GOTQ40160, 
43:63,48165.. 49163.48166 : G0T049161 

43162 

p=RN*+R$ * IFLENC m$ ) >fl 1 *THENflN*»LEFT*< f\m, ft IV. > * GOTO40161 ELSE 
PRINT2P0Jj+fllK~LEN< fiN$ >t RH $; ■ G0T048161 

40163 

3';=-S‘; > PR I NTSPO’S+R V4> ‘ I FS";=-1THENPRI NT " - "; ELSE PR I NT " “ i 

40164 G0T049161 

40165 IFINSTRXRN$, ” V0THEH40162ELSE40161 

48166 IFRN$s" 11 THEN40163ELSEPRINTSPQ2, 3TR1 NG$< ft 1 JHLEN< RH$>, " 


40167 lF37»“~lTHENRN$="~ ,l +flN$ * GOTO40169ELSE401 S3 
40163 IF fl$=CHR$< 31 >THEMPRINTQP05S, STRI NG$< ft 1 4 , 132 ) j ” 

"; ELSEPRI NTSPQV. , STR I NG$C ft 1 4 , " " >; " " 

48169 GOSUB 49 1 70 •• RETURN 

40178 RN#~VfiL< ft NT ) ■■ FiN#==< IHT< < RN#+. 885 >$108 VI00 > RETURN 

58008 REM t Data Entry Subroutines 

56081 RtM $ Gosub 40140 — Dollar entry 

58804 kEM $ Gosub 4w 1D8 ~ Numeric entry 

38833 REM $ Gosub 40130 - ft 1P havnumer i c entry 

30884 REM % Parameters : 




S position 


. 

58306 REM t 3 . 1 % ~ number of characters t 

50007 REM % output •• &n$ = response 

50008 REM t an# = numeric rounded e^uiva 

50535 REM t Strin9 Compression Subroutine 
51000 IF LEN<flN$>=0 THEN RETURN ELSE IF MID$<RN$ 

I THEN nH*=RIGHTT< RHT, L£N< FiN* >-1 ) « GOTO 51 @00 
151010 IF LEN<FlHT)“@ THEN RETURN ELSE IF 
I HI0$< m, LEH( AN* > , 1 )= " ” THEN RN$==LEFT$< RN$ , LENC 


-1 fli A 

'J J, ■J + ■»' 


51320 RETURN 



57 ) 


Pro9ram Listing : CONFIG/BFlS 


M REM corif is/bas : revision 2 08/04^82 

: CLEAR 10008 

10 CLS « PR I NT" Sa stem Conf i 9urat i on Ed i tor" •• PR I NT * PR 1 NT " Wou I d 
I m l i k e to : " •' PR I NT * PR I NT " 1 > Create CONF IG/DRT " •' PR I NT " 2 > 
Viewer Print out current CONF I GrDAT" ' PR I NT" 3 > Change 

I CCMFIG/DflT" 

111 PRINT "4) Sort CONF I G-'DAT ba code numbers. “ PRINT"5 > Sort 
IcONFIG/DflT ba description. " : PRINT : PRINT"S > Abort and return 
to BAS IC" ■■ PR I NT: PR I NT : PR I NT 11 Enter a our cho i ce C 1, 2, 3, 4, 

5, or S). M 

23 P0';=873 •• A1 1 « GOSUB 40130 « •• IF m< >" 1" AND m< > " 2 " 

AND fl$<>"3" AND fl$<>"4" FIND FIND fl*<>"6"GOT020 

30 A.':=VflL( m > ■ IF A%=6 THEN CLS •• PR I NT " Sa stem Conf i Surat i on 
Editor finished. " : END 

5G CLS : PR I NT "Data disk is in what drive <0.. 1.- 2, or 3)" 

55 PQk-44 •' f! 1 y.~ 1 ■■ GOSUB 40i 60 = 0R$=ANT * IF DR$< > "8" FIND DR$< >" 1" 

AND DRS<>"2" AND DRT< >"3" GOTO 55 ELSE PRINT 

57 IF ZZZ-0 AND flti=4 THEN Z9 $~"numerical code numbers.” 

60 ON A>; GOTO 65,63,65,6000, 7800 
65 DEFDBL fi-Z ON AN GOTO 70,510,360 

7G PRINT "Press < ENTER > when data disk is mounted in Drive 
” ; DR *i •• PO£*500 : A1 X~0 ■ GOSUB 40138 
80 OPEN "0", 1, "CONFIG/DAT ; "+DR* 


REM"' 



58 ) 


106 REM PREPARING TO WRITE CONFIG/DRT 

110 

.errr:~r t: oror~or :ro: t: rs>r rr: rsrro~on::nm it.:t r,~:rz *rrrr:m: 5! 

120 CLS : PRINT "How many account codes " : P0.t=2S • Rif=4 • GOSUB 

40163 = Mfl’l-VRL( RH$ ) 

130 PRINT#!, MAM 

■ FOR Z";=l TO MAM '• CLS •* PRINT "Account code number "} ZMj " 

o f“jXf% 

145 PRINT 

156 PRINT "Enter account code number 
■ ••P0M*156 < A1M=5 •• GOSUB401S8 • JKD-VflLX AN$ > 

160 PRINT : PRINT "Enter account code - ".HMD;" 
description" PQM=25S • A1M=50 GOSUB40130 « XD$=flN$ 

178 PRINT : PRINT "Enter account tape "; ■■ P0M=34Q■■ A1M=2 -GOSUB 
43150 : XT=VRL< AN$ > 

188 PRINT#!,MD; MD$; ", ";MT 
198 NEXT ZM 

283 CLS : PRINT "How many bank--■account codes 
1; PQ%=29 : A!M~4 ! GOSUB 40160 •• XBM*VflL< AN# ) : IF XBfc-O THEN 
PR I NT # 1,0 : GOTO 390 

210 PRINT#!, MB"; •• FOR ZM*1 TO MB"; •• CLS = PRINT "Bank/Account 
Code‘HZ*;" of"; MB"; 

223 PRINT "Enter Bank .--Recount code "; : P0M--8S 1 : AiM : =5 : GOSUB 
40160* KC=VRL< ANT > 

230 PRINT : PRINT "Enter description for Bank/Account code 

"iXC 

248 PGM*256 •' A1 M=50 = GOSUB 481 SO : MOT“ANT « PR I NT# 1, MC; MOT NEMT 






IO 


59 ) 


300 CLS : PRINT "How many enterprise codes 
; PQ‘/.=2? ■■ = GQSU8 48160 = XEJS*Vfl L< BH$ > : IF XEX=0 THEN 

piNT#L 0 *GOTO 400 

310 PR I NT# 1 , HE?. ■■ FOR ZX= 1 TO XEX » CLS * PR I NT ” Enter P r i se " ; Z 

of"; KE-'i 


323 PR I 

NT 

pc 
r n 

11 NT 

H C r ,-L 

erPr 

158 

CO 

40160 : X 

!F=VF)L 

.( RN 

*•£ \ 

*n* / 




330 PR I 

NT- 

PR 

:IHT 

"Ent 

erPr 

ise 

de 

40130- f: 

CM“~ 

r 

:RH 

14* 





340 PR I 

NT it 1 > 

XFj 

yc-j: : 

NEXT 

--7? a.» 


400 |“i C; 

■•PR 

:IHT m N 

umbe 

r of 

far 

m i 

*j T0':=: 

26 1 

pi 

";'~4 

■■ GOS 

UB48 

168 : 

XG: 

PRINT# 1 

.« 0 : 

GO 

TO 

508 




410 PRIi 

NT# 

i 

1 t 

XG"1 

■ FOR 

•* 

J. 

TO 

XG: 


•nci |p 

a w* U i- : 


PRINT 

420 PRINT "Operator code 
"; •• PC'/.* 142 « R 1 '<=5' GOSUB40160 ! XH* VRL< RHT > 

436 PR I NT •• PR I NT" OP era to r 

description" : P0*;=256 : fll“;~50 ; GOSUB40130 ■' NHT-RNT 
443 PR I NT# 1 j XH; XH$ ; NEXT Z% 

jk CLS : PRINT "Fi le CONFIGrDRT has been created" : CLOSE : RUi 

510 


523 REM" 


View current CONi- IG.--DR i 


i30 




60 ) 


: I" == 


m n rs nr nr nr m nr nr nr nr nr nr m nr rn m nr nr nr nr rr :rr nr rn nr nr nr m nr nr rn nr nr nr rn n nr nr nr nr nr nr nr rn nr 11 


540 OPEN i! I", 1, " CONFIG/DfiT ’ " +DR* 

0 CL3PRINT "Do you wish a hardcopy Printout of the file 

(Y/N)?" 

560 PCL=52 : fl 11 • GOSUB40130 • ATTAINT = IF B$< > " Y " AND m< > " y ’’ 

I AND ■$<>"N"RND ATO"n" GOTO 5S0 ELSE PRINT 
573 1“ fi$ a "Y" OR A$«"y" THEN LP=1 ELSE LP®0 
I 530 IF LP=1 PRINT ; PRINT "Ready Printer., then Press 
< ENTER >" •' PGX-588 •• B1H-0 > GOSUB40130 ; PRINT 
■K MASTER ACCOUNT CODE CATALOG" •' IF LP=1 THEN LPRINT 
Tfi£<33-<L£H< AST >/2 ) ); AST '■ LPRINTTABC 33-< LEN< B9$ V2 > >} STRINGS L 
EN( PS$) /’ =" ) LPRI NT •• LPRI NT 

■00 INPUT# 1 1 KB'4 •' PR I NT "Number of account codes » "HA";' 

613 IF LP“ 1 LPRINT "ACCOUNT CODES = Expenditures" 

I 628 IF LP=1 LPRINT "---" 

638 DIM XD< y.B4 XD$< Y,BX ), XT< XBX >« FOR Zfc=l TO 
| m■■ INPUT#!.. XD< ZK ), ND$< ZX), NT< 2N > » NEXT Z2 
640 PRINT "ACCOUNT CODES : Expenditures" : FOR Z";®1 TO NAZ 
650 IF mZ'4»9999 AND HDi Z’/.X 20000 THEN PRINT ND<Z-0.;" ' 

- "> XDT< Z*< > : PRINT TAB 1 ! 19 )" Account ty pe - " i NT! Z“» > : IF 

L?=l THEN LPRINT ND( Z-" ; NDT< Z'4 > •• LPRINT 

668 NEXT ZK 

663 IF LF~1 THEN CLS : PRINT "Ready Printer for Receipt codes 
then P ress < ENTER > " • P0Z=SCC A1 2=8 •• GOSUB40138 •• PR I NT 
667 IF LP-1 THEN 

tPRINTTAB'l 33~< LEN< AST V2 ) > j AST : LPR I NTT AB< 33~< LEN< AST V2 3 >j STR 


INGK LEN( AST >, " = " > = LPR I NT * LPR I NT 





61 ) 


■p IF LP~ 1 THEN LPRIHT : LPRINT : LPRINT "ACCOUNT CODES = 
peeiPts• LPRINTSTRING*< 23, ) 

Hp PRINT "ACCOUNT CODES • Receipts" : FOR ZX=1 TO X8X 
650 IF XDCZX >>19999 AND >-,D< ZX K33009 THEN PRINT XD< Z*>; " 

It- " i XD$< ZX) •' PR I NT TAS< 18 > " Account ta p e - " j NT< ZX >•• IF 
LP=1 THEN LPRIHT KD< ZX'n" -“ ; ND$< ZX > : LPRINT 

6'c NtXT ZX 

633 INPUT# i,N8X : IF H8X---8 PRINT "No Bank/Account 
codes." ! GOTO740 ! ELSE PRINT NBN; " Bank /Account codes. 11 
706 IF LP=1 THEN CLS •' PR I NT "Ready Printer for Bank ••■'Account 
codes then P ress < ENTER > " •• P0X~588 •• A1 X~® ■ GOSUB40 i 38 • PR I NT 
710 fl$="MASTER BANK/ACCOUNT CODE CATALOG" •• IF LP~1 THEN 
LPRINT TFIEK 33~( LEN< R$ V2 > >jF1$ •• LPRINT 

Tfl8( 33-( LEN( A$ >/2 > >; STRI NG$< LENT A$ >, " = " > : LPR I NT * LPR I NT 

720 FOR ZX=1 TO HBX 1 INPUT#1, XC, NC$•• PRINT XC > " - ";XC$ ! IF 

LP=1 THEN LPRINT HCi " - " ; XC$ ; LPRINT 

"30 NEXT ZX 

740 INPUT# 1 j HEX : IF HE”;=8 PRINT "No enterprise codes." 1 GOTO 
80S : ELSE PRINT XEXs " enterprise codes. 

758 IF LP-i THEN CLS ■'PR I NT "Ready Printer for Enterprise 
codes then P ress < ENTER > " « PO.";«508 : A1 X-8 •• G0SUB48138 •• PR I NT 
760 A#*"MASTER ENTERPRISE CODE CATALOG" : IF LP=1 THEN LPRINT 
TnS( 33-< LEN< A$ V2 > > i m ■■ LPR I NT 

TA8< 33—< LEN< m >/2 >); STR I NG$< LENT A$ >, " = " > = LPR I NT : LPR I NT 

773 FOR ZX*1 TO HEX ■ INPUT#!.■ HP, KF$ : PRINT HP; " - "; XF$ ■ IF 

L?=l THEN LPRIHT XF; "-" NFS : LPRINT 

738 NEXT ZX 



62 ) 


800 INPUT#!,.KGS’ IF NG*=0 PRINT "No operator codes. " : GOTO 
859 ELSE PRINT KG*;" operator codes. " 

0 IF L?=l THEN CLS •'PRINT "Ready Printer for Operator codes 
then P ress < ENTER >" : PO*=380 : A 1 *«0 = GO SUB48138 < PR I NT 
820 8$="MASTER OPERATOR CODE CATALOGIF LP=t THEN LPRINT 
Tf£; 33-( IEN< m V2 > > i m ■■ LPRI NT 

■(33-<LEW AT )/2 > >; STRINGS LEN< A$ >, " = " > •• LPRINT = LPRINT 

830 FOR ZX=i TO KG* ■ INPUT#!, XH> XH$ ■■ PRINT XH; '* - ” > XH$ •• IF 

LP=1 THEN LPRINT KH) " - XH$ •• LPRINT 

840 NEXT 2'i 

80S CLOSE : PRINT: PRINT "End of CONFIG/DAT — Press <ENTER> 
PCX-300 •• A 1**0: G0SUB48138 • RUN 


368 REM 

■ 

Pr^rrririsnrnrnrnrnrrs nrnr nr nr nr rn nr nr rn rn nr nr nr nr nr nr m nr rr nr rn nr nr r.n nr nr rn rn nr nr nr rs rn nr nr rn nr nr rn m rn nr rn nr: 

330 REM PREPARE TO ALTER CONFIG/DAT 

896 

rrnmrrnrrrm :n rn nr rn rn nr m nr nr nr rn nr nr an: re: nr nr nr m or rrr rn ::r nr nr nr rn rn nr nr as nr nr nr nr nr nr rn m 

308 GOTO 320 

3:0 IF FI$='"T" OR A$*"a '' THEN Z*=l •' RETURN : ELSE IF A*~"N" OR 

fl$="ir' THEN Z*“0 : RETURN ! ELSE Z*=£ : RETURN 

920 CLS : PRINT "« Alter CONFIG--'DAT >>" ■■ PRINT PRINT 

330 PR I NT "Answer either 'Y'' or *’ N ■’ to the folIowinA 

questions ••" 

949 PRINT 1 PR I NT "Do you wish to alter the account codes?"; 

358 PQ*=360 A 1 K~ 1 * GOSUB40130 * AT “ANT = PR I NT « GOSUB 9 i @ = IF Z*=£ 

GC~G 350 ELSE IF Z*= 


1 THEN Ai~1 ELSE A1=0 




63 ) 


PRIST-'PRINT "Do you wish to alter the bank/account 

cjtes?"; 

573 P0‘.'=433 = ft 1 2= 1 * GOSUB40138 •• ■ PR I HI •• GOSUB 918 : IF 22=2 

GOTO 379 ELSE IF 2*4=1 THEN R2=l ELSE R2=0 

MO PRINT : PRINT"Do you. wish to alter the enterprise codes?"; 
H PC2=S13 = ft 154=1 = GOSUB40 1 39 = fl$= RN$ = PRINT •• GOSUB 310 •• IF 22=2 
fee:: 530 ELSE IF 22=1 THEN R3=l ELSE fl3=8 

11000 PRINT ; PR I NT" Do you wish to alter the operator codes?"; 
1313 P02=743 ■■ ft 1 2= 1 = GOSUB401 38 = fl*=flN$ = PR I NT « GOSUB 918 : IF 22=2 
GOTO ISIS ELSE IF 22=1 THEN R4=l ELSE R4=0 
1015 IF ft 1=8 AND 02=0 BHD R3=0 RND R4=0 THEN RUN ELSE OPEN 
"Ota, "SCRftTCH/DRT •• "+DR$ : OPEN ’TL L "CONFIG/ORT = "+DR* 

1026 CLS 

1630 PRINT"<< filter account codes >>" 

1343 PRINT = PR I NT "Stand by... retrieving current account 


codes : 


1056 INPUT#!; XR2 : 
XR2=0 GOTO 1065 
1063 FOR 22= 1 i 0 
*365 IF ft 1=0 GOTO 
1373 CLS : PRINT "Do 


DIM ND< NR2+ 10), ¥,Q$< XR2+18 3, NT >1 NR2+10)= IF 

NR2 =INPUT# 1,ND< 22),XD*<22),NT<22) = NEXT 22. 
1898 

you. wish to change or delete any existing 


codes <Y/H>?" 

1033 P02=58 = ft 12= 1 = GOSUB40138 = R#=RN$ = PR I NT = IF fi$< > " Y " RND 
fi$OV FIND R$<>"N" RND fi$<>"n” GOTO 1080 ELSE IF fi$="Y" OR 
GOTO 1308 ELSE GOTO 1588 

1330 PRIHT#2,NR2 -IF NR2=0 GOTO 1100 ELSEFOR 22=1 TO 
m ■■ PR I HT#2‘, ND< 22 ); ND$< 22 ); " , "; NT( 22 ) = NEXT 22 



64 ) 


1103 GOTO 2-308 


1388 FOR 2'<~i TO 

vqv r T p 7"/ vy 

c* y 

GO 

TO 1490 

iELSECLS : PR I NT"rice 

ou/nt- code u $ 

***» « . , 

i; 

Of " jXRJS 

1318 PRINT"ficcoun 

t code # **; 

ND< 


) ; PR1NT"DescriPtion - 

Z/S > * PR I NT " R 

ccount type 

- 

it . 

NT< ZZ > 

1320 PRINT : PRINT” 

Do you wish 

to 

: n 

PRINT : PRINT" 1 > Leave 

it is."-- PRINT"2) 

CharvSe it* !} 

: PR 

TH 

T"3) Delete 

it" PRINT ■■ PRINT "Enter a oar c 

hoi 

ce 

( 1 L .■ or 3 ) 11 


1338 PO';=r35 PI 1 1 « GOSIJB401 30 > «F»N$ * PR I NT = IF Fi$< > " 1 ” FIND 


account code - 


account descr-. 


account taPe - 
" ■■ PQ’/.=83 : fl 1 ■■■*"• 2 : 
1390 GOTO 1430 
1438 REM 


' \ ii o n 
, / w 

GOTO 1 

338 




GOTO 

1490 





GOTO 

1400 





'Old 

account 

CO 

de ~ " i ND< 

: ZZ > •' PR I 

NT "New 

i : GOS 

US4-01G0 

• HD 

< ZZ ? 

: !H-T > •' PR I 

NT 

Old 

account 

de 

w *— t * a ***** S r 

<D$< Z5S > * 

PRINT ”Hew 

■30 •• G 

OSUB401 

r\9\ t 

XD$< ZZ )~F!t 

i $ ! PRINT 


Old 

account 

ty 

Ps - "j NT< 

; ZZ ! PR I 

NT "Hew 

GOSU 

840160 ! 

VT y 

ZZ >==VRL< flf 

4$ > ■ PR IN 

! 


1431 REM 
1402 REM 


MOVE ACCOUNTS DOWN fi NOTCH AND DECREMEN* 





■0 jocwra+i )~q •• kd$< xrx+i >="" ; xt< xass+i >=0 = for q»zx to 
■*XD< a>*K0< Q+l) : XD$< Q )»XD$< Q+l )* xt< q :«xt< Q+l ) « NEXT 
.-ZX-ZX-l 

1 1430 NEXT ZX 

■500 CLS-'PRINT "'Do aou wish to add aria 'new -account codes 

■Y/N) 

■510 PQX-4? ■■ rl 1 1 = GO SUB 40 1 30 •' fl$=RN$ •• PR I NT •• IF fi$< >V" AND 

**<>%•" FIND fi$<>"N" AND fi$<>"n" GOTO 1510 ELSE IF fl$="N" OR 

GOTO 1099 

1520 CLS ; PRINT "How many new account codes do aou wish to 
! add" ■ P0*;=4b .• fl 1 X*4 •' GOSUB401SQ : Nfl*VftL< RN-P > * PR I NT 
1325 IF Nn>IS PRINT "No more than ten additions at a time.. 
Please.. : GOTO 1520 

1538 FOR ZX*XRX+1 TO XRX+NR : CLS PR I NT "Recount code" ; ZX; " 

■■iXflJi+Nfl 

1540 PRINT : PRINT "Enter account code 

11 « Put" 147 ■' FI 1 X~3 ■■ GOSUB401S8 • XD< ZX VflLC RN$ )»PR I NT 

1550 PR I NT PR I NT" Enter account code 

description" •' PQ.f-320 *fllX»30 : G0SUB48136 •• XD$< ZX >=RN$ •• PRINT 
;3S8 PRINT “Enter account type 

11 :PGJi = 433 •' A1 •”:••=£ ■' GOSU8401S0 > XT< ZX >VRL< RN$ ) = PRINT 
1373 NEXT ZX ■ XRX^XRX+NR : GOTO 1830 

2333 INPUT# 1, X8X ■ CLS = PR I NT" < R 1 ter Sank /Recount Codes >" ; DIM 
iC; X8X+10), XC$< XBX+18 > ■' IF X3X=0 GOTO 2883 ELSE FOR ZX~1 TO 
KfX : INPUT# 1, XC< ZX >.. XC$< ZX )= NEXT ZX 
2803 IF FI2=0 GOTO 2028 


2819 PR I NT "Do aou wish to chanSe or delete ana existing 




66 ) 


■mk/accourit" : PR I NT " codes < Y/N >?'' 

2313 P0’:=141 A 1 ** 1 « GOSUB 40130 = fl$=AN$ « PR I NT •• IF Fr$< > " V " AND 
fi*OV : AND A$< > " H" AND A:TO"n" GOTO 2015 ELSE IF A$~”Y" OR 
ft*=V GOTO 2038 ELSE GOTO 2500 

2029 PRINT#2jKBL : IF XBt=0 GOTO 3880 ELSE FOR Z*=l TO 
X2L?PIN7#2, y,C< ZX >i XC$< ZX > •• NEKTZ* * GOTO 3638 

2030 REM 

2040 FOR ZX~ 1 TO KB* ■ IF Z*>NB* GOTO 2490 

BLSECL3 PR I NT " Bank /'Account code "; ZX > " of "; XBX : PR I NT 

2042 PRINT"Bank /Account code - 

8 i XC< ZX > : PR. I NT = PR I NT " Bank /"Account code descr. 

« PRINTXC$< ZX PRINT ! PR I NT " Do you wish to= " : PRINT ; PRINT" 1 > 
Leave it as it is. " = PR I NT” 2 > Change it, " : PR I NT" 30 Delete 
it." 

2043 PRINT : PR I NT "Enter sour choice <i, 2h or 3>” 

2045 PGX-SS3 ■■ A1 *= 1 = GOSUB 40138 •' A$=fiN$ ■■ PR I NT : IF A$< > " 1 ” AND 
AND A$<>"3" GOTO 2045 ELSE IF fi$="l" GOTO 2490 ELSE 
IP fi*="3" GOTO 2400 

2230 CL.S-' PRINT"Old bank/account code - "; KC< ZX > : PRINT "New 

bank.'account code - '' : P0*=88 : Al*=5 : GOSUB 

40160 < XC< ZX >=VF!L( F\m > PRINT 

2066 PRINT "Old bank ./'account code descr, ~ 

" : PR I NTXC$< ZX ) = PR I NT ; PR I NT " New bank /account code descr. - 
" * P0';=384 « A1 *=50 •' GOSUB 48130 « XC$< ZX >=AN* •' PR I NT 
2378 GOTO 2498 


2400 


p £ j v | ccc::=c::::c: in or or or nr or or r.r or ro rn or :oo or ro: ro or :oo ::r or or ro or ro ro ;oo or or or or ro or or ro ro or or or or or or or ro or ro or 




67 ) 


B REM MOVE BftNK/fiCCOUNT CODES DOWN ft NOTCH RND DECREMENT 

C. 

rem 

ssr==r “rssms sszr nr sr :r; nr re rr 53 S 3 53 zr rr 53 sr zr z;z r 5 :zz nr zs 35 rz zr zr :zr zr zr nr zr zr rz rrss nr 55 35 35 

h XC( XBJJ+1 )«0 * 8C$< KB■■■;'+1 >« " “ •• FOR Q=Z5< TO 
fc:XC(G)=XC< Q+i) : XC$< Q Q+l > •• NENTQ •• •' ZX~ZX~i 

■ B?0 NEXT zz 

■00 CIS : PRINT "Do you wish to add new bank ■••''account codes 

I (Y/N)? !l 

fell ?Q’;,~4S •' fi 1 Ji* 1 * GOSUB 40130 « RS=RNS = IF RS< > " Y " RND ft$< > " a " 
RND Fi$<>"n” GOTO 2518 ELSE IF ft$«’*N" OR FiS="n" 

*010 2028 

I 2520 CLS : PRINT "How many new bank •■•"account codes do you wish 
to add"■' rQX-5 1 : ftl*=4 : GOSUB481S0 « Hft=VRL< AN*>•' PRINT 
2525 IF HR> 1S PRINT "No more than 10 additions at a time.: 
Please..":GOTO 2529 

2539 FOR Z**XB*+1 TO XB^+Hft : CLS : PRINT "Bank.-"Recount 
code" ; Z% > " of " } KBJS+NR •' PR I NT 
2543 PRINT "Enter bank/account code 
POX* 152 : ai”:=5 ■• GOSUB401S0 ■ NC< ZX >*VRL< FINS ) •• PRINT * PRINT •• PRINT" 
Enter bank /account 

description" •• PCki=320 ‘ Rl“i=50 * G0SUB48138 •• NCS< ZX )=RNS = PRINT = NEXT 
I'; XS>;=XB*+Nfi ■' GOTO 2929 

3608 CLS = PR I NT" < R1 ter Enter? r i se Codes > " •• INPUT# 1, HEX ■■ D1M 
XF(XEX+i0),XFSCXE";+i8:^ IF HEX-® GOTO 3885 ELSE FOR 2"S=1 TO 
XSX : INPUT#!, KF< ZX ')> KFSC ZX > « NENTZ’i 
3805 IF R3“0 GOTO 3828 ELSE IF NE>=0 GOTO 3388 



68 ) 


PRINT : PR I NT" Do you wish to change or- delete existing 

Liter?r i se" : PR I HI" codes < Y.-'N >? " 

fc: POJJ*£05 : RI 1 ; G0SU8 48138 • fi$=RN# * IF m< > " Y " AND m< > " y ” 
lfl#<>"N" AND fl$<>"n" GOTO 3815 ELSE IF R$="y" OR R$="Y" 

Koto 3030 else goto 3500 

Hi PRINT#2;XE/J ! IF KE"-S=0 GOTO 4000 ELSE FOR Z!s=l TO 
1 r«PRINT32, KF< ZX >;XF*< Z”: ) ? NEXT ZX -• GOTO 4888 
■30 FOR ZX=i TO XEX : IF ZX>NEX GOTO 3438 ELSE 
I CIS ; PRINT" Enterp rise code" ; ZX; " of" ; NEX* PRINT 
■B35 PR 1 NT :: Enter? r i se code - "; NF< ZX > = PR I NT " Enter? r i se 
■description ••" •• PRINT NF$< ZX ) •• PRINT •• PR I NT "Do you wish 
lto= ,,: PR I NT < PR I NT" 1 ) Leave i t as i t is." •• PR I NT " 2) Chan9e 
I it."■PRINT "3) Delete it, " 

3037 PRINT 1 PR I NT "Enter your choice <.l> 2> or 3>" 

3048 ?Q’<~793 ■■ R1 X« 1 : GO SUB 48138 •• R#=fiN# = IF fi $< > " 1 " RND PTC > "2" 
AND fi$<>"3" GOTO 3848 ELSE IF GOTO 3438 ELSE IF 

fi$= :l 3" GOTO 3388 

3850 CL3 •• PR I NT "01 d enter? r i se code - " ; HF< ZX > : PR I NT " New 
enterprise code - " : PQX=8S •• filX=5 : GQSUB 
4016*3 KF( ZX )«VRL< AN# > ■ PR I NT ■ PR I NT * PR 1 NT "01 d enter P r i se 
description : F’RINTNF$< ZX ) : PRINT"New enterprise description 
■ PQ‘i-384 : fl 1 ’<=58 

:o:i gosus 40130 * xf$< zx >=an$ ■■ goto 3430 

3383 


3301 REN MOVE ENTERPRISE CODES DOWN fi NOTCH RND DECREMENT 





/ \ 


p T 1 * r=r r :n r: nr r.* r:rr m nr nr rr m nr nr mnr nr m rr nr nr nr rs nr nr rr nr rn m nr nr nr nr :m nr nr nr nr nr: rn nr m nr rn nr m nr rr nr rn 

153:3 XF<XE£+1 )"8 ! XF*< XEt+l >=" " •• FOR Q~ZX TO 
t .m Q )=XF( Q+1 ) = XF*< Q >=XF$< Q+1 ) •■ NEXT Q = XEt=XEt~1 ■■ ZX=ZX-1 

1 3430 NEXT ZX 

13580 CLS : PRINT"Do you wish to add aria now enterprise codes 

35ifl P0K*51’Bl*:= 1 « GOSUB 49i30 = A$=AN* •• IF A*< > "Y" AND fl*<>”a " 

I AND fl$<>"N" AND A$<>"n" GOTO 3518 ELSE IF A$«"N" OR A*=”n" 

GOTO 3820 

3o29 CL-S : PRINT "How many new enterprise codes do you wish to 
add" •P0.t-43 ■ fll.”v-4 ■■ GOSUB401S6 NA=VAL< AN# > PRINT 
3530 IF MAM0 THEN PRINT "No more than 1-0 additions at a 
time, P lease. . " : GOTO 3520 

3540 FOR Zt=XEt+1 TO XEt+NA * CLS •• PR I NT" EnterP r i se code " ZX }" 

of’LXEt+NR 

3558 PRINT ; PRINT "Enterprise code - 

" •• P0t= 146 > A 1 t=5 « G0SUB4Q 160 ; XF< ZX >*VAL< AN# > * PR I NT * PR I NT : PR I NT " 
Enterprise code description ~ 

" •• PG":=320 = Ait=50 = GOSUB48130 •• XFS< ZX >=AN$ •• PRINT * NEXT 
ZX ■■ XEX=XEX+ NR * GOTO 3020 

4080 CLS •• PR I NT" < A l ter oP orator codes >" = INPUT# 1, XGX « DIM 

HH( XGX+ 18 >, XH*< XGf + i 0 > •• IF XGt=0 GOTO 4005 ELSE FOR Z ■■;;=! TO 

XGX •• INPUT# 1, XH< ZX >, XH*< ZX > ■ NEXT ZX 

4005 IF A4=0 GOTO 4028 ELSE IF XGX~@ GOTO 4308 

4818 PRINT : PRINT"Do aou wish to change or delete ana 


existing codes <YxM>? 




70 ) 


POX* 186 ■■ Fl i X* 1 = GOSUB40130 •' fi#*flN* ■■ IF B$< > " Y " AND Fi$< > "a" 
RHD m<> n n" GOTO 4015 ELSE IF fl$«”N" OR A$="yi” 

f cor; 4500 ELSE GOTO 4039 

1 4020 ?RJNT#2,XG%* IF XGX=0 GOTO 5000 ELSE FOR ZX*1 TO 
k=PRINT#2, XH< ZX ); XH*< ZX ) > NEXTZX : GOTO 5888 
' 4036 FOR ZX-i TO NGX ■ IF ZX>XGX GOTO 4498 ELSE 
■LS: PR I NT "OP st- a tor- code”; ZX; ” of”XGX « PRINT PR I NT "OP era tor 
lode - "; XH< ZX) •• PR I NT ” OP erator descr i P t :L on -" •• PR I NTXH$< ZX ) 

' 4035 PRINT 'PRINT "Do you wish to- ” : PRINT : PRINT” 1) Leave it as 
lit is. :l ! PRINT"2) Change it. " * PRINT"3 ) Delete it. " 
f 4037 PR I NT ^ PR I NT " Enter a our cho i ce < 1, 2 , or 3 ) " 
f 4040 POX-799 •• R1 X~ 1 •• G03U8 48138 •' A$=AN$ •• IF m< > " 1" FlHD fi$< > " 2 " 
m P$<>"3" GOTO 4040 ELSE IF fi#==”l” GOTO 4493 ELSE IF 
GOTO 4330 

4053 CLS •• PR I NT ” 01 d oP erator code - " ; XH< ZX > = PR I NT " New 
operator code ~ 

" •• POX-35 •• R1 X=5 : GOSUB40160 = XH< ZX >=VRL< PINT ) •• PR I NT = PR I NT = PR I NT " 0 
I d oP erator descr i p t i on - " •• PR I HTXH$< ZX) : PR I NT ” New oP erator 
description - " • 

4052 P0X=384 •• R1X«50 ; GOSUB40 139 = XH$< ZX >=RN$ : PR I NT * GOTO 4430 
4308 

R E M ~ ^ ~~ rn m rr m nr :ne irs? m nr mss nr mm nr merer nr m nr rn :r: rn rn rn :nn m rn nr rr: nr ::r m nr nr rn rn nr rn m nr rn nr ;nn m rn 

4301 REM MOVE OPERATOR CODES DOWN A NOTCH AND DECREMENT NGX 

4302 


REM 55 r ” ^ 55 ““ ss nr m rn nn: nr nr re re rn nr nr m nr nr rn nr nr rn nr rn rn nr rn nr nr nr nr nr rn rn rn nr nr nr nr nr rr: nr rn nr rr nr rn nr 

4310 XH< XGX+i )*0 •• XH#< XGJS+1 ” •' FOR Q=ZX TO 

XGX XH< Q >*XH< Q+ 1 > * XH$< Q >=XH$< 0+ 1 > = NEXT Q •• NGX=NGX~1 = ZX=ZX~ 


1 


71 ) 


I 44SG NEXT ZX 

4530 CLS : PRINT "Do you wish to add any new operator codes 

(r'/N)?" 

■510 P03S-49 : R1 X* 1 : G0SUB48130 •• R$«RN$ •• IF R$< > " Y " AND R$< > " y " 

AND R*<>"N" FIND fl#< > "n" GOTO 4510 ELSE IF R$»"N" OR R$="n" 

5570 4023 

4526 CLSPRINT "How many new operator codes do you wish to 
add« PQ5s=47 = R 1 X=4 •• G0SUB49160 *- Nfl*VRL< RN$ ) « PR I NT = IF NR > 1S THEN 
PRINT "No more than 10 additions at a time.. P lease. : GOTO 

4528 

4530 CLS •• FOR ZX*XGX+ 1 TO XGX+XFi * CLS ’ PR I NT " OP er a tor 
code " i ZX " of "; XGX+HB * PR I NT 
4549 PRINT ,J Operator code - 

II •• FOX-1 44 * FUX "5 > G0SU3431S0 * HH< ZX >=VRL< RN$ > PRINT * PRINT = PRINT" 
Operator code description - 

":PO.t”320 = Rl“i=50 = GOSUB40130 * )<m<. ZX )=RN$ •• PRINT •• NEXT 
IV. ■■ XG5i»XGJS+Nfl GOTO 4020 

5003 

RE!'l zz ~^^^ ::z 52r "T"ssrs ss:rrr. tz.o-- rz is zzzs r-rszrzr zz rr :r” :rrrz zz srr:rr zrss:r--r r::““ zz±~zs 

5031 REN NOW PUT SCRRTCH/DflT INTO CONFIGrORT 

3332 

R E M ^ zz ^ — — — —* ““ .t: rr 4*::: .*rr srs :rr zz: zz :zz zzzzzzsszzzzzzzs zs zz zz zr zz zz zz zz zz :tz zz zz zz zz: zz :zz zz r.z zz zz zz ::z 

5335 CLS : PRINT"Finished with changes... writing hack 
CONFIGrDRT" 

5310 CLOSE < OPEN " I'M, "SCRRTCH/DRT•• " +DR5 OPEN 
, '0",2, "CONF 1 GrDRT : ”+DR$ 

5828 INPUT# 1, XBX ■■ PR INT#2, XBX •• FOR ZX* 1 TO 




72 ) 




■ft*-' INPUT#!. KD< ZX >. XD*< ZX >, XT< Z?S>« PR I NT#2. XD< ZX); XD$< ZX ) ; 

m <&)' NEXT zx 

5039 INPUT#! . X8X : PRINT#2. X8X : IF X3X=8 GOTO 5048 ELSE FOR 


m ■■ INPUT# !XC< ZX). KC$< ZZ ) PR I NT#2. XC< ZX > s XC$< ZZ > : NEXT ZZ 
5040 INPUT#1,XEX'PRINT#2, XEX = IF XEX=8 GOTO 5858 


KE.T INPUT#! XF< ZZ >, XF$< ZX > = PRINT#2, XF< ZX )j XF$< ZZ ) ■■ NEXT 
5053 INPUT# 1.< XGX : PR I NT#2. XGX ■' IF XGX=8 GOTO 5060 ELSE F 


INPUT#!XH< ZZ >, XH$< ZZ > ■ PRINT#2. XH< ZZ >) XHT( ZZ > ■■ NEXTZX 
5068 CLOSE: KILL " SCRRTCH/DRT = " +DR$ RUN 
6000 CLS-PRINT" » Sort CONFIG--"DRT By Code 
«"'PRINT : PRINT = PRINT"This sort will Place items in 
ascend i r>9 order " » PR I NT" accord i n9 to the ir 'X ZSS ■ PR I NT * PR 1N" 
6810 PRINT" Pr ess •’ 1 * to s tar t s or t i n9 ’ or •’ 2 •' t o ab or t. ' ’ 

6020 R$=INKEY$ : IF R$<>"1" RND R$<>"2" GOTO 6828 ELSE IF 
THEN RUN 

6030 OPEN "IM, " CONF I G--'DRT " +DR$ ■' OPEN 
”Q :I 2. "SCRRTCH/DRT : "+DR$ 

INPUT#!,XR=IF XR=8 GOTO 


6840 

PRINT" 

\ \ 

/ / 

w O f 

**t i rv3 

Recounts <<":INPU 

6178 

ELSE D 

TM 

•** * « 

XD< 

) .« 

XD$< XR XT 1 ! XR ) : FOR 

XFN INPUT#!.. 

XD< 

2 ,i 

HDt< 

2 >. XT Z > : NEXTZ 

6850 

N-H’Fl : L 

_•» 

X 




6060 

l ■* 

IF 

L< f- 

\ GOT 

0 6868 

6065 

L*INT< 

<L- 

-1 )/ 

'2 > 


6070 

i. {*" L r " ! :3 

GOTO 

w 14 *0 

■ 




73 ) 


U8@ LI"N-L 

6232 FOR P"i TO LI : H~P 

m K=H+L 

Slid IF 22=0 AND XD<K»XD<H> GOTO 6126 ELSE IF 22*1 THEN 
K > * X2$*XD$< H > * GOSUB 7 166 « IF X1 $ >X2$ GOTO 6 i 28 

> 6115 

f C=X5( H) : G$*XD#< H > : G1 =XT< H ) ■ XD< H >=XD< !< > « XD$< H >=XD$< K > = KT( H >=XT 
(K )•• XD< K )~G> XD*< K >=G$ » Xt< K >=G 1 ' H*H-L •• 1 F H>0 THEN 6188 

6120 NEXT P 
6133 GOTO 5863 


6140 

P£f>j:r:5 r: m rr nr m nr mm m m nr mnrnrimnrmmmnrrnsrnr ns nr m: nr nr rn m jsr nr :r: rr nr nr m m m nr nr m nr nr nr m nr m nr nr nr nr 

6158 REN XFi IS SORTED - WRITE IT TO SCRATCH-'"DAT 

6160 


REM = ^ 55 35 32 ss rs nr rs rs nr nr nr nr nr nr rn nr nr nr nr rr nr nr rr m nr nr nr nr rs nr nr nr nr m m nr ss m nr rn m nr nr :rr rn nr nr nr nr rn 


6170 PRINT#2,XA ; IF XA=0 GOTO 5280 ELSE FOR 2=1 TO 
HR ■■ PR I NT# 2, XD< 2); XD$< Z >}”,"} XT< Z ) •• NEXT Z 

6200 PRINT” » Sortin-3 Bank .•••'Accounts « ” ■■ INPUT# I, XB: IF XB=8 
GOTO 6358 ELSE DIM XC<XB >, XC$<XB> : FOR 2=1 TO 
XB •• INPUT# 1, XC< 2 ) .■ XC$< 2 > = NEXT 2 
6218 N=XB : L=1 

6228 L=LX2 : IF L<N GOTO 6228 
6225 L=INT< < L~1 )/2> 


6230 IF L*0 GOTO 6328 
6248 LI=N-L' 


6258 FOR P=1 TO LI 


6255 H=P 


74 ) 



BB K=h'+L 

170 IF ZZ=0 BHD XC< K )>KC< H) GOTO 6280 ELSE IF ZZ=i THEN 
|*=XC*C K) : X2$*XC$< H) •• G0SU8 7 1 80 IF X1 $ >X2$ GOTO 6288 


G=v;c(H) G$*XC$< H) •• XC< H )*XC< K >•• XC$< H >*XC$C K ) ■■ XC< K >~G * XC*< K 
-•H=H-LIF H>8 THEN 6260 


:'~GT 







i 6333 REM KS IS SORTED - WRITE IT TO SCRflTCH/DflT 

5340 

6353 PRIHT#2j XB ■' IF XB«0 GOTO 6408 ELSE FOR Z~l TO 
KS ; PRINT#2L XC< Z X: XC$< Z > = HEXTZ 


6430 

PR I NT 

’ /» \ \ 
/ / 

o 

or 

tins 

Er> 

ter P r i 

ses 

< <* !? : 

Tur. 

a Nr 

UT#1 

GOTO 

6558 

ELS 

E 

DI 

M KF< 

XE 

>,XF$< 

PE ) 

: FOR 

tv i 

TO 

INPUT# 1 

, KF 

(Z 

5, 

XF$< Z 


NEXT Z 





6418 

N=XE •' 

L— a 










642 k) 

L~L#2 

: IF 

L 

< H 

GOTO 

6 

420 





6425 

L= I NT 

< < L 

JU 

>-•" 

•p \ , *f *55 

4m •*’ i 

L 

~8 GOT 

O 6 

520 



64 38 

LI=N- 

L 










d 4 4 U 

FOR F 

1 

TO 

L 

I : H-P 







6445 

K=H+L 











6430 

t p *7 *7 

“0 

BN 

D 

KF f -. K ) 

>v 

F ( H > G 

OTO 

4 

EL 

c ; p ji 

Xl$=tt 

F$< K > 

$ *1 Um 

-:ir 

-1*' 

vcr 

5* •«] 

$< H ) : 

GO 

SUB 71 

00 ; 

rr !..) •» 

j. r a a 

$ >P 

2$ Gi 




riLi'-i 


6455 




75 ) 


C*XF< H > G$-XF#< H > ■ NFC H >=XF< K > : XF$< H >*NF$< K > : NFC K >*G •• XF*< l< >=G$ 

i(i'= ; —L : IF H>0 THEN 6445 

6463 NEXT P 
6473 GOTO 6425 

6520 

^ zz ^ .-s: rr -r: rr rn its ssssss r«: ^rrriss^cssssr^sr.'srsrssr: rs :rr 4“ ss ^ rn .rs *rr 


5530 REN XE IS SORTED - WRITE IT TO 3CRfiTCH--'C'fiT 

6540 


C C >:]—r: .r: -r ss r~ r: :r rs sz :zr. r": r7 sr rn r.7 ;rr ;rr r- rnr zz zz -r zz tt. nn: zz :;~ tt: :.7:: 7.-: rn :rr r: ^ .ir zz :7“ “7: :r- rn rs zz :r: 


6359 PRINT#2j XE ■' IF XE*0 GOTO 6600 ELSE FOR 2=1 TO 
XE PR I NT#2, NFC Z >; NF$< 2 > ’ NEXT 2 

6609 PRINT"» Sorti tvs Operators «’’ : INPUT# i,XG •• IF NG=8 GOTO 
6750 ELSE DIM XH< NC ).> XH$C XG > : FOR 2=1 TO 

XG•• INPUT# 1, Xl-K 2 >, XH$< 2 > « NEXT 2 

6610 N*XG ; L= 1 

6623 L=L#2--IF L< H GOTO 6628 


6625 L=INTC<L-1 V2 > : IF L=0 GOTO 6728 


6630 LI=N-L 


6643 FOR P=i TO LI‘H=P 
6645 K=H+L 


6650 IF 22=0 AND XHCK)>XHC H) GOTO 6670 ELSE IF 22=1 THEN 
X1 *«XH$< K > * N2*=NH$C H ) ■' GOSUB 7 1 SO = IF X1 $ >X2* GOTO 6670 
6668 

G«XH< H > = G*»XH*< H > : XH< H >*XH< K > : NH$C H >=NH£C K > : XH< K >=G = NH$< !< )=GT 
■■ H=H-L : IF H>0 GOTO 6645 
6670 NEXT P 


6688 GOTO 6625 




76 ) 


672d 

CM-~ ~ rr r*m m rnr: m nr nr as na m rn rn nr m m m as rn nr mnr nr nrnr nr rn nr m m rn nr ns m nr nr nr nr m m nr nr nr nr nr nr rn nr 

I #30 REM KG IS SORTED - WRITE IT TO SCRATCH--"0AT 

6740 

p£ ( l ; j r rr s: rn m rrrn rn rn rn :nn nr nr nr rn rn nr rn nr nr as rn :m nr m nr nr as nr rn rn nr nr nr nr rn as nr nr nr nr nr nr m nr rn as nr nr as as as 

f p50 PRINT#2.XG'IF XG*0 GOTO 6888 ELSE FOR 2=1 TO 
I XG ?RINT#2 , KH< Z > i XHT< 2 ) < NEXT 2 
I 6503 CL3 : PRINT"Finished sort in 9 - writinS back 
CONFIG/DAT" -'GOTO 0818 

7830 Z9 $~ 11 descriPtions" : 22= 1 : GOT0 6888 

7190 

0 -n] r rr m rn rn rn nr nr m rn nr :r: :nn m nr rn nr nr rn rn nr m nr m rn m nr rn nr rn nr as nr as nr nr as as m nr nr nr nr nr nr ns nr nr nr m rn nr rn rn 

7113 REM REMOVE ALL LOWERCASE LETTERS FROM TEST STRING 

7120 

P £jvj r: nr m m nr nr m nr rn nr nr nr rr: nr nr m rn rn m rn as nn: rn rn rn rn nr rn nr nr rn m rn nr nr nr rn nr rn rn rn nr nr an rn nr nr nr nr nr nr nr rn rn 

7130 ZT= " " ; FOR 29* 1 TO LEl'-K X1 T > « RT=M I DT< X1 $, 29 .IMF 
fl$C< RT »90 THEN RT*CHR$< ASC< RT >-32 > 

7148 ZT*ZT+RT : NEXf Z9=X1T*ZT 

7158 ZT=' f " ; FOR 29*1 TO LEN< X2T > •• RT=f11DT< X2T.Z3. 1 > : IF 
flSC< RT > >98 THEN RT*CHRT< RSC< RT >-32 > 

7 1 S3 ZT=ZT+RT ■■ NEXT 29 « X2T=2T > RETURN 

40878 ANT*" " : POKE VARPTRCANT >,A1X«POKE 

VfiRPTR< ANT >+2. INK F'OX/256 >+68 * POKE 

VflRPTRC ANT >+1, POX™ I NT ( PQX/256 >$256 •• RETURN 

40130 G8X=P0X •• Q9X*fl1 X ■ RX=8 • PR INT2PQX. SIR I NGT< AIX. 132 > > 

48131 IF AX*A1XTHEN40134ELSEPRINTSPOX+AX.CHRT<132 >j 
40132 AT*INKEYT:IFAT*""THEN48132ELSEIFIN3TR<" 



77 ) 


L'( )*+<-. ?8123456733 ■■ ; <*>?$RBCDEFGHIJKLMNOPQRSTUVWKYZabcd 
HjktanoMrstuvwxyz", fl$ )THEN'PRIHTQPG7S+R";.. R$j ■ RJs-RJs+i : G0T04 

I 40133 

HfS7R( CHR$( 8 >+CHRS< 3 i >+CHR*< 13 >, R$ >G0T048135, 49133, 48138 •• GO 

*343131 

■34 fi$= INKEY$ * IF fl$* " " THEN40134EL3E48133 
Hi n 1 'iTHENPP. I NT8P0”;+Fi.”'».. CH FM 132 

■36 : IFFPK8THEHR>,'"0 G0T048i3iELSE48131 

mil.' fiJs=8 

40138 

»*=CHR7( 3 1 )THENPR I NT8P07., STRI NG*< R 1 "1, 132 >; ELSEPRI HTGPO, 

BTRING$< " " >; 

43:33 GOSUB40070 « G0T051.080 

■40 S’l=i •• flH$="" • PR IHT8P0 ”;, "t-" ; STRINGS RIM, 132 " 

I'FRISTSPOX+fl1M-2, ", 

40141 

BlNKEYS ■ I Ffl$= " " THEN40 141 ELSE IF I NSTR< ” 8123456789 " , m >THEH401 
lsECNIN3TR< "-"+CHR$< 8 HCHR ■$< 31 >+CHR$< 13 ), m >GGT04ei45, 4814 

O'-3.48 j 48147 
48143 GO7O40141 
46143 

k*N$+fi$ = I FLEW 8H$ 1THEHRH^=CHR$< 132 )+FiH$EL3E 1FLENX am )>R1 

ltTHENRN*=LEFT$< am, RlM-i >ELSEIFLEN< am >“3RNDLEFT$< RH$, 1 >=CH 

ban )THEHflN$*R i ght$< am, 2 > 

4C 1 4 -r 

■ntspoitpiv-lew am >, am, lenc am >-2 "."; rights am, 2 





78 ) 


| ); GCTO40141 

I 4c l 

f &-$'/, •• PRINT8PQ*+fl 1 ?S+ i > " "; - I FSJi“~ i THEN PR I NT " - ”; •• G0TQ40141 ELSE 
I PRINT" "i ■ GO TO 40141 

43146 IF fl*=CHR*<9i )THEHPRIHTGPO"l+l, STRINGS 132); " 

■; •• PRlHT@PQX+a 1 5J-2 G0T049149ELSEPRIHTGPO"., STRI NG$< fi 1 ?S+2, 

I- "); ; GOTO40149 

43147 I FLEW >*0THENPRINT<SPQ5S, STRINGS fllJi+2, " 

I *•• GOTO40149 ELSEPRINTSPO*+ i , STR I NG*< Fi 1 X -1 “LEW fiN$ >, " 

I f); >IFLEFT$< aNS, 1 >*CHR$< 132 )THENPRINT8P03S+fl 13j-1, "0"; ‘ FiNT 

Smw 

40148 

m*mm am, i, len< am>-z >+". "+right$< ph*, 2 > = 1 fsjs*- 1 thenrh^»" 

-"+FIN* 

40143 GOSUB 40178 : RETURN 

48163 S”;'™ 1 •• flN*-" ” •• PR INT2P0";, STR I NGT< F! 1 X , 132 >; " " ; 

40161 

fl$*INKEY$ ■■ IFfl$=" " THEN48161 ELSE IFI HSTR< "0123456739" , ft* )TH£N481 
S2ELSE0NINSTRX CHR$< 8 >+CHR$< 31 >+ ". " + " - " +CHR$< 13 ), m )G0TQ48168 ,■ 
43160,48165, 40163,40166=GOTO40161 


40162 


■■ I FLEW am ) >fl 1 JsTHENfiN$*L£FT$< am, Fl 1 X ) •• GQTQ40161ELSE 


PR I NTSPOJi+fl 1 X-LB-K am ), am ; ■' GO TO 4 3 1 61 


40163 


S5fi®-S5S: PR I NTSPO^+R 1 X, ; I FS?i=»-1 THEN PR I NT " - " ; ELSEPR I FT 


40164 G0T0481 5 1 


48165 IFINSTR<RN$,"." )=0THEN48162ELSE4Q161 


79) 


I 

Ifec I FfiN$~ !l " THEH401SSELSEPRINT2PQ";, SIR I NGK fl 1 K-LEi-K RN$ ), " 

|t!67 IFS";=— 1 THENRH$= " - " +RN* : G0T0481S3EL3E48169 
■168 IF R$=CHR$( 31 )THENPRINTGPQK. STRINGS 91 Y„ 132)J " 
■SEPRINTSPO*, 8TRI NG$( M'4, :i " ) j " 

■163 GOSUB 40179 RETURN 

1178 fiN#~VRL< RN$ ) •• RH#=< INK < RN#+.885 VI88 VI90 ) : RETURN 
■555 REM t String Compression sabroutirie 

■68 IF LEN< )=0 THEN 51038 ELSE IF fllDK RNK 1, 1 V" " 
n m*R IGHT$< RN*, LEN< RN$ >- i > •• GOTO 51889 
31313 IF LEN(RN$>=8 THEN 51838 ELSE IF 

l«flN$>LEN<flN$>. 1 >=" " THEN flN$=LEFT$< m $, LEN< flN$ >-i ) : GOTO 

51818 

■038 IF (LEN< RN$ )=8 RNO QSHOQ) THEN PO’VGS’i; ■ Ri";=Q3L ; GOTO 

48138 


51043 RETURN 


80 ) 


Pro9ram List i n9 ; DEPRECBAS 


■Ell t dePrec/bas version i 9S.--"i0--'S£ 

0 CLS •• CLEAR 10088 : FIT=" $$#, ###, ###. ## " PR I NT " > > OP t i on « Post 
* Print Out Depreciation Record «." ■ PRINT 

I PRINT "Do you wish to : " : PRINT : PRINT” 1 > Post a depreciation 
In" : PR I NT" 2 > Pr i nt out stored entr i es " •• PR I NT " 3 > Abort and 
Irr, to MASTER MENU " : PR I NT •' PR I NT" Enter your choice Ci, 2, 

or 3)" 

I-P0J£*543 =fllt*i= G03UB4Q168 : A3=AN# •• IF fl$< >" 1" AND fi#< > "2” 

AND RIO"3" GOTO 38 

IlF fl$="3" THEN CLS 1 PR I NT " Return i n9 to MASTER MENU " : RUN 

WSTER/BAS" 

50 IF A*="2" GOTO 428 

■OS PRINT 1 "PIace the disk marked SPECIAL in Drive 1, then 

Press < ENTER >" 

70 P05£=S4 : R1 : GOSUB40138 

BoPEN 'TLL " HEADER'-"DAT ■■l"' INPUT*! , D# •• CLOSE •' IF 
B-SPECIfiL" GOTO 98 ELSE CLS : PR I NT " ERROR - this is not a 
SPECIAL disk! It is marked'- ";D* 

K PRINT£9S0^ "Press <ENTER> to 


continue' 


: 'O.”-;=1020 = Ai'<=8 : GQSUB48130 * RUN 


|0 DIM STC i4) ■' OPEN "I'M.." HEADER.-"DAT •• i " INPUT# 1, D# ■' FOR 2= 1 
IlC 14•• INPUT# 1, STC Z > = NEXT Z < CLOSE 
■00 CLS •' PR I NT" Entry * " ; STC S >+1 •• PR X NT 
110 PRINT "Enter a description CuP to 25 chars. >" 

120 P0’.'=i32 ■' flit“25 « GOSUB40130 = D£$=AN# 


81 ) 




PRINT : PRINT ; PR I NT "Enter the date this item was acquired 


KttP to 8 chars. )" 

146 P0- v .=384 * fll';=8 • GOSUB4013Q : Dflt=RNT : PRINT 
■ CLS: PR I NT" Se l set the category t h is i tern i s 
■•PRINT = PRINT" 1) Buildings & Improvements" j PRZNT"2> 
Miner* & Equipment" PR I NT" 3 > Purchased Breeding 
Hstock" : PR I NT : PR I NT" Enter a our choice <1; 2.< or 3)" 

I P0':=415: fl 1 1 > GO SUB 40168 > TY=VflL< FlNT ')■ IF TY< > 1 fi HD TV- 

ID TY<>3 GOTO 160 

1 CLS : PRINT"Enter the unrecovered cost - beginning of' 

166 P0.*:=64 = 01 '/.= 1 0 = G0SUB40 1 40 = UC#=RN# : PR I NT 
■96 PRINT" Enter the depreciation this year" 
ie P0’<= 192 : fll y.~ 10 GOSUB40140 : DY#=RN# : PR I NT 
0 CLS •• PR I NT "Verify that what you typed is 
Irect : " : PR I NT PR I NT " Descr i P t i on •• "; DE$ 

220 PR I NT •• PR I NT" Date ac4 u i red ■' DPT 


230 PRINT : PRINT"Category : "r IF TY*1 THEN PRINT "Build 
fcrovements" ELSE IF TY=2 THEN PRINT "Machinery & 

B|iPwent" ELSE IF TY*3 THEN PRINT "Purchased Breeding 

Livestock" 

B PRINT : PRINT"Unrecovered cost — beginning of year 1 

I ‘PRINT USING FIT; UC# 

259 PR I NT 'PRINT" D e P r e c i a t i o n t h is y e a r : " P RIN T U 31N G 


j. \ l Id:* l Id: 


J60 PRIHT0368* "Is this information' < i=c 




U \‘ ' 


280 ) 



5101O 

ON 

40133 40141 40161 

OPEN 

320 400 510 539 560 600 715 

CLOSE 

320 400 520 530 560 600 300 

LPRINT 

720^3 730 740/3 750 760 770/3 730/3 303/3 318/3 

320/2 330 840/2 

POKE 

40078/3 

PRINT 

13/2 28/8 30 40 60/3 33/5 180/6 110 140/3 150/2 

163/3 170/2 180/3 130/2 280 218/2 220/2 238/2 

248/2 250 288/8 290 300/2 318 338/3 348 420/7 

430/4 440 500 518/# 520/# 538/#2 540/2 550 570/8 

588 610 628/6 638 780 710 2000 48130 40131 48132 

48135 48138/2 48140/2 48144 40145/3 40146/3 48147/3 

CLEAR 

48160 48162 48163/3 40166 40168/2 

10 

TfiS< 

720/2 750 768 778 780 810 828 338 848 

TO 

80 488 510 528 530 630 

USING 

228 238 770 780 813 820 840 

VflRPTR 

40070/3 

STRINGS! 

728 730 740 888 838 40133 48138/2 40140 48146/2 

40147/2 40160 43166 48163/2 

I NOTE 

48132 48133 43141/2 48161/2 48165 

INKEYS! 

40132 40134 40141 40161 

THEN 

40 60 90 128 135 268 298 348 440 588 638 43131 

40132/2 48134 48135 40136 40138 48141/2 48143/3 

40145 40146 43147/2 40143 40161/2 40162 48163 


281 ) 


40165 401 66 401 6? 40168 51000/2 51010/2 

+ 520/2 740 40070/3 40131 49132/2 49133/2 40135 

49133 40140 49141/3 40143/2 40144 40145/2 40146/3 
40147/3 40143/3 40161/4 40162/2 40163 40167 40170 
440 720/2 340 40070 40136 40133 40140 40143/2 
49144/2 40145/2 40146 40147/3 40148/2 40162 40163/2 

40166 49167 51009 51910 

% 40070 40170 

/ 720/2 49070/2 40179 

AND 30/2 110 259 290 340 440 580 630 40143 
OR 30 110 250 290 340 440 530 630 
> 30/3 119/2 135 250/2 290/2 340/2 440/2 580/2 

638/2 40143 40162 

= 10 30/4 40 50 60/4 30 90/4 110/4 120/2 135 140/3 

150/3 160/3 170/3 250/4 269 290/6 310/2 320 340/6 
400 410 440/6 510 520/6 530/2 550/2 560 530/6 
600 610 630/6 710/2 729 730 740 340 359 2000/2 
40870 40130 49131 40132/3 40134/2 40136/2 40137 
49133 40140/2 40141/2 40143/7 49145/2 48146 49147/3 


40148/3 40160/2 40161/2 49162/2 48163/2 49165 
49166 40167/2 40163 40170/2 51908/3 51810/3 
< 30/3 60 110/2 250/2 298/2 340/2 440/2 530/2 630/2 

49135 40136 
IHI 49070/2 49170 

LEW 98 135 723/3 748 49143/3 40144/2 40147/2 49148 


282 ) 



40162/2 40166 51000/2 51010/3 

VRL 

60 140 150 40170 

CHR# 

40131 40133/3 40135 40133 40141/3 40143/2 40146 

40147 40161/3 40163 

LEFT# 

135 40143/2 40144 40147 40162 51010 

RIGHT# 

40143 40144 40143 31000 

MID# 

40147 40143 31000 51010 


283 ) 


Cross Rs'Tsro'ncs’ of Corwi&'nd Keywords- • 3UMMRRY/8RS 


FOR 30 40 50 60 90 120 158 130 218 360 378 338 390 

408 448 460 430 580 528 530 590 610 630 710 722/2 

830 350 870 338 970 993 1030 1183 1293 1213 

CLS 10 65 35 99 133 163 193 220 233 240 269 278 298 

333 343 358 883 382 1313 1338 1848 1833 1183 

1120 1200 1220 2013 

NEXT 30 43 58 68 90 123 158 188 219 373 333 398 483 
420 440/2 468 465 433 435 583 505 558 580 609 
620 648 710 723 722 723 724 725 850 880 899 928 
973 993 1338 1188 1208 1210 
DflTFF 868 

INPUT 30/#2 40/#2 50/#2 63/#2 90/# 330/# 370/#2 390/#2 
393/#2 403/#2 1960/# 1180/#2 
DIM 25 30 40 53 63 62 90 1180 
READ 350 

GOTO 40 58 63 198 110 120/2 133 140 153/2 163 170 
180/2 193 238 210/2 220 258 270 233 323/2 338 
348 330 390 433 428 440/2 460/2 465 430/2 4-35 
530/2 505 533/3 549/2 578 580/3 599 683 610 628 
633 640 713 720 722 725 803 843 1020 I860 1830 
1093 1190 1128 2813/2 40132 43133/2 48136 43141 
48142 40144 40145/2 40146/2 40147 40161/2 48162/2 
40164 48167 

RUN 260 1030 1330 1123 1220 
IF 40 58 68 113/2 120/2 148 153/2 173 183/2 288 




284 ) 


RESTORE 

GOSUB 


RETURN 

REM 


ELSE 


ON 

OPEN 

CLOSE 

LPRINT 


2 1 0/2 250 263 273 230 323/2 333 343 355 383 333 
433 423 443/2 463/2 483/2 530/2 533/2 543 573 
583/2 593/2 613/2 633/2 718 722 830/2 873 880 
1320 1033 I860 1383/2 1180 1123/2 2318 48131 
40132/2 40134 40135 43136 48138 40141/2 40143/3 
40145 40146 40147/2 43148 43161/2 40162 48163 
40165 40166 43167 48168 
853 

80 133 110 120 143 153 173 180 280 213 253 320 
880 813 848/2 1028 1353 1383 1123 2318 40139 
48149 43169 

115 853 43073 43139 48149 48169 43173 
3 418 412 414 433 432 434 458 452 454 473 472 
474 490 492 494 510 512 514 563 562 564 738 732 
734 721 50380 5808T 53082 53303 58384 58885 58886 
53807 50303 

40 53 68 .110/2 120/2 140 150/2 178 188/2 288 
210/2 323 355 383 398 483 443 463/2 480/2 533/2 
533/2 548 588/2 593 618 638 713 838 1868 1383 
1138 1128 2013 48131 43132 43134 48136 48138 
43141/2 43143/2 40145 48146 48147 43161/2 48162 
40163 40165 48166 40167 43168 
40133 40141 4316.1 

33 90 338 355/2 1863 1188 .1283 1218 

65 98 248 330 1063 1100 1238 1213 

828/2 338/3 340/3 370/5 330/5 398/4 983/2 913/2 

930 943/4 953 960 978/6 938 993/2 1333/3 


285 ) 


POKE 

40070/3 

PRINT 

10 23/2 70 30 35 108 118 128/2 133 148 150/2 

163 170 183/2 198 238 213/2 229 240/8 258 263 

278 293 338 318 320/2 333 343 358 363 883 882 

813 1313 1330 1048 1363 1373/7 1380 1133/3 1113/3 

1123 1238 1283/# 1210/#2 1228 2880 40138 48131 

43132 40135 43138/2 43140/2 43144 43145/3 43146/3 

43147/3 40163 40162 43163/3 48166 40163/2 

CLERR 

13 

TRB< 

350 320/2 370 880 950/3 963/3 970/3 938 993 1880 

TO 

33 48 53 63 98 120 158 133 210 368 373 383 390 

400 440 450 400 500 520 580 593 613 633 718 722/2 

833 850 873 388 973 993 1383 1130 1283 1213 

USING 

373 388 890 983 913 973/3 993 1338/2 

ypppTR 

40370/3 

TRINGT 

828 830 938 43138 48138/2 48148 43146/2 48147/2 

40168 43166 48168/2 

INSTR 

43132 40133 43141/2 48161/2 40165 

INKEY# 

40132 43134 43141 40161 

THEN 

113 123 143 158 173 188 230 213 268 273 323 338 

348 355 423 448 530 588 593 618 638 722 883 878 

883 1038 1388 1128 43131 48132/2 43134 48135 

40136 43138 43141/2 40143/3 43145 48146 48147/2 

40148 43161/2 48162 40163 48165 48166 48167 40168 

<4* 

113 598 613 638 715 723 873 888 990 1000 48078/3 

40131 48132/2 48133/2 48135 48133 43143 43141/3 

40143/2 40144 48145/2 40146/3 48147/3 43148/3 


286 ) 


40161/4 4S162/2 49163 49167 49170 
199/4 129 140 150 179 180 289 219 448 460 438 
589 579/4 538 598 619 639 820/2 919 978 1888 
48870 49136 49133 40148 48143/2 49144/2 48145/2 
48146 40147/3 49148/2 48162 49163/2 49166 49167 
* 119 40870 40170 

328/2 40978/2 49178 

AND 119/3 258/2 270 328 339 570/3 309/3 879/2 839/2 
1929/3 1989 1129 40143 

OR 119/2 259 329 530/2 549 309/2 879 888 1938 
> 110/4 258/3 329/2 330/2 448 538 549 722 898/4 

379/2 830/2 1020/4 1988/2 1128/2 49143 48162 
= 18 38 40/2 50/2 68/2 80/2 99 198/5 118/3 128/7 

140/3 159/7 170/3 130/7 290/3 218/7 238 250/4 
269 270/3 280 320/5 338 340/2 355 369 379 330/2 
398/2 480/2 429 440/2 469/3 488/3 588/3 528/2 
539/2 578/4 589/4 599/5 619/5 630/5 719/2 715 
722/2 723 880/7 810/2 829 839 840/2 859 870/3 
880/3 910 970/2 990/3 1898/4 1929/3 1930/2 1850/2 
I960 1030/4 1199/2 1128/4 1289 1218/2 2819/4 
40878 48130 49131 49132/3 40134/2 40136/2 40137 
49138 40140/2 40141/2 49143/7 48145/2 40146 40147/3 


40140/3 40160/2 49161/2 49162/2 49163/2 49165 
40166 40167/2 40163 40170/2 

1.10/4 250/3 320/2 330/2 448 530 548 722 380/4 
370/2 380/2 1920/4 1088/2 1129/2 48135 48136 



287 ) 


I NT 

40070/2 40170 

LEN 

320/3 40143/3 40144/2 40147/2 40143 40152/2 40156 

VflL 

120 150 180 210 40170 

CHE# 

40131 40133/3 40135 40133 40141/3 40143/2 40146 

40147 40151/3 40153 

LEFT* 

40143/2 40144 40147 40162 

EIGHT# 

40143 40144 40143 

MID# 

40147 40143 



288 ) 


BIBLIOGRAEH? 


American Society Farm Managers and Rural Appraisers. Profession¬ 
al Farm And Ranch Management Manual . Denver, 1977. 

Anderson, Jock R., Dillon, John L., and Hardaker, J. Brian. 

Agricultural Decision Analysis . Ames: Iowa State University 
Press, 1977. 

Agrawal, R. C., and Heady, Earl 0. Operations Research Methods 
For Agricultural Decisions . Ames: Iowa State University 
Press, 1972. 

Barnard, C. S., and Nix, J. S. Farm Planning And Control . London: 
Cambridge University Press, 1973. 

Castle, Emery N., Becker, Manning H., and Smith, Frederick J. 

Farm Business Management . New York: Macmillan Publishing 
Co., Inc., 1972. 

Efferson, J. Norman. Principles Of Farm Management . New York: 
McGraw-Hill Book Company, Inc., 1953. 

Finkel, Leroy, and Brown, Jerald R. Data File Programming in 
BASIC . New York: John Wiley & Sons, Inc., 1981. 

Forster, D. Lynn, and Erven, Bernard L. Foundations For Managing 
The Farm Business . Columbus: Grid Publishing, Inc., 1981. 

Hopkins, John A., and Murray, William G. Elements Of Farm Manag¬ 
ement. New York: Prentice-Hall, Inc., 1953. 

Hudelson, Robert R. Farm Management . New York: The Macmillan 
Company, 1939. 

James, Sydney C., and Stoneberg, Everett. Farm Accounting Bus¬ 
iness Analysis . Ames: Iowa State University Press, 1974. 

University of Missouri - Columbia, College of Agriculture - Ex¬ 
tension Division. Farm Planning Handbook . Columbia, MO: 
University of Missouri Press, 1978. 





















