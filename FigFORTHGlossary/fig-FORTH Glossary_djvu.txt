fig-FORTH GLOSSARY 


This glossary contains all of the word def- 
initions in Release 1 of fig-FORTH. The 
definitions are presented in the order of 
their ascii sort. 

The first line of each entry shows a symbolic 
description of the action of the proceedure on 
the parameter stack. The symbols indicate the 
order in which input parameters have been 
placed on the stack. Three dashes M 

indicate the execution point; any parameters 
left on the stack are listed. In this 
notation, the top of the stack is to the 
right. 


The symbols include: 
addr memory address 

b 8 bit byte (i.e. hi 8 bits zero) 

c 7 bit ascii character (hi 9 bits zero) 

d 32 bit signed double integer, 

most significant portion with sign 
on top of stack. 

f boolean flag. 0*false, non-zero*t rue 

ff boolean false flag*0 

n 16 bit signed integer number 

u 16 bit unsigned integer 

tf boolean true f lag*non-zero 


The capital letters on the right show defin- 
ition characteristics: 

C May only be used within a colon defin- 

ition. A digit indicates number 
of memory addresses used, if other 
than one. 

E Intended for execution only. 

LO ' Level Zero definition of FORTH-78 
LI Level One definition of FORTH-78 

P Has precedence bit set. Will execute 

even when compiling. 

U A user variable. 

Unless otherwise noted, all references to 
numbers are for 16 bit signed integers. On 
8 bit data bus computers, the high byte of 
a number is on top of the stack, with the sign 
in the leftmost bit. For 32 bit signed double 
numbers, the most significant part (with the 
sign) is on top. 

All arithemetic is implicitly 16 bit signed 
integer math, wich error and under-flow 
indication unspecified. 


/ 

y 


s 




FORTH INTEREST GROUP 


9 9 9 9 9 


RO. Box 1105 


San Carlos, Ca. 94070 


!CSP 




#> 


#s 


( 


(.") 


( ; COD E ) 


n addr 

Store 16 blcs of n at address* 
Pronounced "store”. 


(-f LOOP ) n C2 

The run-time proceedure compiled 
by +LOOP , which increments the loop 
index by n and tests for loop comple- 
tion. See +LOOP. 


Save the stack position in CSP. Used 
as part of the compiler security. 


dl d 2 LO 

Generate from a double number dl, the 
next ascii character which is placed 
in an output string. Result d2 is 
the quotient after division by BASE, 
and is maintained for further pro- 
cessing. Used between <# and #>• 

See #S. 


(ABORT) 

Executes after an error when WARNING 
is -1. This word normally executes 
ABORT, but may be altered (with care) 
to a user's alternative proceedure. 


(DO) C 

The run-time proceedure compiled by 
DO which moves the loop control para- 
meters to the return stack. See DO. 


d addr count LO 

Terminates numeric output conversion 
by dropping d, leaving the text 
address and character count suitable 
for TYPE. 

dl d 2 LO 

Generates ascii text in the text out- 
put buffer, by the use of #, until 
a zero double number n2 results. 

Used between <# and #>• 


--- addr P,L0 

Used in the form: 

' nnnn 

Leaves the parameter field address 
of dictionary word nnnn. As a comp- 
iler directive, executes in a colon- 
definition to compile the address 
as a literal. If the word is not 
found after a search of CONTEXT and 
CURRENT, an appropriate error mess- 
age is given. Pronounced "tick". 


P , LO 


Used in the form: 

( cccc ) 

Ignore a comment that will be 
delimited by a right parenthesis 
on the same line. May occur during 
execution or in a colon-definition. 

A blank after the leading parenthesis 
is required. 


(FIND) addrl addr2 --- pfa b tf (ok) 

addrl addr2 ff (bad) 

Searches the dictionary starting at 
the name field address addr2, match- 
ing to the text at addrl. Returns 
parameter field address, length 
byte of name field and boolean true 
for a good match. If no match is 
found, only a boolean false is left. 

(LINE) nl n2 - — addr count 

Convert the line number nl and the 
screen n2 to the disc buffer address 
containing the data. A count of 64 
indicates the full line text length. 


(LOOP) C2 

The run-time proceedure compiled by 
LOOP which increments the loop index 
and tests for loop completion. 

See LOOP. 


(NUMBER) dl addrl d2 addr2 

Convert the ascii text beginning at 
addrl+1 with regard to BASE. The new 
value i3 accumulated into double 
number dl, being left as d2. Addr2 
is the address of the first uncon- 
vertable digit. Used by NUMBER. 


* nl n2 prod LO 

Leave the signed product of two 
signed numbers. 


The run-time proceedure, compiled by 
which transmits the following 
in-line text to the selected output 
d evi ce. See ." 


The run-time proceedure, compiled by 

;CODE, that rewrites the code field 

of the most recently defined word to 

point to the following machine code 

sequence. SeejCODE. */MOD 


n 1 n2 n3 n4 LO 

Leave the ratio n4 * nl*n2/n3 
where all are signed numbers. Ret- 
ention of an intermediate 31 bit 
product permits greater accuracy than 
would be available with the sequence: 
nl n2 * n3 / 


nl n 2 n3 n4 n5 LO 

Leave the quotient n5 and remainder 
n4 of the operation nl*n2/r.3 
A 31 bit intermediate product is 
used as for * / . 


FORTH INTEREST GROUP 


0 9 0 0 . 


RO. Box 1105 


San Carlos, Ca. 94070 


+ 


+ 1 


+- 


+ BUF 


+ LOOP 


+ORIGIN 


9 




til n2 sum 

Leave the sum of nl+n2. 


LO -DUP 


n add r 

Add n to the value at the address* 
Pronounced "plus-store” • 


nl n 2 - — n 3 

Apply the sign of n2 to nl, which 
is left as n3* 


add 1 — — — add r 2 f 

Advance the disc buffer address addrl 
to the address of the next buffer 
addr 2 . Boolean f is false when addr2 
is the buffer presently pointed to 
by variable PREV . 


-FIND 


nl — nl (if zero) 

nl -- nl nl (non-zero) LO 

Reproduce nl only if it is non-zero. 

This is usually used to copy a value 
just before IF, to eliminate the need 
for an ELSE part to drop it. 


--- pfa b tf (found) 

ff (not found) 

Accepts the next text word (delimited 
by blanks) in the input strean to 
HERE, and searches the CONTEXT and 
then CURRENT vocabularies for a 
matching entry. If found, the 
dictionary entry's parameter field 
address, its length byte, and a 
boolean true is left. Otherwise, 
only a boolean false is left. 


nl (run) 

addr n2 --- (compile) P,C2,L0 
Used in a colon-definition in the 
form: 

DO ... nl +LOOP 
At run-time, +LOOP selectively 
controls branching back to the cor- 
responding DO based on nl, the loop 
index and the loop limit. The signed 
increment nl is added to the index 
and the total compared to the limit. 
The branch back to DO occurs until 
the new index is equal to or greater 
than the limit (nl>0), or until the 
new index is equal to or less than 
the limit (nl<0). Upon exiting the 
loop, the parameters are discarded 
and execution continues ahead. 


At compile time, +LOOP compiles 
the run-time word (+LOOP) and the 
branch offset computed from HERE to 
the address left on the stack by 
DO. n2 is used for compile time 
error checking. 


-TRAILING addr nl addr n2 

Adjusts the character count nl of a 
text string beginning address to 
suppress the output of trailing 
blanks. i.e. the characters at 
addr+nl to addr+n2 are blanks. 


Print a number from a signed 16 bit 
two's complement value, converted 
according to the numeric BASE. 

A trailing blanks follows. 
Pronounced "dot" . 


ft 


a 


P ,L0 


Used in the form: 

. c c c c 

Compiles an in-line string cccc 
(delimited by the trailing ") with an 
execution proceedure to transmit the 
text to the selected output device. 

If executed outside a definition, •" 
will immediately print the text until 
the final " . The maximum number of 
characters may be an installation 

dependent value. See (•'*)• 


n --- addr 

Leave the memory address relative --.LINE 

by n to the origin parameter area, 
n is the minimum address unit, either 
byte or word. This definition is used 
to access or modify the boot-up 
parameters at the origin area. 

.R 


Store n into the next available dict- 
ionary memory cell, advancing the 
dictionary pointer. (comma) 


nl n2 diff 

Leave the difference of nl-n2. 


LO 


/MOD 


P , LO 

Continue interpretation with the 
next disc screen, (pronounced 

next-screen) . 


line scr 

Print on the terminal device, a line 
of text from the disc by its line and 
screen number. Trailing blanks are 
s up p r e s s e d . 


nl n 2 - — 

Print the number nl right aligned in 
a field whose width is n2. No 
following blank is printed. 


nl n2 quot 

Leave the signed quotient of 


LO 

n 1 /n 2 • 


nl n2 rem quot 

Leave the remainder and signed 
quotient of nl/n2. The remainder 
the sign of the dividend. 


LO 

has 



FORTH INTEREST GROUP 


RO. Box 1105 


San Carlos, Ca. 94070 


0 12 3 


0 < 


0 - 


OBRANCH 


1 + 


2 + 


; CODE 


FORTH 


n ; S 

These small numbers are used so often 
that is is attractive to define them 
by name in the dictionary as const- 
ants. 


P , L0 

Stop interpretation of a screen. 

;S is also the run-time word compiled 
at the end of a colon-definition 
which returns execution to the 
calling proceedure. 



n — — f L0 

Leave a true flag if the number is < 

less than zero (negative), otherwise 

leave a false flag. 


nl n 2 --- f L0 

Leave a true flag if nl is less than 
n2; otherwise leave a false flag. 


n — — — f L0 <# 

Leave a true flag is the number is 
equal to zero, otherwise leave a 
false flag. 


f C2 

The run-time proceedure to condition- 
ally branch. If f is false (zero), <BUILDS 

the following in-line parameter is 
added to the interpretive pointer to 
branch ahead or back. Compiled by 
IF, UNTIL, and WHILE. 

nl --- n2 LI 

Increment nl by 1. 

nl --- n2 

Leave nl incremented by 2. 


P , E , L0 

Used in the form called a colon- 
definition: 

: cccc • * • ; 

Creates a dictionary entry defining 
cccc as equivalent to the following 
sequence of Forth word definitions * 

' . • • ' until the next or ';C0DE'. 

The compiling process is done by 

the text interpreter as long as 

STATE is non-zero. Other details 

are that the CONTEXT vocabulary is > 

set to the CURRENT vocabulary and 

that words with the precedence bit 

set (P) are executed rather than 

being compiled. 

>R 

P,C ,L0 ' 

Terminate a colon-definition and 
stop further compilation. Compiles 
the run-time ; S . 


L0 

Setup for pictured numeric output 
formatting using the words: 

<# if ifS SIGN if> 

The conversion is done on a double 
number producing text at PAD. 


C , L 0 


Used within a colon-definition: 
: cccc <BUILDS ... 

DOES > ... ! 


Each time cccc is executed, <BUILDS 


defines a new word with a high-level 
execution proceedure. Executing cccc 
in the form: 

cccc nnnn 

uses <BUILDS to create a dictionary 
entry for nnnn with a call to the 
D0ES> part for nnnn. When nnnn is 
later executed, it has the address of 
its parameter area on the stack and 
executes the words after D0ES> in 
cccc. <BU ILD S and DOES> allow run- 
time proceedures to written in high- 


level rather than in assembler code 
(as required by ;C0DE). 



nl n 2 f L0 

Leave a true flag if nl*n2; other- 
wise leave a false flag. 


nl n 2 — — f L0 

Leave a true flag if nl is greater 
than n2; otherwise a false flag. 


a — — — C , L 0 

Remove a number from the computation 
stack and place as the most access- 
able on the return stack. Use should 
be balanced with R> in the same 
definition. 


P , C , L0 ? 

Used in the form: 

: cccc .... ;C0DE 

assembly mnemonics 

Stop compilation and terminate a new 
defining word cccc by compiling 

( ; CODE) . Set the CONTEXT vocabulary ?C0MP 

to ASSEMBER, assembling to machine 
code the following mnemonics. 


addr — L0 

Print the value contained at the 
address in free format according to 
the current base . 


Issue error message if not compiling. 


When cccc later executes in the form: ?CSP 

cccc nnnn 

the word nnnn will be created with 


Issue error message if stack position 
differs from value saved in CSP. 


its execution proceedure given by 
by the machine code following cccc. 

That is, when nnnn i3 executed, it 
does so by jumping to the code after 
nnnn. An existing defining word 
must exist in cccc prior to ;C0DE. 

INTEREST GROUP •• • R 0. Box 


110 5 San Carlos, Ca. 94070 



* 



TERROR f n 

Issue an error message number n, if 
Che boolean flag is true. 


B/BUF 


n 

This constant leaves the number of 
bytes per disc buffer* the byte count 
read from disc by BLOCK. 


? EXEC 


TLOADING 


Issue an error message if not exec 
u ting . 


Issue an error message if not loading 


B/SCR 


n 

This constant leaves the number of 
blocks per editing screen. By con- 
vention, an editing screen is 1024 
bytes organized as 16 lines of 64 
characters each. 


? P A I RS n 1 n2 

Issue an error message if nl does not 

equal n2. The message indicates that 
compiled conditionals do not match. 


BACK 


addr 

Calculate the backward branch offset 
from HERE to addr and compile into 
the next available dictionary memory 
address . 


? STACK 


Issue an error message is the stack 
is out of bounds. This definition 
may be installation dependent. 


BASE 


addr U , L0 

A user variable contaning the current 
number base used for input and out- 
put conversion. 


TTERMINAL f 

Perform a test of the terminal key- 
board for actuation of the break key. 
A true flag indicates actuation. 
This definition is installation 

d ependent • 


BEGIN 


0 



ABORT 


ABS 


AGAIN 


ALLOT 



AND 


addr --- n L0 

Leave the 16 bit contents of address. 


L0 

Clear the stacks and enter the exec- 
ution state. Return control to the 
operators terminal, printing a mess- 
age appropriate to the installation. 


n - — u 

Leave the absolute value of 


L0 


n as u • 


BL 


addr n --- (compiling) P,C2,L0 
Used in a co lon-de f ini on in the form: 
BEGIN ... AGAIN 

At run-time, AGAIN forces execution 
to return to corresponding BEGIN. 
There is no effect on the stack. 
Execution cannot leave this loop 
(unless R> DROP is executed one 
level below). 

At compile time, AGAIN compiles 
BRANCH with an offset from HERE to 
addr. n is used for compile-time 
e rror checking . 


n L0 

Add the signed number to the diction- 
ary pointer DP. May be used to 
reserve dictionary space or re-origin 
memory. n is with regard to computer 

address type (byte or word) • 


ni n2 n2 L0 

Leave the bitwise logical and of nl 
and n2 as n3* 


' BLANKS 


BL K 


3L0CK 


addr n (compiling) P,L0 

Occurs In a colon-definition in form: 
BEGIN ... UNTIL 
BEGIN ... AGAIN 
BEGIN ... WHILE ... REPEAT 
At run-time, BEGIN marks the start 
of a sequence that may be repetitive- 
ly executed. It serves as a return 
point from the cor respoinding UNTIL, 
AGAIN or REPEAT. When executing 
UNTIL, a return to BEGIN will occur 

if the top of the stack is false; 
for AGAIN and REPEAT a return to 
BEGIN always occurs. 

At compile time BEGIN leaves its ret- 
urn address and n for compiler error 
checking . 


A constant that leaves the ascii 
value for "blank". 


addr count 

Fill an area of memory begining at 
addr with blanks. 


---addr U,L0 

A user variable containing the block 
number being interpreted. If zero, 
input is being taken from the term- 
inal input buffer. 


n --- addr L0 

Leave the memory address of the block 
buffer containing block n. If the 
block is not already in memory, it is 
transferred from disc to which ever 
buffer was least recently written. 

If the block occupying that buffer 
has been marked as updated, it is re- 
written to disc before block n is 
read into the buffer. See also 
BUFFER, R/W UPDATE FLUSH 


FORTH INTEREST GROUP 


» i o a 


R0. Box 1105 


San Carlos, Ca. 94070 


JO 


BLOCK- 

BLOCK- 


BRANCH 


BUFFER 


C ! 


C, 


C@ 


C FA 


CMOVE 


COLD 


READ 

WRITE These are the preferred names 
for the installation dependent code 
to read and write one block to the 
disc. 


C2 , LO 

The run-time proceedure to uncondit- 
ionally branch* An in-line offset 
is added to the interpretive pointer 
IP to branch ahead or back. BRANCH 
is compiled by ELSE, AGAIN, REPEAT. 


n --- addr 

Obtain the next memory buffer, ass- 
igning it to block n. If the con- 
tents of the buffer is marked as up- 
dated, it is written to the disc 
The block is not read from the disc. 
The address left is the first cell 
within the buffer for data storage. 


COMPILE 


C2 


When the word containing COMPILE 
executes, the execution address of 
the word following COMPILE is copied 
(compiled) into the dictionary. 

This allows specific compilation 
situations to be handled in additon 
to simply compling an execution 
address (which the interpreter 
already does ) . 



CONSTANT n LO 

A defining word used in the form: 
n CONSTANT cccc 

to create word cccc, with its para- 
meter field containing n. When cccc 
is later executed, it will push 
the value of n to the stack. 


CONTEXT addr U,L0 

A user variable containing a pointer 
to the vocabulary within which dict- 
ionary searches will first begin. 


b addr - — 

Store 8 bits at address. On word 
addressing computers, further spec- 
ification is necessary regarding byte 
addressing. 


Store 8 bits of b into the next 
available dictionary byte, advancing 
the dictionary pointer. This is only 
available on byte addressing comp- 
uters, and should be used with 
caution on byte addressing mini- 
c omp u t e rs • 


addr --- b 

Leave the 8 bit contents of memory 
address. On word addressing comput- 
ers, further specification is needed 
regarding byte addressing. 


pfa -— - cfa 

Convert the parameter field address 
of a definition to its code field 
address • 


from to count 

Move the specified quantity of bytes 
beginning at address from to address 
to. The contents of address from 
is moved first proceeding toward high 
memory. Further specification is 
necessary on word addressing comp- 
uters. 


COUNT addri addr2 n LO 

Leave the byte address addr2 and byte 
count n of a message text beginning 
at address addri. It is presumed 
that the first byte at addri contains 
the text byte count and the actual 
text starts with the second byte. 
Typically COUNT is followed by TYPE. 


CR 


LO 


Transmit a carriage return and line 
feed to the selected output device. 



CREATE 

A defining word used in the form: 
CREATE cccc 

by such words as CODE and CONSTANT 
to create a dictionary header for 
a Forth definition. The code field 
contains the address of the words 
parameter field. The new word is 
created in the CURRENT vocablary. 


CSP addr U 

A user variable temporarily storing 
the stack pointer position, for 
compilation error checking. 


D+ dl d2 --- dsutn 

Leave the double number sum of two 
double numbers. 


D+- dl n - — d 2 

Apply the sign of n to the double 
number dl, leaving it as d2. 


The cold start proceedure to adjust 
the dictionary pointer to the min- 
imum standard and restart via ABORT. 
May be called from the terminal to 
remove application programs and 
restart. 


d Li 

Print a signed double number from a 
32 bit two's complement value. The 
high-order 16 bits are most access- 
able on the stack. Conversion is 
performed according to the current 
BASE. A blank follows. Pronounced 
D-do t . 



FORTH INTEREST GROUP 


RO. Box 1105 


San Carlos, Ca. 94070 // 


DO 


D.R 


Print a signed double number d right 
aligned in a field n characters wide 


DABS d ud 

Leave the absolute value ud of a 
double number* 


DECIMAL 


LO 

Set the numeric conversion BASc for 
decimal input-output. 


DEFINITIONS 

Used in the form: 

cccc DEFINITIONS 
Set the CURRENT vocabulary to the 
CONTEXT vocabulary. In the example, 
executing vocabulary name cccc made 
it the CONTEXT vocabulary and exec- 
uting DEFINITIONS made both specify 
vocabulary cccc* 


DIGIT c nl n2 tf (ok) 

c nl ff (bad) 

Converts the ascii character c (using 
base ni) to its binary equivalent n2, 
accompanied by a true flag* If Che 
conversion is invalid, leaves only 
a false flag. 


DLIST 

List the names of the dictionary 
entries in the CONTEXT vocabulary. 


DLITERAL d d (executing) 

d ... (compiling) ? 

If compiling, compile a stack double 
number into a literal. Later execut- 
ion of the definition containing the 
literal will push it to the stack* If 
executing, the number will remain on DP 

the s tack • 


DMINUS d 1 d 2 

Convert dl to its double number two s 

c omp 1 erne n t • 


nl n2 (execute) 

add r n — — — (compile) P,C2,L0 
Occurs in a colon-definition in form: 
DO ... LOOP 
DO ... +LOOP 

At run time, DO begins a sequence 
with repetitive execution controlled 
Ly a loop limit nl and an index with 
initial value n2. DO removes these 
from the stack. Upon reaching LOOP 
the index is incremented by one. 

Until the new index equals or exceeds 
the limit, execution loops back to 
just after DO; otherwise the loop 
parameters are discarded and execut- 
ion continues ahead. Both nl and n2 
are determined at run-time and may be 
the result of other operations. 

Within a loop 'I' will copy the 


urrent value of the index to the 
stack. See I, LOOP, +LOOP, LEAVE. 

When compiling within the colon- 
definition, DO compiles (DO), leaves 
the following address addr and n for 
later error checking. 


LO 

A word which defines the run-time 
action within a high-level defining 
word. DO E S > alters the code field 
and first parameter of the new word 
to execute the sequence of compiled 
word addresses following DOES>. Used 
in combination with <BUILDS. When the 
DOES> part executes it begins with 
the address of the first parameter 
of the new word on the stack. This 
allows interpretation using this 
area or its contents. Typical uses 
include the Forth assembler, multi- 
diminsional arrays, and compiler 
gener a t ion . 


addr U >L 

A user variable, the dictionary 
pointer, which contains the address 
of the next free memory above the 
dictionary. The value may be read by 
HERE and altered by ALLOT. 


DPL addr U,L0 

A user variable containing the number 
of digits to the right of the decimal 
on double integer input. It may also 
be used hold output column location 
of a decimal point, in user generated 
formating. The default value on 
single number input is -!• 


DRO Installation dependent commands to 

DRI select disc drives, by preseting 

OFFSET. The concents of OFFSET is 
added to the block number in BLOCK 
to allow for this selection. Offset 
is supressed for error text so that 
i 3 may always originate from drive 0. 


FORTH INTEREST GROUP 


R0. Box 1105 


San Carlos, Ca. 94070 


DROP n LO 

Drop the number from the stack. 

DUMP add r n LO 

Print the contents of n memory 
locations beginning at addr. Both 
addresses and contents are shown in 
the current numeric base* 


DUP n * n n LO 

Duplicate the value on the stack. 


ELSE addrl nl — — addr2 n2 

(compiling) P,C2,L0 

Occurs within a colon-definition 
in the form: 

IF ... ELSE ... END I F 
At run-time, ELSE executes after the 
true part following IF. ELSE forces 
execution to skip over the following 
false part and resumes execution 
after the ENDIF. It has no stack 
effect. 

At compile-time ELSE emplaces BRANCH 
reserving a branch offset, leaves 
the address addr2 and n2 for error 
testing. ELSE also resolves the 
pending forward branch from IF by 
calculating the offset from addri to 
HERE and storing at addrl. 

EMIT c LO 

Transmit ascii character c to the 
selected output device. OUT is 
incremented for each character 
output. 


ENDIF addr n (compile) P,C0,L0 

Occurs in a colon-definition in form: 
IF ... ENDIF 
IF ... ELSE ... ENDIF 
At run-time, ENDIF serves only as the 
destination of a forward branch from 
IF or ELSE. It marks the conclusion 
of the conditional structure. THEN 
is another name for ENDIF. Both 
names are supported in fig-FORTH. See 

also IF and ELSE. 

At compile-time, ENDIF computes the 
forward branch offset from addr to 

HERE and stores it at addr. n is 
used for error tests. 


ERASE addr n 

Clear a region of memory to zero from 
addr over n addresses. 

ERROR line in blk 

Execute error notification and re- 
start of system. WARNING is first 
examined. If 1, the text of line n, 
relative to screen 4 of drive 0 is 
printed. This line number may be 
positive or negative, and beyond just 
screen 4. If WARNING*0, n is just 
printed as a message number (non disc 
installation). If WARNING is -l, 
the definition (ABORT) is executed, 
which executes the system ABORT. The 
user may cautiously modify this 
execution by altering (ABORT). 
fig-FORTH saves the contents of IN 
and BLK to assist in determining the 
location of the error. Final action 
is execution of QUIT. 


EMPTY-BUFFERS LO 

Mark ail block-buffers as empty, not 
necessarily affecting the contents. 
Updated blocks are not written to the 
disc. This is also an initialization 
proceedure before first use of the 
disc. 

ENCLOSE addrl c 

cdrl nl n2 n3 

The text scanning primitive used by 
WORD. From the text address addrl 
and an ascii delimiting character c, 
is determined the byte offset to the 
first non-delimiter character nl, 
the offset to the first delimiter 
after the text n2 , and the offset 
to the first character not included. 
This proceedure will not process past 
an ascii 'null', treating it as an 
unconditional delimiter. 


EXECUTE addr 

Execute the definition whose code 
field address is on the stack. The 
code field address is also called 
the compilation address. 


EXPECT addr count LO 

Transfer characters from the terminal 
to address, until a "return" or the 
count of characters have been rec- 
eived. One or more nulls are added 
at the end of the text. 


FENCE addr U 

A user variable containing an 
address below which FORGETting is 
trapped. To forget below this point 
the user must alter the contents of 
FENCE. 


END 


P , C 2 , LO FILL 

This is an 'alias' or duplicate 
definition for UNTIL. 


addr quan b 

Fill memory at the address with the 
specified quantity of bytes b. 


FIRST n 

A constant that leaves the address 
of the first (lowest) block buffer. 


FORTH INTEREST GROUP 


9 3 9 0 9 


RO. Box 1105 


San Carlos, Ca. 94070 




FLD addr u 

A user variable for control of number 

output field width. Presently un- 
used in fig-FORTH. 

FORGET E » L0 

Executed in the form: 

FORGET cccc 

Deletes definition named cccc from 
the dictionary with all entries 
physically following it. In fig- 
FORTH, an error message will occur if 
the CURRENT and CONTEXT vocabularies 
are not currently the same. 


IF f (run-time) 

--- addr n (compile) P,C2,L0 
Occurs is a colon-definition in form: 
IF (tp) ... ENDIF 

IF (tp) ... ELSE (fp) ... ENDIF 
At run-time, IF selects execution 
based on a boolean flag. If f is 
true (non-zero), execution continues 
ahead thru the true part. If f ts 
false (zero), execution skips till 
Just after ELSE to execute the false 
part. After either part, execution 
resumes after ENDIF. ELSE and its 
false part are optional.; if missing, 
false execution skips to just after 
ENDIF. 


FORTH 


HERE 


HEX 


P ,L1 

The name of the primary vocabulary. 
Execution makes FORTH the CONTEXT 
vocabulary. Until additional user 
vocabularies are defined, new user 
definitions become a part of FORTH. 
FORTH is immediate, so it will exec- 
ute during the creation of a colon- 
definition, to select this vocabulary 
at compile time. 

--- addr LO 

Leave the address of the next avail- 
able dictionary location. 

LO 

Sec the numeric conversion base to 
sixteen (hexadecimal). 


At compile-time IF compiles OBRANCH 
and reserves space for an offset 
at addr. addr and n are used later 
for resolution of the offset and 
e rro r testing. 

IMMEDIATE 

Mark the most resencly made definit- 
ion so that when encountered at 
compile time, it will be executed 
rather than being compiled, i.e. the 
precedence bit in its header is set. 
This method allows definitions to 
handle unusual compiling situations, 
rather than build them into the 

fundamental compiler. The user may 
force compilation of an immediate 
definition by preceeding it with 

[COMPILE] , 


HLD 


HOLD 


I 


ID. 


addr LO 

A user variable that holds the addr- 
ess of the latest character of text 
during numeric output conversion. 


Used between <# and to insert 

an ascii character into a pictured 
numeric output string, 
e.g. 2 E HOLD will place a 
d e c ima 1 point. 


. — n C,L0 

Used within a DO-LOOP to copy the 
loop index to the stack. Other 
use is implementation dependent. 

See R . 


addr 

Print a definition's name from its 
name field address. 


IN addr LO 

A user variable containing the byte 
offset within the current input text 
buffer (terminal or disc) from which 
the next text will be accepted. WORD 
uses and moves the value of IN. 


INDEX from to 

Print the first line of each screen 
over the range from, to. This is 
used to view the comment lines of an 
area of text on disc screens. 


INTERPRET 

The outer text interpreter which 
sequentially executes or compiles 
text from the input stream (terminal 
or disc) depending on STATE. If the 
word name cannot be found after 
a search of CONTEXT and then CURRENT 

it is converted to a number according 
to the current base. Thar a 1 so • f a i 1 - 
ing, an error message echoing the 
name with a " ? " will be given. 

Text input will be taken according to 
the convention for WORD. If a decimal 

point is found as part of a number, 
a double number value will be left. 
The decimal point has no other pur- 
pose than to force this action. 

See NUMBER. 


forth interest group 


RO. Box 1105 


San Carlos, Ca. 94070 /*/ 


KEY 


LATEST 


LEAVE 


LF A 


LIMIT 


LIST 


LIT 


LITERAL 


LOAD 


c LO 

Leave Che ascii value of Che next 
terminal key struck. 


addr 

Leave Che name field address of Che 
CopmosC word in Che CURRENT vocabul- 
a ry • 


C , LO 

Force cerminacion of a DO-LOOP at the 
next opportunity by setting the loop 
limit equal to the current value of 
the index. The index itself remains 
unchanged, and execution prodeeds 
normally until LOOP or +LOOP is 
e ncoun t e r ed . 


pfa lfa 

Convert Che parameter field address 
of a dictionary definition to its 
link field address. 


A constant leaving the address just 
above the highest memory available 
for a disc buffer. Usually this is 
the highest system memory. 


LOOP 


M* 


M/ 


addr n --- (compiling) P,C2,L0 

Occurs in a colon-definition in form: 
DO ... LOOP 

At run-time, LOOP selectively cont- 

rols branching back to the correspon- 
ding DO based on the loop index and 
limit. The loop index is incremented 
by one and compared to the limit. The 
branch back to DO occurs until the 
index equals or exceeds the limit; 
at that time, the parameters are 
discarded and execution continues 
ahead • 

At compile-time, LOOP compiles (LOOP) 

and uses addr to calculate an offset 
to DO. n is used for error testing. 


nl n 2 --- d 

A mixed magnitude math operation 
which leaves the double number signed 
product of two signed number. 


d nl --- n 2 n 3 

A mixed magnitude math operator which 
leaves the signed remainder n2 and 
signed quotient n3, from a double 
number dividend and divisor nl. The 

remainder takes its sign from the 
d ivi dend . 


n LO 

Display the ascii text of screen n 
on the selected output device. SCR 
contains the screen number during and 
after this process. 


M/MOD 


ud 1 u2 u3 ud4 

An unsigned mixed magnitude math 
operation which leaves a double 
quotient ud4 and remainder u3, from 
a double dividend ud 1 and single 
divisor u2 . 


n C 2 , L 0 

Within a colon-definition, LIT is MAX 

automatically compiled before each 
16 bit literal number encountered in 
input text. Later execution of LIT 
causes the contents of the next 
dictionary address to be pushed to 
the stack. 


MESSAGE 


n --- (compiling) P,C2,L0^ 

If compiling, then compile the stack 
value n as a 16 bit literal. This 
definition is immediate so that it 
will execute during a colon defin- 
ition. The intended use is: 

: xxx [ calculate ] LITERAL ; MIN 

Compilation i3 suspended for the 
compile time calculation of a value. 
Compilation is reusumed and LITERAL 
compiles this value. 


MINUS 


n LO 

Begin interpretation of screen n. 

Loading will terminate at the end of MOD 
the screen or at ;S. See ;S and -->. 


nln2 max LO 

Leave the greater of two numbers. 


n 

Print on the selected output device 
the text of line n relative to screen 
4 of drive 0. n may be positive or 
negative. MESSAGE may be used to 
print incidental text such as report 
headers. If WARNING is zero, the 
message will simply be printed as 
a number (disc un-available ) . 


nl n2 min LO 

Leave the smaller of two numbers. 


nl --- n 2 

Leave the two's complement of a 
number • 


LO 


nl n2 mod LO 

Leave the remainder of nl/n2, with 
the same sign as nl. 


MON 


Exit to the system monitor, leaving 
a re-entry to Forth, if possible. 


FORTH INTEREST GROUP 


R0. Box 1105 


San Carlos, Ca. 94070 


MOVE 


NEXT 


NFA 


NUMBER 


OFFS ET 


OR 


OUT 


0 V E E 


addrl addr2 n 

Move the contents of n memory cells 
(16 bit contents) beginning at addrl 

into n cells beginning at addr2. 

The contents of addrl is moved first* 
This definition is appropriate on 
on word addressing computers. 


PAD 


PFA 


This is the inner interpreter that 
uses the interpretive pointer IP to 
execute compiled Forth definitions. POP 

It is not directly executed but is 

the return point for all code pro- 

ceedures. It acts by fetching the 

address pointed by IP» storing this 

value in register W • It then jumps 

to the address pointed to by the 

address pointed to by W . W points to 

the code field of a definition which PREV 

contains the address of the code 

which executes for that definition. 

This usage of indirect threaded code 
is a major contributor to the power, 
portability, and extensibility of 
Forth. Locations of IP and W are 
computer specific. 

PUSH 


p f a nf a 

Convert the parameter field address 
of a definition to its name field. 


addr LO 

Leave the address of the text output 
buffer, which is a fixed offset above 
HERE.' 


nf a - — p f a 

Convert the name field address of 
a compiled definition to its para 
meter field address. 


The code sequence to remove a stack 
value and return to NEXT. POP is 
not directly executable, but is a 
Forth re-entry point after machine 
code. 


addr 

A variable containing the address of 
the disc buffer most recently ref- 
erenced. The UPDATE command marks 
this buffer to be later written to 
disc. 


This code sequence pushes machine 
registers to the computation stack 
and returns to NEXT. It is not 
directly executable, but is a Forth 
re-entry point after machine code. 


addr d 

Convert a character string left at PUT 

addr with a preceeding count, to 
a signed double number, using the 
current numeric base. If a decimal 
point is encountered in the text, its 
position will be given in DPL, but 
no other effect occurs. If numeric 
conversion is not possible, an error 
message will be given. 

QUERY 


addr ^ 

A user variable which may contain 
a block offset to disc drives. The 
contents of OFFSET is added to the 
stack number by BLOCK. Messages 
bv MESSAGE are independent of OFFSET. 

See BLOCK, DRO, DR 1 , MESSAGE. QUIT 


n 1 n 2 -- o r <- 

Leave the bit-wise logical or of two 
16 bit values. 


This code sequence stores machine 
register contents over the topmost 
computation stack value and returns 
to NEXT. It is not directly exec- 
utable, but is a Forth re-entry point 
after machine code. 


Input 30 characters of text 'or until 
a "return") from the operators 
terminal. Text is positioned ar the 
address contained in TIB with IN 
set to zero. 


L ! 

Clear the return stack, stop compil- 
ation, and return control to the 
operators terminal. No mess nee 
is given. 


addr 

A user variable that 

incremented by EMIT, 
alter and examine OUT 
display formating. 


R 

U 

ontains a value 

The user may 
to control 

R it 


nl n2 n 1 n2 nl L0 

Copy the second stack value, placing 
it as the new top. 


n 

Copy the top of the return stack to 

the computation stack. 


addr 

A user variable which may contain 

the location of an editing cursor, 
or other file related function. 


R 0. Box 1105 San Carlos, Ca. 94070 


FORTH INTEREST GROUP 


0 9 9 0 9 


SMUDGE 


R/W 


R > 


RO 


REPEAT 


ROT 


RP ! 


S->D 


SO 


SCR 


SIGN 


addr blk f 

The fig-FORTH standard disc read- 
write linkage* addr specifies the 
source or destination block buffer, 
blk is the sequential number of 
the referenced block; and f is a 
flag for f*0 write and f*l read. 

R/W determines the location on mass SP ! 

storage, performs the read-write and 
performs any error checking* 


Used during word definition to toggle 
the "smudge bit" in a definitions' 
name field. This prevents an un- 
completed definition from being found 
during dictionary searches, until 
compiling is completed without error. 



A computer dependent 
initialize the stack 
SO . 


proceedure to 
pointer f rom 


Remove the top value from the return SP@ 
stack and leave it on the computation 
stack. See >R and R* 

addr U 

A user variable containing the 
initial location of the return stack. 
Pronounced R-zero. See RP 1 

SPACE 

addr n (compiling) P,C2 

Used within a colon-definition in the 
form: 

BEGIN ... WHILE ... REPEAT SPACES 

At run-time, REPEAT forces an 
unconditional branch back to just 
after the co r respoinding BEGIN. 


--- addr 

A computer dependent proceedure to 
return the address of the stack 
position to the top of the stack, 
as it was before SP@ was executed, 
(e.g. 1 2 SP@ @ • • would 

t ype 2 2 1 ) 


LO 

Transmit an ascii blank to the output 
d evi c e . 


n --- LO 
Transmit n ascii blanks to the output 
d evi ce . 


At comp ile-tioe , REPEAT compiles STATE 

3RANCH and the offset from HERE to 
addr. n is used for error testing. 

nl n2 n3 --- n2 n3 nl LO 
Rotate the top three values on the 
stack, bringing the third to the top. 

SWAP 


A computer dependent proceedure to 
initialize the return stack pointer 
from user variable RO . 


TASK 


n - — d 

Sign extend a single number to form 
a double number. 


--- addr LO , U 

A user variable containg the compil- 
ation state. A non-zero value 
indicates compilation. The value 
itself may be implementation depend- 
ent. 



nl , n2 n2 nl LO 

Exchange the top two values on the 
stack. 


A no-operation word which can mark 
the boundary between applications. 

By forgetting TASK and re-compiling, 
an application can be discarded in 
its entirety. 


addr U 

A user variable that contains the 
initial value for the stack pointer. 
Pronounced S-zero. See S P 1 


addr U 

A user variable containing the screen 
number most recently reference by 
LIST. 


n d -— — d LO 

Stores an ascii sign just before 

a converted numeric output 3tring 
in the text output buffer when n is 

negative. n is discarded, but double 
number d is maintained. Must be 
used between <# and #>. 


THEN P , C 0 , L 0 

An alias for ENDIF. 


T 13 addr U 

A user variable containing the addr- 
ess of the terminal input buffer. 

TOGGLE addr b 

Complement the contents of addr by 
the bit pattern b. 


TRAVERSE 


ad d r 1 n - — ad d r 2 
Move across the name field of a 
fig-FORTH variable length name field, 
addr 1 is the address of either the 
length byte or the last letter. 

If n»l, the motion is toward hi mem- 
ory; if n*-l, the motion is toward 
low memory. The addr2 resulting is 
address of the other end of the name* 



R 0. Box 1105 San Carlos, Ca. 94070 /y 


FORTH INTEREST GROUP 


0 9 9 0 # 


VARIABLE 


E, LU 


TRIAD 


TYPE 


U* 


U/ 


UNTIL 


UPDATE 


USE 


USER 


scr 

Display on Che selected output device 
the three screens which include that 
numbered scr, begining with a screen 

evenly divisible by three. Output 
is suitable for source text records, 
and includes a reference line at the 
bottom taken from line 15 of screen4. 


A defining word used in the form: 
n VARIABLE cccc 

When VARIABLE is executed, it creates 
the definition cccc with its para- 
meter field initialized to n. When 
cccc is later executed, the address 
of its parameter field (containing n) 
is left on the stack, so that a fetch 
or store may access this location. 


addr count LO 

Transmit count characters from addr 

to the selected output device. 


ul u 2 — — — ud 

Leave the unsigned double number 
product of two unsigned numbers. 


VOC-LINK addr U 

A user variable containing the addr- 
ess of a field in the definition of 
the most recently created vocabulary. 
All vocabulary names are linked by 
these fields to allow control for 
FORGETting thru multiple vocabularys. 


ud u 1 — — — u 2 u 3 

Leave the unsigned remainder u2 and 
unsigned quotient u3 from the unsign- 
ed double dividend ud and unsigned 
divisor ul. 


f --- (run-time) 
addr n --- (compile) P,C2,L0 
Occurs within a colon-definition in 
the form: 

BEGIN ... UNTIL 

At run-time, UNTIL controls the cond- 
itional branch back to the corres- 
ponding BEGIN. If f is false, exec- 
ution returns to just after BEGIN; 
if true, execution continues ahead. 

At comp ile-time , UNTIL compiles 
(OBRANCH) and an offset from HERE 
to addr. n is used for error tests. 


LO 

Marks the most recently referenced 
block (pointed to by PREV) as 
altered. The block will subsequently 
be transferred automatically to disc 

should its buffer be required for 
storage of a different block. 


addr 

A variable containing the address of 
the block buffer to use next, as the 
least recently written. 


VOCABULARY E,L 

A defining word used in the form: 
VOCABULARY cccc 

to create a vocabulary definition 
cccc. Subsequent use of cccc will 
make it the CONTEXT vocabulary which 
is searched first by INTERPRET. The 
sequence "cccc DEFINITIONS" will 
also make cccc the CURRENT vocabulary 
into which new definitions are 
placed. 

In fig-FORTH, cccc will be so chained 
as to include all definitions of the 
vocabulary in which cccc is itself 
defined. All vocabularys ulitmately 
chain to Forth. By convention, 
vocabulary names are to be declared 
IMMEDIATE. See VOC-LINK. 


VL 1ST 

List the names of the definitions in 
the context vocabulary. "Break" will 
terminate the listing. 


WARNING addr U 

A user variable containing a value 
controlling messages. If » 1 

disc is present, and screen 4 of 
drive 0 is the base location for 
messages. If » 0, no disc is present 
and messages will be presented by 
number. If ■ -1, execute (ABORT) for 
a user specified proceedure. 

See MESSAGE, ERROR. 


LO WHILE f (run-time) 


A defining word used in the form: 
n USER cccc 

which creates a user variable cccc. 
The parameter field of cccc contains 
n as a fixed offset relative to 
the user pointer register UP for 
this user variable. When cccc is 
later executed, it places the sum of 
its offset and the user area base 
address on the stack as the storage 
address of that particular variable. 


R 0. Box 


adl nl --- adl nl ad2 n2 P,C2 

Occurs in a colon-definition in the 
f o rm : 

BEGIN ... WHILE (tp) ... REPEAT 
At run-time, WHILE selects condition- 
al execution based on boolean flag f. 
If f is true (non-zero), WHILE cont- 
intues execution of the true part 
thru to REPEAT, which then branches 
back to BEGIN. If f is false (zero), 
execution skips to just after REPEAT, 
exiting the structure. 

At compile time, WHILE emplaces 
(OBRANCH) and leaves ad2 of the res- 
erved offset. The stack values will 
be resolved by REPEAT. 

1105 San Carlos, Ca. 94070 


FORTH INTEREST GROUP 


WIDTH 


U 


WORD 


X 


XOR 


[ 


'COMPILE 


] 


FORTH 


add r 

In fig-FORTH, a user variable cont- 
aining the maximum number of letters 
saved in the compilation of a 
definitions' name* It must be 1 thru 
31, with a default value of 31* The 
name character count and its natural 

characters are saved, up to the 
value in WIDTH. The value may be 
changed at any time within the above 
limits* 


c LO 

Read the next text characters from 
the input stream being interpreted, 
until a delimiter c is found, storing 
the packed character string begining 
at the dictionary buffer HERE. WORD 
leaves the character count in the 
first byte, the characters, and ends 
with two or more blanks. Leading 
occurances of c are Ignored. If BLK 
is zero, text is taken from the 
terminal input buffer, otherwise from 
the disc block stored in BLK. 

See 3LK, IN. 


This is pseudonym for the "null" 
or dictionary entry for a name of 

one character of ascii null. It 
is the execution proceedure to term- 
inate interpretation of a line of 
text from the terminal or within 
a disc buffer, as both buffers always 
have a null at the end. 


nl n2 - — xor LI 

Leave the bitwise logical exclusive- 
or of two values. 


P , L 1 

Used in a colon-definition in form: 

: xxx [ words ] more ; 

Suspend compilation. The words after 
[ are executed, not compiled. This 
allows calculation or compilation 
exceptions before resuming compil- 
ation with ] . See LITERAL, ] . 


] P.C 

Used in a colon-definition in form: 

: xxx [COMPILE] FORTH ; 

[COMPILE] will force the compilation 
of an immediate d e f in i n i t i on , 
that would otherwise execute 
during compilation. The above 
example will select the FORTH 
vocabulary when xxx executes, rather 
than at compile time. 


LI 

Resume compilation, to the completion 
of a colon-definition. See [• 


INTEREST GROUP P 0. Box 1105 San Carlos, Ca. 94070 


