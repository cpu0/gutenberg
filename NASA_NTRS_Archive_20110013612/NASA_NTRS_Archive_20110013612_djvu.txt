Software 


© Earth Observing System 
Data Gateway 

The Earth Observing System Data 
Gateway (EDG) software provides a 
“one-stop-shopping” standard interface 
for exploring and ordering Earth-sci- 
ence data stored at geographically dis- 
tributed sites. EDG enables a user to do 
the following: 

• Search for data according to high-level 
criteria (e.g., geographic location, 
time, or satellite that acquired the 
data) ; 

• Browse the results of a search, viewing 
thumbnail sketches of data that satisfy 
the user’s criteria; and 

• Order selected data for delivery to a 
specified address on a chosen medium 
(e.g., compact disk or magnetic tape). 
EDG consists of (1) a component 

that implements a high-level 
client/server protocol, and (2) a col- 
lection of G-language libraries that im- 
plement the passing of protocol mes- 
sages between an EDG client and one 
or more EDG servers. EDG servers are 
located at sites usually called “Distrib- 
uted Active Archive Centers” (DAACs). 
Each DAAC may allow access to many 
individual data items, called “granules” 
(e.g., single Landsat images). Related 
granules are grouped into collections 
called “data sets.” EDG enables a user 
to send a search query to multiple 
DAACs simultaneously, inspect the re- 
sulting information, select browseable 
granules, and then order selected data 
from the different sites in a seamless 
fashion. 

This program was developed by Robin PJis- 
ter of Goddard Space Flight Center and 

Joe McMahon , James Amrhein, Ed Sefert, 
Lorena Marsans, Mark Solomon, and Mark 
Nestler of Global Science & Technology, Inc. 
Further information is contained in a TSP 
(see page 1). 

GSC-14938-1 


Power User Interface 

Power User Interface 5.0 (PUI) is a 
system of middleware that is an alterna- 
tive to the computer program described 
in the immediately preceding article. 
Written for expert users in the Earth-sci- 
ence community, PUI enables expedited 
ordering of data granules on the basis of 
specific granule-identifying information 


that the users already know or can as- 
semble. PUI also enables expert users to 
perform quick searches for orderable- 
granule information for use in prepar- 
ing orders. PUI 5.0 is available in two 
versions (note: PUI 6.0 has command- 
line mode only): a Web-based applica- 
tion program and a UNIX command- 
line-mode client program. Both versions 
include modules that perform data- 
granule-ordering functions in conjunc- 
tion with external systems. The Web- 
based version works with Earth 
Observing System Clearing Ho use 
(ECHO) metadata catalog and order- 
entry services and with an open-source 
order-service broker server component, 
called the Mercury Shopping Cart, that 
is provided separately by Oak Ridge Na- 
tional Laboratory through the Depart- 
ment of Energy. The command-line ver- 
sion works with the ECHO metadata and 
order-entry process service. Both ver- 
sions of PUI ultimately use ECHO to 
process an order to be sent to a data 
provider. Ordered data are provided 
through means outside the PUI software 
system. 

This program was developed by Robin Pfis- 
ter of Goddard Space Flight Center and 

Joe McMahon of Global Science & Technol- 
ogy, Inc. Further information is contained in 
a TSP (seepage 1 ). 

GSC-14939-1 


Mercury Shopping Cart 
Interface 

Mercury Shopping Cart Interface 
(MSCI) is a reusable component of the 
Power User Interface 5.0 (PUI) pro- 
gram described in the immediately pre- 
ceding article. MSCI is a means of en- 
capsulating the logic and information 
needed to describe an orderable item 
consistent with Mercury Shopping Cart 
service protocol. Designed to be used 
with Web-browser software, MSCI gener- 
ates Hypertext Markup Language 
(HTML) pages on which ordering in- 
formation can be entered. MSCI com- 
prises two types of Practical Extraction 
and Report Language (PERL) modules: 
template modules and shopping-cart 
logic modules. Template modules gen- 
erate HTML pages for entering the re- 
quired ordering details and enable sub- 
mission of the order via a Hypertext 
Transfer Protocol (HTTP) post. Shop- 


ping-cart modules encapsulate the logic 
and data needed to describe an individ- 
ual orderable item to the Mercury Shop- 
ping Cart service. These modules evalu- 
ate information entered by the user to 
determine whether it is sufficient for 
the Shopping Cart service to process the 
order. Once an order has been passed 
from MSCI to a deployed Mercury 
Shopping Cart server, there is no fur- 
ther interaction with the user. 

This program was developed by Robin Pfis- 
ter of Goddard Space Flight Center and 
Joe McMahon of Global Science & Technol- 
ogy, Inc. Further information is contained in 
a TSP (see page 1 ). 

GSC-14940-1 


@ Cassini Archive Tracking 
System 

The Cassini Archive Tracking System 
(CATS) is a computer program that en- 
ables tracking of scientific data trans- 
fers from originators to the Planetary 
Data System (PDS) archives. Without 
CATS, there is no systematic means of 
locating products in the archive process 
or ensuring their completeness. By 
keeping a database of transfer commu- 
nications and status, CATS enables the 
Cassini Project and the PDS to effi- 
ciently and accurately report on archive 
status. More importantly, problem areas 
are easily identified through cus- 
tomized reports that can be generated 
on the fly from any Web-enabled com- 
puter. A Web-browser interface and 
clearly defined authorization scheme 
provide safe distributed access to the 
system, where users can perform func- 
tions such as create customized reports, 
record a transfer, and respond to a 
transfer. CATS ensures that Cassini pro- 
vides complete science archives to the 
PDS on schedule and that those 
archives are available to the science 
community by the PDS. The three-tier 
architecture is loosely coupled and de- 
signed for simple adaptation to multi- 
mission use. Written in the Java pro- 
gramming language, it is portable and 
can be run on any Java-enabled Web 
server. 

This work was done by Diane Conner, 
Elias Sayfi, and Adrian Tinio of Caltech for 

NASA’s Jet Propulsion Laboratory. Fur- 
ther information is contained in a TSP (see 
page 1). 


NASA Tech Briefs, October 2006 


15 


