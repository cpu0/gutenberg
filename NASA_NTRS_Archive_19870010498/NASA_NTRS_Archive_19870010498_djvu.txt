NASA Conference Publication 2459 


Computer Sciences 
and Data Systems 


Volume 1 


Proceedings of a symposium held at 
the National Conference Center in 
Williamsburg, Virginia 
November 18-20, 1986 


NASA 

National Aeronautics 
and Space Administration 

Scientific and Technical 
Information Branch 


1987 


OAST Computer Science/Data Systems Technical Symposium 
Table of Contents 


Volume 1 : Computer Science 

Title of Presentation Page 


Table of Contents iii 

Introduction v 

Section 1: Software Engineering 

Software Management Environment for NASA 1-1 

SAGA: An Integrated Software Development Environment 1-16 

Cognitive-Based Analysis of Software Documentation 1-28 

Software Life Cycle Simulation (SLICS) Modeling 1-49 

Software Engineering with Reusable Components Task . 1-59 

Learning the Behavior of Software Systems From 

Executable Specifications 1-66 

Section 2: University Grants 

JSC Sponsored Research Activity at University of Houston 

at Clear Lake 1-85 

Illinois Computing Laboratory of Aerospace Systems and 

Software (ICLASS) 1-109 

Overview of ICLASS Research: Reliable and Parallel Computing 1-123 

Center for Aeronautics and Space Information Sciences (CASIS) 1-136 

Section 3: Institutes 

Institute for Computer Applications in Science and Engineering. .. • 3-162 

Research Institute for Advanced Computer Science 1-173 

NASA Center of Excellence in Space Data Information 

Sciences (CESDIS) 1-197 

PRECEDING PAGE BLANK NOT FILMED 

iii 


Section 4: Applications 


Concurrent Processing Algorithm Design (CPAD) 1-220 

Performance Critical Decisions in Parallel Scientific 

Computations 1-231 

Sparse Distributed Memory 1-241 

Distributed Operating Systems - Fact or Fantasy? 1-261 

Distributed Access View Integrated Database (DAVID) System 1-269 

Intelligent Data Management Processes 1-278 

An Expert System For the Analysis of Imaging Spectrometer Data..,. 1-298 

Fault-Tolerant Software: Modeling and Validation 1-312 

The Implementation and Use of ADA for Fault-Tolerant 

Distributed Systems 1-323 

Architecture Research at ARC 1-332 

Volume 2: Data Systems 

Optical Archival Data Storage System... 2-1 

Information Network Architectures 2-16 

NASA OAST VHSIC Technology 2-31 

Semiconductor Laser and Fiber Optics Technology 2-52 

High Speed Taken Ring Performance Analysis 2-63 

STAR* Bus 2-84 

A Distributed Processing Network Simulator (DPNS) 2-107 

Distributed Processing Concepts. 2-131 

A Systems Level Approach to Distributed Processing.......... 2-143 

Spaceborne Optical Disk Controller Development 2-173 

On-Board GaAs Processor Development..... 2-186 

MAX: A High-Speed, General-Purpose Multicomputer for Space 

Applications 2-208 

Massively Parallel Processor (MPP) 2-234 

Advanced Digital SAR Processor (ADSP) 2-248 

Flight SAR Processor Study 2-264 

Electronic Associative Memory Based on Hopfield's Neural 

Network Model 2-277 

NASA Computer Science Research Program Plan Update... 2-317 

Closing Remarks 2-324 

Attendance List “>-325 

iv 


INTRODUCTION 


The Computer Sciences and Data Systems Technical Symposium was held to 
respond to the communications challenges posed by the rapidly advancing 
technical arena surrounding NASA personnel* This was the third meeting in 
what will be periodic gatherings and was hosted by LaRC. Jerry Creedon, 
Director for Flight Systems at LaRC, performed the welcoming ceremony, and 
opening remarks were made by Lee Holcomb, Director of Information Sciences 
and Human Factors at NASA Headquarters. 

The intended purpose of these symposia is to bring NASA people to- 
gether to present their progress, to air their thinking and, in general, to 
discuss the nature and results of their work within the agency on a wholly 
technical level. These meetings are not intended as a forum for program 
reviews, budget presentations or advocacy hearings. NASA personnel have 
long been recognized as prolific contributors to the journals of technical 
societies and organizations within the aerospace community. Meetings such 
as this, organized to improve the interchange of technical information and 
understanding within NASA, have resulted in valuable connections. These 
meetings will be continued to be held at approximately 18 month intervals . 
The Proceedings of the November 1986 Computer Sciences and Data Systems 
Technical Symposium are presented to provide continuity from one meeting to 
the next, and to serve as a technical blueprint regarding expected content. 


v 



1 



1-1 


JOHN DALTON 




1-2 


MANAGEMENT TOOLS (INCLUDING RAPID PROTOTYPING 




t < 

z I/I 

£ < 
i z 

1 X 1 

VD 0 C 

< O 

-9 U- 


jqg i 

«/> 

00 2 UJ 

°C 9 

5 uj O 
^ CC KJ 


- £ 
LU _i 
CC < 

O 3 

< ? 


2 | 

S “ 

5 g 

it 

U " 

S 5 

« z 
z < 

<J u 

v/i 

UJ 

Q • 


p*. y 

z ^ 

v Q 

v* < 

UJ cc 

Q h* 

cc UJ 

o Z 


< Q 
5 . LU 

p 2 

i/> O 

~ Q 

I * 

$ X 


2 5 

cc ec 

UJ UJ 

I— h 

UJ UJ 

O Q 

12 > > 

O iJ =1 

o < < 
h u y 

z < < 
£25 
Zoo 

UI U u 

£ 3 3 

< < < 

< 

5 • • 


« ° 
u e? 

UJ 7 

0 1 S 
WA I— 

LA 

LU — 

5 2 

1 5 

2 § 


U = 

uj Q. 

- t 

o o 


a. 

< 

sc s 


1-3 





directorate SOFTWARE MANAGEMENT ENVIRONMENT 
CODE 500 FOR NASA 














DIRECTORATE SOFTWARE MANAGEMENT ENVIRONMENT 
CODE 500 FOR NASA 


-- O ^ 

LU F— i/l 

C£< ii 

wo 2 £ 

< LU g 

UJ WO 5 

LU 5 

^ cc 2 

z2i i 

Ooc: 5 


Q 

LU to 

a h 

22 

LU O 

5°- 

I 5 

> LU 

t> 

O LU 

l/> _l 

Xp 

LU 2 

o 5 

Ouu 

yn£ 


u < 


°-S! * 

WO WO o 

<o. 2 

o 

wo^ u 

Q. 


LU VJ 

«• Q. 

uj Co 
qc 

= LU 

-J co 
CT 

UJ O 

ttl- 


1-6 


t-va6soova 







\A 


Q 

uu 


CL 

V 

£ 

a 

Q 

Ui 

Hi 


i/I (/) 
UJ h- 
co 5 



za 

O UJ 

p“ 

^ LL. 

So 




h Irt 
vJ Ui 
UJ 00 

3 Si 
Oa: 


to 

ui 

00 


to 

< 


ui 


2 



UJ 

Z 

I- 


00 

O 



00 • 



z 




!2 

_i 



to 

< 



UJ 

u 



o 

u 




UI 



z 

Z 



o 

UI 

UJ 

00 


u 

00 



z 

o 

— 

2 


l- 

2 

UI 

■ 

< 

Ui 

z 

UJ 

I- 

H- 

to 

> 

UI 

00 

o 

H 

< 

H 

L/l 

> 

UO 

>■ 

to 

UJ 

UJ 

< 

X 
■ 

00 

Z 


r- 

O 

2 

UI 

to 

UI 

LL 

O 

o 

h- 

UI 

00 

00 

0. 

UI 

H- 

X 

UJ 

i/i 

UJ 

V 

Z 

< 

00 

1- 

Z 

to 

UJ 

o 

< 

§ 

> 

u 

X 

UI 

h— 


u 


u 

UJ 


> 

UI 

X 

u. 

UJ 

u. 

u. 

h- 

o 

Q. 

H 

UI 

UI 

O 

Z 

UJ 

u 

00 

_l 

00 

00 


=) 

O 

D 

o 

2 

2 

H 

Q_ 

to 



< 


• 

• 

u 

• 


< 

Q 

Ofc 

m 

8 

8 


1-7 


LOGICAL PREDECESSOR OF OBJECT-ORIENTED DESIGN 






1-8 


CURRENT PROJECT DEVELOPMENT DATA 4. SELECT/CONTROL 

(E.G., STAFFING, CHANGES, RESOURCE (E.G., USE TIGHTER TESTING 

CONSUMPTION) STANDARDS FOR THIS PROJECT) 




1-9 


DR0059D A2 






DIRECTORATE SOFTWARE MANAGEMENT ENVIRONMENT 
CODE 500 FOR NASA 



1-10 


DRO059DA-2 





UJfl •• 

|oS 

5 Z < 

U 4 ZZ 

5 o “ 

S <2 
C t/i 
Luii/t 

050 

t />< a . 


I v * 

I ^ Ui 

Ul •* > 

a 1 j « 

o * 0 

w U Q 
ui £ “ 

§ & 2 

Z u H 

? -1 U 
^ BO O 
oc < ec 
o H H 

flC z z 

£ D 3 


»- m m 


z < 

z 1 /) 

s < 

5 z 

LU 

vd a : 
< O 


00 to 


D01X 03d S3DNVHD 3HV/VUJ0S 


»/> © 
00 Q UJ 

O & Q 
5 tu O 
G £ U 


<y si j 

iiu . §1 • 

°|= 2 $ ! 

UJg. UJ ui * 

*-ui 2 MwjJ fn} 

a.ae«2 a.ec*s* a, } 
uiH-OO uj h ui} 
hUiKK H * ui & H * 
</»Ku.ol. MteO tn > 


1-11 


OROOS 9 D A -2 







1-12 


OBJECTIVE : REDUCE COST AND 
IMPROVE RELIABILITY OF NASA 
SOFTWARE DEVELOPMENT 
PROJECTS. 






1-13 


INCORPORATE INTERFACE TO • EXPAND THE 

FLIGHT DYNAMICS DEMO RULE 

CORPORATE MEMORY BASE BUILT IN 

FY85 







1-14 


1987 WORK 

• INVESTIGATE DISAGREEMENT 

• DEVELOP NEW RULES 

• REFINE EXISTING RULES 






1-15 


ORO059O A-2 





SAGA: 

An Integrated Software Development Environment 


Principle investigator: 

Dr. Roy Campbell, U of Illinois 

presented by 
Kathryn A Smith 

NASA Langley Research Center 

November 18, 1986 


1-16 


Outline 


SAGA System (Software Automation, 
Generation and Administration) System 

□ Overview 

□ SAGA System Components 

□ Research Activities 

□ Status at Langley 

□ Plans 


Overview 


O SAGA is a system to build software development 
environments - it is an environment that is used 
to build other environments 

O An ongoing, large scale project 

O Based on 

□ formally defined language forms 

□ automatically generated components using 
those forms 

□ other language independent components 

O Aimed towards a fully integrated Software 
development environment 

O Addresses all phases of the software lifecycle, 
including management 


1-18 



Research Areas 


O Practical organization of the life cycle 
O Configuration management 
O Software requirements specification 
O Executable specifications 
O Design methodologies 
O Programming 
O Verification 
O Validation and testing 
O Version control 
O Maintenance 
O Reuse of software libraries 
O Documentation 
O Integrated environments 


1-19 



SAGA Components 


O Fully integrated set of tools - i.e. output from 
one serves as input to another 

O Basically no commercial products - all are done 
as part of SAGA, currently using some UNIX 
facilities 

□ little or no proprietary software 

□ research results available 

□ allows full integration of components 

□ provides a vehicle to learn 


1-20 


Current Research Activities 


O olorin, a compiler- and editor-generator system 
to provide syntactic/ semantic analysis com- 
ponents of a compiler or editor 

O software management study 

□ study of software management techniques at 
AT&T 

□ study of other project management systems 
O notesfiles, electronic bulletin board 

O emake, extended version of UNIX make utility 

O maketd, automatic creation of dependency infor- 
mation for make 


1-21 


SAGA editor (epos) 

o Language-oriented incremental, screen editor 

O Performs syntactic analysis of edited text 

O Uses recognition techniques for syntactic and 
semantic analysis 

O New version, GNU epos, uses GNU Emacs as a 
user interface to the epos incremental parser 

O Currently using MYSTRO (College of William 
and Mary) to develop language editors 


1-22 



CLEMMA 


O Automated configuration librarian prototype, 
under development 

O Goal to provide a means of organizing, 
indexing, storing and retrieving on-line com- 
ponents of software projects 

O Combines the TROLL DBMS (database manage- 
ment system) and the UNIX file system 


1-23 


ENCOMPASS 

O Experimental software development environment 

O Initial prototype on a Sun workstation under 
UNIX 

O Created using other SAGA components 
° Prototype developed for Ada programs 
O Includes: 

□ language-oriented editor 

□ test harness 

□ user interface package 

O User can invoke IDEAL(Incremental Develop- 
ment Environment for Annotated Languages), 
an environment in-the-small, with facilities to 
specify, prototype, test and implement Ada pro- 
grams 


1-24 



PLEASE( Predicate Logic based 


ExecutAble SpEcifications) 

O Executable specification language 

O For requirements verification and rapid prototyp- 
ing 

O Planned features include support of if, while, and 
assignment statements and support a small, fixed 
set of data types 

O Initial version of ISLET(Incredibly Simple 
Language oriented Editing Tool), language- 
oriented editor to create PLEASE specifications 
and translate them into Ada 

O Initial version of software to translate PLEASE 
specifications into PROLOG procedures and gen- 
erate support code to call these procedures from 
Ada 


1-25 


Status at LaRC 


O Operational 

□ Notesfiles 

□ emake 

O Installed 

□ epos 

□ GNU epos 

□ olorin 

□ Tool support libraries 

□ ENCOMPASS 

O Problems due to a compiler bug on the worksta- 
tion 


1-26 


PLANS 


O Install and evaluate components at Langley as 
they become available 

O Use ENCOMPASS prototype to examine more 
advanced features 

O Prototype will be used to examine the practical 
applications of SAGA 


1-27 


Cognitive-Based Analysis of 
Software Documentation 1 


Elliot Soloway 

Associate Professor of Computer Science 
and Psychology 

Cognition and Programming Project 
(CAPP) 

Computer Science Department 
Yale University 
New Haven, CT 06520 


This research was supported In part by the Jet Propulsion Laboratory California 
Institute of Technology under contract with the National Aeronautics and Space 
Administration, and by the National Science Foundation grant DCR - 8302382. 


l 


Presented 11/18/86 by David Littman 


1-28 


TODAY’S TALK 


• THE PROBLEM OF DOCUMENTATION IN MAINTENANCE 
CONTEXT 

• SOME OF THE ISSUES WE HAVE STUDIED EMPIRICALLY 

• A TASTE OF THE RESULTS OF OUR STUDIES 


THE PROBLEM WITH 
DOCUMENTATION 


• CONSTANTLY ENHANCING PROGRAMS 

• ENHANCER IS NOT ORIGINAL PROGRAMMER 

• BASIC PREMISE OF PROGRAMMERS: 

DON’T TRUST DOCUMENTATION 


1-30 


OUR APPROACH: 

THE COGNITIVE PERSPECTIVE 


• THREE ISSUES IN DOCUMENTATION 

o WHAT TO DOCUMENT? 

o HOW TO DOCUMENT? 

o WHEN TO PRESENT THE INFORMATION? 

• OUR ANSWERS TO 3 QUESTIONS ARE BASED ON 
COGNITIVE PRINCIPLES 


1-31 


OUR METHODOLOGY: 
(IN A NUTSHELL) 


• "YOU CAN OBSERVE A LOT BY JUST WATCHING." 

Yogi Berra 

• "YOU HAVE TO GO DOWN THE ROPE HAND-OVER- 
HAND." 

JPL Guru 


1-32 


2 AREAS OF STUDY AT JPL 


• AREA 1: EXAMINING THE WHAT QUESTION 

o PROGRAMMER’S USE OF CURRENT 

DOCUMENTATION 

o CAN WE IMPROVE IT? 

o STUDY DONE IN CONTEXT OF SMALL PROGRAM 
(300 LINES OF FORTRAN) 

o TASK: MAKE AN ENHANCEMENT 


1-33 


2 AREAS OF STUDY AT JPL 
(CONTINUED) 


• AREA 2: EXAMINING THE WHAT & WHEN QUESTIONS 

o PROGRAMMERS CONFRONT LARGE PROGRAM (60K 
LINES) 

o 1.5 FEET OF DOCUMENTATION 
o TASK: MAKE AN ENHANCEMENT 


1-34 


AREA 1 STUDY: "WHAT" QUESTION 

PHASE I 


• METHODOLOGY: 

o GIVE PROGRAMMERS SMALL PROGRAM + 
STANDARD DOCUMENTATION 

o ASKED THEM TO ENHANCE PROGRAM 

o VIDEOTAPED PROBLEM SOLVING BEHAVIOR 

o RECORDED "TALKING ALOUD" PROTOCOLS 

o 10 JPL PROFESSIONALS 


1-35 



RESULTS: "WHAT" QUESTION 

PHASE I 


• IDENTIFIED 2 PROGRAM STUDY STRATEGIES USED TO 
BUILD MENTAL MODEL OF PROGRAM 

o SYSTEMATIC: MENTAL SIMULATION USED TO SEE 
HOW WHOLE PROGRAM FITS TOGETHER BEFORE 
ATTEMPTING ENHANCEMENT 

o AS-NEEDED: GO FOR THE PATCH AS SOON AS 
POSSIBLE 


• IF ADOPT SYSTEMATIC STRATEGY > CORRECT 

PATCH 


• IF ADOPT AS-NEEDED STRATEGY > INCORRECT 

PATCH 


• NO EFFECT AT ALL OF PROGRAMMING EXPERIENCE!!! 


1-36 



discussion: n what h question 

PHASE I 


• SMALL PROGRAM — SYSTEMATIC STRATEGY POSSIBLE 

• BIG PROGRAM -- SYSTEMATIC STRATEGY IMPOSSIBLE 

• QUESTIONS: 

o WHAT INFORMATION DID SYSTEMATIC STRATEGY 
UNCOVER? 

o CAN THAT INFO BE PUT IN DOCUMENTATION? 

o WILL THAT INFO HELP THE AS-NEEDED 
STRATEGY? 


1-37 


AREA 1 STUDY: "WHAT" QUESTION 

PHASE H 


• GOAL: FACILITATE AS-NEEDED STRATEGY 

• METHOD: PROVIDE KEY INFO IN DOCUMENTATION 

o CAUSAL INTERACTIONS AMONG DELOCALIZED 
PLANS 

• ANOTHER STUDY: 

NEW DOCUMENTATION vs. OLD DOCUMENTATION 

• PRELIMINARY RESULTS: 

o NEW DOC APPEARED TO HELP AS-NEEDED 
STRATEGY 

o SUBJECTS WITH MORE EXPERIENCE ESPECIALLY 
BENEFITTED 

o INTERESTING!! 


1-38 


AREA 2 STUDY: 

"WHAT" & "WHEN" QUESTIONS 


• CAN WE PROVIDE KEY INFO WHEN IT IS NEEDED? 

• KEY INFO: GOALS — WHAT IS PROGRAM/MODULE 

SUPPOSED TO DO? 

• PROVIDE KEY INFO UP FRONT — NICELY LABELLED 

• LARGE PROGRAM CURRENTLY USED SUCCESSFULLY AT 
JPL (60K LINES) 

• LARGE DOCUMENTATION (1.5 FEET) 


1-39 



METHODOLOGY 


• CURRENT DOC vs. REVISED DOC 

• REVISION TRIED TO CLARIFY STRUCTURE OF 
DOCUMENTATION 

• 4 JPL PROGRAMMERS: 

(2 ON EACH FORM OF DOCUMENTATION) 

• ASK PROGRAMMERS TO MAKE ENHANCEMENT 

• ENHANCEMENT ACTUALLY REQUIRED CHANGING ONLY 
ONE MODULE 


1-40 


RESULTS 


• OLD DOC: 2 HOURS TO FIND WHERE TO MAKE CHANGE 

• NEW DOC: 20 MINUTES TO FIND WHERE TO MAKE 
CHANGE (!!!!!) 

• BIG DIFFERENCE (BUT ONLY FOUR SUBJECTS ...) 


1-41 


WHY?????? 


• WE KNOW PROGRAMMERS BUILD MENTAL MODELS OF 
PROGRAMS 


• THE ISSUES HERE ARE: 

o PROGRAMMERS NEED TO BUILD MENTAL MODELS 
OF DOCUMENTATION 

o HOW CAN WE HELP THEM BUILD MENTAL MODELS 
OF DOCUMENTATION? 


1-42 


THE POINT IS: 


FOR LARGE PROGRAMS, NEED CLEAR UNDERSTANDING 
OF STRUCTURE OF DOCUMENTATION 

THAT IS A MENTAL MODEL 

WE SAW THEM BUILD MENTAL MODELS OF 
DOCUMENTATION: 

o CURRENTLY RELEVANT: 

"I NEED TO KNOW THIS FOR WHAT I’M DOING 
NOW" 

o POTENTIALLY RELEVANT: 

"I MIGHT NEED TO KNOW THIS FOR SOMETHING I 
DO LATER" 

o IRRELEVANT: 

"I DO NOT NEED TO KNOW THIS" 



LESSONS LEARNED 


• BUILDING MENTAL MODEL OF DOC IS 

o IMPORTANT 

o HARD 

o NOT WELL UNDERSTOOD 

• NEED TO THINK ABOUT TOOLS THAT SUPPORT 
BUILDING MENTAL MODELS OF DOCUMENTATION 


1-44 


SUMMARY: SO WHAT? & 
WHAT NEXT? 


• SO WHAT? 

o 2 YEARS HAS YIELDED MUCH 

o CLOSE TO MAKING SPECIFIC PRESCRIPTIONS FOR 
"WHAT" & "WHEN" QUESTIONS 

o DOCUMENTATION CAN BE IMPROVED AND USEFUL 


1-45 


WHAT NEXT? 


• REPLICATE AND EXTEND THE STUDIES 

• LOOK AT "WHEN" QUESTION IN MUCH MORE DETAIL 

• BUILD COMPUTER-BASED DOCUMENTATION TOOLS 

• SYSTEM SUGGESTS WHAT USER MIGHT NEED TO KNOW 


1-46 


MORE WHAT NEXT? 


• LOOK AT REUSABILITY 

• LIBRARIES OF ROUTINES 

• PROBLEM IS HOW TO DOCUMENT THEM? 

o TELL WHAT THE ROUTINE DOES 

o SAY WHAT IS "NON-STANDARD" ABOUT ROUTINE 

• MAKE STRUCTURE OF DOCUMENTATION EXPLICIT 


1-47 



WE ARE OPTIMISTIC 


• METHODOLOGY IS DEVELOPED 

• INITIAL RESULTS 

• CLEAR DIRECTION FOR NEXT PHASES OF RESEARCH 

• INTEREST OF MANY COMMUNITIES WITH DIVERGENT 
INTERESTS 


1-48 


SOFTWARE LIFE CYCLE SIMULATION 



1-49 


JPL AGENDA 



1-50 


JPL INTRODUCTION 


o 


l n 


O 

H- 

< 


Of 

LU 

O 


Q 

< 


O 

oc 


o 

o 


Q 

O 


O 

I— 

< 


CO 

o 


>: </> 

Q ^ 
L-J LU 

LU O 

CO O 

O Ot 

CL CL 

Q_ O 

_L >- 
i— o 


< 

Q_ 

O 


o 

LU 
— > 
CO 

o 


Cd 

< 

fc 

O 

00 


CO 


o 

>- H- 

L 2 : 

II 

o- *5 


^ 00 

00 —I 
ad <C 

LU o 

CD ^ 

§ i 

5 ? o 


LU C£ 
Ct; LU 

< E 

p 

00 i 

LU 

q o; 

^ < 

o °- 

0- O 


< 

O 

o 


O 


C 

1 

Q_ 


zn. 

o 

00 


< 

>- 

ad 

<c 

I — 
LU 
CD 
O 
ZD 
DO 

LU 

at 

< 

tz 

o 

co 

LU 

o 

ZD 

Q 

LU 

at 


CL 

O 


Q 

>- 

o 

o 


o 


at 

o 


at 
O 
CL 
CL 
=D 
CO 

a £ 

CD < 


LU 

> 

O 


<c >- 
at h- 

£ > 

Q ^ 
> Q 
O O 
at at 

CL CL 


co 

< 

LU 

CD 

C 


<c 

CD 


c 

Cl 

CO 

< 


at 

< 

fc 

o 

CO 

LU 

> 

O 

at 

CL 


< 

CD 

at 

o 


CD 


C 

1 

Ol 

cd~ 


c 

at 


at 

O 

CL 

CL 

ZD 

CO 

CO 

o 

I — 
<t 
CD 

I 

CL 

CL 

< 


1-51 


THROUGHOUT THE SOFTWARE LIFE CYCU 


JPL SLICS DEVELOPMENT BACKGROUND 



1-52 


SOFTWARE MANAGEMENT NEEDS A MODEL IN WHICH THE DYNAMIC FEEDBACK, 
NONLINEAR CHARACTERISTICS, AND HUMAN FACTORS OF THE SOFTWARE 
LIFECYCLE CAN BE CAPTURED 


JPL MODELING APPROACH 


i 



1-53 


I 

I 


JPL SCENARIO OF MODEL APPLICATION 



D 

Q. 

H 

D 

O 

— i 
LU 

a 

o 

s 


>52 
_ oo 
h- > 

2 < 



(W) 3SVHd 
dO (N) 3DynOS3H 


(W) 3SVHd do 

(D lonaoad 



Ui 

CJ 

2 

LU 

cc 

a: 

z> 

o 

o 

o 


a3Hino3u 

S3DHnOS3y 



* 

o 

< 

CO 

Q 


LU 

LU 


1-54 





JPL EXAMPLES OF INPUTS AND OUTPUTS 


=3 u_ 
O lu 

— o 

00 Z 
LU < 
O 


O LU 

si 


LU 

1— 

^ i — 
< CO 


CL QC 

> 

h— 

< 

=E O 


— ll_ 

o 

ad 

O o 



— 1 

Cd 

u_ 

o li_t 

. — J 

>- 
1 — 

< £ 
Qd °° 

Q 

O 

Of 

vj 

3: 

LU 

C£ 


> 

h— 

o 

LU Q 
§1 

Q- 

O 

ZL 

1 

5E o 

ZD 

Q 

LU 

CO h— ’ 

>- 

<C 

1— 

CO 

1 1 1 

O 

<C co 

cd 

o 

x 2 : 

Cd 

m o 

C 

H— 

i— o 

Q- 

CL. O 

> 

• 

• 


• 

• 


LU 

M 

C 

1 

Cl. 

CO 

LU 

H— 

1 

O 

ZD 

LU 

O 

— , 

LU 

o 

m 

Cd 

o 

Q- 

CO 

• 

• 


< I § 

£ > > 

^ III 


Q- LU 

O O 

— J C 
LU -i 

Q S 

• • 


CO 

O 


C l — 

cd oo 


1 — o 
oo o 


1-55 


MINIMUM FUNCTIONALITY 















EXAMPLE OF EQUATIONS 



1-57 


0 < HEURISTIC TABLE (STATUS,) < 1 OTHERWISE 


JPL ACCOMPLISHMENTS AND FUTURE FOCUS 



1-58 


SPACE TRANSPORTATION AUTOMATED RECONFIGURATION 


SOFTWARE ENGINEERING WITH 
REUSABLE COMPONENTS 

TASK 


<o 

GO 

CO 



co 

n «- 
o o 
o o 
u < 


1-59 


Jet Propulsion Laboratory 
California Institute of Technology 
Pasadena, California 


jpl SOFTWARE ENGINEERING WITH COMPONENTS 


CO 

00 


■o 

c 

<0 


c 

CO 

% 

<0 

a> 

0 ) 

co 

o 

+* 

CO 

0) 


05 

'</) 

0) 

*o 

* 

0) 

*o 

o 

o 

© 

o 


o 

CO 

© 

*o 


u w ^ i a- *s 

C 3 CO ! .tS ■£ 

■- ■g £ . £ 5 

♦- E ^ Ui m > 


CO 

=1 

— TJ 

CO O 

c a 

I ® 

O CO 

c ^ 
E £ 

o *s 

O co 


Q 
o 

a a) 

ii 

-tZ 
CO 

t: © •= 


o 

CO 


o 

«*- 

0) 

4-» 

c 

© 


CO 

05 

mmm 

4-> 

CO 

0 

> 

c 


0 2 

1 t 
<° « 

t5-g 

£.£ 

0) *o 

CO C 
3 CO 

o ^ 

+- < 

CO <0 

CO ^ 
CO - 


co 

3 

O’ 

05 

C 

> 

o 

k. 

a 

E 

s- w 

O to 

g 8 

<0 rt) 
© — 

E £ 

<0 “ 

CO ® 

m ' 4_ 

CO " 
CO Q) 

S.£ 

a) co 
c co 
o 0) 

g- s 

E © 
o "a 

° © 


UJ 

oW 

g CO 

§5 

Q. < 

£ £ 


05 > 

•if 
© ** 
0) o 

■l-g 

c 9 
© a 


1-60 


C0039 

A0017 



jpl SOFTWARE ENGINEERING WITH COMPONENTS 


© 

> 

© © 

« C 
o ® 

1- c 
c o 

0) Q. 

I 1 

Q> a. 
> O 
© *- 
■O (0 


o ° 
c 

W o 

© 3 

c © 

:= O 
© 

It 


s- > 

O S 

h- 

C ° 
§ © 

£ c 
o m 

© © 

> *s 

© c 

*o © 

• § 

~ I 

0 o 
**- o 

W H_ 

■§ ° 

1 O 

E| 

li 

© CO 

© S' 

gj w 

i 3 

o £ 
© o 
I- © 


© 

W 

■g (Q 

0 © 

JC 3 
© £ 

|o 

© * 
© <D 

© £ 

3 “■ 
O" — 

1 § 

«■§ 

© 

«- 3 
C C 
■ O) © 

■© c 
© o 
"O *3 

T3 5,3 
2 O 


■n w 

c .a 

© rt= 

u> e 

c © 

c !2 

.2 © 

.ti 3 

a. © 

© © t; 

a +s c 

© Q) 

© .ti c 
C := o 
©go. 

> o ° 
© £ o 


1-61 


C0040 1 1-18*86 

A0017 


APPROACH TO TECHNOLOGY INVESTIGATION 


J 

a 

I 


>* 

o> 

o 

o 

c 

o 

© 


c 

© 

c 

o 

a 

E 

o 

o 

o 

LL 


O 

© 

• MM 

o 

ka 

a 

a. 

2 

< 

o 

*o 

c 

co 

-x 

o 

0 
.a 
a> 

*o 

! i 

1 2 

JQ *Z 

8 1 

§ £ 
»- CO 
CD 

0) < 

< s 

I i 

<m a) 

CO S; 

0 3 

US CD 

a w 

Q. 0) 

< 2 

1 I 

CO co 
cc cc 

f i 

-m CO CO 

£ • . 

c 





© 





CD 

© 

C 

■ MB 



k_ 

o 

a 

© 

© 



ka 

;o 



> 

‘5 



4-* 

o> 



© 



3 

© 

CD 

© 

c 


*o 

~a 

< 


C 

"a 

• ^M 
*© 


"O 

c 

c 

© 

•a 

■ ^M 


© 

_x 

k. 

3 

O) 


* 

© 

ka 

o 

■o 


© 

4^ 

£ 

CD 

O 

c 

© 

> 

'Lm 

c 

© 

CD 

4-4 

O 

4-4 

o 

ka 

*-> 

la 

o 

'© 

^B 

© 

© 

cs 

o 


E 

© 

CL 

© 

4-« 

o 

_ j 

% 

k. 


LU 

© 

© 

% 

o 

CO 

CO 

1 

© 
■ MB 

■o 

■o 

< 

3 

1 


o 

© 

1 

X 

u_ 

CO 

_© 

© 

D 

o 

H- 

o 

CD 

> 

D 

3 


CD 

+* 

C 

0} 

c 

o 

a 

E 

o 

o 

CO 

■Q 

< 

■a 

c 

CO 

CD 

+-» 

hm 

o 

a 

a> 

cc 


I 


O) 

c 

■ MB 

CD 

■ BM 

X 

0) 

o 

© 

o 

o 


3 

a 

c 

■ ^M 

© 

> 

o 

.a 

© 

E 

o 


c 

o 


CD 

CD 

© 

O 

o 


c 

o 

■ MB 

4-» 

© 

_3 

© 

> 

© 

C 

© 

a 

o 

© 

> 

© 

O 


co 

00 


«- r- 
^ - 
o o 
o o 
u < 


1-62 


components and evaluate against criteria; update criteria and 
produce a guideline for creating reusable components 

Products 

• Evaluation criteria; development guidelines; a repository of 
"evaluated" components 


APPROACH TO 

TECHNOLOGY INVESTIGATION (Cont'd) 


<0 

00 


(0 


J 

a 


> 

o> 

o 

o 

c 

o 

0 ) 

E 

© 

© 

> 

(0 


(0 

s 

**- 

o 

a> 


o 

S 

c 

0 ) 

c 

o 

a 

E 

o 

o 

E 

o 


(0 

© 

o 

c 

a) 

■ MB 

© 

a 

x 

LU 

4-» 

o 

0) 

o 

£ 

CL 

< 

o 


I 


0 

o 

c 

,© 

© 

a 

x 

© 

* 

(0 

c 

V 

c 

o 

a 

E 

o 

- o 

i • 

c 


o 

0) 

o 


a) 

(0 

3 

© 

cc 

■a 

c 

CO 

o 

0) 

o* 

£ 

© 

3 

o 

© 


© 

© 


< s 


c 

o 

© 

o 


o 

< 

© 

= © 
& © 
a. o 

< 2 

* CL 

w , 

5 i. 

H UJ 
</> CO 


© 

E 

© 

© 

> 

© 


© 

** 

o 

© 

+-* 

c 

© 


© 

k_ 

© 

> 

© 

© 

o 

O) 

c 

!■ 

c 

o 

© S 

© W 

1 <£ 


w 


c 
o> 
® © 
© © 
> Q 


o I^S 
♦- 2 *= © 
© c 

© © © o 

a © — O) 

© .2* o c 



© 

© 

© 

o 

o 


w . © © 
3 © a 
OSo J 

<5 S|2.S 

? l » s 

® Q- © TJ 

to E ® o 
O) O -g +5 

I’S 2 g> 

c « 

•— 3 ■— e 
* O ® •- 

® c o'*" 

_q £ c £ 

IS C (0 
© "2 & 
> ^ .ts E 

© t! o 
w £ © O 
£ co a . 

© H c £ 
c £ o *= 

2 O © Q. 
9 - © © 

| <o-° 2 
8 ac 8 
ai-2 2 o 

C ® © 

•§ > £ ■O 
® © ^ c 

3 3 3 © 


CN ^ 

§! 
o < 


1-63 


existing systems 


APPROACH TO TECHNOLOGY 
INVESTIGATION (Cont'd) 



(A * 

> c 
w § 

£ to 

5 « 

$ <g 

+* CO 


O ^ 
<M O 

§ c3 

|£ 
S’ « 
■2 5 

a) £ 

> « 
0 ) o 

-O « 

0) " 
£ (0 

il 
>. <0 
o> c 
® § 

2 S 

« | 

■ i 

a a 



1-64 


C0043 

A0017 


SOFTWARE ENGINEERING WITH REUSABLE COMPONENTS 

ATTACHMENT 


JPL 


KEY TECHNOLOGY AREAS 


Component Technology Issues Examples: 

o What is the criteria for determining "reusability" of a component? 

- reliability, maintainability, other "ility" measures/metrics 

- encapsulation 

- commonality with similar or different application areas 

- documentation and other related software products 

o What are the behavorial/context/ environmental factors? 

- side effects or singularities 

- target, word size, etc. constraints 

- operating conditions constraints 

o What are attributes for determining the confidence factor 
(trust level) of a component? 

- what other information do users need/want to know in 
order to "trust" a component — related to cognitive 
process studies and the need to know some "why's" and 
"what's", not just "how's" 

o What are the guidelines for developing reusable components? 

- use of data abstraction, generics, typing mechanisms 

- encapsulation and packaging 

- data management and other hardware/ operating system 
considerations 

- trade between generality and specificity 

- information and related data products needed to support reuse 
Software System Technology Issues Examples: 

o What is the affect on the requirements and design phases 
when component reuse is desired? 

- requirements/design phases iteration and interaction 

- affect on design phases when both requirements and parts 
are input 

o What approaches/techniques can be employed during the design 
phase to incorporate the proper balance of systems-dnven 
and parts-driven strategies? 


1-65 


Learning the Behavior of Software Systems 
From Executable Specifications 

Christian Wild 

Associate Professor 
Old Dominion University 
Norfolk, VA 


* Supported by NASA Grant 1-439 


1-66 


Objective 


Significantly Increase the Reliability and Robustness of Software Systems 


• Reliability - Development 

• Robustness - Operation 


1-67 



Statement of Problem 


• Complexity increasing 

• Criticality increasing 

• First implies automation 

• Second implies formal analysis 

• which in turn implies formal description 

• Orders of magnitude increase in reliability cannot be met by tradi- 
tional software engineering approaches. 

• more than just integrated tools at the current level of sophitication. 
(not smart editors and command interpreters) 


1-68 


Current Software Development Paradigm 



Validation 


1-69 


Automation Based Software Development Paradigm 


Validation 

Maintenance 

* 


Decisions/Rationale 


Tuning 
^ ■ 


Informal 

Requirements 


Requirements 
^ Analysis 


Formal 

Specification 


— > Mechanical 
> Optimization 


Concrete 

Source 

Program 


• Slide adapted from ISI at USC 


1-70 


Execution 

Set of Behaviors 

I 

Generate Hypotheses 
Generalize Hypotheses 

Hypotheses of Behavior 

J, 

Theorem Prover 
Assertions 



1-71 


Supporting Technologies 


Formal Specification Languages 
Program Verification 
Automatic Programming 
Rapid Prototyping 
Machine Learning 
Automated Reasoning 
Knowledge-Based Systems. 


Software Fault Tolerance 



Definitions 


• Behavior - Result of applying a function 

• Formal Specification - Implicitly defines behavior 

• Set of Behaviors - Explicitly defines behavior 

• State - Sequence of function calls which generated a data object 

• Canonical Form - Simplest sequence of function calls which exhibits 
equivalent behavior 


1-73 


Formal Specification for Queues 


Type Queue(Integer) 
SYNTAX 


Newq 

Addq(Queue, Integer) 
Deleteq(Queue) 
Frontq(Queue) 
Isemptyq(Queue) 

SEMANTICS 

For all q : Queue; i : integer Let 

1) Isemptyq(Newq) 

2 ) Isemptyq(Addq(q,i)) 

3) Frontq(Newq) 

4) Frontq(Addq(q,i)) 

5) Deleteq(Newq) 

6) Deleteq(Addq(q,i)) 


End Queue 


-> Queue 
-> Queue 
-> Queue 

-> Integer u {error} 
-> Boolean 


= True 
= False 
= error 

= If Isemptyq(q) then i 
else Frontq(q) 

= Newq 

= If Isemptyq(q) then Newq 
else Addq(Deleteq(q),i) 


1-74 



Examples of Behavior 


Generators: 

ADDQ( ADDQ(NEWQ,I j ),I 2 ) 

DELETEQ(ADDQ(ADDQ(NEWQJ 1 ),I 2 » = ADDQ(NEWQ,I 2 ) 


Behaviors: 

ISEMPTYQCDELETEQCADDQCADDQCNEWQJ!),^))) = False 
FRONTQCDELETEQCADDQCADDQCNEWQJ!),^))) = I 2 


1-75 


Learning Hypothesis of Behavior 


CURRENT 

STATE 


Abstraction 


OBSERVABLE 

PROPERTY 


■^FUNCTION 




Hypotheses are of the form: 


FUNCTION(X) = RESULT ? A_F(X) e {PVs} 


Where ? is: 

IF - sufficient 

ONLY IF - necessary 

IFF - necessary and sufficient 


1-76 






Learning Algorithm 



1-77 







Nomenclature 


• The AF is of the form UX, where X is A (D or N) if the AF counts 
the number of Addqs ( Deleters or Newqs) in the WFF. 

• AFs on the canonical form will be designated by a adding a prime (’). 

• AFs which count events occurring before a key event are denoted by 
a subscript of pre/l n , where /„ is the item added at the key event. 

• For events occurring after the key event the subscript postil m is used. 

Deleteq(Addq(Addq(Newq7 ,W 2 )) : 


1-78 


Isemptyq(Newq) « T : (#N=1) 

H 1 , Isemptyq(Q) - T if #N € { 1 } 
Isemptyq(Addq(Newq^ j)) * F: (#A’*1,#N=1,#A*1) 

DIFF : {#A\#A} 

OUT : {#N} 


H2 S Isemptyq(Q) ■ T if #A’ € {0} 

H 2„ Iscmptyq(Q) = T only if #A’ € {0} 


1-79 


Isemptyq(Addq(Newq,/ ,)) = F: (#A’«1,#N«1,#A-1) 
//3 5 ) Isemptyq(Q) = F if #A’ member-of {1} 

// 3„ ) Isemptyq(Q) = F only if #A’ member-of { 1 } 

Isemptyq(Addq(Addq(Newq,/ X )J 2 )) = F: (#A’«2) 

//4 5 ) Isemptyq(Q) . F if #A’ member-of {2} 

H 5 S ) Isemptyq(Q) = F if #A* member-of {1,2} 

H 5„ ) Isemptyq(Q) = F only if #A* member-of {1,2} 


H6) Isemptyq(Q) « F iff #A* member-of { 1 ..<*>} 


1-80 


Program Synthesis for Isemptyq 


IF #A’ = 0 THEN TRUE 
ELSE FALSE 


Demands which this behavior places on generators: 

NEWQ: Set #AJ to 0 

ADDQ: Increment #A’ by 1 

DELETEQ: Decrement #A’ by 1 


1-81 


More Complicated Result 


Raw Output: 

H10) Frontq(Q) = I 2 if (#A’,#A post/l2 ) e {(1,0), (2,1), (3, 2),...) 
HI 1) Frontq(Q) = I 2 if (tD^M'^) e {(0,0), (1,1)} 
H12) Frontq(Q) = I 2 if (#A,#A') € {(2,1),(3,2),(4,3),...} 


Generalized Output: 

H10”) Frontq(Q) = I n iff (#A* - = 1) 

Hll”) Frontq(Q) = I n iff (#0^ - #A' pre/In = 0) 
H12”) Frontq(Q) = I n iff (#A - #A’ = n-1) 


1-82 


<- Front 


Back -> 


In 


ft 

I 

#A {X 

#A’ 


1 

>Sl/ln 1 

| 

» 



In 



I #A pre/l n 
#^post/l n 



» n- 1 

» 


- #A * 

h #A’ 1 


1-83 








Conclusions 


• Machine Analysis of Executable Specifications: 

Program Synthesis 

Automated Test Case Generation 

Assertion Generation for Run-Time Monitoring 

Feedback to Requirements Analysis 

• Symbiotic Interaction: 

Machine Learning 
Symbolic Execution 
Theorem Proving 


1-84 


(VI/NSA MISSION SUPPORT DIRECTORATE JSC 



1-85 


IWoA MISSION SUPPORT DIRECTORATE JSC 



1-86 


SPACECRAFT SOFTWARE DIVISION 


lU/NSA MISSION SUPPORT DIRECTORATE JSC 



1-87 


SPACECRAFT SOFTWARE DIVISION 


MISSION SUPPORT DIRECTORATE JSC 



1-88 


SPACECRAFT SOFTWARE DIVISION 




MISSION SUPPORT DIRECTORATE JSC 



1-90 


SPACECRAFT SOFTWARE DIVISION 



Ill 


D 

H 


<0 


cc 

0 

1 <0 


“ o -o Kf 

g- sfe 

< 2 " 


CO fc- 

UJ D 

CC Q. 


O 

O 


lu 

cc 


h 

O 


(0 

I- 


lil 


III 

o 

< 



-9 


UH-CLEAR LAKE NASA/JSC NASA CENTERS INSTITUTE UNIVERSITY INDUSTRY 

FACULTY MANAGERS MANAGER SCIENTISTS FACULTY MANAGER 

STUDENTS SCIENTISTS SCIENTISTS ENGINEERS STUDENTS SCIENTISTS 












MISSION SUPPORT DIRECTORATE JSC 



1-92 


SPACECRAFT SOFTWARE DIVISION 



NASA MISSION SUPPORT DIRECTORATE JSC 



c- ^ 


1-93 


SPACECRAFT SOFTWARE DIVISION 







1-95 


SPACECRAFT SOFTWARE DIVISION 


N/NSA MISSION SUPPORT DIRECTORATE JSC 



1-96 



IUASA MISSION SUPPORT DIRECTORATE JSC 



1-97 


SPACECRAFT SOFTWARE DIVISION 


MISSION SUPPORT DIRECTORATE JSC 



1-98 


SPACECRAFT SOFTWARE DIVISION 



1-99 


SPACECRAFT SOFTWARE DIVISION 


MISSION SUPPORT DIRECTORATE JSC 



1-100 


SPACECRAFT SOFTWARE DIVISION 


NASA MISSION SUPPORT DIRECTORATE JSC 



1-101 


SPACECRAFT SOFTWARE DIVISION 



1-102 


SPACECRAFT SOFTWARE DIVISION 



1-103 


SPACECRAFT SOFTWARE DIVISION 


IWOfV MISSION SUPPORT DIRECTORATE JSC- 



1-104 


SPACECRAFT SOFTWARE DIVISION 



MISSION SUPPORT DIRECTORATE JSC 



1-105 


SPACECRAFT SOFTWARE DIVISION 


1V1ASA MISSION SUPPORT DIRECTORATE JSC 



1-106 


SPACECRAFT SOFTWARE DIVISION 


u 

1 ££ 

w O S 

U. (- 

> >d 

£ Otf X 
X O — i 
w W ^ 
H X i 

« ^ 

Q Q a 

uj uj 

£ H H 

o «£ 

2 uj in 

j“ Qi 
2 UJ 

o Q O 
O 2 « 
Js Q_ 
-j « 3 ; 

CJ 

X tn z 
D H S 

i t n -j 


^ u 
5 <c 

£ o- 

* X 
CD o 

X U " 

UJ in 

*r z z 

? ui £ 

a- H o 
Zen <E 
o > u 
o in u. 


tn 

x 

CD X 

Z o 

r 3 

r t— 

cn m 

“ az 

H T 3 

_ <t Qi 
® ^ UJ 

S^ 2 H 
o~=> 
200 )^: 
++ H 5 ! 3 C 
. r r;o 


x z ‘ 
£ o , 

<X H 

o- Si 
t- a 


H 

z in 

OJ Q 
5 * « 

u 3 

CD rj 

Z ^ 

« °- 

* i 

z r; 

0 <J 

a X 

y Sg 

1 §i 

O U CQ 
U. 

* • 

1-4 • 


Sio 

SSa 



1-107 


SPACECRAFT SOFTWARE DIVISION 


SUMMARY AND DISCUSSION 



1-108 


SPACECRAFT SOFTWARE DIVISION 


JCLASS 

Illinois Compaiina laboratory of Aerospace 
Systems'* and Sofia) a re 




ICLASS RESEARCH ACTIVITIES 


Abra&am 


Bantrjee/ Parallel 


r>, .. / Architectures 
D<k KdSonl & Algorithms 


Fitcds 


jyer 

faiel 

(Ja£ 


Qelford 
Campbell 



ICLASS overview 


1-110 


November,17,198d 


DISTRIBUTED SYSTEMS 



D6MS 


Reliable, Distributed Data Base 
Management Systems ( Belford) 


Distributed File System for A 
Network of Workstations (Iyer) 


Oft 

&st. 

OS 


0/t 

Comm . 

Subnet 


Adaptive Operating System for 
Message Passing Machines (Reed) 

Process Migration (Liu) 

Distributed, Macro Data Flow 
Architecture (Liu) 


Integrated Communication 
Networks (Reed) 


ICLASS overview 


November, 17 ,198 ft 


1-111 



SOFTWARES AND 
SOFTWARE ENGINEERING 


• A Type System for A Functional 
Programming Language {Campbell) 

• Environments for Parallel Computation {Gear) 

• A Program Development System ( Kamin ) 

• Abstract, Executable Specification [Kamin) 

• A Decentralized Debugging Service [Lin) 

• Software Engineering Data Base and 
Project Management Support Systems 
{Belford, Harandi, Liu) 


ICLASS overview 


1-112 


November,17,1986 


♦ Software (design Met&opls tv ^d^pcrt 
pofiuOare reuse 

* dcusc J>0'f{iOare Jlcbravt* t$ 

SSAVOflA " nixmerCc&l /> effort 

Cle fnm — p ort af J/IG/) 

jentrfrC Ccbr&vy 

• Jtx {er Con n ectien lanj <xo^ e 

flolgli d i — -for Xnterco since fran 

of different 
two duetts orL 
SyU ms 

’ Open- System arc'fciie.ctu.re. 

. Objed- base. Aoffoart enjx'neennj 
database Au-pporix'ng {/erston, 
C^anae movutoUmd and rvoLfital'n^^ 


utrvL, 


1-113 


HIGH PERFORMANCE AND 
HIGHLY AVAILABLE 
DISTRIBUTED SYSTEMS 


• Distributed Task Assignments 

• Load Balancing Algorithms 

• Dynamic Control Structures 

• Reconfiguration Schemes 

• Process Migration 

• Objected-Oriented, Data Flow Architecture 


ICLASS overview 


1-114 


November,17,i98fl 


Three Implementation Projects 
to build 

DISTRIBUTED SYSTEMS 


• DROLL , A Distributed Testbed for 
DDBMS Algorithms and Protocols. 

• PICASSO , A Adaptive Distributed 
Operating System 

• MENTA T, A Object-Oriented, Macro 
Data Flow System 


ICLASS overview 


1-115 


November, 17, 1986 



DreoLL , a r«/ Bed 




To evaluate protocols foe 

* Concurrency Conlrol 

* Foil urc deiccitot t Grid YCCo \Z6r<j 


To 

Other 

nodes 


ICLASS overview 


1-116 


November, 17, 1985 







The Cornerstones of 

Picasso 



ICLASS overview 


November, 17, 1986 


Picasso Will Provide 


• A frame-work for testing and evaluating message 
routing & load sharing methods 

• An open, layered, and expandable basis for 
operating system design and experimentation 

• A portable, efficient environment for parallel algo- 
rithm development 


Only by advancing the state of the art in programming 
environments for message passing computers can we 
realize the promise of effective large-scale parallelism. 


Using adaptive routing, dynamic load sharing and 
a consistent system representation, Picasso will 
engender solutions which harness parallelism while 
maintaining clarity and reliability. 


ICLASS overview 


1-118 


November, 17, 19 86 



MENTAT 

An Objected-Oriented, Data Flow Machine 
OBJECTIVES 


• To provide an environment conducive to 
distributed software development 

and effectively supports software reuse 

• To develop a high performance distributed 
system in which the degree of parallelism 
is maximized 


ICLASS overview 


1-119 


November, 17, 1985 


D*$inbvded dacco J)odA flout due fine 



Components of MEM TAT ; 

• A dor - Objects 

• Token or messages 

’ Proqfommi' i<j bangtui^eS 

C + * and Ada. 


ICLASS overview 


1-120 


November, 17, 198ft 






A Macro Data flow Machine 



@iut T+**e S**ppor£ 


«4 

MtAffAT 


ICLASS overview 


November, 17, 1985 


1-121 






Ji>mmarg of SC LASS Activities 


Systems and 


A* adaptive Pas 

A fflocro data, floui 
OrcAitecture 

process migration. 


Software 

Engineering 


3)iS tri bated -flic 

Systems foe 
neivJorfo of 
i jJ or testations 

/PeUable j cUsUibmted 
DBMS 


* Environments for Pa- Pro - 
i A type System for a fp 

• Abstract, executable 

I 5 pec if i cation 

i 

| A program development 
System 

A decentralized debugging 
Jervi ce 


Software engineering 
data base and 
project management 
Support systems 


ICLASS overview 


1-122 


November, 17, 1986 


OVERVIEW OF ICL ASS RESEARCH: 


RELIABLE AND PARALLEL COMPUTING 


R. Iyer 


Computer System Group 
Coordinated Science Laboratory 
University of Illinois at Urbana-Champaign 


1-123 


ICLASS ACTIVITIES IN RELIABLE AND 
PARALLEL COMPUTING 


• 6 Faculty, 10 students 

• Research Areas 

- Reliable Computing 

- Parallel Processing 

• Interaction with NASA Centers 

- Student/Faculty visits to NASA facilities 

- Joint Research with NASA- Ames, JPL 

- Interactions with NASA Langley 

• Other Activities 


1-124 


RET TABLE AND FAULT TOLERANT COMPUTING 


• Automatic Recognition of Failure Symptoms 

□ Real time prediction of major system problems 
based on low-level error/recovery symptoms 

□ Prediction based on learning from observed 
behavior 

• Structure Based Error Detection 

□ Detection of major software problems 

□ Detection of hardware failures affecting 
software integrity 

• Algorithm-Based Fault Tolerance 

□ Takes advantage of unique features of the 
algorithm 

□ Cost effective for specific application e.g. signal 
processing. Matrix Manipulations 


1-125 



RELIABLE AND FATJLT TOLERANT COMPT TT TVP. 


• Fault Latency: Experimental Study 

□ Simulation based study using real workload 
data 

□ Accurate evaluation of fault latency 
distributions 

□ Latency distributions valuable for accurate 
reliability prediction and estimation of 
multiple failures 


1-126 


PARALLEL PROCESSING - APPLICATIONS 
• Image Processing 

□ Low level operations e.g. convolution, filtering 

□ High level operations e.g., connected 
components 

□ Unique feature is handling both in real time 


• Design Automation 

□ Standard Cell Placement 

□ Wire Routing 

□ Unique feature is use of hypercube to give 
large speedup instead of special purpose CAD 
accelerators 

• AI Algorithms and Software 

□ Development of heuristic rules to guide 
parallel run-time search for LISP and 
PROLOG programs 

□ Investigation of architectures to support 
parallel search techniques 


1-127 


• Architecture 

□ Reduction in communication overhead 

□ Efficient use of local memory 

□ Study of memory referencing characteristics 
for individual locations 

• Measurement-based Evaluation 

□ Concurrency Measurements 

- Hardware Monitoring 

- Software Instrumentation 

□ Relating concurrent program behavior to 
system resource usage 


1-128 


AUTOMATIC RECOGNITION OF FAILURE SYMPTOMS 


R. K. Iyer, L. T. Young and V. Sridhar 


Computer Systems Group 
Gcxjrk&nated Science I^bocaiory 
Univ er si ty of OTnefe at Urtam-^harmpmgn 


1-129 


• Recognize onset of persistent system problems 
based on observed relationships between low level 
recoverable errors 

• Differentiate between transients and intermittents 

• Quantify the strength of the captured relationships 


1-130 


RAGK GROUN D /MOTTV ATION 

• Early recognition of symptoms of persistent errors 
usually not possible 


• Causes usually complex — may affect different parts 
of a system 


• Detection commonly occurs as many isolated 
incidents 

• Incorrect diagnosis leads to improper recovery 
management — > affects system integrity 


• To be effective, the system must e x a mi ne ^ 
seemingly unrelated error events for possible 
relationships 


1-131 


SYMPTOM RECOGNITION 

1. Clustering of identical errors 


2. Identification of sudden rise in failure rate— 

GROUPING 


3. Identification of EVENTS — H Similar M groups 

4. Identification of SUPER EVENTS — "related" events 


5. Quantification of the strength of inter-record 
relationships 


1-132 


VALIDATION OF FAILURE SYMPTOMS 

• Probabilistic Validation 


P(A 1 )*P(A 2 )*...*/’(A n )</ > (/4 \A 2 . ■ ' ■ A n ) 


Strength (S) 


P(A 1 YP(A 2 )*„*P(A n ) 
P(A \A2- 4 ’ ' A n ) 


• Group Level Validation 

□ Complete Analysis 

□ Subset-Based Analysis 

• Event-Level Validation 

□ Inter-Group Analysis 


• Super Events 

□ Inter-Event Analysis 


1-133 


SUMMARY 


1. Demonstrated a technique for fault isolation 

2. Allows resolution between independent and 
dependent causes, transients and interinittents 

3. Estimates strength of relationship among 
dependent failures (useful in prediction) 

4. Can evaluate effectiveness of new diagnostic 
techniques 


1-134 



• Current results show that real-time diagnosis is 
feasible 


• Develop strategies for on-line diagnosis and 
reconfiguration for complex multi-computer 
systems 

• Perform hardware and software error injection 
experiments on network of workstations 

• Extension to symbolic architectures 

• Investigate feasibility of on-line software "repair" 
routines 


1-135 


c 


What is CASIS? 


• # CASIS is Stanford's Center for Aeronautics and Space 
Information Sciences 

• CASIS was founded in March, 1983 with the support of a block 
grant from NASA's Office of Aeronautics and Space Technology 

• CASIS was founded as a multi-disciplinary, cross-departmental 
research structure which would provide faculty and students with 
an opportunity to participate in a variety of space-related projects 
relating to activities of the U.S. civil space program 

• CASIS includes 13 Stanford faculty, 9 professional 
research staff, 31 graduate students, and 6 undergraduates 

TheCASIS administrative offices, the central computer facilities, 
and the CASIS Experiment Laboratory are located in Durand Buildinn. 

Participating projects are located in various CSD and EE buildinqs on 
campus a 


1-136 



CASIS Governance 


J 


• CASIS is governed under a charter approved by the 
Stanford School of Engineering and the Provost 

of the University 

• The overall direction of the center is provided by the 
Director, Prof. Peter M. Banks. 

• Day to day operations are under the direction of the 
Associate Director, Dr. Michael J. Wiskerchen. 

• Policy decisions for CASIS are reviewed by the CASIS 
project investigators 

• Progress of research projects and associated budgets are 
monitored by the Director in collaboration with individual 
research project leaders 

• The practical responsibility for research work lies in the 
hands of the research leaders 

• The Director reports to the Associate Dean for Research in the 
School of Engineering 


1-137 



M. J. Wiskerchen — STARLAB/SEL 

CASIS 

• Center for Aeronautics and Space Information Sciences 

• NASA OAST HQ block grant in information sciences 

• Advanced information sciences technology research 

• Core technolog) for TELESCIENCE” applications research 

• Advanced technology for Shuttle and Space Station ap- 
plications 


1-138 


nniGINM- PA*®. 


STANFORD RESOURCES 



1-139 






M. J. Wiskerchen — STARLAB/SEL 


Center for Aeronautics and Spaee Information Sciences 

CASIS 


• Concurrency Studies 

o Researchers: M. Flynn, S. Owicki, S. Lunstrom - 5 
students 

o Performance of Highly-Concurrent Systems 
o Models of Parallel Programs 
o Highly Reliable Concurrent Programs 

• Network Graphics and User Interface Architecture 

o Researchers: K. Lantz - 4 students 

o Virtual Graphics Terminal Service 

o User interface architecture: Terminal management 
- Command specification and response handling - 
application specific interaction - multi-application 
management 


1-140 


— \ 

CURRENT CASIS RESEARCH 

— 


• Studies in Computer Concurrency- Prof. M. J. Flynn 

• High Speed Local Area Networks- Prof. F. A. Tobagi 

• High Performance VLSI Signal Processors- 
Prof. A.M. Peterson 

• Parallel Computing Arrays for Signal Processing- 
Prof. T. Kailath 

• Satellite Communications for Space Science Data 
Systems- Prof. B.B. Lusignan 

• Network Graphics and User Interface Architecture- 
Prof. K.A. Lantz 

• Large Volume Database Management- 
Prof. G. Wiederhold 

• Rapid Image Retrieval for Remote Sensing Data— 

Prof. P.M. Banks 

• Advanced Video Systems and Robotic Vision Systems 
for Scientific Analysis— Dr. M.J. Wiskerchen 

• Highly Concurrent Systems- Prof. S.F. Lunstrom 

• Reliable Concurrent Programs- Prof. S.S. Owicki 


1-141 


M. J- Wiskcrchen — STARLAB/SEL 


Center for Aeronautics and Space Information Sciences 

CASIS . 

• High Speed Local Area Networks 

o Researchers: F. Tobagi, M. Mahric - 4 students 
o Topological Design of Fiber Optics LANs 
o Study of Media Access Protocols 
o Design and Implementation of the Network Interface 
o EXPRESSNET implementation 

• Telecommunications Research 

o Researchers: B. Lusignan - 5 students 

o Efficiency modeling of satellite digital transmission 

o Study of new modulation techniques 

o C-MOS integrated circuit design for radio-channel 
equipment 

o Efficiency models for fiber-optic digital networks 

° Optimization modeling for digital communications 
components 

o Digital Telecommunications switch development 


1-142 


M. J. Wiskerchen — STARLAB/SEL 


Center for Aeronautics and Space Information Sciences 

CASIS 


• Parallel Computing Arrays for Signal Processing 

o Researchers: T. Kailath - 2 students 

o Parallel Algorithms and Architectures for Kalman 
Filtering 

o Schur vs. Levinson Algorithms for Stationary and 
Nonstationary Processes in Data Communications 

• Advanced Concepts for Remote Space Science Operations 

o Researchers: P. Banks, P. Williamson, R. Clauer, 
M. Wiskerchen - 6 students 

o Telescience Research for Shuttle and Space Station 

Svstems 

* 

o Distributed Computer Graphics Networks 


1-143 


M. J. Wiskerchcn — STARLAB/SEL 


Center for Aeronautics and Space Information Sciences 

CASIS 

• High Performance Signal Processors 

o Researchers: A. Peterson, I Linscott - 3 students 

o PROLOG language as a processor description tool 

and VLSI CAD systems 

* 

o High performance architectures with relational process- 
ing 

o Real time parallel processing - Scheduling Theory 
approach 

o Optimization of pipelined processor using linear program- 
ming 

• DataBase Management Architectures 

o Researchers: G. Wiederhold, P. Rathman, H. Waquar 
- A students 

o Database design and operation methods and algorithms 
o Optical storage technology 


1-144 


r 


^ New CAS1S Research Topics j 


1. Color Stereoscopic Video Systems— Prof. P.M. Banks, EE 

2. Speech Recognition and Analysis- Prof. R. M. Gray, EE 

3. VLSI Tactile Sensors- Dr. P.W. Barth, CIS 

4. ADA Development for Space Systems- 
Prof. D. C. Luckham, EE 

5. Distributed Network Architectures for A.I. Work Stations 
-Dr. T.C. Rindfleish, CSD 

6. Human Factors for Space Experiment Operations- Dr. M. 
J. Wiskerchen, EE 


1-145 



TELESC IENCE 


V • 

* f:£ I 

! 0 i 

-fc °3 
a 


TJ (b 2 w 

f h C+» 
^ o OH 

0 >»«? TJ 
fc°*C 

M 


Qi 

<S 

C H 


(. id 

<b , 

0 U 

3 C o o 
(i b r 

• £* 


Hi 


0£ 
(tf-K +: 

Oljj J* 
»3S 
c5 e 


£ 0 .-H 


lb 2 "h 4 

0 5 ft* 

c 2 >3 

: j. f c 
s£ g 0 

S 22 i ;; 

Ha? jo 

»oc?" 

fiL H *H H 


C 

0 


C 

0 

•H 

SI 

C 

•H I 

V I 
* I 
P I 


1 s': 

Id -H J 

u m ¥ y 

•is* 

? «*s » 

Stj 0 *• 


■H r i- “ 


; * j?c 

3 C^-H 

5 65 ; 

t. 3 c 2 

i-K-c S, 

■° C - 0 
u- h +;q. 

c $. ™+* 

> ¥ c (b 

•h id s« 

•H JS „ 

2«82 
q, $ (b (b 

: :|S 

4 ? 0 ) J v 

• si* 

•Ha * ^ 

5 O « O 

w - c (b 
Q> ft » 0 . M 
£ -H 4 W -H 
h -h .0 Qi +» 


Qi 

TJ* I 
3 C C 

H 0 1 

o w ■* 


lb 

£fi 
** o 

»H (• 

O’H 


Hi ID 

’ C *■ 

r TO fc-H o * 

•h r o W ,rt ¥ 

b Gj -H 3 
0 ^ T 3 tj id q, 

* Hi Qi u a 

¥ o C 'J 1 ? 

c A) c 2 g* 8 

id Qi fll Qi 0 

lb I/I g C $, lb 

fir, or? C 


ID 


Qi M £ ^ 

iil ¥ [ 

&%* 
1 - 3 >> 


jj j. . (Jl J 

£c 


t > 


Qi 


lb 

in 


¥ in 

3 lr 

a lb 


0 "JO 
j > • 0 J 

2 sS$| 

* M •* *5 

rt in 


•H £ 


6 J r C 

V lb 3* * 
Cag v 
<d O e E *h 


to 




U) Qi 


-D? °r 

6 cJ°, 


0 ^ 


• JoS 


u 
O 

* 

lb Qi ¥ 


U H 


* V M w w 1 

£ J u J in £ O' 

h < to 6 o + C 


1-146 


>> 

^H C 

m <& -h 

g^« . 

•H I J 0) 

tB-i? 

J DXJ J 

“Ins 

Hi cl 1 * 
¥ 0 *< 
o -h +: & 

6«£* 


U 

*6>> 
“*. 4 
*°6 


>• i- " -, 
QT* 3 
¥ Z, U c 

o E ib 5 

3+: O.J 

T> ! x A, 

C3*0 

Vis 

OTJ <1 * 

taf* 

£<»° 

* U ¥ 0 

•h hH * +* 

*Cju 

* U <t Hi 
Him *•* 

e i ««. 

L. E Q, o 


1-147 



TELESCIENCE CONCEPT 



1-148 







Stanford University Network for Space Telescience Applications Research 

SUNSTAR PROGRAM 
M. J. Wiskerchen — STARLAB/SEL 


VALUE OF TELESCIENCE 

• ENHANCES PRODUCTIVITY OF REMOTE OPERATIONS 

o Gives better use of local and remote human resources 
o Reduces mistakes 

o Provides a capability to quickly investigate new or 
unexpected phenomena 

• SHARPENS FOCUS OF SPACE RESEARCH OPERATIONS 

• PROVIDES COORDINATION OF EXPENSIVE RESOURCES 

• PROVIDES DESIGN GOALS FOR SYSTEM PLANNERS 

• GIVES FOCUS TO NEW TECHNICAL NEEDS TO 
SUPPORT SCIENTIFIC RESEARCH OPERATIONS 


1-149 



Technical Challenges for Telescience 


1. Restricted bandwidth in telecommuncation channels 

• Need for information compression 

• Dynamic channel selection based on useage models 

• New modes of communication (e.g., electro-optics) 

• Use of object coded definitions for graphics 


2. Finite signal propagation time 

• Look-ahead capabilities for experiments and operations 

• Autonomous operations 

• Advanced local simulation of remote system behavior 


3. Integrated information acquisition and dissemination 

• Digital data to include images, voice, computer 

• Development of appropriate packet techniques 

• Main link vs. local and remote distribution, capture and 
processing 

4. Spatial diversity of user centers for single experiment sites 

• Control and command models 

• Sharing of current information 

• Segregation of returning information to local addressees 

• Standard interfaces and access protocols 

5. Human interactions 

• Integration of voice, image and computer information 
for experiment control 

• Optimization of cognition for "adaptive” science 

• Balance between automatic sequences and timely 
direct control 

• The value of local simulated and time-delayed experiment 
images 


1-150 


6. Tool development 

• Voice coding and synthesis 

• Voice recognition and computer interaction 

• Simulation 3-d graphics 

• Stereoscopic video 

• High definition video 

• Knowledge-based operations planning 

• A.I. for remote instruments and support equipment 

• A.I. for local site system configuration and operation 

• Hardware support for network graphics 

• High-bandwidth local area network for mixed mode data 

• Query language database management 

7. Cost issues 

• System costs must match user needs 

8. Reliability 

• Needs will vary according to the telecommunications 
channels used and the type of project 


1-151 


NEW ENGINEERING PHILOSOPHY 


A NEW, UNIFYING CONCEPT BASED ON THE NEED TO IMPROVE 
THE WAY REMOTE RESEARCH OPERATIONS ARE CONDUCTED 
IN SPACE AND IN A TERRESTRIAL ENVIRONMENT 

WILL PROVIDE A DESIGN GOAL FOR SPACE STATION 
TECHNICAL DEVELOPMENTS 

HAS STRONG TIES TO AUTOMATION, ROBOTICS, EXPERT 
SYSTEMS, COMPUTER VISION, AND OTHER TOPICS RELATED 
TO KNOWLEDGE-BASED ENGINEERING 

IS AT THE FOREFRONT OF NEW APPLICATIONS INVOLVING 
HUMAN FACTORS ENGINEERING 

PROVIDES A MECHANISM FOR UNIVERSITIES, INDUSTRY AND 
GOVERNMENT TO WORK TOGETHER ON RESEARCH AND 
TECHNOLOGY PROGRAMS 

PROMOTES THE USE OF RAPID PROTOTYPING CONCEPTS AND 
TESTBEDS TO DEVELOP FUNCTIONAL SYSTEM DESIGNS 

PROVIDES NEW OPPORTUNITIES FOR UNIVERSITY-BASED 
RESEARCH AND PILOTS 


1-152 




;♦♦♦♦♦♦♦♦♦♦♦♦#> 

(♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦* 

(♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦< 

<♦♦♦♦♦♦♦*♦♦♦♦♦♦♦♦♦♦♦♦* 

'** AUTOMATION & 

KNOWLEDGE BASE ENG. | ROBOTICS EXPERTS j AI LANGUAGE TOOLS 

DIGITAL VIDEO & VOICE 
pi p pr OPTIC NETWORKS 

<v*<? ALGORITHMIC TOOLS 

* ^♦♦♦♦♦♦♦♦♦♦♦♦♦♦♦^SATELLITE COMMUNICATIONS 


EXPERT SYSTEMS 
HUMAN FACTORS 
HUMAN SUPPORT TOOLS 


EXPERT USERS 


TESTBEDS 


RAPID PROTOTYPES 


INFORMATION 

TECHNOLOGY 

EXPERTS 


ESTABLISH FUNCTIONAL 
OBJECTIVES 
TEST AND EVALUATE 
PROTOTYPES 
IDENTIFY SYSTEM 
REQUIREMENTS 


& 

ENGINEERING 




(VALIDATE FUNCTIONALITY 
ESTABLISH AVAILABILITY 
TRANSFER TECHNOLOGY 


'••y'«5W|»y 


1-153 



UNIVERSITY CONSORTIUM FOR SPACE 
STATION TELESCIENCE RESEARCH 


li 



PURPOSE: 

PROVIOE A MEANS FOR THE UNIVERSITY SPACE SCIENCE 
COMMUNITY TO INVESTIGATE, DEVELOP AND VALIDATE 
FUNCTIONAL REQUIREMENTS FOR THE DESIGN OF THE 
SPACE STATION 

APPROACH: 

DO EXPERIMENTS WITH USERS ON PROTOTYPES OR TEST- 
BEDS AND EXTRACT DATA FOR EVALUATION OR TRADE- 
OFF ANALYSIS 

REQUIRES A TEAM INCLUDING EXPERIMENT EXPERTS, 
SYSTEM ENGINEERS, USER ANALYSTS AND PROTOTYPERS 

PROCESS: 

FRAMEWORK OF THE PROCESS IS AS FOLLOWS: 

- OPERATIONS CONCEPT 

- USER ANALYSIS 

• TASK ANALYSIS 

• MAN -MACHINE INTERFACE ANALYSIS 

- VALIDATION 

THE PROCESS IS NOT LINEAR BUT ITERATIVE AND 
RECURSIVE AND MUST BE SUPPORTED BY PROTOTYPES 
WHICH EVOLVE DURING THE PROCESS 


1-154 


Stanford University Network for Space Telescience Applications Research 

SUNSTAR PROGRAM 
M. J. Wiskerchen — STARLAB/SEL 


• RESEARCH IN PAYLOAD DESIGN, INTEGRATION 
AND OPERATIONS 

o MSEC, GSFC, JSC, KSC, ARC, LeRC cooperative 
agreements 

o Stanford implements distributed network communica- 
tions 

o Use Shuttle payloads as testbed for ” TELESCIENCE” 
research 


1-155 


> m 1,1,11 

( cooperative agreement RESEARCH ) 


GODDARD SPACE FLIGHT CENTER 
Remote space science operations facility 
Integrated voice, video, computer work station 
CAD/CAE/CAM work stations 

Human factors research for operations and control systems 

Fiber optics local area networks 

Optical disk mass storage systems 

Parallel processor architectures 

Satellite network architectures 

Expert systems for operations centers 

Expert systems for communications control 

MARSHALL SPACE FLIGHT CENTER 
Expert systems for payload timelines 
Local area network architectures 
Payload Operations Control Center studies 
CAD/CAE workstations 

Distributed engineering databases for payloads 
Al workstations 

JOHNSON SPACE CENTER 
Fiber optics local area networks 
High performance work stations 
ADA software architectures- 
Expert systems for operations and control 
High definition and digital video 
Optical storage systems and databases 
Satellite communications architectures 
Digital speech recognition and synthesis 
Speech and video compression 

AMES RESEARCH CENTER 
Robotic vision systems 
Human factors research 
Parallel processor architectures for Al 
Speech recognition and synthesis 
Large computational architectures 
Computational algorithm development 


1-156 


I 



COOPERATIVE AGREEMENT RESEARCH 


LEWIS RESEARCH CENTER 

Advanced Communications Technology Satellite -- system 
architecture study 

Expert systems for space station power-system control & operations 

KENNEDY SPACE CENTER 

Remote testing and integration research 
Expert systems for integration operations 
Fiber optic local area networks 


1-157 



APPLICATIONS OF CASIS TECHNOLOGY 


STANFORD/NASA CENTER COOPERATIVE AGREEMENTS 


1. GSFC 


ADVANCED COMMUNICATIONS DESIGNS 
HUMAN FACTORS STUDIES FOR CONTROL CENTERS 
MULTIMEDIA WORKSTATIONS 
PARALLEL COMPUTING ARCHITECTURES 
CAD & CAE GRAPHICS SYSTEMS 

EXPERT SYSTEMS APPLICATIONS TO CONTROL CENTERS 
REMOTE SCIENCE OPERATIONS CENTERS 

2. KSC 

AUTOMATION AND ROBOTICS APPLICATIONS TO ORBITER 
PROCESSING, LAUNCH OPERATIONS, AND PAYLOAD 
INTEGRATION AND PROCESSING 


3. JSC 


MULTIMEDIA OPERATIONS WORKBENCH 

FIBER OPTIC LOCAL AREA NETWORKS 

EXPERT SYSTEM APPLICATIONS 

ADVANCED MISSION CONTROL CENTER DESIGN 

SPACE STATION TELESCIENCE TESTBED PROGRAM 

4. MSFC 


ADVANCED CONCEPTS IN PAYLOAD OPERATIONS CONTROL 
CENTERS AND REMOTE SCIENCE OPERATIONS CENTERS 
EXPERT SYSTEM APPLICATIONS TO PAYLOAD OPERATIONS 

5. LeRC 

DESIGN STUDIES FOR THE ACTS PROGRAM 


1-158 



Stanford University Network for Space Telescience Applications Research 

SUNSTAR PROGRAM 

M. J. Wiskerchen — STARLAB/SEL 


• AUTOMATION AND ROBOTICS 

o Timeline engineering using expert systems 
o Vision systems in payload robotics 
o Computer architectures for robotics 
o AI languages 

o Communication networks for robotics 
o Robot systems for payload control 
o Human factors research for man-machine interfac- 
ing 

o Expert systems for payload integration 


1-159 



w 

= E 

O (0 

•- u 
CO D) 

o 

CD v. 
Q.0L 

s< 

c cn 

C CO 
O ^ 
CO 
CO c 

o ).2 


q 

•+—» 

c 


CO 

o 


CO Q- 
C CL 

ol< 

*4— » r 

£.f 

CO m 

<D 0 
O & 

co £ 
a DC 

0) 


■o 

a> 

0) 

a 

o 

-i 


c 

CO 

CO 


c 

CO 

w 

E 

(0 

u> 

o 


< 

cc, 

o 

(0 

0) 


o ^ 

o c 
(0 

W 

s * 

o E 

Co 4-. 

o w 
— >» 
Q. (0 

a. 

CO O) 

c 

O) 
(0 

o E 


£ E 


m 40 
CO o 

0 ) — 


O c 
0) 

2 I 

“ f 

in a> 
c > 
o o) 
= -o 

CO 

= « 
Q. c 

CO o 

E E 

53 

J= o 

CQ ++ 
Q> 

Z CD 


O 2 co 


-c 2 

w 

a. aT 

E c 
O 5 

S S> 

CO “ 

a> 


o c o 

— i- 


2 
• a. 
w CO 

o *“ 

If 

Q . O 


2 o ® 

q. «*- O 

2 o> 
-wo 
++ — 

O O 

“ c 
w q. x: 
^ o 
i- ^ ® 

o ~ 


W w o 
e ts 
o o> 

— n c 

CO O 
O — — 

— w CO 
Q. ® 2 

®- w 

CO c 

II 


■O > 

c o 


0) 


jc z: 
o 

•o 


© _ 
> GJ 

« 2 


£ a 


CO 

0) 

w 


a> 

> 

© 


a) 

*- sz 
. o 

O CO 

£ o> 
O A 


"=E 

s • 

a> 

2-- ~ 
>* - c 

t? ® 0) 

Sf I 

2 Sg- 

+- ir 

o > 

H- 1_ © 

o ao 


1-160 


approaches to Integration and operation of space 
systems. Follow-on efforts will be undertaken to 
develop selected operational applications to benefit 
current or future space transportation systems and 
payloads. 


BASIC THEMES OF THE SIORA PROGRAM 


• AUTOMATION AND ROBOTICS RESEARCH APPLIED TO SPACE SYSTEMS 

- EMPHASIS ON INTEGRATION AND OPERATION 

- GROUND AND FLIGHT SYSTEMS SUPPORT 

• APPLICATIONS DRIVEN RESEARCH 

-TASKS BASED ON OPERATIONAL NEED 

-WORK WITH LSOC AND KSC TO DEFINE INITIAL TASKS 

• A STANFORD/LOCKHEED TEAMING EFFORT 

-UNIVERSITY/INDUSTRY RESEARCH PARTNERSHIP 
-POTENTIAL MODEL FOR GOAL ORIENTED RESEARCH PROJECTS 

• NEAR TERM RAPID PROTOTYPING: 6 TO 24 MONTH TIME FRAMES 

• INITIAL SIORA TASKS WITH KSC; OTHER POTENTIAL TASK AREAS 
INCLUDE A & R RESEARCH APPLICATIONS FOR USAF-SCF, VAFB, 
AEROSPACE PLANE, DARPA, SDI, ETC. 


1-161 


Institute For Computer Applications In Science and Engineering 

ICASE 



1-162 


ICASE 


Permanent Staff 

R. G. Voigt - Director 

M. Y. Huss aia i - Chief Scientist 


Visiting Staff - 16-20 Ph.D.’s 


Consultants 


Summer Program 


"Product" 

75 Reports 

2-4 Workshops/Conferences 


1-163 



LaRC Applications 




VISIBILITY 


13 Publications 


Second SIAM Conference on Parallel Processing & 
Scientific Computing 


Active participation in variety of other meetings 


4 Staff Scientists 


10 Consultants 


1-165 


PARALLEL PROCESSING 


Systems Issue 

Alternative mathematical models 

Numerical algorithms 

Models of computation 

Mapping problem 

Dynamic load balancing 

Co mmuni cation & synchronization requirements 

Programming environments 


1-166 


numerical algorithms 


Modify older of computation to 

1) Increase parallelism 

2) Decrease communication 

3) Decrease synchronization 

Numerical algorithms used for definiteness 
SOR - 1) 

Pivoting in Gaussian elimination — 1)3) 
Time marching for PDE’s — 1)3)3) 
Multigrid — 1)3)3) 


1-167 


MODELS OF COMPUTATION 


Predict performance of 

algorithms on variety of architectures 
different algorithms on same architecture 


Permits study & optimization of parameters 


Hardware 

# processors 
memory size 
communication 
arithmetic 


Software 

problem size 
process spawning 
process switching 
synchronization 


Using iterative method for PDE demonstrated 
weakness of Intel IPSC 

Packet size too large 

Communication too slow 


1-168 


MAPPING PROBLEM 


Map subdivisions of problem onto processors to 
minimise computation time 

OR 

Find subdivision that permits optimal mapping for 
given architecture 

Research focused on using graph representations of 
algorithms & architectures 

Pffiriwit algorithms developed to find mappings for 
specific graphs — e.g. trees onto hypercubes 

Technique developed for subdividing domain into subdomains 
of equal work for adaptive mesh problems 

Demonstrated value of hexagonal subdivisions of domain 


1-169 


DYNAMIC LOAD BALANCING 


All processors should hive equal w ork 

OR 

Inefficient use of processors 
Longer execution times 


Solution: Rebalance 
Problem: Not easy 
Must account for cost of 
Detection 

Co mp u t a ti on of new distribution 
Estimate of performance gain 
Redistribution 


Work focused on developing and evaluating mod els of 
Computation that can be analysed 


1-170 


COMMUNICATION & SYNCHRONIZATION 


Goal: Eliminate Consequence: Algorithms fail 


Reduction of frequency & amount 

Model: SOR for PDE's 

Advancing in time independently 

Reducing communication cost of global convergence 

Reducing frequency of global convergence 


Analysis of amount & impact for particular problem 
mapping on variety of architectures 

Model: Adaptive mesh 


Measurement of costs for running algorithms 


1-171 


PROGRAMMING ENVIRONMENTS 

Foret: Set of machine dependent macros rti«t generate 

Fortran code 

Constructs are machine independent 
e.g. barrier synchronization 

Facilitates programming & portability 

Implemented on variety of machine 

PISCES: Fortran based virtual machine concept 

Provides view of machine appropriate for user’s 
interests 

Implemented on VAX, Apollos; to be on Flex/32 

HAZE: New parallel language designed to support 
scientific progr amming 

Recognition of implicit parallelism 

Implemented on VAX, Sun; next; RP3, Flex/32 


1-172 


ACTIVE AREAS OF RESEARCH AT RIACS 
(Tying Computer Science to Computing in Science) 


CO 

w 

o 

< 

p 

o 

2 

< 

n 3 


5 2 

2 C3 

8 g 

a a 

a O 
e? C 
t- o 
u o 


E-> 


03 

►-* 

CO 

CO 

Pd 

o 

o 

c 


A 

o 

c 

<D 

A 

u 

o 

OT 

*•> 

OT 

c 

<D 

•H 

o 

CO 


T3 

c 

d 


co 


_ o 
rS a 
co o 

<o .5 > 

a> § ^ >» 

£ 2 s £ 

•H D ^ 

■P ? P 
'“J £ -*-> « 

3 O « » 

2u 2 w 


CO 


a 


«p 
P W 

<0 O 

ag 

£ c 

o x 

O Q 


(0 

c 

o 


t- 

3 

o 

h c 


O 

o -> 

a £ 

? * 

CD 4J 

£ * 


3.2 

fl 6 

6 a) 

O .C 
o O 35W 


CO 

Pd 

03 

P 

O 

Pd 

E-* 

►-H 

SB 

O 

03 

C 

* 

Pd 

Z 


T3 

03 

4-> 

.Q 

CO 


C 

o 


3 

< 

a> 

a 


o >s ij 

03 >5 cd 
oo O J2 
u c ^ 
cd c W 
o, a> <0 
w2 O 


CO 

Q 

Pd 

03 

E- 

CO 

Pd 


T3 

a> 

.o 

4-J 

CO 

0) 

<u 

a 

fl 

0) 

•pH 

o 

CO 

a) 

E-» 


0 < 
g< 

£ s 

° o 

■£» i: 

c o 

<0 u 

o < 


1-173 


PROJECT: SPARSE DISTRIBUTED MEMORY 



• • 
CO 

o 

I— t 

E- 

CO 

5 

W 

o 

c 

K 

C 

SC 

CJ 


i-, _ 

© CO 
O 

B « 

I 6 

l Z 

C •+-> 

U, (0 

5 6 

"cd - OT 
A cd 
_ > 

la S 

Sh co 
<0 * 


CO CO 

o o 

<3 < 

• I— t 

s s, 

CO 00 

> c 

U o 
<U S 

C kJ 
CO ^ 


•*J u 

c u 

(D CO 

a, x 


^ G 
co (0 

CD 

s 3 

< G 

^ g 

<U >N 

?E 

p —' 

73 cO 

*r -G 
£ o 
<0 

Q 2 


• • 
CO 
;=> 

< 

E-* 

CO 



1-174 


Building digital prototype 


World 


Focus 


Memory Store 


Physical 

signal 


Action 



Figure 2. The coupling of the memory to the world. The memory stores a record of the 
system’s past in a form presented to the focus by the system's sensors. The 
record can include features that control the system's motors. Selective 
action can be teamed by explicit training and by trial and error. 


1-175 



perturbed initial oondition( 1 )? 



1-176 


XXX X 


ORIGINAL PAGE IS 
OF POOR QUALITY 


Input Address 


Data in 



1-177 









8 



















































ORIGINAL PAGE IS 
OF POOR QUALITY 

Input Address Data in 



1-179 





















































































Data out: 


Data in 



1-180 















































Input Address 

1101010110 


Location 

Addresses 


Data in 


ORIGINAL PAGE IS 
OF POOR QUALITY 



Counters 





























































CO 

w 

H 

O 

w 

E-» 

M 

W 

o 

Ph 

<3 

O 

<3 

CO 

a 

K 

H 

h-H 

O 

a 

hJ 

< 

o 

w 

CJ 

£ 

<3 

> 

Q 

<3 
• • 

E- 

CJ 

W 

►“3 

O 

« 

Ph 




1-182 


MULTIGRID ALGORITHMS AND HYPERCUBE ARCHITECTURES 





cd 

> 

nd 

< 

*5 

< 


g 

5 

o 

M 

E- 

hJ 

D 


O 

m 

£ 

o 

HH 

<d; 

E-* 

2 

W 

S 

w 

h2 

cu 

£ 

HH 

hJ 

w 

H^ 

h4 

< 

05 

C 

o« 


eo 

£ 


<X5 .h 

p ^ 

a* <afl 

Q) 

* f-H 

cd £ 

s E 

u O 
0 _ 

£ cd 

£ g 

- s e 

g. 0 

i *-• 

L ° 

A Cd 

h 2 « 

r; S 

cd w 

£ 0 

£ 


cd 

* 

Li 

<d 


*h 

o 


e 

o 

Sh 

a 


o 

0 


£ 

^ _ o 

CD >f^ ri 

£ •§ “ 

3 

CL Cd 

O 0 


U o 

Qfl u 

•H /1\ 


CO 

0 
• hH 

TJ 

p 

-t-> 

CO 

Id 


_ 0 .3 

— H &. -H» 

P >% *P 

S ffi JS 


Q 

fc 

o 

L« 

o 

*t— I 

L . 1 
0 


CO 

z 

o 

HH 

E- 

a 

w 

05 

HH 

O 

W 

05 

P 

P 

Oh 


CO 

Id 

tj 

o 

a 

*H 

o 


p 

Pi 


CO o 
0 O 
• Jm 

CL 0 

o §• 
.£ « 
a ^ 


dfl 

C 


P 

o 

(h 

0 

A 

>% 

42 


0 

U 

do o 

2 e 

Cl OO 

fj CO 

1 5 

■q 0 

Id 2 

CO 3 

W O 


0 

r* Lh «h< 
6 
0 
U 
0 
Pi 

Pi 
jD 

1) 

> 

0 
Q 


1-183 


MAPPING OF GRID POINTS TO PROCESSORS 
USING BINARY REFLECTED GRAY CODE 





C 

<D 

> 

•m 

a 


V) 

%S 

O CO 
~ 3 
CO O" 

3 w 

E w 
i: <d 

o 

u_ o 
>»(/} 

:|i 

r > 

o CO 







V 













































































1-184 


Grid Points for 2-D Problem Schematic Representation of Hypercube Processors 



FFT AND NN-MESH ON HYPERCUBES 
(An Advanced Algorithms and Architectures Project) 


O 


co 

2 

o 

HH 

< 

2 

W 

s 

w 

nJ 

ft 

g 

w 

m 

P 

o 

ft 

w 

ft 

W 


o 

a 


i 

43 

CO 

a) 

£ 

i 

2 

2 

u 

o 

< 4 -t 

{-I 

o 

o 

ft 

43 

ft 

ft 

ft' 

o 


u 

o 

co 
co 
0 
cd O 

S 2 

*f "4 Q. 
-ft> 1-4 

ft43 
O +-» 

a I 

cd J 

£3 

13 *S 
£ a 

^ ft 

cd 

e 


G 

a) 

ft 

ft 

cd 

s 

CO 


o 

ft 

-t-> 

G 

0 

0 

co 

*5* 

cd 

43 

CO 

0 

£ 

1 

2 

2 

u 

o 


cd 

2 


cd 

S'* 

-*J u 

ft o 

o w 

W CO 

ft 0 
cd O 

£ 2 
0 ) ft 

73 -*-> 

o c 

O 0 

K. O 
SJ' Cd 
l-i 73 

a cd 


G 

o 

o 

00 

G 

13 

cd 

43 

CO 

0 

£ 

1 

2 

2 

S-, 

o 


cd 

£ 

-ft) 

ft 

O 

ft 

cd 

£ 

0 

g 

o 

CJ 

>v 

cd 

u 

a 

73 

0 

t-> 

O 

0 

s— 

0 

03 

^ ft 

S ft 

13 i_ 
O 

CQ «*— i 


i-3 

W 

Q 

O 

2 

2 

o 

ftH 

E- 

< 

CJ 

ft-* 

2 

P 

2 

s 

o 

u 

co 

23 

<3 

ft 

u 



o 

G 


0 

13 

G 


V. i- 

o 

G o 
cd V 

G* 

• H 

O Q) 

ft 

P. 
00 
• fft 

® 0 

-ft) 

u— i jD 

3 

*4-1 

G 2 

2 

2 *C 

u 

to ? 

o 

sg 

«4-t 

G 


(3 

o 

cd 

o 

F-* 

ft 

ft 

cd 

13 

0 

> 

00 

t- 

o 


.53 ft 

G O 
o £ 

ft (3 
ft cd 
<d 43 

43 

co 0 

0 u 

6 a 

1 E 

2 — 

*> 

o c 


o 

o 

00 

o 

co 

13 

o 

a 

03 

00 

43 


00 

G 


U—l _ ^ ^ 


ft 

cd 

s 

CO 

0 

43 

to 

0 

G 

0 

f-H 

ft 


O 

a 

03 

CQ 


ft 

cd 

£ 


S g 

* s 

ft G 

§| 
x 2 

ft £ 


ft 

ft 

cd oo 
£.£ 
43 t 

CO o 

1 ”. 

2 ° 

^ o 

«2 
■*j g 
O 0 

203 


1-185 


IMAGE CONTOUR EXTRACTION 


I 






C/3 


-2 



C/3 

u 


o 

•M 

s 

o 

Q 

<y 

CJD 

C5 


£ 


B 

C5 

O 


C/3 

c<— • 


£ 

o 

ffi 


1-186 


NETWORK PROTOCOLS 




# © 

CJ 

Oi 



© 

© 

• MM 

o 




U 

^3 

0 > 

C /3 


• mm 

'SS 

c. 

c« 

• MM 
(MB 

C 

c 

■ MM 


£m 

© 


Cm 

2 3 D 
CL C 

• MB 

53 


c 


55 

13 

c C /3 

35 

2 g 

W £4 

4 ) 

© 

53 

« c 

c /3 a> 

a> 

u 

C 3 

w o 
c /3 *■* 

MB 

C /3 

s 

C 8 s 

C 8 

Z .2 

4 ) 

• mm 

C /3 O 


c. 

•3 

C /3 — 

4 > w 

CU 

/-* 

= ? 
® U 

V 3 V 

Im 

.© 

© C /3 

c | 

• ^M 

3 

. M ^2 

"3 

mm Cm 

S * B 3 

C 3 

JM 

4 / 

w w 




O 3 

V 3 

Q - 

W 

-MM 

-2 £ 

a> 


c c 

5 o 
H, c-> 

— 43 
4) C/3 

« U 

t: c. 

4> H-* 


s -a 

HI C3 

C5 ^ 
,2 © 

S3 5 

Q r 


© 


53 

u 

.o 


JD 

• MB 

S~ 

^ — 

V3 

•— 1 T3 
Q fc* 

7* « 

Jg a 

5 C3 

fe ts 


u 

a 

cr 

C/3 

4> 

CJ 

o 

C3 


C3 

• MM 

■a 
<u 

£ 

© 


53 

■a 


03 

4> 

<3 

C/3 

• hM 

s 

Q 

fe 


O C/3 

fi.fi 
© "g 

v> *2 

o c 

<1> 

PM C/3 
w 

.1 “■ 

5 1 

9 '3 

fa ~ 

«h« O 

o c 

>» g 

.ts £ 

X U 

« «2 

at 

So 

o 

CJ © 


CJ 


*53 

e 

53 

C 

© 

© 

-A 

© 

> 

53 

J5 

Vi 

B 

’M 

"© 


53 

U 

© 

> 

© 

C/3 


c 

4) 

4m 

o 

£ 

• MB 

is 

7 

Q 

Q 

fe 

<u 


C /3 

a> 

CJ 

c 

C5 

C/3 "w 

E « 
© > 

w c 

g 2 

£ 

o ea 

«j e 

t- u 

4 ) 

■8 2 
s £ 

= . § 
o 

2 C /3 

£ c 
s 

£ 53 

2 tS 


C/3 — 


*T! © 


> O 
53 ** 


© 

C/3 


C/3 

4> 

© 

© 

53 


1-187 


>% 

T 3 

2 

t /5 

O 

O 

C 

-i— » 

o 

u> 

o. 

5 

Q 

tu 

<u 


3 

*c3 

4-4 

<U 

O, 

CO 

<o 

u-» 

3 

W) 

G 

O 

£ 

4-k 

X 

<u 

c 

<u 


c/5 

•S a 

n • 

'T 4-> 

3 U £V 

2 o 

00 u 

_* <u 

X 

o c 

00.2 
.£ oo 

i- s 
co *C 
c o 

O -3 

4^ 

O Ci_. 

OJ • — 

o 'H 
(U <u 

3 S2 

c -* 

O 1) 

O X 

2 TD 
& <— » 

O 3 

•z: o 

03 O 

4 — k 

3 o 
TS u 
§ o 

* 2 

oo CL 

C/5 H— 

£ Q 

o 

j 3 

C/5 


C/l 


<U 

1— 

3 

00 


Q 

tu 

<o 

-C 

H 


W o 

C/5 c/5 

C/5 

<t) 

o 
o 

u 

a 


• J 1 

5 ?§ 

Q o o 

^ o ^ 

O g>i 

V « O 

25* «? \ ‘ 


c 

2 


<o 

c/5 

<D 

X 


c /5 ■— . j-j • 

3 " S « - 

TT I— *“* C/5 t_ 


<U 


00 

3 

CO 

a 

2 

<U 

o 

<o 


*g 


*N 

— 

£ 

CO 

3 

3 

£ 

#* 

CO 


3 

-«nW 

• OT< 

O 

3 

OO 

w 

CO 

3 


D 


,p 3 

O 

C 

£ 

C/3 

u 

c 

CJ 

o 

<ys 

3 

C/3 

TJ 

3 

4— > 

3 

O 

o 

C 

?-« 


<U 

<D 

1? 



o 

4— > 

3 

4— k 

CO 

• ^ 

o 

£ 

o 

pJC 


3 

4-k 

O 

G 

CO 

T3 

O 

Um 

3 

<U 

G* 

13 

V- 

i) 

T3 

CJ3 

' ' 

O 

G 

T3 

# c 

# c5 

4—4 

3 

CD 

C 


3 

o 

OJ 

o 

a 

CJ 

c 

<v 

u. 

OJ 

CO 

1) 

O 

_c 

T3 

W) 

C 

c 


5 ^ 

£ o- 
c o 

c/5 t— i 

s- CL 

3J 

-<-* C/5 

<U c/5 

2 ° 

C3 Q 

5 ? 

Q .— • 

03 


cr 

<u 


Q 
Q 

PL D 
X 

. -»— < 

00 <u 

3 <u 

^ 3 

< l ) 03 

■5 is 

2 §> 

co O 
oo 
D 
O 
a 

03 


03 

3 


C /3 

<U 

oo 

3 

e 3 

t-i 


CT ^ 
« L ) JD 
C C 3 

.5 > 
2 o 

X ) S 3 

O 03 


1-188 


station 



1-189 










Percentage Access 


21 


18 


15 


12 


9 


6 


3 


0 


2 3 4 5 6 7 

Station Number 



Fairness of Channel Access for FDDI High 
Bandwidth Token Ring 



1-190 


i 


© 


a 

u 

z 

ta 

cs 

a 

o 


C/3 

«\ 

H 

CZ3 

H 

Z 

M 

U 

c/3 


CJD 

© 


s 

c 


u 

© 


CJ 

3 

c 


© 

s — 

© o 

3 .a 

a £ 

c >» 
© 5/3 
> c/T 

© g 

"3 O 

© ts 

« 2 

J *• 

e £ 

c/3 © 

«? a 

•- s 

_c 3* 


La 

& 


VJ 

• Mi 


Cm 

3 a W 

a; 

Q 

U 


3 c 
o .2 

«i « 

c 2 

*§ 

C 

<U 

• M* 

© 

vi 


U 'll 

CXI ® 

da’o 

• La 
© ** 

M 

© 

£ 

>* 

© 

C5 

0) 

Cfl 

» 

# i 


.2 3 

«<-j 

•k 

CX) 

VI 

w c 
■© o 

Vi 

w 

13 


mm 

© 3 

<5fl O- 

•-S O 

c/3 •*- 

© c 

VJ 

*iS 

£ 

•»«* 

IS 

u 

© 

£ 

O 

u 

C5 

C 

<u 

© « 

"w © 
© -4-a 

© © 
= g 

c 

© 

© 

L. 

© 

■** 

s 

.2 

*© 

C/3 


> C 

•S | 

VI 

#■* 

C-> 

V3 

<u 

<Ji © 

C L- 
© - 

£ 

w 

"3 

© 

© 


£ = 
I § 

<W C 

w 

U 

ci 

o 

£ 

c 

© 
• mm 

w 

C3 

CD 

3 

V3 

3 

& 

• — -*at 

© 3 
e 3 

1 S 
C 

U 

3 

F* 

0) 

3 

S 

© 

>* 

■o 

© 

VI 

V5 

a> 

o 

‘3 .2 

co w 

-m © 

flu 

4J 

U 

O 

-a 

O 

> 

© © 
3 .2 
C *> 

U 

CD 

0) 

c 
• ■! 

a> 

cu 

> 

La 

V3 


o> 

© c 

ff 

V3 

O 3 
c. c- 

[3 

— 

o 

o 

fi § 

m 

P 

3 

c. g 

*-» 

CJ 





u 

3 © 

c 

e 






C/3 © 

NN 

HH 

• 

• 

• 

• 


« 

I 

l 





l 


1-191 



INITIAL SCIENTIST’S WORKBENCH 


ORIGINAL PAGE IS 
OF POOR QUALITY 




1-192 

i 





MULTIMEDIA CONFERENCING AND 
COLLABORATIVE RESEARCH 


© 

N 

"JZ 4 > 

S J 

O 

** > 

Vi M 

© O 

£ i 

* m 


« S M 


5 fa 

C C /3 

S_ _ 


<U M 

U 


fa .3 5 

■3 -g Cfl 
2 O ^ 

i £ I 
« »*> « 
ss ts .► 


C/3 

2 SL 

3 

s' ® 

i 2 

u fa 


•2 c 2 

g .2 o 

S y ^ 

<*J C/3 C3 

5 QJ mm 

© 35 o 

- □ U 

2 

O' • . 


«9 

U 

O 

4 ) .© 

> C5 

t 5 1 

-2 u 

faaa 

fa 2 

' C3 

Si= 

> a 

^ fa 

c — 

mmm W 

rs c 

^ €5 

0 •* 

vj a 

u 

1 3 

H ~ j§ 

fa 

Z ^ W 3 

v t C 

a -SI 

H. S e. 

Z 

)— i i — 1 3 

x g»u 

U C -s 

<w c 

5 6X5 « 

a 2 ! ■£ 

C/3 © o 

fa s I 

fa o « 

^ « y 

> o Z 

<J C a 

Z 5 © js 

a § g> s 

U 2 *r 63 

tS ir u © 

-< £ a vi 

fa s *g ii 

raj w C/3 K 


1-193 



TELESCIENCE TESTBED 


C 

O 


a 

£ 

5- C 

«2 .2 

S 'em 

-5 C/3 


4> 


04 


g « 

•5 50 

_g 

2 £ 

“ “ 

^ s 

W .2 
£ 1 
.3 a> 

•11 

§.<» 

<3 - £ 

W> — 

e 5 

*£.®* 

u 

O 3/ 

'S -T 

o t 

>» 

cu 


g 

3 


w ■«■* 
_ e vj 

2 § >> 
*2 w r/j 

C. « J 

C3 4> C 

« ‘2 d .2 

U o «- 

<21 I 

| l> 0> ^2 

>-F r e 


c 


04 


g 

2 

o 

u 


*> 

C 

H 


c 

C3 



C 


04 


c/j 

04 

H 



C/5 


• ■■§ 
fi 





Q 


540 

S 

• 

04 

J3 


2 

vj 

O 

e. 

o 


u 

Cm 


C/3 

fc* 

04 

> 

*5 

P 

s 

o> 

H 




o> 

540 

C5 

S 

2 


s 


"3 

C 

<u 

N 

c 

3 

540 

U 

o 

o 


c/3 

U 

< 

tf 




i 


l 


1-194 



This slide depicts a style and language for 
writing parallel programs. The top third is a 
process-level block diagram of a typical 
concurrent program. This shows an array of 
computation processes (vertical stack of 
boxes) receiving pieces of work from a ticket 
server and feeding results to a queue 
manager for subsequent display. 

The middle portion shows some of the 
program to implement the block diagram. The 
anguage is Concurrent C, developed at AT&T 
Bell Labs and implemented in a translator at 
RIACS. 

The third portion shows how this concurrent 
program "plugs into" and interactive graphics 
application running on a color workstation. 

The inputs to the program are provided from a 
user-interface "control panel" and the output 
drives a graphics window. 


1-195 



Parallel Programming Languages 

Block Diagram: 7 □ 

□ 

□ 


□ 


Concurrent C program: 


{ 


process body compute ( i, tick, disp) 
while ( tick.next < N ) { 
disp.put(); 


} 


} 


Interactive Graphics-oriented Application: 


X \ 


ticket = create ticket(N); 

| for ( i=0 ; i<N i ;++ ) 

compute[i] = create compute(i,ticket,display); 






1-196 







PROPOSAL TO ESTABLISH 


< 

I 


LU 

O 

z 

LU 


LU 

O 

X 

LU 



LL 

O 



(0 

LU 

O 

z 

LU 

o 

CO 



LU 

O 

< 

Q. 

(0 


o 

LL 

cn 

o 

< 

< 


1-197 


NOVEMBER 17, 1986 


OVERVIEW 



1-198 


FUTURE INSTRUMENTS AND THEIR DATA RATES (Mb/s) 


CO 

oc 

Ul 


* 


00 

CO 

CO 

CO 

00 

CO 

CO 




s 




GO 

CQ 

CQ 

CQ 

CQ 

CQ 

CQ 





z: 

£ 

* 

s 

N"\ 

O 

co 

p—H 

LTs 

OO 

SS 

o 

O 

LTi 

1 

1 

1 

1 

i 

1 

1 



< 

-J 

Ob 


OC 

o 


Q£ 

>- 

PQ 

CD 

O 

S 


os </) 
o o 

< 5 

GO = 
LU 

% g 


s 2 

* < 

O Uut 

LTN >- 


CO 

CQ 

OJ 


GO 


00 

N 

CQ 

CNJ 


UJ 

-I 

UJ 


a. 

GO 


CO 

X 

CQ 


f"Tt 

o 

CO 


£ 

o 


♦ 


1-199 


1 Mb/s - 75 TAPES/DAY AT 6250 DPI or 27.575 TAPES/YEAR 


OBSERVING SYSTEMS OVERWHELMING INFORMATION PROCESSING SYSTEMS 


8 

LU 

O 

o 

S 00 
uu o 

CO UJ 


5 S 


05 ^ 

Z UJ 
CO o 

= LU 

*% o 
^ 00 
cc 

< * 

00 o 

HH 

CA Q. 

© f: 

1 

fA 
O 

w OQ 
43 - CM 

T 2 


0C 

> 


CO CD 

z o 


oe: 

h- 

oo 


o s 
os co oo 
co as lu 

00 2 < 
UJ O H- 


OS 


CO 

00 


< LU «-* 


OS O 


8 


00 


o 

LU o 


oo 

I CO 


1 1 

o 

ii 

II 

s I 

5 oS 

oo ° 

= Q 
O LU 


CO <— 

o o 

os PS 


* 

* 00 

oo 5 

LU < 
> LU 
OS 
Z H- 
O 00 
OS 

< <c 


> o 

00 _J 

00 < 

1 1 

uj oo 

§ i 

•— i as 
a: k— 

s a 

S 05 


O LU 

* I 


LU O 


s 

a 


00 


i £ 

Of UJ 

£ te 

X >- 
LU OS 

of £ 
S Uj 

C_> Q. 

LU O 
OS 00 


oo 


OS 

o 


CO 

OS 


> 

CO 


% 

00 

-J % 
LU 00 
0 2 C 
O LU 

= to 

<! ^5 

£ CO 
H- O 


| 


U-CO 


o 

M •• 

K- OO 

So 


1-200 


NASA ABILITY TO DEAL WITH THE DATA SITUATION RAISING NUMEROUS CONCERNS IN SCIENCE COMMUNITY 


WHAT IS NASA DOING ABOUT DATA PROBLEMS? 


O 





1-201 


DIFFICULTIES IN DEALING WITH SPACE SCIENCE DATA PROBLEMS STEM FROM: 


LkJ 

hsl 



o 


o 


o 


1-202 


EXTREMELY COMPLEX PROBLEM CUTTING ACROSS SCIENTIFIC BOUNDARIES WITH IMMATURE 
EMERGING TECHNOLOGIES 


i 


C>- 

OO 


CO 

o 

OO 

Q- 


C 

Q 


O 

CO 


o 

a 


00 

LU 

^5 


o 

i 


<c 

H- 

oo 

a 

< 

oo 

LU 

I— H 

CD 


a; z 
«£ H- 
LU ■ 
PQ 2 

O 0 

— LU 

oo a 

PQ 

o e 


a 


% 

oo 


oo 

& 

CD /-s 

S * 

OO LU 
LU 

O * 
O OO 
OP XI 
CL. LU 
H— 
LU OO 
CD >- 
C OO 
OO 

o oo 

oo oo 
>- 
OO -J 
oo <c 


o 

-J 


h— 

H- 

o 


QC 




< 

LU 

T 

LU 

1 

CD 

cd 

CD 

LU 


LU 

SB 

z 

— 1 

H- 

LU 

H- 

— 1 


_J 

l 

LU 

a 


LU 

f— 

LU 

O 

3 E 

CD 

Z 

1 



I— Q 
<C LU 
H— H- 

OO < 

CD O 

Z h- 

5 s? 

=D CD 
0 Z 

« s 

00 _l 



£= 

o 

o 




LL. 

O 


O 

o 

CL. 


00 

E ** 
Z LU 
LU O 

§ s 

1 3 

o 

LU i— i 

p i 

t_> ag 

LU O 


C /5 *— • 


</) 

£ 

<c 

a oo 

LU 

H— 

o a 

cl! oo 

LU CD 
i— — 

a 

cd a 

Z LU 
— PQ 
h— 

QC H- 

O oo 
a. lu 
Q- H- 

^ >- 
CD 

LU O 


z o 

O LU 
O H- 



o 


o 


o 


o 


o 


1-203 


BEGIN BY MAKING A LONG-TERM RESEARCH INVESTMENT IN THE INFORMATION 
SCIENCES TAILORED TO OSSA'S DATA PROBLEMS 



1-204 



00 


oo 

* >- 


00 ^ 
UJ X 

>< o 


>- WD 


2 8 
O £ 


OO V) w 

oc _ s: 

UJ O UJ 

^ 5 si 
z o 

3 UJ Q0 

to a. 


uj v? o 
1 UJ UJ 

a h U 

Z C/5 < 
UJ ^5 So 

to 

5 s* 

. s 

1 B P 




1-205 


SYSTEMS. ROBOTS. ETC. 


THE CENTER OF EXCELLENCE WILI 


Q CO 
LU CC 
^ LU 

co ►— 
P o 

LU 

z <c 

CO 

CO <c 

a : z 
uu 

CO LU 
Z H * 
LU <C 


3= a. 
o 

I CO 

3: a. 

CL. 

% c 

LU 

H- a 


CO LU 


f — >- 


H- O 

55 ° 


CO 

LU O 
OC O 0 
CO 


I o 


UJ O 
% LU 

< o 
u 

& £ 

CD O 


O I — 
<! ~ 


c oc: 


O Q 
<_> Z 




CD M-t 
<c ct : 


o = 
c -> a 


O Q- 

af a 


1-206 


CREATE A FOCUS OF RESEARCH EXCELLENCE IN INFORMATION SCIENCE AT GSFC 


IISRA/IINIVERS1TY OF MARYLAND PROPOSAL HIGHLIGHTS: 


* 

cc 

o 

h— 

O 

LU 

CC 


PO 


CD 


CO 

H- 

s 

I— 

O 

£Q 

CO 

o 

< 

CD 


CO 

a 


co 


OC M 

ZD CO 

z oc 

LU UJ 

*— n> 


^ <c 

§ z 

3 » u. 

< o 

CO LU 
LU O 

J LU > 

U Qg 

— » oc < 

* HD _J 
O <C 
O Z CO 

z o 

< U qg 

-J < 

>OLU 

oc h- >- 

^ H- O 

o — 


cq a 

tss 


CO 

OC 


c 

CO 


— H- O 

Z Z H— 

O LU 

co a. op 

^ Q_ 

oca 

LU ** LL 

— oc O 
o o 

CO h- H 

o o 

DC LJ LH 
LU CC 

i— — co 
a a lu 
o_ a 
z z — < 
o o > 

O UL O 
CC 

a. a. 


— O — i 

C K— CO 


gS 

CO >- 
CO Q£ 


>- 

1 

CO u> 
LU 

— a 
CO C 

CC DC 
LU CO 
> 

id ►—* 
CO 
- CC 
CO LU 
• > 
HD — 


CO CO 

I— c 


h— a 
z a: 
— c 
o a 
a. a 
a. o 
C CD 

CD ?— 


o H- 
C — 
LU CO 
h- I 


a C 
O LU 

c >- 


a. o 

LU 

a cl 




3 HU 


V 

S 

a. 

a. 

CO 

I 

<c 

CO 

<£ 


—CD 


% 

CO 


< 

o 


CO 


CO 

CC 

LU 

> 


CO 
CO H— 
— — J 
CO HD 
C CO 
CQ LU 
CC 
-J 

a cc 

LU C 
LU 
Z CO 
O LU 

oc 
o p 


LLCO — h- 


< CO 

CL h- 


0.0 

<coc 


O CD 

►— 4 

I— cc 

<C 
>• J— 
ac lu 
h— — 

co cc 
a cl 
a o 
z oc 
— a. 


CO 

CO 

LU 

C-> 

o 

CC 

CL 


^ - 


CO 

o 

CL 

o 

oc 

CL 


CC 

I 

CC 


CD 

O 


<C 

CL 


>• 

CC 

jo 

a 


mm a 


CO 

QC 


OC h- 

CO CD 
DD ^ 

a co 

oc 


> 

* o 

CO 

LU LU 

— o 


CO — 

cc o 

LU CO 

> 

— cc 
z o 


CD 


N"> 


<L ^ 
OC 

LU ^ 

a. co 


o nc 
h— 
— J O 

U. 

°3 

CD <C 


O — 


CO »— 
CO ^ 
o z 

O QC 
UJ 

a > 

QC O 
C CD 


>- 

cc 


CO 
CO QC 


a 

co 


co 

uu 

cu 

cc 


CD 


CO 

CO 

uu 

0 

1 « 


I 


1-207 


UNIVERSITY MEMBERSHIP SELECTION PROCESS 



! 


1-208 


MASSIVE DATA BASE SYSTEMS AND ARCHITECTURE STUDIES 



1-209 


ROBOTICS AND VISION 


sdiHSMooiviau onijlvumo 


K U 



-2 


INDUSTRY FACULTY STAFF 

RESEARCH RESEARCH SCIENTISTS 

ASSOCIATES ASSOCIATES AND VISITORS 











I 


Ol 

x 

o 

M 

►— 

o 

ae 

£ 


Cu 

X 

CJ 


o 

cj 


< 

X 

X 

a. 

O 


oO 

£ 


Ol 

X 

cj 

-J 

£ 


oi 

h“ 

UJ 

g 

§ 

t/» 


• 1/1 
00 00 

5 - 

£ * 


S 

00 


cd 

s 


o 

o 

U“> 


o 

o 


x • 
o 
• o 

UJ VO 

00 

to x x 

. OJU 

< oo x 

X UJ 

O0 o cj 
x h- 

LU U< 
h- UJ 00 

ae x < 

is* 

Suw 


uj oo ►- oo x 
x cd o x cj 


o 

H- 

CJ 

UJ 

X 

2 

h- 

2 

UJ 

o 


oo 

CD 


00 

UJ 

cj 

-J 

2 


\A 


a 


o 

H- 

00 


00 

00 


3 

Ol 

X 

o 


< 

X 

UJ 

Q. 

o 


oi 

00 

>- 

X 

x 

u. 

00 

UJ 

X 

UJ 

(■ft 

X 

E 

X 

CJ 

CJ 

■"« 

00 

X X 

X ftfl 

a 


O UJ o 

*=- CD ~ < CJ 
00 < 00 H- X 
X «-• < 00 

><>ai 0 


o 

o 5 

53 f* 

»£! 


O UJ 
H- 00 O 

<«^ 
X UJ < 


I UJ • 

■Si 

CO 01 

• >» 
x ~ 
Ul o 

*"* a 


is .P 


g« 

oOUJ H 

oxo 


cj ; 

i 

• H- 

£ 

X X 

<8 


u 

i t 


00 

< UJ _ 

> x 

>- ^ 00 UJ 

H* H- UJ DO 

00 hu5 

X XXX 

UJ UJ UJ 
> 01 Ol CD O 
H p UJ C UJ 
Z < X h- 
oya ju 
x uj x UJ 
CD X X _J 
X H- UJ UJ 
— X < CD 
h- UJ 00 UJ >- 

S 52 1 *-® 

M X X Q 
a<UUJUJ 
M X Q x X 
h uj as ^ 2 

3° 9 °2 

a- < cj 

t i i 


x 

o 


3 ! 


> O 
H* 
CJ 
• UJ 
>• X 


00 

22 
X o 

I— i 00 

UJ 
« o 
Ol 

UJ >- 
~ CO 
I— 

— • O 
Ol UJ 
X H* 
UJ CJ 


3 Ol 
I I 


< 

-J 

UJ 

X 


00 


00 


* 

V 

UJ 

Uft 

X 

ft 

5 

X 

a 

O 

3 

UJ 

ee 

© 

CJ 

3 

X 

< 

X 

CD 

^ 00 

£ 00 
UJ X 
*1 £ 

oo 

£ 

o 

o 

00 

> 

Ul 

X 

O 

3 

< 

u. 

CJ 

3 

UJ 

UJ 
• CL 

UJ CO 

p X 

X 

X 

2 

CJ 

§ 

X 

u 

o 

a? 

< Ul 

z x 


00 

UJ 

Q 

< 

X 

a 

UJ 

00 

UJ 

< CJ 
X UJ 

$ CD 

5 

CJ 

2 oo 

X 

oo 

UJ 

N-* 

X 

CD -J 

X 

X 

© 

X X 

X 

Ol 

UJ 

> 

UJ 

ol 

£ . 

X ~ 

o ►— 

o 

>— 

UJ o 

X 

o 

X 

X 

Q 

X 

X 00 

X 

< 

UJ X 

5 

o 

H* 
00 X 

H- 

UJ 

> 

s 

X 

X 

< 

3 

a* 

UJ 

i 

as 

UJ O0 

u « 

32 

2 

UJ 

i 

H> X 

gs 

oo 

5 

UJ 

X 

Ul 

CD 

o 

CJ 

UJ 

X 

> X 

SS 

Q h- 

3 3 

p X 

» 

UJ 

X 

o 

CJ 

UJ 

X 

35 

88 

£ 

UJ 

X 


t X 
mm 00 

iS 

S S 


CD 

M O 

5 s 

53 

l I 



00 

x x oi 

3 

00 

3 ® a 

— 1 X 
00 X 

H* 

Q CJ 00 
O UJ UJ 

X ►- 
X t— 

X 

_ X u 

> — 

X 

< ** 

CO O X 

O 5 


2 O 

< 5 


xxx 

o 

3 s 

X 


X 

g 

o o 

<5 

28 

0 

01 
UJ 
CJ 


3 

00 a 

© UJ UJ 
X mm UJ 

SfiP 

*** 

01 x Z 

mm UJ O 
O UJ u 

00 X 


<8 


00 UJ 
X CJ 


CJ 

00 


1-211 


PROVIDE NASA SPECIFIC WRITTEN APPRAISALS 
CONDUCT TRIENNIAL PEER REVIEW. AS REQUESTED 


EXAMPLES OF POLICY/BUDGET ISSUES 



1-212 


USRA AND GSFC ESTABLISHED A PLANNING COMMITTEE 


W Q d 

> fa 
M > 
Z M 
fa Z 
§ 
z 

8 § 
fa O 
CJ fa 
SB 5 
M <d 
pd H 

04 CO 


CJ M 
<3 co 

PL. fa 
CO fa 


a 

S fa H 

PQ O W 

M CJ fa 





z 





o 

z 

55 



w 

M 

<3 



H 

CO 

CJ 



< 

z 

M 


5 H 

fa 

o 

DC 


H 

o 

CJ 

CJ 


M 

fa 

CO 

M 

Z 

CO 

Pd 

M 

S 3 

o 

fa 

o 

z 


M 

w 

cj 


fa 

H 

> 


fa 

O 


M 

c 

o 


c 2 

z 

H 


5 h 

o 

DP 

<3 

>< 

H 

fa 


Q 

H 

M 

od 

id 


M 

CO 

o 

2 

fa 

CO 

Pd 

o 

o 

o 

fa 

w 


>» 

fa 

fa 

> 

Q 


H 

> 

M 

s 


Z 

M 

Z 



o 

Z 

fa 

• 

• 

• 

cj 

• 

DP 

• 


Z CO 

3 s 

04 

Z H 
CO 

fa <3 


M 55 
CO O 
Pd CO 
fa PS 
> H 
M M 

55 Z 
fa CO 


fa 

< 

CO CJ 


fa 5* 
fa h 

fa M 
PQ CO 
cd 
w 

H > 
M 

H 55 
< fa 


fa 

CO 

Pd 

Pd 

fa 

z 

fa 

fa 

H 

M 

H 

H 

Z 


Z 

Z 

fa 

fa 

fa 

fa 

CJ 

CJ 

CJ 

CJ 


z 



H 

fa 

H 

H 

fa 

M 

PC 

DC 

O 

CJ 

O 

O 

M 

CO 

M 

M 

fa 


fa 

fa 

fa 

fa 

fa 

fa 


fa 



fa 

o 

fa 

W 

CJ 

CJ 

CJ 

CJ 

<3 

CO 

<3 

< 

fa 

fa 

fa 

fa 

CO 

fa 

co 

CO 


fa 



§ 

H 

9 

9 

< 

fa 

Pm 

<3 

< 

a 

CJ 

Q 

Q 

o 

C 

O 

Q 

o 

fa 

O 

O 

o 

CO 

cj 

CJ 


ft 

Pd 

• 

• 

• 

• 

ft 

• 

CJ 

• 

• 

ft 

ft 

ft 

ft 

• 

• 

• 

fa 

• 

• 

• 

• 

fa 

ft 

'w' 

• 

• 

« 

ft 

• 

ft 

M 

z 

• 

Q 

• 

• 

Z 

a 

Z 

• 


• 

z 

• 

• 

• 

ft 

H 

o 

• 

z 

• 

• 

M 

z 

M 

• 

Pd 

• 

o 

• 

Z 

z 

• 

H 


M 

-< 

• 

ft 

fa 

W 

DC 

CJ 

fa 

55 

CO 

CO 


<3 

VN 

O 

pd 

hJ 

X 

• 

• 

H 

Pd 

<q 

z 

fa 

2 

o 

< 

CO 

X* 

CJ 

Pd 

fa 

M 

fa 

z 

CO 

CO 

< 

fTj 

M 

fa 

<3 


< 

Z 

& 

fa 

W 

PS 

CO 

fa 

fa 



fa 

CJ 

z 

<3 

fa 

< 

CO 

PS 

pd 

Pd 

fa 

Pm 

<3 

<3 

o 

55 

fa 

fa 


z 

o 

PS 

CO 

fa 

o 

o 

9 

z 

O 

PQ 


Pd 

<3 

fa 

CO 

<3 

fa 



M 

o 

fa 

fa 

id 


Z 


Z 


PQ 

PQ 


fa 

Q 

Q 

JH 


fa 




fa 


Pd 

o 




H 

< 


2 

z 

pi] 


Q 

H 

H 


H 

o 

H 

fa 

Pd 

fa 

Pd 

H 

Pd 

<3 

o 

§ 

>3 

fa 

Pd 

od 

CO 

Pd 

H 

fa 

CJ 

fa 

fa 

fa 

co 

fa 


pd 

fa 

pd 

<! 

fa 

fa 

M 

fa 

CJ 

fa 

fa 

H 

fa 

PQ 

fa 

H 

§ 

H 

CJ 

Pd 

z 

PQ 

PQ 

fa 

PQ 

M 

PS 

Pd 

fa 

<3 

O 

o 

fa 

fa 

5 

fa 

3 

o 

Q 

9 

o 

9 

> 

co 

PQ 

fa 

fa 

pd 

SB 

fa 

PQ 

■< 

rfaj 

fa 

fa 

Pd 

pd 

fa 

Pd 


o co 
CO 


Pd >* 

o > 

55 fa 
M fa 
<ti Pd 
Pd o 

H z 
co 


1-213 


CALDWELL McCOY 


6SFC DISCUSSIONS WITH ACADEMIC AND INDUSTRY LEADERS AND THE CONCLUSIONS OF THE PLANNING 
COMMITTEE INDICATE: 


ea >- 
as uj at 
<c o 

>- LU =? 




o 

.. £ 
CO 3 


u- or cd 

O UJ 2S 


13 O H* 

U_ O CO 
O 2C OC 
<UJ 

CJ — 

£ fes 


<c 

c 

o 

o 

LU 

OC 

H 


oc 

LU 

Of 

CO 

LL. 

O 

H- 

CD 

CO 

LU 

n 

H— 

O 

LU 

> 

2- 

3 

o 

o 

LU 

CO 

1— 

c 

LU 

CO 

LU 

cd 

o 

os: 

LU 

LU 

_J 

LL. 

O 

o 

CO 

LU 

NN 


ZD O 


>- * 
* 

H- O 


O 
* oc 
o h- 
os: ac 
<C o 
> o 

OC 

< * 
3= CO 


< ^ 
• Q. 
CQ O 


< 

1— H 

ac 



I— 

1— 

o 




GL 


LU 

CJ 



o 

<c 

LU 


1— 

CD 

< 

> 

>- 


H- 

CO 

LU 


< 

OC 


OQ 


«£ 


T 


H- 

LU 

H— 


% 

Q 

UJ 

h— 


3S 

►— 

O 

CD 

CD 


CO 


f— 

C 


< 

LU 


C-> 


CO 


> 

hh 


CO 



CO 

LU 

LU 



DC 

CO 


LL. 

LU 

CO 

H* 


CO 

O 

LU 


NW 


CO 

CO 



DC 

QC 

% 

H- 


LU 


CO 

LU 


Q. 


sc 


QC 

CO 

LU 

GL 

LU 

X 

o 

LU 


CD 

ac 


LU 

CO 

LU 

CO 


■ J 

Q 

o 

< 

LU 

LU 


c 

o 


<c 

o 


O 

oc 

H— 

£ 

CO 

CO 






CO 



o 






LU 

LU 


CL 

o 

o 

o 

o 


DC 

CD 

CO 

o 






LU 

QC 

<c 

OC 






H— 

o 

sc 

CL. 







LU 


% 






►— i 

CD 


1-214 


DIGITAL EQUIPMENT CORPORATION (DEC) 


CODE 600: DIRECT SUPPORT TO ALL THE LABORATORIES THROUGH ADVANCED ANALYSIS 

TECHNIQUES AND SYSTEMS. DATA BASE SYSTEMS. DATA MANIPULATION. ADVANCED 


% 

00 


Z 00 

— >- 


<7> 


CD 


— O 


»— C 
oc > 
o o 

CL <C 


00 • 

00 
OO UJ 

oo a 

>- i—i 

< lu a: 


O CD O 

OO •—» LU 
00 J o 
•— UJ z 
Z O UJ 

0 z o 
z oo 
<C oo 

0 QC 
OO Z UJ 
Z LU L— 
LU H— r— 

OO LU m 

GO 

• m 

uj a to 

gay 

t xE <£ 


§ 

oc 

o 


00 

LU CD 

|| 

5 ae 

LU LU 
H- 00 


OO z 

OO 3 
LU OC 
OC h- 

^ z 
o « 
o 

o 

gp 

0 § 

Q§ 
< 0 
CD < 

32 

LU OO 
O LU 
O 0 
a: 

cl ►— 

o lu 

oc z 

il 

I oo 
o — 


oc ^ 

LU O 
CL 0 
X pc 
LU h- 
00 00 

LJ 

*-i ►— LU 
O! 

UJ Z O 

— ■ — o 

X Z Q£ 
OC CL 

M UJ O 
-J I— 

OUJH 
X Z X 

< ~ p 

UJ X Ql 

00 O CL 
LkJ < 3 
X E W 

S |J ^ 

UJ Z ' 
h- LU 00 
Z QC 
oc a. lu 

UJO> 
H- U 
OC LU Z 
O > 0 
Z LU 

00 o o 


C ^ z 

8 1 LU 

LU O 
LJL CD <— 
0 > 
>- lu o 

J J QC 
X ^ CL 
CD O 

5 x 3 


oo 


a 


3 

Q- 


CD 

<C 


OO 

<c 

§ 

% 

00 ■ 
LU CD 

Is 

OC 

c o 

5 p 

CO LU 
OO 

z 0 

O LU 
LU O 


£ £ 
o 0 

OC <C 


GO 


a oo o 
lu >- fr- 
ee oo lu 


^2 
CO Sc 

CO o 
O UJ 


CO 


8 


CD 

Uj 

LL 

LU 

o 

a 


o 

C-) 


CD 

OO 


OO 


0 

o 

o 


£ 

o 

CD 


CM 

£ 

s 


o 

o 


IX 


«J» 


1-215 




cd 


8 
L U 

a 


g 

>- 


o 

LU 

t— H 

o 

sc 


CO 


o ^ 

fe g 

CD Q. 

^ <c 

CO h- 

g g 

CO < 

a 8 

M o 

O LU 


8 


a 5 


& g 

h- 

| £ 
uj as 
o => 

uj S 

S S 

o 


CO 

LU 

o 

cs 

0 

CO 

LU 

o£ 

LU 

CO 

1 

I 


o u 

> UJ 
LU O 
Q X 


§ *5 

LU LU 

§f ° 

00 ar 

— • t— 
Q I— 

<c © 

§ i 

CD CO 





i 

£ 

CO 

oc: 

S 6 S 


o 

c 

o 

Q. 

a. 

<c 






CO 

5 



3 




o o 


1-216 


APPENDIX A 


MEMORANDUM OF UNDERSTANDING 
between 

The University of Maryland 
and 

The Universities Space Research Association 

Purpose: This Memorandum of Understanding summarizes the 

points of agreement between the University of 
Maryland and the Universities Space Research 

• Association (USRA) regarding the proposed Center 

of Excellence in Space Data and Information 
Sciences at NASA's Goddard Space Flight Center 
(GSFC) . 

Points of Agreement: 

1. The search committee for the Director shall be 
a subcommittee of the planning committee for 
the Center of Excellence, and one of the 
representatives of the University of Maryland 

i on the planning committee shall chair the 

search committee. In addition, a member of 
the Department of Computer Science will serve 
on the search committee and coordinate the 
search and selection activity with 
departmental review, including all normal 
university procedures. 

2. The selection of the Director of the Center of 
Excellence must be approved by the University 
of Maryland, USRA, and NASA. It is expected 
that the selected individual will serve as 
Director for at least five years. The 
University of Maryland will provide a line in 
its budget for the Director, with academic 
year salary for the line. 

3. The Director will be a tenured faculty member 
in the Computer Science Department at the 
University of Maryland. To serve as Director 
of the Center of Excellence, the selected 
individual will be given 50% release from the 
normal teaching load. 


1-217 


APPENDIX A - Page 2 


4. Fifty percent of the Director's academic year 
salary, all of the summer salary, and the pro- 
rata associated fringe benefits that are 
normally available to faculty members at the 
University of Maryland shall be reimbursed by 
USRA to the University of Maryland as 
compensation for the Director's 
responsibilities to the Center of Excellence. 

5. If the selected Director requires 
reimbursement for the expense of relocating to 
the Washington area, USRA will bear the cost 
of the Director's moving expenses. 

6. Annual salary adjustments will be negotiable 
between the Director and the University of 
Maryland. USRA will honor reasonable 
adjustments established by these negotiations. 

7. The Department of Computer Science will 
further participate and support the research 
goals of the Center of Excellence through a 
contract between USRA and the University, with 
the Chairman of the Department of Computer 
Science serving as the manager of the 
contract. In addition to USRA's share of the 
salaries of the Director, half-time academic 
year support and full-time summer support will 
be provided for three University of Maryland, 
College Park, faculty members and three 
graduate students. These faculty members 
shall be designated as Staff Scientists in the 
Center of Excellence and shall hold joint 
appointments with the Center of Excellence and 
the appropriate academic department at the 
university. All joint appointments shall be 
made with the concurrence of the Director, the 
Department Chairman, and the Provost of the 
Division of Mathematics, Physical Sciences, 
and Engineering. 


2-218 


APPENDIX A - Page 3 


8. USRA's ability to reimburse the University of 
Maryland for a portion of the salary and 
fringe benefits of the Director is contingent 
upon continued funding for the Center of 
Excellence by NASA. USRA will exert best 
efforts to negotiate a contract with NASA that 
provides at least four and one half months 
(one academic year at half-time) of salary and 
fringe benefits for the Director in the event 
that NASA prematurely terminates the contract. 

9. The specific terms of this agreement will be 
reviewed annually and may be modified by 
mutual written consent of the signing parties. 



1-219 



o 

5 o 


z co 

< CO 

< o 
“ O 

q £ 


co 2 

LU UJ 

z § 

UJ z 


1-220 


WILLIAMSBURG, VIRGINA 



LOAD BALANCING 

PARALLEL PROCESSING ENVIRONMENT 


0 

£ 

4 -* 

0 

O ) 

O 


O ) 

3 

O 

k- 

JQ 

0 

i_ 

(0 

0 ) 

o 

(0 

cn 

0 ) 

o 

o 


3 

C 

(0 


c 

0 


o 

o 

2 

3 

0 

01 
X 
0) 


0 


(ft 

0 ) 

(ft 

(ft 


c 

o 

0) 

£ 

E 

0) 

(ft 

c 

Q) 

c 

0 

c 

o 

c 

3 


c 

0) 

£ 

5 


(ft 

§ 

o 

(ft 

0 


£ i 


(ft 


(ft 

o 

(ft 

(ft 

0) 

o 

o 


0» 

O) 


0 

(0 

CD 

3 

0 


(ft 


0 

£ 

£ 


0 


0 ) 

a 


(ft 

0 ) 

u 

0 ) 

E 

o 

l. 


o 

k_ 

> 

a> 

Q. 


3 

0 

(ft 

.Q 



O 

(ft 

o 

o 

k. 

Q. 

O 

4-* 

c 


<D 

u 

(ft 

a> 

3 


75 

3 

0 

O) 

0 


O' 

a 

k_ 

3 

O 

c 

7ft 

(ft 

O 

Q. 


§1 

0 ) 

(ft 

(0 

E 

• 

k. 

a> 


o 

o 

O) 

3 

cr 

■ • 
O) 

o 

0 

3 

t C 

3 

0 ) 

V. 

c 

c 


0 

(ft 

a> 

(ft 

(ft 

(ft 

o 

£ 

(ft 

a. 

(ft 

0 

3 

c 

0 

(ft 

o 

o 

o 

o 

o 

(ft 

*£ 

0 

o 

Q_ 


3 

o 

O 

k. 


c 

O 

c 

Q. 

MM 


(ft 

3 


2 

75 

w 

a> 

k. 

(0 

2 

E 

E 

the 

(0 

£ 

o 

o 


0 . 

(ft 

H 

a 



CL 

E 

o 

o 

3 

0) 

o 

c 

0 

(0 

£ 

E 


0) 

o 

c 

0) 

3 

0 

o 

0) 


s 

3 

o 

0) 

X 

0) 


0) 

E 


E 


.2 0 ) 
4-^ 

3 

£ 


0) 

4-^ 

3 

Q. 

E 

o 

o 

*3 

0) 

o 

c 

0 

(0 

£ 

1 

3 

(0 

o 


o 

(ft 

(ft 

0) 

o 

0 

u 

a 

1 

c 


aj 

£ 

E 

0 

(ft 

c 

0) 

a) 

£ 


3 

a) 

0 ) 

a 

(ft 


c 

a> 

£ 


3 

ca 

"5 


V# 

3 

(ft 

o 

0 



c 

0 


1m 


E 

c 

1r 

a 


k_ 

O 

c 

0 





k. 

3 " 



c 

‘3 

0 

e 


3 

cr 

3 

0 

a> 

o> 

O 

0 

k. 

0 

E 

c 

4 — » 

r- 

>* 

> 

e 
b 0 

0 

c 

0 

(ft 

0 

(ft 

w 

0 

75 

• M 

0 

(ft 

0 

0 

0 

£ 

(/) 

(/) 

CD 

3 

0 

O 

O 

k. 

c 

3 

E 

4-» 

(ft 

■■ 

0 

O 

a 

E 

O 



H— 

0 

E 

£ 


O 

u 


o 

(ft 

(ft 

0) 

a 

o 


£ a. ^ 


o> 

.E £ 

o = 
a> £ 
5 = <0 
< c 

(ft E 

2 * 

8 - 

LL 


jft 

C 

75 

u 

4—1 

(ft 

c 

o 

o 


1-221 


Topology of the ensemble (how many processors, communication topology, 
communication mechanism, . . . etc). 


AN EXAMPLE OF LOAD BALANCING 



o o 


1-222 


Process = subdomain = task 

Equal task distribution and communication; work load is blananced. 



IMBALANCED PROBLEM 



1-223 



THE SIMULATED ANNEALING ANALOGY 


8 J 

O V 

§ e£(aJ^ 

0 O g eL 

d U I I 

E . S u 

o + -P 

O 

to + 

O u -k 

“3 • •• 

Q. £ 2 

E E - 

8 o 2 ^"- 

j$ n ii 
75 lu 


o c 
w 0) 
tn o 
a> 5 

0 » 

1 * 
*-» 

*- (0 

0 o 
o 

? d 

° i 

1 ° 
I ° 

■ cr 

iT tt 
£ O 


1-224 


Positions assumed by atoms in a body determine the body’s energy state. 
Allocating elements to processors determine total processing cost. 



SIMULATED ANNEALING ANALOGY (CONT.) 


o> 


It 

S' ft 

B 
(/> 


0) 

o 

c 

IS 

(0 

a 

E 


■o 

CO 

o 


CO 

1— 

o 

CO 

CO 

0) 

o 

o 


CO 

0) 

E 

0 ) 

0) 


TJ 

2 

0) 

“2 

o 

CO 


CO 

c 

o 

mmm 

« 

o 

Q. 

E 

o 

T3 

C 

(0 


(0 

2 

<o 

(0 

E 

o 

CO 


(0 

I • ° 

a I " $ 

s S t 3 

O) UJ « 

IM ■■ 

o> 5 o) 

5 X < X 


2 

2 

CO 


3 

O’ 


O) 

c 


o 
o 
o 
XJ 

a> -a 

Qj aJ o. 

^ « 2 

O - 

c g» | 

*° = £ 

_ o 

O O o) 

** O JS 

CO 

2cm 
CO o 

•2* co c 

£■0 3 

CO 
^ m 

O Q. O) 

0) 

co * 5 

E »_ 5 

oa>o 

« 2 “ 

o 

CO ^ 

5 tr O) 

O O c 



CO 


Q) CO 

a> a> 


c o) c 

♦ s e 

E >; c 

a Ol !S 

-go 
O) w ° 

ill 

3 J w 


(jJPJ $tf/SS3?0*d) 


2 co 
w o 

w CO 

c ® 

1 1 
0 ) Cl 

* s 

■o 

a> a) 
c -S 

o> 2 
co o> 

co 1 

* B 

CO 

S ‘O 

= I 

« § 

< CO 


CO 

0) 

> 

o 

E T3 

0) 

■O o 
0) J= 
co JS 

<0 CO 
•O JO 

• *» 
0) 

O E 

CO o 

o 5 
13 

g E 
E S 

O) ^ 

c 

w ® 

3 e 


1-225 


HUtil'j PisotDOOP MKiffLI OftPCRtP 

(>l*BAlAMtep) (BALM/Cep) 


algorithm 



1-226 


REPEAT *T LOWER TEMPERATURE 


original page is 
** POOR QUALITY 



1-227 


INITIAL ASSIGNMENT: WORKLOAD VARIATION 6 TO 331 





1-228 


ASSIGNMENT AFTER 20 CYCLES: WORKLOAD VARIATION 33 TO 35 


ORIGINAL RAGE IS 
OF POOR QUALITY 



1-229 


DETAILS OF THE INTENSELY PACKED REGION 


FUTURE PLAN 


o 

•mm 

k- 

q. 

o 

c 

o 

■a 

CO 


2 

o 

CO 

CO 

0) 

a 

o 


o 

■O 

CO 


2 

o 

CO 

CO 

0) 

o 

o 


a 


CO 

a> 

<0 

C W 

g 8 

c 2 

O CL 

> fr 
C O 
LU 


I 2 TJ 

o E Q> 

“-si 

£ 3 w 

3 CO ^ 
(0 


<0 

cd 

(0 

(0 

0) 

a 

o 


(0 

c a> 
a> co 
c co 

i 2 

a) O) 

co 2 

8 


5 


O) 

c 

o 

c 

jo 

co 

CD 

-a 

co 

O 


b) 

CD 

> 

CD 

WJ 

C 

o 

W 

4-* 

3 

ii 

c 

c 

c 

CD 

X 

a 


JO 

c 

T3 

CO 

0) 

JO 

C 

jQ 


CO 

CO 


CO 

■O 


"O 

CO 


c 

CO 


“O 

o 

•mm 

o 

>* 

CO 

o 

3 

a 

a 

"co 

o 

II 

CD 

X 

E 

E 


CD 

(0 

CO 

a 

2 

c 

> 

c 

>* 

</i 

a 

“O 

o 


o 



CO 

o 

s 

CO 

I— 

3 

CD 

z 

I- 

CD 


a 

o 

8 

a> 

Q 


1-230 


Performance Critical Decisions 
in Parallel Scientific Computations 


David M. Nicol 

Institute for Computer Applications 
in Science and Engineering 


1-231 


Mapping of parallel scientific computation to message 
passing architectures is usually domain oriented 



■ 

■1 

1 

■ 

= 

1 

H 

■! 

Ml 

III! 

■ m a ■ 

■ ■ ■■ 

!« 



■ 

1 

■ 

1 

■ 

■ 

1 

■ 

■! 

Ml 

iiii 

• a »• 
mmmu 

"■ 

ta ^B 

- 

■ - 

r 

■ 

■ 

■ 

■ 

■ 

■ 

1 

■1 

iiii 

in 

~ 

— 

tz 

■ 

■ 

■ 

■1 

■ 

■1 

■■ 

.n 

■ 

l 

1 

1 

1 

i 


ii 

■■ 







— i 














• Workload can change dynamically 

— When should we 
remap? 

• Convergence testing performed 
every iteration 

— How can we avoid 
excessive overhead? 


1-232 



Optimal Remapping Decision Policy 


• Calculation of MDP possible with 
small model 

• Optimal policy knows "too much" 
about system 

Decision Heuristic 


• Attempt to minimize average cost 
per step 

£(/*zr(0 - avg(O) + C 

woo = — 

n 

• As function of n E\W(n)] has at 
most one local minimum 

• How to tell when WXn) minimized? 

— Approximate with SAR 


1-234 




HUH Models Performance of SAX Compered with Performance of Periodic temapping. 

Eight chain*, 400 steps, each eha*« *>«« 1» states, p - 0.5,. eoch data point 
calculated from 200 sample paths. 


1-235 




Workload dynamics: abrupt change 


• e.g. Multi-phase computations 



1-236 




Remapping Decision Heuristic 

• Many decision model parameters 
difficult to estimate 

• Examined fixed p-threshold policy 

• p € [.7,.8] nearly optimal within 
envelope of admissible costs and 
gains 

— Difference from NR 
policy depends on gain 

— Keep p high to avoid 
unneeded overhead, low 
to avoid inaccurate test 
statistics 

— Policy tolerates mis- 
estimation of statistical 
parameters 

• Conclusion: Remapping decision is 
manageable, focus on determining 
when gain 

• 


is possible ^ 

in eninUpe: . 

J*#n po timiSAl. 


1-237 


Convergence Checking 


• Goal is to reduce overhead by 
reducing number of checks 

• Need to balance cost of check with 
threat of overshoot 

• Choose iteration (offset) n to max- 
imize average number of "useful" 
iterations 

n 

X Prob { Iteration i is needed ) 

i=l 

nD + / 

— D iteration cost 

— / cost of convergence 
check 

• Probability terms computed using 
Bayesian techniques 


1-238 


Effect of Convergence Checking Schemes on Algorithm Performance. 
(Grid si zb 128 x 128. Subdomain Shape: Strips) 


3 

S 

* 



QN003S 83d G33NVAGV Sd31S3WU 


1-239 





Conclusions 


• High performance in parallel 
scientific computations requires 
treatment of decision problems 

— Remapping decisions 

— Convergence checking 
decisions 


• Simple "greedy" heuristics work 
nearly optimally 


• Need to ensure that decision poli- 
cies can be implemented at system 
level 


1-240 



Sparse Distributed Memory 


M. Raugh/RIACS 


1-241 


This work entails: 


t Programming a simulator of the proposed architecture on the 
Intel iPSC parallel computer or the Symbolics Lisp machine or 
both. 

2. Developing simple models of an environment and of sensory 

input to and effector output from memory and use the 
simulator to study learning by trial and error in this simple 
environment. 

3. Comparing the models developed in (b) to human and animal 

sensory and effector systems operating in the real world and 
prepare recommendations about further research. 

4. Preparing recommendations about the building of special- 

purpose hardware for sparse, distributed memories and about 
the uses of such memories. 

5. Relating findings of this research to facts about human memory 

and perception and prepare recommendations for the design 
of artificial environments for humans, with emphasis on 
environments where the cost of human error is very high. 


1-242 



Scope of Task 

• Feasibility study 


• Assess merits of SDM 

• Decide whether and how to build 

• SDMs for real tasks 

• Full-scale VLSI implementation 
• A fundamental question 

• How to code the sensory inputs? 

• For research applications in 

• Robotics 

• Pattern recoanition 

• Cognitive science 

• Interpretation of continuous speech 


1-243 


Theory Yields New 
Computer Architecture 

• Distinction between memory and processing 

disappears 

• Processing 

• Massively parallel 

• Distributed throughout memory 

• 10—100 memory locations on a chip 

• A computer based on the SDM 


1-244 



1010101010 


















































Data in 


Input Address 



1-246 














Main Properties of Model 
Memory 

• Addresses can be chained (linked list) 

• Stream of recall 

• Causal relations 

• SDM is sensitive to similarity 

• If you "know" 600 bits 

• And correctly "guess" 200 more 

• You will probably converge to 
correct memory 

• SDM is capable of forgetting! 

• But can be reinforced by rehearsal 


1-248 




1-249 


Reading is columnar addition: 

Add corresponding counters from all selected locations 

1J □ □ □ □□□ 

ij □ □ □ □□□ 


9 □ □ □ □□□ 

□ □□□ □□□ 

1001 00 1 

Each 0-bit results from a negative column-sum 
Each 1 -bit results from a positive column-sum 


1-250 


Writinq: 

Each physical memory location contains 1 ,000 counters 

□ □□□ □□□ 

Each address contains 1 ,000 bits 
1001 001 

Each 1-bit adds 1 to the corresponding counter 
Each 0-bit subtracts 1 from the corresponding counter 


1-251 





Gist of Theory (II) 

• Sparse, distributed memory 

• Reading and writing at specified address 

• (Hamming distance between binary memory 

addresses) 

• Write to locations within radius of 451 

• Yields on average 1,000 physical 
locations 

• Read from locations within radios of 451 


1-253 




Gist of Theory (I) 

• sparse, distributed memory 

• Huge (virtual) address space: 2^^ 

• Few (actual) physical memory 

locations: 2^® 

• Sprinkled randomly throughout 
the address space 


1-255 



Preliminary Assumption 

• 1,000 bits code one moment of experience 

• Each coded moment serves as an 

address 

• Kanerva postulates the existence of a 

focus 

• Clearing point for data going into or out 

of memory 

• The coding problem is not addressed by 

Kanerva's existing theory 

• but will be addressed by this task 


1-256 




1-257 















Sparse, Distributed 
Memory 

• Massively parallel architecture 

• Information stored in large number of 

neighboring addresses determined by 
"content" 

• Memory is dynamic: 

• changes with experience 

• learns 

• causal relationships 

• time— varying phenomena 

• Memory is sensitive to similarity 

• and it is 

• forgetful !!! 

• (but can be reinforced) 


1-258 


Kanerva's Theory of 
Sparse, Distributed 
Memory (SDM) 

• A model of human memory 

• Explicit 

• Simple 

• Engineerable 

• Dissertation being published by Bradford 

Books of MIT Press 


1-259 


PROJECT: SPARSE DISTRIBUTED MEMORY 

CHARACTERISTICS: 

• Highly— parallel pattern computer 

• Based on Kanerva's mathematical theory of human memory 

PARTICIPANTS: 

• Pentti Kanerva (RIACS), Project Manager 

• Harrison Leong (RIACS) 

• David Nagel (Ames) 

• Michael Flynn (Stanford) 

STATUS: 

• Completed simulators 

• Building digital prototype 


1-260 







u 

< 

-J 


<z 

V* 

<t 

*2 



1-261 



Sref> s •• : 


ORIGINAL PAGE IS 
(Of POOR QUALITY 



1-263 


/ H9€< - /GM9C<. 




ORIGINAL PAGE IS 
OF POOR QUALITY 





1-265 


*/«« Ps*fo*h»»** &***•> » 69 ** A *»”-***■ 

U>Hgt» fa/k Pt>*.MAUC£ Coi»4fT9 ft**V Ss^s Mb9**+G*, 


j $h AA t6 t rthi 


ii 



1-266 


Sf 4/*?T*4 !K> /4/o^ 4 TJoa*s (JuDeuBL 



/5/9 3/C. fierfoAr OP£*AT/oUS 



1-267 


fiJoTC .* /Z/44. Dufies* VtAr>JA.t- CfAcv,r S+r/ t/ r,* s SeqtSAJCfm 

Avfi /Ca/LvMc #£<nstA€*suTZ . OfsrA,Avrfo//)#*u*<. 

Pit* Letts A/a** A/t+j* CotftftJALtT’y 



1-268 




1-269 


DHOOtti a a 





1-270 







1-271 





1-272 


DftOOSHAJ 






1-273 





! 



1-274 


MOMMA! 






1-275 






1-276 






1-277 


tVHMOWl 



















lag 

frw.< 

<uh 

— a 

V5 1 " - 


hWH 

|23 

jsa 

aSo 

Z<9« 

“H 

Q 



1-278 






1-279 





NASA BASIS FOR THE HYPOTHESIS 


z-z 

las 

igs 


Z 

o 

H fa 

O < *5 

WU O 

H 39 

sgo 

3 <z 

«s 5 

u s M 

53 * 

«*o 
a 5 m 

Z 2 H 
-< X ^ 

£^fa 

5 SPS 

§ £ 9 

c/3 ^ m 

•^3 fa S 

X ^ fa 
^ fa H 

2 Q ^ 


n«s 

<%%% 

“IS 2 


H 

fa 

fa 

fa 

X 

fa a* 

So 

gp 

sas 

fa fa 

05 

fa fa 

g® 

Cu Z 

w° 

faQ 
< fa a 

Jcflrh 

Sag 

£w“ 

%%% 

©S2z 

NN 

H W* 
<< c /3 fa 

fa fa fa 
fa CQ 2 
o < Q 
^ fa fa 

5^0 

l^s 


CflS 

wifi 

>CQ 5 

Xfa * j 
>203 

<^< 

u<S-S 

c« £ S M 

W F3 3 ES 

c/3 fa fa « 

< < fa z 

fa fa w 3 
•<axS 
HhhS 

< ,5 o 

QgfaQ 

3 u><z 

^ fa fa o 

Ofa<H 

«h 3 J 

fa«J 3 £fa 

2 o w cu 

S 7* C/3 < 

H O U X 

gfafafa 

§“25 

z Sob 


X Z , fa 

gg =2 

oh w 3 

fa < fa O 
.<! fa O fa 


1-280 


EXPERT SYSTEMS WILL ALLOW THE IMPLEMENTATION OF 
MULTIPLE DATABASE VIEWS AND SUPPORTING SEARCH 
STRATEGIES FOR A BROAD RANGE OF DOMAIN SPECIFIC 
APPLICATIONS 










OVERVIEW OF INTELLIGENT 
USER INTERFACE DESIGN 



HIERARCHICAL ABSTRACTION OF 
TEXTUAL INFORMATION 







w 

H 

3 

NU 

fiG 

On 

U 


a 

a 

H 

U 

a 

GU 

XI 

a 



r z W 

X o “ 
p S 2 

u£° 

g P Z 

“ja 
x o X 
*P £ 

O < P 
Z 

Soz 

5^2 

ES« 

“Za 

JSJ C fig 
Q ty * 

gsg 

“§£< 

5 <cf- 

-H^Q 

d Z M Cd 

UW|j|E 

^i 3 z 

^ o < z 

< u < 33 

h * s i 

Gha^ 


P 

z 

2 

p 

P 

Z 

X 

SC 

p 

z 


z 

3 u 


X 

CQ 

P 

< 

X 

P 

P 

H 


X 

P 

CC 


X 

X 

p 

p 

a 

P 


p 

Cu 

X M 
P P |j 

L Um Ci 2 

w 

o 
z 

X p 

cc 


H 

< 

£ 


o 

CC 

£ 

< 

H 

C* 

O 

Cu 


X 

CU 
*5 

S 5 


H 

•< 

33 

H 

c/3 

Z 

o 


z 

< 

C/3 

< 

33 

P 

P 

C/3 




C/3 J3 

Z H 

Pg 
O 
s p 


X 

X 

c/3 

P 

Ed 

S 

H 


X 

S3 

S3 

P 

P 

< 

P 

Z 

C/3 

p 

X 

CQ 

Q 

P 

c/3 

oo 

P 

X 

X 

X 

p 

rvl 


z 

< 

p 

c/3 


P 

p 

z 

o 

p 

X 

S3 

S3 

P 

P 


X 

X 


X 

H , _ 
Sum 

a p ^ 

X w P 
^fiS 
P Z H 

9<x 
fa > « 

ill 

ill 

Z>S 

Sag 

iSa 

8IS 

/fl^I 
M P H 
P g P 
P H o 

SEffi 
z C 

CPU 

as c /3 x 
K ^ X 

Z CQ X 
<<X 
P H H 
t* ^ Z 
POP 


CAN COMMUNICATE WITH THE USER IN PLAIN ENGLISH 
TEXT 





jz£ 

2 Sz 

IssS 

| 8 S 


< § 



z ^ 

aHw 
X <j c/3 
m g a 
Q 5 u 

S 2 § 

“ 2 > 

XZ.X 
r - ft Cs3 
c /3 , - S 
H C/3 «□ 

23 a o' 

H *53 

H<3 
Z H C5 

a c/3 j 

“>c* a 
aw < 
x^x 
h 3 a 

cflgH 

>Og 

XZ.X 

WgH 

^§ 3 S 


Q 

M 

Wg 

£6 

li 

gi. 

< £ a 

£ z ;§ 
g < y 
-3 X 2 

<x E 

U H H 

2 £a 

*< O ^ 

w eg 3 

Q < 2 
> 

2 ^ Q 

?«w 

^ <x 

ZHH 

«< < z 
UQS 


Q 

i 

ZHS 
M *3 a 

O i M 

2 w 
Q p* c« 

Z ^ 

^ Z W w 

%m 

8 |?g 

|I1| 

X z > p 
w « i! e 

i||§ 
= 2 Sli 

5 < c o 
^h 5 u 

H S « o 

5°BZ 
^ bft;« 

&oog 

rizWs. 

gsas 

5 j;l 

UhQ> 


1-284 






S(JM 

Swu 

<yu 

z i% 

wa 1- 



as 5 
a f- w 

* c_- r7? 


35 a 

jZH 

P<« 
c/3 tf o 

ap>^ 

>w3 
>,k 5 
ea H ^ 
aPu 

why 

< L d7 

sq s r 

< 5 >< 

h2J 
■^3 PSl H 

^25™ 

u JP# 

as 2 * ® 

*- JO j 
H ◄ Ed < 

§|sg 

SGa^ 
£ziw 
W 3 5 SS 
p* b c/3 h 


H w 
^ c/3 

Id < 

H aa 
◄ «5 
Ed H 
OC < 
U Q 


£> 

gz 

>o 

J H 

2 o 

3 3 
fcE 
o cu 

g < 

as 3 

QJ cu 
*< d 
<3 S 


3§ 

z 2 

op 

«z 

o 5 

rwl ^ 

pm pm 

c/3 H 

< , 

« < 

C/3 rj 

Ed M 
c/3 rj 

gSi 

5 Ed 

as>> 

3*2 

W J < 
> J H 
Sg<l 
Q £ Q 


1-285 






H 

§ 

E 

O 

a 

a 

> 

a 

Q 

5 Ed 

« | 

sg 

6 g 

73 a 

P c/3 

H 3 
c/3 ^ 

Sz 

Ed a 
H O 

C/3 w 


c/3 


a 

a 

a 

H 

Z 


H 

a 
a 

Cu 

B w 

a 33 

w£ 

c/3 a 
3 O 


ohS 

^ c/3 a 
B Ed Q 
£ C/2 td 

HmS 

£8o 

vs o 2* 




a 


o 


Q 

z 

c 

u 


H 

c/3 

a 

a 

a 


z| 

gi 

u* 

jQ_ 

£ a ffi 

^ flC 

g a a 
SB U a 
H < a H 
H« w O 

SSgS 

|gN 

“SSEo 

HBCZ 

a Q U a 


Z 


H 
U 
a 

*-9 

tt 
O 

H Ed 
,ft!U 
S$ O Z 
P a < 
> fe H 

M S « 

5 t Ed 

>Ha 

<g| 

§h| 

U g cfl 

Ed H j£ 

-fc = 

u 

a 


w z 


£• *■• 
O H 
WU“< 
33 a 
a B a 
L Ed S 

H 73 ® 
Z < Q 
ana 

a a fc 

Ss§ 

a < S 
a os! a 
a a O 


73 


PROVIDE A LOGICAL LINK BETWEEN INFORMATION 
CONTAINED IN THE VIEWS OF THE META DATABASE AS 
WELL AS BETWEEN THE META AND THE SPATIAL 
DATABASE USING CONCEPTUAL GRAPHS 














NASA MODEL OF THE IUI CONCEPT 



DATABASE 

USER 











oUW 

hm< 


flti Q 

Ed Ed 
Cu J 
X Ed J 
Ed K ^ 
WHU 
B Z cfl 
H ^ Ed 

HHS 

5 S 2 p 
a x 5 

H Ed | 
coHO 
HOm 

Ed £ c/3 

n ^ H 
65 g U 

O o 2 

H ° 2 

3^0 

Cfl w j 

®3es 

w 3 Q ^ 
$OEdg 
2 ea jr 

u C /3 ^5 * 

z, ^ u « 

^ 5 Ed O 

aS^Q 

EdS«g 

= B ^ Ed 
S Ed H £ 

aa c^ *jF 

H 3 Qm 


SS 

3? 

CJ C/3 

a u 

E u 

H *-9 

Cs. 55 

So 

H td 

£ cp 

Ed < 

= ° 

N 

Sg 

c ® 

SP 

m| 

—5 55 

55 O 
OH 

j J 
< ◄ H 

g£§ 

> C/3 O 


X 

J 

z 

O Ed 

z 3 

Ss 

20 


w J 

2 ^ 
oo 

< i 

as a 
5 h 

-I 

h ; 

J Q 
H Ed 

z o 

Ed «< 
73 7 
Ed 5 

£s 


■ 

H 

O 

g H 

£ c/3 

X o 

12 

^ Ed 

5 = 2 

_ H ^ 
Q ^ Ed 
Ed X B 
H Ed > 
Z ^ ^ 
Ed Ed g 

ls£« 

5 M J 
h 5 £ 

112 

! a * 

•<a 5 

£| 5 a 

gaS 

^03 

jSz 

H d 5 

S < X 

S OS Ed 
>30 


|z“i 

a 22 i 

ca H u ^3 

Sss 3 | 

fowl 

3S&5 

m“§° 

"gSj. 

05 X z 5 
0 Cu C/3 ^ 

w cd Cad X 

dflsowu 

as§||§ 
h h a h 2 

Ed H c/3 5 
o 5 Z H S 

a < a a a 
n u > pq b 

,H 

5 S Z Ed , 

Hfln^5 
S Ed u es O 
O c/3 *< «< 05 

253hh«! 

^ao“ 

Cd H Ed Ed Ed 

BSxiq 

H td H H J 


1-289 





INTELLIGENT DATA MANAGEMENT 

FOCUS FY 86 



SCIENTIFIC DATABASE (CRUSTAL DYNAMICS PROJECT) 




CAPABILITIES OF INITIAL 

NASA KNOWLEDGE BASED MGMT CONTROLLER 


g* 

jz£ 

XCJW 



J 


1-291 


PROTOTYPE LIMITED BY EXPERT SYSTEM AND QUERY PROCESSING 
TOOLS AND COMPUTER RESOURCES 



g0B 

2<< 

fiUQ 


g 

CO 

LU 

D 

CC 

LU 


ut 


oc £ 
co > 

> tt 

> Q 

g ° 

> < 

z o 
o o 

t— Q 

< LU 
O <0 

_j < 

a cq 

Q. 

< 



< 

CO 

< 



Z 3 


1 <0 

IS 

2 UJ 

52 

Q ° 


LU 

H 

OC 

o 

CL 

0. 


IS 

< 

O 

z 

LU 

LU 


<0 

££ 

O CD 

<1 

*S 




1-292 






gas 

sou 

rW< 

CUQ 

C/5 


LU —I 
(/)< 
<z 
mo 
<F 


Uj< 

m_j 

£< 

lilO 

CEO 

0- l 

1- < 
>1 
CCH 

<o 

mm 

(Du 

Wig 

oS 

111 Q 
Z 3 

<2o 


</) 

82 

2|S 

mm 

tS5 


HI -I 

£m 

5< 

QQ LU 

"m 

is 

zh 

LU< 
( 1)0 
HI < 

m z; 

clO 

HI H 
CE (/) 
LL.O 

OF 

rnZ 

Z< 

< 2 

LULU 

2« 

<g 

g« 

>h 
o x 

°-Z 

mo 

2o 

»o 

1-tX 

CC<< 

UjOCh- 

Q.U 1 Z 

x9k>“ 

mom 


o 

moc 

< HI 

Lum 

CEO 

O HI 

hi 

CE*“ 

LU LU 

« 

Hl± 

m< 

«3 

to 


< LU 
h-< 

o. m 

LU< 

Oh 

z< 

OQ 

om 

u-5 

oo 

LUCE 

m< 


LULU 


H 

O HI 

rm 

oS 

ll 

>. <c 
rnQ 



OF THE CLUSTERING OF REAL DATABASE OBJECTS 





INTELLIGENT DATA MANAGEMENT 
RESEARCH FOCUS FOR FY87 


2 -Z 

qUU 

2 c«u 

Htdc 

<yn 

z << 

CUQ 

Cfl 


Q 

LU 

0 

< 

m 

LU 

O 

Q 

LU 

£ 

o 


0 


DC 

o 

o. 

CL 


* 

Q 
LU 0) 

g H 

5 < 

Z £ 
< -I 

u. o 
o cc 


w o 

£ ^ 

Og 

iu 2 
> W 
LU 0 
Q < 
uj z 

?! 


LU 
X 

o 
<0 

z 

o 

< 

< z 

^ LU 
CO 
LU 
X 
0. 


< 

g 

o 

o 


o 

Q 
LU 
CO LU 

< x 

? Q 

§ < 
F- x 
O 

LU < 

Sg 

O — 
CC CO 

< => 

LU > 
CO 5 

< O 
m z 

gs 

g* 


CC < 
LU *"■ 
Zh< 

r i o 

5 o Q 

UJ => LU 
H < CO 
Z Q < 

O P CQ 

UJ 


< 

X 


o _ 

H S! 

o 5 

LU < 

^ 0- u. 
5 ouj 
° z x 

< N 

Q t: h 

u- 3 z 

z U £ 

O > X 
h JZ 

< < r 

0 X 9 ; 

ii_ 3Z 
^ H CO 


H 

Z 

UJ 

Q 


O 
UJ 
H 

X 

UJ O 


H H 


GC 

< 


o 

5 

-i 

UJ 

CC 


UJ 

CC 

3 

H 

O 

3 

X 

CO 


oS 

•" -J 

< Ul 

2 Sj 

O x 

co g 

UJ x 

< o 
It o 


CO 


< 

O K 
UJ CO 

X £ 

Ogff 

< § 2 
b 3 < 

< o x 

Q Z 0 
-J < < 
2 H Q 

lu c n 


CL _ 
< LU 
X 0 

o < 

u. z 

ii 

2 t 

= 2 

5 x 


CL 

< 


o 

LU 

0 

K 

O 

UJ 

ffi 


O 

z 

0 

3 

X 

o 

I- 

< 

X 

UJ 

z 

LU 

O 


5 2 


0 

LU 

o 

Q 

UJ 

N 


< 

LL 

O 

I- 

Z 

UJ 

2 

o. 

O 

-j 

UJ 


g 

H 

< 

2 

X 

o 

LL 


< Q 
X £ 
m X 

Z m 

0 z 


< 

o 

o 

o 

z 

< 

H 

X 

UJ 

H 


uj O 

o o 


1-294 


PROTOTYPE A SECOND GENERATION INTELLIGENT USER INTERFACE FOR 
AN OPERATIONAL SCIENTIFIC DATABASE 



CAPABILITIES OF ADVANCED 
NASA KNOWLEDGE BASED MGMT CONTROLLER 


E-&3C 
fiU Q 


z £0 

LU o X 

(0 2 i 

LU fN 3 

DC 2(0 

X H Q. 

LU < = 

cn Z CO 

g UJZ 

^ CO O 


LU LU 
^ X 

5 m 

O DC 

I- -J 
< < 

o o 

a ^ 

OL QC 
< < 
O DC 
Z LU 

< I 

< < 
CC CO 

g s 

1 5 

O S 

DC 3 
< H 
UJ P 


=J O 

X DC 


< uj 


Z iii 

O DC 


U. X 

P6 

s? 

PS 

LU 2 

§< 

U CD 

gu 

s< 

< > 
Q CD 


O w 

g co 

< s 


x 

o P 

I- Li. 
LU o 
CO LU 
X CL 
X CO 

2z 
< o 

CO j= 

z < 


2 x 

° i 

Q < 
££ 

55 
z z 
o < 

F S 

< o 
g o 

o!£ 

x y 

< > 


co 55 

H X 

as 

=5 x 

DQ < 

0£ 

< * 
? o 
< < 
O ffi 


o 

LU ® 
-I Cl 
UJ LU 
CO H 

O 5 

12 

2 3 

O CO 

< g 


x O 
z 2 

m ^ 

“ hi 

^ X 
H- ll 

O o 

LU w 
-5 CO 
CD LU 
O Z CO 

< J z 

I- LU O 

< J C 

0X5 

-I -1 X 


< H ^ 
£ Z O 
5 LU J 
2 DC X 

Jr x o 

o 3 ^ 

Q Q F 

yj z 5 

^8i 


1-295 


NEAR REAL-TIME CONSTRUCTION 0F : OPTIMAL SEARCH NETWORK 
USING PATTERN RECOGNITION PROCESSES THAT SUPPORT A DYNAMIC 
DATABASE ARCHITECTURE FOR APPLICATION SPECIFIC PROBLEMS 


td~, 


JzS 


7 = Z 
ouw 
2 mu 


CUQ 

CO M 


a: 

q 3 

yj -i 
O O 
Z QC 
< h- 


Q O 
< O 


Li. 

o 


O 


HI 


QC 

HI 


HI 
CO 
< 
0 Q 


g 

co 

LU 

a 


LU 

(D 

a 

UJ 


£ 

o 


< 

CO 

< 



ONTAINS RAINFALL 



















PERFORMANCE COMPARISONS 
INITIAL L ADVANCED 

I DA TABASE ARCHITECTURE \ 


CO 

5 

ui 

3 

< O 

2 55 

° s 

Z £C 

LU Li. 
CO LL 
ILl O 
X > 

a. 5 

cc O 

Ui o 

D S 

H < 
O *“ 

Ui 

H < 

x 9 
o a 
5 o 

< -i 


w 

i- 

o 

< 


< 

o 

F 

< 

S 

o 

I- 


o 
£ 
o 

UI 
0. 
CO 

o 

si 

>s 

i m 

b o 

^ Ml 

o H 

—I < 

a. ui 
a. x 
< o 


CO 

o 

UJ 

”3 

CD 

o 

o 

z 

< 

CO 

-I 

< 

o 

a 


Ui 

o 

z 

< 

H 

x 

UJ 


> 

CD 

Q 

UJ 

H 

X 

o 

a. 

x 

CO 

H 

X 

UI 


UJ 

X 


o 

3 

X 

h 

CO 

< 


z 

o < 

O Q 


> 

CD 

Q 

UJ 

H 

X 

o 

X 

X 

3 

CO 

X o 

o 2 
x z 
< o 

UJ CO 


CO 

< 

H 

< 

Q 

_l 

UJ 


< 

UJ 

X 

a 

_i 

x 

o 

5 

F 


< 

3 = 

X 5 


O 

z 

z 

< 


X > 

t 2 

O £ 


0 
a 

X 
< 

1 

o > ^ 

Z X 

UJ Q 
> 

X 

a 


o 

o 

2 ° 

S 2 


CO 

CO 

ft 

w 

o 

£ 

(3 

_j Q 2 
< Q < 
O Z X 
O < O 

+ 

1 

h* 

-4 

5 



X 

o 

X 


X 

O 



CO 

2 

o 

pc 

s 

X 

z 

o 


z 

— 


< 

UI 

§UJ 

o < 

uj co 
t UJ 

gg 

X OC 

< z 

ui — 

3 S 
2 § 

2 3 

< o 

a 2 


o 

a 

x 

< 

X 

o 

< 

ffi 

z 

UJ 

> 

X 

Q 

_l 

< 

O 

a 


1-297 


QUERY FORMULATION TO DBMS • QUERY FORMULATION TO DBMS 

SUPPORTED BY NATURAL LANGUAGE SUPPORTED BY NATURAL LANGUAGE 

QUERY PROCESSOR BETWEEN EXPERT QUERY PROCESSOR BETWEEN EXPERT 

SYSTEM AND DBMS SYSTEM AND DBMS 



AN EXPERT SYSTEM 
FOR THE ANALYSIS OF 



J 

0. 


h— 

Q 

dc 

< 

i 

o 

DC 

o 

CO 


o 

dc 

< 

0 


0 

o 


>- 

DC 

O 

H 

< 

DC 

O 

m 

< 


i 

o 

LU 

H 

Li. 

o 


LU < 

Zl-O 
O 13 - 

lot < 

_l I— z 
D W UJ 

a- z Q 
0 “ < 
r < 
a* z 

- DC 

u O 


CO 

< 

CL 


< 

o 


I 


1-298 


IFORNIA 


EACH PIXEL HAS 
AN ASSOCIATED, 



1-299 


WAVELENGTH, pm 



JPL REPRESENTATION OF SPECTRAL 



1-300 



JPL SUPPLEMENTARY INFORMATION 


CO 




2 >-‘ 

bt . 

25 z 
u-S-o 

coFti- 

co«o< 

fjllJO 

ooo 

,z« 

<<2 
oc 2 m 

UlZiu 



o 

H 

CO 

LU 



1-301 


EGIONS OF SIMILARITY, 
DJACENCIES. 








STAR DATA STRUCTURES (UNITS) 


! 

i 



1-303 


i 










JPL SAMPLE STAR CONSTRUCTS 




73 Cl D 
c/d O ^ 

c3 -a 
o £ O 


! <l> 

*3 a 


A A £j 

■ ■ 


C4_ ^ A 

O O, ' 


I oo 

J-< C/D ^ 

<D go <v) 

X) ^ 

£ _£ £ 

<U *2 ^ 

£ 5 £ 


C/3 QJ 

<u O 
oo C 
52 3 

73 c 

X) 3 
3 X> 

00 c3 


C 

=* £ 

A *0 

<L> 
>> ti 

w CO 


H3 O 
X o 
75 <*> 

L2 oo 
00 03 


1-305 


W go 


K J 

2 'O 

B's.b! 

A J< 

' « A 

<n X i 


D ^ ' 

£ £ c3 

& « £ 

c Etj 


I— I X I 

fc Afc 


2 ' O 


A J< 

' 8 A 

J> *£ ' 
t c rt 


5^3 


£•§ 


c 

o 


O 

c 

i 

c 

.2 
+— < 
3 
O 


w p. 

u S 

^7 03 

fa i 

< O 

H A 


00 

H-H 

Q 


A 


A wJ C 
' <D <l> 

«-g £ 
& w 5 


OS 

PU 

OQ 

D 

Z 


c* 

w 

PQ 

S 

D 

Z 

(N 

H 

O 

J 

cu 


H 

O 

J 

cu 


0) 


<D 
<L> 

£ 

*— > 

0) 

X) 

<U Oh 

O < 

G 
c3 


ra 

H 

O 

Oh 

< 

T3 

C 

3 

H 

O 

J 


00 


co O 

• F ■ < 

T3 Qh 
<D O 
£ £ 


<D 

O (Hi 

G O 

g <U 

co ^3 
T3 ^ 

T3 > 
C (D 
03 

73 C 

CL) 73 

S g 
bo*£ 
c F 


T3 £> 
O o 

G 73 
<u 


oo 

<L> 

Ut 

3 

00 

3 

<D 


4-h 

O 

00 

to 

C 

• f-H 

T3 

O 

O 

c 

<u 


oo 


*-• — > 
3 X3 
<D 


3 

O 


3 

Cu 

fC 

H 


00 

3 

0) 

u< 

3 

CO 

3 

0) 


C* 

w 

OQ 

s 

D 

Z 


CO 

A 

i 

00 
4— > 

3 

<D 

E 

G 

»- 

o3 





z 

o 

p 

u 

z 

D 

Oh 

I 

W 

u 

z 

< 

H 

00 

M 

Q 

I 

U 

< 

A 

E 


o 

too 

03 > 


1-306 


JPL MIXED-INITIATIVE CONTROL 


i 



1-307 



FOCUS OF ACTIVITY 



1-308 


REMOTE 

SENSING 



JPL 



1-309 



JPL SAMPLE ANALYSIS SEGMENT 



00 

Z 

O >H 

U E - 1 
UZH 
oo m oo 

coQ^ 
00 


0 ^ 


seg 
^ ~ 
00 C_ QLh 

£<o 

gQw 

> PQ Z 

P 2 

pq h o 
co Pl pQ 

dOp: 


H 

Z 

PQ 


Z co 

od 

> PQ 

zz 

s 

oo ^ 

«Q 

S w 

ctfh 

-e 

pq fe 

Sz 

D < 





z 

. co 2 

>tCZH 

H qj < 
d h 

< PQ pj 
U ^ cl 

H <0 

<^o 

z 

< £ CO 

ss 3 

Sc^h 

hW u 
oo H OC 

>^o 

oo Q ll 


l 


Oh 

zu 

5 UU Q/ 

uSg 

3 z H 

00 CO Qh 

pqpqo 

hh ^ 1 

JpQ~ 

<s| 

<*<H 
PQ CZ co 

D Cl oo 


1-310 



ORGANIZATION OF THE 
SPECTRUM SYSTEM 



< 



LU 

< 

CO 

o 

< 

CD 

LU 

C3 

z 

< 

o 

S 

1— 


< 


s 


DC 

>- 

O 

DC 

LL 

< 

Z 

DC 

MM 

OQ 

O 

□ 

O 

OQ 

< 

DC 

s 

K- 

>- 

O 

CO 

LU 


CL 


CO 



CO 



LU 



J 


-J 

3 


O 

DC 

CO 

DC 

Z 

Q 

Z 

z 

o 

o 

< 

h 

o 

LU 

CO 

z 

o 

o 

z 

LL 


f- 

, 

< 

o 

z 

< 

o 

z 

LL 

DC 

1 

Q 

O 

LU 

2 

LU 

J 

3 

X 

o 

z 

2 

OQ 

2 



>- 



CO 



1-311 






FAULT-TOLERANT SOFTWARE: MODELING AND VALIDATION 





|h 


6 




0 > 


tD 









** 

a 

a? 

o 


03 

CO 

a 

CO 

00 



f*4 


03 


43 


TO 

03 



O 


43 

o 


C$ 

Im 

# 

0 ) 


« 

\ 

A 

a 

o 

C\2 

1 

43 

an 




1 

CD 

** 

o 

V 

« 

co 

«<5 

O 

a 

CO 

M 

W 

<L> 

>* 

JU 

a 

S5 

a 

<u 
-*— < 

O 

CO 

cG 

O 

fl 

L, 

<u 

40 

E 

GJ 

> 

CO 


S-H 

o 

> 

c3 



CD 

0 ) 

o 





£-« 



*< 






co 


a. 




-< 


6 

o 




O 


1-312 


J 


O S 

I s - cd 

05 tio 


rj <U 

O o> 0 ) 

nd *■* 
ce cd 


ffl * g 


W » V-. 

O CO O 


■y* Oft 

35 >> 

\ o — 

*►> « £ 


T 3 « 

«C , 


OQ 

a 

S ° 
— , <d 
o -f o 


« -I 

£ £ 

* o 


— >» 3 

d ” c 
o ^ 

° 2 o 

cx ^ 

* g a 

^ o : 


co T> 

^3 2 
» 3 C 

_ -cs O 

6 00 ’2 

Z *- <y 
i o a 

fc. ~o 5 

q; CO 
N « — 

*<■“* f-i ^ 

— o 


* .- 


td ««-• 

^ W) 
CO — 
cd *-» rr 


« « *s 

M Q O 

-tj 5 d 


^TTJ . U 

fl " o 

« CO « 


eft 

X* 

cd 

cd 

O 
• ^ 

Fm 

CD 
O . 

T3 

<d 

00 
• ^ 

a 

M 

U 

o 

«4_H 

O 


c; 

cd 


s-* 



B 

cd 

O 

0> 

a; 


Ut 

*— • 

Ok 

• «-4 

cd 

i«i 

O 

o 

X> 

£ 

V— i 

o 

B 

X? 

c; 

o 

etf 

>> -C 

cd 

CO 

1 

tv 

>i 

J-. 

C/2 

0) 

Oft 

1 

z> 

CO 

2> 

LO 

0> 

B 

a> 

a 

«-* 



2> 

W 

ftS 

a 

o 


ao UO 


3 ;r e 

r» “ — 


t* v a> 

* o 

< C/3 CQ 


3 .5 .5 E < 

l) J) D n w 

t o O -> -=c 

0 CQ CQ C S5 

1 I I I I 


1-313 


Fundamental issue, coincident failures 

Is software redundancy an effective strategy 
for achieving high reliability? 


RESEARCH OBJECTIVES 


0 

Urn 

P 

0 CZ 

^ Cd 

cd ' 

5 c 

o 0 

cn Td 

*o 
d 


o 

o 


a 

cc 

XJ 
d 

0 

O 

bxi 0 
d 

• —4 -Q 
N d 

cn 

cd q; 
d *- 
cd cd 

t_ cn 


0 

X3 

O 


d 

0 

d 

o 

Oh 


tic 

d 

- i— c 

XJ 

o 


cn 


«+-H 

0 


1-4 

cn 


o 

cn 


CD 

CD 



d 


-•-> 

CD 


cn 

a 

> 

in 

fl 

o 


CD 

CD 

*4—i 

03 

-4-> 

&D 

cn 

*4—1 


>> 

CD 

>> 

CO 

CD 

dS 

•*— i 



O 

-i-> 


>-> 


cd 


d 

• r— < 


o 

"o 

• — 1 

cd 

t— 

3 


' 

cd 

cd 

>> 

O 

X 

o 


— c 

cd 

d 

cd 

"a. 

a 

u 

X! 

cd 


— d 
^ d 
CU "d 

dr o 


d 

o 


0 

-d 


d 

s 

<u 

c 

0 

0 

xJ 


• ^"4 

0 

c 

Ph 

o 

o 

o 

0 

t- 

0 

S 

• i— « 

S-4 

0 

S-4 

cd 

cd 

o 

- f— <i 

d 

S 

a 

o 

CD 

dD 

> 

o 

£ 

"a. 

?- 

0 

CD 


X 

t-H 

o 

Pu 

0 



w 

Pu, 

CO 

«d 

Q 


cn 

0 

P 

cr 

*d 

o 

0 

0 

cd 


c 

cn 


d 

cd 

*-, 


~ O 


1-314 



MODELING REDUNDANCY 



1-315 


Degree of failing together 




COINCIDENT ERROR MODEL: A THEORETICAL BASIS FOR 


w 

PS 

«< 

€-« 

fe 

O 

CO 

£-« 

*< 

O 

PS 

PS 

o 

g 

5 

-< 

-< 


-h o* 

Pi 

6 fl 

5 .2 

6 ? 
o 

a 

CO T3 

cu 

cO «ao 


cO fli 
4S w 


<D B 

*- o 

cO t-t 


^ cu 

C L* 

(V cO 




1-316 


0(x) = Intensity Function 


COINCIDENT ERROR MODEL PROVIDES ANALYSIS OF: 


<D 

> 




O 

d 

03 

Tj 

d 

d 

*d 

tu 


d 

<u 

,d 


o 

a 

03 

•u 

d 

d 

*d 

cd 

*- 



o 

d 

03 

X3 

d 

d 

*d 

03 

J- 



cd 

p> 

CD 


s 

d 

S 
• «— < 



CD 

O 

d 

CD 

T3 

d 

CD 

cu 

CD 

'd 

d 


o 

b£) 

d 

d 

03 

CD 


Uj 

d 

o 


03 

a 


o 

CD 

Ph 

w 


tiO 

d 

- 

*d 

03 

CD 

m 


i 

B 


s- 

03 

d 

o 

d 

d 


o 


o 

d 

P. 


s 


1-317 



c 

o 

a 

o 


CO 

o 


o 

Q) 

OX 

CO 

bfl 

C 

'fl 

CO 

<L) 

cn 

s 

cS 

° *• 
-u tu 
o *- 
cd cd 
OX £ 

6 Z 

o 

<D “ 
pfl w 

^ G 

CO * 
.-I “ 

fl 

2 T3 


W 

C/3 

o 

CU 

C/3 

W 

05 

H 

C/3 

< 

Ox 


S 

oj 

3 

o 

(_ 

ex 

CO 

CO 

QJ 

*-. 

T3 

TO 

CQ 


£ 

O 

,P - 

3 E 

o o 

•8 " 

M £ 
S3 cd 

N i 

g 3 

O co 
feC 

cd c> 

-c 5 

o 

3 co 

s & 
« i 


cd 


w 

in 

z 

o 

ex 

CO 

w 

05 


w 

05 

05 

00 

CJ 


cd 

CO 

C 

T3 

> 

O 

ti 

Oh 

S3 

O 

-*-> 

fl 

xo 

.2 fi 

3 


co CX 

fl 

c o 
-*- J ,fl 
S3 ^ 

S3 3 
cd o 

pO 

o * 

. 

ft .5 

C-> c~> 

°c- 
o o 
o — > 

c >> 

-fl Cd 
E— ' £ 


fl 

C 

C 

• *— I ^ 

v-. T\ 
•M D 

c *■" 
O A 

w £ 


CO co 

G 

§ 6 

«*-» 

fl o 


<v >> 

pfl — 


co 


cd 

•fl 


CO 

/—* 

CJ 

OX 

O 


G 

<u 

> 

0) 

fl 

cd 

cd 

•fl 

•4-) 

^ C” 
•- 1 

^ o 

pp *- 

cd 

40 

O o 

35 

^ o 

CO ^ 


cd ~ 
»fl • — 
^ £ 


S-, 

a 


1-318 


Event which induces error 



1-319 


at causes redundancy to be an inco 


When is redundancy a more effective strategy than 
relying on a single version? 


iq 

V 

CT ^ 

X Z? 

O 

£ 


CD 

o 

c 

CD 

X 

G 

0 

G. 

QJ 

X 

G 


W 

If} 

Z 

o 

Ph 

CO 

w 

05 

E-h 

CO 

«< 

Oh 


0 


G 

tn 

X 

G 

G 


V 

2 

G 


lO 

V 

G 


0 

X 

o 

s 

Li 

o 

s-t 

L-i 

w 


G 

0 

X 

o 

G 

O 

o 


w 

CO 

2 

o 

Oh 

CO 

W 

05 

E— 

2 

W 

05 

05 

=5 

O 


CO 

O 

-*-» -e >> 

0 tn o 

«H • Cj — 

o ~ 

0 C ^ o 

& 2 2 « 

P P .H 


0 

-C 

HJ « 
0 


tn 

G 

O 


X 

G 

O 

0 


0 

L* 

G 

0 0 
>. 


co 


o o 


cn 

G 

0 


G 

tn 


G 

£ 


cn -h 


co O 


0 
^ > 
G — j 
G O 
G 0 

S-N 

(-HI 

0 0 

2 § 

tn 

G 

0 o 


“ >> 

G 
- X 
CT G 

— G 
G 

a; 



c 

G 

, — „ 

ZZ 

0 

• 


ca 


s 

L, 


H— > 


G 


«H 

G 

cn 

0 

o 

CO 


G 

• 

0 


O 

a> 

0 


Ch 

* 

0 


G- 

S - 

G 


G 

O 


0 

G 

G 


CO 

CO 

G 

g 



CO 

G 

0 

H-> 

G 

•pH 


in 

jo 

x 

0 

X 

G 

G 

O 

JO 


0 



1-320 



Further, p < .5 < p 


12 



10 


Probability (P N > 
of system 
failure 




JO 


± 

0 

60 


g(e> 

.99999 


•AM 



JQ — 0 -«-° 


4 


I , I i 1 L 

15 9 13 17 

Number (N) of components 


21 


1-321 


FDI Logic Portion of the Redundancy Management & Vehicle 
State Estimation Software for a Skewed Sensor Array 


Q 

O 


GO 

O 

CO 

a 

<D 

GO 


« =3 


0 ) 
•I— 1 


CD 

O 

c 

<D 

GO 


& a> 

« « 

a a 

Sj 

O 0 > 
-< Q 


DQ 


cd 

<3 

O 

tiC 

o 

-t-J 

o 

02 


co 


O 


0 ) 



GO 


1-322 


I 


— 0 


s 

o 

• r-( 

cd 

o 


o 

v 

o* 

CO 

5 


d ^ 

M 


« d 
d *2 

o 

— > d 

*2 O 
'd o 
*d 

0 0 
O 

0 0 


T 5 d 

d o 
* - 

•0 M 

* o 

*- o 


0 ** 

rl 


0 -» 
ft d 
0 
« M 
0 ) 0 

0 O 


b£ 

d 


A) *•— < 

0 2 o 


H W rt 

^ n '*-* 


CA 


n 

0 


d 

w on 

<U o 
B S 

2 - 
— « 

CT 1 « 

o> 

« ^ 
_ V 

cd B 
d d 

ft 0 » 


41 M 2 

ft •- 
2 * ~ 

£ ft ^ 

0 a © 

H ° a 

►>2 
d* s 
o ^ a 

2 v o 
22 0 


a 

d 

d 

(±4 

ci 

d 

o 

•*-> 

o 

4) 

CO 


0 

o 

-#-> 

0 

*4 

0 

d 

o 

>~ 


K 

0 

a 

0 

► 

S> 

0 


d y i 
0 ® 
-d 

— 0 

S 3 

d d 


0 

* ° 
o 


0 

a 

6 


0 0 



on 

0) 

E-i 



00 

d 

O 

a 

4> 

CO 



o 


k 09 

o d 

09 «/ 

d 0 
0 

co • 

: 0 
43 


n 

d 

o 

•*k 

<*> 

'S 

d 

o 

o 

0 

w> 

*d 

0 

*d 

0 

-«-» 

0 

o 

► 



PQ o 

Q 

o 

PQ 

PQ 


-< 

PQ 

PQ 

CJ 

4Q «© 

*o 

*o 

*o 

*o 

V V 

V 

V 

V 

V 

PQ U 

Q 

U 

Q 

PQ 



PQ 

PQ 

CJ 

<0 w 


(0 


<0 


1-323 


For instance, if the second, third, and sixth relations are satisfied 
while the first, fourth, and fifth relations are violated, then either 
the x -accelerometer or j-accelerometeir on face B must have failed/* 



FOR FAULT-TOLERAMT P ISTR litltlEIL-SJCSlEHS 





x 






Ui 





< 

H- 





Q 

U. 





C 

< 





3 

UI 





2 

u 






mm 





CO 

> 






x 






UI 





£ 

CO 





Ui 






*- 

u. 





CO 

o 





>* 






CO 

z 






o 





2 

»■* 





Ui 






h- 

< 





3 

3 



UI 


CL 

Z 



cx 


£ 




3 


O 

H 



)— 


cj 

Z 



o 



O 

o 


Ui 


a 

a 

3C 


h- 


Ui 


h 




H* 

Q 

UI 


X 

co 

3 

z 

Z 


CJ 

Z 

oa 

5 



<X 

o 



Ul 


< 


X 

> 

X 



*- 

h- 

cc 

1- 



CL 

co 

Ui 



Ui 

5 


> 



h- 

3 

Q 

o 

mrn 


CO 

CO 


u 



>■ 

CO 

< 

Ui 

CO 


CO 

<C 


cc 

x 




5 


o 


a 

Q 


Ui 

CO 


UI 

5 

a: 

cc 

CO 


h- 

< 

a 

< 

Ui 


3 


o 

z 

cj 


cq 

H- 

x 

h 

o 


rnm 

Z 

x 

u. 

X 


cc 

2 

o 

o 

CO 

a. 


H* 

CO 

Ui 

h— 


Ui 


*-• 

a 


Ui 

Q 


Q 

—* 


> 

O 



3 

• • 

Ui 


• • 

-i 

<3 

h- 

mm 


CO 

< 

2 

Z 

Ui 

X 

o 

U. 

o 

s 

s 

Ui 


£ 

< 


mm 


3 

2 

o 

Ui 

QC 

H* 

x 

Ui 

3 

mm 

K 

3 

H 

3 

1 


*«• 

3 

a 

mm 

CO 


z 

Ui 

z 

< 

CO 




< 

U. 


O 


o 




z 

1 




o 





-1 

UI 




-J 

> 




o 

Ui 




u. 

3 




>■ 

Q 




X 

s 




UI 

< 




> 

p 




o 

Z 




CJ 

< 




Ui 

h 




X 

3 




Ui 

O 




a 

CO 


Ui 


mm 



cc 


> 



3 


X 

o 


H 


Ui 

►— 


CJ 


CO 



3 

z 


3 


CC 

o 

ui 

£ 


»- 

*-• 

£ 

2 


CO 

H 

< 

o 



CJ 

CO 

X 


CO 

UI 


z 


z 

H 

Z 

o 


o 

UJ 

O 

CJ 



a 

-J 



H- 


-1 

X 


< 

X 

< 

CJ 


cj 

o 


mm 

< 

z 

X 

X 

o 

h- 

X 

z 


3 

UI 




£ 


>- 

-J 

o 

£ 

X 

h- 

a 

t- 

O 

o 

mm 

3 


<j 

CO 

CJ 

o 

3 


CO 

< 

H- 

Ui 


UI 


o 

3 

X 

o 

CJ 

o 

< 

CJ 3 

X 

X 

5 

z 

X 

Ui 


X 

H* 

a_ 

X X 

3 

□ 

Ui 

i 

O 3 

z 


z 

< 

3 3 

o 

-J 


X 

3 *4 


< 

a 

H 

UI < 

H- 

u 

Ui 

Z 

CJ u. 

< -J 


h- 


o 

CJ Ui 

£ 

< 


CC QC 


CJ 

u 

3 

x a 

z a 

< 


Z 

3 

3 r 


-1 


3 3 

y 


cx 

h- 

3 Ui 

£ X 

>- 

Ui 

3 

Ui <J 

O UI 

3 

X 

w* 

u o 

CJ > 


<£ 

UJ 

$ s 

<c 3 

o 

o 

o 

o 

a 

o 
















CO 

UJ 

X 

u 

< 

o 



o 


CO 

CO 

< 


LU 

-J 

a. 

yl 

-J 

3 

X 


LL 

o 

00 00 
Z Z 
- O 
h- CO 
CO 00 
— LU 
CO u 
X O 
O Z 
U Z 

X LU 

< -J 

QC 0Q 
09 < 

O J 
QC ~ 

a < 
> 

< < 
a 

< CO 

CO 


UJ O 
-J QC 

os a 

* < 

to a 


UJ 

< h- 


00 flQ 
UJ ^ 
X QC 
3 K 

00 co 

CO 

< Q 


I 



-J 








< 








Z 








09 











>• 





oo 



z 

UJ 






ou 

0. 

> 



o 



> 

M 



H- 



o 

> 

» 






o 

a 

* 

• 



00 



UJ 

Ul 


a 

H- 



z 

00 


o 

z 







X 

3 



UJ 

c 


CO 

H- 

Z 



o 

u 


Q 

LU 

Z 




u 


o 

X 

UJ 



> 



X 


H 


> 

z 

c 


K 

z 

Z 


z 

UJ 

a 


Ul 

o 



UJ 

CO 

QC 


X 

M 



> 





h- 

z 


o 

UJ 

QC 


z 

3 

o 


u 

X 

a 


o 

flQ 

*■4 


UJ 

< 




*■* 

h- 


z 

oo 

ou 

K 

QC 

z 




H 


o 

H 

UJ 


X 

UJ 

< 


UJ 

00 

a 


CO 

Q 

z 




X 


< 


z 


LU 

Q 

UJ 


K 

> 

UJ 

t 

Q 





o 

H- 



X 

a 


a 

z 

.1 

! 

OU 

CO 

z 


0U, 

a. 

< 


z 

< 

< 

X 

-J 




3 

H 


OU 

-J 

00 

Ul 

_J 


CO 

H- 

o 1 

>• 

a 

i 


Q 

U 

CO 

z 

< 



< 

UJ 


> 

H 

X 

> 


Ok. 

-J 


CO 

z 

-J 

o 



-J 

X 


O 

< 

z 


OU 

o 

< 

o 

u 


z 


> 

z 

X 

1- 


Q 




h- 

ou 


CO 

-J 

Q 


H- 

X 

00 

ou 

3 

3 

-J 


u 

o 


z 

00 

O 

3 


< 

o 

H 

3 

z 

X 

O 



1 

Z 

-J 

UJ 

V* 

U 


CO 

z 

o 


> 

h- 

V 


x 

ou 

* 

< 


Z 



CO 

CO 

< 

ou 

H 

LU 

UJi 


z 

3 



X 

Z 

f 


UJ 


X 

z 

UJ 

< 

j] 


> 

CO 

CO 

o 

z 

z 

a 



UJ 

< 

CO 

< 

CO 



UJ 

z 

H 

CO 

a. 

M 

u 


> 

** 


UJ 

CO 

< 

X] 



3 

00 

u 

z 

z 



CO 

3 

UJ 

o 

< 

►— 



CO 

UJ 

CO 

z 

z 





QC 


a. 

H— 

O 

o 


cz 


a 

UJ 


oc a 
ou z 
* < 
UJ 

<J9 UJ 
QC 

a x 

X u 
< ~ 
< 

CO ou 

UJ 

09 QC 

< o 


OO 00 00 

Z 00 00 

O OU Ul 

— X 

: o 

1- 

o 

Z Ul z 

X z 

; °- 

3 < 


00 X 

\ 

00 H 

> < 

< u 

. X 

Q 

i o 

3 CO 

1 1— 

x 

oo 

< * 


h 

o 

CO < 

H 

H OU 

3 3 

i OO 

O I- 

' ou 

1 Z 

09 

Ul < 

< 

X uj 

CO 

X 

00 

K « 

ou 


X 

x u 


o — 


a 

Q 

K O 

Ul V 

Z ^ 

-1 z 

ou z 

— UJ 

Q Ul 

< > 

X z 

u. o 

UJ 

w O 

Z CO 

Ul 

UJ UJ 

K Z 

Q CO 

z 

•X 3 

O UJ 

OU V* 

flQ K 

> ut 

< < 

~ > 


CO — 

* K- 

CO K 

00 

< u 

< X 

CL. 

K — 

o o 



1-328 



Ada PROGRAM 


I 

I 




1-329 








o CimRfcMT TEST P E JL SjjUJLS_^JiP_^_PAQBi,jjis 






UJ 




% 

X 




vs 

3 




H 

-1 



c 

X 




ITS 

O 

< 


> 

P*s. 

CO 

u. 


X 

X 

< 



o 

i— ^ 


X 


H 

*— I 

X 

o 


u 


00 

00 


< 

X 

< 

CO 


u. 

<c 

H 

UJ 


00 

> 


u 




* 

o 


H 

• 

CO 

X 


< 

< 

H 

a. 


V) 

;> 

< 



Z 


UJ 

-J 


3 

• 

CO 

< 




H 

z 




Z 

o 


CO 

< 

< 



o 


UJ 

00 


X 

Z 

X 



u 

o 


o 





H 


£ 

vs 

H 




H 

x 

00 


O 

V) 

o 

UJ 


_J 

“• 

0. 

CD 


-J 

X 

&. 

< 


O 

UJ 

3 

00 


0. 


CO 

00 


< 

Q 


UJ 



UJ 

LU 

£ 


u. 

00 

£ 


V 

o 

H 


* 

X 


CO 

H 

UJ 

UJ 

X 

UJ 

1 

X 

> 

a 

H 

Z 

< 

o 

o 


3 

u. 

u 

X 

< 

Z 

* 

UJ 

H 

Q 



X 

UJ 

. < 

Q 

Q 


z 

vs X 

UJ 

UJ 

UJ 


3 H- 

u 

H 

H 

< 

□ U - 

z 

< 

< 


<1 

< 

X 


o 

Hi UJ 

X 

UJ 

H 

H 

-j 

z 

z 

mm 


OQ 

UJ 

UJ 

z 

Q 

Q( < 


CD 


UJ 

UJ) v> 

vs 



H 

flQj 3 

UJ 

Q 

Q 

a 

H 

CO 

Z 

Z 

o 

U4 ^ 

= 

< 

< 

a. 

H o 

o 



o 





UJ 






z 






3 






-J 





CO 






X 

< 





vs 

CL 

vs 


'"“* s 


< 


z 


c^* 


H 

z 

o 


00 



o 



z 


CL 

CO 

H 


3 


o 

vs 

u 


VS 



UJ 

< 


s — ^ 


z 

u 





o 

o 

z 


X 


mm 

z 

o 


X 


H 

a. 



o 


3 


H- 


X 


CO 

a 

< 


H 


rnm 

z 

3 


U. 


X 


Z 


z 


H 

mi 





VS 

Q 

H 


o 



Z 

Z 

00 

X 


a 

< 

O 

UJ 

u 



X 

U 

mm 



a 


X 

H 

£ 


UJ 

z 

>• 




-i 

o 

z 

> 

z 


— J 

u. 

UJ 


UJ 


o 


> 

H 

X 


X 

CO 

o 

u 

H 


H 

u 

u 

< 

o 


z 

mm 

UJ 


z 


o 

h- 

z 

H 

< 


o 

Z 


Z 




< 

z 

UJ 

o 


X 

£ 

o 

£ 

H 


o 

UJ 

u. 

00 



u. 

VS 


vs 

H 




CO 

UJ 

X 


z 

z 

z 

vs 

o 


, o 

o 

o 

vs 

a. 

2 




< 


£ 

00 

X 

CO 


o 

UJ 

mm 

< 


UJ 

H 

-J 

> 

H 

> 

a 


CQ 

o 

z 

o 

< 

CO 

O 

X 

> 

X 

z 

z 

X 

OL 

00 

a. 

< 

< 

Q_ 





-J 


o 

o 

o 


a. 

< 

3X 



1 


a 





o 


O 

o 

o 



I 


t 


1-330 


Valid data (re) distribution/recovery 
Task reconfiguration and restart 


Me believe the known Ada problems can be, and are, resolved 


* 


O 

< 





CO 

h- 

co 


CQ 





LU 

X 

UJ 


X 

CO 

> 



QC 

o 

X 


X 

H 

a : 



X 

X 

X 


o 

CO 

X 


a 

-1 

X 

-J 


X 

X 

> 


Ui 

M 

X 

Ml 

z 


H 

o 


H 

< 

CO 

< 

o 

a 


u 

LU 

a 

x 


X 

M 

z 

X 

LU 

Q 

LU 


o 


H 

< 

u 

X 

O 

a. 

Ui 

1- 

CO 

< 


z 


tx 

X 

X 


z 

Nl 

CO 

< 

X 


LU 

< 

< 

o 


z 

K 

X 

1- 


» 

Q 

mm 

Z 

o 

X 

3 

X 

CO 

H 

c 

*- 

o 

« 

X 

X 

co 

< 

x 


< 

X 

H 

CJ 

la* 



o 

o 

a 

X 

< 

a 

< 

X 

to 

CO 

h- 


a 

a 

< 

x 

LU 

X 




z 

mm 




QC 

o 

co 

X 

>- 

z 

X 

LU 

<S) 

O 

H 

z 

X 

CO 

3 

< 

QC 

a. 

M 


o 

< 


X 

X 

< 

o 


UI 

•a* 


Q 

X 

o 

* 

H- 

Q 

o 

CO 

Ui 

z 

o 

X 

a 

<C 

Ui 


z 

X 

< 

a 

O 

X 


OQ 

< 

UJ 





< 

Z 

H- 

X 

1- 

Z 

z 

CO 

Q 

X 

o 

co 

ui 

X 

I- 

o 

CO 

z 


H 

Ui 

-J 

Ui 

X 

P-4 

X 

< 

QC 

LU 

h- 

o 


o 

h- 

u 


o 

-J 


H 

Ui 

CO 

< 

o 

CO 

X 

LU 

< 


X 


u 

X 

CO 



Q 

X 

o 

X 

mm 

X 

o 

CO 

CO 

C 

O 

CO 

o 

z 


X 

r 



X 


X 

X 

Q 

< 

CO 

< 

Ui 


to 


c 

X 




X 

CO 

z 

> 

z 

X 

Q 

z 

UI 

H 

Z 

mm 

X 

o 

X 


< 

CO 


o 

CO 

X 

a 

o 

X 

X 

X 

Ui 


o 

> 


X 

o 

a 


> 

CO 

X 

o 

X 

H 


LU 

o 

o 


o 

u 

o 

z 

H 

X 

h- 

X 

> 

X 

X 

X 

o 

X 



a. 

o 

X 

X 

V* 

o 

CO 

Q 

<4> 


X 


1 

CO 



ui 

X 

o 

X 

CO 

X 

z 

X 

< 

CO 


H- 


mm 

o 

o 

o 


o 

Z 


o 


X 

mm 

X 

> 

a. 

z 

x 

z 

h- 

X 

H 


3 

o 

< 

o 


X 

X 

< 

o 

X 

QC 

•J 


CO 

to 

1 

CO 

o 

o 

X 

CL 


Ui 

M 

Q 

X 

X 

X 



< 

u 

z 

X 

X 

< 

X 

Ui 

UI 

u 

< 


< 

> 

mm 

o 

X 

QC 


X 


* 

z 

a 

a 

H- 

< 

X 


z 

* 

o 





a. 

< 

X 

a 

cx 

< 

< 

> 

UJ 

X 

Q 

o 

< 




CB 

s 

< 


-3 

flQ 

o 

o 

o 


I I I 


1-331 


f 


ARCHITECTURE RESEARCH AT ARC 



COMPUTER ARCHITECTURES 


* 5 o 

i E 

1 5 

- 5 

I « 

1 g <^_ 

- 3 T 

2 ll. L 

< < 

Q 








Code Sequential Data Flow Architecture 

PE’s 




CO CM 


X *1 >• n N 

oT JZ ci CO* 2! £ r-* 

ccccococcnccccoc 


^ CM ^ 

+ + + 
x > -0 

I 

-J * N 


1-334 


Instruction store 






DATA FLOW 



1-335 


Mapping CFD Programs onto homogenous Multiprocessors 


o 


c 0) 
O 


5 13 

> s 

»- £ 
• CO 

9 E 

<D 

CO o 

E * 
-c <1) 
~ > 

o £ 
o> 


(0 

o 

CO 

CO 

CD 

O 

O w 
5 




CO (/) 
Hi 


Q. 

CO 


■o 

c 

CO 


« £ 

•— CO 

« y 

Q. CC 
CO < 


L_ (0 

i I 

<D ^ 

E x 
c < 

g s 

1° 
o £ 
o i: 



1-336 



A LOW COST, HIGH SPEED 

SYSTOLIC NAVIER-STOKES ATTACHED PROCESSOR (SNAP) 



1-337 


host 


















Level of Performance Modeling 



1-338 


Register Transfer Level Machine 





Master 



3 



6 










Parallelism Detection 



1-340 


Benefit - [(E. - 1. ) + t. . ] - CC . . = saving from parallelism - communication overhead 


Performance Measurement 
Research 


Livermore & NAS loops, Whetstones, Dhrystones 








PROGRAMMING LANGUAGES FOR MULTIPROCESSORS 



DEVELOPED AT ARC AND UNDER TEST BY ARC USERS 


S3 640 Tl LMI 

BENCHMARK IFU+FPA Explorer SUN-3 2x2 MicroVaxll 


CO GO CO o 
CO CM O CO 

co i< c\i 1 n 

1“ uo 


O CD CO CM 
OONffl 

N CO n T- 

CM *- 


O 

oo cr> co i> 

cd «d cb 

CO 


CD CO OO 00 
CM in CD T— 
Tt CM ^ CO 


CD CD 
CD CD N 


^ CO 


CD N N CO 
cm i- co in 
CD CO CO ir> 


p CD cm 

h- Tf 

o 

CM 


cd co 
in cm 

n N r-' 


UJ 

a: ^ > 

LU § ^ CC 
> o < UJ 
O CE P a 
CQCQOD 


t- CM 00 ^ 
O O O O 


> oc 

o^o 

3 £ 

>£E tcc 

<X </> £Vf CM 

LU UJ > > 

O Q O O 

IT) CO N 

o o o 


CM CM CD CD CD CM 
CD CD o LO CO 
o CO ^ CD ^ o 


▼- oo pJ co <o S2 

CD CD UO ^ ^ CD 
O IT) ^ r- CD 


CD IT) t— fv. CD ▼“ 
tT O CD Tf -M* CO 
O CO CM O O CM 
CM 


O lO O ID o in 




00 CM O CM 
O N N If) 
00 CM O CM 


co in co co 

CO p CD CM 
CD LO ▼— CD 
CM t- 


O N O CO 

in in cd rr 
in cm o CD 


h l55 

Cq.cc 


00 CD O 
O O 


M < X Si 
csi co 't in 


cc < < 

< 0. CE OC 


O.S. GOVERNMENT PRINTING 0PPICI: 1987-7 26-123/45001 


1-343 


19. TRIANGLE 247.47 425.42 138.80 


Comparison of Computational and Experimental Results 

via Comuter Graphics 



Overlays 





NASA 

National Aeranautcs and 
Space Administration 

1. Report No. 


Report Documentation Page 


2. Government Accession No. 


NASA CP-2459 

4. Title and Subtitle ~ ~~ “ 

Computer Sciences and Data Systems - Volume 1 


3. Recipient's Catalog No. 


5. Report Date 

March 1987 

6. Performing Organization Code 


7. Author(s) 


8. Performing Organization Report No. 


9. Performing Organization Name and Address 

Information Sciences and Human Factors Division 
NASA Office of Aeronautics and Space Technology 

12. Sponsoring Agency Name and Address 

National Aeronautics and Space Administration 
Washington, DC 20546 


10. Work Unit No. 


11. Contract or Grant No. 


I 13. Type of Report and Period Covered 

Conference Publication 
14. Sponsoring Agency Code 


15. Supplementary Notes 


16. Abstract " — — 

Ce“«“ t ^«Uu^ T 'Jn5 P !l r “ d “° rk in Pr u 08 " SS " ere " a,Je by NASA P ersonne l from 

Granfs° U rV nt0 ^ followin 8 categories: Software Engineering, University 

ants, Institutes and Applications. The material presented under Data System* 

Cente^ in^ 6 ?^ 126 ^ ** SUCh ’ The Symposium was held at the National Conference 

"nsi r d : # to 2o ' im - The sw ° siu ” 


17. Key Words (Suggested by Author(s)) 

Computer Sciences Applications 
ata Systems Expert Systems 

Software Engineering Institutes 
University Grants 


19. Security Classif. (of this report) 

Unclassified 

NASA FORM 1626 OCT 86 


I "18. Distribution Statement 


Unc lass i f ied-Unl imited 
Subject Category 61 


20. Security Classif. (of this page) 

Unclassified 


I 21. No. of pages I 22. Price 



