56561-G470-176 


AD-A270 435 




Distributed Computing Design System(DCDS) 
Final Report 


CDRL A005 
30 September 1993 


DCDS 


Tins ao:is sppioved ] 
for pubhr or.d sis; its 

distribu::::. .. | 



$ 


DTIC 

ELECTE 
OCT 07 1993 

A ’ 



The views, opinions, and/or findings contained in this report are those of the author(s) and should 
not be construed as an official Department of the Army position, policy, or decision unless so 
designated by other official documentation. 


Under Contract 
DASG60-90-C-0092 

Prepared For: 

The U.S. Armv Space &Strategic Defense Command 
P. O. Box 1500 

Huntsville, Alabama 35807-3801 


Prepared By: 

TRW System Development Division 
Systems Integration Group 
Huntsville Operations 
213 Wynn Drive 
Huntsville, Alabama 35805 


5 


93-23414 



93 


10 


1 6 1 











Best 

Available 

Copy 





TRY," 


TRW System* Develop m ent Wynr Otue 

Divoaon Huntsville A! 3biJD!' 

Detense Systems G'jui: ?l)t B3' ?40U 


SN56561 

G002.VOB.93-3268 
30 September 1993 

U.S. Army Space & Strategic Defense Command 
P.O.Box 1500 

Huntsville, Alabama 35807-3801 

Attention: CSSD-SA-SS 

CSSD-IM-PA 
DRC 
DTIC 

Subject. Contract No. DASG60-90-C-0092 

CDRL Sequence Number A005 
Distributed Computing Design System (DCDS) 

Final Report 

In accordance with the requirements of the subject CDRL, six copies 
of the report are hereby submitted. Two copies are provided for Jeff 
Randorf, CSSD-SA-SS. Gne copy is submitted for CSSD-IM-PA. 
One copy is submitted for Dynamics Research Corporation. Two 
copies are submitted for Defense Technical Information Center. 






TRW Inc. 

Systems Integration Group 



V. O’L. Bain 

Contracts Administrator 
Huntsville Operations 
System Development Division 



VOB/jms 







RV, ,r- 


• • 


• • 






Unclassified 


SECURITY CLASSIFICATION OF THIS PAGE 


REPORT DOCUMENTATION PAGE 


la REPORT SECURITY CLASSIFICATION 
Unclassified 


2a. SECURITY CLASSIFICATION 
_Unclassified__ 


2b. DECLASSIFICATION/DOWNGRADING SCHEDULE 
Not Applicable 


4 PERFORMING ORIGINATING REP NUMBER(S) 


Form Approved 
OMB No. 0704-01XX 


lb RESTRICTIVE MARKINGS 
Not Applicable 


3 DISTRIBUTION/AVAILABILITY OF REPORT 
Unlimited Distribution 


5 MONITORING ORGANIZATION REPORT NUMBERS 




6a NAME OF PERFORMING ORGANIZATION 
TRW Inc. 

System Development Division 


6c ADDRESS (City, Slate, and ZJP Code ) 
213 Wynn Dnve 
Huntsville, AL 35805 


Ha NAME OF FUNDING/SPONSORING 
ORGANIZATION 


8c. ADDRESS (City. State, and ZIP code) 


11 TITLE (Include Security Classification) 

Scientific and Technical Reports Summary-Annual and Final Report 


12 PERSONAL AUTHOR(S) 
Jan M. Smedley 


13 a. TYPE OF REPORT 13b TIME COVERED 14. DATE OF REPORT (Year. Month. Day) 


7a. NAME OF MONITORING ORGANIZATION 

U.S. Army Space & Strategic Defense Command 


7b. ADDRESS (City. State, and ZIP Code) 
P.O. Box 1500 
Huntsville, AL 35807-3801 


9. PROCUREMENT INSTRUMENT IDENTIFICATION NUMBER 
DASG60-90-C-0092 


10. SOURCE OF FUNDING NUMBERS 


PROGRAM 



I II Ii'iI'Ii'Hi'IHMIi'II 


WORK UNIT 


WJA* SKM [•KlwItJl I 


15. PAGE COUNT 
7 


FROM 6/1/90 to 9/30^3 1993 Septcmer 30 


16 SUPPLEMENTARY NOTATION 

Prepared as CDRL A005 under DCDS Support Contract 


17 COSATIC CODES 18 SURJECT TERMS (Continue on reverse if necessary and identify by block number) 

FIELD I GROUP SUB-GROUP | DCDS Distributed Computing Design System 

CAIS-A Common APSE Interface Set-Application 
APSE Ada Programming Support Environment 

OSF Open Software Foundation 




19 ABSTRACT (Continue on reverse if necessary and identify by block number) 

This report summarizes the activities under the Distributed Computing Design System program. The 
DCDS program was responsible for the support of the DCDS environment, developed under contract 
to USASDC. The DCDS environment is an integrated set of tools, languages, and methodologies 
designed to support the entire life-cycle of system/software development. This LOE contract 
provided technical assistance, training, distribution, configuration management, sustainment, and 
enhancement of DCDS. 


20 DISTRIBUTION/AVAILABILITY OF ABSTRACT 
m UNCLASSIFIED □ SAME AS RPT □ DTIC USERS 


22a. NAME OF RESPONSIBLE INDIVIDUAL 
Jeff Randorf 


DD FORM 1473, JUN 86 


21. ABSTRACT SECURITY CLASSIFICATION 
Unclassified 


22b. TELEPHONE (Include Area Code) 22C OFFICE SYMBOL 
(205) 955-5576 CSSD-SA-SS 


SECURITY CLASSIFICATION OF THIS PAGE 


































56561-G470-176 


r/Wt 




Distributed Computing Design System(DCDS) 
Final Report 


CDRL A005 

30 September 1993 


Reviewed By: 

'/?{ 



Jan M SmedJ^y 

,DS Project Manager 


Disclaimer Statement and Distribution Restriction 

"The views, opinions, and/or findings contained In this report are those of the author(s) and should not be construed as an official 
Department of the Army position, policy, or decision, unless so designated by other official documentation." 

" Distribution Statement F - Further dissemination only as directed by the U.S. Army Strategic Defense Command, 

ATTN: CSSD-IM-PA, P. O. Box 1500, Huntsville, AL 35807-3801,01 April 1985, or higher DoD authority." 

" Warning • This document contains technical data whose export is restricted by the Arms Export Control Act (Title 22, L.S.C, Sec 
2751 et seq.) or Executive Order 12470. Violation of these export laws are subject to severe criminal penalties." 

" Destruction Notice - For classified documents, follow the procedures in DoD 5200.22-M, Industrial Security Manual, Section 11-19 or 
DoD 5200.1-R, Information Security Program Regulation, Chapter IX. For unclassified, limited documents, destroy by any method 
that will prevent disclosure of contents or reconstruction of the document" 


Under Contract: 

DASG60-90-C-0092 

Prepared For: 

The U.S. Army Space & Strategic Defense Command 
P. O. Box 1500 

Huntsville, Alabama 35807-3801 


Prepared By: 

TRW System Development Division # 

Systems Integration Group 

Huntsville Operations 

213 Wynn Drive 

Huntsville, Alabama 35805 

• 


• • 


• • 





DCDS Scientific and Technical Reports Summary 


1.0 Objectives 

The overall objective of the Distributed Computing Design System (DCDS) 
program was to ensure that the DCDS environment was usable by Government 
programs and contractors developing large, real-time systems. The DCDS 
environment consists of an integrated set of tools, methodology, and languages 
designed to support the entire life-cycle of system/software development. DCDS 
was originally developed by TRW as a proof of concept tool to determine the 
effectiveness of building software to assist in analyzing requirements. Through of 
the continued support of US ASSDC, formerly US ASDC and BMD, TRW has been 
evolved the technology into a CASE tool comparable to commercial products used 
throughout the defense industry. Because it was developed with real-time, 
distributed systems in mind, DCDS is more complex and powerful than other 
CASE tools available on the commercial market. Support of DCDS required 
expertise not only in sustainment and enhancement of DCDS toolset, but also in the 
development of SDIO systems. Through the DCDS contract TRW provided 
sustainment and enhancement of the environment, active technical customer 
support, and specialized training support. This contract was originally established 
for a 24 month period. Due to funding limitations and the continued demand for 
DCDS, the contract was extended an additional 12 months. 

2.0 Technical Problems 

The DCDS project was initially focused on providing user support, training, 
and minimum sustainment to the environment At that point in time it was believed 
that DCDS would be replaced by events and a subsequent contract. From June of 
1990 through June of 1991, the DCDS TRW support team consisted approximately 
four people. As time progressed, the demand for DCDS increased and the 
customer community realized that replacing DCDS would not be an easy task. 
DCDS' flexible Element-Relationship-Attribute model, extendible by the user, 
provided a unique foundation for adapting the environment to meet specific project 
needs. Many of the "buzz word” capabilities of today could already be provided 
by DCDS. DCDS elements were really entities and could be converted into 
objects. DCDS was built with flexibility and extendibility in mind. DCDS 
provided an extensive query capability. Using DCDS, the user can customize his 


own methodology with consistency analysis support without software 
modifications. The DCDS methodology and underlying software could evolve 
easily with technology. However one major problem existed, DCDS platform base 
was limited to VAX/VMS and Sun 3 system platforms. Support of 
SunView/SunCore, the user interface software used in the Sun 3 development, was 
dropped by Sun. The VAX/VMS interface dated back of 1985. The DCDS User 
Interface had to be brought up to standards for the continued success of DCDS. 

3.0 General Methodology 

The general process methodology behind the DCDS development was to 
use DCDS as a CASE tool to manage the project, develop and enhance the 
software, and assist in test and verification. By applying DCDS in the 
development of DCDS, TRW became users as well as developers. Through the 
application of DCDS, project milestones and schedules could be traced and 
maintained in accordance with Government directives. During the first two years of 
the contract focus was on technical assistance, followed by training. During the 
past year focus was shifted from technical support to tool enhancement with 
emphasis on the user interface design. 

4.0 Technical Results 

The accomplishments of this contract can measured by the ever-increasing 
acceptance and use of DCDS within USASSDC and other Government agencies. 

4.1 Technology Transfer 

4.1.1 User Support 

DCDS has been installed in over 160 sites. During the 
past year alone, over thirty-four copies of DCDS have been 
distributed. In conjunction the DCDS support team has 
provided consultation to the individual sites, handling several 
hundreds of user telephone calls. 

4.1.2 Training 

Since the training program was initiated in June of 1989, 
TRW has trained over 300 people, representing USASSDC, 
Army, Navy, Air Force, Department of Energy, National 
Security Agency, and NASA. The demand for additional 
training has increased. Three formal training classes. 
Introduction to DCDS, DCDS for Managers, and DCDS 


r 












• • 




2 




I 


4 


Software Engineering Methodology Training, were developed 
under this contract. During the past year more specialized 
training classes (i.e., classes developed using attendees 
requirements) have been developed and conducted. Using 
customer requirements provides a common foundation for the 
training and assists the customer in understanding the usefulness 
of the environment. These types of classes enforce the need for a 
tool such as DCDS for requirement analysis. Customer 
response to the tailored classes was extremely positive with 
comments such as “I knew that our requirements were in bad 
shape—but 1 didn’t realize how bad! This class was a real eye- 
opener.” 

4.1.3 Cooperative Research and Development Agreements 

In June of 1992 TRW was directed by USASSDC to 
distribute copies of the DCDS Sun and VAX source code and 
associated document to CONVEX in support of a Cooperative 
Research and Development Agreement (CRDA) with 
USASSDC. Under the CDRA TRW supported CONVEX in 
rehosting DCDS to a CONVEX platform. This CRDA was a 
remarkable success. The CONVEX team did an exceptional job. 
CONVEX complemented TRW on how well the DCDS source 
code was written and organized with less than 40 lines of the 
Ada software requiring modification prior to initial compilation. 

4.2 Enhancement Activities 

Under this contract TRW made significant progress in productizing 
the DCDS environment. Using customer input. TRW worked with 
USASSDC to prioritize requests and focus attention on the most important 
areas. Some of the most significant enhancements are highlighted in the 
following sections. 

4.2.1 Unified Database 

TRW enhanced traceability within DCDS by combining 
the system and software requirements and test support 
methodologies into a single database. Previous DCDS versions 
provided separate databases for each life cycle phase. While this 
approach separated areas of concern and prevented individual 
conflict, some manual effort was required to ensure traceability 


* 



* 


♦ 








3 




from phase to phase. By combing the databases, traceability 
information is immediately visible and no information can be 
accidentally lost. 

4.2.2 Enhanced Database Management Support 

To assist in assessing information in the unified 
database, TRW enhanced the underlying database management 
system (DBMS). TRW redesigned the DBMS to allow users to 
establish baseline databases from which subordinate databases 
could be created. The baseline databases were "write locked" to 
maintain integrity, but visible to lower levels. The information 
at the subordinate databases could later be exported and merged 
into the baseline database using standard features of DCDS. 

4.2.3 Enhanced Configuration Management 

To assist in ensuring database integrity, TRW enhanced 
the DBMS to include a session audit capability. If enabled, the 
date, time, change, and user identification associated with each 
change is logged into an encrypted log file. The log file can be 
archived or printed. The archive file provides a CM trace of all 
actions performed on the database. The print capability displays 
to the screen or prints to a designated file a log of all 
transactions. 

4.2.4 Enhanced Security Features 

TRW also designed security features to prevent 
unauthorized access to DCDS as well as an individual DCDS 
database. The DCDS software checks to determine if a user is 
authorized to use DCDS prior to execution. In addition the user 
can establish permission levels within the database to allow 
others to read and/or update the database. 

4.2.5 Common APSE Interface Set-Application (CAIS-A) 
Prototypes 

TRW built two prototypes to access the feasibility and 
effectiveness of integrating DCDS with frameworks using 
SofTech's CAIS-A implementation. In the initial prototype the 
DCDS database was stored as file nodes within the CAIS-A 
entity-relationship-attribute model. In the second prototype a 
subset DCDS element-relationship-attribute (ERA) database 







4 


I 


package was rewritten to access the CAIS A database. Both 
tasks were accomplished in less than 3 man-months. At u 
completion of task, recommendations and lessons learned as 
well as a demonstration was provided to representatives from the 
Ada Joint Program OffLe, USASSDC, Naval Oceans System 
Center (NOSC), and SofTech. 

4.2.6 DCDS Restructure 

During the past year TRW restructured and redesigned 
the internal DCDS software. The foundation for the redesign, as 
documented in the CAIS-A Task Report, was to provide a more 
portable environment and to streamline incorporation of 
enhancements. In the past DCDS upgrades have been hampered 
by system dependencies. Under this restructure a clear 
separation of DCDS toolset core (i.e., the Database Management 
System, Translators, Query capabilities, etc.) and user interface 
software was performed. The core system dependencies were 
isolated into a single package. The core software was initially 
developed on the VAX under VMS due to lack of available 
hardware. This software was later ported to the Sun 
SPARCstation using SunOS. As the development progressed, 
both systems were maintained to ensure portability between the 
two environments with vastly different hardware and operating 
system configurations. The goal was to reduce potential impacts 
of migrating to other platforms as well as eliminate problems 
when operating systems and associated software are upgraded. 

In the core redesign, the separate tool approach (i.e., 
Entry, Extend, Query) used in previous implementations was 
replaced with a single Command Executive. The Command 
Executive software provides connectivity to other DCDS 
packages and verifies the completeness and accuracy of each 
command prior to processing. It can be accessed through a 
single call from the User Interface service. It may also be 
accessed without the user interface by means of an input file. 
This provides a method of using DCDS in a batch environment. 
Labor intensive tasks, such as producing a report, running 
consistency analysis checks, or exporting the database for 


4 




* 


» 

♦ 












s 




• ••••••• 


• • 






4 


backup, may be executed without having to monitor the 
terminal. 

The new Command Executive also provides a method of 
interfacing DCDS with other COTS. Since one central 
command executive exists for all DCDS activities, interfacing 
with other tools is simplified. Each DCDS command is clearly 
identified in a formal BNF format. Interaction between DCDS 
and COTS could take place via a file of DCDS commands. 

4.2.7 User Interface Redesign 

In conjunction with the restructuring activities, TRW 
redesigned a new user interface using OSF/Motif. The goals of 
the redesign were to provide a more portable interface, to 
improve user interaction, to focus attention on life-cycle 
development, and to support follow efforts. By designing the 
User Interface using Motif, the man-effort to port to other 
platforms is greatly reduced. The User Interface from the user 
perspective is drastically different from the previous interfaces 
To improve user interaction, the need to move from tool to tool 
for inputting and retrieving information was eliminated. The 
interface is more compact and requires less traversing of menus. 
The need to learn the DCDS syntax was eliminated. The 
interface guides the user through the session and assists in using 
and understanding the methodologies. This approach reduces 
the amount of user errors. The interface provides easier access 
to system engineering information. By utilizing the basic query 
capability, menu selections have been added to allow the user to 
review basic system information with a click of a button. Again, 
the emphasis was to hide the syntax from the user in order to 
focus attention on developing the system, not learning DCDS 
syntax. 

When DCDS is initially executed, a main menu or 
control panel is displayed. This control panel will remain 
displayed unless explicitly closed by the user. The control panel 
provides display status information concerning the current 
session. The control panel contains a command line. Any 
DCDS command can be entered from the command line. The 


6 




* 




♦ 
















• •••••• 


• • 





command line was provided for experienced DCDS users. This 
command line is the only command line which appears in the 
interface. The control panel also contains menu selections 
including- 

• Database: To create a new database, load an existing 
database, archive a database, or restore a database 

• Schema: To add, modify, or delete any pan of standard or 
customized schema 

• Instances: To add, modify, or view any database instance 

• Query: To retract and analyze database contents 

• View: To view a particular set of information, such as 
traceability of requirements, physical component 
architecture, subsystem to subsystem interfaces, 
functional decomposition 

• Check: To check the consistency of the database, 
including requirements that have not been traced, 
subsystems that are not interfaced, items that have no 
source or sink. 

5.0 Important findings and conclusions 

This contact marks the end of an era for TRW and DCDS. At its conclusion 
significant strides were made to improve the environment into a commercial 
product The beta release of DCDS has been distributed to a limited set of 
customers. Initial response from the DCDS customer community was extremely 
positive User influence on the design and task prioritization is a must for DCDS. 


