







Ender*s Game 
a novel by 
Orson Scott Card 




Craftsmen Need Precision Tools . . . 
Programmers! Demand Precision Software! 


BASIC XL has twice the speed and twice 
the power of Atari® BASIC. And yet, as 
befits a fine craftsman's tool, BASIC XL is 
even easier to use and more dependable, 
while including such outstanding major 
additions as structured programming, 
string arrays, programming aids, enhanced 
graphics, and business capabilities. 

Atari BASIC is a good starting point. We 
should know. We wrote it in 1978. Buy 
BASIC XL. Take advantage of five more 
years of experience! 

So, prepare yourself for some explor- 
ation into imaginative programming with 
BASIC XL! Cartridge, excellent tutorial, 
reference manual . . . $99. 



PRECISION SOFTWARE 

A DIVISION OF OSS, INC. 

1173D S. Saratoga/Sunnyvale Road 
San Jose, CA 95129 • (408) 446-3099 


1 1 Functional, honest, and beautiful 
U describe the simple lines of a crafts- 
man s tools. For the jeweler these 
/ \ tools are an extension of the human 
/ A hand to better execute complex 
\ ) designs. For you, the Atari pro- 

grammer, Precision Software tools 
keep complications out of your pro- 
gramming while allowing you to produce 
intricate programs. 



See the complete collection of OSS 
Precision Software™ tools! 

MAC/65: The fastest 6502 macro 

assembler/editor package on 
cartridge . . . $99. 

BUG/65: A powerful debugger. On disk, 
with OS/A+ . . . $35. 

C/65: The first native mode “small c” 

compiler for Atari computers. On 
disk . . . $80. 

ACTION!: The fastest, small computer 

language ever. A feature-packed 
cartridge at only . . . $99. 

All products on disk include OS/A+ and 
also require 48 K. 

SEE YOUR LOCAL DEALER! 

Call or write for informative brochures. 

ATARI is a trademark of Atari, Inc. 

MAC/65. BUG/65, C/65, BASIC XL, OS/A+, and 

OSS PRECISION SOFTWARE™ are trademarks 

of O.S.S. INC. ACTION! is a trademark of Action Computer 

Products. 




Craftsmen Need Precision Tools . . . 
Programmers! Demand Precision Software! 


At last! A revolutionary new language 
which dramatically alters the state-of-the- 
art in programming tools. ACTIONfs in- 
credible speed and remarkable versatility 
make it the most powerful tool ever for 
Atari® computers. Since it is 100 s of 
times faster than Basic, you can even use 
it to write arcade action games. 

A straightforward, easy-to-use language 
with a superb built-in screen editor that 
allows you to put the “bells and whistles” 
into your programs. ACTION! comes in a 
feature-packed cartridge. 

See for yourself. Allow your creativity 
to soar with ACTION! Cartridge, tutorial, 
reference manual . . . $99. 



PRECISION SOFTWARE 

A DIVISION OF O.S.S, INC. 

11 7 3D S. Saratoga/Sunnyvale Road 
San Jose, CA 95129 • (408) 446-3099 


T ) Functional, honest, and beautiful 
describe the simple lines of a crafts- 
man’s tools. For the violin maker these 
tools are an extension of the human hand 
to better execute complex designs. For 
you, the programmer, Precision Software 
tools keep complications out of your 
programming while allowing you to 
produce intricate programs. 



See the complete collection of OSS 
Precision Software™ tools! 

MAC/65: The fastest 6502 macro 

assembler/editor package on 
cartridge ... $99. 

BUG/65: A powerful debugger. On disk, 

with OS/A+ . . . $35. 

C/65: The first native mode “small c“ 

compiler for Atari and Apple ® 
computers. On disk . . . $80. 

BASIC XL: Twice the power and twice the 
speed of Atari BASIC in an 
easy-to-use cartridge . . . $99. 

All products on disk include OS/A+ and 
also require 48 K. 

SEE YOUR LOCAL DEALER! 

Call or write for informative brochures. 

ATARI and APPLE II. are trademarks of Atari, Inc. and Apple 
Computer, Inc., respectively. MAC/65, BUG/65, C/65, BASIC 
XL. OS/A+, and OSS PRECISION SOFTWARE™ are trademarks 
of O.S.S. Inc. ACTION! is a trademark of Action Computer 
Products. 


BASIC XE Gives Your Atari 130XE All 
The Performance It Should Have Had In 

The First Place 



In the home computer races, the Atari 130XE stands out as a price leader. But using underpowered Atari 
BASIC on this otherwise fine machine is like racing in the Indy 500 with half your cylinders missing. 

So don’t get left at the starting line with only half an “engine.” Change to the performance leader now! Buy 
BASIC XE from OSS, the only programming language designed especially for the Atari 130XE. 


Just look at what you get for one low sticker price: 


BEST MILEAGE: With over 60,000 more bytes 
for your programs, BASIC XE lets you use all the 
memory you paid for.* 

MORE HORSEPOWER: Run Atari BASIC pro- 
grams 2 to 6 times faster.* Even with its incredible 
power, BASIC XE is compatible with Atari BASIC. 

BETTER HANDLING: With auto line number- 
ing, renumbering, program cross referencing, 
English error messages, and more. 


CLASSIC DESIGN: Show off the sleek struc- 
tured style of your own programs when you use 
BASIC XE statements like PROCEDURE, 
IF.. .ELSE, and WHILE.. .ENDWHILE. 

FREE ACCESSORIES: Get over $100 worth of 
Atari BASIC options FREE when you buy BASIC 
XE: complete Player/Missile Graphics support, 
string arrays, DOS access, SORT commands, read- 
able listings... over 50 extras at no additional charge. 


■ If you’re ready to step up to real performance ... YOU need BASIC XE now! 

■ If you haven’t written your first BASIC program... YOU need BASIC XE now! 

■ If you’re already a real pro in BASIC. . .YOU need BASIC XE now! 

■ BASIC XE may well be the best buy any Atari owner ever made. 



*Want to know more? Call or write for free brochure or ask your local dealer. 

Atari 130XE ™ and Atari BASIC ™ are U.S. registered trademarks of Atari Corporation. 


Optimized Systems Software, Inc. 

1221 B Kentwood Avenue. San Jose, California 95129 (408) 446-3099 


PERSONAL PASCAL 

Simple But Professional 


Personal Pascal is more than just another compiler, it’s a complete software 
development system! A system which is simple enough for the beginner, yet 
powerful enough for the professional. 

Simple because the most important features of the system are a mouse-click away, 
thanks to the exclusive Pascal Manager. Professional because the manager gives 
full access to a program editor, powerful compiler, fast linker, and both standard 
and GEM-oriented libraries. 

Simple keystrokes — often with easy-to-find function keys — command such 
asked-for features as automatic file backup. Enjoy the convenience of professional 
full-screen editing with block write, file insert, optional automatic indentation, 
and more. 

There’s more: A simple editor keystroke both saves and compiles your program! 
Made a mistake? Pop back into the editor and see the error location highlighted, 
complete with readable error message. Or choose professional options such as 
modular compilation, debug trace back, and more — all with a few clicks of the 
mouse. Or use options within a program for even finer control. 

Write simple Pascal programs using all the standard keywords and built-in 
functions. (Even the manual uses the same terminology as one of the popular 
tutorial books.) Or take advantage of the professional capabilities of advanced 
string handling, extended I/O, bit-wise operators, external assembly language or 
C routines . . . the list goes on. Are words such as BIOS, XBIOS, and GEMDOS 
important? Naturally, they have special meaning to Personal Pascal, also. 

Link most programs — even those written with GEM in mind — with a simple 
mouse-click or two. Or maintain a professional level of control by specifying 
multiple object files or libraries. 

Help with GEM? Of course! A very simple but very effective built-in library 
provides the best access ever to the most useful parts of GEM. Write a first 
GEM program within hours (or even minutes) of first using Personal Pascal. 

Still there’s more! OSS begins its sixth year of providing Atari users with the best 
products and the best support. Over 275 pages of Personal Pascal reference manual 
give a first line of support. And OSS stands ready to help registered owners with 
telephone, bulletin board, and CompuServe. 



Optimized Systems Software, Inc. 

1221 B Kentwood Avenue • San Jose, California 95129 • (408)446-3099 


PERSONAL PASCAL 

Data Sheet 


Pascal Manager 

■ Menu and mouse driven selections 
— Compiler options 

— Linker options 

■ Call up editor, compiler, linker 

Program Editor 

■ Simple, effective status line 
— Insert and replace modes 

■ On-line keystroke summary via HELP key 

■ Full screen, 24 lines by 80 characters 

■ Logical, simple keystrokes 

— Logical cursor keys (arrows, etc.,) and WordStar- 
like control keys 

— Move by character, line, or page 
— Optional automatic file backup 
— Optional automatic indentation 

■ Virtually unlimited copy buffer, copy block or 
move block 

— Read files into copy buffer 
— Write copy buffer to a file 

■ Single keystroke to save, exit, and compile current 
program 

Personal Pascal Compiler 

■ In general compliance with standard Pascal, but with 
several powerful and useful extensions 

■ Fast! Single pass compiler 

— May be used with RAM -disk or hard disk 

■ Flexible, usable arithmetic 

— Six byte (12-digit) floating point 

— Standard 16-bit integer 

— Extended 32 -bit long integer 

■ All standard types, records, sets, user- defined types, 
subranges, etc. 

■ All standard operators and functions plus 

— Bit-wise operators (machine level control) 

— Left and right shift functions 

■ Extended statements for default CASE, simplified 
LOOP, etc. 

■ Powerful extended STRING data type 

— String insert, delete, copy, substring search 

— Multiple string concatenation 

■ Standard I/O, including WRITE LN, GET, PUT, file 
pointers, etc., plus 

— Dynamic file name assignment 

— Random access files 

— File erase and rename 

— Controllable error handling 


■ Several kinds of external routines supported 
— Modular Pascal compilation 

— C and assembly routines callable 

■ BIOS, XBIOS, GEMDOS directly callable 

— Standard pointers, NEW, DISPOSE, MARK, etc. 
— Special BASEPAGE pointer type 
— Pointer range checking may be disabled 

■ Miscellaneous helpful routines 
— CHAIN to another program 
— Check for a keypress 

— Check memory available 
— Get command line arguments 
— Find size of a data object 

■ Much, much more! 

Pascal Linker 

■ Links all standard GEMDOS (TOS) files 
— Object code from compiler 

— Library files 

— Result is proper relocatable object code 

■ Fast! Uses memory intelligently 

■ Pascal manager provides library linkage for TOS or 
GEM applications 

GEM Library 

■ Complete, self-contained library 

— No need to buy expensive developer’s package 
— No license fees 

■ Access to most useful GEM routines 

— Alert boxes 

— Dialog boxes 

— Menubar 

— Window management 

— Window text and graphics 

— Event and messge management 

— Mouse control 

Reference Manual 

■ Actually several manuals in one 

— “How to use” manuals for editor, compiler, 
linker, manager 

— Full GEM/Pascal library reference manual 

— Full Personal Pascal language reference manual 

■ Over 275 pages, with more info on disk 

Price 

■ Disk and Documentation $74.95 




ACTION I 


DESCRIPTION: 

ACTION! is a high-level, structured programming 
language environment for the Atari Home 
Computer. 

REQUIRES: 

ACTION! requires a working knowledge of BASIC 
(or an equivalent language) and an Atari Home 
Computer with at least 16K of memory. 

OPERATING SYSTEM REQUIREMENTS: 

ACTION! will work with any DOS that supports the 
Atari Home Computer. Or use it with cassette alone. 

PRODUCT MEDIUM: 

ACTION! is available in the specially designed, 
memory-saving OSS SuperCartridge. 

DOCUMENTATION: 

ACTION! comes complete with a perfect-bound, 

205 page reference manual. 

SOFTWARE SUPPORT: 

Available separately is the ACTION! TOOLKIT (see 
reverse side) and an ACTION! RunTime package. 
ACTION! RunTime packages are available for both 
individual and commercial use. 

The ACTION! System is Made Up of Four 
Different Components: 

■ The MONITOR 

■ The EDITOR 

■ The COMPILER 

■ The LIBRARY 

The MONITOR Functions: 

■ EDIT, COMPILE, and RUN programs or WRITE 
your compiled program to disk or cassette 

■ EXECUTE commands immediately 

■ Select compiler and editor OPTIONS 

■ DISPLAY memory, Exit to DOS, and more 


The EDITOR Features: 

■ 240 characters per line, two windows, and fully 
scrolling display 

■ READ and WRITE text files to/from disk, cassette, 
printer, etc. 

■ UP and DOWN by lines or pages, LEFT to RIGHT 
by characters or to end of line 

■ MOVE and COPY text blocks, FIND and 
SUBSTITUTE text 

The COMPILER Features: 

■ Compilation from either memory, disk or cassette 

■ Ability to INCLUDE library files 

■ Compile time substitution via DEFINE 

ACTIONI s Built-in Library Includes: 

■ I/O routines: PRINT, PUT, INPUT, GET, OPEN, 
CLOSE, X10, and more 

■ Graphics routines: GRAPHICS, SETCOLOR, 
PLOT, DRAWTO, FILL, POSITION, SOUND, 
PADDLE, STICK, and more 

■ String handling routines: String COPY, String 
COMPARE, String ASSIGN 

■ Miscellaneous routines: RANDom, BREAK, 
ERROR, and many more 

The ACTION! Language: 

Data types supported: 

■ 8 bit BYTEs (or CHARacters) 

■ 16 bit INTegers and unsigned CARDinals 

■ ARRAYS of and POINTERS to BYTE, INT, 
and CARD 

■ User-defined TYPEs (records) and POINTERS 
thereto 

Language Constructs: 

FUNCtions (which can RETURN values) and 

PROCedures 

■ IF. .. THEN. ..ELSEIF... ELSE. ..ENDIF 

■ DO.. .UNTIL, WHILE, and FOR (with STEP), all 
with optional exits 


ACTION! TOOLKIT 


TESTIMONIES 


DESCRIPTION: 

The ACTION! TOOLKIT is a programming aid 
designed to assist the ACTION! programmer in 
maximizing the capabilities of the ACTION! 
language. 

REQUIRES: 

The ACTION! TOOLKIT requires an ACTION! 
SuperCartridge and any DOS that supports the Atari 
Home Computer. Memory Requirement — 48K. 

PACKAGING: 

The ACTION! TOOLKIT is available on diskette 
only and comes complete with instruction manual. 

INCLUDES: 

■ Player/Missile graphics routines 

■ A floating point package 

■ A sorting routine for sorting BYTEs, CARDs, 
INTs, and string data 

■ Routines that allow dynamic runtime memory 
manipulation 

■ A routine that will return the absolute value 
of an INTeger 

■ Routines which implement advanced I/O 
operations 

■ A music demo which creates a playable organ 

■ Demo programs 

■ Games 

■ And more! 


“For those who have found BASIC to be too slow 
or assembler too difficult, ACTION! is the logical 
alternative. ACTION! programs can increase speed 
from 50 to 200 times that of BASIC.” 

Jerry White, ANTIC, February 1984 

“Assembly programmers will appreciate the 
extraordinary efficiency of the ACTION! compiler. 
The code... uses no special stacks of indirect pointers 
to control the flow of execution, just pure in-line 
machine code with an occasional JSR into a cartridge 
library routine. This is “native mode” compilation 
at its best: Simple, clean, and very, very swift. The 
output of a typical C or PASCAL compiler looks like 
spaghetti by comparison.” 

Brian Moriarity, Analog Computing, Issue 16 

“Programs written in ACTION! very much resemble 
those written in PASCAL, both in elegance and 
efficiency.... These features mean that well-written 
programs in ACTION! will be easy to read and 
maintain.... ACTION! has the best ratio of 
sophistication to performance of any language I 
have seen on any microcomputer,” 

William C. Covey III, Educational Technology 

“ACTION! is a structured, compiled language 
similar to PASCAL and C. It features an excellent 
screen editor with two windows, a monitor program 
and a procedure and function library.... The ACTION! 
editor is so well designed that, with minor 
modifications, we would consider it a product in its 
own right. The editor alone is worth the price of the 
language. ACTION! is a well-integrated package. 
Intermediate and experienced programmers will 
find it easy to write ACTION! programs quickly.” 

Harold E. Striepe, InfoWorld’s Essential Guide to 
Atari Computers, 1984 



Optimized Systems Software, Inc. 

1221 B Kentwood Avenue, San Jose, California 95129 (406) 446-3099 


BASIC XL 


DESCRIPTION: 

BASIC XL is a compatible extension to Atari BASIC 
that adds dozens of new commands and functions. 
BASIC XL is LOAD compatible with Atari BASIC 
and supports all Atari BASIC commands. 

REQUIRES: 

BASIC XL requires no previous programming 
experience and will work with any Atari Home 
Computer with at least 16K of memory. 

OPERATING SYSTEM REQUIREMENTS: 

BASIC XL will work with any DOS that supports the 
Atari Home Computer. Or use BASIC XL with 
cassette alone. 

PRODUCT MEDIUM: 

BASIC XL comes to you in the specially designed, 
memory-saving OSS SuperCartridge. 

DOCUMENTATION: 

BASIC XL comes complete with a perfect-bound, 
fully-documented reference manual. 

SOFTWARE SUPPORT: 

Available separately for BASIC XL is the BASIC XL 
TOOLKIT ("see reverse side). Available for beginners, 
is our highly-accredited tutorial “30 Steps to 
Understanding BASIC XL.” 

SUMMARY OF NEW FEATURES: 

■ Dazzling Player/Missile Graphics 

■ Improved String Handling 

■ Complete Program Control 

■ Increased Program Development 

■ Versatile Input/Output 

■ Special System Options 

Player/Missile Graphics Support: 

■ Commands include: PMCOLOR, PMMOVE, 
PMGRAPHICS, PM WIDTH, and MISSILE 

■ Ability to efficiently MOVE a large player 
vertically with a single command 

■ Detect collisions with the specially designed 
BUMP command 


String Handling Capabilities: 

■ Support of String Arrays 

■ String functions include: LEFT$, RIGHT$, 
and MID$ 

■ A FIND function, to find a match of one string 
within another 

Program Control: 

■ Better program control with statements like 
IF...ELSE...ENDIF, and WHILE... END WHILE 

■ Move Bytes around at assembly language speed 
with BASIC XL’s MOVE command 

Special Program Development Commands: 

■ Use the NUM and RENUM commands to enable 
BASIC XL’s automatic line numbering 

■ Run lengthy programs 2 to 4 times faster with 
BASIC XL’s specially designed FAST mode 

■ Make debugging easier with the TRACE/ 
TRACEOFF commands and English error 
messages (no more looking up what “ERROR 
133” is) 

■ Get a cross-reference of program variables in use 
with the LVAR command 

Comprehensive Input/Output: 

■ Handles DOS commands like DIR, PROTECT, 
ERASE, and RENAME right from BASIC XL 

■ Use RGET and RPUT commands for record I/O 

■ Support a PRINT USING command for 
sophisticated output formatting 

■ Manipulate data blocks from a device or file 
with BPUT and BGET commands 

■ Utilize the TAB function to make column 
printing easier 

Special System Options: 

■ Catch run-time errors and lines using the 
ERR function 

■ Look and change two bytes instead of one with 
DPEEK and DPOKE 

■ Use hexadecimal numbers at any time or get the 
hexadecimal equivalent of decimal numbers with 
the HEX$ function 


BASIC XL TOOLKIT TESTIMONIES 


DESCRIPTION: 

The BASIC XL TOOLKIT is an excellent 
programming aid, designed to work in conjunction 
with the OSS BASIC XL SuperCartridge. 

REQUIRES: 

The BASIC XL TOOLKIT requires a BASIC XL 
SuperCartridge and any DOS that supports the Atari 
Home Computer. Memory Requirement — 48K. 

PACKAGING: 

The BASIC XL TOOLKIT is available on diskette 
only and comes complete with a comprehensive 
instruction manual. 

HERE'S WHAT'S INCLUDED: 

■ The BASIC XL TOOLKIT comes with a copy of the 
BASIC XL RunTime package. This means that you 
can run BASIC XL programs without having the 
BASIC XL SuperCartridge present in your computer. 

■ The BASIC XL TOOLKIT is filled with sample 
BASIC XL programs that are designed to show off 
the speed and versatitlity of the BASIC XL 
language. Programs such as these will aid the 
serious programmer in writing quality programs 
with professional results. 

— PHONE: a simple data base manager using 
indexed files 

— DISKIO: direct access to disk sectors 

— LEM: a lunar lander using Player/Missile 
Graphics 

— CIRCLES: a simple circle drawing routine 

— SNAILS: a simple game demonstrating some 
of BASIC XL’s Player/Missile Graphics 

— Plus Much More! 

NEW EXTENDED COMMANDS: 

■ The BASIC XL TOOLKIT adds these new 
Extended commands to the already packed BASIC 
XL language. 

— PROCEDURE: defines a block of 
PROCEDURE code 

— EXIT: declares the end of a PROCEDURE 

— CALL: used to CALL a PROCEDUURE 

— LOCAL: defines LOCAL variables within 
a PROCEDURE 

— SORTUP: SORTS string arrays in ascending 
order 

— SORTDOWN: SORTS string arrays in de- 
scending order 


“If you have any designs at all on writing your own 
programs, run, do not walk, to your nearest dealer 
and buy a copy of BASIC XL. It is flat out one of the 
best additions I have ever found for my computer.” 

Rob Peck, MC2 Michigan Computer Consortium , 
February 1984 

“BASIC XL is the fastest and most powerful version 
of BASIC available for Atari Computers. If you 
program in BASIC, or if you would like your BASIC 
programs to run faster, I highly recommend this 
language....A truly outstanding computer deserves 
a truly outstanding BASIC. This is the language that 
should be built into Atari Computers.” 

Jerry White, ANTIC , March 1984 

“BASIC XL is a fast and powerful extension of Atari 
BASIC, totally compatible with virtually all 
software. Its many features make programming 
easy, especially games that require player/missile 
graphics. For people writing business software or 
translating existing programs from other computers, 
the new string arrays and other string handling 
features make the task manageable. BASIC XL is a 
truly professional language that should become 
standard in all future Atari computers. Overall 
Rating A.” 

The Addison -Wesley Book of Atari Software 1984 

“I have to say you have accomplished what I hoped 
for and far exceeded my hopes. I had hoped for a 
descent BASIC but you have produced what appears 
to be a GREAT BASIC.” 

Paul E. Phelps, Chaplain (Maj), USA 


Optimized Systems Software, Inc. 

1221 B Kentwood Avenue, San Jose, California 95129 (408) 446-3099 


THE WRITER'S TOOL 


DESCRIPTION: 

THE WRITER’S TOOL is a complete word processing 
package designed for anyone who wants to write. Its 
ease of use and flexibility are excellent supporting 
features. But the most significant feature of THE 
WRITER’S TOOL is its capability to produce 
“professional looking” documents. 

REQUIRES: 

THE WRITER’S TOOL requires no previous 
word processing experience and a Atari Home 
Computer with at least 48K of memory. An Atari 
compatible disk drive is also required to operate THE 
WRITER’S TOOL. 

OPERATING SYSTEM REQUIREMENTS: 

THE WRITER’S TOOL is so versatile, that it will 
work with any Atari compatible DOS in any density. 

PRODUCT MEDIUM: 

THE WRITER’S TOOL comes to you on an OSS 
SuperCartridge and a two-sided disk. 

DOCUMENTATION: 

THE WRITER’S TOOL comes complete with 
an excellent tutorial, reference manual, and 
reference card. 

SUMMARY OF KEY FEATURES: 

■ Supports all popular printers 

■ Includes an integrated spelling checker 

■ Contains a mail merge subsystem 

■ Complete and easy-to-follow tutorial 

PRINTER SUPPORT: 

■ THE WRITER’S TOOL comes with a pre-written 
set of printer support files for most popular 
printers, including printers by: 

— Atari Corporation 

— Epson, Inc., and compatibles (Gemini) 

— C. Itoh, Ltd., and compatibles 

— Okidata 

— And more! 


PRINTER SUPPORT (Continued): 

■ THE WRITER’S TOOL also includes a special 
file that will allow you to create your own custom 
printing file for virtually any printer. With THE 
WRITER’S TOOL you will be able to utilize the 
special features of your printer. 

FEATURES: 

■ Typeover and Insert modes 

■ Delete and Restore 

■ Search and Replace 

■ Headers and Footers 

■ Page numbering 

■ Centering 

■ Pica, Elite, Condensed, and Proportional 
font support 

■ Micro spacing 

■ Subscripts and Superscripts 

■ Split justify 

■ Soft hyphen and hard space 

■ Optional word wrap 

■ Outdenting 

■ Boldface and underline 

■ Straight or ragged right justification 

■ Plus more! 

SPELLING CHECKER: 

■ THE WRITER’S TOOL spelling checker is 
designed to quickly scan your document and 
flag and correct any words that are misspelled. 

■ Includes a 20,000 + word dictionary. 

■ Allows you to create any number of custom 
dictionaries for those special documents that 
may contain technical or unusual words. 

MAIL MERGE SUBSYSTEM: 

■ Use the built-in mail merge subsystem to give your 
letters that “personal” touch. 

■ Include files from data bases, such as SynFile + , 
to save yourself valuable time. 


TESTIMONIES 


“THE WRITER’S TOOL is probably the best 
compromise between total word control and ease 
of use that I’ve seen in a word processor. THE 
WRITER’S TOOL is loaded with features; in fact, it 
has most of the features found in the “professional” 
word processors, plus a few tricks of its own. But it’s 
an easy package to learn and even easier to use. Is 
there anything I don’t like about THE WRITER’S 
TOOL? Actually, no....” 

Bob Curtin, ANALOG Computing, March, 1985 


“THE WRITER’S TOOL goes beyond most home 
computer word processors in its amazing breadth 
of features while still remaining easy to learn and 
use. At last I’ve found a piece of software which will 
support anything my printer is capable of, and yet 
is still easy to use. Bottom line — If you have a 
printer that’s capable of some tricks, and your word 
processing needs go beyond simple letter writing, 

I strongly urge you to visit your software dealer 
and give THE WRITER’S TOOL a look. Do this 
even if you already own a word processor, this is 
one hot product!” 

Bob Peck, The Michigan Computer Consortium 
Magazine, December, 1984 


“Up to this point, I have been impressed with the ease 
of using this program. A statement on the manual- 
cover claims that THE WRITER’S TOOL is the most 
natural and complete word processor available for 
the Atari. They may be right. The author is to be 
congratulated for writing one of the best computer- 
related manuals to be had. This is a full-function 
word processor, that is incredibly easy and natural 
to use. This is the best word processor that I have 
used 

on the Atari.” 

Jeff Golden, Dallas ACE Newsletter, January, 1985 



Optimized Systems Software, Inc. 

1221 B Kentwood Avenue, San Jose, California 95129 (408) 446-3099 


Personal Prolog. 


A . * * A 

The Language for A A 


Intelligent Programming 



Discover how easy the world of Logic Programming can be with 
Personal Prolog, a sensational new "Fifth Generation" language 
for your Macintosh. Personal Prolog is more than just another 
programming language: it's a complete multi-window programming 
environment- with integrated editor, interpreter, debugging aids, 
and all the built-in support you need to educate yourself in 
the world of Artificial Intelligence. 

Because Personal Prolog is fully integrated with the Mac- 
intosh desk-top environment, it's ease of use is greatly en- 
hanced by allowing you to utilize pull-down menus. The 
Editor conforms to the standard Macintosh interface and 
allows you to edit up to seven windows at one time. 

Personal Prolog also extends the standard 
language by providing an extensive interface to the 
Macintosh ToolBox, allowing you to add graphics and mouse control to your Artificial Intelligence applications. 


Use Personal Prolog to draw conclusions, interpret human language, create expert systems, examine 
mathematical logic, and much more! Buy Personal Prolog today and discover why Prolog is fast becoming a 
worldwide favorite... the Language for Intelligent Programming. 


Only ... $74.95 


Requires Macintosh (512K) 


The following is an extraction from a published review of Personal Prolog: 

“Personal Prolog is a nicely designed, well-implemented version of the increasingly popular AI programming 
language. Personal Prolog is aimed at those who want to learn PROLOG and specifically not at developers. As 
such, it offers one of the best price/performance trade-offs I've seen in any dialect of PROLOG. As a Macintosh 
product, Personal Prolog draws very high marks. It adheres closely to Apple's standard Mac user interface, which 
will make it a very comfortable environment for first-time PROLOG users. The pull-down menus, dialog boxes, 

windowing, scroll bars, and other familiar Mac features are used as expected. In addition, Personal Prolog gives 

direct access to all the Mac's graphics and QuickDraw routines. Making graphics calls in Personal Prolog is as easy 
as making calls directly to the routines but they are preceeded by an @ sign. 

Personal Prolog’s menus are clean, easy to understand, and for the most part operate in one step (that is, they don't 

invoke further layers of menus but instead carry out functions). The editor used in Personal Prolog is the Macintosh 
text editor, which permits selection, movement, alteration, and deletion of text using the mouse and keyboard in 
combinations comfortable to the Mac user. 

On the whole, Personal Prolog is a very good implementation of the language for the Macintosh. It is consistent, 
easy to use, predictable, and well thought out. The bottom line is if you have a Macintosh (or soon an Atari ST) and 
you're curious about PROLOG, you don't have to wait for Borland to get around to putting Turbo Prolog on your favorite 
system. Personal Prolog is sufficiently powerful for a solid learning experience, offers a strong Mac-like interface, 
and provides excellent performance for the price. I highly recommend it.” 


Dan Shafer, “Personal PROLOG,” COMPUTER LANGUAGE Volume 3, Number 9 (September 1986) 


iA£^ 


T* 


Optimized Systems Software, Inc. 


1221 B Kentwood Avenue, San Jose, California 95129 (400) 446-3099 



Personal Prolog™ 


The Personal Prolog System 

• Complete Macintosh Interface compatibility 

• Utilize up to seven Editing windows 

• Unlike most versions of Prolog, Personal Prolog includes a separate History Window 

• “Ask” Window allows you full query control by providing you with multiple spy options 

The Personal Prolog Language 

Parts of Speech 

• Constants: Numbers, Strings, and Atoms 

• Variables: Standard naming conventions, plus decompiled programs retain your assigned names 

• Symbols: Flexible usage. The Personal Prolog standards are: “if’, “and”, and but you may 
use various equivalents, including “,” and “.”, respectively 

Speech Syntax 

• The Data Base: Unlike most Prologs, the Data Base itself is an accessible list thus 
need for ’functor' and providing a high degree of flexibility 

• Lists: No restrictions on the elements of a list; mixed lists are easy to process 

• Predicates and their Clauses: Complete predicates or individual clauses may be 
deleted from the Data Base using standard built-ins 

Personal Prolog Built-ins 

Data Base Management Built-ins 

• Search the Data Base for a specific predicate or clause in a predicate 

• Control the matching of predicates 

• Insert or Remove both rule and fact clauses from a predicate 

• Provides a method for reexecuting a call list that would otherwise fail on backtracking 

Term Management Built-ins 

• The ability to count the number of elements in a list 

• Determine the type (class) of a term (i.e., number, atom) 

• Convert a non-list term to a list or vice versa 

Term Comparison and Math Built-ins 

• Determine the absolute value of a number 

• Compare the values of two constants 

• Determine the remainder left over when a number is divided by another 

• Determine the product or quotient in multiplicative operations 

• Perform the additive operations (addition, subtraction) 

Input and Output Built-ins 

• Read clauses from a disk file and compile them into the Data Base 

• Read or Write a character to a channel opened for input or output 

• Print the hexadecimal equivalent of a number to a channel opened for output 

• Open a channel to a disk file for input from or output to that file 

• Decompile a predicate from the Data Base and prints it to a channel 

Personal Prolog Graphics 

• Special Personal Prolog graphics features 

• Access to most useful Macintosh Toolbox routines 

• Access to both Text and Graphics Windows 

• Utilize different variations of the Graphics Pen 

• Drawing simple shapes (circles, rectangles, etc.) has never been easier 

• Construct such complex shapes as Polygons, Regions, and Pictures 

• Complete Mouse Control 

Complete With Documentation 

• Get started immediately with a special “Hands On” section designed for people who have never used 
Prolog 

• Also includes a very comprehensive reference manual, complete and fully indexed 

• Special Graphics section for including graphics within your Personal Prolog programs 


sidestepping the 


inserted into or 


Personal Prolog ... 


The Language for 
Intelligent Programming 



Discover the world of logic programming with Personal Prolog, 
a sensational new “Fifth Generation” language for your Atari ST, 
from the people at OSS. Personal Prolog is more than just another 
programming language: it’s a complete multi-window programming 
environment — with integrated editor, interpreter, debugging aids, and all 
the built-in support you need to explore the world of artificial intelligence. 

Personal Prolog is such a flexible language that it will accept most forms of 
Marseilles and Edinburgh syntax. Because it is fully integrated with the GEM 
desk-top environment, Personal Prolog is easy-to-use, with pull-down menus 
and full mouse control. 

Personal Prolog also extends the standard language by providing you with an 
extensive interface allowing you to add graphics and mouse control to your Arti- 
ficial Intelligence applications. The Interpreter supports incremental compila- 
tion and is significantly faster than other Prolog systems designed for the IBM 
PC. Editing a program has never been easier, as the Editor is both easy-to-use 
and extremely efficient. 

Use Personal Prolog to draw conclusions, interpret human language, create 
expert systems, examine mathematical logic, and much more! Buy Personal 
Prolog today and learn why Prolog is fast becoming a worldwide favorite.... 
the language for intelligent programming. 


Special Introductory Price $74.95 



Optimized Systems Software, Inc. 



1221 B Kentwood Ave., San Jose, CA 95129, (408) 446-3099, Telex: 5106016124 




BASIC XE FROM 

O.S.S. 

Ultimate BASIC for 8-bit Atari 

bv CHRISTOPHER CHABRIS 

J 


B nV B hen Atari shipped the 130XE computer in 

April 1985, Optimized Systems Software 
(OSS) seized the opportunity to create the 

w W first programming language designed for the 
expanded 128K memory of the XE. The result is car- 
tridge/disk BASIC XE, the fastest and most powerful 
BASIC available for 8-bit Atari XL and XE computers. 
NOTE: BASIC XE will not run on Atari 400 or 800 models. 
Users of these earlier computers still have BASIC XL avail- 
able from OSS. 

Optimized Systems Software was the first independent 
company to write softw are for Atari personal computers. 
Bill Wilkinson and his programmers created the disk file 
management system of DOS 1.0, 2.0 and 2.5, as well as 
Atari BASIC and the Atari Assembler Editor cartridge. But 
they didn’t stop with softw are just for Atari to bundle with 
its computers. OSS w 7 ent on to publish the best line of Atari 
programming languages and tools including MAC/65, 
ACTION! and BASIC XL. 

BASIC A + was the first OSS enhanced version of Atari 
BASIC. Unlike the Microsoft BASIC released by Atari, 
BASIC A+ was compatible with source code that ran 
under Atari BASIC, except for a few minor exceptions. 
BASIC A + w 7 as available only on disk, but the subsequent, 
improved BASIC XL came in super-cartridge form, using 
the technique of bank selection to cram 16K of ROM code 
into 8K of address space and save 8K for programs. 

Now 7 comes BASIC XE, one of the largest programming 
languages for the 8-bit Atari computers. Its 27K of code 
is divided between a 16K super-cartridge and 11K of exten- 
sions that can be loaded from disk when the cartridge 
is booted. If these optional extensions are not present on 
the boot disk, BASIC XE still functions— but w ithout some 
of its extra features. With or without the extensions, the 
language occupies 8K of address space. 


CUSTOMIZED STATEMENTS 

BASIC XE is rich in commands and functions, with 140 
built-in keywords. I say “built-in” because the language 
makes it possible for programmers to create named proce- 
dures that accept parameters — in effect, adding statements 
to the language. This enhancement completes the evolu- 
tion of Atari BASIC into a tool for modern programming. 
The IF:ELSE:ENDIF and WHILE.ENDWHILE constructs 
(introduced in BASIC A + ) allow 7 for Pascal-like structured 
programming style, and the new PROCEDURE: LOCAL: 
EXIT trio coupled with CALL give the programmer modu- 
lar design and recursion capabilities in an interpreted 
language. 

It is now 7 possible to create libraries of often used 
PROCEDURES quite simply. Before BASIC XE, the 
programmer had to precisely define which variables con- 
tained values to be passed to a subroutine, which varia- 
bles would change during its execution, and which 
variables would contain values returned from the sub- 
routine. A chore, and difficult to debug! Here's a sample 
PROCEDURE definition and execution in BASIC XE: 

30000 Ren CALCULATE F CK) WHERE F IS A 
POLYNOMIAL WITH COEFFICIENTS IN PC) 
30010 Procedure "EVALPOLY" Using Degre 
e , ! P () , K : Loca 1 E « V 

30020 For E=Degree To 0 Step -1 

30030 V=V+ (K^E)*P(E) 

30040 Next E 

30050 Exit V 

These lines would fall near the end of the program, 
usually beyond the END statement . They define a new 
procedure named EvalPoly (Evaluate Polynomial) which 
receives three arguments: Degree, the degree of the func- 
tion; P( ), an array containing the coefficients in ascend- 
ing order; and X, the value at which to evaluate P. Note 

continued on next pase 

~33 


January 1986 



that non-scalar parameters are preceded by an exclama- 
tion point. 

LOCAL creates the following variables as temporary 7 sca- 
lars. Other variables with the same names are not affected, 
and the local variables disappear when an EXIT is encoun- 
tered. The EXIT statement causes the procedure to return 
V (making the procedure really a function!). EvalPoly 
could be called as follows: 

GALL “EvalPoly” USING 4,IF( ),2.5 TO Y 

This statement would evaluate the fourth degree poly- 
nomial represented in array F at the value 2.5 and store 
the result in variable Y. The beauty of this parameter pass- 
ing and returning scheme is that it is totally independent 
of line numbers and variable names. It is portable like Pas- 
cal procedures or C functions. 

I forsee the availability of specialized libraries to add 
capabilities to BASIC XE. For example, you could collect 
procedures to do matrix algebra or create various graphics 
objects. Since LOCAL can only create scalar floating point 
variables, BASIC XE is particularly suited to mathemati- 
cal applications. 

SPEED TO SPARE 

This brings us to another new feature of BASIC XE— its 
fast mathematics routines which replace those built into 
the XL/XE Operating Sy r stem, when the extensions are 
loaded. According to OSS, these routines are more accurate 
and twice as fast as those in the FastChip from Newell 
Industries, which are supposed to be 30% faster than 
Atari’s built-in routines. 

BASIC XE also features the semi-compiled mode of 
operation introduced in BASIC XL. When the FAST com- 
mand is encountered at the beginning of a RUNning pro- 
gram, all line number references are converted into 
absolute addresses, eliminating many time-consuming 
searches through the program. OSS claims that these two 
enhancements make BASIC XE run two to six times faster 
than Atari BASIC. 

To test BASIC XE’s speed, I used the off-the-shelf Atari 
BASIC software B/Graph, from Batteries Included. Among 
B/Graph’s statistical capabilities is a program to do regres- 
sion analyses. I felt this to be a good test because it uses 
extensive iterations and floating point calculations— BASIC 
XE’s strengths. Using the sample datafile PLANET, I fol- 
lowed the instructions on pages 113 — 114 of the B/Graph 
Manual and obtained the follow ing completion times for 
different versions of BASIC: 

Atari BASIC, rev. C 30 seconds 

BASIC XL, vl.03 12 seconds 

BASIC XE, v4.10 7 seconds 

The first was tested under Atari DOS 2.05, the others 
under OSS DOS XL 2.30p. BASIC XE without the exten- 
sions loaded performed similarly to BASIC XL, and using 
EXTENDed mode made no difference in any case. 

So BASIC XE does offer significant improvements in 
speed w hen running Atari BASIC programs. Exercising its 
features from start to finish in the program development 


process should yield shorter, more elegant and readable, 
and still faster code than possible with any other BASIC 
for the Atari. And it will take less time to write the pro- 
gram because BASIC XE’s powerful commands take the 
place of many machine-language subroutines. All this is 
possible on either the 1200XL, 600XL w ith 64K, or 800XL 
computers. But w ith the 130XE, you can do even more. 

130XE SPECIALS 

The new EXTEND command instructs BASIC XE to uti- 
lize the extra 64K memory available in the 130XE’s secon- 
dary 7 bank. Your program itself is relocated into this space. 
Main memory 7 is reserv ed for variables, the stack, and other 
related items. (Page Six is always available for user pur- 
poses.) In EXTENDED mode, depending on your Disk 
Operating System, there will be approximately 63K avail- 
able for program and 32K available for data. 

In this way, BASIC XE lets you take full advantage of 
your 130XE’s memory w ithout worrying about the nity- 
gritty details of memory management. However, if you 
w ant to use your extra 64 K in another w ay besides a RAM- 
disk, BASIC XE allows you to specify an optional bank 
number in the POKE, DPOKE, PEEK, DPEEK, MOVE, 
BGET and BPL T T commands. When referring to an address 
in the range #4000-$7FFF, the secondary bank’s “access 
window”, banks 0-3 are w ithin that bank and the default 
bank 4 indicates main memory 7 . This makes memory’ man- 
agement convenient compared to tw iddling the PLA PortB 
bits. 

BASIC XE’s other advanced features are, as thev sav, too 
numerous to even list here completely. They include, 
among others, commands to sort arrays into ascending 
or descending order, Microsoft BASIC string handling, 
OSS’s classic file manipulation and Player/Missile graphics 
commands, bit-manipulation operators, hexadecimal 
numeric support, and program development aids like disk 
directory, renumbering, and cross-referencing. 

What should be added to BASIC XE? Well, using the 
5K remaining in my w ished-for 32K cartridge, OSS could 
add the REPEATUNTIL construct, integer variables, 
dynamic memory allocation, and advanced sound 
control — to name just a few possibilities. And of course, 
some sort of run-time library or compiler w ould be nice. 

BASIC XE is an excellent product. It’s the language that 
should have been built into the 130XE. OSS is a company 
that has always supplied the highest quality systems soft- 
ware for all Atari computers, but they have outdone them- 
selves w ith this one. One can only wonder how r thev will 
top BASIC XE. I hear they are developing for the ST 
machines. 

BASIC XE 

Optimized Systems Software 
1221B Kentwood Avenue 
San Jose, CA 95129 
(408) 446-3099 
For XE/XL Ataris 
Cartridse plus disk 

$79. Q 


34 


ANTIC, The Atari Resource 


Optimized Systems Software, Inc. 

tm 1221 B Kentwood Avenue, San Jose, CA 95129 (408) 446-3099 

* 

To: Registered Personal Pascal Customers 

From: Customer Support Group 



Please find enclosed disk containing supplemental documentation for Personal 
Pascal. Included on this disk are many sample programs showing how to use 
Personal Pascal for various applications. 

Ve hope this will help you take full advantage of the power and flexibility 
of Persona 1 Pasca 1 . 

We realise that the documentation for Personal Pascal does not cover all 
posfifaie situations. To help rectify this, we have set up our own BBS 
system for use by our customers. This BBS system has many examples covering 
a wide variety of subjects. Ve generally try to give examples on the most 
common problems. You may also use the BBS to leave messages to the Customer 
Support Group after hours and on weekends. The number to call for the BBS 
is (408) 446-3451, 300 or 1200 Baud 24 hours / 7 days a week. 

If you have an account with CompuServe, you may send E-MAIL to us at 
72477,3703. There are many example programs written in Personal Pascal in 
the ATARI16 sig; Bata Library 3 (DL3). Use the BROWSE command with a 
keyword of PASCAL or OSS. 


Regards , 

Optimized Systems Software, Inc. 


Michael Curry 

Technical Support Representative 



mm 

£ 


Ij 

SO 
« O' 


1 

CD 

3 

<0 

xr 


S*Sf S 

Soz z 

Z Z O O 


« 

« 

t. 

’ E J 

r 5 



2 * 


,z 

UJ 

Q. 

O 


S 

* l§E 

t-qls 

,! 5 d 2 § 

nOU(D2 

Q. Q. £L Q. CL 



S 

© 

<0 


S 

-7® 

•* ■■— V - 


fell 

w fl) rtj 




2 ° 9 

®o z 
K >— 2 

UJ UJ O 

CO <0 <0 
« 


c c 

£ © 

c* c 

*e— 

% % 
UJ 3 
CD CO 


% 

o uj 

< c o 


® 

« 

cc 

o 


CO 

3 

I 

« 

UJ^ 

> < 


& 

® 

(0 

III I 

ill! 


& 

&s 


© _ __ 

"Sir a= 

a 8 « s 


■o ro © 

«o 2 

UJ t-~— 
**UJ 


UJ o O CC d ? <fO J55 fr WO<(/)Q 
>-J-J_] 00 Q.W<UJUJii 50 Q.CCjz 
ffiOOOOOOOQQQOQQQOQUJUJ 


© UJ 

2d 

—1 

O Q 


UJ UJ 
« * 


Q> O 

E E 

CO © 

c c 
© © 
if= «: 

CC UJ 
UJ CO 
h- < 

z cc 

UJ UJ 


s 

© 

© 

ll 

<D CO 

7 °- 

II m 

cofc 

cc 

o 

u_ 


<0 


S-lfvis 

m C 


© 

CO 


2 «co 


co 

© c „ w 
c -= 2g 

CD — — 
*3 


_ I 
O CL 
CO H < 
UJ O O CC 
OOOO 


E £ 

Ul Ul -s © 

x 10 ^ 

k h . . • ; 

S-S-S-mu. 

a a 8 UJ Q 
LL LL IL 



: .>^>« 5 $© 5 "" 9 >Sr 


h- 

3 

a. 


« 

$ 

& 

® 

CO 

S' 

© -» 

« 

UJ 


s: 

© 




g- s 

g © 


© 


is 


3 

CL 


h* 

UJ 


UJ _ 


h- h* i— 

3 !SS 

> — 1 — ' I 


h* 

CO 


J Q 

< 


. 5 H 
< UJ z 
05 E 


© 


7? cc 


S 

© 

& . 1 
8*-®. 
C © T 3 

all 

— UJ 

co > ; 



Z( 3 £ 0 ;Ph<M 
CC CO CO COCO CO CO P 3 


© < CO >- 
— •> > CO 


C/> 

z 

O 

F 

o 


© 

© 

o O 
UJ P 

cc CO 

LL X 


a 

— 2 — E S^ 

-a&® 9. a. © -o 
x * © ^ ©i-SS. to 

2 2 so 

?ZOQ Z < DC UJ 
5 ujO<uj 2 j-uj 

iJjQ.Q.Q.Q.1 



_ ^ ^ /n 

coxoz 2tr OSQujxor 

CDOCOh^I-lOCLOCX 

<<<<CDOOOQUJUJ 



OSS Products 

are available from this dealer 








§s? 

Is 

P *< 


CD 


3 

0 

Q. ~ 

cd g 
cl 
8 ® 

5 ® 

(O C 

|85 
S “O 
^ a. 
§a 

O O 
c 

P •• 

§. o 

s f 

CO 0 > 

® 3 

1 

p 


|S 

X CL 

m__ 

So 
m ^ 

I s. 

3 c 

CD 

3 CD* 
O 0) 

^ s 

- *ft 

P P 
O ** 

8 g 

8 £ 

58 ! 

& p 
< o P 

=T o 

£* 

8 o 

=5 0 ) 
TD 9 * 

< 8 - 

CO • “< 


§2 511 

5-0 » 3- o 
® £( 0 § 7 
S o So | 

3 <6 3 j? 2 
®°S$S 

J o ^ 

£ 3 CD 

9 o| S* 2 ?* 

O ^.CQ CD O 

•o =£ (D 
CD 0 ) 

Iw Q. 
O * II 
^ 0 ) =£ 

CD Q. CO 

o S 5' 
£g.o 

» o 1 

fig 

CQ CD v< 

CD - o' 
S 3 O 

5 CD O' 
O) 0 ) 3 

cn p p. 
m 9 *< 


cr cd 

© T 5 
P 3. 
=* 3 
CD z? 
O © 


8 . 


8 

> CD 
3 3 
Q.^ 

O Q. 

3 P 
CD -Q 

3 p 
o *< 

S'g 


p p co“o o* 09 

3 O. ® § • ® § 

cd ^ I rr *■ r 

g- 3 » “ -a a> 
8 - 8 » « w 
®3 8 ® ~ 8 - 

5T o 3 - g 9 

CO ®- ® ? -O %. 

2 ® -a ® a> ® 

0 =? cd » cr » 

? “Iff a 
22 = 1*8 
©§ 3 * a-o 

So-S 3®. | 
« «' |fio® 

55- 2 . #o«: 

” P> - 3 5 £ 

“'S a>< ?r =•' 

a “ o, ® =• 

1 ®tr-g o : i 
9-9 §■» § 8 - 


oa>z 

CD -o O 

ST®.* 

CL CD © <Q 

««9. o 2. 

CD 3 O ^ 

p co g 

i«f 

3 O CD 

cr i? 

bi CD r* 

1 . 1 
M “ O® 

»|3c 

0 0 “I * © 


CD 

3 

o 

CO 


'-=■ c 

c CD 


CO 

CD 3 /s J 5 i 

i.5 ® ® 


CD CD Q. ® Q. -h 

3r r+ — - 1 — . m 


3 w CD 

co -=; 
c> *< 
p cd 


3 -J 

j 5' CD 
c < 
CD CD 


<0 =~ CO 3 C 

*n CD 3 O (D ^5 
X CD CQ 3 — CD 

< 8 g® 1 JS 

3 ? | 3 2 CO 
3 3 -8 <9 =T® 


c 

0 

01 


*< 

__ 

„ _ _ - 2 o 3 o 

§ = ® =;f S S' ® >2 
3 “»:q“ 3 ^o 

° m ® ^ 

3 ® &> 

3 x • CD 


CD® § 5. 
3 CD O 


Sffcff* 

> 

T3 CL 

® cd"§ * 


8 r Q Q CD CD 

^■<5 P co 

? o w Q c o 


O CD o 

8 | 5 
5 - 1 8 

” ® OD 

CD « > 
> 3T C/) 

«° o 
O o > 

> CD -L 
Q. 

*4- — 

^ CD CO 

co'^g 

3 CO. P 

o 3 — 

~ CD 

o CO — 
8 CO CD 

3 0 S 

3 2 . 

CD CD ^ 

=r. 3 9 

»x ft U 

2. CD CO 
CD Q. CD 


8 Z 

0 O 

1 a 

51 CD 
O 

sr ® 

CD CD 

P CO 
«■■■ • 

o 


p 

cr 


® o 

CO ^ 

0 2 » 

1 §. 

•o O 
B> B) 

11 

V< P 

" O 
P 3* 

3 m 

Ol 03 

• > 

p b 2 

CO 

CD 

0 > 

^ -f 

1 I 

CD 3 T 

’ CO 


3 o H H 

2 Q) J J 
§ w 5 * CD 
®®(Q$ 

3'p w 

T3 “ 

c X- 3 
-•* ® O 
»OJ 

•2 0 2 
-5 i.§ 

£ g * 

^ © 3^ 

1 ?S 

of* 

e® o 

l?§ 

I? 8. 

OO^ 

P ~ CO 
ZL O J 

P 3 O 
(0 ~ < 

>1 1 
aS» 


» O z 

52. £ ^ 
DD r 

CQ C S 

® P : 
S2.XJ : 

a o = 

3 3 

1 "S 

3 $ 2 . 

^ 3 . 

3 

CQ 

P 


CD 

n 

c 

p 

sa 

3T 

P 

P 

EL 


sr p > 


p^ 
o- ^ 

S.9 

Q. 3 


“O 

C 


-N P 

9 1 

1 £ 
3 P 

®- 3 

3 £ 

9 p 


o 

$ 

<0 


p 

> 

CO 

o 

> 

+ 


CO 

m 

H 

p 

3 

a 

CO 

-< 

CO 


c 
8 

P to =5 
• • • 

9; O 

I O 

o’ P 

*<8 
O' © 

p p 
P 3 
7T Ql 
P 

“ P 
O X 

? ® 
£ I 

P P 


CO 

p 

X 

8 

c 
«— *■ 

a 


P C H 
p co X 
p P > 

g 40 
3* p m 

=r H 

5 ^ 

® > 

o 
m 

8 

c 3 
sr 3 

p 

3 

CL 
O 

2 
O 

0 
c 

-n 

TD 

1 

P 

3 

1 


m i " 

co c p o h 
«P 5,3 y 

CO p “ CL » 

3TT3 Q O 
P O O c 
Cl $ to 
P P 9 P 

O i>” 3 

SE®5 

■o ' 3 ® 

5 ® S® 
3g?3 

a<o* 

2 ® 2 



S 

o 


Q- 

O) p 
Ol ~ 

3 5L 

?.§ 
<J> » 

%» 
8 9 

zr in 

- 3- 

® O 


Q) P 

S - 0 

P 7T 

° 3 
(jQ (Q 

a® 

cl’ 

O p 

CX> Q. 
CO II 


p =: c?. 2 

oo 3 9 52. S p 

P° Q. 3 — • 3 St 
- “T 3 3 m C 
* O Q) <0 — — % 

A o 5 Q) p 

>11115 

A p a t 3 o 
A Jn o 2. c 

|| P P (A ~ -3 

J 1 3 o - *< 3 

v £ < 3 a.s? 

•1 CO 3 — 


8 ® 2 >a 

a ® 3 5? 

®<ll 

3 3^ - ® 


P 3 C ? 


g P P 


a o Q^ia 

- o oi s 71 d 

-“5 P * . 3 

[ v 3 p p rn p 
^aoDrg 

Z o -t* CL CO 3 

0 -1 P _ m 0 
w p o J 1 co 

! 08 I® 5^ 

P . p p X — P 

z8 "§ja. 

r o . 0 =? - a 

H + 3 o c o 
f‘ *■0 g O 

fS'i a § 2 q. 
Q.J p a p t* 


0 2 . P 55. ^ 

f*i 8 S 

§ » S 3 =. 
9:a“-g(o 

3 “ ® 8 =! 

2 <3 £ z® 
® c a 9 3 

2 3»*o 

Is ^ 

- a -~o <= § 

§ f® 8f 

goi® ® 

3 C © P 

C it 3 S S. 
O -;P< 3 

3" ^ -*.(Q 

P © 3 " 


© 3 O > 

^®S<S 

mo £l o 

< J3 CO 
© ^ p 2 

3 o > 

®S |Q 

“* 3 Q- 0> 

ci ^ cn 

j a rn 

® 55' > “ 

ioif 

iS°i 

ga§2 


•O o ^ 3 P O 5 

® ^ Q ® S 2 8 

8«S^||5 a 

® dilli 



V '* 

p 



N> 


a St ^ 


0#5“7 

®SElI 


(0 


CD 2 Q 2! 
c 3 2 3 

» CL 9-CO 
P 2* 3 P 


m 5 . o o & m > ! 

f£!l R § p ! 


£*<8 i 
is? 

a - <35 

®-S -■ 

oS“ 

o^-o 

5 P Q 

© O c 
p o 

^(D ft 

© — 3 - 
“■* 3- P 

m © r. 

> ** p 

co 5 c 

2© 2. 

P>£ 

p ® 
3.^< 

>0 
p CO 

8P 

3 - 
2 » 
9 ^ 

' p 

S3 

|g 



OD TJ 
> P 

h g. 
o p 


o « 
» — 

■§ ® 

^1 

W 3 
P P 

P ^ 
3 P 
CL 

P P‘ 
CL 


p Si 

S 2 . 

P =r. 
P N 
• P 

> 3 

2 © 

5 Q- 

p5® 

p 

o o 
^■8 
P ^ 

3 ~ 

9* p 


o 

c 

a. 




< 

p 

CO 

o' 

3 

P 

o 


~ Q jd 

p 2 a. O 

CO 

> 

+ 


p 

p 

3' 

■o 

p 

$ 

o 

■“* 

X" 

p 

u_ 

p 


5*2 

p 

® §■ 
o -o 


o 0 

8 a 


-o 


P 

P 


O 3 


' P 

9. CL 

X" co 
CO y 


■n 

0 

3 

p 

p 

3 

Q. 

5' 

1 


*0 g. p < □ 
3 p p 5 co 

S. * P P — 

Ol CL CL ? 


m 
X 

O S2 CO 


CL CL < 

©3.* o 

^Sll- 

s«lij 

3)° ® i 2 
> _» <0 » ® 
2 05 «, 3 3 

§3 °® O 

i<2 

* ® c 
X ?! 9 p co 

m © 3- o. > 
S o g >-0 

w ^ — 

=f! 3 3. 

® i 8 o 

8 35 I 

*0 O © 

-g § 33 

2 O. tt "O 

• < 5 CO _ 

S < 5 - o 

J P J 3 

O* N “O ^ 
3* P ^ 


f g £ 

8 ® ^ 

® § 8 

=?& s 

§85 
3 2 g 

U® co 

5®2 

X D P 

o©. - 

0 ^< 3 

3 

2 o 

S^co 

*0 0 ) CO 

Oco p 

- P ^ 


_ co— 
"2L O 2*. 

p -n© 


O 

o 

c 

p 


p 

I 

S- ° 

^CL 3 
< 3 ‘ 

> £ 

*n © 
jj </) 

m 




O 

co 


COP O 

1 P -s 


!4*0 O 
m O P 
P 3. 3 

=; < CQ 

P J 5 . p 

’S ? P 

2 So- 

5. p *< 

©OP 

©f ^ =r 

3 =♦ 3 

§ ® 3 

p © ^ 

3 g ® 

a ® ® 

B.o'S- 

O CO o 

or o P 

p o 3L 

i» 

p 9. 
3 p 
Cl X“ 

J? 

3 " 

P 9 

p 
p 

o p 
3 3 . 
s< P 


a^D'ooc 

o 9 © g 3 a 

n 9 © 



3 

CQ 

P 


a 3 <2®-g _ 

o. ° 3 <2 g Z 

?PI2®? 

x* © S © © © 

8 Q. © 3 P © 

2 a » 3 8 3 

3 o 3 > —T3 
Q. ©. p p x* 

= © P ? w 3' 

p rt-o 2. 

2 zll ®8 

® ® i 2 3 = 

S 8 a 5 - 9 ® 

P 3 3 P _ 5. 

Ills® 

® §' 3 § o 5 
^ CD ^ 9 >■» P 

-O f, P P IT 

cl p 2 O w 
p x - p © C0 ^ 
3 Sr ?r2 05 + 


*< 

o 


0513 
<2S s 

>3 8. 

+ O — 

-9 = 

p 

T) 

O P 

® a. 


>1 

w® 

o © 

C} tft 


— p 
P 3 


O CQ ~o O 5' 
-'3 0 3. ~ 

O 9 ^ g © 

O 3 0 3 3. 

5 3 2-g8 
S ®-- d 5 
- - o 

o 

1 a. I 

o o ® _ 

1 8 tttp 
3 T3 

J -I 


y 


3 p =• 3 


O 
(0 

> 

+ 

S.P 

o o 
ft c 

■n 

3 
p 

3 

p 


p 


p 

-* 

1 !' I i s ° 

^0 3 9 p 0 

p w* n y? *n 



w § 
0 P 

a® 

5 : © 

< P 


|®3 

3 i-2 I? 

® to a a -g 

3 * »* 9 5 ’ o 
<»3°§ 

s:®£ox- 

3 3 = © 

CQ © ^ © ^< 

• < P fT 

8 2?"5 ® s 

?a? 3 a 


3 

to 

P 

P 

3 


p 

p‘ 


§ ® I 
| 8 = 

Sl| 

® « 5' 

2 ® o 
< sf CL 

® ® =. 

0^9 

3 p p 

3 0 - 
o st p 

© 2 Q- 
ft, P a 
P P wr 

“ - o 
$32 
w 3 o 

■< O | 

888 

3“ O I 
o-3 
3 ^ p 

CD © q. 
> 0 © 

^8 ® 
^ 3 a 
+ 9 S 


31 

cs 

8 o 

3 © 

3 - 3 

O 

•oO 

?a 

m 0 

H 

£» o 

|= 09 

^^2 > 

09 + 

cop + 

> 3 

+<° 

9 © 

S 3 

3 

0.2 

©■(Q 

3- 

o £ 

c © 

^ p 


+ 

■o 

(0 

OS 

TJ 

V 

V 

a 

co 


CO 

0) 

*5 uj 

Sz 

© o 
o> 
CE 
LU 


co UJ 

s • 
» (0 

SE 

i23 
• </> 
® * 
a £ 

85 

CL 


CO 

3 

CD 


O 

« 

© 


iL ^ 

© 5 

Q_ © 
© © 


+ *•— 
■o O 

© i- 

© © 

oc £ 


© 

© 

TO 

© 

© 


« 1! 


Q. u 
<0 

E 05 

o 


o 

>* 

Q. 

© 


£ o 


© 

*s 2 

© f 

JQ ^ 


© 


o © 

© E 

c — 

§>1 
© *- 
> © 
© 


TO 

© 

© 

3 

O) 

c 

'© 

JO 

© 

k_ 

© 

3 

CL 

E 

o 

o 


r © ® 
\ ^ r* tt 


© *- 
£ £ 


o © 

© -Q 



<o o> 
a> c 

<0 p 

2 .i 

-C — 

Q. -O 

C S 

«0 w 
W 3 

? 8 
O **- 
J t-T 

H- C 

O CD 

c 

.2 2 
*-• J* 

•c | 


S’ 

8 


a> 

£ aT 

8 . £ 

© 


2 1 


x: 

CL 


© 
x: 

CL 

4« 

.2 o 

© Q 


c © 

0 c 

'</> — 

1 £ 
s & 

o " 
<B g 
> o 
© J= 

k_ .ts 

t s 


& 


V) 

*c x: 

CL 
© 

O 

o © 

. k_ 
© 
OL 


c 

c 

© 

o 

</) 


© — 
w 2 

-I 

§ i 

? I 

© o 

cc o 


«22 

£ ® 

:i§ * 

S* ® 

© TO 3 

3 E © 

O 10 C 

^ © r" 

W ® 

v- > 

© © 


® © 

.£ to 


o 

© 

E 


O 3 

4* 

lg 


I is 


o 

© 

o 

© 

k_ 

Ql 

© 

n 

to 

© 


3 
O 

a ^ 

</) a. 

- © <3 
« r c 
© •- 
TO JC 
O O 

!1 


© 


o w 

= 3 

* © 
C © 


© 

c 

o 


— 0 
W JO 

« o 

c ♦- 

.2^ 

o © 

c © 

3 E 


o 

$ 


o 8 

■o ° 


0 

w_ 

$ 

© 

© 

> 

O 

c 


0 

O 

E 

in 

0 


k_ 

*♦— 

E 

© 

0 


**— 

TO 

© 

5 

TO 

© 

© 

© 

© 

CL 

© 

© 


© 

Q. 

JO 

© 

© 

JQ 

O 

© 

© 

O 

© 

© 

© 


O 

© 

J* © 

O J* 

♦3 O 

® .E 
>* ® 

© >> 

-* © 

© -* 

•§ > 

2 >> 05 

If 
© 2 
3 © 

O .© 

o iE 

® £ 

© 

© © 

TO 

O © 

_ © 

O CL 

•E © 

O © v. 

o o>^ 

S' <0 05 
© JO >n 

LU 0.0 


® ° c 
© of 
m cm E 


hr 3 X 

O QQ © 

SZ 

w • to 

© c 

p ^ © 

© © © 

2 2 © 

© © 3 



■F C 



&■£ 

® ° 

® <6 

|< 

o>i; 


5= O 

§ * 

© c 
5 o 


© 

O) 

© 

3 

O) 


CD 

cc 

LL 
© — 
3 g> 


© 


0)0 


° E 

£ | 
o © 

© O) 

XO o 

£ Q. 

o 

zo 


© 

n 

E 
© 
© 
© 
© 
■«— > 
c 
© 

© 

> 

*3 

cr 

© 

c 

© 


in 

co 

S 

5 

© 

© 


s S’ 

3 E 

c » 
E co 

o rr 

o O 


© 

© 

3 

•c 

© 

4-< 

< 

© 


& 

CL 

3 

© 


^ p 
3 


© 


o> 

c 

• mmm 

3 

C 

C 

8 

V. 

3 

O 


© 

CL 

© 

< 


c © 
© © 

II 

Jl 

I O 

_ o 

0 ^ 

© •= 

© TO 

_ © 

o)§- 

1 © 

n © 

*“* TO 

I I 

a) © 
> © 

« © 

o 

© o 

^ 8 

>< 

,*K O 

It 

Ef 
8 5 


2S 

°-< 

If 

O O* 
2 © 

is >> 

5 © 

© .tr 
. 3 
© © 
© >> 

? | 
O ® 
u 

^ o 

x«»- 
© - 
© c 
© © 


c 

© 


LU © 

>£ 


© 


I— *5 < 

LU ° i- 

CC © 

CL © 

cc-§ 

LU g 


= JO 
. © 
0 © 

§ ^ 

© © 

© ^ 

- © 

c c 

© © 

E--I 


© 

o> 

© 

3 

O) 

c 

© 

O 


o 5f- 

T C k- 


> 

c 

© 


© 

© 

■g 
> 

2 o) 

cl.E 

O E 
i,E 
c 2 


2 L-i 

| m 


3 0)0 ™ 


© ® 
■M O) 

3 © 

Q- 3 

§? 
© 


© 

O 

CL 

© 

E 

© 


E £ 

2 ® 
o> P 
o - 


© 

N t: 

©C 2 

, o5 




o Q- 2 5 © 
>s © © o > 
k_3 ? vw 


© 

© 


® .2o g> - 

i- LJ 


© 0 


JQ © 

© *o 
r 




© 


> © 
© c 

E 2 


.£ ® | 


© © 2 


© 

k_ 

Ql 

E 

o 

o 


© 


© 

© 

3 

— o © 

© © © £ 

c 

0 TO O -u 

© 12 © © — 
© O © TO h- 
£ C © 3 

'o ^ 2 TO 
T o .E © 
-D w .i= 

0 s E © © 

a~2 2^ 

cS5,g<» 

® = w 8 w 

SrCJC 

1 083 ® 

OQ ©17 w 

c m m ““ >* 

S 5 <d w 

(/) E Q-o 


■5 w o 2.E 2 


o >n 

w. 

W- § 
© > 

I? 

2 o 
o o 


co c 
c © 

E © 
E 10 
5o 


X 

© 


© 

o 

■4— > 

© 

© 

© 

o 

o 

© 

>* 

© 

© 

© 

© 

£ 

o 

© 

TO 

© 

TO 

3 

O 

c 

5 + 

z cn 


o o 

3 1 
TO >» 
O C 

si 

.2 S’ 

!8 = 
© rj) 

© c 
© ® 

— TO 

>>£ 
X) 3 

® t3 
^2 
o to 

T3 __ 

S 0 

to 2 

vi 
?* ® 


£0 

° CD 

® cr 

O) E 

© o 

O) 

C CL 
© 3 

© CL 

© 

© -g 
© <0 

S«8 

© © ♦- 

■° ©£ 
>^<0 0 

S C C 

5.2 ? 

Q. o - 
2 2 © 

& 

© .E © 


© o © 
> •*- o 
© c C 

CO® 
£ o ® 

© 3 © 

| 2 o 

F "E 1 
O c >» 

m C 5 
© © ♦ - 

© © © 
© © 

IfiS 

o S w 

S’e 
^ © 
o © 

© - 

°-o 


O) 

c 


0 

1 


E 

E 

2 

o> 

o 


£ Q> CL 
^ TO _ 

^s»i 

|15| 

H* 3 © E 


© 

3 

C 


1 r 

E « 

Q..- *3 

S 5 8 

©< C 
C£ © 

3 *i C 
-Q 0 
^5 


2 TO 

© 
c 
o 


•E 6 

a. q. 


1 

c 

© 

© 


© o 


w C -F w ^ 


© 

© 


© 

O 


+ c5 

1 F 4-< 


© 
© 

® © 

E 2- © 

u 5 |I 

35<I^ 

© ^ © 

pi 

5.E E 
+ <5 ® 

<<S 

O w <n 

« £« 
m C 

CD E © 


0 & 
8 « 


© 


© 

© 

© TO 

£ © 

S ® 
S 0 
x c 

®i 

*•" 3 

uT JO 
© w 

s' 2 

Q. © 

-T ® 

© 3 
© ^ 
»- © 

© ,® 

§0 

00 ~ 


§1 
H= 3 
C ~ 
O)C0 

0 ) 

. CJ) 
© 3 
TO JQ 

© TO 

h 

8 * 


o 

w 

m mmm 

© 

r 

© 


© 

© 


< -i 


3 

o 


LU 

CC 

O 


.2 ®T0 

1 U 

0.2 


+ 

< 

o 

CO 


c 

© 

E 

© 


© 

> 

© 

TO 


© 

TO 

© 


© 


O) 

E 

2 1 

co E 

o © 

k- l. 

a. o)jc 


.-= fc -F C 

r 2 1 1 

© o) E ^ 

^ ^ © 


© 

£ 

o 

© 

© 


© 


.2 E 


O C 
o © 

© ^ 

q.2 


o 

c 

£ 

TO 

C 

© 

© 

c 

© 

E 

© 

© 

5 5 

2 o 

E © 

C CL 

o £ 
O o 

2 © 

CL ® 

5 ^ 

H < 


o ® 

« ■© 
© 

81 

p 

© £ 
© CL 

‘2 ® 

®-§ 
2 & 

® » 

3 c 

© 

© 

CD Jrr 

< > 

CD o 


>> >N O) 

c c c 

© © 

o > 

8 i £ 

Soo 
■O - E 
■g >•« 

CO p 

>%!5 Z. 

o © ■£ 

E © © 
© £ © 

E -i 

® s | 

--TO © 

C ® O 
’F c — 
2 5 TO 
jo c c 
LU! O E © 

> o 8 E 

O ~ 0 o 

5 |S 8 

OC ^ O-g 

9 r *2 

ijrf 

QL > Q. JO 


© 

© 


^ © 

< © 

. o 

n't 


QC 
^ Q 

®| 

8^ 

ai 

©h 

© 

0 UJ 
P)tJ 
£ c 
® © 

oh 

© CL © 

i? CQ -6 


O - 


TO C 
© © 

© ® 

2 ® 

.2 jo 
sz © 
Q .-0 
O © 
© © 

© P 

3 .E 

cr o 

!« 

. o 

_© Q. 
JO w 
X o 

© *•“ 
rr- 

t: © 

->* 3 

5T 

■g 0 

w © 

o © 

c 3 


CD 

f— 

Z 

CC 

CL 


© © 
3 C 

QC 0 

— u «) 

Q O ® 


® 8 -: 

?.£ 2 
2 |g 

8 *f 4? 

© O 2 

LULL © 


LU ^ 
CD c 

< m 

CC 2 
UJ § 

LU ^ 
2 > 
c 5 
z ® 
uj £ 

CC -r 

K ^ 
O © 
LU TO 
H E 

O ? 

cc E 

Q. E 
z o 

D <■> 

l_t © 

LO 0 
LU jc 
K - 
O 0 

QC © 
QL 3 


© 


O 

© 

E 

o 

© 

k_ 

o 

8 

■S 


© 

© 

E 

© 

© 

© 

*5 

© 

o • 

■S 

= © 
£ *6 


TO 

© 

c 

o> 

© 


0 vJ 

TO 2 

-£ O 

C o 

© 0 

E - 

ft 

c ® 

® 0 

® © 
c c 
— © 

O > 

~ o 

£ si 

■2 o) 

■gS 

f ® 

w x 

© 

-O w 

> © 

o 2 £ 

QC CL © 


CL 

CC 


tl 


So 

0 0 
O>J0 

o E 


© c .2 


T0 --F 


_ >sT0 

© £ c 

1 w o 

8 o « 

d.5 4 

c ^ — 


LL - 

5 £ 

=; o 


© 

© 


UJ 

ui 

CD 

_J 
LU 

it J o © 


|8 

®€ 

© 


© 

E 

© 

CO 


:2 

LU ^ 

© 

© 

© 0 

3 > 

Is® 
2 >> 
S § 


••• • 

£ W O 

i&S 

&85 

ql >,r; 

■g © © 

§ 8 # 
© © 
O v. 

® O 

£ ® 

c 


o Q 


LU 


5 

Q 


c 

o 

o 

+ 

< 

O 

CD 

< 


UJ © 

■ 

LU ^ 

d ^ 
§ < 


1 

© 

© 

c 

E | 

a I 

12 

> X) 

> is 
o •= 

z § 

UJ © 


® ® 
® § 


JQ 

E 

© 

© 

© 

© 


2 ® 

0-5 

5-S 


© 

© 


Is 2 

© 5= 

® > 

T3 C 

O 40 

al 

2c 

JQ O 

3 8 


+ 

< 

o 

CD 

< 

CD 

© 

^ © £ 


m ® 

LU 0 

hS 

UJ > 

o 2 

CD 0. 


8 « 
§ C 

rsz 0 

X) 0 

S.5 

83 


c c 

o o 

o> o> 
cn 01 

0 


o_ 

c 

Q. 

0 

Cl 

TI 

X 

m 

m 

£ 


0 

< 

0 

*2 


O 

o> 
cn 

-o 
<& o 

CO 

t <8 

s ® 


0 0 CO 

Ilf 

» 35 

zg. © 

o - 0 


3 

0 


0 ^ 
?3 

CO Q- 

co 5 

0 Q. 

71 co 


o 

^ ~ 3 

o 0) 0 

0 -J • • 
■0^-0 
0 0) zr 
or 8> 0 

f <D(Q 

> g 0 
0 g; 3 

13 * *< 0 
CQ_ 0 3 
0 3 0 

» 

J3 a 

■Q O 
0 0-0 
Q. 

S o 3 

® o 3 

3 = ° 
o Q-^< 

Q_ 0 

CD Q- 9; 

5 ° » <P 


O 


O 


85 85 

MW* ^ 

Is 

Q. ® 

0 o. 

w 3 

B. 3 

“ 0 

0 c 
— 0 

3 % 

Cl C 

mmmm a 

fs 

Q. 9 
CD S 
cr cd 

“? 9. 


00 

c 

o 

ui 


a > 

0 z 

Q. O 

§z 
o 
O s 

CO 

CO O 
0 2? 
co T 

c + 
0 _ 

£ 0 
0 

-O 3 * 
0 O 

CO 0 
0 °- 

0 

0 

0 

"O 

0 


0 

< 

0 

*< 


0 0 0 
°=Q. 

■O O Q. 

0 0 5’ 

g&? 

as s 

£§ ® 
5 ? 0,0 

0 ® -• 

1 "-§ 
3 0 2. 

3 S 0 
0 0 r 
5-0 
Q. 0 0 
0.0 0. 
C 0 
0 3 
0 ~ 

® § 

0 3 

® | 

1 a 

~ 0 
0 O 

3 S 

o > 

0 + 


O 

CO 

> 

+ 

0 

0 

33 

3 ) 

CO 


0 o 

cr 3- 

0 ~ 

1 0 

5 -£ 

< 2 . 

0 0 

3 __ 

0 Q) 

0 5 

0 n 
,< cl 

fi 

C 3 . 

0 o 
0 8 

il 

3 CD 

3 ® 

Q. 0 

T 3 2 5 

3 “;‘ Q 

g 8* .2 

S S. ® 

y* cr *-► 

0 C 0 

5 3 3 

* 0 -K 

3 0 5 


o 

33 

z 

m 

co 

H 

o 

•O 

0 

-n 

0 


o 

co 

> 

+ 


s s 
> o 

O CO 

CT> 0) 

w a 


■o 

CD 

a 

o 

CO 

«• 

0 

0 

0 

*o 


o 

T 3 

3 . 

0 

0 


2. z =? 

ft) 

o D = 

2 *< 

9- 0 - 

o a. S 
£ 5 > 

2 . o> 

— cn 

0 ^ W 


0 

0 

o 


Q) — 

3 . 0 


8 


0 

00 

o 


o s 


°o 

<28 

> 5 

+ 0 

- 0 

0 3 - 
3 . 0 


f§ 

CQ vJ 

0 CO 

Q. 

0 0 * 

0 3 * 

° 5 

•O O 

1 & 

0 o 


°-§ 
si 

3 =.“ 

■O O- Q. 
0) CQ 

3 0 o 
2 o 
0 > 3 
^ 2 -o 

§. Q. 0 


0 <a 

*< 

S 0 
0 -* 

3 3* 

scr 0 

0 a 


0 

CO 


0 


< 

0 ^ ^ 

T 3 0 


O 

Ql 

c 

o 

0 

CL 


“ s 


0 

3 

o 

0 

Q. 

m 

> 

co 


® s p 

3 0 

9 % 

0 

2“ 3 

2 . 2 

3 T s< 


CL 

0 

mmmm 

< 

0 

3 

Q. 


- I 

S h 


0 

> 

0 

0 

0 

3 

cr 

0 

m 

CL 


0> 

Ul 








0 


CD O 2 

> JI 3 

TJ 0 


CO 

o 

> 

+ 


00 

o 


I 

O 

o Cr 

8 ®. 

3 5 ' 

II 

Q. 0 

0 

Q 3 0 

=> =1 

§ ^ 

a o 

mmm m 

o 

0 2 


O 0 CO 
3 CL 0 

3 0 3 
0 0 3 

- 3 — 


C Q. °- 

‘ 0 
> < 
3 0 
CL 3 


CO 

0 


0 

X < 
2 0 

c ^ 
0 ^ 


0 

mmmm m 

o 


0 3 . 5 


^ 0 

O (/) 

2 o 

o < 9 . 

- K < 

3 § 
o 

cl CD 

5 > 

3 CO 

3 O 


3 

“O 


m 

x 


< o c 
0 o Ct 

3 o 

•— t> "O C 

5 0-g 

0 ^ 3 - 

^ 9 . 0 

J ^ ■a 

2 33 ^ 

^ 2 

□ CQ 


3 

-O 


CO 

CO 


0 


c 3 
= 3 


0 > 

-3 + 

2 0 

<’ 2 
CD c 

0 3 

3 0 
CO ^ 

c 

0 0 
co JT 
0 2. 
0 0 
o 

w CD 

C '* 

a a 

c — 

s a 


I 0 ^ 13 

m 3 O CQ 


2. T3 o 


0 0 

1 I 


c 3> n 

3 » > 

CO — CO 

S CD O 

J oI. 

3 -o ® 

0 — i C±, 

aa a 
>! i. 

s 3 'l 

_ 0 O 

OT r« co 

> < o’ 

CO § 0 

Oic 

0 CD "O 
O 

0 a a 

0 0 S’ 

S) =• 0 

*< 5- 0 

o«Q 5 

C 0 0 

w — cr 

-® 5 CD 

S ® S' 
2- S' 3 

® ‘P CD 


3 

o 

3 

a 

ffl 

> 


s 

CO 

n 

> 

+ 


0 0 O 
CO 3 0 

S s^ 5 

0 3 

=r. 3 

o 


o 

CL 


3 

0 


< 

0 O 


IS 

01 5 * 

0 3 

3 N’ 

s a 


3 . 0 0 


CO 


"O 

3 

Q 

c 

o 

0 


o 

C 5 - 
0 0 

i » 

0 "O 

is 

58 s 

CL g* 0 

a®® 

8 a a 

& a 

a? 

< CD 

< CD 

® D 

|| 

O ° 


aa 
0 

=> 3 

5 0 

0 CO 
-* o 
c ^ 

1 05 

• 3 

f 8 

0 


0 


0 


O 

3 

0 

o 

c 


o 

o 

o 

3 

-O 


t± 0 

o 

0 o 

0 3 

2: 0 

O 2 

0 "< 
0 O 

3 . C 
• 


CD 

> 

CO 


Q. 0 =£ 

c 

O JD ^ 

_ 0 C O 

° • o 

- cy 3 O 

0 0 


> 

0 


* 

3 


- §. 
-n< 9 . 

w£ 
0 > 

3 2 
Q. -O 

s=t 0 


|.S 

0 *g_ 

—i 0 


0 

> 

0 


0 

ol 

CO 


O CD = 


* 

0 

0 

3 

cr 

0 

rn 

o. 


0 

3 

CL 


< 

0 

3 

mmm • 

o 

3 

0 

O 


0 

3 

3 
0 

0 
O 

O'g 


£3 & 


> 

0 

3 . 

O 

o 

3 

“O 

c 


0 


co 

CO 

5 “ 

o 


>-o 

s? 


c 

0 

0 

3 

0 

CL 

*< 


2 

n 


£ 

o 

9 


■c 

ttt m C« 

h CD ® 


0 

3 



t 

■ & 


> 


s. 


0 


i 

A 




a 

O 


CO 

CO 

iD 

Ol 



CO 0 
1 ! 


a 

x 

(0 

0 

a 

+ 


0 

01 

CO 

CO 

Ol 



O §. 
co 2 
CO o 


0 w 

O 

o> 

01 «> 
0 

-t 

0 

a. 
0 
< 
0 

O 
X3 
0 

0 


O 


0 

00 

o 

■ 

o 

o 


0 

o’ O 
cr 3 
0 2 3 

M B w 

3 •— ► 

0 
0 o 

o -O 


■O 

o 

% 


a s 

185 

a? 

a° 

T 3 0 
■8 05 


0 S 2 

a* a a 

- 3 O' 

— . fl) 

0 O J- 4 - 

as a 

3 i a 

2 3 o 

0 §“ 

3 ^ 2 0 

1 a I «s a 

003 

a® 

0 o 

CL 0 


E. < 

Q) 0 

^ c 
5T 0 

3 2 

co 2 

c 0 
0 
co 
0 


0 

3 


0 


cr 

0 

0 


o|3 

-os 

O O) & 
^ Ol-^ 

CD I* O 

O < 8 

IO 0 I 


^ ^ O 

0 ^ 

O 0 

0 0 

c o. 
0 3 
0 ™ 
o. 3 

cr 2 


3 ® 

0* 23 
5 x 

a CO 

> H 

TO 3 

2. 0 
0 =£ 

8 0 

| R 

2 CD 

5 o 

^ o 

o 

3 

■U 

mmm m 

5 

0 

< 

0 


o 

CL 

c 

o 

0 

Ql 


n 

Ul 






For Atari Computers 

THE WRITER'S 
TOOL . 

7 , '2 5" tw'-f-A Gmf/l t ? S 

©ss 

© 1984 Madison Micro & OSS, Inc. 


f° r _ A J ari Computers 

the WRITER'S 
TOOL™ 57^ 

'Z-fS/'Sg V& ttrrry, /Z Z.5 [ 

jj -r, C, r 4 QtS S 

® 1984 Madison Micro & OSS, Inc. 


ft/cJJU&A frfWA?!*? 

/t/PC/T 


maste r dis kette 
DOSXL 

13 Optimized Svsten 


V 










