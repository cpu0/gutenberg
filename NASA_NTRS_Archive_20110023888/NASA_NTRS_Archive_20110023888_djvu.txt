ronment, and facilitating transfer of 
plots and printed results for inclusion in 
design reports. Additional features in- 
clude roller-edge stress prediction and 
influence of shaft and housing distor- 
tion on bearing performance. 

This program was written by J. V. Poplawski, 
J. H. Rumbarger, S. M. Peters , H. Galatis, and 
R Flower of J. V. Poplawski & Associates for 
Glenn Research Center. For further infor- 
mation, access www.bearingspecialists.com. 

Inquiries concerning rights for the commer- 
cial use of this invention should be addressed 
to NASA Glenn Research Center, Commercial 
Technology Office, Attn: Steve Fedor, Mail 
Stop 4-8, 21000 Brookpark Road, Cleveland 
Ohio 44135. Refer to LEW-1 7390. 


Q Web Program for 

Development of GUIs for 
Cluster Computers 

WIGLAF (a Web Interface Generator 
and Legacy Application Fagade) is a com- 
puter program that provides a Web- 
based, distributed, graphical-user-inter- 
face (GUI) framework that can be 
adapted to any of a broad range of appli- 
cation programs, written in any program- 
ming language, that are executed re- 
motely on any cluster computer system. 
WIGLAF enables the rapid development 
of a GUI for controlling and monitoring 
a specific application program running 
on the cluster and for transferring data to 
and from the application program. The 
only prerequisite for the execution of 
WIGLAF is a Web-browser program on a 
user’s personal computer connected with 
the cluster via the Internet. WIGLAF has 


a client/server architecture: The server 
component is executed on the cluster sys- 
tem, where it controls the application 
program and serves data to the client 
component. The client component is an 
applet that runs in the Web browser. 
WIGLAF utilizes the Extensible Markup 
Language to hold all data associated with 
the application software, Java to enable 
platform-independent execution on the 
cluster system and the display of a GUI 
generator through the browser, and the 
Java Remote Method Invocation soft- 
ware package to provide simple, effective 
client/ server networking. 

This program was written by Akos Czik- 
mantory, Thomas Cwik, Gerhard Klimeck, 
Hook Hua, Fabiano Oyafuso, and Edward 
Vinyard of Caltech for NASA’s Jet Propul- 
sion Laboratory. Further information is con- 
tained in a TSP (seepage 1 ). 

This software is available for commercial 
licensing. Please contact Don Hart of the Cal- 
ifornia Institute of Technology at (818) 393- 
3425. Refer to NPO-30842. 


XML-Based Generator of 
C++ Code for Integration 
With GUIs 

An open source computer program 
has been developed to satisfy a need for 
simplified organization of structured 
input data for scientific simulation pro- 
grams. Typically, such input data are 
parsed in from a flat American Standard 
Code for Information Interchange 
(ASCII) text file into computational 
data structures. Also typically, when a 
graphical user interface (GUI) is used, 


there is a need to completely duplicate 
the input information while providing it 
to a user in a more structured form. 
Heretofore, the duplication of the input 
information has entailed duplication of 
software efforts and increases in suscep- 
tibility to software errors because of the 
concomitant need to maintain two inde- 
pendent input-handling mechanisms. 
The present program implements a 
method in which the input data for a 
simulation program are completely 
specified in an Extensible Markup Lan- 
guage (XML) -based text file. The key 
benefit for XML is storing input data in 
a structured manner. More importantly, 
XML allows not just storing of data but 
also describing what each of the data 
items are. That XML file contains infor- 
mation useful for rendering the data by 
other applications. It also then gener- 
ates data structures in the C++ language 
that are to be used in the simulation pro- 
gram. In this method, all input data are 
specified in one place only, and it is easy 
to integrate the data structures into both 
the simulation program and the GUI. 
XML-to-C is useful in two ways: 

1. As an executable, it generates the cor- 
responding C++ classes and 

2. As a library, it automatically fills the 
objects with the input data values. 

This program was written by Hook Hua, 

Fabiano Oyafuso, and Gerhard Klimeck of 
Caltech for NASA’s Jet Propulsion 
Laboratory. Further information is con- 
tained in a TSP (seepage 1 ). 

This software is available for commercial 
licensing. Please contact Don Hart of the Cal- 
ifornia Institute of Technology at (818) 393- 
3425. Refer to NPO-30844. 


14 


NASA Tech Briefs, September 2003 


