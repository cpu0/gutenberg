
C.T1900 
SERIES 



PROGRAMMING AIDS 
AUTOCODES 



The 1900 series of equipment is 
backed by a comprehensive array of 
autocodes which are available for 
both commercial and scientific pur- 
poses. Each of these autocodes has 
distinct characteristics enabling the 
total system to provide programming 
efficiency over a wide range of appli- 
cations. 

The following autocodes are avail- 
able: 
COMMERCIAL LANGUAGES 

PLAN 

COBOL 

I.C.T RAPIDWRITE 

PROGRAM GENERATOR 
SCIENTIFIC LANGUAGES 

FORTRAN 

ALGOL 

MAC 

THE PROGRAMMING 
LANGUAGES 

A programming language enables a 
programmer to state his requirements 
in a symbolic manner using alpha- 
betic names and characters instead of 
numeric references only. In some 
languages (e.g. COBOL) this use of 
alphabetic names enables the pro- 
gram to be written in comprehensible 
English. A program written in accor- 
dance with a program language is 
known as a source program; a 
Compiler or an Assembler Program 
is employed by the 1 900 to translate 
the source program in order to pro- 
duce the machine code (or object) 
program. 

The following advantages are derived 
from using such a language: — 
Programs can be written in less time. 
The amount of writing (and similar 
clerical work) is reduced, and also 
therefore the chance of error with a 
consequent reduction of testing time. 
Program maintenance is simplified. 
The computer procedure is more 
easily understood by persons not 
trained in machine code. 
Autocodes can often be used on 
different types of computers and thus 
permit the exchange of ideas and 
programs among computer users. 
The compiler will detect many pro- 
gramming errors. 



When writing a program in an auto- 
code, the programmerdoes notusually 
have the same control over his pro- 
gram as one who uses the machine 
code, but the advantages listed above 
considerably outweigh this fact. Some 
program languages are intended for 
use on one type of machine only, and 
these usually give the programmer a 
much closer control over the final 
program. In the 1900 system this 
function is performed by PLAN. 

PLAN is the basic programming 
language of the 1900 series. It in- 
cludes comprehensive input/output 
aids. The source program is con- 
verted by a translator/assembler 
program. 

Program segments written in PLAN 
can be combined with segments 
written in other languages, and in 
particular PLAN will be used in 
association with COBOL and FORT- 
RAN. 

COBOL is a common business lan- 
guage which is used internationally 
in association with many computers. 
It comes under the category of a full 
autocode; in some cases a large 
number of machine instructions are 
generated from one statement in the 
source program. 

I.C.T RAPIDWRITE is a commer- 
cial autocode based upon COBOL, 
but uses special pre-printed cards 
which enable the programmer to 
build up his procedure on the lines of 
a flow chart with moveable blocks. 
Again conversion is performed by 
means of a translator/compiler. 

PROGRAM GENERATOR is a 

powerful programming language ap- 
proximating to basic English. It has 
been designed for use in writing 
programs having commercial, rather 
than scientific applications. 
The source program is written as a 
series of statements of which there 
are three types: Directives, Format 
and Procedural. The language pro- 
vides facilities for the handling of all 
standard peripheral devices and for 
the collection and distribution of data. 



PROGRAMMING AIDS 
AUTOCODES 



FORTRAN is an automatic language 
of considerable power and flexibility 
designed to assist the programming 
of problems of a mathematical or 
scientific nature. The source program 
is written as a series of statements 
having a general resemblance to 
either algebraic formulae or English 
language commands. 
Arithmetic operations to be carried 
out on data are indicated to the 
compiler by statements comprising 
expressions of unlimited complexity, 
but employing the five basic opera- 
tions: addition, subtraction, multipli- 
cation, division and exponentiation. 
These operations are supplemented 
by a number of routines, including 
trigonometric, hyperbolic and logar- 
ithmic functions, which are called 
into the program on demand. The 
language provides facilities for the 
handling of all standard peripherals. 
ALGOL isan automatic programming 
language suitable for programming 
mathematical and scientific problems. 
Superficially ALGOL is similar to 
FORTRAN in that it utilises the same 
five arithmetic operations, and can 
call on a range of standard mathe- 
matical functions. In addition, it is 
also possible to declare Boolean 
quantities, which take only the values 
'true' or 'false' and are operated upon 
by various logical operations. 
In spite of a superficial resemblance 
to FORTRAN, ALGOL has a totally 
different approach to storage alloca- 
tion and subroutine communication. 
MAC is an autocode for scientific 
and mathematical applications; it 
enables programs to be written using 
a notation similar to standard arith- 
metic notation. MAC also includes a 
series of simple instructions for 
evaluating trigonometrical and log- 
arithmic functions. 



ASSEMBLY PROCEDURE 

Each of the autocodes in the 1900 
Programming System has its own 
translator/compiler; however, con- 
version is not made directly into the 
machine code, but into a semi- 
compiled form. The full procedure is 
a§ follows : 
Phase 1 

A program can be divided into a 
number of parts or segments, each 
of which will be compiled separately 
using the appropriate translator/com- 
piler. 
Phase 2 

The semi-compiled segments are 
combined by means of a special pur- 
pose program known as the CON- 
SOLIDATOR. PLAN segments may 
be combined with segments written 
in other languages, and also at this 
stage it will be possible to incorporate 
library sub-routines. 
The output from the CONSOLIDA- 
TOR is the final 'object program' 
with all cross references between 
segments consolidated and 'leader' 
information prepared for use when 
the program is loaded to store for 
running. 

Use of Sub-routines 

In the source program there are 
facilities for automatically incorpora- 
ting library sub-routines. Sub-routines 
are generally held on magnetic tape 
or disc in semi-compiled form with an 
appropriate leader. When a sub 
routine is called for in the source 
program, the CONSOLIDATOR ar- 
ranges for the sub-routine to be 
included in the object program during 
phase two of program assembly. 

Input/Output 

The programmer may state his input/ 
output requirements by calling a 
series of standard sub-routines which 



will then be incorporated into the 
object program by the CONSOLIDA- 
TOR. The sub-routines deal with all 
details of data handling, editing, and 
conversion, apart from the actual 
physical transfers which are con- 
trolled by Executive — one source 
program instruction is sufficient 
to initiate any peripheral transfer. 
Users of a computer store of 8,192 
words or more may also take ad- 
vantage of the comprehensive 
facilities offered by a MAGNETIC 
TAPE HOUSEKEEPING package. 
Routines are also available to facil- 
itate the handling of records on Mag- 
netic Disc and Card Files. Such rec- 
ords may be sequential or random. In 
addition users of computers having a 
minimumconfigurationofeither8,192 
words of storage and four magnetic 
tape decks or 1 6,384 words and three 
tape decks, may choose to use the 
COMMERCIAL INPUT/OUTPUT 
package instead of the normal sub- 
routines. This package enables the 
programmer to state his requirements 
in tabular form and simplifies the task 
of programming. 



INTERNATIONAL COMPUTERS AND TABULATORS LIMITED 

Head Office I.C.T House Putney London SW1 5 

Sales Office Bridge House Putney Bridge London SW6 Renown 3322 

and local offices throughout the United Kingdom 



This specification is subject to modification 



Printed in England 9.64/2/10m/FP 



