AD-A256 188 


1992 Summer SIGAda AIWG 
Workshop Applications Experiences 
and Lessons Learned Panel Message 
From the Panel Chair 


Janet Faye Johns 



M92B0000103 
September 1992 



Bedford, Massachusetts 















REPORT DOCUMENTATION PAGE 


Form Approved 
OMB No. 0704-0188 


f ubtK reporting burden ^or this codectiori of information estimated to ewerage i hour per retpcnve, including the ttme for reviewu^ imtru<tions. Merchm^ exi^onq deu sour<es. 
getherind end maintaining the data needed, and completing and reviewing the collection of information. Send comments regarding this burden estimate or any other aspea of this 
collection of information, including suggestions for reducing this burden, to Washtrsgton Hcadouarters Services. Directorate for information Operations and Reports. UiS Jefferson 
Oavis Highway. Suite 1204, Arlington, VA 22202-4302. and to the Office of Management and Budget. Paperwork Reduction Proiect (0704-0183). Washington, 20S03. 


1. AGENCY USE ONLY (Leave blank) 2. REPORT DATE 3. REPORT TYPE AND OATES COVERED 

September 1992 


4. TITLE AND SUBTITLE 

1992 Summer SIGAda AlWG Workshop Applications 
Experiences and Lessons Learned Panel Message From the 
Panel Chair 


6. AUTHOR(S) 


5. FUNDING NUMBERS 


Janet Faye Johns 


7. PERFORMING ORGANIZATION NAME{S) ANO AOORESS(ES} 

The MITRE Corporation 
202 Burlington Road 
Bedford, MA 01730-1420 


8. PERFORMING ORGANIZATION 
REPORT NUMBER 


M92B0000103 


9. SPONSORING/MONITORING AGENCY NAME(S) ANO AODRESS(ES) 


same as above 


TO. SPONSORING/MONITORING 
AGENCY REPORT NUMBER 

same as above 



IZa. OISTMBUTION/AVAIIABIUTY STATEMENT 


12b. DISTRIBUTION CODE 


Approved for public release; distribution unlimited 


13. ABSTRACT (Maximum 200 words) 

On Ih-n June 1992, the Association for Computing Machinery (ACM) Special Interest 
Group for Ada (SIGAda) Artificial Intelligence Working Group (AIWG) held a workshop 
to discuss Ada real-time and AI Issues. Panels organized for the workshop focused 
on blackboard architectures, experiences and lessons learned, real-time development 
approaches and Issues, and Ada 9X Issues for AI systems. This paper assesses the 
state-of-the-art for AI development processes and provides a summary of the related 
workshop discussions from the experiences and lessons learned panel. Issues 
associated with requirements analysis, design methodologies, development 
techniques, test and validation, and maintainability are discusses for AI 
applications and for AI with Ada applications. 


14. SUBJECT TERMS 

Artificial Intelligence Working Group (AIWG) AI issues 


15. NUMBER OF PAGES 

38 


16. PRICE CODE 


17. SECURITY CLASSIFICATION 
OF report 

Unclassifled 


NSN 7540-01-780-5500 


18. SECURITY CLASSIFICATION 
OF THIS PAGE 

Unclassifled 


19. SECURITY CLASSIFICATION 
OF ABSTRACT 

Unclassified 


20. LIMITATION OF ABSTRACT 

unlimited 


Standard Form 298 (Rev 2-89) 

PfVKfibcd by ANSI Std 239-iB 
29t-i02 




















1992 Summer SIGAda AIWG M92B0000103 

Workshop Applications Experiences September 1992 

and Lessons Learned Panel Message 
From the Panel Chair 

Janet Faye Johns 


Contract Sponsor N/A 
Contract No. N/A 
Protect No. N/A 
Dept GO33 

Approved for public release; distribution 
unbmited. 






Bedford, Massachusetts 




ABSTRACT 


On 24-27 June 1992, the Association for Computing Machinery (ACM) Special Interest Group 
for Ada (SIGAda) Artificial Intelligence Working Group (AIWG) held a workshop to discuss 
Ada real-time and AI issues. Panels organized for the workshop focused on blackboard 
architectures, experiences and lessons learned, real-time development approaches and issues, 
and Ada 9X issues for AI systems. This paper assesses the state-of-the-art for AI development 
processes and provides a summary of the related workshop discussions from the experiences 
and lessons learned panel. Issues associated with requirements analysis, design 
methodologies, development techniques, test and validation, and maintainability are discussed 
for AI applications and for AI with Ada applications. 



TABLE OF CONTENTS 


SECTION PAGE 

Executive Summary E-1 

Purpose E-1 

Issues E-1 

Software Engineering E-2 

AI Requirements Andysis E-2 

The legacy of AI Requirements Analysis E-3 

Testing, Verification, and Validation E-3 

Maintenance E-4 

Recommendations E-S 

1 Applications Experiences and Lessons Learned Panel Message from the Panel Chair 1-1 
Background 1-1 

References RE-1 

Appendix A A-1 

SIGAda Artificial Intelligence Working Group Summer '92 SIGAda Workshop 

Appendix B AIWG '92 Workshop Participants B-1 

Distribution List DI-1 




EXECUTIVE SUMMARY 


Artificial Intelligence (AI) with Ada is a reality! Based on the information presented at the 1992 
Summer Special Interest Group for Ada (SIGAda) Artificial Intelligence Working Group's 
(AIWG) Applications Experiences and Lessons Learned panel, Ada is a viable language for AI 
applications. This panel provided a valuable opportunity to accumulate more empirical 
evidence proving that Ada is being used successfully to implement large-scale AI systems. 
Congratulations to the panel participants for their AI with Ada successes! 

PURPOSE 

The AIWG formed the Experiences and Lessons Learned panel to identify problems and 
further our understanding of the unique issues associated with implementing AI applications 
with the Ada programming language. During the panel, workshop participants discussed the 
problems encountered and experiences gained during the development of large AI applications 
with Ada. This panel provided a vehicle for expressing the AIWG's desires and requirements 
with respect to the software development process, changes to DoD-STD-2167A, and of course 
Ada 9X. 

Detailed briefings given during the panel discussions are contained in these proceedings. 
Highlights of the panel discussions and related workshop discussions have been included with 
the following message from the panel chair. Recommendations for specific AIWG actions are 
made at the end of this Executive Summary. A workshop participant list is included in 
Appendix B. 

ISSUES 

The panel discussed issues covering the complete software life cycle including the challenges 
of software engineering AI applications; the difficulties with AI requirements analysis; the 
legacy of an AI requirements analysis; testing, verification, and validation of AI applications; 
and maintenance for AI applications. Many of the issues and problems discussed during the 


E-1 





workshop are applicable to AI applications developed with any language including the Ada 
programming language. 

Software Engineering 

AI applications typically begin with few documented requirements and are defined as well as 
developed with a series of evolutionary prototypes. This is the current state-of-the-art for AI 
applications design and development with Ada or any other programming language. Software 
engineering and Ada design methodologies typically begin with a set of well-defined, testable, 
verifiable requirements. Therefore, due to the lack of requirements, software engineering is a 
challenge for AI with Ada developers. Without a set of well-defined requirements, how do 
you "engineer" AI applications? This question is the subject of on-going debates and research. 
However, while there are no textbook solutions today, the information in these proceedings 
describes how AI with Ada practitioners are successfully "engineering" AI applications today. 

AI Requirements Analysis 

Requirements for AI applications are defined through iteration, that is learning by doing. AI 
requirements are difficult, if not impossible, to specify without prototypes. Most of the effort 
for AI projects is spent defining requirements and prototyping. In the case of a 70,000 source 
line of code Ada application, 2/3 of the calendar time and labor were expended developing 
prototypes to define the requirements for the AI application. 

AI requirements analysis requires a flexible process because defining AI requirements is an 
evolutionary process. This type of process is not a fixed price problem and the current DoD- 
STD-2167A may be too rigid for AI applications even with the software engineering discipline 
provided by the Ada programming language. We discussed many AI specific issues associated 
with the software engineering process and DoD-STD-2167A. These discussions led us to 
question whether AI requirements and design are the same as understood in the DoD-STD- 
2167A and other software engineering environments. Based on these discussions, the AIWG 
decided to be more active in expressing AI specific requirements and concerns to the standards 


E-2 





bodies that are developing standards which impact the development of AI applications with the 
Ada programming language. 

The legacy of AI Requirements Analysis 

Prototypes and human understanding of the problem domain are the standard legacy of an AI 
requirements analysis effort What happens to this legacy? We would like to use our human 
understanding to specify the desired system in clear unambiguous requirements, but this is 
rarely possible. Prototypes typically reflect our understanding of how to implement a solution 
and in many cases are required to prove that it is possible to "engineer" the full scale system. 
Can you successfully "re-engine“r" a prototype into a supportable and maintainable system? 
Based on panel experiences described in these proceedings, Ada prototypes are being re¬ 
engineered into supportable and maintainable systems. 

Testing, Verirication, and Validation 

The difficulties inherent in AI requirements analysis inevitably lead to problems with the 
testing, verification, and validation (V&V) of AI applications. Testing and validation activities 
ensure that the developed software system satisfies a well-defined set of requirements which 
unfortunately do not normally exist for AI applications. Verification activities ensure that the 
developed system is supportable and maintainable which raises issues associated with the 
feasibility of verifying non-deterministic systems that can learn and adapt over time. Testing 
and V&V are critical areas of current research because the public and the software engineering 
community have begun to focus attention on building trusted systems that are correct, 
dependable, robust, safety critical, efficient, and secure. 

The panel discussions regarding testing and V&V led to two interesting thoughts. First, AI 
applications seek to emulate human intelligence and behavior. How do we test and validate 
humans? In general, the proof of human intelligence and their ability to learn is through on- 
the-job performance. Therefore, in essence, humans do not undergo the same scrutiny of test 
and V&V that we are trying to impose on AI applications. Second, instead of trying to perform 
an unnatural test and V&V scrutiny of AI applications, perhaps it would be more meaningful to 
develop techniques and tools that determine if an AI application is fit-for-purpose; that is, does 


E-3 




it match the problem domain, is it operable in the proposed environments, and can it be learned 
with relative ease. 


Maintenance 

Maintenance is an area of critical concern as large-scale AI applications are fielded and must be 
supported for a long life cycle. Knowledge base maintenance is also a critical concern during 
the iterative development of large knowledge based systems. For an expert system, 
maintenance traditionally involves changes to the rale base as well as the facts which are 
normally considered data. The discussions in this area included questions such as "What is 
knowledge? Are rales considered data or software? Should facts in a knowledge based system 
be treated as data or software?". 

During the panel discussions, several implementation techniques currently being used for 
expen systems were described as: 

1) implementing the rales in Ada for runtime performance 

2) use two modes for the rale base: an interpretive mode for rule execution during 
development and a runtime mode that involves translating the rales to Ada for 
runtime performance 

3) a runtime mixture of interpreted rules and rules implemented in Ada. 

One of the developers who is using the first approach of implementing the rales in Ada 
lamented about the tremendous overhead - approximately 1 week - of recompilation for any 
changes to the 510 rales in his rale base. The selected implementation techniques for an expert 
systems rale base influence both system maintainability and performance. Based on their 
development and maintenance experiences, the panel identified a critical need for a support 
environment that includes a real-time browser for runtime "peeks" into the system and 
knowledge base maintenance tools. 


E-4 




RECOMMENDATIONS 


Software engineering is a challenge for the AI community due to the evolutionary nature of AI 
applications. Software engineering is one of the strengths and advantages offered by a 
properly managed Ada environment. We, the AI with Ada community, should develop 
processes and tools that support the "engineering" of AI applications with Ada. The AIWG 
should add a section to the AIWG's annual report to describe software engineering processes 
for AI applications and assess the progress that has been made in the use of software 
engineering principles to develop AI applications. The AIWG should develop a database 
cataloging software engineering processes, tools, and applications with periodic publication of 
this information in Ada Letters. 

In order to manage and engineer Ai with Ada projects, the AIWG should establish a set of 
software metrics that are compatible with the evolutionary nature of AI applications. Further, 
the AIWG should conduct annual surveys to determine the current values for the software 
metrics so that this information can be used by the Ada community to manage and engineer AI 
applications. The software metrics should be published in the AIWG's annual repon and Ada 
Letters. 

The AIWG should become actively involved with standards bodies that are developing 
standards and other guidance that impact the development of AI applications with Ada. Of 
course, the first step in this process is to identify the AI specific requirements that need to be 
communicated to the standards bodies. The issues and problems discussed at this workshop 
should be matured into concrete requirements and recommendations for formal submittal to the 
appropriate standards bodies. 

Many of the issues and problems faced by the AI with Ada community are the same problems 
faced by all AI researchers and developers. The AIWG should work closely with the AI 
community to concentrate our combined efforts on solving our common problems rather than 
focusing on the perceived differences between the AI and the Ada communities. 


E-5 





SECTION 1 


APPLICATIONS EXPERIENCES AND LESSONS LEARNED PANEL 
MESSAGE FROM THE PANEL CHAIR 


BACKGROUND 

During the past year, I have been collecting information about existing Artificial Intelligence 
(AI) applications developed with the Ada programming language for the SIGAda Artificial 
Intelligence Working Group's (AIWG) first annual survey [3]. This was a challenging task for 
a number of reasons, but I have come to believe that the major impediment to my data 
collection efforts is the state-of-the-an of developing AI applications. The basic nature of 
specifying and developing AI systems is a major stumbling block to formulating detailed 
software metrics and other measures that are so common for "engineered" systems. AI 
systems generally begin with few documented requirements and ?re developed with a series of 
evolutionary prototypes. Typical software metrics are not readily available for AI systems. 

This fact led me to investigate the current processes used to develop AI applications and the 
problems of applying current software engineering principles to AI applications. 

This briefing was presented at the general session of the Summer '92 SIGAda conference. I 
presented this material as a devil's advocate challenge that stated the issues in an effort to 
generate open discussions about the issues. These and many other issues were discussed 
during the workshop. For the publication of this briefing in the workshop proceedings, I have 
added relevant information from the workshop discussions to the briefing. My briefing 
combined with my interpretation of the workshop discussions is the method I have chosen to 
document the workshop discussions for these proceedings. Appendix A contains my briefing 
and the workshop discussions. 


1-1 






REFERENCES 


1. P. Collard and A. Goforth, November/December 1988, Knowledge Based Systems and 
Ada: An Overview of the Issues . Ada Letters, pp 72-81. 

2. C. Culbert, D. Hairilton, and K. Kelley, 1991, State-of-the-Practice in Knowledge- 
Based System Verification and Validation . Expert Systems With Applications, Vol. 3, 
No. 4, pp 403-410. 

3. J. Johns, June 1992, 1991 Annual Report for the ACM Special Interest Group for A^ a 
Artificial Intelligence Working Group . MITRE Document M92B0000056. 

4. N. Leveson, May 1992, High Pressure Steam Engines and Computer Software . Keynote 
address at the 14th International Conference on Software Engineering, pp 2-14 of the 
Proceedings. 

5. Xiaofeng Li, September 1991, What’s so bad about rule-based programming ?. IEEE 
Software, Vol. 8, No. 5, pp 103-105. Editor's Note: Paul Sanders responded to this 
article in the January 1992 issue of IEEE Software. 

6. D. Woods, April 1992, Space Station Freedom: Embedding AI. AI Expert, Vol. 7, No. 
4, pp 32-39. 


RE-1 





APPENDIX A 


SIGAda Artificial Intelligence Working Group 
Summer '92 SIGAda Workshop 

This paper assesses the current state-of-the-art for Artificial Intelligence (AI) applications 
development processes. This paper discusses the human and safety reasons why we need to 
"engineer" AI applications and presents information about the current processes used to 
develop knowledge based systems. Issues associated with requirements analysis, design 
methodologies, development techniques, test and validation, and maintainability are discussed 
for AI applications and for AI with Ada applications. 

This paper uses viewgraphs with an accompanying discussion section that is divided into two 
parts. The first states current issues while the second part provides a summary of the related 
workshop discussions. 


A-1 




o 

G) 


O Q~ 



U G) 

» £ 





22 June 1992 





SIGAda Artificial Intelligence Working Group 



A-4 


software engineering principies when we 
write software to solve our problems. 








A-5 




SIGAda Artificial Intelligence Working Group 
Summer '92 SIGAda Workshop 



75 

• MM 

C 

. 

Q-oS 

22 ? 

? O o 

o<5» 
u 5 CO 
® CO g 

£ o)-c 

0 -- S 

a > (n 

.eIo 

S2 o>o 
2 <0(5 

is I 

E^o o 

o Q> (0 

0"“ M- 

^ (0 o 

o ® c 

c'T o 
o <w s 

^ ti i 

«I1 

CO o 


C 3 


o 

H 


o <i> 

o£ 
0(0 
C (0 

(0 o 
-o Q. 


c -. £ 

2 w g (0 
^"o o <» 

1- 0) .£ C 
®’ocO 

£ ^ m ^ 

*" o.£ > 

(0 c fc. c 

(O'lr 3-- 

£ ® o i= 

oi® 2- =0 

o.£ c o 

'm (D k. 

“■C E 2 
o 0) o)£ 

2 £ e-= 

2 a-- * 

Elis'S 

(0 Si2 g> 
E<s O.E 
£ c OTI^ 
® £ ■^ c o 
t o S c 

— O (0 £ ^ 

0) ®-E 

>£ OTJ ^ 

o •■= (0 c ^ 
c ^ 3 3 5 

■O 0?£ > 

®~ m a-E 

= S-a-S * 

W « ® 

fl) g c .E § 

s®2|§ 

®rSE€ 


CM 

o 

2 


A-6 


Nancy Leveson, May 1992. High Pressure Steam Engines and 
Computer Software Keynote address at the 14th International 
Conference on Software Engineering, p 2 - 14 of the Proceedings. 







Software Safety and Liability Issues 

Our ability to "engineer" AI applications is rapidly becoming a deciding factor in the acceptance of safety-critical systems 
that contain AI applications. After several decades of successful research and prototyping, we are just beginning to 
grapple with the issues of building "trusted systems" that are safety critical, correct, dependable, robust, efficient, and 






n Q. S3 . 

Q-«rs c 
£ > o 

- < S s 

u h ^ o 

3 ^ "C o. 

o 5 « 

«.5 <; 

Gb k. 

E = 2 

c/i .S V O 


E 

3 

8 


^C/3 

f/i 

■S 

V 

o 

c 

u 

In 

u 

x: 


•a 

u 

t/i 

CQ 

U 


cd 

JC 

C 

c/^ 

1 ) 

3 

CT 

s 


.i| 

(U 
u 
c 
o 
o 

<u 


o 

c 

5/5 


O O 

.TJ — 

.Q C O ^ 
Q.E geo 2 

2 - ^ C 3 

E u o 

t ‘fx O' <A -n 

J ^2'e ® 

In 

^ — U aOjO 

C 
U 


£6 W S'iS 

^ ID 2; .2 'o 
Cl, ea — ,a 


u 
> 

' Q. ^ 

o 3 

^ “sa c/j 

b.2 

O W) S *3 

"O o J22 

P ’0 

? "o C — 

<r; o .S .2 2 
o r-o'E.^S 

S § ^ I 

S _ - O 4» 

•S 3 (/5 o .£ 

« nn 4) o 

« . 3: « ^ 

cii’S o d 
“ o E-g-g 


lo 

‘K 

c 

o 

S' 

E 

T3 

C 

ea 

Z 

ca 


O 

JZ 

c/l 

ea 


O 

3 

c/> 

t/5 

u 

3 

c/3 

C/3 


X3 

3 


3 

Cm 

c« 

’rt 


s 


c 

•S 

*S 


1) a 

eo 5 

a> ^ 

‘?3 S 

C« 

s § 

.3 t> 

1 I 

5 *- 

> c 

« .2 



ea 

u 

IS 

•g 

> 


3 -o 


ect 

(/i 


I 

w 


5 

73 ^ 

^2 « 

3 2 ^ 

O c« .. 


II 


A-7 





SIGAda Artificial Inteiiigence Working Group 



e 2 

o Ep 

O oH _ 

c ^ ^ 

(0 <0 c c 

c n CO 

S ^*2 o>c c 

c ^ 0) c O O 

2 Q.c-i.2m 


ii (0 c o c'S 

v-^ (0 <0 > _ 
'= O O >t 

"* o E « w-p 

y-o’S’o’i ® 

S o £ ® 

^ fl) ^T3 


O ® ■* »- O 
0)0)2 
c <0 0) Q.E o c 

> £ £ E TJ ^ 

ssis 

^ ^ S ~ <0 « 

C <D W JC (Q 

w tk!. A U ^ 

5 (1) s 3 

5 « o o 2 w o- 

c c ^ 5 <0 

•SsscSS?. 


IS ^ 5^ 3 

•t ® « o ?*c ^ 

«£ eS.S'5 £ 


cl CZ 

o)(55= 9-2^ 
: 2”2S£c 

r ' Q.S (/) (0^ O 


o 

0)13 

>» 

os: 

. 

O w'D 
CO O O 

>» 3 O 


SEo 
o c 
2 0 0 
« 0 ) ^ 


CO ■*- = 

£-=a 

>..5^2 

|ls 

«.£ o 

O*; C 
o c 
c o> £ 
o E o 

c§2 
® 2 o 

S ? o 
S <0 

CO O**- 

O o c 

CO 

3*- p 

Q.:s 3 

O O"^ 

goo 

^?i£ 

•5®- 

®Sl 

g eo «5 
^ 0-0 
O CLo 
jC CLCO 
h- O 3 


Nancy Leveson, May 1992. Hiah Pressure Steam Engines and Computer Software 
Keynote address at the 14th International Conference on Software Engineering, 
p 2 - 14 of the Proceedings. 

JFJ 6/92 







We must understand the human impact of our inventions. 






SIGAda Artificial Intelligence Working Group 





Ada provides an optimal software engineering 
process for all Artificial Intelligence problems. 









Theorem: An optimal software engineering process exists for all Artificial Intelligence problems 

Our greatest challenge is the application of software engineering principles to the development of AI applications. This 
theorem and proof are my way of asking the question: 


c 


1 8 

c 

O M o 
c« C -3 

— "C « 
SS <u o 
£ "u •.=: 
•t: c o, 

Q, 00 

o c ™ 

«3 U < 

C 3 & 
o 50 
0.£ o 

Q. O > 

13 o 

•o c « 

<f« 

« o< 
.2 c 00 
“ « c 

\a G-.r 
3 ^ 
25 V5 > 

u *0 0 

2 <.2 

G. W5 o 
•§•0 rt 

S <2 

c £ ^ 

'obiJ 
c S.S2 

« e « 

2 G.-S 
o CO CO 

^ _C 

■s iS 


^ c/5 

S c « 
9 Es 
£ ii o 
23 5 
8.2 ^ 
c« CL<< 

<< o 


cO i/i 

5 = 

<. u 
00 E .. 
ecu 

■^ £ "u 
3 .= >> 
<*- > u 
o H u 

1/5 „ 3S 
U ^ — 
G H U 

= c 5 
« E s 

C Q. $ 

S .2« 
^“2 2 
« « 
^ "O tt 

" ^ o. 

E 

c CO 8 
U O u 
E u -S 

^Sl 


•5 ^ 
s 


-o 

2 g 

3 e« 

c/5 V5 

c c 

D a> 


r; ^ 

& 


uT « 

M g 

5 c 

c4> U 


2 c 

U V 

is 00 


CO "S 

K ts 
§ u 

8 y 

d. ’O 

^ s 


c« 3 <is ^ 

2 tS .a :§ 

jrr r% 


c/5 

u 

•a 

u 

5 y 


CO 

u 

9* 5 

cx 

T3 

c 

U G 

.y* 73 
^ u 
u -a 
G.-C 

E 

0 

u 

■■a 

> 

T3 

u 

>< 

B 

u 

0 S 


CO 

u 

U <«-i 

"c 

c 

0 

•X3 

u 

c 

cO 

c 

> 0 
■0 2 


03 o 


vO 


A-11 






SIGAda Artificial Intelligence Working Group 



A-12 


This "design for evolution" is accomplished by conforming to 
standards (UNIX, FDDI, Ada, X Windows) and designing the 
interconnections with sufficient bandwidth to allow for 
faster components as they become qualified for space. 

■ ■ • 

Donald Woods, April 1992, Al Expert, Vol 7, No 4, pp 32-39, 





Our Challenge: Software Engineering with Ada and AI 

The future is bright for both AI and Ada. What does the future hold for AI with Ada? The answer to this question will 
depend on our ability to use sound software engineering processes in the development of AI systems with Ada -- or any 
other language. 


55 x: O 
<u >J 

.y c -o 


c/5 

.2?-2 o' 

<U -O Tf 

3 5 s 

■8^-- 
^ 00 

c/5 

rt S-S 
•a o i. 


JC O c 
1^-2 
^ s-« 

< «i:= . 

'^<8:1 
^ .2 

i 

i<| s- 
81 *-g 

’ot-' ^ ^ 


-- -a 
<r o u 

It .S 

te C 

^I'i 
is o 

c/5 O *3 
C « 
o p "a 
3 h o 
O 

c 5 
_^T3 '■5 
*2 ca 

3 00 u 

.s e > 

> «•" 

U S? K 
b >5 iJ 
ca oo 

.o < C 
Ic w c 
Sc® .2 

o — ^ 

*c ^ 2 
fi o .ts 

(u c <" 
(u'®-S 

CO « 

‘sob 
o -g « 

c/5 ri C 

b « 2 

<2 E g 

■8 I = 

4J c/5 

•S 2 § 

c -S o 

111 

t3 u w 

>c ”0 

^o< 

3 -3 -S 

W5 iS s 

c o — 

•o S < 
ca u J; 

. 2 ^ C® 

llw o 
« :2'E 

"b c « 

3 « 6 

c . 

Co's 12 

o § 8.^ 

. V) Q. 

< t/5 ^ ^ 

;r .2 o ^ 

O' b -3 to 

O' 2 " o 

"■ S 3 « 

u a. O T3 

f3 Q.^ C 

c« «j <9 


c ^ c 
<2 «< o 

^ ^ o ? 

D t /5 <* 

1 ^<1 
2-d- 

•I pi 

^ O. 0) *' 

2 bo2P c 
* c ^ W) 
•P ‘C ^ ‘K 
Ss 4 > o 
2 2 >^'0 

52-^2^ S, 
E ^2 « 


« g 3 I c’ 

^2 § 8-8 
CO a « Y ea 

2 !■§ 0:M 

0'S "“S & 

CO CO T 3 2 ^ 

P C 2. 8 ^ 


•a c V 
g "b 3 c*M o. 

CO CO T 3 2 ^ 
« = Mb ” 

a 

SQ-®.S-g 

O c /5 3 ..x> 

'2 ea O o 2 

g “ CO -8 'U 

; 8 -g S «.2 

3 - 3 -2 j 2 ^ 
CX« (/) ^ o 

•y CO *«H f/i 

^ ^ O O 
" P '-3 P J 4 . 

< I 

■o ^g-ca J 

.8-S^ P 

£ .2 S) p p 

0.2 b b 3 

‘^•c w 3 CO 

b o 3. <" 
3 T P O'— 

O c CO P 

-3 O P 2 
« -3 P -3 .2 

C .2 b ’5 ’C 
§ 22^0 

s p o 8 e? 
3 «S S 
a^-g.2 O 

-O g 2 m£ 

ca 'C ^ 

^ s -a .3 t' 

5? Q c m'-3 

oco 3 


^ ^ S -a 

E^-i ii 

«;2 ><2-3 
jS c-S S g 


Ox 

C /5 

3 

o ^ 

■§ I 

So . 
•-I g 
S2 E 

S CO Si 

.2 3 to 
b O >> 

g-a «« 
:a 2 « 

i S*.-s 
^g-l 

•sg< 

•> p p 

^ ' 3 ’a 

•n w p 
S c ^ 

p-ScS 
■o S p 

S.s I 
■n ii 
s s 

Q. o E 
o I”? 

.c « ca 
J2 2 ^ 

sp 

^•82 


A -13 






SIGAda Artificial Intelligence Working Group 



0)0^ 

£ (0 

(0 0^2 
(0 § 3 

<o*i_ 5 o 
o 0> E: 

O ®<T3 

II ® i 

«*-* ^ s 

C •'tS 

« ^ A) Co 

O C-nil 

O <D . • 
0>w ^ (fi 

0)^ 0) 

c fc- OS 

CO c 

> CO o 5 

oS o 
± >»c 

S» O 0) 

■= c 

o 

T E c (0 
(0 E co-g 
cn E --.S 

28 £s 

oSsS 

J53l 


0) 

s 

c 

CO 

o 


CO 

c> 


0> 
o 
c — 

Ba 


- a. 
£8 

<T3 
*•- 0) 

® CO 

.52 E 

CO *5 

S O 


E 

^ CO 

^ S-o) 

SS-o 

(0 w-g 

-DCS 

c o a 
3 g E 

CO 2: 
CD O 
< ^ U 


M 

<» 

CD 


A-14 


Knowledge Based Systems and Ada: An Overview of the Issues. 
Ada Letters, p 72 - 81. 




Can we bridge the gap between the AI and Ada cultures? 

The representation of knowledge, manipulation of knowledge, reasoning with knowledge, understanding the true 
meaning of intelligence, and the impact of our systems on intelligent beings are some of the exciting challenges facing 
all Artificial Intelligence (AI) researchers today. These challenges form a common bond between the AI with Ada 


5 

U 

< 

JZ 




T3 

C 

cd 


cz 


& 




C/5 

C/5 

a. 




o 

o 

c 

D 

JZ 

(A 

V 
<A 
(A 

V 




A p 


(U 

D 

t/3 

V 


(A 






2 wi i- 


a. 

oa 

c 

•c 

V 

u 

c 

'So 

c 

<u 

I 


Q. 

_o 

"w 

> 

V 
T3 

V 

S 


>! « 

■H U 


c 

_2 

vs 

3 

u 

1/3 


a 

o 

£ 

fc. 

O 






Sb.H.a 


A-15 







SIGAda Artificial Intelligence Working Group 


d 



CM 

o> 

m 

o 

E 

E 

3 

(f) 



Q.Q-«»>'Sn»SSS 

g o>* «-o a> £ o (5 

SglSc^lPl 

0) c 9"— P E ^ 


W .i= ^ ^ D 

W ?■- S C £ 

*“ .S <D 4 S ® ^ ^ 

o P 

0^3 « ®.2 ( 

Soo«*Sj 

■c 2 — "5 >>•{ 

« Q.W c 2-“] 

S 2 *m-2* Q.-g 1 
. 5.4S «.2 3 < 

: ^ ^ T3 O E Ji 


CO 

CD 

JO 

o 

CO 

O 

a 

Q. 

CO 

O 

g 

0 ) 

0 ) 

0 > 


a> 

O) 

O: 

E 




A-16 


Phillippe Collard and Andre Goforth, November/December 1988, 
Knowledge Based Systems and Ada: An Overview of the Issues. 
Ada Letters, p 72 - 81. 




Requirements Deflnition with Prototypes 


60 ^ ;5 
•S-S-g 

U (L> D x; 


•S <U 00 xs 
«•- 


2 « co2i 

.•2 g'c.a 

Q. gi 5 c 
=0 P 

b o 
> O.'O o 

=*3 it 

Its o 

a> (u o « 


2o u « -a . 

£ 

— « ^ r- O 

= g-SS-c 

^ f.-y 

« > 60— 

XI <6 5 C ^ 
O </) (U ^ ” 

•a.2<l:: 2 5 

Sl-ls 

i * 

o-g^-S- 

;s 5 c o < 

— 2o;^cx 

< X ^ > 2 

« li 

— o ^ o2 
S —5.S<*s 

< < Q. O 

c V5 ^ 

.2 = J w 

00 O ■_ « P 

3 C3 < '5 ** 

2X S 

t3 O-" 

p, S' Wljg; Q 
o ^ S o ^ 
X « g 

^ J tx 

Ni^i 

= « 
o b 2 s U 

•Q X Om Q- P 

S ”0 ® “O o 
^ V u u o 
^ oo 00 10 V 
0Q 3 3 S X 


-*-* .2 

J.i| I 

s| al-sj 

•ti ^ «8 

K C C to O 

(U .£P.2 S 

X 00 4) — 

— U oo el 3 
T3 ^ ‘P P'*-' 

X.2 O*^" 

^3 y-^-S 
5 2 C Q 
3 g g S C 

1- p i 

ea 2 p 6 

CL E > o P 

■£ 3 u g.S 

^olii 

c <u 3 ^ 'oo 

3 > C C 2 
p 2 fe « ^ 
b ^ O C (D 

£ ^ ”S Cl ^ 

> C 3 

o <u ofc U 2 C 
r n 3 _ > o o 
^ S' M'S K-i 

g-c g « g 3 
X S'® -‘S5 
«J s e 

2 <§ u .2 * o 
^ "o 2 S *- 2 
<u c o P to Cl 

X 06 X C o 

S P = « 

oo i y p o 
c/3 J: *S ^ a> w 

33 3 OS « 

^ 2 g ^ C -§ 

>» p 2 «« .2 3 

qc c 3 5 O 
P C •“ r S ^ 
•CP 52 ^2 — 
^ o .S a-*> 

c/3 O O O 0- ^ 
^ rt ”0 ^ 4> 

> c/3 i- c/3 

1 ^ 8 M « & 

•o 2 b -3 ^ c 

2 o g E 3 p 

^ s. E i - 2 ? £ 

C D. p g* 

®°2— 

SSi^.|2| 

2- 0-a 2'g’^ 

4^ O *5 ^ 

S ^x V 

.:2 E :8 £ -3 3 
2 2 ^ X 2 -50 
f3 > 2 P C 


A-17 





SIGAda Artificial Intelligence Working Group 



JFJ 6/92 





O o 
00 KS 


£ 


0/5 

CO 


•a 

c/5 

X) 


<u 

&0 


■s 


o 

c 


« 


o 

aj 

3 


« 

C 


bfl 

c 


W) 


J= 

o 


u 

> 

u 

<u 


C 

O 

o, 

a. 

3 

W5 


c3 

•o 

< 


8 


V 


o 

a: 


V3 

e 

o 


V 9 

a 


<« 

u 


o 


i 


o 

on 


C/5 

W) 

c 


a> 

o 

c 

a> 

*C 

4> 

a. 


•o 

D 

g 

D. 


^-S 

" C 

oi -a 

y "D 

S-c 

2s o 

C t/i 

S -o 


C c/5 

1| 

E o 


o o. 

•= o. 


to 


j : 

S< 


o 

«£ 




^ o 
_ c 
« 

c c 

o c 

i't.. 

0,0. P 




s« ^ 

w >.<« 

•f = t: 

^ 33 (U 

2 X> O. 

^ eo X 

u c a> 

^ 2 ^ 

^ c -E 


^ g c 

S E ^ 
5^0 


•O « E 

f ^ TO 


.2 Q, Q. 


1— Ui- =• 

q,E E 

CL— 


rt c/5 O 

M V «•# 


a> 

3 </5 
< crw 
^ '^2 X 


X c U 

C 9 JZ cs 
O O O 


TO 

o o 

c/5 4) ^ 

I is O 

t> — S 

£fo « 


a 

o 




^ ^ 
”“.2 2 
2 p-S 

a> P a> 

g|’§ 

00 a.' 
c '■ 


E —" o 

c 


A-19 






SIGAda Artificial Intelligence Working Group 



U> 

c 

S c 

o>‘(5 
Sc 
^‘(0 
■o E 

0) c 

<0 ^ 

^ o 

o (5 


«.£ 

>*0 
4- <J) 

O Q. 

<i> o 

<2 g 
O o 


O)(0 
C P * 

C (1) 
^ O) — 
O ^ o 

C Q> ^ 

®§i 

5 « 

•5 ® ®' 

( 03 ^ 

®'s 2 
c2 

c - <0 

it .<2 § 

A -20 


= t 

Eco 

E CO — 
^ CO 

e c ® 

ra® ^ 

o E 

^ ^ (i> 

“"o-E 

o g-g 

2 S« 

g-S <0 

■9c£ 
2 0) ^ 
3 o c 

o a> 

rt <i> 

CO" Q. 

0) C O 

0)0'S 

CO US 2 

C E 0) 

co.E'd 

■0.2 ® 

co*o£ 


C 0) 
C W 

■¥S 

W £ 

a>.E 

.Q c 

S E 


0) . 
CO (0 
3 0) 
CO'S 

o so 
o O 
c 3 
CO 13 
C O 

2a 


c^ CoS 

0.2 E g 


CD .2 


^ 0) 
c IS 
o> 2 

Si 

o tr 

c^o 

O c 

(O^ 

o 

ai 

= S.= 

O o' ■ 

Eo) ; 

= “ s 

CO— o 

c 0>'<3 
0^0 
O'^O CO 

>gs. 

CO CO c 

0) ^ N 
® 3 a 

sla 

3 S'^ 

8m = 

CO 

0)^ CO 

O o’" 

2 m 

S o2 
S o c 


ss a o c 

C-= CO 

m £ *3 0> > 

2~ .JOtr-n 


CO ^ ^ 


Xiaofeng Li, September 1991, What's so bad about rule-based programming?. 
IEEE Software, Vol 8, No 5, p 103 - 105. Paul Sanders responded to this article 
in the January 1992 issue of IEEE Software. 





Are AI with Ada systems testable, maintainable, and reliable? 

The difficulties inherent in AI requirements analysis inevitably lead to problems with the testing, verification, and 
validation (V&V) of AI applications. Testing and validation activities ensure that the developed software system satisfies 
a well-defined set of requirements which unfortunately do not normally exist for AI applications. Verification activities 

__J_1_I___•___j _ - : _i_i_ _•___I *.1^ _ 


o - u 

^ « 3 

O O 60 
CA C 

SSI 

« s 3 

£13 o 
> .y c 

O o c 

^ pH 

8 cq C3 

€/5 3 

CS 

o 

^ S ^ • 

</i « C u 
" tsO 3 ts 
cn zr 00 3 
«.S « O 

3 " 

= « 5 

% E 3 3 
‘C •? 1) 

y Jr 3 O 
3 ^ P C 

C O I « 

I I-3-3 

S "o oo.y 

« « C .3 

E "o 'C S 

U W c BJ 
2 JU 4, or 

c § 3 S!? 

O o 5 2 

Q.« > -S 

Q- 3 p; £ 
3 J= o , 

Crt " !/5 4 . 

E i "-a 

a> c/5 y c 

^000 
•s :3 T3 
S </! J3 - 

§■•5 a. a 

> fe •£ o 

o y 4) 

■o ^ c 

1> I 3 3 
C C cS ” 

: g S| 

“ “iSf 

S-c s> ts 
c « s 

U > 3 c /1 


'V M 

E M ^ 2 I 

2;^E 3 
^ o Si 

4) 3 3 c /1 c« 

4 , C 0 3 Q 

c /1 •— .3 3 5 O. 

c /1 C " M O O 

o £ £f) E "o a. 

■3 3 fe o § Ji 

••S.O § H.g..E 

Cl^ ^ /-n ct 


*p O 3 

§■000 .a'« 

J; o = " E S 
< fe. o “-g 2 

*S c c Cl, o 
(3 - 2 **- — 3 

2 I ® ^.i£ 

<2 ^ ^ « 4i - 
-c S Si ^ .£ 
ofi 00 Q ctf 
5 c c S — E 

•S <^5 ”3 **“ *13 
" e^. c /1 3 60^ 

ao c /1 4 J g c p 
•£ §.E S'E S 
S? E 'c^ S 

E I § £ 

•S E £ § g « 

il=§3E- 

2 13 f- .a « -o 
“-O 8 S 2 E 

T) c y «J *3 ^ £ 

« 3 g - g .3 s 

? o g .3 - £ 

■g o i o «; <; * 

S ^ V M § O-g 

" u; S = — E“ c 

^.2 2 ■?! S 2 3 


•S S c 
S31": 
E 3 E 
1 ) ,C o 

C- 

c a> 1) 


C-2 S 'E' S 113 

•E > •£, fa 13 Cl. 41 

"P S'! 2P 4 , n, il, 
|| £ ^ §•‘2^ 

2^-SS5c-- 
2 S ^ 2 i 

S _ to o S 

2 4> E jz w c: _ 

c« o 3 ■“ 2 ^ o ^ 
c/l 3 4 ) 5 "3 5 

3 4 > — 3 « ™ 

^ ^ O p ^ cf 
^ "w S' S 

— ^ 3 S' E 

4) c:3 £ > cu E 

5 'Z Id ^ rp c 
5 c grt w o 

Q- c/5 >• ^ c 

i!illill 


o 

O 12 -O " «3 

£ <^ -O O 

•3 fa C .E « 

-5 <2 S bO « 

^ ^ H 22 c -A 

E g-S/Sc S 

. rt E *£ 2 « 
^.E S-S E c 

g-c-e 2 ‘S 2 

3 3 H'jg 

E e”^ ^ 

g'-g lEfl 

& S * e '■!.< 

cE E -S g*« 

= I 8 o'“ ■£ 

~ So *- 0^3 
^ >-> 4> -S 7^ S 

c3 c/l c/l “ W .3 
4 j 4 ) E O •£ _ 

^ .3 -S O ^ 
o ii ? -5 « 

a-s|^ 

3 _^ £ ? « ^ 

•£ - O 3 "S 3 

2 E .2 3 « 

8 2-^ fell 

V ^ C %*i« 

U. C ^ ^ *S O 

^2 § 58 I « 

•a 3 '3 3 ; T 3 
w '3 2 y 3 
8 E:M 2 S ^ 

13-g 

•C 2.8 .2 .E ^ 

^ E " -o c« 4> 

” o £„ E 2 
•go 

— W— R E-o 
p-o jj “•£"P 
1) ^ C Cl* w 
3:0 *§0.3 

2 eg Sg > £ 

3 u E SC ^ 

5 "O 5 E tj 
.9"3 60.2 o 2 

.2 o 3 1 : -S 

S ^ "O ^ g J 2 

^53 gS ^-2 g 
0 . 3 : g 0) 3 3 a 
/s D 3 ft 
2 u *3 'S 'ft O Jii 
4> « Buta 3 .D 

J2 5 y o 6j 

^ J — .£ 60 O .”3 

.P P S' S 4> 3 
> 3 Q, 3 3 E > 


A-21 





SIGAda Artificial Intelligence Working Group 




(0 
(0 D 
(O-O 

g- 

^ Q. 
CO 
O 


T3 

O 

E 


0) 

(0 


0) 


o 
t 

OTS 

Q-c 

( 0 *“ 

E£ 

© g 

CO ^ 

“ w 
© © 


o o 

nP 

in CO 
r^r^ 


■o 

© 

o 

© 

CL 

X 

© 

c 

© 


© 

© 

w> 

3 

O 

O 

© 

© 

© 

© 

© 

© 

© 

E 

© 

© 

>» 

© 

© 


■o® ® 
£ © © 
m 3 3 

© O O 

9-0 o 
S © © 

vP vP 
C 

©oin 

£0>0> 

c c 

© © © 

©££ 

3 © © 

O © CO 

Q © © 
© © 

© © © 
i> ^ ^ 

©^^ 
^ CO 'fJ' 

geo in 

p^ 

in 

h- 



A-22 


David Hamilton, Keith Kelly, and Chris Culbert, 1991, 

State-of-the-Practice In Knowledge Based System Verification and Validation. 
Expert Systems with Applications, Voi 3, No 4, p 403 - 410. 

JFJ 6/92 








Case Study: Accuracy of Existing Systems 

Culbert, Hamilton, and Kelly documented the experiences and problems encountered by knowledge based systems 
developers and users. In their paper, the terms knowledge based systems and expert systems were used interchangeably 
by the authors. Although the focus of the authors was verification and validation, the article reveals some very valuable 


,o 




u 


o 

u 

I 


> --a c 
^ si o 

Ss2| 

e c >^fT 





Cd 

1 

p 

C/3 

p 

5 

P 

> 

'C 

2 

V 

a 

C/3 

J= 

4mS 

1 

*3 

P 

a. 

c 

a. 

g. 

o. 

_o 

p 

c 

o 

o 

p 

P 

>% 

p 

E 

C/3 

E 

u 

> 

cd 

w 

3 

P 

w 

cd 

p 

«■# 

3 

C/3 

c/5 

>» 

U 

c/5 

S 

w 

-a 

c 

P 

Cd 

t/3 

c/3 

*0, 

o. 

cd 

P 

e: 

O 

Cd 

r- 

•n 

cd 

P 




CQ 


c ^ 

as 

(/i o 

^ c/S 
C 

B 

3 

^ d 

o "O 

’So t/i 

CO c 

m CO 

S 

c/i 3 

£ - 
a 3 

«.22 

£.22 

■as 

cd_r 

zz 

C cd 
O u 

t/1 

,c< 

2 c/i 

s.s 

SE 

V e 

o 5 
§ 8 

‘il 

D w 

Cl« c/s 
U .3 

•S.S 

S •£ d 

2 b-o 




CS 
.5 tS ;= 


c/s 

C 

O 

'S 

c/s 

3 

fj 

c/s 


O. 

O 

,3 

c/s 

je 

b 

o 


(/) 

c 

cd ra 

•ill 

^ S? c 

a’^ 

•o 


(/) 

c 


3 

O 

c/5 


C/3 


C/3 

^■S Ji 

i-'s s 

> o 

O Q. 
^ Outs 

a2.s 


eO 

i 


c/s 

3 

.2 

'> 

xs 

o 

c/s 


CA 

C 

o 

•3 

CO 

o 

S’ 


c/s 

c 

o 

•3 

CO 

a 

K. 

g 

§ 

3 

tso 

c 

•3 

C 

§ 

cr 

w 

g 

•s 

c/) 

c 

.2 

C/3 

C/3 

3 

s 

^ . 

V 


K 


P 

C/5 

2 

I 


A-23 







o> a. 

c o 


0 ) 

o 

0) ^ 


o 

c 

0) 


(0 

T3 


0 )< 

= <3 

S (/) 

c 


(0 
I MB 

o 


CM 

G> 


<D 

is £ 

51 

CO ^ 

■a 

< 

O 

(0 



<n 

> O 0) O (0 

> a© oS 
(0 o c 



WZDi- 

© > o c c 
> o © 2 
c E 

c Q.E 

O © © 

o © © ^ n> 
^ © S 

I i’ll 
Jlssi 

■sr c © o ^ 
c 5^ t: o 

© OL’O 

S o T3 

o © © ^ 

2 T3 > > JD 

3i2 fe wP 

S’c &® I 

£|S-.'S| 

si 5 g is 

3-2 

©TJ © 5 
^ © © ^ 
^ ©^ 0*0 

V © © © © 

-£ C£ © 

^£«o8 

■.■SBSS. 


© 

© 

o 

© 

E 


■D 

© 

o © 

3 

c o 
© o 
E'o 
© ^ 

ti 
© ^ 
ii © 

^2 
o © 

■c c 

^ © 
O O) 

O)© 
C JQ 

ll 

^ 3 
^ o 

©£ 
© © 

cE 
^ © 


© 


© 


C 

o 

Q 

■D 

15 

> 

■o 

c 

(0 

c 

o 

• ■B 
«•< 
(0 
p 


eo 

o 


^ Am 

?d 

d 

=Q©lo 

i2 (0 -. 
^ ffi o 

O 0)^. 

•a5 *» 
g ^ c 

Sii P 

CO u .s 

$ g 

-- 

®5 


0( 

2 


O 

T* 


s: CO = 

© © 

© X 
© © « 

H © 


m 
P O 
X“ 
. O 

g2 

SfV 
i* 

ra 

= *5 

|S 
raS 
O © 


a 

Q. 

< 


w 

E 

p 

p 

>« 

© 

t 

p 

a 

X 

u 


A-24 








SIGAda Artificial Intelligence Working Group 



C C 

0) <D 

EE 

0.0) 

o.± 

■5)3. 

o 0) 


a> o> 
c Q. 
0) >« 
0)S 


o'O'O 


David Hamilton, Keith Kelly, and Chris Culbert, 1991, 

State-of-the-Practice in Knowledge Based System Verification and Validation. 
Expert Systems with Applications, Vol 3, No 4, p 403 - 410. 

JFJ 6/92 





Case Study: Design Methodologies 

Many of the survey respondents did not use a formal design and development methodology. What are the design 
methodologies used to develop AI with Ada applications? 






SIGAda Artificial Intelligence Working Group 



a O ^ 

- *<D 5 

S^(/> a> 

3 O 

3l^n O ^ 

0 2 - E 

- o o 

t>' 

3>0.£ 3 

5£T3.a 
■'.ti 0)5: 

3 <^>*-5 

iJ to 0) 

J.S5 ^ m 

= ^ 2^ 

I E 0)0 
: a> ^ (0 
« TO 

. W g c 

i)-5.2-2 

|£2M 

: t: 

; (0 Q. (/): 

:£o=5 


(D o 
O Jl 

'St 


» 0) iC 

- o ^ 

c (0 0} 

So: E 
£ iS 
E£ « 

iSw 

s aS 

w iS S’ 

0(0 UJ 






As discussed in the survey, 70% of the systems were operational and the rest were considered prototypes but some of 
these prototypes had operational users. The respondents could not clearly distinguish between prototypes and operational 
systems -- their systems were operational prototypes. How does this "reality" fit with the Ada design and development 






Appendix B 

AIWG '92 Workshop Participants 


Henry Baker 
Nimble Computer 
16231 Meadow Ridge Way 
Encino, CA 91436 
818-501-4956 (phone) 
818-986-1360 (FAX) 

James Baldo Jr. 

Institute for Defense Analysis 
1801 N. Beauregard St 
Alexandria, VA 22311-1772 
703-845-6624 (phone) 
703-845-6848 (FAX) 
baldo@ida.org 

Mark R. Bowyer 
DRA Famborough Q153 
Hants GUM 6TD, UK 
252-24461 x2503 (phone) 
252-377247 (FAX) 
r_bowyer@ uk.mod .hermes 

Jorge L. Diaz-Herrera 
SEICMU (MSE project) 

4500 Fifth Ave 
Pittsburgh, PA 15213-3890 
412-268-7636 (voice) 
412-268-5758 (FAX) 
jldh@sei.cmu.edu 
Rob Ensey 

Boeing Computer Services 
Box 24346, Mailstop 9H-84 
Seattle, WA 98124 
206-394-3055 (phone) 
206-394-3064 (FAX) 
rob@patty.amas.ds.boeing.com 

John Haun 
DRA Portsdown 
Portsmouth Hants P06 4AA 
Hampshire, UK 
0705-333839 


Rich Hillard 
Intermetrics 

Cambridge, MA 08138 

617-661-1840 

rh@inmet.com 

Janet Johns 

MITRE Mailstop K203 
202 Burlington Road 
Bedford, MA 01730 
617-271-8206 (phone) 

617-271-2753 (FAX) 
jQohns@mitre.org 

Mark Johnson 
SMC/CNWS 

Los Angeles AFB, CA 90009-2960 
310-363-8770 (phone) 

310-363-8725 (FAX) 

Michael Looney 
DRA Portsdown 
Portsmouth Hants P06 4AA 
Hampshire, UK 
44-0705-332330 (phone) 

44-0705-333543 (FAX) 
MJL%ARE-PN.MOD.UK@Relay.MOD-UK 

John Miles 

DRA - Maritime Division 
ARE Portsdown 
Portsmouth Hampshire 
P064AA England 
0705-333839 

Howard E. Neely III 
Hughes Research Laboratories 
3011 Malibu Canyon Rd 
Mailstop MA/254/RL69 
Malibu, CA 90265 
310-317-5606 (phone) 

310-317-5484 (FAX) 
NEELY@MAXWELL.HRL.HAC.COM 


B-1 





John Tunnicliffe 
DRA Portsdown 
Portsmouth Hants P06 4AA 
Hampshire, UK 
0705-332002 (phone) 
0705-333543 (FAX) 

George (Rick) Wilbur 
Boeing Computer Services 
Box 24346, Mailstop 9H-84 
Seattle, WA 98124 
206-394-3055 (phone) 
206-394-3064 (FAX) 

Mik Yen 

Boeing Defense & Space Group 
Box 3707, MS4C-63 
Seattle, WA 98124-2207 
206-662-0213 (phone) 
206-662-0115 (FAX) 




