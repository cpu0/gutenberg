MOPSS uses CORBA in conjunction 
with a multi-tier architecture to allow 
multiple users to concurrently view and 
edit schedule data. The adaptable archi- 
tecture of MOPSS also enables easy inte- 
gration of tools and models to satisfy new 
system requirements. MOPSS has two 
clients: an X/MOTIF client and a Java 
client. The Java client is effective over the 
Web and has been used by remote MAP 


mission scientists and engineers to mon- 
itor spacecraft integration tests. 

The most obvious use of MOPSS is for 
control of commercial satellites. In the 
television industry, MOPSS could be 
used to schedule TV commercials on 
broadcast television based on FCC rules, 
demographics, and program content. In 
the medical field, MOPSS could be used 
to schedule and optimize use of hospitals 


in a network and resources within hospi- 
tals. In the power industry, MOPSS can 
be used to schedule nuclear power plant 
maintenance. The education and trans- 
portation fields are also candidates. 

This work was done by Terri Wood of God- 
dard Space Right Center and Paul Hempel of 
Computer Sciences Corp. Further information 
is contained in a TSP (see page 1).. GSC- 
15858-1 


Global Precipitation Mission Visualization Tool 

Goddard Space Flight Center, Greenbelt , Maryland 



Location of Validation Network match-up sites and associated site grid domains in the southeastern U.S. 


The Global Precipitation Mission 
(GPM) software provides graphic visuali- 
zation tools that enable easy comparison 
of ground- and space-based radar obser- 
vations. It was initially designed to com- 
pare ground radar reflectivity from oper- 
ational, ground-based, S- and C-band 
meteorological radars with comparable 
measurements from the Tropical Rainfall 
Measuring Mission (TRMM) satellite’s 
precipitation radar instrument. This de- 
sign is also applicable to other ground- 
based and space-based radars, and allows 
both ground- and space-based radar data 
to be compared for validation purposes. 

The tool creates an operational system 
that routinely performs several steps. It in- 
gests satellite radar data (precipitation 
radar data from TRMM) and ground- 
based meteorological radar data from a 
number of sources. Principally, the ground 
radar data comes from national networks 
of weather radars (see figure) . The data in- 
gested by the visualization tool must con- 
form to the data formats used in GPM Val- 
idation Network Geometry-matched data 
product generation. The software also per- 
forms match-ups of the radar volume data 
for the ground- and space-based data, as 


well as statistical and graphical analysis (in- 
cluding two-dimensional graphical dis- 
plays) on the match-up data. 

The visualization tool software is writ- 
ten in IDL, and can be operated either 
in the IDL development environment or 


as a stand-alone executable function. 

This work was done by Mathew Schwaller 
of Goddard Space Flight Center. For further 
information, contact the Goddard Innovative 
Partnerships Office at ( 301 ) 286-5810. GSC- 
15785-1 


Thermal Protection System Imagery Inspection Management 
System — TIIMS 

Lyndon B. Johnson Space Center, Houston, Texas 


TIIMS is used during the inspection 
phases of every mission to provide quick 
visual feedback, detailed inspection 
data, and determination to the mission 
management team. This system consists 
of a visual Web page interface, an SQL 
database, and a graphical image genera- 
tor. These combine to allow a user to as- 


certain quickly the status of the inspec- 
tion process, and current determination 
of any problem zones. 

The TIIMS system allows inspection 
engineers to enter their determinations 
into a database and to link pertinent im- 
ages and video to those database entries. 
The database then assigns criteria to 


each zone and tile, and via query, sends 
the information to a graphical image 
generation program. Using the official 
TIPS database tile positions and sizes, the 
graphical image generation program 
creates images of the current status of 
the orbiter, coloring zones, and tiles 
based on a predefined key code. These 


48 


NASA Tech Briefs, September 2011 



images are then displayed on a Web page 
using customized JAVA scripts to display 
the appropriate zone of the orbiter 
based on the location of the user’s cur- 
sor. The close-up graphic and database 
entry for that particular zone can then 
be seen by selecting the zone. This page 


contains links into the database to access 
the images used by the inspection engi- 
neer when they make the determination 
entered into the database. Status for the 
inspection zones changes as determina- 
tions are refined and shown by the ap- 
propriate color code. 


This work was done by Sharon Goza and 
David L. Melendrez of Johnson Space Center, 
Marsha Hennigan of Jacobs Engineering, 
Daniel LaBasse of MEI Technologies, and 
Daniel J. Smith, consultant. Further informa- 
tion is contained in a TSP (see page 1). 
MSC-24484-1 


Computer-Aided Parallelizer and Optimizer 

Ames Research Center, Moffett Field, California 


All Rmitliwt 

LtiDp FilTtfL 

ToUttr ivrlil 


Co*«td Swial 
CHtH> Ctrl' 1(1 1 
N'l'-i Cfcedvft 


Trot JKuntof! 


1 Uvhki itriil lnup .1 (A ul| ut ill pridliiEf, in nti I Itlij |>inl 

* - 

Jo fc>4;fciit.i 
T as/i/Mi 4* Hkltidl 
45A/W Jo JMl 
emms jo moo k<2.iin.i 


USwOflTIrwd 


Hht Erlwim; 

Ail* 


CUiTIlH (WlfliBCl 





□SOI 


lhb: in/vfr 4*fe4,J0«i,i 

twtrt4$*wl 

m-n ( r»,- 

fira%nn: Anli/Ou!pul Jstptndl net fWiltLhnH} plfilht fctfpt 

true drp. virlaljlri A, ill 1 dtp. viriiblii U ulput rfrp. rirlilil** 

In/d ut Jf-p. v 


fcUB > 

■ HUJt 

<nuji 


«ll_l 

. “U 




1 

tSkll> 


U.I1J- 


5*IU1;_lc 


Ul UJ. 

ial 4_k 

(ikUjL 


m> 

«u_k 

>flUZ_k 


HOJi 

uij. 

'MllJ.k 




HWIJ. 


irUlibld 


Srlrrtrd Varliblrv 


IU».l • h * ■ 

**U_t - * - C 


Unvalrrlrd Vwlablrv 

9US_k 
*u3> 

IJtW _fc 

mjk 

UtfO Jl 
ralU 

wuy 


IlHnOVI I/O Dr Jrt fctf* r(i*: l itr ■ 0 &-.i' Owptil 

Click Apii ly la prrlCcm IYhrHl*jMan 
for I hr ulntiJ ruilhlit I 


Dincwt- uw r t iux t 


Csntiiai £ losf i 

IS PlJlVil** rich Will 

IS flUc LwHMUit Wlpit JwiwkCK* I Mil'll 

lod um-jirmCiziblB ±>« re uiagt trot nutiiJa the Loop 
IS to ntttbtot 


r*HM IHIPV 

swj- 1. IS.I 
b 1 

io kc-l.f. 1 

tie iwl.14,1 


Imfct* par«|]ri 


The Main GUI (Directives Browser) for CAPO. 


The Computer-Aided Parallelizer and 
Optimizer (CAPO) automates the inser- 
tion of compiler directives (see figure) 
to facilitate parallel processing on 
Shared Memory Parallel (SMP) ma- 
chines. While CAPO currently is inte- 
grated seamlessly into CAPTools (devel- 
oped at the University of Greenwich, 
now marketed as ParaWise), CAPO was 
independently developed at Ames Re- 
search Center as one of the components 
for the Legacy Code Modernization 
(LCM) project. The current version 
takes serial FORTRAN programs, per- 
forms interprocedural data dependence 
analysis, and generates OpenMP direc- 
tives. Due to the widely supported 
OpenMP standard, the generated 
OpenMP codes have the potential to 
run on a wide range of SMP machines. 

CAPO relies on accurate interproce- 
dural data dependence information cur- 
rently provided by CAPTools. Compiler 
directives are generated through identi- 
fication of parallel loops in the outer- 
most level, construction of parallel re- 
gions around parallel loops and 
optimization of parallel regions, and in- 
sertion of directives with automatic iden- 
tification of private, reduction, induc- 
tion, and shared variables. 

Attempts also have been made to 
identify potential pipeline parallelism 
(implemented with point-to-point syn- 


chronization). Although directives are 
generated automatically, user interac- 
tion with the tool is still important for 
producing good parallel codes. A com- 
prehensive graphical user interface is in- 
cluded for users to interact with the par- 
allelization process. 


The work was done by Haoqiang Jin of 
MRJ Technology Solutions for Ames Research 
Center. For further information, access http:// 
people, nas. nasa.gov/ ~hjin/ CAPO/ 
index.html. ARC-14487-1 


CCSDS Advanced Orbiting Systems Virtual Channel Access 
Service for QoS MACHETE Model 

NASA’s Jet Propulsion Laboratory, Pasadena, California 


To support various communications 
requirements imposed by different mis- 
sions, interplanetary communication 
protocols need to be designed, vali- 
dated, and evaluated carefully. Multi- 
mission Advanced Communications Hy- 
brid Environment for Test and 


Evaluation (MACHETE), described in 
“Simulator of Space Communication 
Networks” (NPO-41373), NASA Tech 
Briefs, Vol. 29, No. 8 (August 2005), p. 
44, combines various tools for simula- 
tion and performance analysis of space 
networks. The MACHETE environment 


supports orbital analysis, link budget 
analysis, communications network simu- 
lations, and hardware-in-the-loop test- 
ing. By building abstract behavioral 
models of network protocols, one can 
validate performance after identifying 
the appropriate metrics of interest. The 


NASA Tech Briefs, September 2011 


49 




