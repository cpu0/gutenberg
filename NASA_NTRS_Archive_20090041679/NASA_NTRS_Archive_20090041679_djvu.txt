generated from the current state, i.e., the 
plausible future failure modes of the sys- 
tem as it presendy stands. The scenario 
generator models a Potential Fault Sce- 
nario (PFS) as a black box, the input of 
which is a set of states tagged with priori- 
ties and the output of which is one or 
more potential fault scenarios tagged by 
a confidence factor. The results from the 
system are used by a model-based diag- 
nostician to predict the future health of 
the monitored system. 

This program was written by Mark James 
of Caltech for NASA’s Jet Propulsion Labora- 
tory. Further information is contained in a 
TSP (see page 1). 

This software is available for commercial 
licensing. Please contact Karina Edmonds of 
the California Institute of Technology at 
(626) 395-2322. Refer to NPO-42818. ' 


Ground-Based Correction 
of Remote-Sensing Spectral 
Imagery 

Software has been developed for an 
improved method of correcting for the 
atmospheric optical effects (primarily, 
effects of aerosols and water vapor) in 
spectral images of the surface of the 
Earth acquired by airborne and space- 
borne remote-sensing instruments. In 
this method, the variables needed for 
the corrections are extracted from the 
readings of a radiometer located on the 
ground in the vicinity of the scene of in- 
terest. The software includes algorithms 
that analyze measurement data acquired 
from a shadow-band radiometer. These 
algorithms are based on a prior radia- 
tion transport software model, called 
MODTRAN™, that has been developed 
through several versions up to what are 
now known as MODTRAN4™ and MOD- 
TRAN5™. These components have been 
integrated with a user-friendly Interac- 
tive Data Language (IDL) front end and 
an advanced version of MODTRAN4™. 
Software tools for handling general data 
formats, performing a Langley-type cali- 
bration, and generating an output file of 
retrieved atmospheric parameters for 
use in another atmospheric-correction 
computer program known as “FLAASH” 
have also been incorporated into the 
present soft-ware. Concomitantly with 


the soft-ware described thus far, there 
has been developed a version of 
FLAASH that utilizes the retrieved at- 
mospheric parameters to process spec- 
tral image data. 

These programs were written by Steven M. 
Adler-Golden, Peter Rockford, Michael 
Matthew, and Alexander Berk of Spectral Sci- 
ences, Inc. for Stennis Space Center. 

Inquiries concerning rights for the 
commercial use of this invention should be 
addressed to: 

Spectral Sciences, Inc. 

4 Fourth Ave. 

Burlington, MA 01803 
Phone No.: (781) 273-4770 
Refer to SSC-00226, volume and number 
of this NASA Tech Briefs issue, and the 
page number. 


t? State-Chart Autocoder 

A computer program translates Unified 
Modeling Language (UML) representa- 
tions of state charts into source code in 
the C, C++, and Python computing lan- 
guages. (“State charts” signifies graphical 
descriptions of states and state transitions 
of a spacecraft or other complex system.) 
The UML representations constituting 
the input to this program are generated 
by using a UML-compliant graphical de- 
sign program to draw the state charts. The 
generated source code is consistent with 
the “quantum programming” approach, 
which is so named because it involves dis- 
crete states and state transitions that have 
features in common with states and state 
transitions in quantum mechanics. Quan- 
tum programming enables efficient im- 
plementation of state charts, suitable for 
real-time embedded flight software. In ad- 
dition to source code, the autocoder pro- 
gram generates a graphical-user-interface 
(GUI) program that, in turn, generates a 
display of state transitions in response to 
events tr iggered by the user. The GUI pro- 
gram is wrapped around, and can be used 
to exercise the state-chart behavior of, the 
generated source code. Once the ex- 
pected state-chart behavior is confirmed, 
the generated source code can be aug- 
mented with a software interface to the 
rest of the software with which the source 
code is required to interact. 


This program was written by Kenneth 
Clark, Garth Watney, Alexander Murray, 
and Edward Benowitz of Caltech for 
NASA’s Jet Propulsion Laboratory. Further in- 
formation is contained in a TSP (seepage 1 ). 

This software is available for commercial 
licensing. Please contact Karina Edmonds of 
the California Institute of Technology at 
(626) 395-2322. Refer to NPO-41951. ' 


Pointing History Engine for 
the Spitzer Space Telescope 

The Pointing History Engine (PHE) is 
a computer program that provides math- 
ematical transformations needed to re- 
construct, from downlinked telemetry 
data, the attitude of the Spitzer Space 
Telescope (formerly known as the Space 
Infrared Telescope Lacility) as a func- 
tion of time. The PHE also serves as an 
example for development of similar 
pointing reconstruction software for fu- 
ture space telescopes. The transforma- 
tions implemented in the PHE take ac- 
count of the unique geometry of the 
Spitzer telescope-pointing chain, includ- 
ing all data on relative alignments of 
components, and all information avail- 
able from attitude-determination instru- 
ments. The PHE makes it possible to co- 
ordinate attitude data with observational 
data acquired at the same time, so that 
any observed astronomical object can be 
located for future reference and re-ob- 
servation. The PHE is implemented as a 
subroutine used in conjunction with 
telemetry-formatting services of the Mis- 
sion Image Processing Laboratory of 
NASA’s Jet Propulsion Laboratory to 
generate the Boresight Pointing History 
File (BPHF). The BPHF is an archival 
database designed to serve as Spitzer’s 
primary astronomical reference docu- 
menting where the telescope was 
pointed at any time during its mission. 

This program was written by David Ba- 
yard, Asif Ahmed, and Paul Brugarolas of 
Caltech for NASA’s Jet Propulsion Laboratory. 
Further information is contained in a TSP 
(see page 1). 

This software is available for commercial 
licensing. Please contact Karina Edmonds of 
the California Institute of Technology at 
(626) 395-2322. Refer to NPO-43374. ' 


12 


NASA Tech Briefs, March 2007 


