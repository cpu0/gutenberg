Best 

Available 

Copy 





AD-A284 965 






TASK: UU03 
CDRL: 05156 
February 1993 


Reuse Library Framework 
User Tutorial 


Informal Technical Data 




DTIC^’ 

ELECTE |\ 

19M1 1 



94-30823 


94 9 27 006 











TASK: 1103 
CDRL: 05156 
February 1993 


INFORMAL TECHNICAL REPORT 
For The 

SOFTWARE TECHNOLOGY FOR ADAPTABLE, RELIABLE SYSTEMS 

(STARS) 


RLF User Tutorial 


STARS-UC-05156/018/00 
February 1993 


Data Type: A005, Informal Technical Data 


CONTRACT NO. F19628-88-D-0031 
Delivery Order 0011 


Prepared for: 

Electronic Systems Center 
Air Force Systems Command, USAF 
Hanscom AFB, MA 01731-5000 


Prepared by: 


Paramax Systems Corporation 
1?010 Sunrise Valley Drive 
Reston, VA 22091 



mis ORAM 
DTIO TAB 

Unsonovmcsd 

Jmstlflcatlor 


By- 

DlsWlbutlop/ 


IvallabllljT Ct dea 
tiivali and/or 
Spooial 


•iat 



DTICQUA-UT? 5 


□ □ 





TASK: U03 
CDRL: 05156 
February 1993 


Data ID: STARS-UC-05156/018/00 

Distribution Statement “A” 
per DoD Directive 5230.24 
Authorized for public release; Distribution is unlimited. 

Copyright 1993, Paramax Systems Corporation, Reston, Virginia 
Copyright is assigned to the U.S. Government, upon delivery thereto, in accordance with 

the DFAR Special Works Clause. 

Developed by: Paramax Systems Corporation 

This document, developed under the Software Technology for Adaptable, Reliable Systems 
(STARS) program, is approved for release under Distribution “A” of the Scientific and Tech¬ 
nical Information Program Classification Scheme (DoD Directive 5230.24) unless otherwise 
indicated. Sponsored by the U.S. Defense Advanced Research Projects Agency (DARPA) 
under contract FI9628-88-D-0031, the STARS program is supported by the military services, 
SEI, and MITRE, with the U.S. Air Force as the executive contracting agent. 

Permission to use, copy, modify, and comment on this document for purposes stated un¬ 
der Distribution “A” and without fee is hereby granted, provided that this notice appears 
in each whole or partial copy. This document retains Contractor indemnification to The 
Government regarding copyrights pursuant to the above referenced STARS contract. The 
Government disclaims all responsibility against liability, including costs and expenses for vi¬ 
olation of proprietary rights, or copyrights arising out of the creation or use of this document. 

In addition, the Government, Paramax, and its subcontractors disclaim all warranties with 
regard to this document, including all implied warranties of merchantability and fitness, and 
in no event shall the Government, Paramax, or its subcontractor(s) be liable for any special, 
indirect or consequential damages or any damages whatsoever resulting from the loss of use, 
data, or profits, whether in action of contract, negligence or other tortious action, arising in 
connection with the use or performance of this document. 








TASK: U0:3 
CDRL: 05156 
February 1993 

INFORMAL TECHNICAL REPORT 
RLF User Tutorial 


Principal Author(s): 


Jim Solderitsch 


Date 


Approvals; 


Teisk Manager Richard E. Creps 


Date 


(Signatures on File) 










TASK: U03 
CDRL: 05156 
February 1993 

INFORMAL TECHNICAL REPORT 
RLF User Tutorial 


Change Record: 





















REPORT DOCUMENTATION PAGE 


form Approved 
OMB No 070A-0188 


PaO'tc reoor -c •or tr.is tcectson •'Tcfmaiicr 's to * •'Cur 09' '^DO.*se. nciuairc t**e itm* ’cr instfcr.icnj. vear:“*-q e» 4 t.r- cata vo«rc«^ 

qatner'^c arc •^a»rta»ning the oata oe^eo. anc «orro«etihg ano rrw»ev**ro tre ciiemcr c* irt^rmation Sena cO'hfnents •’•qa'atrc tru oufoer estt'hate r* an. t'trer a^oec*. oi this 
cc<temcn ;t jn*nrmat'cr. mciwomg »«gg«t'or^ ‘rt 'ecucmc tin ouroe" lo Jva»h»raton '’eaoouare'a Services. D’tectorate *c* ''to'^ranor Ooeration^ ano ^eoc'ts ’2iS je^t^f^Qp 
Ca^'s H-3PAa*. Suite *2C^ Ariiraton ./a ;2232-J302. ana t'c me 0**<'eo* Man4Qer*«e"t aro Buoqe* ^aoerwcri* Beourtior ^'?:e:T {07CJ-D’88) svasn nct^n zc rCSC3 


1. AGENCY USE ONLY (Leive dtar^k) 12. REPORT DATE 


4. TITLE AND SUBTITLE 


RLF User Tutorial 


3. REPORT TYPE AND DATES COVERED 

Informal Technical Report 


S. FUNDING NUMBERS 

F19628-88-D-0031 


6. AUTHOR(S) 


Faramax Corporation 


7. PERFORMING ORGANIZATION NAME(S) ANO ADORESS(ES) 

Paramax Corporation 
1210 Sunrise Valley Drive 
Reston, VA 22090 


9. SPONSORING. MONITORING AGENCY NAME(S) AND AODRESS(ES) 

Department of the Air Force 
Headquarter. Electronic Systems 
Hanscom AFB, MA 01731-5000 


i 8. PERFORMING ORGANIZATION 
REPORT number 


STARS-UC-05156/018/00 


10. SPONSORING MONITORING 
AGENCY REPORT NUMBER 


05156 



12a. DISTRIBUTION / AVAILABILITY STATEMENT 
Distribution "A" 


13. abstract (Maxtmum 200 words) 


12b. DISTRIBUTION CODE 


This is an initial version of an RLF end-user training package. This package complements 
training packages that cover RLF Modeling and Administration. The purpose of this package 
is to provide an orientation for new RLF users - those who are working with RLF applica¬ 
tions in general and with the RLF Graphical Browser (GB) library interface in particular. 
This package does not assume that its audience is already familiar with the RLF and is 
meant to provide a general introduction to its use. The RLF User’s Manual provides a more 
comprehensive view of RLF utilization than is presented here and persons requiring informa¬ 
tion beyond the perspective provided in this package should consult this mEmuzd. However, 
the audience is expected to have a general understanding of the UNIX operating system and 
operating within the X Window System. If X Window System experience is lacking, the 
prospective RLF user should identify a local source of expertise in this area. 


15. NUMBER OF PAGES 

39 


16. PRICE CODE 


20. LIMITATION OF ABSTRACT 



17. SECURITY CLASSIFICATION 
OF REPORT 

Unlcasslfled 


18. SECURITY CLASSIFICATION 
OF THIS PAGE 
Unclassified 


19. SECURITY CLASSIFICATION 
OF ABSTRACT 
Unclassified 


NSM 7540-0'-280-5500 


‘9' 




























February 1993 


STARS-U('-0r)ir)6/018/00 


1 Introduction 


The RLF is a knowledge-based system, developed by Paramax with support by the STARS 
program, whose primary application has been the design, implementation, and deployment 
of domain-specific reuse library systems. A reuse library supports software engineers by 
enabling them to quickly locate software assets (e.g. requirements, designs, code modules, 
test plans etc.) that can be of use in their construction of a software system. 


Slide 1 


c ^ 

What is the RLF? 

• RLF stands for Reuse Library Framework. 

• The RLF is a system, written in Ada, that enables the 
creation of knowledge-based systems. 

• In particular, the RLF has been applied to the 
creation of domain-specific reuse libraries. 


A domain is an application area, typically the one of immediate relevance to the software en¬ 
gineer, and a domain model is a machine representation of information about the application- 
area and the library assets available for the application area. The model can contain general 
domain information along with data about the form, fit, and function of the available library 
assets. 

This is an initial version of an RLF end-user training package. This package complements 
training packages that cover RLF Modeling and Administration. The purpose of this package 
is to provide an orientation for new RLF users - those who are working with RLF applica¬ 
tions in general and with the RLF Graphical Browser (GB) library interface in particular. 
This package does not assume that its audience is already familiar with the RLF and is 
meant to provide a general introduction to its use. The RLF User’s Manual provides a more 
comprehensive view of RLF utilization than is presented here and persons requiring informa¬ 
tion beyond the perspective provided in this package should consult this manual. However, 
the audience is expected to have a general understanding of the UNIX operating system and 
operating within the X Window System. If X Window System experience is lacking, the 
prospective RLF user should identify a local source of expertise in this area. 

This orientation follows the organization of the RLF User’s Manual which is part of the RLF 


Page 1 





February 1993 


STARS-UC-05ir)(j/01S/00 


v4.1 release. The orientation follows the following general outline. 


Slide 2 


c -^ 

Orientation Outiine 

• Introduction 

• RLF Background 

• RLF GB Modes of Operation 

• Context Sensitive Menus 

• RLF Usage Tips 

• Tailoring the RLF GB 

- 


The material in this orientation supports a portion of a domain-specific, reuse-based, process- 
driven approach to system engineering that is the cornerstone of the STARS program. This 
approach is embodied in the STARS Conceptual Framework for Reuse Processes (CFRP) 
shown on SLIDE 3. 


Slides 



Markat 
Forcaa 

Extanwl 

Aaaata 

Existing 
Systsms 

Tools 

Organization 

Contaxt 


Assets 


In particular, the RLF supports the creation of a reuse support structure and the manage¬ 
ment of assets stored within this system. An RLF end-user is most likely concerned with 
the utilization of assets that are modeled and stored within a library structure. 


Page 2 









February 1993 


STARS-UC-05156/018/00 


SLIDE 4 breaks out the Utilize activity on the CFRP. A well-developed and presented RLF 
model helps the user accomplish the first three of the tasks shown on the slide. 


r 




Slide 4 







2 RLF Background 

SLIDE 5 provides an outline of some basic RLF fundamentals that an RLF user should be 
familiar with. RLF’s approach to managing a reuse library is based on the principle that 
a highly-structured reuse library will be easier to browse and understand. The structure of 
an RLF library is provided by a knowledge network which not only classifies the assets in 
the library in a hierarchy from general to most specific, but also describes the relationships 
between assets and the part they may play in the composition of a larger system. 


Page 3 









February 1993 


STARS-rc-or,ir)()/ois/oo 


( RLF Fundamentals 


StideS 


• Domain Model approach 

• RLF concepts 
~ categories 
“ objects 

- relationships 

- attributes 

- actions 


V. 


Inferencing 






When an RLF library model which describes this knowledge network is constructed, the first 
step is to identify the area common to all the assets to be available in the reuse library. A 
domain-specific approach is summarized on SLIDE 6. Additional information on modeling 
a reuse library with the RLF is given in the RLF Modeler’s Manual and the Modeling 
Orientation Package. 


/-\ 

Domain Model approach 

• Domain is an application area 

• Domain Analysis produ'ies knowledge about Domain 

• Encoding knowledge leads to Domain Model 

• RLF knowledge-base capabilities used to represent 
model 

• Knowledge-Based approach leads to improved user 
effectiveness 


Page 4 





February 1993 


STARS-l’C-Oolob/OhS/OO 


The “domain model” is the final product of domain modeling. By rapturing the domain 
model of the reusable assets in the library as an RLF knowledge network, the level of under¬ 
standing of the assets in the library increases significantly. This in turn improves the chances 
that an asset extracted from the RLF library will be immediately useful to the library user. 
The key to effective reuse is to minimize the time taken to find and retrieve the asset to be 
reused, and to increase the chances that the asset can be reused without much alteration. 
The domain model approach ensures that there is enough information in the library structure 
to meet these goals. 

Before discussing RLF concepts further, a brief look at the graphical notation used by the 
RLF GB for some of these concepts is shown on the next slide. The figure shows a category 
with three subcategories with one of the categories containing three objects. 

f -\ 


RLF GB Graphical Symbols 


Slide 7 



' *L.-: 






□ 

.VS J 

\ ■ i < 


/ — 
rrb 


niMMIMlI ^ 

^ 'U \ 

• 

1 


dog 

X 1 Rio Tin Itn 1 


H.J 




yik 




Goncepi* 

1 Reltiiowlape 


C«»p>iy 

U O tpeciihatMn 



1 



1 ■ UMbvidMbon 


V. 




SLIDE 8 summarizes the important features of model categories. 


Page 5 








February 1993 


STARS-UC-051.%/018/00 





Categories 


Slide 8 


• general descriptions of a kind of thing 

• classify what a thing is 

• arranged in an inheritance hierarchy called a 
specialization hierarchy 

• relationships inherited along specialization hierarchy 

• most general category occurs at root of the model 




✓ 


Objects are all members of categories and are distinguished by the relationships they have 
as a result of their location in the specialization hierarchy. SLIDE 9 summarizes some key 
properties of objects. 


Slides 


( - ^ 

Objects 

• actual things instead of classifications of things 

• associated with the most appropriate category (or categories) 
which describe them 

• reusable assets are objects which are identified through 
attributes as well as category relationships which are 
"instantiated” for the asset 

• objects are said to "individuate" the containing category 


Categories and objects are distinguished primarily through the relationships and attributes 
which they possess. SLIDE 10 describes some basic properties of relationships in the RLF. 


Page 6 






February 1993 


STARS-UC-0r)156/018/00 


Slide 10 


( --V 

Relationships 

• describe features of categories and objects 

• express associations between different categories or objects 

• are inherited by categories or objects below that category in the 
hierarchy at which they are defined 

• have a name, an owner, a type and a cardinality 

• can be restricted by type or by cardinality when inherited (but never 
generalized) 

• object relationships ''fill” corresponding relationships defined 
between corresponding categories 


The next slide gives an actual RLF GB graphical view of relationships between categories and 
relationships between objects. In the second figure, an object in the Binary Search class is 
shown along with the filled relationships for each of the relationships defined for that class. 
Each relationship is instantiated with a target object which is a member of the category 
corresponding to the type of the relationship. The example also shows that cardinalities of 
relationships can also be restricted when they are filled. 


Page 7 




February 1993 


STARS-FC-0515(i/018/00 


C Category Relationships ^ 






RLF attributes are used to annotate categories and objects with static information that 
provides additional data about them. Attributes are the means by which actual file contents 
are attached to reusable assets which are modeled as objects in an RLF model. SLIDE 12 
illustrates some features of attributes. 


Page 8 






February 1993 


STARS-UC-05156/018/00 


Slide 12 


Attributes 

• can be integers, strings of characters, or files 

• have names so they can be referenced and used by 
RLF actions 

• file attributes can be viewed, extracted, or othenA^ise 
manipulated 

• attributes are not inherited - they must defined at 
each category or object where they are useful 

\ _ ^ 


Actions let the user process categories and objects and permit access to system and library 
resources within a context appropriate to specific categories and objects. The context for 
these actions is provided by RLF attributes. Actions are summarized in SLIDE 13. Action 
definition is covered in both the Administrator’s and Modeler’s orientation packages. 


Page 9 









February 1993 


STARS-UC-05156/018/00 


r 




Actions 


• provide library users with appropriate system and library services 

• basis for asset viewing and extraction 

• defined within model definition language - sample Action sub-model 
provided in RLF distribution 

• implemented as system calls, or internal Ada procedures 

• inherited like relationships 

• have names, an action category, a list of action targets, and a list of 
action agents 

• targets reference attributes which provide input for the action 

• agents reference attributes which can affect how the action is performed 

• can be privileged which means they are unavailable through the RLF GB 
(restricted to administrative use) 

• can be restricted at subcategories or lower level otqects 




✓ 


Finally, RLF models can make use of a special, built-in action called inferencing. This 
capability has been used primarily to direct a user browsing an RLF model and to provide 
that user with advice about the model in a context-dependent, goal-oriented fashion. The 
user’s responses to inferencing-induced questions lead the user to categories and objects 
within the model that are expected to meet user needs these are elicited during the 
inferencing process. An inferencing action is labeled “Advice” on an RLF Pop-Up menu 
when a selected category or object is equipped with such an inferencer option. SLIDE 14 
describes some inferencing features. 


Page 10 







February 1993 


STARS-UC-05156/018/00 


f -\ 

Library Inferencers 

• defined in special-purpose RLP language 

• attached only to modeler-specified categories or objects 

• ask the user questions about the user’s needs and intentions 

• based on responses, make deductions about model locations 
and contents that are of interest to the user 

• can focus user to specific category or object 

• are distributed over a model and can invoke and exchange 
information with each other 

_ ^ 


3 RLF GB Modes of Operation 

The “feel” of an RLF application is dependent on the user interface of that application and 
on the capabilities of the workstation or terminal being used to interact with the application. 
The information in this training package is primarily geared to Sun workstation-equipped 
users who are running the X Window System, Release 4 (or greater). 


Slide 15 


/-\ 

Using the RLF 

• RLF applications separate their user interface from their 
underlying knowledge bases. 

• Both textual and graphical interfaces are provided to 
support users with different interface capabilities. 

• The RLF graphical library interface is called the RLF GB 
-- it requires an X11R4 Window System end user 
environment. 

• The next group of slides will survey using this interface. 


Page 11 






February 1993 


STARS-UC-05156/018/00 


A library application end-user invokes the application from an X windows terminal shell and 
is greeted by a menu panel that is used to select the library model to be accessed. 


First Level RLF User View 

After selecting the library through a pop-up menu, the RLF 
GB User sees the screen shown on the next slide. 


Slide 16 


_ Main M«nu 

^Sotec^^UbraryU^ 
Ada Ban ch mar Its 

Ada/Xt _ 

Anti-Sub Warfara 


Astronomy 

ai 


Satallita Softwara 
Sonwara Componants 
Sort and Saareh 


SLIDE 17 shows an RLF screen which gives a graphical layout of the beisic underlying 
network model for the library. 


Slide 17 


eamnMndtwr- 


vwtlealaerollbtr- 


concaplnoda- 
caneapl raim- 


vtowtypa 


llbiwy ninw ■aval at vlaar topology display 


IUJUOcanr:3pa<MttaiicnViai»»c»eniOia«ra»Wpe»tOiim (UaaisSofS) 
lUOrifY I rmafviSr I NOYlgataviai^^iaarOi | Topdogy | C>jw" 





aiceonnaetor- 


gtaph display 
atndew- 




Page 12 










February 1993 


STARS-UC-05156/018/00 


The main user options for using this graphical view are contained in pull-down menus at 
the top of the screen (e.g. Filter View, Navigate view etc.). The next few slides survey the 
options available from these menus. 


To provide more immediate indication to the user about the resources available at a given 
model category or object, the basic box icon can be marked with either an exclamation point 
or a question mark. The meanings of these marks is summarized on the following slide. 


f Node Markings 





■N 




Many of the menus include cascading submenus. The presence of these submenus is indicated 
by a rightward-pointing triangle as shown on the next slide. 


Page 13 








February 1993 


STARS-UC-05156/018/00 


-. 

Recognizing Submenus I 



' An anowtiud pointing to tha right A 
^ indicataa a aUtmonu. J 



Category: Ogicksort 

_1 

Navigate 

i— 

Perform Action 

> 

Advice | 

Suppress 

>1 

Display Relationships Graphically 

Display Relationships Textually 


V. 




Drop-Down menus emerge whenever one of the commands in the menu bar is selected with 
the mouse. For example, selecting the Filter View command allows the user to tailor the 
current view to restrict (or unrestrict) the information that is displayed there. If the user 
selects N-Level View, then a Pop-Up dialog box appears in which the user types how many 
levels of the current model should be displayed. The next slide shows the appearance of the 
Drop-Down menu and the result of selecting a 2-level display. 


Page 14 







February 1993 


STARS-UC-05156/018/00 






Selecting Filter View 


IU.F Library: Sp«cialigatlcn Vtow of Sort and 





Top-Laval Vtowr 


S«concl*LAval Vtow 


N-Uwi Vtaw 


Suppress Objicu 
uniuppraM opjtcf 


Un>uppf«s All 


2-Level Display 



V. 


SLIDE 21 shows the options available under the Navigate View command. The last option 
scrolls the view so that the root node of the model is clearly visible. The first node provides 
access to a list of nodes which the user has recently visited in the current session. These 
nodes are marked with an S if the user has visited the node in the usual browser view or an 
R if the user has visited the node in a graphical relationship view. Both relationship and 
specialization views may be on a user’s display simultaneously (although one may be hiding 
(parts of) the other). The effect of choosing Node History is shown on the next slide. 


Page 15 









February 1993 


STARS-UC-05156/018/00 


Slide 21 



Slide 22 



SLIDE 23 shows how to locate a particular library category or object by name in the library 
model. A dialog box appears and the user types the desired name. If a matching node is 
found, the display is centered there. If not an Alert box appears prompting the user to try 
again. 


Page 16 



















February 1993 


STA RS- U C-05156/018/00 


r 




Slide 23 


Node Selection Dialog 


Entttr Nodtt Nama; 


|nod«f 


OK 


Cancel 


Failed Node Request 


9 Node foobar Invalid. Please try again. 




✓ 


If a user wishes to locate categories or objects within the library, the search command is 
available from the command bar. If the user selects this option, a dialog box similar to 
the one shown in SLIDE 23 appears. The user enters at least three characters which are 
likely to be contained in the name of the node being searched for. After closing the dialog 
box, a list window similar to that shown in SLIDE 24 appears which holds the names of 
nodes containing the entered string. To visit a node from the list, the user selects the name 
and presses the APPLY button with the mouse. To erase the current selection, the user 
hits the RESET button. To cancel the search, the user hits the CANCEL button. If no 
node names contain the entered substring, a failure alert similar to that shown in SLIDE 23 
appears. 


Page 17 








February 1993 


STARS- U C-05156/018/00 


Slide 24 



In a large model, it is helpful to see in a context surrounding the portion of the model that 
is currently within the main graphical view. The topology menu option provides a birds-eye 
view of a larger portion of the model (see SLIDE 25). The user can make large-scale moves 
in the model by pressing the mouse button on a location within the condensed view. 


Slide 25 



Page 18 







February 1993 


STARS-UC-05156/018/00 


Finally, the user can select the Quit command. The options available here are to quit the 
current view (leaving any other views open) or to quit the current session entirely. If the 
latter choice is made (or if there is only one view currently open), the user is greeted with 
a confirmation dialog to see if the exit operation should be completed. This capability is 
shown on the next slide. 

/ - \ 


Slide 26 


Quit Menu 


rch ( Level = 5 of 5 ) 

n 


Topology 

Qpltx 1 

_ 



Delete Current View 


Quit Browser Session 


ExH Alert 



A Are you sure you wish to exit 
^ the RLF Graphical Browser? 






YES| 


NO 


12 




V, 




4 Context Sensitive Menus 

Given a particular model location (class or object node) within a model, the user is able to 
navigate further through the use of pop-up menu selections available by pressing a mouse 
button when the mouse cursor is on top of that location. The typical list of options is shown 
on SLIDE 27. As the figure labels show on the on the slide, only those options appropriate 
for the node (category or object) are enabled. The rest are “greyed out” indicating that 
they are inappropriate for the current node. In addition, for some options, the availability 
of sub-menu options, and the content of these submenus, is also context sensitive. The 
series of slides in this section surveys some of the context sensitive options and their effects. 
Additional information about these options is found in the User’s Manual. 


Page 19 








February 1993 


STARS-UC-05ir)6/018/00 


Slide 27 


(_8»nsltlv> m«nu options) C menu titVstor ) C Inssnsitive menu options ) 


5 


Category: Thing 


•Navigate 


Perform Action 


Advice 


•Suppress 


Display Relationships Graphically 


Display Relationships Textually 


Once the user has made a first level selection from the navigation option, pop-up submenu 
selections are made available that are tailored to the kind of graph node at which the user 
is currently focused. The sub-menu options are also tailored to the kind of view that the 
user is browsing. In particular, the navigation sub-menu items are quite different within a 
relationship view compared to the specialization view. The complete subset of navigation 
options for the relationship view is as follows (only some of these are available at a specific 
node): 

• Go To a Referencing Category t> (if the node is a category) 

• Go To a Referencing Object l> (if the node is an object) 

• Go To a Referencing Node > (if the node is a category/object) 

• Go To a Related Category (if the node is a category) 

• Go To a Related Object (if the node is an object) 

• Go To a Related Node (if the node is a category/object) 

• Go 'T’o Target > (if the node is a relation) 

• Go To Source > (if the node is a relation) 

• Go To Other Occurrence [> (if the node has multiple occurrences) 

• Center This Relation (if the node is a relation) 

• Center This Category (if the node is a category) 


Page 20 






February 1993 


STARS-UC-05156/018/00 


Center This 
Center This 
Center This 


Object (if the node is an object) 

Category in Specialization View 
Object in Specialization View > 


> (if the node is a category) 
(if the node is an object) 


The next few slides explore navigation options within a specialization view. For example, if 
the node corresponds to a library category, the user can search among the parents, children 
or other related categories. SLIDE 28, SLIDE 29, and SLIDE 30 show some of the possible 
cascaded menus for navigation at a library category: children, parents and related categories. 
For a node with no children, the Go To a Child will be greyed out. 






Navigation to Chiid 

For a category with subcategories, the user can select a 
subcategory from the menu 


Slide 28 


Cataoory: CKtwnal Soru 




Nttviattd ▻ 

Nawigaia 


Parforni Action 

Co To a Child 


Childran 

Actvico 

CoTooParant 


•alancad fetarga 

Supprw* t> 

Co To a Roiaiad Cataoory 

{> 

Dist. of miL Runa 

Oispiav taMlontlilps Graphically 

Co To a ftelOrancino C«t«gory 

MuKI-Hiiray Marglng 

CNsplair taMlonsh^ Taxtually 

Co To Othar Occurrenca 

Natural Marging 


Caniar Thia Catagory 

PoiyiihaBa Soru 




Straight Marging 




✓ 


In the case of nodes with multiple parents, all parent node names will be accessible from the 
sub-menu. 


Page 21 






February 1993 


STARS-UC-05I56/0I8/00 


r 




Navigation to Parent 

Every category except the root has at least one parent: the 
user can select a parent from the sub-menu. 


Slide 29 


C«t«gory: CM«mal Sorts 




NavMato C> 

NavlOAla 


Porforni Action 

Co To • CMM 

> 


Acivico 

CoToa Parant 

t> 

Parants 

Suppress ▻ 

Co To a Ralalaa Caiaaory 

0 

Son Algorithms 

Display Mlalkinstilps Graphically 

CoToa Rafaranclng Catagory 


Display fMaclonahlps Taxlually 

Co To othar Occurranca 



Cantor mia Catagory 







Related categories are those for which the current node is the source of a named RLF rela¬ 
tionship that targets that category. The Go To a Related Category option will access all 
relationships that the current category possesses, including those inherited from its parents. 
These are listed by name, and include the target category for the relationship. Selecting one 
of them causes the user to move to the target category of the selected relationship. 


- 

Navigation to Related Categories 

Category relationships can also be quickly selected from 
those available. 


Slide 30 


Category: Sort Atgorlthms 

_ 



Nevtgala O 

Nevlgaie 


Perform Action 

CoToaChHd p 

Mvtce 

Co Taa Parent p 

aaipiati > 

Oo To e hilelea Cetepory 

1 

1 

Display ReiMiowshlpa GriphlcaRy 

Co To a Refarenctng ceiego 

has.ayg.caae.er of PeifOrmsnce 

Display Relailonshlps Teatualty 

Go To Olher Ocoirrenot 

lMa_beat_caae_or or Pwformsnce 


Canter Thie Category 

haejslae.cr ef Unas ef CoOa 



iMs.werst.caae.cr or PerTcr manse 


Isjsrttten.ln of Source Language 

arcrae.en ef Data Sruclure 




✓ 


If the selected category does not have any relational attributes, then the [Go To a Related 
Category] option is greyed out in the navigate submenu. When the current node is an 


Page 22 







February 1993 


STARS-UC-05156/018/00 


object, the name of the sub-menu changes to Go To a Related Category/Object so that 
if a target object is available for a filled relationship, the user can navigate to that object. If 
the object relationship remains unfilled, the target category is available from the sub-menu. 

Relationship views prevent a different set of navigation choices. When a node has rela¬ 
tionships, the navigation option Display Relationships Graphically in the specialization 
view will be available. If this option is selected, a new view is created which can be navigated 
manually or through its own set of Pop-Up menu options. SLIDE 31 shows a Relationship 
View for the Example Binary Search object. 



Within such a view, Pop-Up navigation options are tailored to this view and the node within 
the view that is currently selected. The user may also use Pop-Up navigation options directly 
on relationships w'here the user may select either Go To Target and Go To Source as 
options. Otherwise, the list of available options in the Navigation view is similar to those 
available in the specialization view. 

An example is given in SLIDE 32 where the relationships on display graphically in SLIDE 31 
are made available as menu options that the user can select to shift attention either to the 
relationship itself, or a target object or category referenced by that relationship. 


Page 23 







February 1993 


STARS-UC-05156/018/00 


r 




Relationship View Sub-Menus 


Slide 32 


Oftjict: Eiwnpl* Mnary tft 



NAvIdM* ^ 



ParTonn Action ^ 

Co To « Child 

AOviCO 

Co To * daroAt > 

SupprMB 

Go To* lUtOMKt CfBCrv/O 

RalMad CoMoorlas/Objaeis 

Rotoilanah^ Graphicalhr 

Co To a'liarorancing onjact 

hw_avg.cada_or of LogwUlwnlc 

Dliplay RolaileMh^ ToMually 

Co To Othar Occurionca 

2 • m (N) 


Coniar Thia Objact 

hw.boat.caM.of or Loovithmlc 



igCN) 


hao_alaa.er of Nunter 

Flftoan 

hao.worai.caoa.oT oT Unaor 

N 

lo.wrttMnjn oT Souroa LanQuigo 

Ada 

wortu.en or Oau Siructuro 

Array 


V. 




Help for traversing relationships in the opposite direction, from target back to the source, 
is also available in either specialization or relationship views. If a node is the target of any 
relationship a Go To a Referencing ... sub-menu item will be available for that node, and 
by selecting from the list of category and/or object names, the user can walk the hierarchy 
backward. 

SLIDE 33 shows a cascaded menu for a category which is the target of several different 
relationships. These relationships and their sources are shown along the right edge of the 
slide. For example, the relationship has_worst_case references the category Quadratic 
and originates at Quicksort. Selecting this menu option selects and centers the display at 
Quicksort. 


Page 24 






February 1993 


STARS-UC-05156/018/00 


r 




Finding Referencing Categories 


Slide 33 


Celeoory: Qjadrallc 



Navtoate ▻ 

NawInaU 


farforni Ac«tc«> 

coToaditia ▻ 


Advice 

Co To a Pafvnt ▻ 


Smpraai & 

Co To a Relaied Category 


IMeptay ftelationeltipe Craphically 

Co To a Ha»erencli >9 CMegcry ▻ 

Referencing Categorlee 

Olfpiay Raiationfliipa Textuairy 

Co To omer Occttfraoca 

rMa.worst.caee.of: Shakersort 


CMlor Thia Category 

^AS.avQ^caM.or: sraaersort 



rtae.worel.caoe.er: (^Icfcaert 




✓ 


The previous slide shows inverse traversal within the specialization view. The next slide 
shows an analogous menu selection for the category Performance within a relationship view 
(which is shown at the bottom of the slide). 


Page 25 





February 1993 


STARS-UC-05156/018/00 




'\ 


Finding Referencing Categories 


CMooonr: Fffoinunae |2] 



> Navtoai* 0 

MavttoM 


Perforin Action 

Co To a Kalaiad Catayorv 

Actvico 

Co To a Ralaiaa Nooo 

SiipprmM 

Co To a lUfiarananfl CitaoofV 

Haf 

Oronclng Catagory I 


Co To a RafaranCng Noda 

Unary Soartn via naa.ayg.caaa.or (O.. t) 

Co To Oinof Occurraftca 

_ > 


Carttac This Catagory 


Cantor Thia Catagory tot ipaclailaailen Vlow > 


Category Relationship View 





Similar backward traversals arc possible for object nodes in either view. For example, having 
located the object Ada in the model and assuming that there exists a written_in relationship, 
this inverse traversal can be used to locate all objects which target Ada with the written_in 
relationship; i.e., all objects written in Ada. 

The numbers in parentheses in the previous slide inform the user that there is really only 
one node in the model with name Performance, but that since the display is laid out like a 
tree, the node is replicated to create an aesthetically pleasing appearance. In a large model, 
there may be many replicated occurrences of nodes such as these, and the user may wish 
to navigate among them. The sub-menu option Go To Other Occurrences makes this 
navigation easy. One possible scenario where this capability would be useful is when via a 
search command, a list of nodes is generated and some of these are repetitions of the same 
node. These replications will occur when the model includes multiple inheritance. Having 
selected one of the occurrences, the user may wish to see them all to become familiar with 
the multiple parents. 35 shows a list of nodes resulting from a search and then the use of 
the Go To Other Occurrences option to move among them. 


Page 26 







February 1993 


STARS-UC-05156/018/00 


Slide 35 


Search with Multipie inheritance 



Ind000_pl««g_parformanca_banctimark_p000005 [1] 
Ind000_plwg_perrornianoe_benchmark_p000005 [2] 
lndOOO_plMrgjMrrornianM_b«nchmark_pOOOOl3 [3] 
IndOOOjilwg_parrorinanca_banchmark_p000004 [3] 
Ind000j]l«rg_pafformanca_banchmark_p000006 [1] 
IndOOOj>l«rgjiarrormanoa_banchmark_p000006 [2] 
IndOOOj>lwgjMrrdrman(ia_banchinark_p000005 [3] 
Ind000_pl«>g_parr0rmanea_banchmark_p000007 [1] 
lnd000_plwgjMrrormanQajMnchmark_p0000O7 {2] 
IndOOOjilMrgjMrrorniancajMncliinark_p000006 [3] 
IndOOOj3lwg_parfornianoa_banchmarkjMX>0007 [3] 
acacjMitormanotJianchmark [1] 
acacjMiformancaJianchmark (2] 
pltvgjMrformanoa.banchmark [1| 
plMtgjarfofmanea.banchniark [21_ 


\L 


APPLY 


RESET 


] E 


CANCEL 


Finding Repeated Occurrences 


CMtory: p«wB^f»apwici^igu—m Hi 



WWW > 

NMigM* 


tarform 4ctkM< 

CwToaotiM > 




Go fo» mwna cuponr > 

ftalMtanahipa Cp^McaWy 

Co Too ftotaroiicliiy Caftapoty 

OMptar IMtfkRMKiiM TaniMily 

To Citwr OcoiPNn 

/p Oihof Owurrortcao 


ConiorTMaOMOwy 

pM«.pwrtapnMm»jMMnBMni (21 





Another feature available from the Pop-Up node menu for selected nodes is Perform Ac¬ 
tion. The actions available depend on the node and on the library model’s definitions for 
the node (or its parents since actions are inherited). The action sub-menu gives the name 
of the action, and if available, the name of the attribute which is used as the “target” of 
the action. The target typically provides input for the action. SLIDE 36 shows a cascaded 
menu for a node with actions and a screen snapshot showing the effect of selecting the View 
action. 


Page 27 









February 1993 


STARS-UC-05156/018/00 



The last context-sensitive node menu option to consider is that of Advice. Some nodes in 
the model provide access to domain model information of a more heuristic and procedural 
nature, and by selecting the advice option, the user can receive advice about categories and 
objects which are contained in the model. 

If no advice is available, the Advice option appears greyed out in the node Pop-Up menu. 
Otherwise, after selecting this option, the advisor dialogue is conducted in a Pop-Up window. 
At the beginning of an inference session, the user can control how the advice is presented 
and how much explanation is provided. Personalized inferencing preferences can be set via 
through entries in the .rlfrc file. 


Page 28 






February 1993 


STA RS- UC-05156/018/00 






Slide 37 


Advice Pop-Up Menu 

Category: Sort Algorithms 

Navigate _> 

Perform Action 

Advice _ 

Suppress > 

Display Relationships Graphically 
Display Relationships Textuaily 






Inferencing is conducted through the use of a dialog box. The properties of this dialog box 
are shown on SLIDE 38. 

f Advice Dialog Components ^ 



V_ ^ 


As the user interacts with the advice mode of the librarian application, the user may be re¬ 
located to other nodes within the model. Depending on how the inferencing portion of the 
model is written, additional questions may be asked of the user and further movement in the 
model may take place. SLIDE 39 is a snapshot of a portion of an ongoing user interaction. 
Note that the user may end the inferencing session at any time by clicking on the [Quit] 


Page 29 




TfflS 

PAGE 

IS 

MISSING 

IN 

ORIGINAL 

DOCUMENT 


'So ^31 






February 1993 


STARS-UC-05156/018/00 


- > 

RLF Usage 

• Follow RLF Installation Instructions 

• Provide access to RLF executables and scripts 

e.g. with UNIX command 

8«t path a ( RLF-OB^atbaamm $path ) 

• Set RLF Environment variables; e.g. 

DISPLAY e.g., with UNIX command 
aatanv DISPLAY boatnmm»iO 
RLFJLIBRARIBS e.g., with UNIX command 
aatanv RLF-LIBRARIES rlf^lbraryj>»tbnama 

• Invoke RLF, typically through the supplied script rlF-OB 



Some of the options above can be permanently set by configuring the users . cshrc file. The 
RLF_GB script tracks the users UNIX environment for the necessary RLF-specific features 
and warns if they are not present or incorrect. The text of this script can be modified to 
suit individual user profiles. 

Clearly there are many ways to use the RLF. The browser supports four distinct usage modes 
that can be used together to learn about and retrieve reusable 2 issets. These are summarized 
on the next slide. 


Page 32 





February 1993 


STARS-UC-05156/018/00 


- - 

RLF Usage Modes 

Browse ~ User navigates the library directly using 
graphical interface 

Advise -- User invokes Advice option to get rule-based 
guidance about categories and objects in the model 

Query - User invokes Search Command to locate Objects 
or Categories by name using a partial substring of the 
name 

Action - User invokes actions through which objects and 
categories can be inspected, analyzed and retrieved 


There are many scenarios that interweave these modes to productively use an RLF library. 
Some specific scenarios are given in the RLF User Manual. To learn to use the RLF GB, the 
user should spend some time using the interface on the sample library models provided with 
the RLF installation. Some suggested practice “exercises” are given on the following slide. 


Slide 44 


f -> 

RLF Learning Scenarios 

• find a Quicksort routine in the sample "Sort and Search" library 
graphically and view it 

• find a Quicksort routine in the sample “Sort and Search" library 
using the Search command and extract it 

• investigate available sorting routines using the Advice 
command at the algorithms node ~ see if you can locate 
the same Quicksort routine 

• investigate the Search sub-model both graphically and textually 
- how many node names contain the substring "ear" 


The RLF is a software product that has grown from an initial proof-of-concept prototype 
to a large and fairly complex system that works in concert with the user’s own computing 
environment in general, and the available X Window system in particular. Depending on 


Page 33 




February 1993 


STARS-UC-05ir)6/018/00 


this computing environment, the availability of system resources, and the definition of library 
model definitions, an RLF application may report various errors to the user. The RLF User's 
manual discusses these errors in some detail and breaks them down in three categories: 


• X Window System Errors 

• RLF Errors 

• File Processing Errors 


The next three slides identify some general error messages and some possible novice user 
errors that may lead to them. 


SIM* 45 


r -\ 


X Errors and Possible Causes 

Error Mosoag*: 

** MAIN PROORAM ABANDONED — EXCEPTION •constralnt.orror* 
RAISED 

May be caused by a X display setting problem - cbeck value of DISPLAY environment variable 
Error Meaaage: 

UQoxpoctttd exit from browser. Dnba&dled event: <event.type> 
This error signals a mis-communication between the applicaition and the X server. If it persisis. it 
can signal an X server/application version incompatibility. 

Error Message: 

X error: failed request ... 

Bad value: Integer value out of range ... 

Error messages similar to this indicaie inoompatbility between the RLF QB application and the 
window system. 




In any case, using an unmodified MIT X release (X11R4 or X11R5) is recommended. Both 
X-related errors and internal RLF errors are reported through the Ada exception mechanism. 
Sometimes the error message documents the Ada effect of the actual error rather than the 
error itself. 


Page 34 






February 1993 


STARS-UC-05156/018/00 


Slide 46 


- \ 

RLF Errors 

Error Message: 

•* KAIN PROORAM ABANDONED -- EXCEPTION 'NAME^RROR* RAISED 
The exception raised can also be ■ FILEJIAME^RROR* or ■ END-ERROR*. This error is 
typically due to an improper RLF.LIBRARIES environment variable, or a corrupted Libraries 
directory. 

Error Message: 

*' MAIN PROGRAM ABANDONED — EXCEPTION 'DNINITIAIilZED-DID* 
RAISED 

This error signals that an RLF library has been ieit in a locked state. Check tor files of the form 
*. LOK in the $RliF.LIBRARIES. directory and remove them. 

Error Message: 

** MAIN PROGRAM ABANDONED — EXCEPTION 
■UNINITIALIZED.OBJECT* RAISED 

This error indicates corrupted RLF library data, possibly due to a system crash. 


In the Ccise of the last error on the previous slide, rebuilding the library model may be 
necessary to recover from the error. 

Both RLF knowledge bases and the contents of asset objects are stored in files. For the 
former, RLF routines process the data and may report errors in the face of missing or 
corrupted files. The latter are processed by RLF action routines which may have their own 
unique way for detecting and handling file processing errors. 


Page 35 







February 1993 


STARS-UC-05156/018/00 


r 




Slide 47 


File Processing Errors 

Library data is typically stored as UNIX files. These files are located within the 
$RI<F-LIBRARIES directory. RLF's own knowledge-base files are located 
there and any errors are flagged by RLF error messages similar to those given 
on the previous slide. 

Library data files themselves are typically processed through RLF actions. The 
action statements within the model refer to either internal procedures or 
external routines to process the files. Any errors that occur here will be specific 
to such action routines. 

Library datafiles are usually located in $RLF-LIBRARIES/Text or 
(preferably) $RLF.LIBRARIES/Text /nodel-nane 


V. 




6 Tailoring the RLF GB 

While the RLF is quite usable with the default set-up provided by a standard RLF installa¬ 
tion, there are many opportunities to customize it for appearance and for feature defaults, 
availability and presentation. This section surveys some of these customization options and 
SLIDE 48 lists the general customization areas available to the user. 


Page 36 




February 1993 


STARS-UC-05156/018/00 






RLF Customization Areas 


Slide 48 


• X Windows Resources 

• Environment Variables 


• Command Line options 

• RLF Initialization file .rifrc 


V 




Modifying X resources is generally beyond the scope of this orientation. X applications can 
have their resources customized at run-time through various means including entries in an 
application-specific file in /usr/lib/Xll/app-defaults, through the X resource directory 
path named in the XAPPLRESDIR environment variable, through user-specific resource file 
entries such as those in .Xdefaults, or on the command line. The most convenient method 
for tailoring such resources for the RLF is to copy an RLF_Browser file to a convenient 
location, modify it as appropriate, and use the value of XAPPLRESDIR to refer to this file. 

In addition, the bitmaps and fonts for the RLF GB application can be changed. Making 
these changes is discussed in the RLF User’s Manual. 

Two RLF-specific environment variables have been mentioned previously. The RLF also 
uses the environment variables RLF_PAGER and RLF_EDITOR to indicate which default text 
viewer and editor to use in RLF actions which process text files. The defaults are less, a 
public domain text browsing program similar to more, and vi. The environment variables 
can be set to override these defaults; e.g. setenv RLF_EDITDR emacs. 

The effect of RLF command line options can be learned by typing Graphical-Browser 
-help. The produces the output shown on the next slide. 


Page 37 






February 1993 


STARS-UC-05156/018/00 


Slid* 49 


Perhaps the most convenient point for users to provide customization of the RLF is by mod¬ 
ifying the .rlfrc file. This file is easy to read and understand - the full BNF specification 
is given in the RLF User’s Manual. SLIDE 50 summarizes the options which can be set with 
this file. 




Page 38 






February 1993 


STARS-UC-05156/018/00 


In general, following UNIX conventions, conflicting values established on an RLF command 
line override those set earlier (either as environment variables or as .rlfrc values, while 
any surviving environment variables, override any values set in the . rlfrc file. Thus, if the 
RLF_LIBRARIES environment variable is set, it will override any library directory entry 
in the . rlfrc file. 

A default library setting will cause the browser to open that library immediately. Within a 
library, a specific node can be chosen as the first focal point of the browser. View control 
can be used to select whether the topology view is on or off at start-up, and whether the 
first graphical view drawn is a specialization view or relationship view. The depth of the 
view can also be set. 

If a user does not specify any advice options, the user must answer some start-up questions to 
select preferences during the first inferencing session. If a user wishes to establish alternate 
bitmaps for model icons, these can be set-up through the . rlfrc as well. The user can also 
select some options to be observed when running the RLF language translators Lmdl and 
Rbdl. 


Page 39 





