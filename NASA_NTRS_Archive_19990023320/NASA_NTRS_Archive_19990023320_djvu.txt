FINAL REPORT 



Bubble Dynamics, Two-Phase Flow, 
and Boiling Heat Transfer in 
Microgravity 


PI: Dr. Jacob N. Chung 


School of Mechanical and Materials Engineering 

Washington State University 
Pullman, WA 99164-2920 
Tel : 509-335-8654 
Fax : 509-335-4662 
NASA Grant Number: NAG3-1387 

Submitted to: Dr. Fran Chiaramonte 
NASA Lewis Research Center 
September, 1998 


ON* 8nto» 

MC: 0? aw 



2 


This report contains two independent sections, which are listed below along with the page 
number where each section begins. 

Part I: Terrestrial and Microgravity Pool Boiling Heat Transfer 

and Critical Heat Flux Phenomenon in an Acoustic Standing Wave 3 

Part II: Design, Construction and Qualification of a 

Microscale Heater Array for use in Boiling Heat Transfer 89 



3 


PARTI 

TERRESTRIAL AND MICROGRAVITY POOL BOILING HEAT TRANSFER 
AND CRITICAL HEAT FLUX PHENOMENON 
IN AN ACOUSTIC STANDING WAVE 

ABSTRACT 

Terrestrial and microgravity pool boiling heat transfer experiments were 
performed in the presence of a standing acoustic wave from a platinum wire resistance 
heater using degassed FC-72 Fluorinert liquid. The sound wave was created by driving a 
half wavelength resonator at a frequency of 10.15 kHz. Microgravity conditions were 
created using the 2. 1 second drop tower on the campus of Washington State University. 
Burnout of the heater wire, often encountered with heat flux controlled systems, was 
avoided by using a constant temperature controller to regulate the heater wire 
temperature. The amplitude of the acoustic standing wave was increased from 28 kPa to 
over 70 kPa and these pressure measurements were made using a hydrophone fabricated 
with a small piezoelectric ceramic. Cavitation incurred during experiments at higher 
acoustic amplitudes contributed to the vapor bubble dynamics and heat transfer. The 
heater wire was positioned at three different locations within the acoustic field: the 
acoustic node, antinode, and halfway between these locations. Complete boiling curves 
are presented to show how the applied acoustic field enhanced boiling heat transfer and 
increased critical heat flux in microgravity and terrestrial environments. Video images 
provide information on the interaction between the vapor bubbles and the acoustic field. 



4 


TABLE OF CONTENTS 

LIST OF TABLES 6 

LIST OF FIGURES 7 

NOMENCLATURE 9 

CHAPTER ONE: INTRODUCTION 1 1 

1 . 1 Research Objective 

1 .2 Significance and Justification 11 

1.3 Outline of Chapters 12 

CHAPTER TWO I 3 

LITERATURE REVIEW 13 

2.1 The Pool Boiling Process and the Boiling Curve 13 

2.1.1 Natural Convection 13 

2. 1 .2 Nucleate Boiling 1 3 

2.1.3 Transition Boiling 14 

2.1.4 Film Boiling 14 

2.2 Forces Influencing Vapor Bubble Growth, Departure, and Movement during the 

Boiling Process 14 

2.2.1 Surface Tension 13 

2.2.2 Drag Force 13 

2.2.3 Buoyancy Force 17 

2.2.4 Internal Pressure 17 

2.2.5 Inertia Force 17 

2.2.6 Thermocapillary Force or Marangoni Effect 18 

2.2.7 Thermophoretic Force 18 

2.2.8 Molecular Momentum 18 

2.2.9 Acoustic Force 18 

2.3 Transport Models for Nucleate Boiling 21 

2.3.1 Rohsenow's Model 21 

2.3.2 Microconvection Model 22 

2.3.3 Vapor-Liquid Exchange Model 22 

2.3.4 Natural-Convection Analogy Model 22 

2.3.5 Inverted Stagnation Flow Model 22 

2.3.6 Latent Heat and Microlayer Evaporation Effects 22 

2.4 Critical Heat Flux Phenomenon 22 

2.5 Pool Boiling in Reduced Gravity 24 

2.6 Acoustic Effects on Heat Transfer 24 

2.7 Boiling Heat Transfer with a Highly Wetting Fluid 25 

CHAPTER THREE: EXPERIMENTAL APPARATUS AND EQUIPMENT 28 

3.1 Experimental Fluids 28 

3.2 Acoustic Resonators 29 

3.3 Fluid Chambers 29 

3.4 Platinum Wire Heater 30 

3.5 Acoustic Pool Boiling Experiment 31 



5 


3.6 Acoustic Amplifier 34 

3.7 Function Generator 34 

3.8 Hydrophones 34 

3.9 Oscilloscope 35 

3.10 Constant Temperature Controller 35 

3.10.1 Controller Box 35 

3.10.2 Control Circuitry 36 

3.1 1 Power Supplies 38 

3.12 Data Acquisition 38 

3.13 Video and Lighting 39 

3.14 Drop Rig 40 

3.15 Drop Tower 40 

CHAPTER FOUR: EXPERIMENTAL PROCEDURES 42 

4.1 Coupling the Acoustic Resonator with the Fluid Chamber 43 

4.2 Hydrophone Calibration 43 

4.3 Acoustic Field Strength 46 

4.4 Fluid Degassing 47 

4.5 Heater Wire Calibration 47 

4.6 Heater Wire Positioning 48 

4.7 Average Heater Surface Temperature 49 

4.8 Heat Flux 49 

4.9 Bulk Fluid Temperature 49 

CHAPTER FIVE: RESULTS AND DISCUSSION 50 

5.1 Results 50 

5.1.1 Gravity Driven Terrestrial Pool Boiling Results 50 

5.1.2 Acoustic Driven Terrestrial Pool Boiling Results 55 

5.1.3 Acoustic Driven Microgravity Pool Boiling Results 63 

5.1.4 Boiling Visualization Results 68 

5.2 Discussion 74 

5.2.1 Heater Wire Location 74 

5.2.2 Acoustic Pressure Amplitude 75 

5.2.3 Average Heat Flux and Heater Temperature Control 76 

5.2.4 Boiling Visualization 77 

CHAPTER SIX: CONCLUSIONS AND RECOMMENDATIONS 78 

6.1 Conclusions 78 

6.2 Recommendations 78 

BIBLIOGRAPHY 80 

APPENDIX A: UNCERTAINTY ANALYSIS 85 

A.l Platinum Wire Surface Temperature Measurement 85 

A. 2 Total Heat Flux Measurement 86 

APPENDIX B: EQUIVALENT GRAVITY 87 

B. l Bubble Departure Diameter 87 

B.2 Acoustic Force / Buoyancy Force vs. Bubble Radius 87 

B.3 Acoustic Driven Microgravity CHF vs. Normal Terrestrial Gravity CHF 88 



6 


LIST OF TABLES 


Table 3.1 Experimental Fluid Properties at 25.0°C 29 

Table 3.2 Summary of the Circuitry Components for the Temperature Controller 38 

Table 4.1 Hydrophone Calibration Results 46 

Table 5.1 Acoustic Driven Boiling CHF Results 76 

Table b.l Equivalent Gravity for Experimental Acoustic Pressure Amplitudes 88 



7 


LIST OF FIGURES 

Figure 2.1 Forces on a Bubble during Growth and Two-Phase Flow 1 5 

Figure 2.2 Bubble Levitation Positions In an Acoustic Plane Standing Wave 20 

Figure 3.1 Half Wavelength Resonator 29 

Figure 3.2 Platinum Wire Heater Assembly 31 

Figure 3.3 Acoustic Pool Boiling Experiment 32 

Figure 3.4 Exploded View of the Acoustic Pool Boiling Experiment 33 

Figure 3.5 Hydrophone 35 

Figure 3.6 Simplified Schematic of the Temperature Control Circuit 36 

Figure 3.7 Schematic of Temperature Control Circuit 37 

Figure 3.8 PULSE User Interface for Data Acquisition 39 

Figure 3.9 Video and Lighting Setup 40 

Figure 3.10 Full view of 2.1 Second Drop Tower 41 

Figure 3.11 Release-Retrieve Mechanism 42 

Figure 3.12 x, y, and, z Direction Low-Gravity Level 42 

Figure 4.1 Hydrophone Voltage Output 44 

Figure 4.2 Acoustic Pressure Distribution for Water Chamber 45 

Figure 4.3 Acoustic Pressure Distribution for FC-72 Chamber 47 

Figure 4.4 Heater Wire Calibration Curve 48 

Figure 5.1 Entire Terrestrial Gravity Boiling Curve for FC-72 52 

Figure 5.2 Terrestrial Gravity Boiling Curve in the Nucleate Regime for FC-72 52 

Figure 5.3 Natural Convection and Nucleate Boiling Correlation Comparison 53 

Figure 5.4 Heat Flux vs. Time for a Nucleate Boiling Temperature Setting 53 

Figure 5.5 Critical Heat Flux vs. Bulk Fluid Temperature for FC-72 54 

Figure 5.6 Acoustic Driven Terrestrial Boiling Curve for FC-72 with P a = 28kPa 56 

Figure 5.7 Enlarged View of the Nucleate Boiling Region of Figure 5.6 56 

Figure 5.8 Acoustic Driven Terrestrial Boiling Curve for FC-72 with P a = 42kPa 57 

Figure 5.9 Enlarged View of the Nucleate Boiling Region of Figure 5.8 57 

Figure 5.10 Acoustic Driven Terrestrial Boiling Curve for FC-72 with P a = 56kPa 58 

Figure 5.1 1 Enlarged View of the Nucleate Boiling Region of Figure 5.10 58 

Figure 5.12 Acoustic Driven Terrestrial Boiling Curve for FC-72 with P a = 70kPa 59 

Figure 5.13 Enlarged View of the Nucleate Boiling Region of Figure 5.12 59 

Figure 5.14 Acoustic Driven Terrestrial Boiling Curve for FC-72 with P a > 70kPa 60 

Figure 5.15 Enlarged View of the Nucleate Boiling Region of Figure 5.14 60 

Figure 5.16 Acoustic Driven Terrestrial Boiling Curve for FC-72 with the Heater at the 

Acoustic Node 60 

Figure 5.17 Enlarged View of the Nucleate Boiling Region of Figure 5.16 61 

Figure 5.18 Acoustic Driven Terrestrial Boiling Curve for FC-72 with the Heater at the 

Acoustic Antinode 61 

Figure 5.19 Enlarged View of the Nucleate Boiling Region of Figure 5.18 61 

Figure 5.20 Acoustic Driven Terrestrial Boiling Curve for FC-72 with the Heater at the 

Halfway Position Between the Node and Antinode 62 

Figure 5.21 Enlarged View of the Nucleate Boiling Region of Figure 5.20 62 



8 


Figure 5.22 Acoustic Driven Terrestrial and Microgravity Boiling Curves for FC-72, 

at an Acoustic Pressure of 28 kPa ••• 64 

Figure 5.23 Acoustic Driven Terrestrial and Microgravity Boiling Curves for FC-72, 

at an Acoustic Pressure of 56 kPa ••• 64 

Figure 5.24 Acoustic Driven Terrestrial and Microgravity Boiling Curves for FC-72, 

at an Acoustic Pressure of 70 kPa 65 

Figure 5.25 Acoustic Driven Microgravity Boiling Curves for FC-72 65 

Figure 5.26 CHF vs. Acoustic Pressure Amplitude for FC-72 66 

Figure 5.27 Heat Flux Fluctuation in a Microgravity Drop with No Applied Acoustics . 66 
Figure 5.28 Heat Flux Fluctuation for an Acoustic Driven Microgravity Drop in the 

Nucleate Boiling Regime ;• 67 

Figure 5.29 Heat Flux Fluctuation for an Acoustic Driven Microgravity Drop in the Film 

Boiling Regime ; ; *? 7 

Figure 5.30 Terrestrial and Microgravity Boiling with No Applied Acoustic Field 69 

Figure 5.31 Microgravity Boiling with Acoustics, Heater = Halfway Position, 

P a = 70 kPa 70 

Figure 5.32 Terrestrial Boiling with Acoustics, Heater = Halfway Position, 

P a = 70 kPa 71 

Figure 5.33 Terrestrial Boiling with Acoustics, Heater = Antinode Position, 

P a = 70 kPa 77 72 

Figure 5.34 Terrestrial Boiling with Acoustics, Heater = Node Position, 

P. = 70 kPa ; -•••• ----•V 11 


Figure b.l Acoustic Force / Buoyancy Force Ratio vs 


. Bubble Radius 88 



NOMENCLATURE 


A p 

A s 

Bo 

c 

Cp 

C 

C D 

CHF 

Cmax 

dd 

D 

D b 

f 


Fa 

F b 

F basset 

F d 

F, 


r mm 

Fp 

F st 

Fj 


F vm 
g 

g* 

h 


hfg 

Ja 

k 

k t 

k z 

L b 

Mref 

Nu 

P 


Pa 

Pr 


Qmax 

q" 

R 

Ra 

R b 


projected area of the bubble 

surface area 

Bond number 

speed of sound 

specific heat 

capacitor 

coefficient of drag 
critical heat flux 
heater geometry coefficient 
bubble departure diameter 
diameter 

bubble base diameter 

ratio of drag coefficient to Stokes drag 

acoustic force 

buoyancy force 

Basset force 

drag force 

inertia force 

molecular momentum force 
internal pressure force 
surface tension force 
thermophoretic force 
virtual mass force 
local gravitational acceleration 
equivalent gravity 
heat transfer coefficient 
latent heat 
Jakob number 
thermal conductivity 
thermophoretic coefficient 
wave number in z-direction 
length scale 

reference sensitivity level 
Nusselt number 
pressure 

acoustic pressure amplitude 
Prandtl number 
critical heat flux 
heat flux 
radius, resistor 
Rayleigh number 
bubble radius 



10 


Re 

Rn 

SLp 

T 

t 

u 

U b 

V 

V(t) 

x 

z 


Reynolds number 

equilibrium bubble radius 

sensitivity level 

temperature 

time 

velocity 

velocity scale 

volume, voltage 

bubble volume over time 

x-direction 

z-direction 


a 

P 

v 

5 

Y 

X 

p 

p 

CT 

Ta 

0 

to 

CD 0 

U 

subscripts 

i 

1 

n 

o 

v 

z 


thermal diffusivity 

volume thermal expansion coefficient 
kinematic viscosity 
droplet density/fluid density 

polytropic exponent, sound speed fluid/sound speed droplet 
wavelength of sound 
dynamic viscosity 
density 

surface tension 
dynamic response time 
contact angle 

natural frequency of sound field 
natural frequency of bubble 
kinematic viscosity 

internal 

liquid 

equilibrium 
external, hydrostatic 
vapor 
z-direction 



11 


CHAPTER ONE: INTRODUCTION 

Terrestrial heat transfer systems, which utilize nucleate boiling, rely on the 
buoyancy force to remove vapor bubbles from the heated surface. The lack of gravity in 
space eliminates the buoyancy forces and limits the ability for vapor removal. If low heat 
fluxes at a large subcooling are not used, vapor bubbles will grow and tend to remain on 
or near the heated surface commonly causing a vapor blanket to form over the heater. 
Efficient nucleate boiling stops and heat must now be conducted through the vapor layer. 
The inefficiency of film boiling often quickly elevates surface temperatures leading to 
burnout of the heater surface. The ability to sustain nucleate boiling in a microgravity 
environment could lead to more effective and efficient means of transferring heat. 
Therefore, it is necessary to find an additional force that can replace buoyancy, remove 
vapor from the heated surface in microgravity, and maintain the nucleate boiling process. 

1.1 Research Objective 

Sitter (1995) proved that an applied acoustic field can enhance natural convection 
and nucleate boiling in both terrestrial and microgravity using a heat flux controlled 
system. The primary objective of this research was to extend the acoustic driven heat 
transfer work and develop entire boiling curves through the use of a constant temperature 
heater. It was proposed that higher acoustic amplitudes would increase the efficiency of 
boiling heat transfer in both terrestrial and microgravity. Critical heat flux is often an 
important design parameter for boiling heat transfer equipment and an extensive look at 
this phenomenon is desirable. It is also important to know how the applied acoustic 
standing wave removes and transports vapor bubbles. Studying the effects of heater 
location within the sound field is one way to develop a better feel for the acoustic 
interaction with the boiling heat transfer process. 

1.2 Significance and Justification 

Future spacecraft power systems are likely to have greater power generation and 
dissipation requirements due to proposed longer space missions and more intensive space 
activities. Although space provides an excellent low temperature sink for the dissipation 
of heat through radiation, collecting heat from a variety of sources and transporting it to a 
central radiator for ultimate dissipation is a difficult and important problem. The 
collection and dissipation of heat is closely linked to power production, since power 
production is potentially the largest source of heat aboard a spacecraft. Boiling systems 
are being considered for a wide range of future space applications such as thermal 
control, propulsion, power generation, and thermal management. For traditional 
terrestrial applications, boiling has been recognized as one of the most efficient heat 
transfer mechanisms. Boiling heat transfer has the potential advantage of being able to 
transfer a large amount of energy over a relatively narrow temperature range with a small 
weight requirement. However, boiling as applied conventionally at one-g depends 
significantly on gravity and will fail to function properly in space because of the need to 
remove vapor bubbles. The fluid dynamics of two-phase systems in microgravity 



12 


encompasses a wide range of complex phenomena that at the current time are not 
understood sufficiently for engineering design to proceed. A complete boiling curve is 
indispensable for engineering design of heat transfer equipment that utilizes boiling. 

1.3 Outline of Chapters 

Acoustic driven microgravity pool boiling heat transfer is a complex problem and 
difficult subject to study. Chapter 2 is a literature review that provides background on 
several topics important to this research. Chapter 3 discusses the equipment used 
throughout the experimentation process. Chapter 4 explains the procedures followed to 
perform reliable experiments. Chapter 5 presents and discusses the results of this 
research, and Chapter 6 presents conclusions and provides recommendations for future 

studies. 



13 


CHAPTER TWO 
LITERATURE REVIEW 

Microgravity boiling with an applied acoustic field is a complicated problem and 
myriad topics need to be considered. Terrestrial gravity boiling, reduced gravity boiling, 
and the effects of acoustics on boiling will be discussed. The terrestrial boiling curve will 
be explained with sections dedicated to the mechanisms that control nucleate boiling and 
critical heat flux. 

2.1 The Pool Boiling Process and the Boiling Curve 

Pool boiling occurs when a surface is immersed in a large pool of liquid and 
heated to temperatures larger than the liquid saturation temperature. The boiling process 
that evolves is often broken down into four regimes and visualized using a boiling curve, 
in which the wall heat flux is plotted versus the difference between the wall temperature 
and fluid saturation temperature. Convection, nucleate boiling, transition boiling, and 
film boiling are the four regions that combine to make up the boiling curve. 

The first boiling curves were actually presented by two metallurgists. Pilling and 
Lynch, in 1919 after studying cooling rates during quenching experiments (Pilling and 
Lynch, 1920 and Lienhard, 1994). However, in 1934, Nukiyama was the first to present 
his experimental data in a way recognized as a boiling curve of the present day (Lienhard, 
1994 and Nukiyama, 1966). Nukiyama used a horizontal wire both as an electric 
resistance heater and resistance thermometer to obtain heat flux and temperature data 
during boiling experiments. 

2.1.1 Natural Convection 

Liquids will not actually begin to boil at their saturation temperature if it is not in 
contact with its own vapor. A temperature gradient forms and the heat transfer is driven 
by the difference between the wall and saturation temperature of the liquid. As the liquid 
temperature continues to rise, bubbles begin to form at preferred sites on the heater 
surface and nucleate boiling begins. 

2.1.2 Nucleate Boiling 

The nucleation sites where bubbles initially begin to form are typically crevices or 
irregularities in the heater surface. Surface tension forces cause air to be trapped in the 
crevices by the liquid surrounding the heater. These air bubbles are the nuclei for the 
formation of vapor bubbles. Heat addition causes the vapor bubble to grow by 
evaporation from the liquid interface. The buoyancy force will eventually cause the 
bubble to detach in a terrestrial gravity environment. An applied force can be used to 
detach bubbles in a microgravity situation. Some vapor is left behind and the bubble 
generation cycle continues. With a highly subcooled liquid, bubbles may actually 
collapse before detaching. At higher heat fluxes, more nucleation sites become active 
and bubbles coalesce and escape in jets or columns. Nucleate boiling stops when the 
maximum rate at which vapor can leave the heater is reached. This is known as the peak 
heat flux or critical heat flux. 



14 


2.1.3 Transition Boiling 

After the peak heat flux has been reached, the heat flux begins to decrease with 
increasing superheat. A vapor film begins to form over the heater surface and 
intermittently collapses allowing some rewetting of the heater surface. The efficiency of 
the heat transfer is decreased as effective vapor removal diminishes. A minimum heat 
flux is reached when the entire heater surface becomes blanketed by vapor and is no 
longer wettable. The rate of vapor formation is equal to the rate at which the vapor 

escapes from the film. 

2.1.4 Film Boiling 

The liquid is separated from the heater by the vapor film. The less dense vapor is 
overlaid by the liquid resulting in an unstable arrangement often called a Taylor 
instability (Burmeister, 1983). The heat flux is determined by the rate at which vapor 
bubbles can escape from the vapor film and radiation heat transfer. The heat flux 
increases for increasing superheat, but efficiency in heat transfer is lost since heat must 
now be conducted through the vapor film instead of the liquid. 

2.2 Forces Influencing Vapor Bubble Growth, Departure, and Movement during the 

Boiling Process . . , , ,, . . , . 

Boiling heat transfer is a complicated process and the balance of forces which act 

on vapor bubbles contribute to the complexity. An applied acoustic field only adds to the 
thermodynamic and hydrodynamic complications. Contributing forces to the vapor 
bubble dynamics in the boiling process are outlined in the following paragraphs. Figure 
2.1 shows a model of a vapor bubble during growth and after departure from the heated 

surface. 



15 




Bubble Growth 


Surface Tension 
Drag 

Thermocapillary 
Molecular Momentum 
Acoustic 

Buoyancy 
Internal Pressure 
Inertia 

Thermophoretic 
Molecular Momentum 
Acoustic 


Figure 2.1 Forces on a Bubble during Growth and Two-Phase Flow 


2.2.1 Surface Tension 

Surface tension plays an important role in the boiling process. The molecular 
attraction that exists between the liquid and heater surface causes the surface tension 
force. Initially, surface tension determines preferred nucleation sites by trapping air and 
dissolved gases in small cavities on the heater surfaces. However, surface tension 
becomes a larger factor after vapor bubbles begin to grow. The surface tension force acts 
around the contact perimeter at the heater surface-liquid-vapor triple interface. This force 
is proportional to the normal component of the fluid surface tension, and the perimeter of 
the bubble base contact area: 

F st = nD b crsin 6 . 1 ) 

Just before the bubble departs, its base begins to neck down and 0 approaches 90°. The 
surface tension force at departure becomes: 

F st = nD b <7 (2-2) 

The normal component of the fluid surface tension becomes larger near departure, 
however, the decreasing base diameter contributes to a smaller force. 

2.2.2 Drag Force . . 

Drag force is a factor at two different points in the boiling process. Initially, this 

force is caused by the bubble growing through a viscous fluid. The drag force has been 
estimated by Keshock and Siegel (1964) using a drag coefficient of C D = 45/Re where: 


R e = SRdD 

2 jUj dt 


(2.3) 



16 


It is assumed that the bubble is spherical and growing away from the wall at a velocity 
equal to the change of its diameter with time. The estimated drag force is: 

f -In c f (2.4) 

F ° ~ 2 Pl l> 4 U dt) 

This equation can be rewritten using the definition for kinematic viscosity and the 
coefficient of drag: 

_ ASn -dD (j S') 

F° = D— u/ 

This drag force associated with bubble growth was determined to be negligible by 

Eastman (1984) for most fluids. „ .. , , . 

The drag force on a bubble incurred by moving through a fluid can be broken 
down into steady and unsteady components. The "steady state" drag force acts on the 
bubble when there is no acceleration of the relative velocity between the bubble and the 
conveying fluid. The "steady state" drag force is: 

F d =^P,C d a ^,- u .\(u,- u ,) (2 ' 6) 

where p, is the liquid density, C D is the coefficient of drag, A p is the projected area of the 
bubble, and u, and u v are the liquid and vapor (bubble) velocities, respectively (Crowe et 
al., 1996). The classic Stokes drag coefficient valid for Re r <l is C D stokes - 24/Re r where 
the Reynolds number based on relative velocity is defined as: 

Re = (2.7) 

r Ml 

A correlation developed by Schiller and Nauman is commonly used for Reynolds up to 
1000: 

C D = — (l + 0.15Re r 2/3 ) ( 2 - 8 ) 

Is T> _ \ ' 


r 

The dynamic response time of the fluid is defined as: 

. = A^1 (2.9) 

18 Ml 

Utilizing the previous relations and defining a ratio of the drag coefficient to Stokes drag, 
f=C D /C D stokes, the steady state drag on a spherical bubble translating through a quiescent 
medium can be rewritten as: 

f d = — (2 ' 10) 

The assumption that the vapor density is approximately equal to the inverse of the bubble 
volume is also used to derive the steady state drag force shown in Eq. 2.1 0 

The unsteady drag force due to acceleration of the relative velocity between the 
vapor and liquid phases can be separated into two parts: the virtual mass effect and the 
Basset force (Crowe, 1996). The virtual mass effect accounts for the work done by the 
vapor bubble that is necessary to accelerate the fluid around it as it translates. It accounts 



17 


for the form drag due to acceleration. The virtual mass force on the vapor bubble in the 
direction opposite to its acceleration is given by: 




( 2 . 11 ) 


"Apparent mass" force is often used to describe this force because it is equivalent to 
adding a mass to the vapor bubble. The Basset force accounts for viscous effects 
incurred by a lagging boundary layer development as the relative velocity between the 
two phases changes with time. The Basset force is given by: 


As seen from Equation 2.12 the size of the Basset force depends on the acceleration 
history up to the present time. 




( 2 . 12 ) 


2.2.3 Buoyancy Force 

The buoyancy force has a significant contribution to the boiling process m 
terrestrial gravity. However, under certain circumstances, it has been shown that nucleate 
boiling behavior has little dependence on the buoyancy force (Keshock and Siegel, 1964). 
The buoyancy force acts in the direction opposite to gravity and is approximately equal to 
the weight of the fluid in which the vapor bubble displaces. However, the buoyancy 
force represents exactly the difference between the weight of the displaced fluid and that 
of the vapor bubble. For a spherical bubble: 


F b = ^D 2 (p,-p v )g (213) 

6 

2.2.4 Internal Pressure 

Internal pressure only contributes a net force during the bubble growth stage. 
After departure from the heated surface, the net force due to internal pressure is zero. 
Assuming a truncated spherical shape during bubble growth, the pressure difference 
between the inside and the outside of the bubble interface is derived from the Young- 
Laplace equation: 

P-P=^ (2-14) 

/ o R 

The net force is: 


where R b is the radius of the bubble base. The net internal pressure force is maximized 

when the bubble is a hemisphere. At this point, this force is equal and opposite of the 
surface tension force. This shows that the internal pressure force can not act alone to 
remove a bubble from the surface (Eastman, 1984). 

2.2.5 Inertia Force . 

Vapor inertia is negligible during bubble growth, but the inertia of the 
surrounding liquid is not. As the bubble grows, surrounding liquid is put into motion. 
When the bubble growth rate begins to decrease, the inertia of the fluid opposes and 
attempts to pull the vapor with it. This force tends to pull the bubble away from the 
surface. It has been noted that the inertia force from a rapid bubble growth rate can tear 



18 


the bubble away from the heated surface before it can grow larger (Straub et al., 1990). 

In this case, the buoyancy force would not be as important and bubble detachment would 
be less sensitive to gravity. Eastman (1984) derived an expression for the inertia force 
using results from Han and Griffith (1965) that showed the apparent mass of the affected 
fluid is that occupied by 1 1/16 of the bubble volume. The inertia force can be written as: 

f ; =— ■ ( 2I6 > 

' 96 dp 

2.2.6 Thermocapillary Force or Marangoni Effect 

The surface tension at the bubble interface between the liquid and the vapor phase 
varies with temperature. If temperature non-uniformities are maintained, a steady flow 
pattern may be established in which the pulling action at the interface resulting from the 
surface tension gradient is balanced locally by viscous shear stress in the liquid flow 
(Carey, 1992). Motion of the liquid due to surface tension gradients at the interface is 
sometimes called the Marangoni effect. The liquid moves from the warmer region to the 
cooler region causing a force on the bubble in the direction of the warmer region. 

2.2.7 Thermophoretic Force 

The thermophoretic force is caused by a temperature gradient in the liquid phase. 
Higher molecular velocities occur at higher temperatures giving rise to more momentum 
exchange and a net force in the direction of decreasing temperature. 

The thermophoretic force is: 

F r =3^t r if (217) 

where k t is the empirically derived thermophoretic coefficient based on the thermal 
conductivities of the continuous and dispersed phases. Typically, this force only 
becomes significant in two-phase flow where very small particles move in rarefied flows 
(Crowe et al., 1996). 

2.2.8 Molecular Momentum 

This force is similar to the thermophoretic force in that it is caused by a 
temperature gradient. Temperature gradients in the surrounding liquid cause non- 
uniform evaporation and/or condensation resulting in non-uniform momentum exchange 
between the vapor and liquid molecules at the interface. The resulting net force on the 
vapor mass is termed the molecular momentum effect. Snyder (1995) noted that this 
force could be considerably large relative to the buoyancy force, and could effect the 
departure diameter of vapor bubbles. 

2.2.9 Acoustic Force 

It has long been known that bubbles can be trapped in a liquid by an acoustic 
standing wave. This provides a visual understanding of the fact that a standing wave 
exerts an average force on the bubble. A standing wave is produced when the acoustic 
chamber, fluid and acoustic resonator are properly coupled. In other words, the 
dimensions of the chamber, resonator driving frequency, and speed of sound in the fluid 
must be such that they satisfy the wave equation. Further details are explained later in 
the description of the acoustic chamber. 

If a bubble is small as compared to the wavelength of sound, then at any instant 
the translational force exerted on the bubble by the sound field is equal to the bubble 



19 


volume times the negative gradient of the acoustic pressure (Eller, 1968). The average 
acoustic force on a bubble is given by: 

( 2 - 18 ) 

where p A (r,t) is the acoustic pressure of the incident acoustic standing wave evaluated at 
the position of the bubble center and V(t) is the volume of the bubble, which changes 
with time. The brackets in Equation 2.1 8 represent the time average over one period of 
the acoustic wave. By restricting the situation to standing waves symmetric about the z- 
axis, the pressure field along the z-axis is described by: 

p A (z,t) = P A sin(2;zz//ij smart (2.19) 

where X z is the wavelength of sound in the z direction, to is the frequency of the sound 
field, and P A is the acoustic pressure amplitude at the antinode along the z-axis. 
Assuming adiabatic oscillations, the resonance frequency for the bubble can be written 
as: 



( 2 . 20 ) 


where P 0 is the hydrostatic pressure, y is the polytropic exponent of the gas in the bubble, 
and R n is the equilibrium bubble radius. Using this expression, Eller (1968) writes the 
formula for the average acoustic force in the z direction as: 



2 

iP.rK 0-^) 

CO n 


sin 



( 2 . 21 ) 


The three bubble monopole oscillation damping mechanisms (radiation, viscous, and 
thermal) can also be incorporated into Equation 2.21 (Asaki and Marston, 1994). As seen 
in this equation, the direction of the acoustic force depends on the size of the bubble and 
its position within the sound field. Smaller bubbles with a resonance frequency smaller 
than the frequency of the acoustic field (driving frequency) will be forced towards the 
pressure antinodes. Bubbles with a resonance frequency greater than the frequency of the 
acoustic field will move towards the pressure nodes. Sitter (1995) constructed Figure 2.2 
showing the levitation positions of bubbles for two different cases. He uses Case I for 
bubbles smaller than resonance size and Case II for bubbles larger than resonance size. 



20 


Top of 

Fluid chamber 


Plane standing 
wave 


Bottom of 
Fluid chamber 


Z 



Figure 2.2 Bubble Levitation Positions In an Acoustic Plane Standing Wave 

Crum and Eller (1969) performed experiments to study the motion of bubbles 
smaller than the resonance size through a standing acoustic wave in water and isopropyl 
alcohol. The bubbles could be trapped at a position slightly above the uppermost 
pressure antinode where the bubble's buoyancy was balanced by the acoustic force. It 
was found that translational velocities of small air bubbles created by the acoustic force 
were relatively large compared to the rise velocity of the bubble in the absence of a sound 
field. Further results indicated erratic bubble movement when the pressure amplitude 
exceeds a threshold value. 

A glovebox experiment aboard the space shuttle on USML-1 showed the 
agglomeration of air bubbles larger than the resonant size (1 to 15mm) at the acoustic 
pressure node (Marston et al., 1994). Observations showed that the bubbles did not 
coalesce until a surfactant was injected through a hypodermic needle at the surface of a 
large bubble. Coalesce initiated a wave that dispersed and traveled around the bubble. 
The acoustic levitation device used by Marston et al. (1994) was similar to the one used 
for the study of bubble shape oscillations in lg where bubbles up to 12mm in diameter 
were levitated (Asaki et al., 1993). The levitator consisted of a 3" diameter piezoelectric 
ceramic transducer mounted to the bottom of a water filled Plexiglas chamber. The 
driving frequency for the glovebox experiment and the study of shape oscillations was 63 
and 22.5 kHz, respectively. 

The presence of a bubble in an acoustic standing wave has further complications. 
The non-uniform distribution of the radiation pressure (average force) over the surface of 



21 


a bubble induces a non-spherical bubble shape (Asaki and Marston, 1995). Bubble 
rotation and induced shape oscillations can occur. The presence of the bubbles may also 
affect the acoustic field. Resonance size bubbles can significantly detune a resonator 
through a bubble's monopole response. However, it has been observed by the above 
authors that detuning of the levitator is significantly reduced by bubbles much larger than 
resonance size with a radii less than approximately 3mm. 

Previous discussion of the acoustic force on a bubble has been presented based on 
the assumption of adiabatic oscillations. The idea of a second bubble resonance 
associated with evaporation and condensation of the vapor has been approached 
(Marston, 1979 and Prosperetti and Oguz, 1996). When latent heat is sufficiently small 
and the heat capacity and conductivity of the liquid is sufficiently large, evaporation and 
condensation should have a significant effect on the response of the bubble. Prosperetti 
and Oguz have derived an equation for this second resonance frequency: 


4 d2 


CO. 


3 hf p R 
, 3 = 11.8 


P, J c p T 2 k, 


( 2 . 22 ) 


where 1 1 .8 is a numerical constant introduced to account for the approximate nature of 
the derivation, hf g is the latent heat, R is the bubble radius, c p is the specific heat, T is the 
fluid temperature, k| is the thermal conductivity, and p v and pi are the densities of the 
vapor and liquid phases, respectively. This second resonance appears to be significant 
for small vapor bubbles (R< 1mm) at low frequencies (f<10 3 kHz) when considering 
water near its saturation temperature. 

2.3 Transport Models for Nucleate Boiling 

Numerous decades of boiling heat transfer research have gone by and there is still 
some controversy over mechanisms controlling nucleate boiling heat transfer. There is 
still no comprehensive model for boiling because of the inability to appropriately account 
for factors like heater surface microgeometry, surface energy, liquid temperature 
distribution, buoyancy induced liquid motion, and latent heat transport ability of the 
bubble. Carey (1992) has reviewed several different models to help show the scope of 
mechanisms that have been pursued. Carey has also presented several correlations that 
have been fitted to boiling data over the past 60 years. 

2.3.1 Rohsenow's Model 

Early models of nucleate boiling were based on the assumption that the process of 
bubble growth and departure induced motion in the surrounding liquid facilitating 
convective heat transfer from the surface. Rohsenow (1962) made the most successful 
approach to this by postulating that heat flows from the surface first to the adjacent liquid 
and that the high heat transfer coefficient associated with nucleate boiling is a result of 
local agitation due to liquid rushing to fill the void left by a departing bubble. The 
following relation was used to correlate pool boiling heat transfer data: 
hi 

Nu„=-± = A Rel'Pr/" 

k, 


(2.23) 



22 


by specifying an appropriate length (L b ) and velocity scale (U b ) for the bubble Reynolds 
number defined as: 

p U h L h 

Re, = — - - (2.24) 

M, 

2.3.2 Microconvection Model 

Forster and Zuber (1955) agreed with the form of Rohsenow's correlation but 
used bubble growth relations to evaluated length and velocity scales. Furthermore, the 
Nusselt number was now defined by the temperature difference between the heater wall 
and bulk liquid. The driving potential for heat transfer was now characterized by this 
temperature difference rather than the difference between the heater wall temperature and 
the liquid saturation temperature. 

2.3.3 Vapor-Liquid Exchange Model 

Forster and Greif (1959) proposed that bubbles act as microscopic pumps. Cold 
ambient fluid is drawn to the surface of the heater as the bubble departs or collapses. As 
new bubbles grow, the pumping action pushes heated liquid form the near-wall region out 
into the cooler ambient. 

2.3.4 Natural-Convection Analogy Model 

Zuber (1963) proposed a microconvection model based on the analogy between 
nucleate boiling and single-phase turbulent natural convection. Appropriate length and 
velocity scales were substituted into turbulent natural convection heat transfer 
correlations. Zuber's model correlated well with nucleate boiling heat transfer data in the 
isolated bubble regime. 

2.3.5 Inverted Stagnation Flow Model 

This model is another attempt at extending a single-phase convection heat transfer 
concept to nucleate boiling. Tien (1962) established the analogy between induced flow 
associated with a rising bubble column to an inverted stagnation flow. The correlations 
worked well for data at moderate to high active site densities for a wide range of fluids. 

2.3.6 Latent Heat and Microlayer Evaporation Effects 

This model includes the latent heat associated with the vapor bubble and 
considers the importance of the liquid microlayer under the bubble. At lower heat fluxes, 
microconvection theories can account for most of the heat transfer. At higher heat fluxes, 
more nucleation sites interfere with the bubble's ability to convect superheated liquid into 
the ambient. Carey (1992) explains that more energy is supplied to the latent heat of 
vaporization to the bubble. 

Pool boiling heat transfer coefficients improve as the heat flux increases. At 
higher heat fluxes, more bubbles grow in the liquid film on the surface. Independent 
experiments have shown that boiling heat transfer coefficients are better with liquid films 
than with pool boiling (Mesler, 1 976). This supports the idea of a liquid microlayer 
existing beneath a bubble during the entire growth cycle. 

2.4 Critical Heat Flux Phenomenon 

A pool boiling system exhibits a maximum or critical heat flux, which separates 
nucleate boiling and transition boiling. The liquid can no longer efficiently wet the 
heater surface and a vapor blanket begins to form. The vapor blanket provides thermal 



23 


resistance and the surface temperature rapidly increases at this critical heat flux. Four 
different models based on partial vapor blanketing of the heater have been proposed to 
explain the CHF phenomenon in pool boiling (Carey, 1992). 

Model 1 Bubbles coalesce at the heater surface when the heat flux is increased. 
The formation of vapor columns occurs and liquid droplets fall back to the surface. 
Kutateladze (1948) proposed that vapor blanketing of the surface occurs when the vapor 
velocity becomes high enough to carry the liquid droplets away from the surface. 

Model 2 As the heat flux increases, nucleation site density increases. Rohsenow 
and Griffith (1956) proposed that a critical bubble packing eventually occurs to the point 
where liquid rewetting is inhibited and a vapor blanket forms. 

Model 3 Zuber (1959) first proposed the Helmholtz-instability theory for the 
critical heat flux. Vapor jets or columns form from the coalescence of bubbles at higher 
heat fluxes CHF occurs when distortion of the vapor jets is created by the Helmholtz- 
instability and liquid flow is blocked to portions of the heater. Continued vaporization of 

the liquid on the surface creates the vapor blanket. 

Model 4 Haramura and Katto (1983) have created a model that focuses on the 
liquid microlayer under the bubble. At high heat fluxes, small vapor jets in the 
microlayer combine to form large vapor bubbles on the microlayer. These vapor jets 
must be small enough to remain stable. The bubble hovers on this microlayer until it 
accumulates enough vapor to escape. It is postulated that the CHF condition occurs when 
the liquid film under the bubble evaporates completely during the "hovering" time 

interval needed for the bubble to grow large enough to escape. 

The following equation credited to Zuber and Kutateladze is often used to predict 
CHF in normal terrestrial gravity: 

r 2/ iK < 2 - 25 > 

*7 max, .sal = C m A FA [P, " PM\ 

where q max ,sat is the CHF for saturated boiling, C max is a constant based on heater 
geometry, h fg is enthalpy of vaporization, a is surface tension, p v is density of vapor, p, is 
density of liquid, and g is the gravitational acceleration. A slightly more complicated 
equation was correlated by Zuber through a stability analysis of the vapor jets. The effect 
of subcooling on critical heat flux can be captured in an equation developed by Ivey and 

Morris (1966): 


Ja = 


Pr h fz 


(2.26) 


where Ja is the Jakob number defined as: 


^ ma \ y sub 
max,.v£/f 


1 + 0.1 


r PA A 

ypu 


Ja 


where AT is the subcooling and c p is the specific heat of the fluid. 


(2.27) 



24 


2.5 Pool Boiling in Reduced Gravity 

Siegel and Usiskin (1959) conducted a photographic study of boiling in the 
absence of gravity. The duration of the reduced gravity was 0.7 seconds as the 
experimental apparatus was allowed to fall freely for 8ft. The results of the study showed 
that vapor bubbles were no longer being pushed away from the heater and bubbles grew 
larger in size. Usiskin and Siegel (1961) used a counterweighted platform where they 
could adjust the effective gravity field on the equipment. The study showed that the 
critical heat flux for water varied according to the 1/4 power of gravity. 

Keshock and Siegel ( 1 964) performed a study of bubble growth, departure, and 
rise during nucleate boiling of saturated aqueous-sucrose solutions in reduced gravity. 
Bubble departure was found to be governed by an interaction of buoyancy , inertial, and 
surface tension forces with viscous drag being of little significance. For rapidly growing 
bubbles the inertial force is sufficiently large to overcome the surface tension force 
before buoyancy becomes significant reducing the effect of gravity. For slowly growing 
bubbles the surface tension force dominates the inertial force and bubble departure is 

dependent on buoyancy. . . 

Weinzierl and Straub (1982) did an experimental investigation of subcooled 
nucleate pool boiling with R1 1 3 in a microgravity level of (a/g=10 ) for 350 seconds 
during a rocket flight. A platinum wire was used to test three different heat fluxes. The 
heat transfer coefficients were found to be equal or greater under microgravity at low heat 
fluxes. Cinematography showed that vapor bubbles moved along the heated wire in 
random directions. Coalescence of bubbles helped remove them from the wire. 

Straub et al. (1990) explain that early microgravity experiments have 
contradictory results with possible problems resulting from transient effects incurred by 
short 1 to 4 second drop tower experiments. They found that the influence of gravity on 
pool boiling has minimal effect. When changing from terrestrial gravity to microgravity, 
convection is no longer buoyancy driven but is replaced by surface tension effects, 
coalescence dynamics, thermocapillary flow, and evaporation-condensation. Evaporation 
can occur at the bottom of the bubble while condensation can be happening at the crown. 
At low gravity Straub et al. states that the hydromechanic theory of instability governing 
critical heat flux no longer applies. The coalescence of bubbles near the heater surface 
becomes the dominating mechanism rather than the instability of vapor columns. 

Merte et al. (1993) performed several experiments that show the effect of body 
forces on boiling heat transfer in microgravity. They explain that nucleate boiling will be 
enhanced if buoyancy or some other force acts to hold vapor bubbles near the heater 
surface while simultaneously permitting rewetting of the heater surface to prevent 
burnout Quasi-steady state boiling can occur in microgravity if the bulk liquid 
subcooling is sufficiently high and if the imposed heat flux is sufficiently low. Nucleate 
boiling and rewetting are sustained by the surface tension effects at the liquid-vapor- 
heater interface. 

2.6 Acoustic Effects on Heat Transfer 

Park and Bergles (1988) studied the effects of ultrasonics on heat transfer using a 
modified cleaning tank filled with R-l 13. Boiling curves were created by increasing and 
decreasing the power supplied to small diameter stainless steel tubes. Three transducers 



25 


driven at 55 kHz located at the bottom of the chamber were used to supply the 
ultrasonics. One result showed that the saturated boiling performance was not dependent 
on the heater location. It should be noted that the transducers did not create a uniform 
standing wave in the tank. Temperature overshoot associated with boiling incipience was 
reduced. Acoustic cavitation at the heated surface was determined to be the contributing 
factor. At higher heat fluxes, normal pool boiling behavior resumed as the large amount 
of vapor attenuated the ultrasonic energy before it reached the heater surface. Substantial 
ultrasonic enhancement was observed when the fluid was subcooled. On average, the 
ultrasonics only produced a slight increase in the burnout heat flux for both saturated and 

subcooled fluids of 10 and 5%, respectively. 

Wong and Chon (1969) studied the effect of ultrasonic vibrations (20.6 to 306 
kHz) on heat transfer to water and methanol using small diameter platinum wire heaters. 
They found a critical sound pressure (CSP) level below which the effects of ultrasonic 
vibrations had negligible effects on the heat transfer. This CSP depends on the properties 
of the liquid, its temperature, and the frequency of the ultrasonic field. An 800% increase 
of the heat transfer coefficient was obtained in the natural convection region. Erratic 
motion of the cavitation bubbles on the heater surface and bubble oscillations were 
determined to be the reason for the heat transfer improvement. Also noted was that the 
frequency of the ultrasonic field was negligible if the same cavitation activity in the 
liquid was present. Ultrasonic enhancement was negligible in the nucleate boiling 

g Iida and Tsutsui ( 1 992) used a 0.2mm diameter platinum wire heater to explore 
the effects of ultrasonic waves on boiling of water and ethyl alcohol. The transducer had 
a resonant frequency of 28 kHz. An augmentation in the heat transfer was observed in 
the natural convection and film boiling regions with minimal effect seen in the nucleate 
boiling regime. An increase in the critical heat flux by 20% occurred when ultrasonic 
waves were applied. Again, acoustic streaming and cavitation were determined to be the 
heat transfer enhancement causing mechanism. 

2.7 Boiling Heat Transfer with a Highly Wetting Fluid ... 

FC-72 is a highly wetting fluid with low surface tension and viscosity. It is a 
dielectric fluid that can contain up to 25 times more dissolved air (48% air by volume at 
standard temperature and pressure) by volume, than water (1 .9% air by volume). The 
effects of increased pressure, subcooling, and dissolved gas content on boiling incipience, 
nucleate boiling and critical heat flux (CHF) with FC-72 have been studied by You et al. 
(You 1990 You et al., 1990a, 1990b, and 1995, and Hong et al 1997). The effect of 
subcooling ’and the dissolved gas content of values up to 4 x 10' moles/mole on pool 
boiling incipience is apparently small. It was shown that an increased pressure reduced 
wall superheat at incipience (5°C reduction for a pressure increase of 56 kPa) and in the 
fully-developed nucleate boiling region. Nucleate boiling heat transfer rates were 
enhanced for gas saturated cases and dissolved gas content helped decrease the hysteresis 
effect associated with the wall temperature overshoot at boiling incipience common to 
low surface tension fluids. 



26 


The shape and uniqueness of the boiling curve for FC-72 was a concern for You 
et al. (1990a). Under identical conditions, variations in the wall superheat seemed to 
occur and it was necessary to present the data in a statistical manner. Relative heater 
surface roughness has been considered to cause differences in data sets. 

It was mentioned that the fluid in the vicinity of the heating element may be 
liberated of dissolved gas during boiling creating a non-uniform dissolved gas 
distribution (You et al., 1995). They suggest that the gas is depleted by being convected 
away from the surface by departing bubbles faster than it can be replenished by 
convection or diffusion. This can cause the gas near the heater surface to approach a 
pure-subcooled state. 

Platinum wires ranging in size from 25 to 390pm in diameter were used to study 
boiling characteristics and CHF of gas-saturated and pure-subcooled FC-72 (Hong et al., 
1997 ) interesting result from the data indicated that the nucleate boiling wall 
temperature is insensitive to the level of subcooling. There appeared to be a single curve 
independent of subcooling with the only difference being a larger CHF for a larger degree 
of subcooling. Other data showed a capillary length scale effect on heat transfer for the 
wire diameters tested. There was a reduction in the boiling heat transfer coefficient for 
pure-subcooled FC-72 with increasing wire diameter from 25 to 75pm. Gas-saturated 
boiling curves showed an enhancement in both incipience and nucleate boiling, but there 
was a substantial decrease in CHF for the gas-saturated cases compared to their 
corresponding subcooled cases. It is suspected that CHF increases for the pure-subcooled 
condition due to condensation of the vapor during bubble growth, delaying the onset ot 
hydrodynamic instability. Gas presence inhibits the condensation process and reduces 

the CHF value. , ... _ , 

Danielson et al. (1987) conducted a study on the saturated pool boiling ot several 

Fluorinert liquids using platinum wire heaters. It was shown that saturated pool boiling 
curves for liquids varying widely in boiling point are almost identical with one an another 
if experiments were performed with the same heater. Even if heaters with identical 
dimensions were used, the boiling curves were not reproducible. Platinum is not 
susceptible to oxidation and it was assumed that the same heater could provide a 
reproducible surface for the duration of an experiment. It was noted that the surface 
tensions of these fluids are the lowest of any known liquids, resulting in near-zero 
wetting angles. This is significant in boiling heat transfer because it eliminates many 
potential nucleation sites and promotes the surface temperature excursion and boiling 
incipience. Further experiments showed that the required heat flux needed to reach 
burnout was reduced when using smaller diameter wire heaters. Data scattered when the 
ratio between the wire radius and the capillary length scale was less than 0.15 as noted y 
Sun and Leinhard (1970). Another interesting point was that most of the Fluorinert 
liquids are actually mixtures of several different Fluorinert liquid components. Thus, the 
boiling points of FC-72 might typically increase 4 to 5°C with the loss of the first 10% of 
the material when boiling in an open system with vapor losses. Thereafter, the saturation 
temperature would remain constant. 



27 



28 


CHAPTER THREE: EXPERIMENTAL APPARATUS AND 
EQUIPMENT 

The experimental apparatus and equipment can essentially be divided into three 
independently functioning systems working together. The acoustic system used to 
generate the standing pressure wave consists of a function generator, acoustic amplifier, 
acoustic resonator, hydrophone, experimental fluid and the fluid chamber. The heater 
and data acquisition system consists of two DC power supplies, constant temperature 
controller, platinum wire heater, 486 PC with an A/D card, and a series of data 
acquisition and power wires. The video system consists of a CCD camera, VCR, 
monitor, and lighting. Essential components of each system were secured in a drop rig 
and microgravity was achieved using a drop tower. 


3.1 Experimental Fluids . ... 

All heat transfer experiments were performed using FC-72, a Fluorinert liquid 
produced by the 3M Company. Distilled water was used in the levitation of oil droplets 
necessary for hydrophone calibration. Fluorinert liquids are commonly used in the 
electronic industry, as they are clear, colorless, odorless, non-flammable, non-reactive 
chemically, and excellent heat transfer fluids. All Fluorinert liquids have high densities, 
low viscosities, and low surface tensions. These fluids are characteristically highly 
dielectric and electrical insulating. Boiling points range from 56°C to 253 C. They can 


PROPERTIES 

FLUIDS 

Speed of Sound, c (m/s) 

FC-72 

Water 

528 

1481 

Liquid Density, p, (kg/m 3 ) 

1692 

997 

Vapor Density, p v (kg/m 3 ) 

14.27 

0.0228 

Surface Tension, a (N/m) 

12.65 xIO' 3 

72.1 x 10' 3 

Viscosity, v (m 2 /s) 

0.4 x 10 -6 

0.9 x 10' 6 

Saturation Temp., Tsat (Degree C) 

56 

100 

Specific Heat, c p (J/kg*K) 

1046 

4179 

Thermal Conductivity, k (W/m*K) 

0.057 

0.608 

Latent Heat, hfg (J/kg) 

87.92 x 10 3 

♦ i _ _i ’ u:~i 

24.42 x 10 s 


be usea in aireci uunidti wnu «• — o 

performance. Specifically, the lower boiling point (56°C) of FC-72 makes it the desired 
Fluorinert liquid in this microgravity heat transfer research. FC-72 has the ability to 
absorb a large amount of air making degassing important. Acoustically, FC-72 has a 
lower speed of sound (528 m/s) than most liquids causing a comparative reduction in the 
wavelength of the experimental sound field. A summary of FC-72 properties is presented 
in Table 3.1 . Extensive details on Fluorinert fluids are presented in the 3M Product 

Manual (1995). 



29 


Table 3.1 Experimental Fluid Properties at 25.0°C 


3.2 Acoustic Resonators 

The acoustic resonators designed by Sitter (1995) were used to create the standing 
acoustic pressure wave necessary for each experiment. Often referred to as a half 
wavelength resonator, the design consists of a nodal mounting plate, two hollow 
piezoelectric disks, two quarter wavelength aluminum bars, and a 3/8" diameter bolt. 

Half of the resonator is exposed to the experimental fluid contained by an o-ring seal and 
the other half is open to the atmosphere. Figure 3.1 shows a schematic of a half 


Copper disk with 1/2" hole in center 
Serves as a nodal mounting point 
and electrical contact 

2" or 3" diameter aluminum rod 


3/8" Bolt 



wavelength resonator. 


Piezoelectric disks with 
1/2" hole in center 


Figure 3.1 Half Wavelength Resonator 

Both resonators were similar in design with the only exception being size. The 
resonator with the 3" diameter aluminum bar is 3.798 inches long and the 2" diameter 
resonator is 2. 1 88 inches in length. The length of each resonator is a half wavelength, 
where the wavelength is the bar velocity of the resonator material divided by the desired 
driving frequency. Further design considerations are discussed by Sitter (1995), 

Frederick (1965), Graff (1975), and Trinh (1985). FC-72 was the experimental fluid used 
in the 3" resonator for all heat transfer experiments and water was used exclusively in the 
2" resonator for the hydrophone calibration. 


3.3 Fluid Chambers 

An acoustic fluid chamber was designed for both the 2" and 3" resonators and an 
experimental fluid of water and FC-72, respectively. The fluid chambers were designed 
to have the same natural frequency as the acoustic resonators. The solution of the 




30 


Helmholtz equation for a three dimensional rectangular cavity was used to determine the 
dimensions of the chamber (Kinsler et al., 1982). An acoustic standing wave within the 
chamber is desired. The allowed frequencies of vibration are: 



(3.1) 


where c is the speed of sound in the experimental fluid, n, m, and 1 are ordered integers, 
and L x , L y , L z are the outer chamber dimensions. The chamber was made rectangular in 
shape and acrylic in material to allow viewing of the chamber and prevent optical 
distortion. The outer dimensions of the 2" and 3" resonator chambers are 10cm x 10cm x 
10cm and 10cm x 10cm x 7.4cm with 1/4" and 1/2" wall thickness, respectively. The 
base of the chamber consisted of the resonator top surrounded by an acrylic mounting 
block. In both chambers, the standing acoustic wave formation has three pressure 
antinodes and two pressure nodes in the vertical z-direction. 


3.4 Platinum Wire Heater 

A platinum wire heater was used for all microgravity pool boiling heat transfer 
experiments. The platinum was 99.99% pure and annealed. The wire was 0.01 " in 
diameter and 3.2cm in length. Four lead wires were used to operate this heater. The ends 
of the platinum wire were melted to two copper wires used to supply power to the heater. 
The additional two leads were soldiered to the platinum wire to measure the voltage drop 
across the heater. These voltage leads were connected away from the power leads, as 
shown in Figure 3.2, reducing the effective boiling length on the wire to 2.0cm. This 
assured a more nearly uniform temperature distribution along the effective heater length 
by eliminating the conduction losses to the supports. A large heater length to diameter 
aspect ratio is commonly used to reduce the effect of conduction losses (You et al., 
1990). An effective aspect ratio of 80:1 was still in place and the same author considers 

50:1 to be large. 



31 


Power Leads 



Figure 3.2 Platinum Wire Heater Assembly 


Classical pool boiling is considered to be achieved when using a well-wetted 
surface for which the characteristic physical dimension is large compared to the bubble or 
capillary length scale (Carey, 1992). The capillary length scale is defined as 


L„=. 


g{pi ~Pv) 


(3.2) 


where a is the surface tension, g is the gravitational acceleration, and (pi - p v ) is the 
difference between the density of the liquid and vapor phases of the experimental boiling 
fluid. The characteristic physical dimension for a wire is the radius. This heater has a 
characteristic physical dimension to capillary length scale ratio near the lower limit for 
classical pool boiling of 0.15. 

The heater wire leads were rigidly supported using thin walled stainless steel 
tubing. Swagelok male connectors fastened into the top of the fluid chamber were used 
to hold the tubing and allow heater height adjustment within the chamber. Quick 
disconnect plugs were used to allow easy hook up from the constant temperature 
controller to the voltage and power leads. 


3.5 Acoustic Pool Boiling Experiment 

The heart of the entire setup is the acoustic experiment, which consists of the 
acoustic resonator, housing, fluid chamber, and heater wire. Figures 3.3 and 3.4 show an 
assembled and exploded view of the acoustic pool boiling experiment. 







33 




Not Shown: 

Top of chamber 
Pressure vent 
Voltage leads for heater 
Thermocouple 
Hydrophone hole 



. BOTTOM PART 

OF THE RESONATOR 


3 / 8 " 


NC BOLT 


Figure 3.4 Exploded View of the Acoustic Pool Boiling Experiment 


34 


3.6 Acoustic Amplifier 

The acoustic amplifier is a non-commercial unit that has 4, 8, 250, and 500 
impedance outputs. Impedance matching between resonator and amplifier allows for 
more efficient amplification. The 500Q output coupled well with the three inch diameter 
resonator. The volume knob on the amplifier or the amplification knob on the frequency 
generator could be used to increase and decrease the signal to the resonator, which 
regulates the acoustic amplitude within the boiling chamber. 

3.7 Function Generator 

A BK Precision 301 IB 2 MHz function generator was used to create the signal 
being amplified to drive the acoustic resonator. Typically, the volume knob on the 
amplifier was used to regulate the signal strength, but this function generator also had an 
amplification knob. The frequency of the signal was set a 10.15 kHz to drive the 3" 
resonator for all of the heat transfer experiments. 

3.8 Hydrophones , _ 

Two identical hydrophone probes were designed, built and tested. 1 hey were 

used to provide accurate pressure amplitude measurements in the acoustic boiling 
chamber before experiments were performed. Each hydrophone consists of a small 
piezoelectric, cylindrical, ceramic element bonded to a stainless steel tube. The stainless 
tube provides a rigid structure for easy and precise placement within an acoustic sound 
field. A shielded wire pair was attached to the inside and outside of the piezo to measure 
the output of AC voltage produced by the acoustic pressure on the piezo. The wire pair 
was routed through the stainless tube. Another wire was used to ground the stainless 
steel tube In addition, Cork-Neoprene Dodge E-25 was bonded between the piezo and 
stainless steel to provide acoustic isolation. Fuller Resiweld FE7004 epoxy coating was 
used to seal the apparatus. The EC 65 piezoelectric ceramic element was 3.2mm long 
with a 2mm O.D. and a 0.4mm wall thickness. The stainless tubing was 30.5cm long 
with a 3.2mm O.D. and a 0.9mm wall thickness. Figure 3.5 shows a picture of one 
hydrophone. 



35 



Figure 3.5 Hydrophone 

3.9 Oscilloscope 

The output hydrophone voltage was measured using a Tektronix TDS 210 Digital 
Real-Time Oscilloscope. This scope has an AUTOSET feature that automatically adjusts 
the controls to produce a usable display for the hydrophone voltage input signal. The 
MEASURE button was used to determine the true RMS measurement of one complete 
cycle of the input waveform. 

3.10 Constant Temperature Controller 

A constant temperature controller was designed and built by Toby Rule (1997) at 
Washington State University. This device allows the temperature of the heater to be 
controlled rather than only being able to supply a constant power input. This is valuable 
when studying critical heat flux, as heat flux controlled wire heaters will instantly 
burnout after CHF is reached. Temperature control makes it possible to slide into 
transition boiling after CHF is reached. 

3.10.1 Controller Box 

There are several external input and output connectors on the controller box. 1 wo 
banana jacks are for power input from the DC power supply. A simple on/off switch 
allows this connection to be severed. Two BNC jacks are used to send voltage signals to 
the data acquisition system. One jack is used for recording the voltage across the wire 
and the second is for the voltage across a shunt resistor. Three separate 4-pin/plug 
connectors are used to make the connection for the shunt resistor, heater, and power 
transistor. The transistor is fastened to an aluminum heat sink on the control box. Two 
ten-turn potentiometers are used for coarse and fine temperature adjustment. 




36 


3.10.2 Control Circuitry 

The average temperature of the platinum wire is controlled by an electronic 
device similar to what is used in hot-wire anemometry. The simplified circuit that is 
shown in Figure 3.6 will be used to illustrate operational principles of the temperature 
controller. The four resistors Rj, R 2 , Rh, and Rc comprise a Wheatstone Bridge. An 
important characteristic of a Wheatstone bridge circuit is that the voltage across the 
bridge, V 0 s, becomes zero when the following ratio is true: 

<3 ’ 3) 

R„ “ R r 

The resistance of the platinum wire, Rh, is directly dependent on the temperature 
of the wire. The temperature depends on the electrical power dissipated by the wire, P = 
i 2 /R H , and the heat transfer coefficient, h. In order to maintain the heater at a constant 
temperature, an amplifier is used to measure Vos and change the current through the 
bridge, ib, until Vos is close to zero. Because of the Wheatstone bridge relationship, the 
above resistance ratios will remain fixed as long as R|, R 2 , and Rc remain constant, and 
thus R h will be held constant as well. As a result, the temperature, which is proportional 
to resistance, also remains constant. 



Figure 3.6 Simplified Schematic of the Temperature Control Circuit 

The circuit that is used in the experiment is shown in Figure 3.7. The Wheatstone 
bridge is comprised of resistors Ri, Rh, and Rc- The potentiometer Rc serves the same 
purpose as both R 2 and R c from the simplified schematic. The ratio R 2 /Rc can be 
adjusted by changing the potentiometer wiper position. 

The operational amplifier that is used is an LF356 device. This device can be 
connected to allow the offset voltage, V 0 s, to be adjusted to nearly zero volts allowing for 
more accurate temperature control. 

Capacitors C u C 3 , and C 4 are used to prevent oscillations in the power supply 
voltage for each device in the circuit. A 9-volt battery is connected in series with the top 
power supply voltage, V s , in order to prevent the input voltage from coming near the 
supply voltage and causing the op-amp to malfunction. A negative 5V supply is used as 



37 


a negative supply for the same reason. Thus, the op-amp inputs will never be closer than 
5 volts to the negative supply and 9 volts to the positive supply. 



Figure 3.7 Schematic of Temperature Control Circuit 

Qi is an isolated-gate bipolar transistor that was chosen for its high current and 
power dissipation characteristics. The maximum power that can be dissipated by this 
transistor is V S 2 /4R L , where R L represents the resistance of the entire bridge circuit. The 
transistor and heat sink must be able to dissipate this amount of power. 

A data acquisition system is used to measure the voltage and the current through 
the heater. The voltage is measured directly from the heater at the A/D voltage output 
terminals, shown in Figure 3.7. The current is measured by measuring the voltage across 
a known resistance, Ri, at the A/D current output terminals. R4 and R 5 are used to divide 
this output voltage by the factor R 5 /(R4+R 5 ). In the present circuit design, R4 and R 5 are 
approximately equal, so that the voltage difference is reduced by a factor of 1/2. This is 
necessary because the maximum voltage input to the A/D system must be limited to less 

than 10V. 

Resistor R 2 is necessary because a small amount of current must always be 
passing through the bridge in order for the op-amp to sense a voltage difference and 




38 


begin operating. Without this resistance, the circuit would either never turn on, or else 
oscillate unpredictably. 

Potentiometer R 6 is used to adjust the offset voltage trim on the op-amp. The 
offset voltage is the voltage difference that the op-amp will maintain across its inputs. 
The offset voltage must be adjusted as close to zero as possible in order to obtain the 
maximum temperature control accuracy. Resistor R 3 serves to eliminate oscillations in 
the transistor response. 

The LF356 operational amplifier can operate with a difference of up to 36 volts 
between the positive and negative power supply terminals. Therefore, V s can be as high 
as 22 volts without exceeding the power supply limits of the op-amp. 

Capacitor C 2 is used to limit the frequency response of the operational amplifier 
by allowing high-frequency signals to feed back to the negative input of the op-amp. 
Since the impedance of the resistors is very low at the negative input, a very large 
capacitor must be used to provide adequate feedback. This 5pF capacitor provides a 
frequency response of approximately 500 Hz when used with a 0.1Q heater. A summary' 

of the 


Table 3.2 Summary of the Circuitry Components for the Temperature Controller 

3.11 Power Supplies 

Two DC power supplies were used to provide power to the heater through the 
constant temperature controller. A Model 809 A, 0-36 volt, 0-10 amp, Harrison 
Laboratories DC power supply was used for lower level heat flux experiments. For 
larger heat fluxes an additional Model 6263B, 0-20 volt, 0-10 amp, Hewlett Packard DC 
power supply was connected in parallel in order to effectively draw a current larger than 
10 amps. These power supplies worked well in parallel when the voltage settings were 

precisely matched. 

3.12 Data Acquisition , 

The data acquisition system consisted of a 486 PC, A/D board, and a computer 
program called PULSE. PULSE collects data on up to 7 input channels and can 
simultaneously output data on 12 output channels. The program controls gain, scan 
frequency, and the number of scans. After each test a control curve for each channel is 
plotted and the mean and standard deviation for each channel is calculated. Data from 
each test can be written to a data file or placed directly onto the clipboard. The voltage 




39 


across the heater wire and the voltage across a shunt resistor were recorded for each 
temperature setting during an experiment. For each bench top experiment, 400 scans 
were taken at 1000 Hz and averaged. In the drop tower experiments, 250 scans were 
taken at 50 Hz and the terrestrial and microgravity data were averaged appropriately. 
Furthermore, PULSE was used to synchronize the drop by switching a relay used to 
trigger the solenoid that activates the tapered pin release mechanism. Figure 3.8 shows 
the user interface for PULSE. 



Figure 3.8 PULSE User Interface for Data Acquisition 


An insulated wire, enclosing 12 individually wrapped and shielded twisted pairs, 
is connected between the PC and experiment. This wire hangs and falls with the 
experiment during each drop test. A standard 24-pin connector allows for easy 
attachment and detachment between the hanging wire and the experiment. 


3.13 Video and Lighting 

Observation of the boiling experiments was achieved through the side of the 
acrylic fluid chamber using a video and lighting scheme. A Mitsubishi HS-U67 VCR or 
an Optimus model 97 4-head VCR was used to record pictures generated from a Pulnix 

























40 


TM-7EX black and white CCD camera. The mirror and lighting arrangement shown in 
Figure 3.9 was devised to provide good contrast at the outer edge of the vapor bubbles. 
Higher quality images were attainable at low heat fluxes in microgravity when bubble 
growth was slower and bubbles grew larger. 

Figure 3.9 Video and Lighting Setup 


3.14 Drop Rig 



The drop rig is a 16" x 16" x 16.5" rectangular frame fabricated from 1" angled 
aluminum. An aluminum sheet is used to create a base for this structure and provide a 
mounting area to securely fasten the experiment, temperature control unit, video camera 
and lighting. A piece of aluminum channel is bolted to the top of the frame to provide a 
central attachment area for the tapered pin connection used in microgravity drops. The 
entire rig weighs approximately 50 pounds. External equipment and power are wired into 
the rig. The rig can be used in different drop towers or as a bench top experiment. 

3.15 Drop Tower 

There are currently two drop towers in operation at Washington State University 
that are used to perform relatively cost efficient studies in the field of microgravity heat 
transfer. One has a free fall distance adequate for 1 .0 second of microgravity time and 
the larger tower in an empty elevator shaft in Eastlick Hall is suitable for 2.1 seconds of 
microgravity simulation. The 2.1 second drop tower was used exclusively throughout 
this study of critical heat flux. 

The 2.1 second drop tower features some innovative ideas and can be operated by 
a single person from the initial drop level at the top of the tower. Existing features 







41 


include a tapered pin release mechanism, an airbag deceleration system, a retrieval 
mechanism, externally connected data acquisition, video, and power wires, and a 
Windows-based graphical user interface. A complete single drop can be performed in 
less than one hour. 

Figure 3.10 shows the 2.1 second drop tower. Figure 3.1 1 shows the release- 
retrieve mechanism, and Figure 3.12 shows the x, y, and z direction accelerations for a 
typical drop with all data, power, and video wires connected. The average microgravity 
level is 5x1 O' 4 a/g. Further drop tower details can be explored in the doctoral dissertation 




42 


Cross Member 



Figure 3.11 Release-Retrieve Mechanism 



Figure 3.12 x, y, and, z Direction Low-Gravity Level 

CHAPTER FOUR: EXPERIMENTAL PROCEDURES 




43 


4.1 Coupling the Acoustic Resonator with the Fluid Chamber 

The natural frequency of the acoustic resonator and the fluid chamber do not 
follow the theoretical equations perfectly in practice. To account for this, the fluid 
chamber was initially constructed longer than needed to allow for fluid height 
adjustment. After installation of the resonator, the fluid level was adjusted for the highest 
acoustic pressure amplitude and cleanest sinusoidal pressure distribution in the vertical 
direction. Once the desired height of the FC-72 was known the sides of the chamber 
were machined and an acrylic top was secured. The total height of the chamber was 7.4 
cm. A circular two-inch hole was machined into the top of the chamber to allow for the 
heater assembly to be inserted. An aluminum clamp was used to hold the assembly in 
place with four alien screws. Further details of the coupling procedure are discussed by 
Sitter (1995). 

4.2 Hydrophone Calibration 

The EDO Corporation in Salt Lake City manufactured and calibrated both 
hydrophone probes. Each hydrophone was placed in a 3-fit by 3-fit air filled, sealed 
chamber with a speaker driven at 15 Hz at the top. Reflections from the hydrophone can 
be neglected in this situation, since the wavelength of sound is significantly larger than 
the hydrophone diameter (Snow, 1996 and Kinsler et al., 1982). The hydrophone output 
was compared to a known standard. The sensitivity level of probe 1 was -220.55 dB re 1 
volt/pPa and the sensitivity of probe 2 was -219.40 dB re 1 volt/pPa. The sensitivity 
level is converted to a pressure using the following equation: 

Pa= V (4.1) 

Mref * 1 o (SLp / 20) 

where Pa is the acoustic pressure amplitude, V is the rms voltage measured, Mref is the 
reference sensitivity level, and SLp is the sensitivity level. 

The calibrations were checked using a technique described by Crum (1971) where 
the acoustic force on a compressible sphere (see Yosioka and Kawasima, 1955) is used to 
solve for the minimum pressure amplitude required to trap a liquid droplet. This 
minimum acoustic pressure amplitude is given by the following equation: 


4|1 - S\gp 2 c 2 



i 

58 - 2 ' 

V 

_s r 2 

2S + \_ 


(4.2) 


where Pa is the acoustic pressure amplitude, k z is the wave number in the vertical 

direction z, p is the density of the fluid, y is the ratio of the speed of sound in the droplet 
to the speed of sound in the fluid medium, c is the speed of sound in the medium, and 8 is 
the ratio of density of the droplet to the density of the fluid medium. A hydrophone was 
submerged into the degassed water filled chamber of the 2" diameter resonator. The 



44 


water height was adjusted until a maximum voltage output from the hydrophone was 
achieved. Using a fluid height of 7.4 cm and a resonator driving frequency of 27.4 kHz, 
the coupling between the resonator and the fluid filled chamber was maximized. Figure 
4.1 shows the voltages obtained from a vertical scan along the centerline of the chamber. 
Figure 4.2 shows the pressure distribution. These figures illustrate the standing wave 
produced at these conditions in the chamber. 

Hydrophone Voltage Output 



Distance from Bottom of Chamber (cm) 


Figure 4.1 Hydrophone Voltage Output 




45 


Acoustic Pressure Distribution (Water Chamber) 



♦ Probe 1 
— Probe 2 


Figure 4.2 Acoustic Pressure Distribution for Water Chamber 
A small syringe was used to inject a silicon oil droplet into the water just below the 
pressure antinode. The minimum trapping pressure is not dependent on the droplet size 
(Crum, 1971). The droplet levitated in the fluid at the point where the acoustic force 
balanced the buoyancy force generated by the density difference between the oil and the 
water. By gradually decreasing the voltage to the resonator, the acoustic force was 
slowly decreased until the droplet buoyancy overcame the acoustic force causing the 
droplet to rise to the surface of the water. Each hydrophone was placed in the chamber 
and the acoustic pressure amplitude was measured. The voltage output of each 


hydrophone was recorded using an oscilloscope. The voltage was converted to a pressure 
using Equation 4.1 . The theoretical pressure was also calculated using Equation 4.2. The 
wave number was found using the relation k z =2rc//. z where the wavelength is known 
from the relation A. z =c/f. The driving frequency, f, was 27.4 kHz. The droplet was 
lOOcSt Dow Coming 200 series silicon oil. The results are shown in Table 4. 1 . 





MEASUREMENT METHOD 

Probe 1 

Probe 2 

Theoretical 

Pressure (kPa) 

135.6 

125.4 

116.2 


Table 4.1 Hydrophone Calibration Results 

The calibration performed by the EDO Corporation was determined to be 
accurate. The slight difference in the pressure results was attributed to the uncertainty in 
pinpointing the exact location at which the droplet escaped and to the fact that the finite 
size of the hydrophone causes the pressure measurement to be an average pressure over a 
small area. 

4.3 Acoustic Field Strength 

Before each experiment, the magnitude of the acoustic standing wave was 
measured using a hydrophone. The hydrophone probe was moved near the center of the 
acoustic chamber until the exact location of the pressure antinode was located. This was 
resolved by looking at the display on the digital oscilloscope and determining the location 
in the chamber that corresponded to the largest voltage reading. The voltage reading can 
be converted to a corresponding pressure using the hydrophone calibration. Next the 
volume knob on the acoustic amplifier was adjusted to achieve the desired acoustic 
magnitude. The measurement of the pressure at the acoustic antinode near the center of 
the chamber (Figure 4.3) is used as the acoustic strength throughout this research. It 
should be noted that the pressure in the chamber varies in both the vertical and horizontal 
directions. Asaki et al. (1993) has presented a pressure scan in three horizontal planes of 
a similar acoustic device. Although pressure contours were never mapped out in this 
chamber a similar pressure distribution was observed. Again, reported acoustic 
amplitudes for this research refer to the highest pressure located at the antinode near the 
center of the chamber. 




47 


Acoustic Pressure Distribution (FC-72 Chamber) 



Figure 4.3 Acoustic Pressure Distribution for FC-72 Chamber 


4.4 Fluid Degassing 

FC-72 has a high affinity for air making proper degassing an essential part of the 
experimental procedure. You et al. (1995) indicated that dissolved gas content within a 
boiling fluid is not uniform due to local degassing near the heater surface. According to 
You (1990) for FC-72 agitated with a magnetic stirrer, approximately 2 hours of 
degassing is sufficient to reduce the dissolved gas content from 48 percent to 2 percent by 
volume. This process effectively removes dissolved air and results in minimal fluid loss; 
however, it is time consuming. A procedure described by Sitter (1995) was use to 
significantly accelerate the degassing process. FC-72 was placed in a filter flask and 
agitated with a magnetic stirrer while a vacuum was drawn over the fluid using a small 
pump. The fluid would instantaneously boil and be degassed within a few minutes. The 
degassed FC-72 could than be transferred to the acoustic chamber for the boiling 
experiments. 

4.5 Heater Wire Calibration 

Each platinum wire heater arrangement was placed inside a sealed aluminum 
chamber that housed four wire leads and a thermocouple. The chamber was placed into a 
2095 Bath and Circulator made by Masterline. The water bath could be set for constant 
temperatures of up to 100°C. At each temperature setting, time was allowed for the 
temperature of the air in the chamber and the wire to reach thermal equilibrium. 
Equilibrium occurred when the temperature of the air in the chamber and the resistance of 




48 


the heater remained constant over several minutes. The resistance of the heater was 
measured with a HP 34401 A digital multimeter using the four-wire ohms method to 
eliminate the resistance in the wire leads to the heater. The temperature of the air was 
measured using a hand held 39658-T Atkins thermocouple thermometer. Platinum has a 
linear relationship between resistance and temperature and a calibration curve similar to 
the one shown in Figure 4.4 was created for each heater. The calibration results were 
extrapolated for experimental temperatures larger than 100°C. The linear approximation 
for platinum is accurate to within +/- 0.3% over the range 0 to 200°C and +/-1 .2% over 
the range 200 to 800°C (Figliola and Beasley, 1991). 



Figure 4.4 Heater Wire Calibration Curve 

Experimentally, the average surface temperature of the heater could be 
determined from a resistance measurement. The calibration curve may shift in time, but 
the slope of the curve virtually remains the same. Therefore, a single point calibration 
before each experiment was used in conjunction with the calibrated slope to determine 
the y-intercept for the linear relationship. 

4.6 Heater Wire Positioning 

The platinum wire heater was raised and lowered in the boiling chamber to three 
different locations within the sound field. These positions were the acoustic pressure 
antinode, acoustic pressure node, and half way between these two pressure extremes. 
Positioning of the heater was based on visual observation and a scan of the sound field 
using a hydrophone. After performing a vertical scan in the center of the chamber, the 
antinode and node were determined to be the location with the highest and lowest 




49 


pressure amplitudes, respectively. Furthermore, it was possible to visually verify these 
locations. Using high amplification, the resonator could be driven to the point where 
cavitation was prevalent within the chamber. Vapor bubbles were created at the antinode 
and acoustically forced toward the node where they coalesced and then rose to the 
chamber surface due to the buoyancy force. 

4.7 Average Heater Surface Temperature 

During each test the voltage across the heater wire and the voltage across the 
shunt resistor was recorded. The known resistance of the shunt was used in conjunction 
with voltage data to determine the current flowing through the circuit using Ohm's law. 
The resistance of the platinum wire was determined using the recorded voltage and 
calculated current. From the linear resistance vs. temperature calibration curve for 
platinum, the calculated resistance was converted into a temperature measurement. It 
should be noted that this is an average temperature measurement across the wire. 

4.8 Heat Flux 

The heat flux from the heater wire was calculated using the equation: 



where V is the voltage drop across the heater, I is the current flowing through the heater 
wire, and A s is the surface area of the heater wire. Again, the voltage across the heater is 
recorded by PULSE using the A/D card. The current is calculated from the voltage 
measurement across the shunt resistor. 

4.9 Bulk Fluid Temperature 

The bulk temperature of the fluid was measured before and after each experiment 
using a simple mercury-in-glass thermometer. The bulk fluid temperature never 
increased more than two to three degrees from the heating incurred during each boiling 
experiment. Naturally, there appeared to be a localized heating of the fluid around the 
platinum wire. This could not be accurately measured. However, it is believed that this 
localized heating was reduced when acoustic experiments were performed, as the sound 
field tends to help create a mixing affect. 



50 


CHAPTER FIVE: RESULTS AND DISCUSSION 


5.1 Results 

Boiling experiments were performed under both terrestrial gravity and 
microgravity conditions. All experiments were conducted using FC-72 as the 
experimental fluid under atmospheric pressure. The bulk temperature of the FC-72 was 
maintained at 25°C +/- 2°C throughout each experiment. The Boiling on the platinum 
wire heater was temperature controlled instead of heat flux controlled. Experiments were 
performed by increasing the temperature unless otherwise stated. The majority of this 
research consisted of using an acoustic field to enhance the boiling heat transfer 
capabilities of the system. The amplitude of the acoustic pressure wave was adjusted 
from 28 kPa to over 70 kPa. The resonator driving frequency was maintained at 1 0. 1 5 
kHz for the entirety. The heater was placed in three different locations within the 
acoustic standing wave: the acoustic pressure node, antinode, and halfway between the 
node and antinode. 

The results are presented by starting with pure gravity driven terrestrial boiling 
experiments. Acoustic driven terrestrial boiling experiments will be added followed by 
the acoustic driven microgravity results. Several figures have been created using the 
same data in an effort to make comparisons and show trends. 

5.1.1 Gravity Driven Terrestrial Pool Boiling Results 

Preliminary boiling experiments were performed under terrestrial gravity without 
applying an acoustic field. The performance of the temperature controller was studied 
and intricacies of the system were analyzed. Figures 5. 1-5.7 show the results of these 
terrestrial experiments. 

Figures 5.1 and 5.2 show two gravity driven terrestrial boiling curves in which the 
data is plotted as heat flux vs. degrees of superheat. The degrees of superheat are defined 
as the difference between the heater wall temperature and the saturation temperature of 
the FC-72. Figure 5.2 shows an enlarged view of the nucleate region in Figure 5.1. One 
curve represents data obtained by increasing the temperature of the heater and the second 
curve shows data from successive reductions in the heater temperature. The boiling 
curves are not identical. This is typical, especially in the region of boiling inception 
where the natural convection and nucleate boiling regions meet (Carey, 1992). This is 
attributed to the fact that nucleation sites may remain active (when superheat is 
decreased) below the superheat required for the onset of nucleate boiling (when superheat 
is increased). 

Figure 5.3 is used to compare natural convection and nucleate boiling data to 
empirical correlations. Natural convection data is compared to the correlating equation 
developed by Churchill and Chu (1975) for flow on a horizontal cylinder. The Rayleigh 
number was determined to be well with the laminar regime (10' 6 < Ra D < 10 ). The 
laminar Churchill and Chu natural convection correlation is: 


Nun =0.36 + 


0.5 \8RojI^ 

[l + (0.559 /Pr) 9/16 f /9 


(5.1) 



51 


where Nu D is the average Nusselt number. The Prandtl number is defined as Pr = o/a 
where u and a are the kinematic viscosity and thermal diffusivity, respectively. The 
Rayleigh number is defined as: 

_ g/W^L ~ Thuik )D 
D va 


where P is the volume thermal expansion coefficient, and D is the diameter of the wire. 
The heat transfer coefficient and the heat flux were calculated from the following 
equations: 

h=—Nu» 

D 

~ = h(T wall -T hulk ) 

A 


(5.3) 

(5.4) 


where k is the thermal conductivity of the fluid and A s is the surface area of the heater. 

The nucleate boiling data is compared to the correlation developed by Stephan 
and Abdelsalam (1980): 

q"=[0.9(T w -TjY<>™ 


Film boiling data was not compared to known correlations, as several of the 
thermodynamic properties for the FC-72 vapor could not be uncovered. 

Figure 5.4 shows a typical data acquisition graph representing 400 heat flux data 
points accumulated at a constant temperature setting in the nucleate boiling regime over a 
0.4 second period. The average heat flux and degrees of superheat were calculated over 
this time span. They are shown on the figure along with the standard deviation results. 

Figure 5.5 shows how critical heat flux (CHF) decreases with an increase in the 
bulk temperature of the fluid. At each bulk fluid temperature, the temperature of the 
heater was increased until the CHF was determined. The last data point represents the 
theoretical CHF for saturated pool boiling using Equation 2.25 with Cm ax 0.12(L/Lb)" /4 
for a wire heater where L b is the capillary length scale defined by Equation 3.2 and L is 
the radius of the wire. The graph shows a downward linear trend in the CHF for an 
increase in the bulk fluid temperature. The Ivey and Morris (1966) correlation is plotted 
along with the results of You et al. (1995) for comparison. 



Heat Flux, q” (W/m A 2) Heat Flux, q" (W/m A 2) 


52 


Terrestrial Gravity Boiling Curves for FC-72 

450000 
400000 
350000 
300000 
250000 
200000 
150000 
100000 
50000 
0 

Degrees of Superheat, Tw-Tsat (Celsius) 



No Acoustics 


♦ Temperature 
turned up 

□ Temperature 
turned down 


Figure 5.1 Entire Terrestrial Gravity Boiling Curve for FC-72 


Terrestrial Gravity Boiling Curves for FC-72 


450000 
400000 
350000 
300000 
250000 
200000 
150000 
100000 
50000 
0 

10 20 30 40 50 

Degrees of Superheat, Tw-Tsat (Celsius) 



No Acoustics 

♦ Temperature 
turned up 

□ Temperature 
turned down 


Figure 5.2 Terrestrial Gravity Boiling Curve in the Nucleate Regime for FC-72 





Heat Flux, q (W/m A 2) 


53 


Terrestrial Boiling Curve for FC-72 


450000 

400000 

350000 

300000 

250000 

200000 

150000 

100000 

50000 

0 



-20 -10 0 10 20 30 40 50 


No Acoustics 


♦ Experimental 
Data 

Churchill and 

Chu 

Stephan and 

Abdelsalam 


Degrees of Superheat, Tw-Tsat (Celsius) 


Figure 5.3 Natural Convection and Nucleate Boiling Correlation Comparison 


Heat Flux Fluctuation 



Average Heat Flux 
157939 W/m A 2 
Standard Deviation 
1584.9 W/m A 2 

Average Superheat 
79.81 Degrees C 
Standard Deviation 
1 .98 Degrees C 


Figure 5.4 Heat Flux vs. Time for a Nucleate Boiling Temperature Setting 





Critical Heat Flux, CHF (W/m A 2) 


54 


Critical Heat Flux vs. Bulk Temperature for FC-72 

No Acoustics 
♦ Experimental Data 

■ CHF Correlation at 
Tsat 

Ivey and Morris 

You et al. 

20 30 40 50 60 

Bulk Temperature of Fluid, Tbulk (Celsius) 



Figure 5.5 Critical Heat Flux vs. Bulk Fluid Temperature for FC-72 




55 


5.1.2 Acoustic Driven Terrestrial Pool Boiling Results 

Terrestrial gravity pool boiling experiments were performed to determine the 
effects of an acoustic standing wave on heat transfer. Preliminary work by Sitter (1995) 
revealed that the heat transfer coefficient enhancement depends on the location of the 
heater wire within the sound field. Placing the heater wire at the acoustic antinode 
enhanced the boiling heat transfer more than locating the wire at the acoustic node. 
However, Equation 2.21 suggests that the largest force on a bubble occurs, regardless of 
bubble diameter, at the halfway position between the node and antinode. Therefore, 
boiling experiments were conducted with the heater located at the three primary 
locations: the acoustic node, acoustic antinode, and halfway between these two pressure 
extremes. The acoustic pressure amplitude was adjusted from 28 kPa to over 70 kPa. 
Accurate pressure measurements from the hydrophone could only be achieved up to 70 
kPa. At over 70 kPa, the hydrophone signal was disrupted from the abundance of 
cavitation in the fluid chamber. One test was performed with maximum amplification of 
the resonator (Pa >70 kPa) and the acoustic pressure was estimated to be near 
80 kPa. 

Figures 5.6 - 5.15 show boiling curves at various acoustic pressure amplitudes and 
three heater positions for comparing the heater location effects within the sound field. 
Figures 5.16 - 5.21 present the same data in standard boiling curve format, also. 

However, for these figures each graph represents a specific heater location and the 
different curves are used to compare the effect of different acoustic pressure amplitudes. 
The even numbered figures represent the entire boiling curve and each odd numbered 
figure shows an enlarged view of the nucleate boiling region from the figure before it. 



56 


Acoustic Driven Terrestrial Gravity Boiling Curves for FC-72 



-50 


Pa = 28kPa 
♦ Node 
□ Antinode 
a Halfway 


0 50 100 150 200 250 300 350 

Degrees of Superheat, Tw-Tsat (Celsius) 


Figure 5.6 Acoustic Driven Terrestrial Boiling Curve for FC-72 with P a = 28kPa 


Acoustic Driven Terrestrial Gravity Boiling Curves for FC-72 



Pa = 28kPa 
♦ Node 
a Antinode 
a Halfway 


Figure 5.7 Enlarged View of the Nucleate Boiling Region of Figure 5.6 





Heat Flux, q" (W/m A 2) Heat Flux, q" (W/m A 2) 


57 


Acoustic Driven Terrestrial Gravity Boiling Curves for FC-72 

600000 
500000 
400000 
300000 
200000 
100000 
0 

-50 0 50 100 150 200 250 300 350 

Degrees of Superheat, Tw-Tsat (Celsius) 



"igure 5.8 Acoustic Driven Terrestrial Boiling Curve for FC-72 with P a - 42kPa 


Acoustic Driven Terrestrial Gravity Boiling Curves for FC-72 



Degrees of Superheat, Tw-Tsat (Celsius) 


Pa = 42kPa 

♦ Node 
□ Antinode 
a Halfway 


Figure 5.9 Enlarged View of the Nucleate Boiling Region of Figure 5.8 





Heat Flux, q" (W/m A 2) ' ^ Heat Flux, q" (W/m A 2) 


58 


Acoustic Driven Terrestrial Gravity Boiling Curves for FC-72 



-50 0 50 100 150 200 250 300 350 

Degrees of Superheat, Tw-Tsat (Celsius) 


5.10 Acoustic Driven Terrestrial Boiling Curve for FC-72 with P a = 


Acoustic Driven Terrestrial Gravity Boiling Curves for FC-72 



Figure 5.11 Enlarged View of the Nucleate Boiling Region of Figure 5 


Pa = 56kPa 
♦ Node 
□ Antinode 
a Halfway 


56kPa 

Pa = 56kPa 
♦ Node 
□ Anti node 
a Halfway 





59 


Acoustic Driven Terrestrial Gravity Boiling Curves for FC-72 



Pa = 70 kPa 
♦ Node 
□ Antinode 
a Halfway 


-50 0 50 100 150 200 250 300 

Degrees of Superheat, Tw-Tsat (Celsius) 


Figure 5.12 Acoustic Driven Terrestrial Boiling Curve for FC-72 with P a = 70kPa 


Acoustic Driven Terrestrial Gravity Boiling Curves for FC-72 



Pa = 70 kPa 
♦ Node 
□ Antinode 
a Halfway 


10 20 30 40 50 


Degrees of Superheat, Tw-Tsat (Celsius) 


Figure 5.13 Enlarged View of the Nucleate Boiling Region of Figure 5.12 





60 


Acoustic Driven Terrestrial Gravity Boiling Curves for FC-72 

700000 

— 600000 

E 500000 

£ 

r 400000 

"cr 

x 300000 

't 200000 

CO 

x 100000 
0 

-50 0 50 100 150 200 250 300 

Degrees of Superheat, Tw-Tsat (Celsius) 


— 

t _ - — 

Pa > 70 kPa 

**•_*... 

♦ Node 
□ Antinode 
a Halfway 

tsM 

& 

T — 


Figure 5.14 Acoustic Driven Terrestrial Boiling Curve for FC-72 with P a > 70kPa 
Figure 5.15 Enlarged View of the Nucleate Boiling Region of Figure 5.14 

tmtfc eroifi Muffin g f§vity mbs fiawn fef P&72 





Heater at Node 

♦ Pa = 28 kPa 

□ pga^f 1 

a Pa =N®el<*Pa 
a Pa ^OrKRfeP 
■ Pa TtathkPe 

• No Acoustics 


50 


Figure 5.16 Acoustic Driven Terrestrial Boiling Curve for FC-72 with the Heater at the 

Acoustic Node 





Heat Flux, q" (W/m A 2) Heat Flux, q" (W/m A 2) era Heat Flux, q" (W/m A 2) 


61 


Acoustic Driven Terrestrial Gravity Boiling Curves for FC-72 


550000 


450000 

— 

350000 

--- 

250000 

i 



150000 

cnnnn 


JUUUU ' r “ 

15 25 





V* 


Degrees of Superheat, Tw-Tsat (Celsius) 


Heater at Node 

♦ Pa = 28 kPa 
□ Pa = 42 kPa 
a Pa = 56 kPa 
a Pa = 70 kPa 
■ Pa > 70 kPa 

• No Acoustics 


Figure 5.17 Enlarged View of the Nucleate Boiling Region of Figure 5.16 
ire 5 18 Acoustic Dr iven Terres tr ial Boiling Cur v e fo r FC-72 with the Heater at the I 
Acoustic Driven Te/te6tr«id3tft'ritK)af> i| i n g Curves for FC-72 





700000 | 1 

He« 

600000 — • — . 

500000 #i a a , 

400000 l/t nD - 

SL a .a a** *1 

300000 r .••*** 

2 000 00 J »***-* _L 1 

100000 Acoustic Driven Terrestrial Gravity Boiling Curves for FC-72 
0 

700000-56 0 56 166 156 — 266 — 256 — 666 — 650 

He< 

600000 Degr ees of Su pe|j ^e a t, A Tw-T s a t (Celsius) 

500000 *aa A j ^ i 


600000 

500000 

400000 




Heater at Antinode 
♦ Pa = 28 kPa 
□ Pa = 42 kPa 
a Pa = 56 kPa 
a Pa = 70 kPa 
■ Pa > 70 kPa 
NcTAcoustics 


Heater at Antinode 
♦ Pa = 28 kPa 
□ Pa = 42 kPa 


. 19 Enlarged VievPj 


200000 

100000 

0 


A 5 **C P 0 ^** • 


■ J" 

A A 

a □» • 

10 


■ I a Pa = 56 kPa 

"ng Region of4u >ure^^ = 70 kPa 

■ Pa > 70 kPa 

• • i • No Acoustics 


20 30 40 

Degrees of Superheat, Tw-Tsat (Celsius) 




Heat Flux, q" (W/m A 2) g Heat Flux, q" (W/m A 2) 


62 


Acoustic Driven Terrestrial Gravity Boiling Curves for FC-72 

700000 
600000 
500000 
400000 
300000 
200000 
100000 
0 

-50 0 50 100 150 200 250 300 350 

Degrees of Superheat, Tw-Tsat (Celsius) 



— 


>«•••* 


Heater at Halfway 


Pa 

= 28 

kPa 

Pa 

= 42 

kPa 

Pa 

= 56 

kPa 

Pa 

= 70 

kPa 

Pa 

> 70 

kPa 

No 

Acoustics 


ure 5.20 Acoustic Driven Terrestrial Boiling Curve for FC-72 with the Heater at the 
Halfway Position Between the Node and Antinode 


Acoustic Driven Terrestrial Gravity Boiling Curves for FC-72 



Heater at Halfway 

♦ Pa = 28 kPa 
□ Pa = 42 kPa 
a Pa = 56 kPa 
a Pa = 70 kPa 
■ Pa > 70 kPa 

• No Acoustics 


Figure 5.21 Enlarged View of the Nucleate Boiling Region of Figure 5.20 




63 


5.1.3 Acoustic Driven Microgravity Pool Boiling Results 

Microgravity pool boiling experiments are very time consuming as the acquisition 
of one data point usual takes at least one hour when all drop tower mechanisms are 
working properly. Therefore, the terrestrial experiments became very useful in helping to 
determine the best way to utilize experimentation time. Two trends appeared as 
expected. Terrestrial pool boiling heat transfer increased as the acoustic pressure 
amplitude was increased. Different levels of heat transfer enhancement also appear when 
the heater is positioned at different locations within the sound field. Placement of the 
heater halfway between the antinode and node showed in general the greatest boiling 
enhancement and largest critical heat flux measurements, followed by placement at the 
antinode and placement at the node. From these results it was decided that the 
microgravity experiments should be performed with the heater placed at the halfway 
point between the node and antinode. Data was collected around the region of CHF for 
three different acoustic pressure amplitudes: 28 kPa, 56 kPa, and 70 kPa. 

Figures 5.22 - 5.24 show the acoustic driven microgravity results for different 
acoustic pressure amplitudes plotted with the acoustic driven terrestrial gravity results in 
a standard boiling curve format. Figure 5.25 is exclusively microgravity data from all 
three acoustic pressure amplitude experiments. Figure 5.26 shows a summary of the 
CHF data for both the terrestrial and microgravity experiments. A comparison between 
the acoustic force and buoyancy force on a bubble was performed to determine an 
effective gravity for each acoustic pressure amplitude. Details of this process are shown 
in Appendix B and the results are also plotted in Figure 5.26. Figures 5.27 - 5.29 are heat 
flux vs. time plots for three different microgravity cases. No acoustics were applied 
during the collection of data for Figure 5.27. An acoustic amplitude of 56 kPa was used 
in both experiments needed to create Figures 5.28 and 5.29. During the experiment 
represented by Figure 5.28, nucleate boiling was occurring before the drop and nucleate 
boiling was sustained throughout the microgravity time experienced in the drop. During 
the experiment for Figure 5.29, nucleate boiling was occurring before the drop and 
transition or film boiling occurred during the drop. 



Heat Flux, q" (W/m A 2) rfS' Heat Flux, q" (W/m A 2) 


64 


Acoustic Driven Terrestrial and Microgravity Boiling Curves for FC-72 



Pa = 28 kPa 

! o Terrestrial 1g 
| * Microgravity 

Heater at halfway 
between node and 
antinode 


ire 5.22 Acoustic Driven Terrestrial and Microgravity Boiling Curves for FC-72, at 

an Acoustic Pressure of 28 kPa 


Acoustic Driven Terrestrial and Microgravity Boiling Curves for FC-72 



Pa = 56 kPa 


o Terrestrial 1g 
a Microgravity 

Heater at halfway 
between node and 
antinode 


Figure 5.23 Acoustic Driven Terrestrial and Microgravity Boiling Curves for FC-72, at 

an Acoustic Pressure of 56 kPa 






Heat Flux, q" (W/m A 2) 


65 


Acoustic Driven Terrestrial and Microgravity Boiling Curves for FC-72 



Degrees of Superheat, Tw-Tsat (Celsius) 


Pa = 70 kPa 

o Terrestrial 1g 
a Microgravity 

Heater at halfway 
between node 
and antinode 


Figure 5.24 Acoustic Driven Terrestrial and Microgravity Boiling Curves for FC-72, at 

an Acoustic Pressure of 70 kPa 


Acoustic Driven Microgravity Boiling Curves for FC-72 


CM 

< 

E 


£ 


cr 

x 

Li- 


ra 

a> 


X 


500000 

450000 

400000 

350000 

300000 

250000 

200000 

150000 

100000 

50000 

0 



o Pa = 28 kPa 
• Pa = 56 kPa 
a Pa = 70 kPa 

Heater at halfway 
between the node 
and antinode 


10 20 30 40 50 


Degrees of Superheat, Tw-Tsat (Celsius) 


Figure 5.25 Acoustic Driven Microgravity Boiling Curves for FC-72 





Heat Flux, q" (W/m A 2) Critical Heat Flux, CHF (W/m A 2) 


66 


Critical Heat Flux vs Acoustic Pressure Amplitude for FC-72 



Heater Location 
—•—Node 1g 
—•—Antinode 1g 
—*— Halfway 1g 
— o— Halfway Micro g 
^ Equivalent g 


Figure 5.26 CHF vs. Acoustic Pressure Amplitude for FC-72 
Heat Flux Fluctuation in a Microgravity Drop with No Applied Acoustics 

500000 
450000 
400000 
350000 
300000 
250000 
200000 
150000 
100000 
50000 
0 

0 12 3 4 

Time, t (seconds) 


Drop 


Hit 


Terrestrial 


Microgravity 





Average 
Superheat 27.2 
Celsius 


Standard 
Deviation 3.01 


Figure 5.27 Heat Flux Fluctuation in a Microgravity Drop with No Applied Acoustics 





67 


Heat Flux Fluctuation for an Acoustic Driven Microgravity Drop 


CM 

< 

E 


x 

3 


CO 
d) 
i X 


400000 
350000 
300000 
250000 
200000 
150000 
100000 
50000 
0 

0 12 3 4 


1 1 i .Drop Hit 

1 h 1 A » l ^ A 1 ink k * IN ll A i 1 1 . i. 







Terrestrial 

Microgravity 


Nucleate 

Nucleate 


Boiling 

Boiling 

Avg. Temp. = 28.8 C 

Avg. Temp. = 28.9 C 





Pa = 56 kPa 

Heater at halfway 
between node and 
antinode 


Time, t (seconds) 


Figure 5.28 Heat Flux Fluctuation for an Acoustic Driven Microgravity Drop in the 

Nucleate Boiling Regime 

Heat Flux Fluctuation for an Acoustic Driven Microgravity Drop 


500000 
450000 
w 400000 
| 350000 

^ 300000 
250000 
J 200000 
~ 150000 
£ 100000 
50000 
0 



0 12 3 4 


Pa = 56 kPa 

Heater at halfway 
between node and 
antinode 


Time, t (seconds) 


Figure 5.29 Heat Flux Fluctuation for an Acoustic Driven Microgravity Drop in the Film 

Boiling Regime 




68 


5.1.4 Boiling Visualization Results 

Boiling experiments performed in terrestrial and microgravity were captured on 
videotape and individual frames were captured using imaging software. It is impossible 
to completely show the pool boiling process with just a few still frames; however, 

Figures 5.30 - 5.34 are an attempt to show the main vapor bubble structures that 
developed in various environments tested at several different temperatures and heat 
fluxes. Figure 5.30 is terrestrial and microgravity pictures without applied acoustics. 
Figure 5.3 1 is entirely microgravity pictures at an acoustic pressure amplitude of 70 kPa 
with the heater wire positioned halfway between the acoustic pressure node and antinode. 
Figures 5.32 - 5.34 are terrestrial gravity pictures at an acoustic pressure of 70 kPa. 



69 



Terrestrial Nucleate Boiling 
Superheat = 25.8°C 
Heat flux = 232012 W/m 2 


Superheat = 13.4°C 
Heat flux = 62100 W/m 2 



Superheat = 37.0°C 
Heat flux = 1 80861 W/m 2 





5 mm 


Microgravity Boiling 
Superheat = 22.5°C 
Heat flux = 176096 W/m 2 



Superheat = 216.3°C 
Heat flux = 221254 W/m 2 

Figure 5.30 Terrestrial and Microgravity Boiling with No Applied Acoustic Field 



MRiB 


Microgravity Boiling 
Superheat = 28. 1 6°C 
Heat flux = 281129 W/m 





. • •• .. , 1 . 




I ‘ 

. 




Nucleate Boiling 
Superheat = 29.5°C 
Heat flux = 381618 W/m' 


Nucleate Boiling 
Superheat = 22.3 °C 
Heat flux = 204452 W/m' 


Nucleate Boiling 
Superheat = 3 1 .7°C 
Heat flux = 454883 W/m 


Nucleate Boiling 
Superheat = 27.9°C 
Heat flux = 335522 W/m : 


Transition Boiling 
Superheat = 35.58°C 
Heat flux = 221457 W/m 


Nucleate Boiling 
Superheat = 29.4°C 
Heat flux = 370937 W/m' 


Figure 5.31 Microgravity Boiling with Acoustics, Heater = Halfway Position, P ; 


71 


Nucleate Boiling 



Superheat = 21.1°C 
Heat flux = 171870 W/m 2 


Nucleate Boiling 



Superheat = 32.8°C 
Heat flux = 560509 W/m 2 



Superheat = 59.2°C 
Heat flux = 334574 W/m 2 



Film Boiling 
Superheat = 154.9°C 
Heat flux = 349610 W/m 2 


Figure 5.32 Terrestrial Boiling with Acoustics, Heater = Halfway Position, P a = 70 kPa 




72 


Nucleate Boiling 



Superheat = 19.9°C 
Heat flux = 171832 W/m 2 


Nucleate Boiling 



Superheat = 28.4°C 
Heat flux = 485071 W/m 2 



Transition Boiling 
Superheat = 69.0°C 
Heat flux = 306640 W/m 2 



Film Boiling 
Superheat = 240. 1 °C 
Heat flux = 409718 W/m 2 


Figure 5.33 Terrestrial Boiling with Acoustics, Heater = Antinode Position, P a = 70 kPa 



Nucleate Boiling 


Nucleate Boiling 


Superheat = 22. 1 °C 
Heat flux = 18275 lW/m : 


Superheat = 29.0°C 
Heat flux = 41 5007 W/m : 


Transition Boiling 
Superheat = 73. 1 °C 


Film Boiling 
Superheat = 207.4°C 



74 


5.2 Discussion 

Many researchers have shown that pool boiling heat transfer is affected by 
numerous conditions. Application of an acoustic standing wave and exposure to a 
microgravity environment only changes the puzzle by adding to its complexity. Results 
from this research were plotted in boiling curves to help show how the experimentally 
controlled parameters affected boiling heat transfer. The heater location within the 
acoustic standing wave, acoustic pressure amplitude, heater temperature and the boiling 
environment (gravitational force) are the main control items that will be discussed. 

5.2.1 Heater Wire Location 

Shown by the terrestrial boiling results, the position of the heater wire within the 
acoustic standing wave proved to be an important factor in the efficiency of the boiling 
heat transfer. The heat transfer coefficient, as defined by Equation 5.4, was increased 
when the heater was placed at any position within the sound field. The enhancement can 
be seen from the "stacking" of the acoustic driven boiling curves above the normal (no 
acoustics) boiling curve in Figures 5.16 - 5.21 . However, the level of enhancement was 
dependent on the exact location of the wire within the standing acoustic wave. The 
results of Figures 5.6 - 5.15 show that the least enhancement occurred when the wire was 
placed at the acoustic node. Larger enhancement occurs when the heater is placed at the 
antinode and the position halfway between antinode and node. At lower acoustic 
amplitudes the largest enhancement in nucleate and film boiling occurs at the halfway 
position. At higher acoustic amplitudes, the antinode position appears to produce better 
heat transfer enhancement in these regimes than the halfway position. The increase in 
level of cavitation observed at higher acoustic amplitudes is believed to be the cause of 
this phenomenon. At four of the five acoustic pressures tested a larger CHF was 
achieved with the heater placed at the halfway position. This suggests that the acoustic 
standing wave may provide better stability to the vapor columns in the near CHF boiling 
region when the heater is placed at the halfway position. 

These results are not entirely different from those achieved by Sitter (1995), who 
conducted a heat flux controlled study of nucleate boiling. Sitter claimed that the largest 
increase in the heat transfer coefficient occurred with the heater positioned at the acoustic 
antinode. Sitter stated that when the heater was placed anywhere within the sound field 
(except close to the pressure node) the heat transfer coefficient approached that 
corresponding to the heater positioned at the antinode. It should be noted that in this 
research, the heater was placed in between the two acoustic pressure extremes in such a 
way that the acoustic force was in the same direction as the buoyancy force for bubbles 
larger than resonance size. This positioning was used to maximize the force on a bubble 
in a terrestrial environment. 

Equation 2.21 suggests that the largest acoustic radiation force on a bubble, 
irrespective of size, occurs at the halfway position where bubbles smaller than resonance 
size are attracted to the pressure antinode and bubbles larger than resonance size are 
attracted to the pressure node. These results and Sitter's results show that bubbles grow 
to be larger than the resonance size and a greater acoustic boiling enhancement will be 
achieved as long as the heater wire is distanced from the acoustic node position. Higher 
cavitation at higher acoustic amplitudes could be the cause of the similar enhancement 



75 


results away from the node position. Wong and Chon (1969), Park and Bergles (1988), 
and Iida and Tsutsui (1992) all cited the level of cavitation to be a key contributor in the 
enhancement of acoustic driven heat transfer. 

5.2.2 Acoustic Pressure Amplitude 

Boiling curves in Figures 5.16-5.21 show the enhanced heat transfer that 
occurred at acoustic pressure amplitudes from 28 kPa to over 70 kPa at different heater 
locations in a terrestrial gravity environment. The curves show that the acoustic field has 
increased the heat transfer in all boiling regimes for all three heater locations tested over 
the acoustic pressure amplitude range mentioned above. The CHF has also been 
increased in the same manner. There is slight data scattering, but the overall trend is 
clear and shows that heat transfer enhancement and CHF will increase as the acoustic 
pressure amplitude is increased. The data appears to be more spread out (the relative 
enhancement is larger) at lower acoustic amplitudes. This seems reasonable due to the 
increase in cavitation that occurs at larger pressure amplitudes. The abundance of 
cavitation has ill effects on the acoustic field causing attenuation and distortion in the 
acoustic standing wave. Furthermore, higher heat fluxes occur at similar superheat 
values when the acoustic amplitude is increased. This stimulates more vigorous boiling 
causing the vapor bubbles to alter the acoustic field in much the same manner as the 
cavitation. 

Partial boiling curves in Figures 5.22 - 5.24 show acoustic driven microgravity 
data plotted with acoustic driven terrestrial data for acoustic pressure amplitudes of 28 
kPa, 56 kPa and 70 kPa. In microgravity, similar heat transfer enhancement occurs in the 
nucleate boiling regime leading up to a significant drop off in the CHF. The limited data 
in the transition regime also shows a significant drop off in the microgravity heat transfer. 
This indicates that the acoustic force and gravitational force were working effectively 
together in a terrestrial environment. Figure 5.25 shows entirely the microgravity results. 
The CHF was significantly lower for an acoustic pressure of 28 kPa as compared to the 
near identical CHF results at 56 kPa and 70 kPa. Again, this may be the result of the 
detrimental effect of cavitation and increased vapor production on the sound field. 

Figure 5.26 shows a comparison of the CHF data obtained for both terrestrial and 
microgravity environments at different acoustic pressures. As discussed before, nucleate 
boiling can be extended to higher heat fluxes when applying a larger acoustic force, 
increasing the CHF. Increased cavitation at higher acoustic amplitudes may contribute to 
more efficient vapor removal. However, the acoustic force may also interact with the 
vapor columns and help delay the onset of Helmholtz instability and burnout. The CHF 
data is again presented in the following table. 



76 


P a (kPa) 

Critical Heat Flux (W/m 2 ) 

Node 1g 

Antinode 1g 

Halfway 1g 

Halfway jig 

28 

391389 

460212 

482046 

352281 

42 

386781 

487666 

504443 


56 

438875 

514935 

543216 

453770 

70 

510268 

581243 

575257 

454883 

>70 

485986 

582612 

608901 



Table 5.1 Acoustic Driven Boiling CHF Results 


It is believed that this is the first attempt to study CHF using a wire heater in an 
acoustic standing wave. Therefore, direct comparison with other researchers is not 
possible. However, the CHF experienced under normal gravity conditions without an 
applied acoustic field was compared to Zuber's correlation (Equation 2.25) corrected for 
the effect of subcooling by the correlation of Ivey and Morris (Equation 2.26). It was 
found that the Ivey and Morris correlation over predicted the CHF for the terrestrial data; 
however, this agrees with the finding of You et al. (1995) who also used FC-72 with a 
wire (0.51mm diameter) heater. Figure 5.5 provides a graphical comparison. The linear 
downward trend between CHF and the bulk fluid temperature is shown for the Ivey and 
Morris correlation, You et al., and experimental data from this research. The 
experimental data is within 9% of You et al. at a bulk temperature of 24°C. 

Acoustic driven microgravity CHF data was also compared to normal terrestrial 
gravity CHF correlations using the process outlined in Appendix B. The acoustic force at 
each acoustic pressure amplitude was converted to an equivalent gravitational force. 
Figure 5.26 shows the CHF predictions using the equivalent gravity. The prediction 
shows the same upward trend in CHF for increasing acoustic pressure amplitude; 
however, the slope of the predicted equivalent gravity CHF trend line is slightly larger 
than the acoustic driven microgravity CHF trend line. The microgravity trend line levels 
off at larger acoustic pressure amplitudes. Therefore, there may be a mechanism or 
condition where the g l/4 dependence (as discussed in Appendix B) breaks down and CHF 
approaches a constant value. This mechanism may be cavitation for acoustic driven 
microgravity pool boiling. Further microgravity data is necessary for verification. 

5.2.3 Average Heat Flux and Heater Temperature Control 

Figures 5.4 and 5.27 - 5.29 were created to represent the whole boiling process 
and the performance of the constant temperature controller. Heat Flux is plotted versus 
time for a few different scenarios. Due to the creation and departure of vapor bubbles 
from the heater wire, the heat transfer is not constant at one location on the heater, nor is 
it constant along the heater wire. Heat flux and temperature measurements used to 
compile the boiling curves in the results are averages over time and along the wire length. 
Figure 5.4 shows a typical variation in the heat flux over time for terrestrial nucleate 
boiling at a constant temperature setting. Average heat flux and temperature along with 
standard deviations are recorded on the table. The low standard deviations show that the 




77 


controller performed proficiently, especially when considering the above mentioned 
unsteadiness of the bubble ebullition cycle. Figures 5.27 - 5.29 show the typical 
performance of the temperature controller during microgravity drops. When nucleate 
boiling was sustained throughout the entire drop the controller maintained its original 
temperature setting quite well. Figure 5.29 shows a microgravity drop where transition 
or film boiling ensued due to the inability of the acoustic force to maintain nucleate 
boiling without the aid of the gravity driven buoyancy force. The average temperature 
increased approximately 10°C. Overall, the temperature controller performance was 
excellent and an extremely valuable and necessary instrument for this research. 

5.2.4 Boiling Visualization 

Figures 5.30 - 5.34 show distinct bubble formations for terrestrial and 
microgravity boiling with and without the presence of an applied acoustic field. The 
microgravity pictures in Figure 5.30 show vapor bubbles remaining attached to the wire 
heater due to the surface tension forces. The bubbles have no preferred orientation on the 
wire in the absence of buoyancy and acoustic forces. Bubbles grew larger at higher 
heater temperatures in the short microgravity time. The terrestrial film boiling picture in 
Figure 5.30 shows the instability of the liquid-vapor interface. The spacing between 
detaching bubbles is commonly called the Taylor wavelength. 

Figure 5.3 1 consists of entirely microgravity pictures with an acoustic pressure 
amplitude of 70 kPa. The heater is at the halfway position between the acoustic node and 
antinode. The vapor bubbles were forced from the wire and pushed towards the node 
solely by the acoustic force. As suggested by the bubble U-shape patterns in some 
instances, the node is not always perfectly straight in the horizontal direction. The 
pressure field is three-dimensional and the heater connecting posts, heater wire, 
cavitation and boiling vapor bubbles have an altering effect on the acoustic field. The 
transition boiling picture clearly shows larger bubbles aligned at the acoustic node. In 
some instances, video showed bubbles immediately departing after coalescing suggesting 
that the dynamic force created by coalescence contributed to the bubble departure. 

Figures 5. 32-5. 34 are entirely terrestrial gravity pictures with an acoustic 
pressure amplitude of 70 kPa. Each figure shows a different heater location: the acoustic 
node, antinode, and halfway between these extremes. Regardless of the heater location, 
the acoustic force appears to group the vapor bubbles in patterns atypical to those seen in 
normal terrestrial gravity. Triangular shapes were common in the transition boiling 
regime when the heater was placed at either the antinode or halfway between the node 
and antinode. Another common transition boiling feature for all acoustic and gravity 
environments tested was the appearance of film and nucleate boiling occurring 
simultaneously on separate parts of the heater wire. 

Erratic movement of bubbles along the heater wire and throughout the fluid was 
common at higher acoustic amplitudes. Bubbles were often forced off the wire at 
different angles in opposite horizontal directions. The irregular movement of vapor 
bubbles can be partly explained by the increased cavitation observed at higher acoustic 
amplitudes. 



78 


CHAPTER SIX: CONCLUSIONS AND RECOMMENDATIONS 

6.1 Conclusions 

The results of this research show that an applied acoustic field can enhance pool 
boiling from a platinum wire heater in both terrestrial and microgravity environments. 

The constant temperature controller was an indispensable tool. Burnout of the heater was 
avoided and temperature control allowed entire boiling curves to be produced. The 
temperature controller showed exceptional ability to hold a constant temperature setting 
even with the unsteady growth, collapse, and release of vapor from the heater surface. 

Terrestrial boiling curves show that the heat transfer is enhanced no matter where 
the heater is placed within the acoustic standing wave with the greatest boiling 
enhancement occurring when the heater is positioned away from the acoustic node. The 
highest increase in the critical heat flux was seen when the heater was placed halfway 
between the acoustic node and antinode. Raising the acoustic pressure amplitude 
increased the boiling heat transfer by increasing the acoustic force on the vapor bubbles 
and through more vigorous cavitation of the fluid. 

Microgravity results showed that nucleate boiling can be sustained with an 
applied acoustic field. Similar to the terrestrial results, microgravity boiling CHF values 
were increased with higher acoustics amplitudes. Video observations show the attraction 
of vapor bubbles to the acoustic pressure node in a microgravity environment. This is 
consistent with current acoustic theory that suggest bubbles larger than resonance size 
will travel through the acoustic standing wave and be trapped at the acoustic nodes. 

6.2 Recommendations 

Terrestrial pool boiling is a complex issue and many theories for CHF 
phenomenon are still controversial. Adding an applied acoustic field and changing to a 
microgravity environment makes the complex issue even more difficult. The results of 
this research have shown that an applied acoustic field is a promising way to sustain and 
increase boiling heat transfer in a microgravity environment. This research is obviously 
only a beginning and recommendations for future research are outlined below. 

All microgravity experiments were performed in a 2.1 second drop tower where 
approximately 1 .8 seconds of experimental microgravity time was achieved. Future long 
term microgravity experiments are necessary to determine if boiling can be sustained 
indefinitely with an acoustic field. The attraction and collection of vapor at the acoustic 
nodes may cause detrimental attenuation of the sound field and some kind of induced 
flow or vapor collection may be necessary. 

Although several acoustic pressure amplitudes were tested, only one driving 
frequency of 10.15 kHz was tested due to the necessary coupling between the resonator, 
experimental fluid, and fluid chamber. Future experiments should explore a variety of 
frequencies to determine if this has an important effect on boiling heat transfer. The 
ability to increase the wavelength of sound in the fluid medium should also benefit heater 
placement, as the distance between the nodes and antinodes will be lengthened. 

Microgravity experiments were performed at only one heater location within the 
sound field. It may be valuable to study other locations and determine if the trend in 



79 


boiling enhancement remains similar to that which has been observed in a terrestrial 
environment. 

Cavitation is believed to play an important role in boiling heat transfer with an 
applied acoustic field. Experiments with fluids and acoustic pressures below the 
cavitation threshold may prove to add more insight to this issue. Some quantitative 
measurement of cavitation and its role may be possible with high speed filming. High 
speed film observation could also provide valuable information on bubble dynamics and 
the interaction of the vapor with the acoustic field. 

All experiments were performed using a platinum wire heater which means only 
one heater geometry was explored. Designing a heater system to interact with the 
acoustic sound field in a predictable manner is a difficult issue in itself. A possible future 
design may involve attachment of a flat plate heater to the acoustic chamber walls in 
some fashion. 



80 


BIBLIOGRAPHY 

Asaki, T.J., Marston, P.L., and Trinh, E.H., "Shape Oscillations of Bubbles in Water 
Driven by Modulated Ultrasonic Radiation Pressure: Observations and Detection with 
Scattered Laser Light," J. Acoust. Soc. Am., Vol. 93, No. 2, pp. 706-713, 1993. 

Asaki, T.J. and Marston, P.L., "Acoustic Radiation Force on a Bubble Driven Above 
Resonance," J. Acoust. Soc. Am., Vol. 96, No. 5, pp. 3096-3099, 1994. 

Asaki, T.J. and Marston, P.L., "Equilibrium Shape of an Acoustically Levitated Bubble 
Driven above Resonance," J. Acoust. Soc. Am., Vol. 97, No. 4, pp. 3138-2143, 1995. 

Burmeister L.C., Convective Heat Transfer. John Wiley and Sons, New York, 1983. 

Carey, V.P., Liquid-Vapor Phase-Change Phenomena . Hemisphere Publishing 
Corporation, Philadelphia, 1992. 

Churchill, S.W. and Chu, H. S., "Correlating Equations For Laminar and Turbulent Free 
Convection from a Horizontal Cylinder," Int. J. Heat Mass Transfer, Vol. 18, pp. 1049- 
1053, 1975. 

Cole, R., "Bubble Frequencies and Departure Volumes at Subatmospheric Pressures, 
AIChE J., Vol. 13, pp. 779-783, 1967. 

Crowe, C.T., Sommerfeld, M., and Tsuji, Y., Flow of Droplets and Particles in Fluids . 
CRC Press, Inc., Boca Raton, FL, 1996. 

Crowe, C.T., ME 553 class lectures: Washington State University, 1996. 

Crum, L.A. and Eller A., "Motion of Bubbles in a Stationary Sound Field," J. Acoust. 
Soc. Am., Vol. 48, No. 1, Part 2, 1970. 

Crum, L. A., "Acoustic Force on a liquid Droplet in an Acoustic Stationary Wave," J. 
Acoust. Soc. Am., Vol. 50, No. 1, Part 22, pp. 157-163, 1971. 

Danielson, R.D., Tousignant, L., and Bar-Cohen, A., "Saturated Pool Boiling 
Characteristics of Commercially Available Perfluorinated Inert Liquids," Proceedings of 
the ASME-JSME Thermal Engr. Joint Conference, Honolulu HI, pp. 419-430, 1987. 

Eastman, R.E., "Dynamics of Bubble Departure, " AIAA 19th Thermophysics 
Conference, Snowmass, Colorado, June 25-28, 1984. 

Eller, A., "Force on a Bubble in a Standing Acoustic Wave," J. Acoust. Soc. Am., Vol. 
43, No. l,pp. 170-171, 1968. 



81 


Figliola, R. S. and Beasley, D. E., Theory and Design for Mechanical Measurements 
John Wiley and Sons, 1991. 

Forster, H.K. and Zuber, N., "Dynamics of Vapor Bubbles and Boiling Heat Transfer " 
AIChEJ., Vol. l,p. 531, 1955. 


Forster, H.K. and Greif, R., Heat Transfer to a Boiling Liquid-Mechanisms and 

Correlations," J. Heat Transfer, Vol. 81, p. 45, 1959. 

Frederick, J. R., Ultrasonic Engineering . John Wiley and Sons, New York, 1965. 

Graff, Karl F., Wave Mo tion in Elastic Solids. Dover Publications, Inc., New York, 1975. 


Han, C. and Griffith, P., "The Mechanism of Heat Transfer in Nucleate Pool Boiling " 
Int. J. Heat Mass Transfer, Vol. 8, 1965. 

Haramura, Y. and Katto, Y., "A New Hydrodynamic Model of the Critical Heat Flux, 
Applicable Widely to both Pool and Forced Convective Boiling on Submerged Bodies in 
Saturated Liquids," Int. J. Heat Mass Transfer, Vol. 26, pp. 389-399, 1983. 

Hong, Y.S., Ammerman, C.N., and You S.M., "Boiling Characteristics of Cylindrical 
Heaters in Saturated, Gas Saturated, and Pure-Subcooled FC-72," J. Heat Transfer 
Vol.ll9,p. 313-318, 1997. 

Iida, Y. and Tsutsui, K., Effects of Ultrasonic W aves on Natural Convection, Nucleate 
Boiling, and Film Boiling Heat Transfer from a Wire to a Saturated Liquid," 
Experimental Thermal and Fluid Science, Vol. 5, pp. 108-115, 1992. 

Ivey, H.J. and Morris, D.J., "Critical Heat Flux of Saturation and subcooled Pool Boiling 

in Water at Atmospheric Pressure," Proc. 3 rd Int. Heat Trans. Conf., Vol 3 dd 129-142 
1966. F ‘ 

Keshock, E.G. and Siegel, R., "Forces Acting on Bubbles in Nucleate Boiling Under 
Normal and Reduced Gravity Conditions," NASA TN D-2299, 1964. 

Kinsler, L.E., Frey, A.R., Coppens, A.B., and Sanders, J.V., Fundamentals of Acoustics . 
John Wiley and Sons, 3 rd Edition, 1982. 


Kline, S.J. and McClintock, F.A., "Describing Uncertainties in Single-Sample 
Experiments," Mech. Eng., p. 3, January 1953. 

Kutateladze, S.S., "On the Transition to Film Boiling Under Natural Convection," 
Kotloturbostroenie, No. 3, p. 10, 1948. 



82 


Lienhard, J.H., "Snares of Pool Boiling Research: Putting Our History to Use," 10 th 
International Heat Transfer Conference, England, pp. 333-348, 1994. 

Marston, P.L., "Evaporation-Condensation Resonance Frequency of Oscillating Vapor 
Bubbles," J. Acoust. Soc. Am., Vol.66, No. 5, 1979. 


Marston, P.L., Trinh, E.H., Depew, J., and Asaki, T.J., Bubble Dynamics and Interface 
Phenomena . J.R. Blake et al (eds.), Kluwer Academic Publishers, Printed in the 
Netherlands, pp. 343-353, 1994. 

Merte, H. Jr., Lee, H.S., and Ervin, J.S., "Transient Nucleate Pool Boiling In 
Microgravity- Some Initial Results," Int. Symp. Microgravity Science and Applications, 
Paper J-5, 1993. 

Messier, R., "A Mechanism Supported by Extensive Experimental Evidence to Explain 
High Heat Fluxes Observed During Nucleate Boiling," AIChE Journal, Vol. 22, No. 2, 
pp. 246-252, 1976. 

Nukiyama, S., "The Maximum and Minimum Values of the Heat Transmitted from Metal 
to Boiling Water Under Atmospheric Pressure," Int. J. Heat Mass Transfer, Vol. 9, pp. 
1419-1433, 1966. 

Park, K.A. and Bergles, A.E., "Ultrasonic Enhancement of Saturated and Subcooled Pool 
Boiling," Int. J. Heat Mass Transfer, Vol. 31, No. 3, pp. 664-667, 1988. 

Pilling, N.B. and Lynch T.D., "Cooling Properties of technical Liquids," Trans. Am. Inst, 
of Mining and Met. Engrs., Vol. 62, pp. 665-688, 1920. 

Prosperetti, A. and Oguz, H.N., "Acoustic Behavior of Vapor Bubbles," 3 rd Microgravity 
Fluids Physics Conference, Cleveland Ohio, 1996. 

Rohsenow, W.M. and Griffith, P., "Correlation of Maximum Heat Transfer Data for 
Boiling of Saturated Liquids," Chem. Eng. Prog. Symp. Ser., Vol. 52, No. 18, p. 47, 

1956. 

Rohsenow, W.M., "A Method of Correlating Heat Transfer Data for Surface Boiling of 
Liquids," Trans. ASME, Vol. 84, p. 969, 1962. 

Siegel, R. and Usiskin, C., "A Photographic Study of Boiling in the Absence of Gravity," 
J. Heat Transfer, pp. 230-236, 1959. 



83 


Sitter, J.S., "Acoustic Driven Nucleate Boiling Heat Transfer in Terrestrial and 
Microgravity Environments," M.S. Thesis, Department of Mechanical and Materials 
Engineering, Washington State University, Pullman WA, 1995. 

Snow, G., Phone Interview, EDO Corporation, 2645 South 300 West, Salt Lake City, 
Utah 84115, 1996. 

Snyder, T.J., "Studies on the Dielectrophoretic Force and its Effect on Boiling Bubble 
Dynamics and Heat Transfer in a Terrestrial and Microgravity Environment," Ph.D. 
dissertation, Department of Mechanical and Materials Engineering, Washington State 
University, 1995. 

Stephan, K. and Abdelsalam, M., "Heat-Transfer Correlations for Natural Convection 
Boiling," Int. J. Heat Mass Transfer, Vol. 23, pp. 73-87, 1980. 

Straub, J., Zell, M., and Vogel, B., "Pool Boiling in a Reduced Gravity Field," 
International Heat Transfer Conference, Jerusalem, Israel, Aug. 19-24, 1990. 

Sun, K. and Lienhard, J.H., "The Peak Pool Boiling Heat Flux On Horizontal Cylinders," 
Int. J. Heat Mass Transfer, Vol. 13, pp. 1425-1439, 1970. 

Tien, C.L., "A Hydrodynamic Model for Nucleate Pool Boiling," Int. J. Heat Mass 
Transfer, Vol. 5, pp. 533-540, 1962. 

Trinh, E.H., "Compact Acoustic Levitation Device for Studies in Fluid Dynamics and 
Material Science in the Laboratory and Microgravity," Rev. Sci. Instrum. Vol. 56, No. 

1 1, November 1985. 

Usiskin, C.M. and Siegel R., "An Experimental Study of Boiling in Reduced and Zero 
Gravity Fields," J. Heat Transfer, pp. 243-253, 1961. 

Yosioka, K. and Kawasima, Y., "Acoustic Radiation Pressure on a Compressible 
Sphere," Acoustica, Vol. 5, 167-173, 1955. 

Weinzierl, A. and Straub, J., "Nucleate Pool Boiling in Microgravity Environment," 
Proceedings 7 th Int. Heat Transfer Conference, 1982. 

You, S.M., "Pool Boiling Heat Transfer with Highly-Wetting Dielectric Fluids," Ph.D. 
Dissertation, University of Minnesota, Minneapolis Minnesota, 1990. 

You, S.M., Simon, T.W., and Bar-Cohen, A., "Experiments on Nucleate Boiling Heat 
Transfer With a Highly- Wetting Dielectric Fluid: Effects of Pressure, Subcooling and 
Dissolved Gas Content," HTD Cryo. &Immersion Cooling of Optics and Elect. Eq., Vol. 
131, pp. 45-52, 1990a. 



84 


You, S.M., Simon T.W., and Bar-Cohen, A., "Experiments on Boiling Incipience with a 
Highly- Wetting Dielectric Fluid: Effects of Pressure, Subcooling and Dissolved Gas 
Content," Proc. 9‘ Inti. Heat Transfer Conference, Jerusalem, Israel, pp. 337-342, 1990b. 

You, S.M., Simon, T. W„ Bar-Cohen, A., and Hong, Y.S., "Effects of Dissolved Gas 
Content on Pool Boiling of a Highly Wetting Fluid," ASME Journal of Heat Transfer 
Vol. 117, pp. 687-692, August 1995. 

Zuber, N., "Hydrodynamic Aspects of Boiling heat Transfer," AEC Rep., AECU-4439, 


Zuber, N., Int. J. Heat Mass Transfer, Vol. 6, p. 53, 1963. 

3M Company, 3M Specialty Chemicals Division, "3M Fluorinert Liquids Product 
Manual," St. Paul, MN, 1995. 



85 


APPENDIX A: UNCERTAINTY ANALYSIS 


The uncertainty analysis was performed using a method developed by Kline and 
McClintock (1953). The uncertainty of quantity z is given by the equation: 


u, = 


dz 

dx. 


+ 


dz 

dx. 


-u. 


(A.l) 


where z is a function of xi, X 2 , and u z , uxi, UX 2 , are the uncertainties associated with 

each value. 


A.l Platinum Wire Surface Temperature Measurement 

In order to calculate the resistance of the heater (Rh), the voltage across the heater 
(Vh), and the current flowing through the heater (Ih) had to be determined. The voltage 
was directly measured, but the current was determined using a shunt resistor as described 
in Chapter 4. Therefore, the equation for the resistance of the heater can be written as: 


dR, 

dV h 


■u v 


dRj, 

dV. 


+ 


Mk 

dR. 


(A.2) 


Where R s and V s is the resistance of the shunt and voltage across the shunt, respectively. 
Now, the uncertainty can be written as: 


*k 


Vh VjA 

h K 


(A.3) 


The quantities for calculating ur are: Rh = 0.1025f2 +/- 0.0005Q, Vh = 0.5955V +/- 
0.00005V, and V s = 0.6235V +/- 0.00005V. The uncertainty for the resistance of the 
heater becomes 6.6970* 10' 5 Q. 

The heater surface temperature is determined by the following equation: 

T = mR h +b (A.4) 


where m is the slope of the heater temperature vs. resistance relation obtained from the 
heater calibration and b is the y intercept of the calibration line. The uncertainty of the 
temperature measurement can be written as: 


U'r = 


dT_ 

dm' 


\ 2 


dT 

dR„ 


(dT 

+ U* 


-u. 


(A.5) 


The quantities for calculating uj are: m = 6361. 1°C +/- 18.6°C, Rh = 0.05089 +/- 
6.6970* 10‘ 5 Q, and b = 228.6 +/-0.5°C. The uncertainty for the temperature of the heater 
is 1.1 5°C. 



86 


A.2 Total Heat Flux Measurement 

The total heat flux from the heater surface was calculated using the following 
equation: 


?=■ 


IV L 


(A. 6) 


As where I is the current flowing through the heater, Vh is the 
voltage across the heater, and A s is the area of the heater surface. The uncertainty of the 
total heat flux is written as: 


dq" 
dl 1 


d£_ 

8V„ 


+ 


c 

V dA s ' 


(A. 7) 


The quantities for calculating u q " are: Vh = 0.5955V +/- 0.00005V, I = 1 1.7017Amp +/- 
0.00058Amp, and As = 0.000015959m 2 +/- 2*10' 7 m 2 . The uncertainty of the heat flux 
becomes 5472 W/m 2 or 1 .25%. 



87 


APPENDIX B: EQUIVALENT GRAVITY 

Many correlations similar to Equation 2.25 have been developed indicating that 
the critical heat flux depends on g I/4 . In microgravity the gravitational dependence is 
removed and the buoyancy force on the vapor bubble is lost. The following analysis 
converts the acoustic force into an equivalent gravity, so a comparison can be drawn 
between acoustic driven microgravity pool boiling CHF data and normal terrestrial 
gravity CHF pool boiling correlations. 

B.l Bubble Departure Diameter 

The acoustic force and buoyancy force on a bubble are directly related to the size 
of the bubble. The bubble departure diameter needs to be estimated at the point near 
CHF. Many bubble departure diameter correlations have been developed over the past 60 
years (Carey, 1992). Correlations are typically written in terms of the Bond number: 

Bo U2 =0. 04 Ja .. 

(b.l) 

where d d is the bubble departure diameter. Cole (1967) showed that the Bond number 
could be directly written in terms of the Jakob number for purposes of predicting bubble 
departure diameters: 


d d 


aBo 


g(Pl ~Pv) 


(b.2) 


where the Jakob number is defined as: 


Ja = 


pA. 


(b.3) 


Using the appropriate properties for FC-72, the bubble departure diameter was predicted 
to be approximately 1.98mm near CHF. 


B.2 Acoustic Force / Buoyancy Force vs. Bubble Radius 

Figure b. 1 was created using Equations 2. 13, 2.20, and 2.21 to determine the ratio 
of the acoustic force and buoyancy force for bubble size at each acoustic pressure 
amplitude used in this research. 



88 


Acoustic Force / Buoyancy Force Ratio vs. Bubble Radius 


i 



Bubble Radius, Rb (mm) 


Heater at Halfway 

o Pa = 28 kPa 
□ Pa = 42 kPa 
a Pa = 56 kPa 
o Pa = 70 kPa 


Figure b.l Acoustic Force / Buoyancy Force Ratio vs. Bubble Radius 

Using the predicted bubble departure radius of 0.99mm, the equivalent gravity for 
each acoustic pressure amplitude could be determined. Table b.l shows the equivalent 
gravity determined from Figure b.l for each acoustic pressure amplitude. 


Acoustic Pressure Amplitude 
P a (kPa) 

Equivalent Gravity 
9* 

28 

0.921 

42 

1.127 

56 

1.306 

70 

1.456 


Table b.l Equivalent Gravity for Experimental Acoustic Pressure Amplitudes 


B.3 Acoustic Driven Microgravity CHF vs. Normal Terrestrial Gravity CHF 

For purposes of comparing the acoustic driven microgravity CHF data with 
normal terrestrial gravity CHF, the equivalent gravity was raised to the 1/4 power and 
multiplied by the normal terrestrial gravity CHF. The results for each acoustic pressure 
amplitude are presented in Figure 5.26. 
















89 


PART II 

DESIGN, CONSTRUCTION, AND QUALIFICATION OF A 
MICROSCALE HEATER ARRAY FOR USE 
IN BOILING HEAT TRANSFER 

ABSTRACT 

Boiling heat transfer is an efficient means of heat transfer because a large amount of heat 
can be removed from a surface using a relatively small temperature difference between the 
surface and the bulk liquid. However, the mechanisms that govern boiling heat transfer are not 
well understood. Measurements of wall temperature and heat flux near the wall would add to the 
database of knowledge which is necessary to understand the mechanisms of nucleate boiling. 

A heater array has been developed which contains 96 heater elements within a 2.5 mm 
square area. The temperature of each heater element is held constant by an electronic control 
system similar to a hot-wire anemometer. The voltage that is being applied to each heater 
element can be measured and digitized using a high-speed A/D converter, and this digital 
information can be compiled into a series of heat-flux maps. Information for up to 10,000 heat 
flux maps can be obtained each second. 

The heater control system, the A/D system and the heater array construction are described 
in detail. Results are presented which show that this is an effective method of measuring the 
local heat flux during nucleate and transition boiling. Heat flux maps are obtained for pool 
boiling in FC-72 on a horizontal surface. Local heat flux variations are shown to be three to six 
times larger than variations in the spatially averaged heat flux. 

ACKNOWLEDGEMENTS 

This work is the result of a collaborative effort between a number of individuals and 
institutions. Dr. Jacob Chung, my advisor, provided invaluable support and encouragement, and 
brought me into contact with Dr. Jungho Kim at the University of Denver, who directed my work 
on this project. Without his direction and support, this work would not have been possible. Dr. 
Kim also contributed certain parts of this manuscript. 

Richard Quine of the University of Denver provided vital assistance in designing and 
testing the electronic control and data acquisition system, including the custom A/D system. 

Dr. T. S. Kalkur at the University of Colorado, Colorado Springs, provided the necessary 
expertise for fabricating the microscale heater arrays. 

John McQuillen, the NASA contract monitor for this project, provided valuable 
encouragement and support, including the acquisition of a NASA boiling-chamber which we 
adapted for our experiment. The work presented here was sponsored by NASA Headquarters 
under Grant #NCC3-470. 

Mark Pelletier designed the computer control board which allows a PC to interface with 
the control system. 

Choon Ping Ch'ng provided assistance in initial design and circuit board layout, and 
authored the section of Appendix C entitled " The Design of The Custom Analog to Digital 
Converter System." 

John Mullen provided assistance with the construction of the control system and other 
important services. 



90 


TABLE OF CONTENTS 

Chapter 1 : Introduction 95 

1.1. Background 95 

1.2. Research Objectives 96 

1.2.1. Constant Temperature Boundary Condition 97 

1.3. Summary of Completed Work 97 

1.4. Figures 98 

Chapter 2: Heater Construction 99 

2. 1 . History of Heater Design 99 

2.1.1. Silicon Substrate, Si02 insulating layer 99 

2.1.2. Quartz substrate, Si02 layer 100 

2.1.3. Present Design 101 

2.1.4. Heater Specifications 103 

2.2. Figures 103 

Chapter 3: Constant Temperature Control System and data acquisition 108 

3.1. Feedback Board 108 

3.1.1. Voltage-Controlled Resistance 108 

3.1.2. Transient Response 109 

3.2. Computer Control Board 1 10 

3.3. A/D Systems 1 13 

3.3.1. IOtech A/D system 113 

3.3.2. High-speed A/D board 113 

3.4. Physical Arrangement of Control Hardware 1 1 5 

3.4.1. Backplane 115 

3.4.2. Decoding board 116 

3.5. Ground null circuitry 1 16 

3.6. Calibration Method 118 

3.7. Trimming 118 

3.7. 1 . Ground potential variations across the motherboard 121 

3.8. Software 121 

3.9. Figures 123 

Chapter 4: Experimental Apparatus 135 

4. 1 . Calibration Apparatus 135 

4.2. Calibration method 135 

4.3. Test Chamber 136 

4.4. Figures 138 

Chapter 5: Heat Transfer Behavior on Small Horizontal Heaters During Pool Boiling 

of FC-72 141 

5.1. Experimental Procedure 141 

5.1.1. Degassing of fluid 141 

5.1.2. Heater calibration 141 

5.1.3. Data acquisition 141 

5.1.4. Data reduction 142 

5.1.5. Uncertainty analysis 142 

5.2. Results 143 

5.2.1. Preliminary space-resolved, time-resolved results 143 



91 


5.2.2. Spatially averaged, time averaged boiling curve 144 

5.2.3. Spatially resolved, time averaged RMS 144 

5.2.4. Spatially averaged, time resolved results 145 

5.2.5. Time resolved data from individual heaters 146 

5.2.6. Spatially resolved, time averaged data 146 

5.2.7. Conditional sampling 147 

5.2.8. Boiling fraction 147 

5.2.9. Conditionally sampled heat flux 148 

5.3. conclusions 148 

5.4. Figures 

References 163 

Appendix A: Derivation of Offset Error 165 

A.l. Derivation of Equivalent Resistance 165 

A. 2. Derivation of Offset Errors 166 

A. 3. Effect of trimming on offset errors 166 

Appendix B: Software Operating Instructions 169 

B. l. CAL 169 

B. 1.1. Description of Controls in "Heater Array Calibration" Window 170 

B. 1 .2. Description of Controls in "Heater Calibration Setup" Window 171 

B.2. CONTROL 172 

B.2.1. "Control" Window Controls 174 

B.2.2. "Data Acquisition Setup" Window 174 

B.3. Post-Processing 175 

B.3.1. "Post-Processing" Window Controls 178 

B.4. GRAPH ’ 179 

B.4.1. "Graph" Window Controls 180 

B.5. File Format Specifications 180 

B.5.1. Calibration File Format 180 

B.5.2. Binary Data File Format 181 

B.5.3. Control Setup File Format 181 

B.5.4. Tag File Format 182 

B.5.5. Resistance File Format 182 

B.5.6. Offset File Format 182 

B. 5.7. Size File Format 182 

B. 6. Figures 183 

Appendix C: Custom A/D System 188 

C. 1 . Connections and I/O operations 188 

C. 1.1. Cabling 188 

C.1.2. Data acquisition and downloading procedure 189 

C.2. Details of A/D Board Design 190 

C.2.1. Introduction 190 

C.2.2. Analog to Digital Converter Chip Control Signals 192 

C.2.3. Multiplexer Control Signals 193 

C.2.4. Memory Control Signals 193 

C.2.5. Conditioning Analog Circuits 193 

Appendix D: Connections Between Components 194 



92 


Appendix E: Datasheets for key parts 196 

Appendix F : Control System Schematics 203 

F.l. Feedback Control Board Schematic 204 

F.2. Microprocessor Control Board Schematic 206 

F.3. Custom High-Speed A/D Board 209 

F. 4. Motherboard Schematic 213 

Appendix G: Source Code Listings for Visual Basic Programs 220 

G. l. Listing of “CONTROL. VBP” 220 

G.1.1. Listing of MOD ADC. BAS 220 

G.l. 2. Listing of MODSHARE.BAS 230 

G.l. 3. Listing of MODCONVE.B AS 233 

G.1.4. Listing of FRMAUTOM.FRM 254 

G.l. 5. Listing of FRMCONFI.FRM 259 

G.1.6. Listing of FRMVIEWC.FRM 260 

G.l. 7. Listing of FRMDAC.FRM 260 

G.l. 8. Listing of FRMADC.FRM 261 

G.1.9. Listing of FRMAUTO.FRM 261 

G.l. 10. Listing of FRMBATCH.FRM 264 

G.2. Listing of “CAL. VBP” 268 

G.2.1. Listing of MODDAC.BAS 269 

G.2.2. Listing of MODMAIN.BAS 273 

G.2.3. Listing of FRMSETUP.FRM 273 

G.2.4. Listing of FRMMAIN.FRM 280 

G.3. Listing of GRAPH1.VBP 287 

G.3.1. Listing of MODGRPAH.BAS 287 

G.3.2. Listing of FRMMAIN.FRM 288 



93 


LIST OF FIGURES 

Figure 1.1: Schematic of heat conduction between heaters of different temperature 98 

Figure 2. 1 : Photograph of serpentine platinum resistance heater 1 03 

Figure 2 . 2 : Cross-section view of construction of first-generation heater 104 

Figure 2.3: Cross-section view of construction of second-generation heater 104 

Figure 2.4: Power leads routed between serpentine heaters near edge of heater array 105 

Figure 2.5: Cross-section view of construction of third-generation heater 105 

Figure 2.6: Heater arrangement of third-generation heater 106 

Figure 2.7: Schematic of quartz wafer mounted on the PGA package 1 06 

Figure 2.8: Wire bonding method 107 

Figure 3.1 : Schematic of control and data acquisition system components 123 

Figure 3.2: Functional schematic of feedback control circuit 124 

Figure 3.3: Analog multiplier configured as a voltage-controlled resistance 124 

Figure 3.4: Complete schematic of feedback control circuit 125 

Figure 3.5: Transient response of feedback circuit 125 

Figure 3.6: Computer control board multiplexing scheme 126 

Figure 3.7: Timing for multiplexing method 126 

Figure 3.8: Daqbook Multiplexing Scheme 127 

Figure 3.9: Arrangement of backplane connectors - Front View 127 

Figure 3.10: Arrangement of backplane connectors - Back View 128 

Figure 3.1 1: Decoding card layout 129 

Figure 3.12: Printed circuit board to hold heater array 129 

Figure 3.13: Common ground impedance 130 

Figure 3.14: Effect of ground impedance in feedback circuit 130 

Figure 3.15: Effect of ground impedance in feedback circuit 131 

Figure 3.16: Effect of ground impedance in feedback circuit 131 

Figure 3.17: Schematic of ground potential experiment 132 

Figure 3.18: Schematic of ground null circuit 132 

Figure 3.19: Ideal control-circuit response for constant-resistance 132 

Figure 3.20: Heater Voltage vs. Control Voltage, Constant Temperature Lines 133 

Figure 3.21 : Circuit for correcting analog multiplier output offset 133 

Figure 3.22: Alternative circuit for correcting analog multiplier output offset 133 

Figure 3.23: Modification to Figure 3.22 for correcting analog multiplier output offset 134 

Figure 3.24: Ground voltage at various points on backplane board. Measurements are 

given in units of mV j 34 

Figure 4. 1 : Calibration Apparatus 1 38 

Figure 4.2: Heater temperature rise with and without impinging jet 139 

Figure 4.3: Heater temperature rise showing threshold voltage 139 

Figure 4.4: Experimental Apparatus 140 

Figure 4.5: Temperature indicator calibration 140 

Figure 5.1 : Changes in array averaged heat flux over time at AT sat = 17.5 °C 149 

Figure 5.2: Uncorrected boiling curve and substrate conduction data 150 

Figure 5.3: Arrangement of 96 heaters in the array, with non-functional heaters 

represented as black squares 150 

Figure 5.4: Variation in heat transfer coefficient vs. time for a single heater 151 

Figure 5.5: Space-averaged heat transfer coefficient vs. Time 151 



94 


Figure 5.6: Surface plots of the local heat transfer coefficient over 64 center heaters (1 
major tick mark in the Z-direction = 5500 W/m 2 -K, major tick mark closest to 

horizontal axes = 0 W/m 2 -K) 152 

Figure 5.7: Arrangement of 96 heaters in the array, with non-functional heaters 

represented as black squares 1 53 

Figure 5.8: Schematic of experimental apparatus 154 

Figure 5.9: Boiling curve showing RMS variation range and uncertainty bars 1 54 

Figure 5.10: Spatially resolved vs. spatially averaged RMS heat flux variation 1 55 

Figure 5.11: Spatially resolved average and RMS variations in heat flux at three 

superheats 157 

Figure 5.12: Heat flux vs. Time for a heater in the center of the array at ATsat=47.5 °C 

(transition boiling) 157 

Figure 5.13: Array averaged, time resolved heat flux vs. time 158 

Figure 5.14: Heat flux vs. time for heater #1 8 along with the boiling function 1 59 

Figure 5.15: Boiling curves for "rings" of heaters 160 

Figure 5.16: Schematic of boiling function generation method 161 

Figure 5.17: Boiling fraction vs. wall superheat for "rings" of heaters 161 

Figure 5.18: Boiling heat flux for "rings" of heaters 162 

Figure A.l : Equivalent resistance circuit using multiplier chip 168 

Figure B.l : CAL window 1 83 

Figure B.2: CAL setup window 183 

Figure B.3: CONTROL window 184 

Figure B.4: CONTROL setup window 185 

Figure B.5: CONTROL automation window 186 

Figure B.6: CONTROL post-processing window 186 

Figure B.7: GRAPH window 187 

Figure C.l : Timing Diagram of A/D System 192 



95 


CHAPTER 1: INTRODUCTION 
1.1. BACKGROUND 

Boiling is an efficient means of removing heat from a surface due to the large amounts of 
heat that can be removed with a relatively small temperature difference between the wall and the 
fluid. However, the mechanisms that govern heat transfer in boiling are not well understood, 
because of the difficulty of making direct measurements of quantities such as temperature, heat 
flux and wetted area at the wall during nucleation, growth and departure. Direct measurements 
of these quantities at the wall beneath a growing and departing bubble are important for 
understanding the relative contribution of various mechanisms to the overall heat transfer in 
boiling. In spite of much progress toward measuring these quantities in greater detail, most 
studies refer to single point or time and space averaged wall temperature and heat flux 
measurements. 

At critical heat flux and during transition boiling, heat transfer is due to vapor-liquid 
structures that are more complicated than the structure of a single bubble. For these cases, 
measurement of physical quantities at the wall will provide a better understanding of what these 
structures are and how they interact to result in a critical heat flux condition. 

Much progress has been made toward making better surface temperature and heat flux 
measurements. Cooper and Lloyd (1969) used a microthermocouple to measure temperature 
fluctuations beneath a growing bubble, and demonstrated the existence of the microlayer. Some 
more recent works measured the rate of change of the microlayer thickness, inferring from this 
the local heat flux (Fath and Judd, 1978, Judd and Hwang, 1976, Koffman and Plesset, 1983, 
Shoukri and Judd, 1975, and Voutsinos and Judd, 1975). Kenning (1992) and Watwe and 
Hollingsworth (1994) obtained information about spatial temperature variations using liquid 
crystals on a thin stainless steel sheet, but this data had limited temporal resolution. 

Several numerical investigations emphasize the need to make detailed temperature and 
heat-flux measurements. Lee and Nydahl (1989) showed that microlayer evaporation accounted 
for 87 percent of the heat transfer enhancement in pool boiling for a particular case, but they 
lacked experimental data with which to validate their model. Unal and Pasamehmetoglu (1994) 
showed that spatial and temporal surface temperature variations have significant effects on 
spatial and temporal heat flux, and that microthermocouples buried near a heating surface may 
not accurately measure the heater surface temperature. 

The vast majority of experimental work performed to date regarding boiling has utilized 
single heaters that were large compared to individual bubble sizes, making it difficult to look at 
details of the boiling process. These experiments usually used a heating element operated in a 
constant heat flux mode, making it difficult to study transition boiling effects beyond critical heat 
flux (CHF). Other experiments have utilized surfaces held at constant temperature, but the local 
heat flux and temperature were not measurable and can vary significantly across the heater. 

Even when local measurements were obtained (e.g., Cooper and Lloyd, 1969, Lee, et al., 1985, 
Marquardt and Auracher, 1990, Hohl, et al., 1997), this was done at only a few locations on the 
heater surface. 

The pioneering work of Kenning (1992) and Watwe and Hollingsworth (1994) using 
liquid crystals on thin, electrically heated stainless steel plates did much to elucidate the heat 
transfer mechanisms associated with large scale phenomenon (e.g. the role of bubble driven 
convective flows, the spread of boiling on large scale heaters, and nucleation site interactions) 
because information regarding temperature fluctuations were available with high resolution 



96 


across the heater surface. The work described in this paper complements the liquid crystal work 
in that boiling on a comparatively small heated area is investigated in detail with high spatial and 
temporal resolution. Also, this work was performed with a constant wall temperature instead of 
a constant wall heat flux boundary condition, simulating boiling on a thick surface with high 
thermal conductivity. 

The behavior of boiling on small heated areas can differ from that on large heated areas. 
First, the total number of nucleation sites is much smaller, and can result in heaters smaller than 
the corresponding average distance between nucleation sites on large heaters. Boiling can be 
delayed to higher wall superheats as a result, or the number of nucleation sites may not be 
statistically representative. Second, the Taylor wavelength, which is significant in transition and 
film boiling, can be larger than the heater size, altering boiling behavior in these regions. Third, 
edge-effects can become significant. 

1.2. RESEARCH OBJECTIVES 

The motivation of this research was the lack of detailed information about the wall heat 
flux and wall temperature during nucleate and transition boiling. There is a need for a method of 
measuring the heat flux and temperature at many points on the wall with high spatial and 
temporal resolution, so that the mechanisms of heat transfer at various points on the boiling 
curve can be better understood. 

The following specific research objectives arose out of the need for more detailed surface 
heat transfer information. 

1 . A heater array would be developed which would provide a map of both the temperature and 
the heat flux on a heated surface with high spatial and temporal resolution. 

2. Boiling curves for a small square heated area would be obtained, including critical heat flux 
and the transition boiling regimes. 

3. Spatial and temporal variations in the wall heat flux over the heater array would be measured 
at various points on the boiling curve. 

4. The mechanisms of nucleate boiling, transition boiling and critical heat flux would be 
clarified. 

Both heat flux and temperature measurements are needed because it has been shown in 
other studies that both of these quantities vary significantly in space and time during nucleate 
boiling, and that these variations must be considered in physical models of the boiling process. 
An array of constant-temperature heater elements was used to accomplish these objectives. The 
heater array and its associated control and data acquisition electronics allow the temperature of 
the surface to be controlled and the power dissipation from each heater to be measured. There 
are several advantages to using a constant-temperature heater system. These advantages are 
explained in detail. 

1 . The conduction through the substrate between adjacent heaters is minimized. 

2. The need to solve a transient heat conduction problem to obtain the heat flux through the 
surface is eliminated. 

3. A constant-temperature boundary condition is achieved, which simplifies the analytical and 
numerical solution of the system. 

4. Data can easily be obtained in the critical heat flux and transition boiling regions without the 
danger of heater dryout. 

One disadvantage of the constant temperature system is the cost and complication of the 
constant-temperature control system. 



97 


Figure 1.1 shows how a temperature difference between two adjacent heaters affects the 
heat transfer measurement. The term qh represents the heat generation per unit area of the heater 
element on the left. This quantity can be measured by sensing the voltage across the heater and 
the resistance of the heater. The term qn q represents the amount of heat that is transferred into 
the liquid above the heater, q su b is the heat flux into the adjacent heaters due to local temperature 
differences. The term q s teady represents the steady state heat conduction into the surrounding 
substrate due to convection from the unheated substrate surface. The total heat balance on the 
heater is: 

qh — qiiq "t" qsteady qsub 


qsteady can be measured directly for a given average surface temperature value. If there is 
a significant temperature difference between two adjacent heaters due to heat transfer on the 
surface, such that Ti-T 2 =AT, then a significant amount of heat will be conducted through the 
substrate from one heater to the other, especially since the length scales are small. The result is 
that the measured heat generation from the heater area, qh, will not reflect the heat flux into the 
liquid, qnq, because there is no way to directly measure q SU b. 

There are two solutions to the problem of quantifying q SU b. One solution is to measure 
the temperature of each surface heater with high spatial and temporal resolution. A numerical 
solution to a transient heat conduction problem can be performed using the results, in order to 
calculate the transient substrate conduction numerically. The other solution is to maintain each 
individual heater at a constant temperature, so that T i=T 2 in Figure 1.1. If the temperature 
difference between heaters is zero, then the heat flux between the heaters will also be zero, and 
the q s „b term is eliminated. 

1.2.1. Constant Temperature Boundary Condition 

In boiling models, the variations in both heat flux and temperature on the surface due to 
conduction in the substrate can be important. By eliminating conduction in the substrate and 
providing a constant-temperature boundary condition, numerical or analytical models of nucleate 
and transition boiling, and critical heat flux, can be simplified. Once models of this simplified 
boiling problem are demonstrated to be effective, the transient conduction portion of the problem 
can be added to the model. 

1.3. SUMMARY OF COMPLETED WORK 

In order to meet the objectives, a microscale heater array was designed that is capable of 
measuring both the surface temperature and heat flux with much higher spatial and temporal 
resolution than in previous studies. This is achieved using an array of 96 independently 
controlled heaters operated in a constant temperature mode. Feedback loop circuits similar to 
those used in hot-wire anemometry are used to keep each heater at a constant temperature, and 
the power required to do this is measured, enabling the heat transfer coefficient from each heater 
to be determined. Such information can provide much needed data regarding the important heat 
transfer mechanisms during the bubble departure cycle, and can serve as a benchmark to validate 
many of the analytical and numerical codes used to model boiling. The experiment design and 
results are presented in the following chapters. 

The information that is obtained using this method is unique in that data is taken at many 
points simultaneously instead of at a single point, enabling a much more detailed picture of the 
heat transfer process to be obtained. An additional advantage of this work is that the heat flux is 



98 


measured directly, instead of being inferred from average heat flux data and void fraction 
measurements. 

Chapter 2 describes the construction of the microscale heater array that was used in the 
experiment. Chapter 3 describes the principles of operation of the electronic control system and 
data acquisition system. Chapter 4 describes the experimental procedure, including the 
calibration method and the experimental apparatus. Chapter 5 discusses the magnitude of local 
heat flux variations with time, and shows that the local heat flux variations are significant and are 
not represented by the space-averaged heat flux which is typically measured, and which is often 
used in physical models. It examines the relationship of heat flux to the fraction of the surface 
that sees boiling activity. It also summarizes the uncertainties in the temperature measurements. 

1.4. FIGURES 


flh qiiq "f" qsteady qsub 



Figure 1.1: Schematic of heat conduction between heaters of different temperature 




99 


CHAPTER 2: HEATER CONSTRUCTION 

This chapter describes in detail the physical arrangement and construction of a microscale 
heater array that is used to make high-resolution heat flux measurements on a constant- 
temperature surface. This array is constructed by depositing and etching away layers of 
conductive and insulating material on a substrate to form conductive paths on the surface which 
will dissipate heat when electrical current is passed through them. The heaters are maintained at 
a constant temperature by an electronic control system, which is described in Chapter 3. 

2.1. HISTORY OF HEATER DESIGN 

Several generations of heater arrays were built and tested before a design was constructed 
that provided acceptable performance. The first generation used a highly doped silicon wafer as 
a substrate. The bulk wafer served as a common ground for all the heater elements. Problems 
with the insulating layer between the heaters and the power leads and concerns about substrate 
heat conduction led to a second generation array, which used a quartz wafer as a substrate, and a 
plane of aluminum to serve as a common ground for all the heater elements. Problems with large 
voltage drops through the aluminum ground layer led to the present generation of heater array, 
which uses a quartz substrate with an individual ground wire for each heater element. 

The basic element of the microscale heater arrays is the serpentine platinum heater, 
shown in Figure 2.1. The bright areas in the figure are the platinum heater lines. This heater 
element is constructed by depositing platinum onto the substrate surface, masking off the heater 
lines, and etching the platinum away from the unmasked areas. The terminal ends of each 
platinum heater are connected to the edge of the chip with aluminum leads deposited on the chip. 

Photomasks are used to expose a layer of photoresist that is deposited onto the wafer that 
is being processed. The photoresist can be either chemically removed or chemically fixed in 
place wherever the photomask allows ultraviolet light to pass through. The photoresist then 
serves to mask off portions of the wafer from processes such as wet chemical etching or ion 
milling. Each mask was designed using the L-EDIT program for VLSI design, running on an 
Apple Macintosh computer. 

Because the heater design continues to evolve, a set of photomasks is generally used to 
process only a few wafers. Since a set of photomasks tends to be more expensive than the 
resources required to process 3 or 4 additional wafers, each photomask is designed to perform 
one masking operation using one half of the mask, and a different masking operation using the 
other half. Between operations, the mask is rotated 1 80 degrees, so that only half of the wafer 
being processed is exposed to the necessary mask. As a result, only half of each processed wafer 
contains usable components, because half the wafer is processed using the wrong mask for each 
process. 

2.1.1. Silicon substrate. Silicon Dioxide insulating layer 

The first heater array that was tested consisted of 148 rectangular platinum heaters 
arranged within an approximately 3 mm circle. Each heater measures 250 pm x 250 pm. The 
platinum heaters were separated from the doped silicon ground layer and the aluminum power 
lead layer by silicon dioxide layers. Holes etched in the oxide layers, called vias, provide a 
current path through the oxide layers to connect the heater to the power and ground connections. 

When this heater was tested, it did not perform as well as it was hoped. Difficulties 
included a problem with conduction through pinholes in the deposited SiC >2 layer, corrosion of 




100 


the aluminum power leads that were deposited on the top layer of the chip, and a high rate of 
thermal conduction within the silicon substrate. 

One problem arises in the process of depositing the Si0 2 layer. The oxide fails to deposit 
on certain areas of the chip, which causes microscopic "pinholes" to develop in the oxide layer. 
When these holes are filled with conducting material in subsequent deposition steps, they can 
create a short circuit between a midpoint of the platinum heater and an aluminum power lead that 
passes over that heater. 

Another potential problem with a silicon substrate is its high thermal conductivity. It has 
been found in tests and analysis that the amount of conduction from the heater to the surrounding 
substrate is significant. It is desirable to eliminate conduction through the substrate so the power 
going into the heaters can be related to the heat flux into the liquid covering the heater. If this 
conduction is not eliminated or minimized, heat conducts from the heaters into the surrounding 
substrate, where the heat transfer coefficient is not known. This heat transfer cannot be 
quantified, and the actual heat transfer into the fluid cannot be known. This issue will be 
discussed in more detail in Chapter 6 under the uncertainty analysis section. This conduction 
will be a greater problem with a silicon substrate than with a quartz or Kapton substrate, which 
both have much lower thermal conductivity. 

A modification of this method was attempted using silicon nitride as an insulating layer 
instead of Si0 2 . However, the nitride layer tended to crack and peel after it was deposited, and 
this method was abandoned. 

Acetone was initially chosen as a test fluid when experiments were first carried out to 
measure the performance of the microscale heaters. When the heater was tested in acetone, it was 
found that even low heater currents caused the aluminum power leads to deteriorate and fail. 
However, the leads did not fail when the heater was tested in FC-72, a dielectric fluorocarbon 
coolant. Acetone passes a small amount of electrical current, while FC-72 registers an 
essentially infinite resistance on laboratory multimeters. It is speculated that the small amount of 
current that acetone carries may cause an electrolytic reaction on the aluminum leads. This has 
not been confirmed, however. 

2.1.2. Quartz substrate. Silicon Dioxide layer 

A new heater layout was designed in an attempt to overcome these difficulties. The 
probems with pinholes, aluminum corrosion and substrate conduction were addressed with 
changes in the heater design. Figure 2.3 shows a cross sectional view of the second-generation 
heater design. 

Substrate conduction was reduced by using a quartz substrate instead of a silicon 
substrate. Quartz is an electrical insulator, so the substrate cannot be used as an electrical ground 
as it was when silicon was used. A Kapton substrate would further reduce substrate conduction, 
but it has not yet been tested as a substrate material. Table 2.1 gives the properties of the three 
different substrate materials that were considered. 


Material 

Thermal 

Conductivity 

(W/m-K) 

Silicon 

135 




0.2 


Table 2.1: Properties of Substrate Materials 





101 


The pinhole problem was addressed by several changes. The first change was to route 
the power leads between the individual heaters to the edge of the heater array, where aluminum 
leads connect the heater array to the edge of the chip without passing over the top of any heaters. 
Routing the power leads between the heaters requires wider spacing between the heaters near the 
edge of the array. If the array contained 148 heaters, these gaps would be too large, so a smaller 
array of 1 12 heaters was used instead. Figure 2.4 shows how the power leads are routed between 
the heaters near the edge of the array. 

Because the substrate was changed to an electrical insulator, an aluminum layer was 
deposited over the platinum heaters to serve as a common heater ground. Amorphous silicon 
was deposited between the heater layer and the aluminum ground layer. It was thought that the 
amorphous silicon would not form pinholes like silicon dioxide. Unfortunately the amorphous 
silicon layer peeled when it was deposited, so another method was sought to isolate the 
aluminum ground layer from the platinum heaters. 

The higher melting point of the quartz substrate may eventually be used to eliminate the 
pinhole problem. Because of the higher melting point, the substrate can be heated to a high 
enough temperature to cause the oxide layer between the heaters and the top ground layer to 
flow. The pinholes may be filled in by flowing oxide, especially if multiple layers of oxide are 
applied, one on top of the other. A different method of cleaning the surface prior to depositing 
the oxide layer may also help eliminate the pinhole problem. However, no method has yet 
proven satisfactory, and the only solution to this problem has been to place all electrical current 
paths on the same layer. 

The feasibility of the silicon substrate heaters was being tested while the quartz substrate 
heaters were being developed. During these tests, it was found that the current from a group of 
heaters passing through the doped silicon ground layer caused the ground potential to vary up to 
2 mV across the ground layer. These variations can cause a significant error in the temperature 
response of the feedback control circuit. This ground potential characteristic is described in 
more detail in Section 3.5 

It was estimated that a similar variation in ground potential would be seen for the second- 
generation heater design. The thickness of the aluminum ground layer was known, and a typical 
current flow through the ground layer could be estimated. These quantities were used to predict 
a maximum possible ground voltage potential. 

2.1.3. Present Design 

The simplest way to eliminate the problem with ground potential variations is to provide 
an individual ground lead for each heater which connects to a ground bus bar. This bus bar must 
be large enough to provide less than 100 pV voltage difference between individual heater ground 
connections during all operating conditions. A new heater layout was created which provides an 
individual power and ground lead for each heater. The heaters and the power leads were 
deposited on the same layer, to simplify construction. A cross section of the heater construction 
is shown in Figure 2.5, and the arrangement of the heaters in the array is illustrated in Figure 2.6. 

This heater array is constructed using a single conductive layer. Heater construction is 
simplified because no vias need to be etched. The following steps are followed in its fabrication. 

1 . A thin layer of titanium is first sputtered onto the quartz to enable the platinum to adhere 

to the surface. 

2. A 2000 A layer of platinum is deposited on top of the titanium layer. 

3. The platinum and titanium are etched away to leave the serpentine platinum heaters and 

the power leads. 



102 


4. A layer of aluminum is then deposited and etched away to leave aluminum overlapping 
the platinum for the power leads and the wire bonding pads. 

5. Finally, a layer of silicon dioxide is deposited over the heater array to provide a uniform 
surface energy across the heater. The area where wire-bond connections will later be 
made is masked off to maintain a bare aluminum surface. 

Once the quartz wafer containing multiple heater arrays is prepared, the wafer is diced 
into smaller square sections, each containing a single heater array. Dicing is performed with an 
eximer laser or a diamond saw. The individual heater arrays are each mounted onto a pin grid 
array package (PGA). The PGA is plugged into a socket so that heater arrays can be easily 
replaced. 

The present heater design consists of a pattern of heater lines and power leads on a 
transparent substrate. The heater lines are spaced one line-width apart, so that they only partially 
obscure vision through the heater array. Thus, boiling activity on the surface of the heater can be 
visually observed from the back of the substrate. This will allow boiling events that occur near 
the surface to be visually observed from behind the substrate. 

Several methods were considered for creating a preferential nucleation site at the center 
of the heater array so that the position of a single growing bubble on the heater could be fixed at 
the most desirable location. The preferred site dimensions would be approximately 1 micron in 
diameter and as deep as possible. A re-entrant cavity would be ideal, in where the mouth of the 
cavity is smaller in diameter than the interior of the cavity. These cavities tend to trap vapor or 
dissolved gas within the cavity because surface tension forces cause a very low pressure within 
the cavity, which prevents dissolved gas from re-dissolving in the solution or vapor from 
condensing. 

A C0 2 laser was tested for drilling this hole, but the quartz did not absorb enough of the 
laser energy to allow such a small hole to be cut. It may be possible to create such a site using an 
eximer laser, but the cost of this manufacturing process is prohibitive. A chemical etching 
method may be practical, but the hole formed by this method would probably be very shallow 
compared to its diameter. 

The quartz heater array substrate is mounted to the PGA package as shown in Figure 2.7. 
The PGA package is first drilled with a hole so that the chip can be viewed from the back. 
Transparent epoxy adhesive is used to bond the heater array substrate to the PGA package, so 
that the heater can be viewed from the back of the substrate. A glass coverslip on the back of the 
PGA package is used to provide an optically flat surface on the back of the PGA, and to close the 
cavity that contains the epoxy adhesive. 

Once the heater array substrate is attached to the PGA, electrical connections must be 
made between the PGA and the heater array. This is accomplished using a wire bonding method. 
Both the PGA and the heater array have pads to which wire bonds can be made. 

The wire bonding technique that was used is illustrated in Figure 2.8. Figure 2.8a shows 
the wire capillary tip with the gold wire and a gold ball formed at the end of the wire. In Figure 
2.8b, this gold ball is then pressed down on the workpiece where the first connection is to be 
made. Pressure and an ultrasonic pulse cause a metallurgical bond to form between the gold ball 
and the workpiece. In Figure 2.8c and Figure 2.8d, the tip is drawn up and reposition over the 
site of the second bond. In Figure 2.8e pressure and an ultrasonic pulse cause another bond to 
form, called a wedge bond. The wire is pinched where the tip presses against the surface, and 
when the tip is lifted in Figure 2.8f, the wire breaks off. Finally, in Figure 2.8g, an electric spark 



103 


from the electrode shown below the tip causes another gold ball to form, and another wire bond 
can be made by repeating steps a through g. 

It was very difficult to make the wire-bonding connection to the aluminum power and 
ground leads on the heater array. Either the bonds would not adhere to the aluminum, or else 
they adhered and pulled the aluminum off of the substrate when the ball-bonder tip was raised. 
The bail-bonds that did adhere to the aluminum were weak and unreliable. These problems may 
be caused by weak adhesion between the aluminum and the quartz substrate. 

2.1.4. Heater Specifications 

The finished heater array measures approximately 2.7 mm square. Each individual 
heater, as shown in Figure 2.1, is approximately 0.27 mm square. The lines of the serpentine 
pattern are 5 pm wide, with 5 pm spaces in between the lines. The total length of the platinum 
lines in one heater is about 6000 pm, and the heater lines are about 2000 A thick. These 
dimensions result in an overall heater resistance of approximately 1000 Q. The change in 
resistance with temperature is on the order of 2x10' Q/Q-°C, resulting in a change of about 
2 Q/°C for the given heater dimensions. Current flowing through the heater causes electrical 
power to be dissipated as thermal heat, and the change in resistance with temperature allows the 
temperature to be determined by measuring the resistance of the heater. The total resistance and 
resistance/temperature relationship are high enough that contact resistance in the connections 
will cause negligible errors in the temperature measurement. However, the resistance must also 
be low enough that the voltages required to power the heaters will not be too high for typical off- 
the-shelf parts to be used in the control system electronics. 

2.2. FIGURES 



Figure 2. 1 : Photograph of serpentine platinum resistance heater 



104 


Platinum 



Aluminum Power 
Leads 

Deposited Silicon 
Dioxide 

Thermally Grown 
Silicon Dioxide 

Highly-Doped Silicon 
Substrate 


Figure 2.2: Cross-section view of construction of first-generation heater 


Vias 



Aluminum Ground 
Layer 

Deposited Silicon 
Dioxide 

AluminumPower Leads 
Platinum Heater 

Quartz Substrate 


Figure 2.3: Cross-section view of construction of second-generation heater 


E 



Figure 2.4: Power leads routed between serpentine heaters near edge of heater array 



-Silicon Dioxide 
AluminumPower Leads 
■Platinum Heater 

Quartz Substrate 


Figure 2.5: Cross-section view of construction of third-generation heater 




106 



■ 

■ 

■ 

■ 

■ 

■ 

■ 

■ 


■ 

37 

64 

63 

62 

61 

60 

59 

58 

■ 

38 


■ 

■ 

■ 

■ 


57 


■ 

39 


5 

16 

15 

14 


56 


■ 

40 


6 

■ 

■ 

13 


55 


■ 

41 


7 

■ 

■ 

12 


54 


■ 

42 


8 

9 

10 

11 


53 


■ 

43 


■ 

■ 

■ 

■ 


52 


■ 

44 

45 

46 

47 

48 

49 

50 

51 



■■ 

■ 

■ 

■ 

■ 

■■ 



Figure 2.6: Heater arrangement of third-generation heater 



Figure 2.7: Schematic of quartz wafer mounted on the PGA package 




Figure 2.8: Wire bonding method 








108 


CHAPTER 3: CONSTANT TEMPERATURE CONTROL SYSTEM AND 
DATA ACQUISITION 

A microscale heater array has been developed that contains 96 resistive heater elements. 
Both the heat flux and the temperature from the surface can be measured from these elements if 
an appropriate control and data acquisition system is used. A feedback control system has been 
developed which maintains each heater element at a constant temperature. Two different data 
acquisition systems are used to digitize the heater voltages, so that the heat flux from the heater 
can be determined. 

Figure 3.1 shows a block diagram of the elements of the control and data acquisition 
system. The temperature of each of the 96 platinum resistance heaters in the array is held 
constant by one of a group of 96 feedback control circuits. A microcontroller interfaced to a 
personal computer through a RS-232 serial port controls the temperature setting of each of the 96 
feedback control circuits. Each heater/feedback control combination must be calibrated so that a 
given control signal from the microcontroller corresponds to a known heater temperature. One 
of two different analog-to-digital data acquisition systems is used to gather information on the 
heat transfer from each platinum heater. One is able to collect data at lower speeds, and transfers 
data to a PC through a parallel interface. The other is capable of higher speeds, and transfers 
data to a PC through a PCMCIA digital I/O adapter. 

3.1. FEEDBACK BOARD 

Each heater in the array has a nominal resistance of 1000 Q and the resistance changes 
with temperature by about 2 Q/°C. Thus, if the temperature of a heater remains constant, then 
the resistance of the heater will remain constant. The control circuits keeps the temperature 
constant by sensing the resistance in a heater and adjusting the power dissipation of the heater so 
that the resistance remains constant. 

Constant-temperature hot wire or hot film anemometers detect fluid velocity by detecting 
changes in the heat transfer coefficient on the surface of a thin wire or metal film. This is 
achieved by holding the wire or film at a constant temperature using a feedback controller. The 
device uses a Wheatstone bridge and a differential amplifier to accomplish this task. The 
feedback control for the constant temperature heaters works on the same principle. Following is 
a description of the control circuit operation. 

Figure 3.2 shows a functional schematic of the electronic circuit that is used to maintain a 
heater at constant temperature. Its major elements are a Wheatstone bridge circuit, a feedback 
amplifier attached to the Wheatstone bridge, a control resistance circuit, and a buffer amplifier 
for the A/D output. The bridge is balanced when Vi = 0. This occurs when the ratio between R 4 
and R .2 is the same as between R 3 and Ri . Once the bridge is balanced, it will remain balanced 
regardless of how the supply voltage, V s , changes. 

The feedback circuit maintains a heater at constant temperature by detecting bridge 
imbalance and regulating the current through the bridge in order to bring it back into balance. 

The op-amp output will increase or decrease so that the heater will heat up or cool down until the 
heater reaches the resistance necessary for the bridge to balance. The op-amp output drives an 
NPN transistor which provides enough current gain to drive the heaters. 

3.1.1. Voltage-Controlled Resistance 

The present microscale heater array design uses 96 feedback control circuits similar to 
the one shown in Figure 3.2 to maintain each of the heaters in the array at a constant temperature. 




109 


In simplest conceivable feedback circuit design, the set point of the heater is changed by 
adjusting a potentiometer on the high-impedance side of the bridge. This design would require 
adjusting over 96 potentiometers by hand each time a different temperature or a different heater 
was used in an experiment, and the size of the potentiometers would be significant. Calibrating 
such a system for a number of different temperatures, and for a number of different heaters, 
would be tedious and time-consuming. The authors sought an alternative method of adjusting 
the bridge resistance automatically. 

One possible method of adjusting the bridge resistance is to use a voltage-controlled 
resistance, where the voltage is supplied by a computerized control system. The first method 
that was considered was a circuit using a JFET voltage-controlled resistance device produced by 
Temic. These devices are designed for applications where the voltage across the device is a low- 
level AC signal, but were found to operate linearly in the DC range. However, they displayed a 
large temperature dependence, which made it impossible to accurately calibrate the resistance of 
the device to the control voltage. 

Figure 3.3 shows a schematic diagram of an analog multiplier configured as a voltage- 
controlled resistance. The operation of an analog multiplier is governed by the equation 

tr,-.r,X^+n) lZ 

10F 

where X\,X 2 , Y\, Y 2 , and Z are inputs, and W is the output. 

The circuit illustrated in Figure 3.3 acts as a voltage-controlled resistance connected 
between PI and GND. The equivalent resistance of the circuit, R eq , can be determined through 
circuit analysis to be 

K '1~ y~ 

1 + — 

10F 

R 

Thus, R ea varies from R\ when V cm d = 0 V, to — i- when V cm d = 10 V. A derivation of the 

2 

equivalent resistance is given in Appendex A. 

Figure 3.4 shows a schematic of a complete feedback control circuit for controlling a 
single heater element. The potentiometer R106 is used to adjust the offset voltage of the op-amp. 
The effect of offset voltage on the circuit is discussed in Section 3.7. The pair of op-amps U3A 
and U3C invert and offset the V cm d signal before it reaches the multiplier chip, so that when V cm d 
= 0, Y1 = +10V, and when V cm d = +10V, Y1 = 0V. This arrangement is necessary because the 
heater resistance, Rh, and thus the heater temperature, will be maximum when Y1 is zero Volts. 
Since the control unit which provides the V cm d signal may default to zero volts in a power-off 
state, it was feared that if V cm d was connected directly to Yl, a power-loss to the control unit 
might result in Re q being forced to its maximum value. This condition would force the heater to 
its maximum temperature, and an expensive heater burnout might result. The specifications of 
some important components of the control system are provided in Appendix E. 

3.1.2. Transient Response 

The transient response rate of the circuit was tested by observing the circuit output when 
step-changes in the equivalent resistance were produced by applying a square-wave signal to the 
V cm d input. A signal generator was used to produce a square wave with varying frequency and 
amplitude. An oscilloscope was used to measure and compare the square wave input and the 



110 


circuit response. The circuit was attached to a platinum heater during the test, so the results 
represent the electrical response of the circuit combined with the thermal response of the heater 
in air. The frequency was increased until the feedback circuit was no longer able to respond with 
the necessary change in heat-flux. 

Figure 3.5 shows the circuit response to a V cm d square wave near the maximum transient 
response frequency. The figure shows the transient response time of the circuit and the heater to 
a step change in either the heat-transfer coefficient or to a step-change in heater temperature. 

This response time is one way to characterize the transient response capability of the circuit. 

This response time was not measured. 

Another way to characterize the transient response is to increase the frequency of the 

square wave signal until the magnitude of the transient voltage response decreases to l / 42 times 
the low-frequency value, or from about 7 divisions wide to about 5 divisions wide on the 
oscilloscope screen. The maximum transient response frequency according to this measurement 
was 16 kHz. 

3.2. COMPUTER CONTROL BOARD 

A microprocessor control board was designed that is able to regulate the control voltage 
for each of up to 160 feedback circuits. The board is able to store in memory the control 
voltages that correspond to 16 different temperatures, and it is programmed by transmitting 
control strings to it from a personal computer via an RS-232 serial interface. 

Each voltage table contains an array of control voltage values for up to 16 control cards 
with 16 channels per card. However, the present computer control board design is able to 
physically control only 10 feedback cards. Control voltages are selected over a zero to ten volt 
range, with 12 bit resolution. Control strings for various task are listed and explained in Table 
3.2. 



Ill 


Function 

Description 

Command 

Store 

Store a 1 2-bit D/A value in one of 
the 16 voltage tables. Value is 
stored as the most significant 12 
bits of a 16-bit value. 

‘S’ +ADDR + VAL 
ADDR = 4 hex digits (See Table 3.3) 
VAL = 4 hex digits. 3 digits ranging 
from OOOh to FFFh. 0 appended to end 
EXAMPLE: SC000FFF0 

Table 

Select 1 of 16 voltage tables. 

‘T + TABLE NUMBER 

TABLE NUMBER = 1 hex digit, from 

Oh to Fh. 

EXAMPLE: TO 

Calibrate 

Selects 1 of 1 6 special pre-set 
voltage tables, for diagnostic 
purposes. 

‘C* + CAL TYPE 

CAL TYPE = 1 hex digit, from Oh to Fh 
EXAMPLE: CO 

Read 

Outputs the values currently stored 
in the selected voltage table. 

Values are output as 16-bit 
addresses and 16-bit values. The 
most significant 1 2 bits of the value 
represents the control voltage value. 

‘R’ + TABLE NUMBER 

TABLE NUMBER = 1 hex digit, from 

Oh to Fh. 

EXAMPLE: RO 

Error 

Outputs a list of the last 1 6 
communication errors, and clears 
the error list. 

‘E’ 

EXAMPLE: E 

Voltage 

Reads the 4 system voltage 
(Implemented in software, not in 
hardware) 

‘V’ 

EXAMPLE: V 

Reset 

Resets the microcontroller program 
to address E000, the initialization 
routine of the machine code 
program. Equivalent to pushing the 
reset switch. 

‘X’ 

EXAMPLE: X 

Pulse 

Sets the length of the voltage pulse 
that is sent to the feedback control 
cards. 

‘O’ + VAL 

VAL = 4 hex digits. Default is 0080h 
EXAMPLE: P0080 

Delay 

Sets the delay in the program loop. 
Large delay updates the feedback 
control circuits more slowly. 

‘D’ + VAL 

VAL = 4 hex digits. Default is 0004h 
EXP AMPLE: D0004 


‘h’ on the end of numbers indicates that the number is a hex value 


Table 3.2: Computer Control Board commands 

Table Select Card Select | Channel Select 
Bit Value 1 1 ts ts ts ts cs cs cs cs ch ch ch ch 0 

Hex Digit 1 | 2 | 3 

Table 3.3: Computer Control Board addressing scheme 































112 


The computer control board programs each of the 96 feedback control circuits with the 
correct control voltage by scanning through all 96 control circuits and transmitting voltage pulses 
which are stored in a capacitor on each feedback circuit. Rather than having 96 separate signal 
connections from the computer control board, a multiplexing scheme is used, where a single wire 
carries a train of voltage pulses to all the boards and an address bus directs the voltage signals to 
the correct feedback circuit. 

Figure 3.6 shows how the multiplexing scheme works. A single wire carries a train of 
voltage pulses to all 6 feedback cards. A card-select bus that goes to each feedback card goes 
high whenever a voltage pulse is to be sent to a feedback circuit on that card. A channel-select 
bus goes to all the cards and directs the voltage pulse to one of the 16 feedback circuits on the 
selected feedback card. This is accomplished using a 16-channel multiplexer on each feedback 
card. 

When the computer control board is first turned on, the microprocessor initializes all the 
voltage tables to zero volts. Otherwise, the memory that holds the voltage tables would assume 
random values. Some of these values may be high, which would cause these heater elements to 
be driven to a very high temperature. This could cause a heater array to be ruined if a heater 
burned out. 

The voltage pulses are stored by a capacitor that is associated with each feedback circuit. 
When a feedback circuit is not selected to receive a voltage pulse, the output impedance of the 
multiplexer is very high, so that the capacitor voltage that has been set by the voltage pulse does 
not leak down. 

Figure 3.7 shows the order that the channel-select and card-select addresses are 
incremented as the computer control board scans through the feedback circuits. The V cnll j signal 
is adjusted at each step to match the control voltage that is stored in memory for a given 
feedback circuit. A PULSE signal determines how long the card select pulses last, which in turn 
determines how long the multiplexer applies the control voltage to the selected feedback circuit. 
The channel-select value that is sent on the 4-bit wide channel-select bus is shown at the bottom 
of the figure. 

The microprocessor on the computer control board performs both the task of transmitting 
the voltage pulse train, and also of downloading control strings from the RS-232 port. When the 
RS-232 data is being read, the control board temporarily stops transmitting the pulse train. 
Instead, the last voltage level in the train is transmitted to all the feedback circuits while the 
microprocessor is downloading commands. For a given temperature, the necessary control 
voltages can vary significantly from heater to heater. Therefore, if a new temperature table is 
being uploaded while an old one is set, it can cause the control voltage to get stuck on a fairly 
high value and cause many of the heater to jump to a very high temperature. 

A better method of switching from temperature to temperature is to leave one voltage 
table at zero volts and download up to 1 5 other temperatures to the other voltage tables. Then, 
the "change table" command can be used to change temperature very quickly. 

A watchdog circuit on the computer control board will cut off power to the heater array if 
the microprocessor stops functioning. All power to the heater array is routed first to the 
computer board, then through a relay, and finally into the back plane where it is distributed to the 
computer control circuits. An output from the microprocessor is required for the relay to be 
energized and power to be supplied to the heater array. A complete schematic of the computer 
control board is given in Appendix F. 



113 


3.3. A/D SYSTEMS 

Two systems are available for acquiring heat transfer data. Both systems digitize the 
voltage across the heaters and transfer the digitized data to a personal computer. The first system 
is a commercial system which transfers data through the parallel port of the PC, and the second 
system, which is integrated into the control system, transfers data through a PCMCIA port into a 
laptop computer. 

3.3.1. IOtech A/D system 

The first system, which is sold by IOtech, consists of an analog to digital unit, a 
DaqBook/2 1 6, an expansion chassis, the DBK41, and up to 10 DBK1 2 multiplexer cards. 

The main board can digitize up to sixteen single-ended voltage inputs with 16-bit 
resolution. Gains of 1, 2, 4, or 8 can be selected for each input channel. With a gain of one, the 
unit can digitize voltage levels between 0V and 10V. A gain of 1 is used for data acquisition, 
because the heater voltage will usually be between 0V and 10V. Voltages are digitized and 
transfered to a PC through the parallel interface at a rate as high as 100,000 samples/second. Up 
to 16 channels can be sampled on the main unit by multiplexing the A/D converter. 

The DBK41 expansion unit provides space for 10 IOtech expansion cards, and connects 
to the input port of the DaqBook/2 16. As many as 10 DBK12 multiplexer cards can be installed 
in the DBK41 unit. Each DBK12 multiplexes up to 16 single-pole voltage inputs into a single 
input channel of the DaqBook/216. Thus by using 6 DBK.12 multiplexer cards, 96 channels of 
data can be scanned using a single DaqBook base unit. Figure 3.8 shows how the components of 
the DaqBook system are connected. 

Since the analog to digital conversion is accomplished by scanning the multiplexed 
channels at a rate of 10 ps/channel without a simultaneous sample-and-hold on the inputs, each 
sample within a scan is taken lOps before or after the adjacent samples. This time skew must be 
considered when interpreting the results from this method. This time skew is illustrated in Table 

3.4. Each column represents a 1 ms time interval, and an X marks the periods in time where 
each channel is digitized. 

Appendix C gives specific details about the hardware and software configuration of the 
IOtech data acquisition system. 



Time Interval (ms) 

Channel 

Number 

10 

20 

30 

.... 

960 

1 

X 



.... 


2 


X 


.... 


3 



X 

.... 


.... 



.... 

.... 


96 





X 


Table 3.4: Timing of DaqBook digitization 


3.3.2. High-speed A/D board 

A second A/D system was designed at the University of Denver specifically for the 
constant-temperature control system. It is able to digitize 96 heater voltages at a rate of up to 
10,000 samples/s per channel, yielding 10,000 heat flux maps per second. It has the potential for 
up to 160 input channels using a total of 5 A/D cards. Three cards are used with the current 
system, providing a total of 96 input channels. One card acts as a master card to govern the 




114 


timing of itself and the other cards in the system. Each card services two feedback controller 
cards, and digitizes the voltages from 32 channels with 12-bit resolution. Each board contains six 
256kx4 static ram chips, which provide memory storage for 524,288 12-bit values, or 16,384 
values per channel. The A/D board can sample data at rates of 1 .25, 2.5, 5, or 10 ksamples/s per 
channel. Thus, the board can store 1 .64 seconds of information using the maximum sampling 
rate, or 13.1 seconds at the minimum sampling rate. 

A PCMCIA digital I/O card is used to connect a laptop computer to the A/D system for 
downloading data from the buffer on each A/D card into personal computer memory, where it 
can be manipulated and analyzed. The digital I/O card provides 13 digital inputs and 8 digital 
outputs for interfacing with the A/D system. Appendix C describes the digital I/O interface in 
detail, and discusses the procedure for downloading data from the A/D cards. 

The data obtained by the high-speed A/D board is skewed in time. For instance, if the 
voltages are being sampled at 10,000 samples per second, all 96 heater voltages will be digitized 
every 100 ps. The three A/D cards in the system each contain 2 separate A/D converters, for a 
total of 6 A/D converters. Each of the A/D converters digitizes 16 channels in that 100 ps period. 
The digitization is done without a simultaneous sample-and-hold circuit, so these 16 channels are 
skewed in time. The timing of the data acquisition process is illustrated in Table 3.5 for a 100 
kSample/s case. In this table, each group represents the 16 heaters that are sampled by a single 
A/D converter. 



115 


1 Time Increment = 6.26 ps 


Total of Time increments = 
100 ps 


Group 

# 

Time Increments (ps) 

6.25 

12.5 

18.75 


93.75 

100 

0 

Ch. 1 








Ch. 2 








Ch. 3 

















Ch. 15 








Ch. 16 

1 

Ch. 1 








Ch. 2 








Ch. 3 
















Ch. 15 


1 | 






Ch. 16 


I 


1 


4 

> 




1 


f 










Ch. 2 








Ch. 3 

















Ch. 15 








Ch. 16 


Table 3.5: Timing of high-speed A/D cards 


3.4. PHYSICAL ARRANGEMENT OF CONTROL HARDWARE 

3.4.1. Backplane 

Most of the control and data-acquisition components are housed in a card-cage chassis 
that has slots for up to 21 printed circuit boards to slide into a motherboard. Only 16 of the slots 
are used by the motherboard, which has card-edge connectors for 10 feedback controller cards, 5 
A/D cards, and 1 computer control card. The system was designed to control up to 160 heaters, 
but at present, only 96 heaters are being controlled, so only 6 feedback cards, 3 A/D cards and 1 
computer control card are installed. The cards slide into the card cage and connect to card edge 
connectors on a printed circuit board backplane. The backplane also has connectors for an RS- 
232 port, a PCMCIA port, an alternative A/D device such as the DaqBook, and the heater array 
itself. Figure 3.9 shows the arrangement of card-edge connectors on the backplane board. 



116 


One set of ribbon cables connects each feedback card in the card cage to 16 heaters. 
Another set of ribbon cables connects the A/D inputs to the heater voltage outputs on each 
feedback card. Each ribbon cable connects 16 A/D channels. Figure 3.10 shows the arrangement 
of power, A/D, computer control and heater connectors on the back of the board. 

3.4.2. Decoding board 

It may be useful at times to collect data from or supply power to only a specific group of 
heaters on the heater array. This may be useful when testing equipment, or when studying the 
effects of the size of the heated area. 

For instance, if the 96 heaters in the array are mapped to the feedback circuits in an 
arbitrary fashion, then it might be necessary to use all 6 feedback control cards and 3 A/D cards 
to sample only the center 16 heaters in the array. It is much easier to work with just one or two 
feedback cards or A/D cards when troubleshooting the system. It is also more intuitive to 
troubleshoot when the first feedback card controls the center 16 heaters, the next one controls the 
next ring of 16 heaters, etc. Ease of troubleshooting is a significant issue with a new system such 
as this. For these reasons, it is desirable to map a specific group of heater to a specific feedback 
card. 

To accommodate this possibility, a decoding card is used to physically map specific 
heaters to specific feedback circuits. The backplane is connected to the decoding card, and the 
decoding card is connected to the heater array. Connections are made on the decoding card 
between the heater connections and the backplane connections using wire-wrap terminals. Wire- 
wrap connections allow any heater on the array to be mapped to any control circuit using a 
simple wire- wrap operation. 

A circuit board like the one shown in Figure 3.11 is used to connect the four 50-conductor 
ribbon cables from the heater array to six 26-conductor ribbon cables that connect to the 
backplane. The ground leads from the heater array are connected to the aluminum bus-bar to 
provide a uniform ground voltage, and the power leads are connected to the 26-pin ribbon-cable 
connectors using wire-wrap connections. The ground null circuit shown in the figure is used to 
maintain a constant ground voltage relative to the feedback cards. The need for this circuit is 
explained in Section 3.5. 

The printed circuit board shown in Figure 3.12 is used to connect the four 50-conductor 
ribbon cables to the heater array. The ribbon-cables terminate in card-edge connectors which 
snap onto the four sides of the circuit board. The card edges are connected to a PGA socket in the 
center of the circuit board. The PGA package which holds the heater array snaps into this PGA 
socket. The circuit board and heater array are mounted on the test chamber using an aluminum 
backing plate with an insulating rubber pad between the backing plate and the circuit board. 

Four machine screws pass through the four holes in the circuit board and hold the backing plate, 
rubber pad, and circuit board to the experiment apparatus. 

3.5. GROUND NULL CIRCUITRY 

The method of grounding the individual heaters in the heater array can be very important. 
This issue has been mentioned briefly in the chapter on heater construction. In this section, it is 
discussed in more detail, potential solutions are presented, and the final solution is discussed. To 
resolve this issue, the electronic circuit design, the printed circuit board layout, and the heater 
array design all must be considered. 

Figure 3.13 shows a schematic of a grounding scheme for the heater array. The ground 
shown is the ground that is common to the feedback control circuit. The multiple parallel 
impedances R| through R n are the n heater elements, and R g is the impedance in series with all of 



117 


the heaters. R g is generally so small that if only a single heater is operating, such as when 
calibrating one heater at a time, R g is negligible. However, when multiple heaters are operating, 
the current from all the heaters flowing through R g results in a potential across R g , V g , that adds 
to the voltage across each of the heaters in the array. 

Figure 3.14 shows how the voltage across the ground resistance affects the feedback loop 
circuit. Since this voltage is much smaller than the voltage at the top of the bridge, which is 
always by design at least 200 mV, it has an insignificant effect on the current flowing through 
the heater side of the bridge. The only other effect is that it raises the voltage on the inverting 
side of the op-amp by the amount V g . Therefore, since the effect on current is negligible, the 
voltage can be applied in an analysis as shown in Figure 3.15, where its only effect is to offset 
the inverting input, as shown in Figure 3.16. The result is that the circuit responds as if the op- 
amp offset voltage was more positive by the amount V g . This fact can be used with the offset 
voltage analysis to determine the effect of V g on the temperature uncertainty. 

In fact, positive offset tends to de-stabilize the circuit, so that a feedback control circuit 
may not turn on at all if V g is too large. This is because the higher voltage that is detected across 
the heater causes the feedback circuit to respond as if the resistance was much higher. Since 
there is only 100 mV across the heater initially, a 2 mV offset can cause the heater to appear to 
have a resistance 20ft, or 10°C, higher that it really has. That means it will not turn on until the 
temperature of the heater gets at least 10 degrees below the setpoint, which will not happen if the 
surrounding heaters are actively keeping the temperature at the setpoint temperature. The effects 
of the ground resistance was discovered when certain heaters refused to turn on when multiple 
heaters were operating, but turned on linearly when that heater was operating by itself. 

Sources of the ground impedance include the doped silicon substrate, the contact between 
the silicon and the silver epoxy, the contact between the silver epoxy and the ground lead, and 
the ground lead itself. These impedences were measured, and the ground wire was shown to be 
the most significant resistance. 

Three solutions to this problem were considered. The first option was to assemble the 
heater array and control system so that the ground lead is a very heavy gauge wire connecting to 
the system ground. The second option was to attach the ground lead to an amplifier that would 
sense the ground potential on the substrate and drive that potential to zero by changing the 
current through the ground lead. 

These first two solutions eliminate the problem with ground lead resistance, but they do 
not deal with the resistivity of the doped silicon substrate. A simple experiment showed that this 
resistivity still causes an unacceptable offset in the ground potential. 

Figure 3.17 shows a schematic of the experiment that measured this ground potential 
variation. A 5V power source was used to power 16 heaters located in one quadrant of the array. 
The ground potential of several other heaters at various locations around the array was measured 
by connecting a multimeter to the heater power leads. Since the multimeter input impedance is 
much larger than the heater impedance, this is an accurate method of measurement. The results 
showed that the heater ground potential varied by as much as 1 mV across the heater array. The 
case where only 16 heaters are running at half the maximum operating voltage is conservative, 
and even 1 mV of offset voltage is unacceptable, according to the analysis in Appendix A, so a 
heater array design that uses the substrate as a ground is not practical. 

A revised design using a quartz substrate and an aluminum ground plane on the top layer 
was analyzed to determine if a similar ground potential variation would be manifest. Knowing 
the dimensions of the aluminum ground plane and the amount of current that would be expected 



118 


in this ground plane, it was determined that this design would in fact exhibit the same ground 
potential problem as the doped silicon substrate. 

The final solution was to redesign the heater array and the control system so that each 
heater has its own ground lead which would connect to the feedback card, so that there would be 
no ground offset voltage due to current from other heaters. The final solution involved providing 
an individual ground for each heater which leads to a thick aluminum block. A simple amplifier 
circuit, like the one shown in Figure 3. 1 8, is used to drive this ground to the same potential as the 
ground of the motherboard which connects the feedback boards. 

3.6. CALIBRATION METHOD 

Calibration is accomplished by a series of steps that are performed while the heater array 
is placed in a constant-temperature liquid bath. First the bath is allowed to reach steady state at a 
set temperature. Next, the V cm d level applied to one of the feedback circuits is gradually 
increased, causing R C q to increase, until the bridge starts to balance and the heater power begins 
to increase. The power into the heater is measured, and V cmd is increased until the heater voltage 
reaches a certain low level. The value of V cm d at which this minimum voltage level is detected 
is saved in a file on the PC, so that it can be used in subsequent experiments. The V cmd value for 
that heater is reset to zero, and the preceding steps are repeated at the same temperature for every 
other heater in the heater array. 

It is desired to minimize the heater temperature uncertainty during this calibration 
procedure. When the circuit applies power to the heater, the heater temperature will rise slightly 
higher than the bath temperature. The magnitude of this temperature rise depends on the thermal 
conductivity of the substrate and the heat transfer coefficient seen by the heater surface. This 
temperature rise introduces an error into the calibration, because the heater temperature will not 
match the bath temperature. Temperature rise vs. heater power can be measured experimentally 
for low power levels by applying a known current to the heater and measuring the heater 
resistance at various small current levels. Knowing the maximum acceptable error due to heater 
temperature rise, a maximum calibration power level can be selected from this experimental 
data. At this power level, the feedback control will be operating in its linear range, but the heater 
temperature will be negligibly higher than the constant temperature bath. The heater voltage that 
results in this maximum calibration power level will be referred to as a threshold voltage. All the 
heaters will be calibrated at this threshold voltage level, to provide the minimum uncertainty due 
to both heater temperature rise and control circuit non-linearity. The method of calibration is 
discussed in more detail in the Section 4.1, Calibration Apparatus 

3.7. TRIMMING 

Several adjustments must be made to each individual feedback circuit to ensure accurate 
temperature control. The purpose of these adjustments is to ensure that the voltage-controlled 
resistance does not change when the current flowing through the bridge is very small. When the 
threshold voltage is being applied to the heater during calibration, the voltage-controlled 
resistance must be very close to its value at the maximum voltage, and all values in between the 
threshold voltage and maximum voltage. Unfortunately, it is difficult to measure the magnitude 
of the voltage-controlled resistance during operating conditions. A more effective approach 
seems to be to observe the response of the circuit to changes in the control voltage when a 

constant resistance is connected in place of the heater. 

Ideally, the operational amplifiers used in the feedback control circuits would have zero 
offset voltage and infinite gain, and the control resistance would not change as the heater power 



119 


changes. Therefore, the response of the feedback circuit with ideal components would be similar 
to that shown in Figure 3.19. The control voltage where the sharp jump in heater voltage occurs 
is the point where the bridge is balanced. If the operational amplifier has a finite, negative offset 
voltage, the circuit response would appear as shown in Figure 3.20. The finite offset voltage 
causes the circuit to turn on more gradually, even when the heater resistance is constant. This is 
not desirable when a heater is calibrated, because of the temperature error that is evident in 
Figure 3.20. 

Figure 3.20 shows two constant-resistance lines on a plot of heater voltage vs. control 
voltage. For each of the resistance values, the control circuit will calibrate to a control voltage of 
Vj when the resistance used is Ri, and of V 2 when the resistance used is R 2 . It can be seen, 
however, that the resistance that the heater actually operates at is determined by the heat flux. 

For instance, at control voltage V 2 , the heater will maintain resistance R 2 when the heater voltage 
is low, but when the heater voltage reaches its maximum limit, the heater resistance will be Ri. 
Therefore, the calibrated at V 2 might vary in resistance from Ri to R 2 . This introduces an 
uncertainty into the temperature calibration. The difference between Ri and R 2 depends on the 
width of the constant-resistance line and the relationship between changes in control voltage and 
heater resistance. 

The purpose of trimming the adjustments of each feedback circuit is to minimize the 
width of the constant resistance curve between Vthresh and the maximum heater voltage, so that 
the uncertainty in the temperature calibration is minimized. Trimming is accomplished by 
connecting constant value resistors place of the temperature-sensitive heaters, and varying V cmd 
to obtain a real-time plot of a constant resistance curve like the ones in Figure 3.20. Each circuit 
is then adjusted to minimize the error due to the width of the portion of the curve between the 
threshold voltage and the maximum voltage. 

V C md was varied by a signal generator which supplied a triangle wave to the V C md input on 
each feedback circuit. The amplitude of the signal generator is set to the value of the V cmd change 
that would result in the maximum allowable temperature uncertainty. This signal was connected 
by unplugging the multiplexer which distributes the control voltage pulses from the computer 
control board to each feedback circuit on a card. A socket connect was then used to disfribute 
the external V cmd signal to the multiplexer outputs. The multiplexer outputs lead to the inputs to 
the analog multiplier that regulates the voltage-controlled resistance. An oscilloscope is 
connected to both the V cm d signal and to the heater voltage. The oscilloscope is set for X-Y 
mode, so that V cmd controls the X-axis and the heater voltage controls the Y-axis. 1/8 watt metal 
film resistors are used in place of the heater, because the resistance of metal film resistors is 
much more stable than the resistance of carbon resistors. 

There are two adjustments which affect the performance of the feedback circuit at low 
voltage levels: op-amp offset and analog multiplier output offset. There is actually an analog 
multiplier input offset voltage as well, but it is not independent from the other two adjustments, 
so that the effects of the multiplier input offset can be eliminated by adjusting the other two 
parameters. 

The multiplier output offset could be most easily eliminated by connecting the circuit 
shown in Figure 3.21 to the Z input on the analog multiplier. The Z input is added onto the W 
output, so that any offsets in W could be eliminated by an opposite offset applied to Z. This 
method provides the most general, most linear correction for the effects of the multiplier offset 
voltage. 



120 


However, a different method was chosen to compensate for this offset because of the 
history of the circuit design. When the circuit was first being tested, the effect of multiplier 
offset was not understood, and the circuit was modified through trial-and-error changes that 
improved the circuit performance. One change that improved the accuracy of the voltage- 
controlled resistance at low voltages was to supply a current level into the multiplier input node 
that changed with the level of V cm d. At zero V cmd it would be some positive value, and at 
maximum V cmd , it would be zero. The circuit shown in Figure 3.22 provides a method of 
adjusting the magnitude of this current level. A large resistor is connected to a potentiometer 
which connects to the V cmd input on the multiplier chip. 

Unfortunately, the current level sometimes must increase with increasing V cmd , if the 
multiplier output offset has the opposite sign. This was not considered until after the feedback 
cards had been manufactured, so no provision for this was made in the board. Thus, when a 
specific circuit requires this change, a connection on the board must be cut, and a new 
connection made to a different point on the circuit. Figure 3.23 shows the changes that must be 
made to the circuit. After this change is made, the bias current is positive when V c „, d is positive, 
and zero when V cmd is zero. This bothersome step would not have been necessary if the 
trimming method shown in Figure 3.21 had been used instead to compensate for the multiplier 
offset. That method will adjust for either positive or negative input offset voltage. 

The following steps are followed the first time the circuits are trimmed. During these 
steps, the constant-resistance curves for the given resistors is plotted using a power supply, signal 
generator and oscilloscope. 

1. A high-value resistor is connected in place of the heater element 

2. The op-amp offset voltage is adjusted until the constant-resistance curve exhibits 
minimum uncertainty. The V crnd level is high, because the heater resistance is high, so 
the multiplier output offset adjustment will have no effect. This insures that when the 
multiplier output offset is adjusted, it will not affect the op-amp offset adjustment. 

3. A low-value resistor is connected in place of the heater element. 

4. The multiplier offset is adjusted until the constant-resistance curve exhibits minimum 
uncertainty. 

5. If this adjustment cannot be made, completed, it means that the multiplier output offset 
has the opposite sign, and the modification shown in Figure 3.23 must be applied to the 
circuit, and the circuit must be re-trimmed. 

The adjustment in step 5 requires a different set of trimming steps to be followed for that 
circuit. The following steps must be followed. 

1. A LOW-value resistor is connected in place of the heater element. 

2. The op-amp offset voltage is adjusted until the constant-resistance curve exhibits 
minimum uncertainty. The V cmd level is high, because the heater resistance is high, so 
the multiplier output offset adjustment will have no effect. This insures that when the 
multiplier output offset is adjusted, it will not affect the op-amp offset adjustment. 

3. The op-amp offset voltage is adjusted until the constant-resistance curve exhibits 
minimum uncertainty. The V cmd level is LOW, because the heater resistance is LOW, so 
the multiplier output offset adjustment will have no effect. This insures that when the 
multiplier output offset is adjusted, it will not affect the op-amp offset adjustment. 

4. A HIGH- value resistor is connected in place of the heater element. 

5. The multiplier offset is adjusted until the constant-resistance curve exhibits minimum 
uncertainty. 



121 


Once the circuits are modified as needed, note should be taken of which circuits have 
been modified for a different multiplier offset polarity. When the circuits are trimmed again, this 
information can be used to determine which of the above procedures to follow when trimming a 
circuit. 

3.7.1. Ground potential variations across the motherboard 

It was mentioned above that positive offsets in the circuit cause instabilities. These 
instabilities cause the control system to malfunction drastically. Even if the above trimming 
procedure is followed, variations in the ground potential across the motherboard can cause the 
circuits to behave erratically in spite of careful trimming. 

Figure 3.24 shows the variations in ground potential across the motherboard after the 
control system is first turned on and allowed to warm up. The solid outlines depict the slots 
where feedback cards are plugged in. These variations are measured relative to the aluminum 
ground bar on the decoder board which serves as a common ground for the heaters in the heater 
array. The variations are due to large DC ground currents in the motherboard. The ground plane 
is not thick enough to prevent significant ground-plane voltage gradients. Feedback cards are 
typically trimmed in the last slot on the right, to allow easy access to the trimming adjustments. 
These boards are then operated in one of the six left-hand slots. Thus, an offset arises which 
cannot be accounted for. 

This offset can be accounted for by adjusting the ground potential at the slot where the 
board is being trimmed to match the potential that it will see in the slot where it is operated. This 
can be done using the ground potential adjustment circuit on the decoder board. The potential of 
the aluminum ground bar is kept constant by the simple amplifier circuit in Figure 3.18. The 
offset between the ground bar and the motherboard is controlled by adjusting a potentiometer, 

Rl. Thus, if a board will typically see a 1 .5 mV ground potential relative to the aluminum 
ground bar, then the potentiometer is adjusted until the slot where the feedback board is being 
trimmed, typically the last slot on the right, measures 1.5 mV relative to the aluminum ground 
bar. 

An additional adjustment must be made to insure that positive offset is avoided. When 
the system is operated, the right side of the motherboard is maintained at 2.0 mV relative to the 
ground bar. This insures a negative offset in the circuit so that it will be stable in operation. The 
temperature error due to this offset is discussed in Appendix A. 

3.8. SOFTWARE 

A set of computer programs are used to send commands from the laptop computer to the 
computer control board and the A/D systems, and to receive and process A/D information. 

These programs allow the user to automate calibration, data acquisition and data reduction tasks. 
They were developed in the Microsoft Visual Basic 4.0 environment under Windows 3.11 
running on a laptop PC. Three programs are used to accomplish these tasks. The important 
features of these programs are discussed here. Appendix B provides complete instructions for 
using these programs. A source code listing is provided in Appendix G. The source code can 

also be obtained from the author on floppy disk. 

The programs were developed in the Microsoft Visual Basic 4.0 environment, using the 
16-bit development tools. 32-bit programs might run faster when performing numerical 
calculations and when multitasking with other programs. However, 16-bit programs were 
developed so that they could run under earlier Windows operating systems, and because 
multitasking performance was not important for this application. 



122 


The "CAL" program is used to automate heater calibration. The "CONTROL" program 
automates data acquisition and data reduction. The "GRAPH" program provides a quick means 

of viewing heat flux maps immediately after data is acquired. 

The "CAL" program provides a means of automatically calibrating all 96 heaters at any 
given temperature. A constant temperature bath maintains the heaters at a given temperature, 
and the "CAL" program uses a bisection algorithm to determine the command voltage that 
results in the heater output closest to the threshold voltage. After all 96 heaters are calibrated at 
a given temperature, the voltages are saved in a calibration file so that another program can use 
them to set the heater to the desired temperature. 

The calibration algorithm is very similar to the numerical bisection method. The 
computer control board is able to output control voltages between zero and ten volts. For the 
first heater, the computer tests the heater output voltages at OV, 5 V, and 10V. If the heater 
voltage is not found to cross from below to above the threshold voltage in that range, then an 
error occurs and the program advances to the next heater. Otherwise, the program continues to 
subdivide the interval in which the heater voltage crosses the threshold, until it reaches some 
minimum subdivision. At that point, the average of the command voltages for the last two 
subdivisions is saved as a calibration point. The calibration file consists of an array of these 
points. 

The "CAL" program does not use the custom A/D system for gathering data. The custom 
A/D system is designed to sample all the channels simultaneously, and download data for the 
entire heater array over a period no less than 1.6 seconds. 1.6 seconds is much too long to wait 
between successive steps in the calibration routine. The DAQBook A/D system, however, 
allows data to be collected from a single heater for a very short period of time. A typical time 
between calibration steps is 1/5 sec. 

The "CAL" program is able to detect certain errors in the calibration process and notify 
the user in an error message box. For instance, if a heater is shorted out or broken, and thus the 
resistance of the heater is near zero or infinity, the program will notify the user of an error and 
set the command voltage for that heater to zero. If the resistance of a heater is outside the 

controllable range of the feedback circuits, an error will also result. 

The "CONTROL" program allows the user to specify a group of calibration files to use in 
setting the heater temperature. Once these files are selected, the temperature can be changed by 
either specifying one of the calibration files to set the heater to, or by specifying a temperature 
and having the program interpolate between the available calibration files to provide the correct 
output voltage for that temperature. 

The program provides a means of automating the acquisition of data at many data points. 
A list of temperatures and data file names can be entered, and a time to wait between data points 
is specified. Thus, when it is necessary to gather 50 data points waiting 10 minutes between data 
points, this long and tedious process can be easily automated. 

Either the DAQBook or the custom A/D system can be used with the "CONTROL" 
program to acquire data. The DAQBook system is used when data is taken at a lower rate over a 
long period of time, such as when acquiring average heat transfer data. The custom A/D system 
is used when acquiring data at fast sampling rates higher than the DAQBook maximum rate of 
1000 sampes/s per heater. 

Data is saved using two files with the same name but different extensions. The raw 
binary data files have a ".BIN" extension. These files contain only a stream of binary values 
without any information to allow the binary values to be interpreted. In order to interpret the 



123 


binary file, a file with the ".TAG" file is used to save information necessary to interpret the 
binary file! such as how many data points are in the file, how many heaters were sampled, what 
order the heaters were sampled in, what sampling rate was used, and what temperature the data 
was sampled at. Other comments can also be saved in this file when the data is acquired. 

The "CONTROL" program also provides a post-processing utility which is used to 
perform various data-reduction operations on the binary file. These operations are discussed in 
detail in Appendix B. These operations include various time and space averaging operations. 
This utility also provides some primitive means of automating a series of data reduction 
operations, so that an entire group of files can be reduced automatically. 

The "GRAPH" program provides the capability of immediately viewing heat-flux data 
graphically, without having to go through any data reduction steps. This is useful when the 
system is being set up to insure that it is functioning properly before starting a long data- 
acquisition run. The program allows the user to select a ".BIN" file, and then converts the 
voltage data to heater power information. An animated map of the power being dissipated by 
each heater is then displayed in the program window, using a false-color technique to display the 
heater power as a color level. 


3.9. FIGURES 



Port 


Figure 3.1: Schematic of control and data acquisition system components 





124 



Figure 3.2: Functional schematic of feedback control circuit. 



Figure 3.3: Analog multiplier configured as a voltage-controlled resistance 




Heater Voltage 


25 



Figure 3.4: Complete schematic of feedback control circuit. 



Time 


Figure 3.5: Transient response of feedback circuit 




126 


Computer 

Control 

Board 



Figure 3.6; Computer control board multiplexing scheme 


Heater # 0 12 3 16 17 18 93 94 95 



Vcmd 


PULSE 

r 

-| r 

r 

-i r 

1 r 

1 r 

- " 

- 

- - 

- - 

- 

CSO 

JUUUL . . 

CS 1 

JUITL 






« 












• 






CS 9 

L= 




0 


_ JITLTL 


Ch. Sel. 0 1 2 3 0 1 2 13 14 15 


Figure 3.7: Timing for multiplexing method 











127 



SIGNAL 0 
SIGNAL 1 

SIGNAL 15 

SIGNAL 16 
SIGNAL 17 

SIGNAL 31 

SIGNAL 80 
SIGNAL 81 

SIGNAL 95 


Figure 3.8: Daqbook Multiplexing Scheme 



for feedback cards 


Figure 3.9: Arrangement of backplane connectors - Front View 





128 



25-pin digital I/O 
connector for custom 
A/D system 


9-pin connector downloading 
commands to microprocessor 
board 


15-pin power 
connector 



26-pin ribbon cable 
connector for 
connecting heaters 



20-pin ribbon cable 
connector for connecting 
DaqBook A/D system 



Figure 3.10: Arrangement of backplane connectors - Back View 




129 



Figure 3.11: Decoding card layout 

Clearance holes for 



machine screws 
PGA Socket 

Printed Circuit 
Board 


Figure 3.12: Printed circuit board to hold heater array 





130 


V, v 2 v 3 V, 




Figure 3.14: Effect of ground impedance in feedback circuit 


131 



in feedback circuit 





Heater Voltage 


132 


5 Volt Power 




Figure 3.18: Schematic of ground null circuit 


Control Voltage 


Figure 3.19: Ideal control-circuit response for constant-resistance 




133 



Figure 3.20: Heater Voltage vs. Control Voltage, Constant Temperature Lines. 



Figure 3.21 : Circuit for correcting analog multiplier output offset 



Figure 3.22: Alternative circuit for correcting analog multiplier output offset 






134 



Figure 3.23: Modification to Figure 3.22 for correcting analog multiplier output offset 

A/D digital I/O connector 
ground - OV reference | 


1.916 1.217 1.512 0.207 0.014 

0.885 | 1.403 | 1.420, 0.209, 0.009 



0.377 '0.187 


10.664 '0.235 '0.137 

Figure 3.24: Ground voltage at various points on backplane board. Measurements are given in 

units of mV. 




135 


CHAPTER 4: EXPERIMENTAL APPARATUS 

The constant-temperature microscale heater array that has been developed requires a 
calibration apparatus that can control the calibration bath temperature and provide a high heat 
transfer coefficient to the surface of the heater. An experimental apparatus is required which can 
regulate the temperature and pressure of a working fluid in the chamber, and facilitate the 
removal of dissolved gasses from the working fluid. 

4.1. CALIBRATION APPARATUS 

A calibration apparatus was built to provide a temperature-controlled liquid bath in which 
the constant-temperature heater can be calibrated. Figure 4.1 shows a schematic of the 
apparatus. The apparatus consists of an insulated stainless-steel vessel, a heated temperature- 
controlled circulator, a pump which provides a jet of liquid directly onto the heater array surface 
to increase the forced convection heat transfer coefficient, and a lid to prevent the calibration 
fluid from splashing. Vegetable oil was used in the liquid bath because of its availability and 
high boiling point. 

The accuracy of the temperature-controlled circulator was confirmed to within ±0. 1 °C 
using a mercury thermometer. The circulator agitated the liquid bath, provided heating control to 
keep the temperature of the bath constant, and provided a readout for setpoint temperature and 
actual temperature. The bath temperature could be adjusted from about 25°C to about 100°C. 

The liquid jet on the surface of the heater array was provided by a gear pump which 
pumped liquid through a 0.1 inch orifice above the heater array. The arrangement of the orifice 
relative to the heater array surface is shown in Figure 4.1. 

Several tests were performed to determine an acceptable threshold voltage for the heater 
calibration. Section 3.6 discusses the meaning of the threshold voltage in greater detail. When 
the heater setpoint approaches the temperature of the liquid, the feedback circuit begins to supply 
a small amount of power to the heater. This power level is large enough that it can cause the 
heater temperature to rise several degrees above the calibration bath temperature. The threshold 
voltage is the heater voltage that cause the heater temperature to rise by an amount which falls 
within the desired calibration uncertainties. A precision power supply was used to supply a 
stable voltage, and a multimeter was used to measure the current through the heater and the 
voltage across it, and the resistance and temperature were determined from these values. Figure 
4.2 shows a plot of the temperature rise vs. heater voltage, with and without an impinging jet. It 
can be seen from Figure 4.3, which shows the low voltage region of Figure 4.2, that using the 
impinging jet, the temperature rise is less than 1°C when the heater voltage is around 0.9V. This 
is an acceptable temperature rise for these preliminary experiments. 

The computer software that controls the temperature of all the heaters allows the heaters 
to be calibrated automatically. The software uses a bisection method to find the value of V cmd 
where the heater voltage reaches the threshold voltage. Appendix B gives a complete description 
of the calibration program. 

4.2. CALIBRATION METHOD 

When the heater array is calibrated, the DaqBook data acquisition unit is used instead of 
the custom A/D system. The custom A/D system is capable of taking data from all the heaters at 
a very high sampling rate, but it is not practical to use it for calibration. The user must wait at 
least 1 .6 seconds after triggering the custom A/D system to allow the A/D system to fill the input 
buffer, and then much longer to download a representative number of data points, even from one 



136 


heater. The Daqbook, however, allows the user to sample the voltage from a single heater and to 
download it into memory very quickly. This allows calibration to proceed more quickly. 

The heater array is calibrated using the following procedure: 

1 . The orifice plate is attached to the PC board that holds the heater array so that the flow 
from the orifice is directed onto the heater array surface. 

2. The heater array and orifice plate are placed in the liquid bath. 

3. The circulator is turned on and the temperature setpoint is adjusted to the first calibration 
point. 

4. The liquid bath temperature is allowed to stabilize near the setpoint. 

5. The gear pump which provides flow through the orifice is turned on to full-speed. 

6. The automated calibration routine on the PC is started, and a V cm d value for each heater is 
obtained 

7. The setpoint on the circulator is changed to the next calibration point, and the last three 
steps are repeated. 

4.3. TEST CHAMBER 

Experiments were performed in the test chamber shown in Figure 4.4. The apparatus 
consists of an aluminum test chamber which contains FC-72, and an aluminum compressed-air 
chamber which controls the pressure of the test chamber. A stainless-steel bellows is used to 
couple the pressure of the compressed-air chamber to the test chamber. The temperature and the 
pressure of the system can be adjusted to provide a wide range of saturated or sub-cooled 
conditions. 

The temperature is controlled by an Omega brand temperature control unit. The unit is 
programmable for different control algorithms and thermocouple types. The default control 
algorithm was used with a type-K thermocouple. The pressure is measured using an Omega 
pressure transducer with a polysilicon strain element. 

The temperature controller was calibrated by placing the thermocouple sensor in a bath of 
known temperature and measuring the readout temperature. The unit was calibrated at three 
temperatures, and a second-order least-squares fit was used to interpolate between these 
temperatures. The curve was only slightly non-linear. Figure 4.5 shows the three temperature 
points that were used, and the best-fit line through those three points. 

This temperature unit regulates the current through a set of Kapton heaters that are 
attached to the outside of the test chamber. The aluminum walls conduct heat from the Kapton 
heaters into the fluid, keep the fluid temperature regulated and maintain an even temperature 
around the test chamber because of the thickness and high thermal conductivity of the aluminum. 
Temperature stratification in the test chamber can be further reduced with the built-in stirrer. 
Pressure can be adjusted by opening valve V i to allow compressed air into the air chamber, or 
opening valve V 2 to draw down the pressure in the compressed air chamber. 

Since the pressure and the temperature can be regulated, the system pressure and 
subcooling level can be varied in the experiments. The pressure can be varied from vacuum to 
45 psia, and the liquid temperature can be varied from 25°C to about 100°C. 

The liquid can be degassed by manipulating the valves Vi through V5 to vary the pressure 
and the temperature within the test chamber so that dissolved gasses are extracted from the liquid 
and vented from the test chamber. This procedure is described in greater detail in Chapter 5. 

Lighting can be provided by quartz-halogen lamps operating on DC power. In this 
experiment, however, no photographic results are presented, so lighting was not critical. 



137 


It is sometimes important to note the amount of extension in the bellows. For instance, 
when the bellows begin to expand as the temperature was increased or the pressure was lowered, 
it indicates that a saturated conditions was obtained. The extension in the bellows could be 
checked by peering through a viewport in the side of the compressed air chamber and observing 
the position of the bellows on a graduated scale. 

When the air chamber is being filled, it is necessary to keep the pressure from becoming 
too high. For this reason, a pressure regulator is used to limit the pressure at the inlet, and a 
pressure relief valve is used to vent the chamber if the pressure becomes too high. 

When the test chamber is filled with FC-72, the liquid passes through a 2-micron filter to 
remove small particles. This is important so that these particles will not scatter light during 
photography, or interfere with the boiling mechanism. 



138 


4.4. FIGURES 





Temperature Rise (C) Temperature Rise (C) 


139 


16 
14 
12 
10 
8 
6 
4 
2 
0 

0 5 10 15 20 

Power (mW) 



'igure 4.2: 


Heater temperature rise with and without impinging jet 



0.0 0.5 1.0 1.5 2.0 2.5 

Power (mW) 


Figure 4.3: Heater temperature rise showing threshold voltage 




140 


Compressed air port 



Figure 4.4: Experimental Apparatus 



0 20 40 60 80 100 

Indicated Temp. (C) 


Figure 4.5: Temperature indicator calibration 






141 


CHAPTER 5: HEAT TRANSFER BEHAVIOR ON SMALL HORIZONTAL 
HEATERS DURING POOL BOILING OF FC-72 

This chapter presents some preliminary results that were obtained using the constant 
temperature heater array. Local measurements of wall heat flux during saturated pool boiling of 
FC-72 on a small heated area were made using an array of 96 temperature controlled heaters. 

The time resolved data was used to conditionally sample the heat flux according to whether or 
not boiling occurred on the surface, enabling the separation of the heat flux due to boiling from 
that due to natural convection or vapor contact. Significant variation in heat flux and boiling 
behavior were observed across the surface, indicating that data obtained from single point 
measurements may not be representative of average boiling behavior. The heat transfer from the 
edge heaters was observed to be much higher than that for the inner heaters above the critical 
temperature. The heat transfer during liquid contact in transition boiling was constant for a given 
wall superheat for the inner heaters, and was observed to decrease with increasing wall 
superheat. The scale of the individual heaters is approximately the same as that of the departing 
bubbles in nucleate boiling. 

5.1. EXPERIMENTAL PROCEDURE 

5.1.1. Degassing of fluid 

In order to minimize dissolved gas effects, the FC-72 liquid was degassed using the 
following procedure. After the test chamber was filled with gas saturated FC-72, the chamber 
was sealed and heated to the saturation temperature corresponding to atmospheric pressure in 
Denver, CO (T S at = 52.6 °C, 0.85 atm). A vacuum pump was then used to draw down the 
bellows to increase the volume of the test chamber. Once steady state was reached (about 1 2 
hours), the chamber was opened to atmosphere and the vapor quickly vented. This was repeated 
until the pressure within the test chamber reached the saturation pressure of FC-72 at the given 
bulk temperature. The final dissolved gas concentration in the liquid, determined using the 
chamber temperature and pressure and the properties of FC-72 (3M Fluorinert Manual, 1995), 

was less than 1.5xl0‘3 moles/mole. 

5.1.2. Heater calibration 

The heater array was calibrated in the insulated, circulating constant temperature oil bath 
described in Chapter 4. The bath was held within 0.2 °C of the calibration temperature, while an 
impinging jet of oil onto the heater provided a high heat transfer coefficient. Heater array 
temperatures between these values were obtained by interpolation. 

5.1.3. Data acquisition 

Both of the available data acquisition systems were used. Data was acquired using the 
Daqbook 216 from I/O Tech at a sampling rate of 20 Hz over 50 s, after allowing the heater array 
to remain at a set temperature for 1 0 minutes. The long time between data points was chosen 
because boiling on the surface was observed to change with time. Figure 5. 1 shows how the 
array averaged heat flux changed after the wall superheat was decreased suddenly from 47.5 °C 
to 17.5 °C. Step changes in the wall heat transfer are observed. Visual observations of the 
heater showed that the steps in heat flux were associated with nucleation sites being reactivated 
as evidenced by new streams of bubbles appearing on the surface. The custom high-speed data 
acquisition system was also used to obtain time-resolved data at 2500 samples/sec from each 
heater for 0.5 seconds, in order to study time-dependent features of the boiling process. 



142 


5.1.4. Data reduction 

The heat flux calculated from the voltage across the heater and the heater resistance 
(q raw ) must be made to account for substrate conduction. The procedure used to determine the 

magnitude of this correction is explained below. 

Wall heat flux vs. wall temperature were measured for each heater over the range Tw=50 

to 100 °C with the test chamber pressurized to 2.72 atm and with the bulk fluid at the saturation 
temperature corresponding to atmospheric pressure. The increased pressure effectively 
suppressed boiling on the heater array over this temperature range. The measured heat flux from 
a heater under these conditions represents the sum of natural convection and substrate 
conduction from that heater (q nc+sc ). The magnitude of q nc +sc compared to q raw over the 
temperature range of interest is seen in Figure 5.2. Although q n c+sc is relatively small compared 
to q raw in the high nucleate boiling and CHF regimes, it becomes a substantial fraction of q raw in 
the low nucleate boiling and transition boiling regimes. The average natural convection 
component over the entire heater (q nc ) was calculated using the correlation of Lloyd and Moran 
(1974), (flat, upward facing, isothermal heaters), then subtracted from q nc +sc to obtain the heat 
flux due to substrate conduction (q sc ). q sc for each individual heater was then subtracted from 
q raw to obtain the heat flux due to boiling (q b ). Because the heater array is held at constant 
temperature, the value of q sc for each individual heater does not depend on the state of the fluid 
above the surface. q nc was not subtracted from q raw since natural convection does not exist once 
boiling occurs. Heat fluxes in the natural convection portion of the boiling curve are not 
presented because the above procedure simply results in the calculated value of q nc . 

5.1.5. Uncertainty analysis 

The circuit that allows the wall temperature to be adjusted exhibits offset voltages and 
nonlinearities which must be carefully compensated for. These compensations can still result in 
a certain amount of uncertainty in heater temperature since the offset voltages can drift with 
time. The temperature uncertainty due to this drift is estimated to be 0.4 to 0.6 °C. The 
calibration bath temperature uncertainty is small compared to the above uncertainties, and can be 
neglected. However, the value of the heater calibration could be as much as 0.7 °C too high 
because of self heating, since it is necessary to calibrate the heaters at a current level of close to 1 
mA in order to reduce the uncertainty in the electrical measurements. An additional uncertainty 
arises in controlling the bulk fluid temperature, which was seen to vary during a ten hour run by 
about 0.5 °C. The final uncertainty in wall superheat was calculated to be 1 .1 °C. 

The uncertainty in q b results from uncertainties in q raw , q nc +sc, qnc, and q sc . Uncertainties 
in q raw and q nc+sc arise from uncertainties in measured voltage across the heaters, the resistance of 
the heaters, and the heater array area. All three of these uncertainties are very small compared to 
the uncertainties that follow, and can be neglected. The uncertainty in q nc was assigned the value 
of 100% since significant variations in q nc can occur across the heater array. However, since q nc 
represents only about 12% of q nc +sc, this results in a relatively small uncertainty in q sc . An 
additional uncertainty in q sc results when boiling occurs on the surface since the heat transfer 
coefficient in the fluid surrounding the heater increases above that associated with natural 
convection, and this can change the value of q sc calculated from the above procedure. To 
quantify this effect, a FLUENT simulation was performed in which the heat transfer coefficient 

on the substrate surrounding the heater was increased from 300 to 1000 W/m^-K (typical values 
of the natural convection heat transfer coefficient obtained from the above correlation varied 

between 280-380 W/m 2 -K). Variations in q sc of approximately 1 1% were observed. The 



143 


uncertainties in q raw , q nc +sc, q n c, and q sc were combined according the methodology of Kline and 
McClintock (1953) to find the final uncertainty at each data point. 

5.2. RESULTS 

Before the formal experimental apparatus was completed, some preliminary, qualitative 
tests were performed to determine whether the heater array was capable of meeting the 
objectives of the research. These results are discussed in Section 5.2.1. The remaining sections 
discuss the results that were obtained using the experimental technique explained in the previous 
sections. 

5.2.1. Preliminary space-resolved, time-resolved results 

For this preliminary experiment, the heater array was calibrated in an oil bath placed on a 
hot-plate/magnetic stirrer and heated to 100 °C. The heater was positioned facing upward in a 
190 mm x 100 mm beaker containing a pool of liquid approximately 6 cm deep. The beaker was 
covered by a Teflon lid with slots to allow the power cables to pass through. The hot plate 
temperature was adjusted repeatedly and the bath allowed to come to thermal equilibrium until 
the desired calibration temperature was obtained. Bath temperature was measured with a type K 
thermocouple. 

The preliminary test was performed in FC-72. The liquid was gas-saturated and at 25°C. 
The boiling point of FC-72 was measured and found to be 55°C in Denver, Colorado so that the 
liquid subcooling was 30°C. The heater was operated at 100°C . The liquid was not agitated 
during the test, and the heater was covered by approximately 1 cm of liquid. 

In order to observe the local surface heat flux during pool boiling, the heaters in the array 
were set to 100°C and allowed to operate for several minutes. The Daqbook A/D system was 
then used to digitize the heater voltage values. Each channel was digitized at a rate of 1 kHz, 
and data was collected for 0.5 s. All data presented here were taken with all 96 heaters, except 
for the 5 non-functional heaters shown in Figure 5.3. These 5 heaters were not functioning 
because of flaws in the wire-bonding connections that attach the heater array to the PGA 
package. 

Figure 5.4 shows the time response of a single heater at the center of the array with 
boiling taking place on the heater array surface. In this figure, the heat transfer coefficient is 
defined as h = q"/(T Wall -T Bulk ). The periodic growth and departure of several bubbles can be 
seen as a periodic change in the heat transfer coefficient. This data was sampled at a rate of 1 00 
kHz, or about 1 000 heat flux maps per second. The heater is seen to follow the transients in wall 
heat transfer due to boiling with high temporal resolution. 

The heat transfer coefficient for the 64 center heaters was averaged over the surface at 1 
ms intervals and plotted vs. time. The results are shown in Figure 5.5 for one growth and 
departure cycle. Surface plots of the heat transfer coefficient from the center 64 heaters 
representing a 2 mm x 2 mm area for one bubble cycle are shown in Figure 5.6. Fifteen time 
steps are shown at 2 ms intervals. The times on Figure 5.6a-Figure 5.6o correspond to the times 
on the X-axis of Figure 5.5. 

It could be seen from visual observation of the heater array surface that multiple bubbles 
were forming on the surface, coalescing, and then departing as a single bubble. This observation 
is confirmed by the surface plots of the heat flux. In Figure 5.6, the two low heat transfer regions 
in front and back, which are believed to represent areas covered by vapor bubbles, are beginning 
to coalesce. In Figure 5.6b-Figure 5.6h, these two bubbles completely coalesce into a single 
bubble which covers most of the surface. In Figure 5.6i-Figure 5.6n, the bubble departs from the 



144 


center of the heater, and the low-heat-transfer region in the center disappears completely as 
subcooled liquid rushes in. In Figure 5.6n and Figure 5.6o, three new low-heat transfer regions 
are seen to be growing and preparing to coalesce. 

According to Figure 5.5, the maximum heat transfer coefficient occurs at 25 ms 
corresponding to Figure 5.6m, and appears to be during bubble departure. Since this experiment 
was performed in a highly subcooled liquid, it is felt these results indicate that the dominant heat 
transfer mechanism in subcooled boiling is convection/conduction in the single-phase liquid, as 
other researchers have suggested. This is in contrast to the dominance of microlayer evaporation 
heat transfer in saturated pool boiling. Flow visualization using a high-speed digital video 
camera will be performed to confirm these results. Heat transfer coefficients up to 28,000 W/m 2 - 
K were observed during the bubble departure cycle. The bubble departure frequency was 
approximately 30 Hz. 

Preliminary results proved the feasibility of using a microscale heater for making local 
heat transfer coefficient measurements beneath a growing and departing bubble. The control 
system was able to make temporally and spatially resolved heat transfer coefficient 
measurements with unprecedented detail. 

5.2.2. Spatially averaged, time averaged boiling fiirv» 

For the remaining results, data was taken over a ten hour period in which the wall 
temperature was increased and decreased twice between 65 °C and 100 °C in 2.5 °C increments. 
The bulk fluid was slightly subcooled by about 1.5 °C. Two of the heaters near the edge of the 
array were not functinal, as shown in Figure 5.7. The apparatus shown in Figure 5.8 was used 
for this series of experiments. The boiling curves for all four runs are shown on Figure 5.9. The 
boiling curves are seen to be remarkably repeatable with time, although a small hysteresis is 
observed between the increasing and decreasing temperature runs. A hysteresis has been 
observed by other investigators (Ungar and Eichhorn, 1996, Rajab and Winterton, 1990). The 
source of this hysteresis is currently under investigation. The CHF for all cases is similar, 
however, and is seen to be somewhat higher than that obtained from a correlation for small 
vertical heaters of short width (Park and Bergles, 1988). This is not surprising since they 
operated their heaters in a constant heat flux mode, in contrast to the constant temperature 
boundary condition of the current array. Park and Bergles (1988) did observe that CHF 
increased for heaters with higher thermal conductivity, which is consistent with the observed 
trends. No hysteresis associated with boiling incipience was observed due to a flaw in the 
software - whenever the temperature of the heaters is changed, the heater temperatures are set to 
random temperatures for about 1 second, causing some heaters to shut down while others are set 
to very high temperatures. Boiling therefore occurs somewhere on the heater every time the 
array temperature is changed. 

5.2.3. Spatially resolved, time averaged RMS 

The root-mean-square (RMS) of the heat flux data is a means of characterizing the 
magnitude of the heat transfer variations on the surface of the heater. It may not truly reflect the 
probability distribution of the signal, since the heat transfer is not necessarily Gaussian, but it 
does give a first indication of how the average amplitude of the signal changes with surface 
temperature. Two methods were used to calculate the RMS of the heat flux. The first method is 
referred to as spatially resolved RMS. In this method, the RMS heat flux values were calculated 
for each heater element in the array, then averaged to obtain the average magnitude of the local 
RMS heat flux variation of each individual heater. The result is a quantity that characterizes the 
magnitude of the local heat flux variations during boiling on a constant-temperature surface. In 



145 


the second method, referred to as spatially averaged RMS, the spatially averaged heat flux at 
many times are calculated, from which the RMS value are computed. It must be remembered 
that local changes in heat flux that are on a smaller scale than one of the microscale heater 
elements cannot be measured accurately. The size of bubbles departing from the surface during 
low nucleate boiling was visually observed to be approximately the size of the individual heaters, 
so local heat flux during the early stages of bubble growth cannot be measured. 

The spatially resolved RMS is represented in Figure 5.9 by a pair of lines which bound 
the average heat flux values. It is seen that the heat flux variations are on the order of the array 
averaged heat flux. Figure 5.10 shows the spatially averaged RMS values compared to the 
spatially resolved RMS values. The spatially resolved values are seen to be three to six times 
larger than the spatially averaged values. This is analogous to the temperature variations that are 
seen on a constant heat flux surface. For instance, the numerical work of Unal and 
Pasamehmetoglu (1994) predicts significant local temperature variations, but a nearly constant 
spatially averaged temperature due to the averaging of many out-of-phase local variations. 
Kenning (1992) observed local wall superheat variations of up to 150% of the mean value in 
nucleate boiling. 

The difference in magnitude between spatially resolved and spatially averaged heat flux 
variations shows that techniques which use spatially averaged heat flux values to draw 
conclusions about small-scale heat transfer processes may need to be reexamined. For instance, 
Haramura and Takeno (1997) used the surface averaged heat flux measured from a small 
constant temperature surface to predict macrolayer thickness. In such experiments, the local heat 
balance may differ significantly in magnitude from the average heat balance. 

Figure 5.1 1 shows surface plots of the locally resolved, time averaged heat flux values 
and locally resolved RMS values at three points on the boiling curve. One can see from Figure 
5.1 la that the peaks and valleys of the heat flux and RMS values tend to occur in the same 
regions of the heater. This provides strong evidence that the regions of high heat flux and high 
heat flux variation are areas where nucleation occurs. Figure 5.1 lb shows that the heat flux and 
RMS variation magnitudes do not vary significantly across the surface of the heater at CHF. 

This may indicate that nucleation is occurring evenly over the entire surface. The large low-spot 
on the rear left of the heater is due to the non-functional heaters shown in Figure 5.7. 

Figure 5.11c shows that most of the heat transfer in transition boiling on small heaters 
occurs near the edge of the heater, yet there are very large variations in heat transfer over the 
entire heater. In fact, one can see from Figure 5.1 lc that the RMS variation at the center of the 
heater is larger than the corresponding heat flux. This is not possible if the RMS variations occur 
symmetrically about the mean, because it would result in negative heat flux values. Figure 5.12 
is a plot of heat flux with time for a heater in the center of the array. The plot shows that the heat 

flux remains low except for short periods where it becomes very high - up to 60 W/cm . The 
result is that the RMS is larger than the average without the heat flux becoming negative in 
value. This also shows that variations in heat flux can be much larger than the average heat flux 
at a given point on the surface. 

5.2.4. Spatially averaged, time resolved results 

Spatially averaged, time resolved heat flux is shown in Figure 5.13. Not surprisingly, the 
signal during nucleate boiling (AT S at=25 °C) is seen to be quite random since the average heat 
flux over the surface is the result of boiling from many individual sites on the surface that do not 
necessarily occur in phase. A FFT of this signal showed no strong peaks. At CHF 



146 


(AT sa t=35°C), the heat flux begins to become dominated by the large vapor mass that 
occasionally departs the surface, and a quasi-periodic signal is observed to appear. A FFT 
indicated the emergence of several distinct peaks at approximately 26 and 52 Hz. In transition 
boiling, the secondary peaks become more pronounced and the overall heat flux level decreases. 

5.2.5. Time resolved data from individual heaters 

Seen on Figure 5.14 are time resolved heat flux traces for heater 18 in the array at various 
wall superheats. Consider first the heat flux trace for low nucleate boiling (AT sa t=22 °C, Figure 
5.14a). Examples of regions where natural convection, enhanced convection, and boiling are 
thought to occur on the surface are indicated. Nucleate boiling is assumed to occur when large 
variations in heat flux are seen. Natural convection is assumed to be characterized by low heat 
flux levels along with small variations in heat transfer. Enhanced convection is assumed to occur 
when the heat flux level is higher than occurs for natural convection, but without the large 
variations in heat flux characteristic of nucleate boiling, and could be heat transfer due to bubble 
induced liquid motion. The categorization of nucleate boiling and natural convection are based 
on observations of the heat flux variation on the surface and correlating them to the visual 
observations of boiling on the surface. For example, when large variations in heat flux at 
relatively high levels are observed on a particular heater, a stream of bubbles is seen from that 
heater location. The categorization of enhanced convection, however, is somewhat murky, since 
there is no method of distinguishing it from natural convection other than by the heat flux level. 

The heat flux trace at a slightly higher wall temperature (AT sa t=25 °C) consisted almost 
entirely of nucleate boiling. The average heat flux level at this temperature was significantly 
higher than at lower temperatures, indicating that the increase in heat transfer from the surface is 
partly due to increased heat transfer from individual heaters, and not just due to the activation of 
additional nucleation sites on the surface, or a higher bubble departure frequency. 

At CHF (AT sa t=35 °C, Figure 5.14b), regions of low heat transfer are observed in the 
heat flux traces. It is felt that these represent the heat transfer when vapor covers the surface. 
Visual confirmation of this is not available at this time, but it is implausible that these low heat 
flux regions would represent natural convection due to the high level of bubble activity on the 
surface. The existence of vapor on the surface during CHF has also been observed by other 
researchers (Lee, et at., 1985, Kalinin, et al„ 1987, Alem Rajabi and Winterton, 1988a, and 
Nishio, et al., 1997). 

Within the transition boiling region (Figure 5.14c), the heat flux traces indicate that vapor 
covers the heaters for an increasingly larger fraction of time. The shape of the peaks is 
interesting. Typically, a sharp increase in heat flux is initially seen followed by a rapid decay 
and a sharp drop to the vapor state. Similar behavior was observed by Chen and Hsu (1995) who 
obtained transient wall temperature and heat flux measurements during liquid contact on a 
superheated surface. They observed that the wall heat flux jumped to a high level almost 
immediately upon liquid contact, but then decayed with time until the droplet evaporated or left 
the surface. 

5.2.6. Spatially resolved, time averaged data 

Boiling curves generated for "rings" of heaters are shown on Figure 5.15. In the nucleate 
boiling region, all the heater rings have similar boiling curves. The scatter in the data for a given 
wall superheat is due to boiling being initiated at random sites on the surface. Note that CHF for 
the inner heaters (Rings 1-4) occurs at a lower wall superheat (30-32 °C) than CHF for the entire 
array (about 35 °C). At a wall superheat of 35 °C, transition boiling occurs on the inner heaters. 



147 


The boiling curves begin to deviate from one another above a wall superheat of 32 °C. In 
transition boiling, the boiling curves for Rings 1 and 2 are very similar, and the mininum heat 
flux point is almost reached at the highest wall temperature. The boiling curves for Rings 3 and 
4 are somewhat higher than those for the inner rings, while the curve for Ring 5 shows no 
decrease in heat flux over the wall superheats tested. In fact, the heat flux from the edge heaters 
(Ring 5) is seen to increase with wall superheat to a level about 150% above the CHF for the 
inner heaters at the maximum superheat. The explanation for this, of course, is that the edge 
heaters can be supplied with liquid from the side, while the liquid supply to heaters in Rings 1 -4 
is cut off by bubbles generated on the surface. 

5.2.7. Conditional sampling 

In order to conditionally sample the heat flux only when boiling occurs on the surface, a 
boiling function was generated. This function is a bimodal signal that is set to HIGH when 
boiling or enhanced convection occurs on the surface, and LOW otherwise. Enhanced 
convection was counted as HIGH when computing the boiling function since it is represents 
additional heat transfer due to bubble motion on the surface. The boiling fraction is defined as 
the time average of the boiling function, and represents the time fraction that boiling or enhanced 
convection occurs on the surface. Within transition boiling, where the surface is alternately 
wetted by liquid and vapor, the boiling fraction related to void fraction according to 
Boiling Fraction = 1 - (Void Fraction) 

A schematic of the process by which the boiling function is generated is shown in Figure 
5.16. The time resolved signal is processed according to three criteria. Channel C is a simple 
level detector— if the heat flux is higher than what would be expected during natural or forced 
convection or when vapor covers the surface, then Channel C is set to HIGH. Simply relying on 
this one channel, however, does not enable a clear discrimination of the boiling signal. Channel 
A assumes that the time derivative of the heat flux signal is large when boiling occurs on the 
surface, and is set to HIGH when the rectified first derivative exceed a certain threshold value. 
Channel B computes the rectified second derivative of the heat flux signal and compares it to a 
threshold value-the output is set to HIGH if the threshold value is exceeded. Channels A and B 
are used to solve the problem of zero crossing-the first derivative unavoidable falls below the 
threshold value as it changes sign, resulting in Channel B occasionally being falsely declared 
LOW. The zero crossing problem can be eliminated by monitoring Channels A and B 
simultaneously— both channels have crossing dropouts, but the zero crossings of the two channels 
do not coincide in time since the second derivative is zero when the first derivative is maximum 
and vice versa. The OR gate sets the boiling function to HIGH if the output from any of the 
three channels is HIGH. The three threshold values used produced acceptable boiling functions 
across the heater array at a given superheat, as well as for a given heater at various superheats. 
Examples of the performance of the above criteria in generating the boiling function for a given 
heater at various temperatures is shown on Figure 5.14a-c. 

5.2.8. Boiling fraction 

The time average of the boiling function for each heater in the array was calculated, and 
these values were averaged over heaters within a particular ring. This yields the boiling fraction 
for a particular ring, i.e., the fraction of time the heaters in the ring see boiling on the surface. A 
plot of the boiling fraction vs. wall superheat is shown on Figure 5.17. The boiling fraction is 
seen to reach a value close to unity at a wall superheat of about 25 °C, well before the 



148 


temperature corresponding to CHF for all rings. The boiling fraction at CHF (AT sa t=35 °C) is 
observed to be lower than unity for the inner heaters, indicating the occurence of vapor patches 
on the surface. This is consistent with the data shown on Figure 5.15, which shows that the 
transition boiling region has been entered at this wall superheat for the inner rings of heaters. 

The boiling fraction for Rings 1-4 decreases quite rapidly after CHF. At the highest wall 
superheat, the innermost heaters see boiling only 6% of the time, while boiling is nearly 
continuous on the outer ring of heaters. 

A monotonic increase in the boiling fraction with ring number is seen at any given 
superheat in transition boiling. This agrees with the observed bubble dynamics and wall heat 
transfer pattern. Within transition boiling, the heaters were rewet as the large vapor bubbles left 
the surface. The liquid front was observed to move from the outside of the heater array towards 
the inside heaters, then move outward again as the vapor bubble formed once again above the 
heater array. The heaters towards the outside of the array thus experience boiling a larger 
fraction of the time than the heaters toward the center of the array. This monotonic increase with 
boiling fraction during nucleate boiling is not seen since boiling can initiate anywhere on the 
surface. 

5.2.9. Conditionally sampled heat flux 

The time resolved heat flux data for each heater was conditionally sampled according to 
the boiling function to obtain the heat flux only when boiling or enhanced convection occured on 
the surface, and averaged over the heaters within a particular ring. This results in the average 
heat transfer for a particular ring that is uninfluenced by heat flux during vapor contact or natural 
convection. This quantity is referred to as the boiling heat flux. The results are shown in Figure 
5.18. It is seen that if one excludes the edge heaters (Ring 5), the boiling heat flux more or less 
collapses onto a single curve for all wall superheats, implying that the heat flux at a given wall 
superheat during boiling is constant over the heater surface. For example, the heat flux during 
boiling at AT S at = 47 °C for Ring 1 is similar to that for Ring 4, even though Ring 1 sees boiling 
only 6% of the time while Ring 4 sees boiling 55% of the time. 

During transition boiling, the boiling heat flux for the inner heaters is observed to 
decrease with increasing temperature. The reason for this is currently not known, but it may be a 
result of the shorter liquid contact time and/or the establishment of a vapor layer underneath the 
liquid. Similar trends have been seen by other researchers (Marquardt and Auracher, 1990, 

Alem Rajabi and Winterton, 1988a,b, and Chen and Hsu, 1995). The current data indicates that 
some of the models used to predict transition boiling heat flux may be in error. Often, the heat 
flux during transition boiling is modelled as 

9/r = QcHF (^0 QmHF 0 — 

where F is the fraction of time the surface is covered with liquid. A variation on this model is to 
extend the nucleate boiling and film boiling curves, and weight these values at a given wall 
temperature on F to find the transition boiling heat flux. It is seen from the current data that heat 
transfer during liquid contact does not remain constant nor does it increase in the transition 
boiling region as the above two models would suggest. 

5.3. CONCLUSIONS 

1 . The array averaged heat flux was seen to vary quasi-periodically above CHF. 

2. The inner heaters reach CHF at lower wall superheats than that for the array averaged heat 
flux. 




149 


3. Significant variations in boiling fraction occur over the surface of small heaters during 
nucleate and transition boiling, indicating that point measurements of heat flux, temperature, 
or void fraction may not be representative of average boiling behavior. 

4. Vapor patches at CHF and during transition boiling were observed to move with time, and 
were related to the bubble dynamics above the heater. 

5. Heat transfer during liquid contact in transition boiling was constant for a given wall 
superheat for the inner heaters, and was observed to decrease with increasing wall superheat. 

6. The heat flux for the edge heaters was observed to increase continuously with wall superheat, 
reaching heat flux levels much higher than the maximum heat flux for the inner heaters. 

5.4. FIGURES 



0 20 40 60 80 100 120 140 

Time (s) 


Figure 5.1 : Changes in array averaged heat flux over time at AT sat = 17.5 °C. 




150 



40 50 

Twall " T sat (°C) 

Figure 5.2: Uncorrected boiling curve and substrate conduction data. 



Figure 5.3: Arrangement of 96 heaters in the array, with non- functional heaters represented as 

black squares 




Heat Transfer Coefficient <H/m 


151 



Time (s) 

Figure 5.4: Variation in heat transfer coefficient vs. time for a single heater 



Figure 5.5: Space-averaged heat transfer coefficient vs. Time 




152 



g) 1 3 ms h)15ms i)17ms 



j)19ms k)21ms 1) 23 ms 



m) 25 ms n) 27 ms o) 29 ms 


Figure 5.6: Surface plots of the local heat transfer coefficient over 64 center heaters (1 major tick 
mark in the Z-direction = 5500 W/m 2 -K, major tick mark closest to horizontal axes = 0 W/m 2 -K) 


153 



Figure 5.7: Arrangement of 96 heaters in the array, with non-functional heaters represented as 

black squares. 



154 



Figure 5.8: Schematic of experimental apparatus. 



Fill port 


Figure 5.9: Boiling curve showing RMS variation range and uncertainty bars. 







155 



0 10 20 30 40 50 

Twall “ T sa t (°Q 

Figure 5.10: Spatially resolved vs. spatially averaged RMS heat flux variation. 




156 



Average 

a) Low nucleate boiling (AT sat =20 °C) 



RMS 


Average 


b) Critical heat flux (AT sa t=35 °C) 


157 



c) Transition boiling (AT sat =47.5 °C) 

Figure 5.11. Spatially resolved average and RMS variations in heat flux at three superheats 



Time (s) 

Figure 5.12: Heat flux vs. Time for a heater in the center of the array at ATsat=47.5 °C 

(transition boiling). 


158 



Time (s) 


Figure 5.13a: Array averaged, time resolved heat flux vs. time at AT sa t— 25 °C and AT sat -35 °C. 



Figure 5.13b: Array averaged, time resolved heat flux vs. time at AT sat =47 °C. 






VJV J 

Heat Flux (W/cm 2 ) § Heat Flux (W/cm ) 


160 



Time (s) 

5. 14c: Heat flux vs. time for heater #1 8 along with the boiling function for AT sat =47 °C 
50 

40 

30 

20 

10 

0 

10 15 20 25 30 35 40 45 50 

Twall'Tsat (°C) 


« Ring 1 : Heaters 1 -4 

A * A 

o Ring 2: Heaters 5- 1 6 

A A 

■ Ring 3: Heaters 17-36 

A 

□ Ring 4: Heaters 37-64 

A 

A Ring 5 : Heaters 65-96 

■ A 

. 5 5 

■ ♦ B 


4 ♦ n 


o i 

■ 

$ 

£ s o 

* 

I a 

♦ 

□ 

o ■ D 

A A i ° 

— 1 — 1 — * 

4 O ■ 

* ♦ , 


Figure 5.15: Boiling curves for "rings" of heaters 




161 



Figure 5.16: Schematic of boiling function generation method 


a 



l.U 

♦ 

$ 

ill! “ 

A A A A A 


* . 

□ ■ 

□ 


0.8 


s 

■ 


* 


D □ 




■ 




■ 

0.6 

□ 


O □ 




♦ n 

0.4 

1 

♦ Ring 1: Heaters 1-4 



▲ 

o Ring 2: Heaters 5-16 

■ 

A O 


□ 

■ Ring 3: Heaters 17-36 


0.2 


□ Ring 4: Heaters 37-64 

4 % O 


■ 

A Ring 5: Heaters 65-96 

♦ 

0.0 

♦ 4 — . — 

1 1 

1 1 


10 15 20 25 30 35 40 45 50 

T wa irT sat (°Q 


Figure 5.17: Boiling fraction vs. wall superheat for "rings" of heaters. 



















Heat Flux (W/cm 2 ) 



Figure 5.18: Boiling heat flux for "rings" of heaters 





163 


REFERENCES 

3M Corporation, 1995, 3 M Fluor inert Liquids Product and Contact Guide. 

Alem Rajabi, A. A. and Winterton, R.H.S. (1988a), "Low Thermal Capacity Heaters for 
Steady State Transition Boiling Measurements", Experimental Thermal and Fluid Science, Vol. 

1, pp. 405-407. 

Alem Rajabi, A.A. and Winterton, R.H.S. (1988b), "Liquid-Solid Contact in Steady- 
State Transition Boiling", Intemation Journal of Heat and Fluid Flow, Vol. 9, pp. 215-219. 

Chen, J.C. and Hsu, K.K (1995), "Heat Transfer During Liquid Contact on Superheated 
Surfaces, Journal of Heat Transfer, Vol. 117, pp. 693-697. 

Cooper, M.G. and Lloyd, A.J.P., 1969, "The microlayer in nucleate boiling". 

International Journal of Heat and Mass Transfer, Vol. 12, pp. 895-913. 

Fath, H. S., and Judd, R. L., 1978, “Influence of System Pressure on Microlayer 
Evaporation Heat Transfer,” ASME Journal of Heat Transfer, Vol. 100, pp. 49-55. 

Haramura, Y. and Takeno, H., 1997, "Statistical characteristics of parameters affecting 
pool boiling CHF", Proceedings of the 1997 Engineering Foundation Conference on Convective 
Flow and Pool Boiling, Irsee, Germany. 

Hohl, R., Auracher, H., Blum, J., and Marquardt, W. (1997), "Identification of Liquid- 
Vapor Fluctuations Between Nucleate and Film Boiling in Natural Convection", Proceedings of 
the 1997 Engineering Foundation Conference on Convective Flow and Pool Boiling, Irsee, 
Germany. 

Judd, R. L., and Hwang, K. S., 1976, “A Comprehensive Model for Nucleate Pool 
Boiling Heat Transfer Including Microlayer Evaporation,” ASME Journal of Heat Transfer, Vol. 
98, pp. 623-629. 

Kalinin, E.K., Berlin, I.I., and Kostyuk, V.V. (1987), "Transition Boiling Heat Transfer", 
Advances in Heat Transfer, Vol. 18, pp. 241-323. 

Ke nnin g, D.B.R., 1992, “Wall Temperature Patterns in Nucleate Boiling”, International 
Journal of Heat and Mass Transfer, Vol. 35, pp. 73-86. 

Kline, S.J. and McClintock, F.A. (1953) "Describing Uncertainties in Single Sample 
Experiments", Mechanical Engineering, Vol. 75, pp. 3-8. 

Koffman, D., and Plesset, M. S., 1983, “Experimental Observations of the Microlayer in 
Vapor Bubble Growth on a Heater Solid,” ASME Journal of Heat Transfer, Vol. 105, pp. 625- 
632. 

Lee, L.Y.W., Chen, J.C., and Nelson, R.A. (1985), Liquid-Solid Contact Measurements 
Using a Surface Thermocouple Temperature Probe in Atmospheric Pool Boiling Water", 
International Journal of Heat and Mass Transfer, Vol. 28, pp. 1415-1423. 

Lee, R. C., and Nydahl, J. E., 1989, “Numerical Calculation of Buuble Growth in 
Nucleate Boiling from Inception Through Departure,” ASME Journal of Heat Transfer, Vol. 1 1 1 , 
pp. 474-479. 

Lloyd, J.R. and Moran, W.R. (1974), "Natural Convection Adjacent to Horizontal 
Surfaces of Various Platforms", ASME Paper 74-WA/HT-66. 

Marquadt, W. and Auracher, H. (1990), "An Observer-Based Solution of Inverse Heat 
Conduction Problems", International Journal of Heat and Mass Transfer, Vo. 33, pp. 1545-1562. 

Nishio, S., Gotoh, T., and Nagai, N. (1997), "Observation of Boiling Structures", 
Engineering Foundation Converence on Convective Flow and Pool Boiling, Irsee, Germany. 



164 


Park, K.A. and Bergles, A.E., 1988, "Effects of size of simulated microelectronic chips 
on boiling and critical heat flux", Journal of Heat Transfer, Vol. 1 10, pp. 728-734. 

Rajab, I. and Winterton, R.H.S., 1990, "The two transition boiling curves and solid-liquid 
contact on a horizontal surface", International Journal of Heat and Fluid Flow, Vol. 1 1 , No. 2, 
pp. 149-153. 

Rule, T.D., Kim, J., Quine, R.W., Kalkur, T.S., and Chung, J.N., 1997, “Measurements of 
Spatially and Temporally Resolved Heat Transfer Coefficients in Subcooled Pool Boiling”, 
Proceedings of the 1997 Engineering Foundation Conference on Convective Flow and Pool 
Boiling, Irsee, Germany. 

Shoukri, M., and Judd, R. L., 1975, “Nucleation Site Activation in Saturated Boiling,” 
ASME Journal of Heat Transfer, Vol. 97, pp. 93-98. 

Unal, C. and Pasamehmetoglu, K.O., 1994, "Spatial and temporal variation of the surface 
temperature and heat flux for saturated pool nucleate boiling at lower heat fluxes", HTD-Vol. 

273, Fundamental of Phase Change: Boiling and Condensation, ASME, pp. 49-56. 

Ungar, E.K. and Eichhom, R., 1996, "Transition boiling curves in saturated pool boiling 
from horizontal cylinders", Journal of Heat Transfer, Vol. 118, pp. 654-661 . 

Voutsinos, C. M., and Judd, R. L., 1975, “Laser Interferometric Investigation of the 
Microlayer Evaporation Phenomenon,” ASME Journal of Heat Transfer, Vol. 97, pp. 88-92. 

Watwe, A. A. and Hollingsworth, D.K., 1994, “Liquid Crystal Images of Surface 
Temperature During Incipient Pool Boiling”, Experimental Thermal and Fluid Science, Vol. 9, 
pp. 22-33. 

Zuber, N., 1958, "On the stability of boiling heat transfer". Transactions of the ASME, 
Vol. 80, pp. 711-720. 



165 


APPENDIX A: DERIVATION OF OFFSET ERROR 

A certain error in the equivalent resistance results from offset voltages in the multiplier 
chip and the op-amp. It is shown here that these errors can be minimized throughout the 
operating range of the circuit by carefully adjusting the trimming potentiometers in the circuit. 
First, an expression for equivalent resistance is derived, and then the effects of offset voltage and 
trimming adjustments on this expression are evaluated. The multiplier circuit is illustrated in 
Figure A. 1 , and can be referred to in the following analysis. 


A.l. DERIVATION OF EQUIVALENT RESISTANCE 

Following is a derivation of the multiplier Equivalent Resistance, not accounting for 
multiplier offsets. 

Resistance in terms of voltage from top of circuit to ground, and current through circuit, 
is 


v, 


^eq~ 


W= 


Equation A. 1 

The output voltage response in terms of input voltages for the analog multiplier is 
X, x 2 y, y 2 ) 


f z 


10 V 


Xj=0 

Y ,=0 

z=o 


The following inputs will be grounded, so these voltage inputs will be zero. 


The voltage across the circuit is measured from X 2 to GND, so 


Equation A. 2 


V 1 = X 2 

Substitution yields 

v r Y 2 
w= — 

10 V 

The current through the resistor R is calculated. 
V, w 

~ R 


v 


1 



R 


Substituting the expression for W yields 
v 1 Y 2 

10 V 
R 

Factoring this expression yields 

. Y2 ""' 

1 t- 

10 V 


Equation A. 3 


Equation A. 4 


Equation A. 5 


Equation A.6 



166 


Referring to Equation A. 1 , and substituting the expression for i yields 


R e n = 
eq V, 


R eq= 


It - I 

R \ 10 V/ 

Simplifying this expression yields 
R 


Equation A. 7 


10 v 


which is a valid expression for Rc q . 

A.2. DERIVATION OF OFFSET ERRORS 

If Req changes, the resulting change in temperature will be 


2 * 

T 2 T,= d ^ R eq2 Reql 


n 


Equation A. 8 


Equation A. 9 


assuming that the heater changes by 2 Q / °C, and the bridge ratio is 5: 1 . 

The input offset will have the same effect as a voltage applied to the input Xi, 


x ,=AX 


and the output offset voltage will have the same effect as a voltage applied to the input Z, so that 

the expression for the multiplier output voltage becomes 

V, AX Y 2 

W= ' AW 

10 V 

Equation A. 10 


v i * 


Substituting Equation A. 1 0 into Equation A. 4 yields 

v, ax y 7 

- — - — A W 

JO-V 

R 


Equation A. 1 1 


If this is substituted into Equation A.l, it yields 


10VV.R 

R = — • 

M 10-VV, i V t AX Y 2 10VAW 

Equation A. 1 2 

Thus, it can be seen that when offset voltages are present, the equivalent resistance will 
change when the voltage across the circuit changes. This is not ideal behavior. 


A.3. EFFECT OF TRIMMING ON OFFSET ERRORS 

In the experiment, a bias current to the circuit at the top of the equivalent resistance 
circuit was used to eliminate the multiplier input offset, and the op-amp offset voltage was 



167 


adjusted in order to null out the multiplier output offset. The effects of these adjustments are 
calculated here. 

The circuit was designed so that the bias current into the circuit, I os , would be 
proportional to the Y 2 input on the op-amp. The proportional factor here is i 0 . 

i os =i o' Y 2 

Equation A. 13 

The current that is going through the multiplier circuit is thus the current going through 
that side of the bridge, i, plus the offset current, I 0 s. Thus, Equation A.4 becomes 
v j w 


or, 

Vj w 


R 


os 


Substituting Equation A. 10 into Equation A. 14 yields 


Equation A. 14 


v, A X ) • Y 9 

V, . -\.j— ± AW 

10 V 


The equivalent resistance that the op-amp sees will be 


Equation A. 15 


_ V 1* V os 


opamp 


Equation A. 1 6 

where V 0 s is the offset voltage of the op amp. Vos is adjustable using an offset-null 
circuit attached to the op-amp. The resistance Ropamp will determine how the op-amp responds to 
changes in the system. Substituting Equation A. 15 into Equation A. 16 and expanding yields 

10 v V 1 V os)' R 


opamp 


10-V V, r V, AX 10-V-i Q Y 2 10 VAW 


Offset effects will disappear if the following conditions are true. 


Equation A. 17 


V os = Aw 

AX i 10-V-i 0 =AW 


Equation A. 17 reduces to Equation A.8 when these conditions are true. 

The circuit that is used to supply this offset current does not actually supply a constant 
current. This current depends on the voltage difference between the control voltage and the 
voltage at the top of the Re q circuit. This voltage can either increase or decrease with increasing 
control voltage. The following equation describes the behavior of the offset voltage. 



168 


Where Y 2 is the control voltage, C is a constant that can vary between 1 or -1 using a 
potentiometer as a voltage divider, and Rc is the resistance between the control voltage and the 
top of the R<; q circuit. 

Substituting into Equation A. 1 7 yields 


R 


10 V v k v os ,.r 


opamp 


10 V- V, AW , V , AX Y 2 10 VR 


y 2 c V, 
R„ 


We want this to reduce to the equation for ideal op-amp performance, Equation A. 8 or an 
equivalent form. This will occur when the following conditions are met. 


v 


os 


= AW 


Condition 1 


y 2 c v l 

V os y 2= 10- VR- - AX-Y 2 


and 


Y 


is much greater than V 1 and 


Condition 2 


Condition 3 


,ovrc =ax 

R c 

Condition 4 

Condition 3 can be met by using a very large resistor, so that Y 2 C will be much larger 
then Vi at the low voltages where offset error is significant. The op-amp offset voltage and the 
potentiometer that controls the value of C can be carefully adjusted until the other two values are 
met. Condition 4 does not seem to cause significant error in the circuit under experimental 
conditions. 

This analysis will break down at small values of C, because condition three will lose 
validity. 



Figure A.l : Equivalent resistance circuit using multiplier chip 




169 


APPENDIX B: SOFTWARE OPERATING INSTRUCTIONS 
B.l. CAL 

After loading the CAL program, the window shown in Figure B.l will appear. The first 
step is to go to the setup window by clicking on "Setup." The setup window is shown in Figure 
B.2. After making changes to the setup, it will be convenient to save those changes in a setup 
file so that they need not be entered again. This will be discussed at the end of the section. 

Typically, the "Range of heaters" option will be used. The "All Heaters" option selects a 
range of heaters that is based on a variable in the program that may have been set when a 
different heater array design, with a different number of heaters, was in use. In other words, this 
option is obsolete, and may be eliminated in future revisions of the program. 

The heater numbering system within all the programs starts at zero. For example, if the 
program is being used with a heater array that has 96 heater, heater "0" will be entered as the first 
heater, and heater "95" will be entered as the last heater. 

The "Specific Heaters" option is only used when it is desired to calibrate a specific group 
of heaters. Heaters are added to the list of heaters to calibrate by putting the heater number in the 
text-box and pressing "Add". The heater number will be added to the list below. Heaters in the 
list can be selected with the mouse, and then the "Delete" button can be used to remove them 
from the list. 

During the calibration, the program will incrementally increase or decrease the command 
voltage to a heater control circuit until the heater voltage reaches the threshold voltage that is 
shown in the setup window. As described in the body of the thesis, the threshold voltage is an 
important parameter in the calibration process. Presently a threshold voltage of 900 mV is 
typically used. 

If it is desired to perform a rough calibration without turning on the calibration bath in 
order to check the function of the equipment, one can set the threshold very high so that 
temperature of the heater will increase significantly during the calibration of each heater. This 
temperature increase tends to be somewhat consistent from one heater to the next, so that all the 
heaters will end up calibrating to nearly a constant temperature. This can be used at least to 
make sure all the heaters are operating and that the control voltages are roughly the same. 

The Maximum DeltaV value should be around 5 to 10 volts. Since the program uses the 
bisection method to find the value of V cmd that results in the threshold voltage, cutting this value 
in half will add only one additional bisection step. The size of the deltaV value needs to be 
minimized because it contributes slightly to the uncertainty in temperature. 

The voltage step rate is a clock-controlled rate that limits the speed that the program can 
step from one V cmd value to the next as it performs the bisection method. It has been found that a 
better method of limiting the step rate is to adjust the hardware scan rate and the scans per data 
point. Twenty scans per data point at a rate of 80 scans per second is a reasonable value. This 
will result in a voltage step rate of about 4 steps per second. It is better to use a low scan rate 
because large transients occur in the circuit output at the time when the control voltage changes. 

If the scan rate is too fast, then with only 20 scans, all the scans might occur during the transient, 
which would result in an erroneous reading of the heater output voltage. Enough time must be 
given for the transient to settle, and the majority of the data must be acquired after the transient 
has settled. 

In order to find the best scan rate, an oscilloscope can be connected to the heater output, 
and the output watched to observe the length of the transients compared to the steady portion. 



170 


The final output voltage before the computer moves onto the next point can be observed to see 
that it is very close to the programmed threshold voltage. 

The ADC offset needs to be set to 16 when using the daqbook with the expansion chassis, 
because the first channel of the expansion chassis is addressed as channel 16. Otherwise, the 
calibration will fail. 

The calibration settings can be saved so they can be quickly recalled and modified later. 
One convention for naming calibration files is to save them using the date that they were created 
as a file name. Thus they can be more easily correlated with log book entries and with data files 
that are subsequently created using the earlier calibration files. 

Note that the Start button on the Heater Array Calibration window will not become active 
until the OK button on the setup menu is pressed. 

Before starting a calibration, the temperature bath should be allowed to reach a steady 
temperature, and the temperature should be entered into the Temperature box on the main 
window. A valid file name must be entered before the calibration can begin. Any comments 
about special calibration conditions can be entered in the comments box. 

When all preparations have been made, press the Start button. If any errors occur during 
the calibration of a specific heater, a message will be displayed in the error box, e.g. "Calibration 
failed, heater #1." 

While the heater array is calibrating, the heater number that is currently being calibrated 
will be displayed in the main window. Also, the previously calibrated heater and the resulting 
V C md value will be calibrated. 

B.1.1. Description of Controls in "Heater Array Calibration” Window 

The "Heater Array Calibration" window, shown in Figure B.l, contains the following 
controls, which are described below. 

Temperature . Used to enter the temperature of the present calibration point. This 
temperature is saved with the calibration file and used by the CONTROL program to interpolate 
the control voltages between calibration file temperatures. 

Status . Indicates whether the program is "Calibrating" or "Inactive". 

Test Time . Displays the number of seconds that have passed since the calibration for a 
given temperature began. 

Calibrating Heater . Displays the number of the heater that is presently being calibrated. 
This number counts the first heater as heater number zero. 

Vcmd + Repetition # . These boxes are now meaningless, due to program revisions. 

Final Calibration for Previous Point . The text boxes that follow this label contain 
information about the last heater that was calibrated. 

Heater # . Displays the number of the heater that was last calibrated 

Average Vcmd . Displays the V cm d value that resulted from the previously calibrated 
heater. This is the value that will be saved in the calibration file. 

File Name . Used to enter the file name of the calibration file to save. These files 
generally end with ".CAL". 

Comments . Used to enter any additional information that is desired to be saved with the 
calibration file, such as special experimental conditions. 

Errors . Lists heaters which did not calibrate successfully. Most recent errors are added 
to the beginning of the list. 

Setup . Opens the "Setup" window, which allows the user to configure calibration 
parameters. 




171 


Start . Start calibrating the heater, saving calibration data when it is finished. 

Stop . Halt the calibration 

Exit . Exit the program 

B.1.2. Description of Controls in "Heater Calibration Setup 1 * Window 

This window, showin in Figure B.2, allows the parameters of the calibration routine to be 
adjusted. It contains the following controls. 

Active Heaters . This label provides three option concerning which heaters will be 
calibrated: All Heaters, Range of Heaters, and Specific Heaters 

All Heaters . Calibrates ALL heaters, from heater zero up to the maximum number of 
heaters specified in the program. Since the number of heaters in the heater array has changed, 
and the number specified in the software may not have changed, this may not be a reliable 
option. 

Ranee of Heaters . Allows the user to specify the range of heaters which will be 
calibrated by entering the first and last heater in the range. Heater numbers are counted starting 
at zero, not one. 

Specific Heaters . Allows the user to add specific heaters to a list of heaters to be 
calibrated. Heater numbers are entered in the small box, and the "Add" button is used to add that 
heater to the list, which is displayed in the large box below. Heater numbers in the box can be 
highlighted and removed using the "Delete" button. 

Threshold Voltage . The heater voltage at which the Vcmd values are saved is entered in 
this box. 

Maximum DeltaV . The size of interval where the bisection method is satisfied is 
entered in this box. 

Voltage Step Rate . The rate that the calibration program advances to the next Vcmd 
value in the bisection method. This must be fast enough that calibration is accomplished in a 
reasonable amount of time, but slow enough that the output voltage has time to settle at each 
Vcmd value. 

Scans / Data point . Number of output voltage values to digitize at each Vcmd value. 

The scans are averaged at each datapoint and used to determine what the output voltage is. 

Hardware Scan Rate . The number of scans per second at which these voltage values 
are digitized. 

ADC offset . This value must be entered when using the DAQbook data acquisition 
system with the expansion cards. A value of 16 is used if the expansion cards are being used. 
Otherwise, zero is used. This number arises from the fact that in the functions that address the 
expansion cards, the first channel on the first expansion card is addressed as channel 1 6, not 
channel zero, so the A/D addresses must be offset in the software to account for that. 

OK . The current settings are saved and the setup window is closed when this button is 
pressed. 

Cancel . The previous settings are restored and the setup window is closed when this 
button is pressed. 

Load Setup . The user is prompted for the name of a previously saved setup file, with the 
extension ".CAL", which contains the setup data given in this window when this button is 
pressed. 

Save Setup . The user is prompted for a file name which the current settings will be 
saved under. 



172 


Restore Defaults . This button restores the values that were present when the program 
was started. 

B.2. CONTROL 

The CONTROL program is used to set the heater array to the temperatures for which it 
was calibrated using the CAL program, to acquire heat transfer data while the heater array is 
operating, and to perform various data reduction tasks. 

After the program is loaded and the window shown in Figure B.3 appears, the first step is 
to set up CONTROL for the hardware that is being used. Press the Setup button to display the 
setup window, which is shown in Figure B.4. After setting all the options, the settings can be 
saved for recall next time the program is used. 

Calibration files can be loaded into a set of calibration tables within the program by 
selecting a table number and then clicking on the Browse button to select a calibration file. Up 
to 16 calibration files can be loaded in this manner. The temperature for each calibration file is 
stored with the file, and the computer will eventually use that temperature and the V cmd values 
within the calibration file to calculate the proper V cm d values for any temperature that is entered 
that falls between the highest and lowest calibration file temperatures. The order that the 
calibration files are listed does not matter. It also does not matter which tables are left blank, 
whether they are at the beginning, at the end, or in between non-blank tables. 

The A/D options include No Hardware, for when the program is being tested without 
hardware or when no A/D hardware is connected, DAQBook, for when the DAQBook hardware 
is being used, and Custom A/D, for when the high-speed A/D boards are being used. 

The D/A options determine what method is used to control the heater control circuits. 
Either No Hardware or Computer Control Board can be selected. 

There are presently several gain options given in the control setup window, but the only 
valid option at this time is a gain of 1 . Since the heater voltages presently vary over the entire 
dynamic range of the A/D system, there is no need for higher gains, and no such need is 
anticipated in the future. Future revisions of the software may eliminate the gain option. 

The sampling rate should be set to a value that provides slightly more resolution than is 
necessary, but does not provide to much data to conveniently process. The maximum sampling 
rate using the DaqBook with 96 heaters is 1000 samples/s. However, the CONTROL program is 
not able to attain this sampling rate because it cannot download data from the DaqBook buffer 
quickly enough. 

A program called DAQVIEW can be used to collect data at the maximum speed of 1000 
samples/s, it is desired. The binary files produced by this program are compatible with all the 
post-processing procedures of the CONTROL program, as long as the appropriate .TAG file is 
included. This can be done by setting up CONTROL to sample all 96 heaters at 1000 samples 
per second and starting the data acquisition procedure. When the procedure fails due to a buffer 
overflow, the binary file that CONTROL produces will be useless, but the .TAG file that is 
generated can be used with a binary file from DAQVIEW. This can only be done if this file was 
generated by sampling the same number of heaters and the sampling time and sampling rates 
were the same as what was specified in CONTROL when the .TAG file was generated. 

The Custom A/D board is capable of much higher sampling rates. When using the 
CONTROL program, the custom A/D board always samples at 10,000 samples/s. Within 
control, however, sampling rates of 1250, 2500, 5000, or 10,000 may be selected. These 
sampling rates are achieved by physically sampling the data at the highest rate of 10,000 



173 


samples/s, but then only downloading every 2nd, 4th, or 8th point from the buffer. This merely 
reduces the size of the data file, and insures that the time skew will be minimized. 

The DAQBook does not have a minimum sampling rate. However, the custom A/D 
system has a minimum sampling rate of 1250 samples/second. 

The duration that the DAQBook can continue to collect data is limited only by the 
amount of disk space on the computer, since the DAQVIEW program can stream data from the 
A/D converter to the hard disk at 100,000 samples/s, or about 1000 samples/s per heater. The 
custom A/D converter can only continue to collect data for 1 .6 seconds when physically 
sampling at 1 0,000 samples/s per heater. 

The only trigger source that is presently available for starting the A/D system is a manual 
trigger using the software. An external trigger for synchronizing with other events could be 
added later. 

In the CONTROL program, a channel offset of 16 is necessary when collecting data from 
the DAQBook with the expansion cards installed. A channel offset of zero is used for the 
custom A/D system or for the DAQBook base unit. 

The All Heaters, Range of Heaters, and Specific Heaters options are similar as for the 
calibration program, except in this case it determines which heaters data will be collected from. 

It does NOT determine which heaters will be turned on. The calibration file that is loaded 
determines this. 

The only data file format that is presently available is the binary format, and this option 
will probable be eliminated in future revisions. 

Once the options are set, they can be saved for later recall using the Save Setup button, 
and then they can be put into effect in the CONTROL program by pressing OK. 

The temperature of the heater can be set using two methods. One method is to use the 
Table Number option. Click on the Table Number option button and enter a table number which 
corresponds to the tables that were specified in the setup. Once a table number is specified, click 
on Set Heaters to reprogram the computer control board to output the specified calibration table 
to the control circuits, and thus set the heaters to the specified temperature. 

The other method is to set the temperature. To use this option, click on the Temperature 
option button and set the temperature to any value between the lowest and highest temperature 
that is given in the calibration files. When Set Heaters is selected, The program uses an 
interpolation scheme to interpolate between the nearest temperatures above and below the given 
setpoint. The interpolated V cm d values are then programmed into the computer control board and 
output to the control circuits so that the heater array is set to the specified temperature. 

Once the temperature is set, data can be acquired. A file name is entered in the Data File 
Name text box, and the Start button is pressed. If the daqbook is being used, the user must wait 
until data acquisition is complete before resetting the temperature. If the custom A/D board is 
being used, the user can reset the temperature after the status window displays "Downloading 
Data", which means that the A/D boards have finished collecting data, and the computer is 
merely downloading the data from the A/D buffers to the computer's memory. 

Every time the user clicks on Setup and then on OK, all the hardware is reset, so that the 
computer control board outputs zero V cm d values and the heaters are turned off. In order to keep 
the user from accidentally taking data without first setting the heaters, the user is required to 
click on Set Heaters before clicking on the Start button which begins the data acquisition 
process. 



174 


B.2.1. "Control 1 * Window Controls 

The "Control" window, which is shown in Figure B.3, contains the following controls. 

Status. This text box indicates whether data is being collected, the system is waiting for another 
data point, downloading data from the high-speed A/D, or Inactive. 

Temperature. When the button to the left of this label is active, then a temperature can be 
entered into this box and the program will interpolate between the two closest temperature 
which bracket the entered value. This interpolation should be done between calibration 
points that are only 5 to 10 degrees apart. The error due to this interpolation is vary small. 
The interpolated voltage table is then used when the heater temperature is set. In order use 
this option, at least two calibration files must have been loaded, and the selected temperature 
must fall somewhere between the calibration temperature of two of the calibration files. 

Table Number. When the button to the left of this label is active, the temperature is set by 
selecting one of the calibration files that have been loaded in the Setup window. 

Automation Setup. This command button will cause the Data Acquisition Automation window 
to be displayed, so that the user can set up an automatic data acquisition procedure. 

Errors Last Run. Errors during data acquisition will be displayed in this text box. 

Data Acquisition File Name. The file name where the data acquisition data will be stored Is 
entered in this box. 

Comments. Any comments which need to be attached to the data file can be entered here. 

Set Heaters. This button causes the heater temperature to be set to whatever is specified in the 
"Temperature" or "Table" boxes. 

Start. This button causes a set of data to be captured and stored in the specified file name. This 
button will be available until the "Set Heaters" button and the "Setup" button have been 
pressed. 

Stop. This button stops data acquisition before it is complete. 

Setup. This button causes the setup window to be displayed, so that various parameters can be 
adjusted. 

Convert. This button causes the "Convert Binary to Text" window to be displayed, so that the 
user can perform various data reduction operations on the binary files. 

Exit. This button terminates the program. 

B.2.2. "Data Acquisition Setup" Window 

This window, shown in Figure B.4, allows the user to configure the data acquisition 

software for the data acquisition hardware that is connected to the computer, and for the number 

of heaters that are being sampled. 

Calibration Files. The number box allows one out of 16 calibration tables to be selected. The 
text box to the right of the number box allows a calibration filename to be selected for the 
selected calibration table. 

A/1) Hardware Type. Allows the A/D hardware type to be selected. The choices are no 
hardware, DAQBook, and Custom A/D board. 

D/A Hardware Type. Allows the D/A hardware type to be selected. The choices are no 
hardware, or the computer control board. 

Gain. The gain that is used for A/D using the present devices is always one, so this is the only 
choice given. 

Sampling Rate. The number of samples per second for each heater. 

Duration. The length of time over which data is acquired 

Trigger Source. The source of the signal that will begin data acquisition 



175 


Channel Offset. A number of 1 6 is used when the DAQBook is used with its expansion cards, 
or zero when the DAQBook base unit only is used, or when the custom A/D system is used. 
All Heaters. This option causes data to be acquired from all the heaters. A more reliable choice 
is the Range of Heaters option, so that a specific range of heaters can be selected. 

Ranee of Heaters. This option allows a range of heater numbers to be selected for data input. 
Specific Heaters. This option allows any combination of specific heater numbers to be selected 
for input. 

Data File Format. The only data file format currently available is a binary file format. 
Comments. This box is for any extra information that the user wants to attach to the setup file. 
Save Setup. The user is prompted for a file name where the setup information is saved. 

Load Setup. The user is prompted for the name of a setup file to load 
Restore Default. The setup information is restored to the values at the time the program was 
started. 

OK. Uses the new settings and returns to the main window 
Cancel. Discards the changes and goes back to the main window. 

A/D hardware setup. Options for advanced setup of the A/D hardware 
D/A hardware setup. Options for advanced setup of the D/A hardware 

B.3. POST-PROCESSING 

An important feature of the CONTROL program is the ability to perform post-processing 
operations on the raw data files. To display the post-processing window, press the Post- 
Processing command button. The window shown in Figure B.6 is displayed, which allows the 
user to select a number of post-processing options. 

In order to perform an operation in the post-processing window, first set the file format 
option to the desired format. Then click on the Input File box to select a binary data file to 
process. The next section discusses each of the operations that can be performed. Select the 
operation that you desire to perform, and check the next section to see which other text boxes 
need to be update to insure correct output. 

There are four boxes which must always have the correct information in them to obtain 
proper results. The offset file, resistance coefficient, resistance constant, and area file names 
need to be supplied to accurately convert the raw voltage data into heat flux. If any of these file 
names are not entered, errors will occur when the post-processing operation is started. 

The following data reduction operations can be performed. These operations can be 
selected from the list in the "File Formats" box. The following information is given: the name of 
the format, a description of the format, a list of the other text boxes that are referenced by the 
operation, and the file extension that is typically used for the format. 


Format 

Standard 

Description 

This option outputs tab-separated data that can be imported into a spreadsheet 
program. The top row consists of heater number labels, and the left column 
consists of the time. The columns consist of the heater heat flux at various 
times. This format is useful for spreadsheet manipulation. The units are given 
in seconds and W/cm 

Controls 

Input File Name, Output File Name, Offset File (read). Resistance Coefficient, 
Resistance Constant, Area File Name 

Extension 

TRD 



176 


Format 

Matrices 

Description 

This file presents the heat flux information as a map of the heat flux for each 
heater in the array. The data file consists of a series of 10x10 matrices which 
give the heat flux values for each heater in the array. The file presents a matrix 
for each time step, starting at zero . 

Controls 

Input File Name, Output File Name, Offset File (read). Resistance Coefficient, 
Resistance Constant, Area File Name 

Extension 

.MAT 


Format 

GNU Plot 

Description 


Controls 

Input File Name, Output File Name, Offset File (read), Resistance Coefficient, 
Resistance Constant, Area File Name 

Extension 

.GPD 


Format 

MPEG Movie 

Description 

This file saves the data in a format which can be read by GNU plot. It also 
saves a script which can be used by GNU Plot to plot each time step and save it 
to disk as a separate file, and DOS batch file which crops the image files and 
combines them into an MPEG movie using some free software utilities. 

Controls 

Input File Name, Output File Name, Offset File (read). Resistance Coefficient, 
Resistance Constant, Area File Name 

Extension 



Format 

Image Tool 

Description 

This file can be used by the free image processing software "Image Tool" to the 
heat flux. It is a binary file format that converts each heater into a group of 4x4 
pixels. This image can then be processed by a 4x4 smoothing mask to produce 
a smoothed image of the heat flux. 

Controls 

Input File Name, Output File Name, Offset File (read). Resistance Coefficient, 
Resistance Constant, Area File Name 

Extension 



Format 

Matrix Files 

Description 

This format saves each time step as a separate matrix file. 

Controls 

Input File Name, Output File Name, Offset File (read). Resistance Coefficient, 
Resistance Constant, Area File Name 


Extension 























177 


Format | Average Heat Flux 

Description Saves a space-averaged heat flux over all 96 heaters for each time step, and 

appends a total average heat flux for all the time steps to the end. 

Controls Input File Name, Output File Name, Offset File (read), Resistance Coefficient, 
Resistance Constant, Area File Name 

Extension 


Format 

Local Time Average 

Description 

Saves the time average heat flux of each heater. It also writes an offset file 
which can be used with the natural convection data to offset other heat flux 
files. 

Controls 

Input File Name, Output File Name, Offset File (read). Resistance Coefficient, 
Resistance Constant, Area File Name 

Extension 

.AVG 


Format 

Local RMS fluctuation 

Description 

Saves the standard deviation of the heat flux for each heater in the array. 

Controls 

Input File Name, Output File Name, Offset File (read), Resistance Coefficient, 


Resistance Constant, Area File Name 

Extension 

.RMS 


Format 

Total Probability Density 

Description 

Saves a probability density function plot of the heat flux for every heater in 
each column, and one for the entire array in the last column. An interval of 1 
W/cm 2 is used to compute the distribution, and then the distribution is 
normalized over that interval, and over the total number of heat flux samples, so 
that the sum of the area under the function is unity. 

Several other operations can be performed on the probability density 
distribution to obtain additional information. The mode, median, minimum and 
maxiumum percentile limits, and the difference between the minimum and 
maximum (referred to as the width of the probability distribution), can also be 
computed. 

Controls 

Input File Name, Output File Name, Offset File (read). Resistance Coefficient, 
Resistance Constant, Area File Name, Probability Width File, Mode File, 
Median File, Max File, Min File. 

Extension 

.PDD 


Format 

FFT 

Description 

Saves an FFT of each heater in the array. The first column lists the frequency, 
and the other columns list the magnitude of the frequency-domain component. 

Controls 

Input File Name, Output File Name, Offset File (read), Resistance Coefficient, 
Resistance Constant, Area File Name 

Extension 

.FFT 
















178 


Format 

Boiling Function 

Description 

Saves a set of data which characterizes the heat flux during boiling events on 
the surface of the heater. One file contains a map of the heaters which are 
boiling and not boiling. This file is a binary file with 8-bit record length, where 
the boiling heaters have a value of 255, and the non-boiling heaters have a 
value of zero 

Controls 

Input File Name, Output File Name, Offset File (read). Resistance Coefficient, 
Resistance Constant, Area File Name, Boiling Fen. Time History, Heat Flux 
Threshold, q' threshold, q" threshold, Boiling Function Stats 
The other file which is saved by this format, usually with a (.BFS) extension, 
contains the boiling function statistics. It contains a map of the boiling fraction 
for each heater in the array, and gives values of the boiling fraction, average 
heat flux, boiling heat flux, low heat flux and high heat flux (bounded by the 
percentile limits) for concentric rings of heaters and groups of heaters 
Another file which is saved is the boiling fraction time history, which gives an 
average of the boiling function over the entire array. 

Extension 

.BFN 


.BFS 


.BTH 


Format 

Sample Derivative 

Description 

This file provides a preview of the boiling function for a particular heater, using 
the specified boiling function thresholds. 

Controls 

Input File Name, Output File Name, Offset File (read), Resistance Coefficient, 
Resistance Constant, Area File Name, Threshold Sample, Heat Flux Threshold, 
q' threshold, q" threshold. 

Extension 

.DER 


B.3.1. "Post-Processing" Window Controls 

Following is a summary of the function of each control in the post-processing windows, 

shown in Figure B.6. 

Status. This label indicates the status of the conversion process as a percentage complete. 

File Format. This box allows the user to select one of several data reduction procedures. These 
procedures are summarized in one of the following sections. Which of these options is 
selected determines which of the following items of information must be supplied. 

Input File Name. The name of a binary input file, ending with ".BIN", on which to perform a 
data reduction step. 

Output File Name. The name of an output file. The extension depends on the type of data 
reduction step being performed. For instance, the file extension for a total probability density 
distribution file is ".TPD". 

Probability Width File. A file which expresses the width of the probability density distribution 
for each heater in the array. The width is determined by the percentile bounds, which are set 
in the upper and lower percentile limits text boxes. 

Mode File. A file which contains the statistical mode of the heat flux values seen on that heater 
for each heater in the array. 







179 


Median File. A file which contains the statistical median of the heat flux values seen on that 
heater for each heater in the array. 

Max File. A file which contains the Upper percentile heat flux value for each heater in the array. 
Min File. A file which contains the lower percentile heat flux value for each heater in the array 
Boiling Function Statistics. A file which contains a map of the space-resolved average boiling 
heat flux, along with the boiling heat flux, boiling fraction, average heat flux, min heat flux 
and max heat flux for various rings and groups of heaters. It also includes the threshold 
values that were used for the heat flux and the first and second derivatives.] 

Offset file (write). A file to which the offset information for natural convection and substrate 
conduction will be written. 

Boiling Function Time History. A file containing an array average boiling function time 
history. 

Max. Number of Steps. A number indicating the maximum number of time steps that will be 
processed by the program. 

Number of Heaters. A number specifying how many of the heaters to perform certain steps on. 
Offset File tread). A file containing offset information to be read in and used when processing 
the data files. 

Resistance Coefficient. A file containing the slope of the resistance vs. Temperature curve for 
each heater in the array. This information is stored as a calibration file header followed by a 
series of numbers. 

Resistance constant. A file containing the y-intercept of the resistance vs. temperature curve for 
each heater in the array. The resistance coefficient and resistance constant are given so that 
the temperature in Degrees Celsius is used to convert the temperature to a resistance, which 
is then used to compute the power dissipation of each heater element. 

Area File Name. A file which contains the surface area of each of the 96 heater elements. This 
area is measured by considering a portion of the area between the heaters. 

Heat Flux Threshold. A value which will separate data points with heat fluxes higher than this 
into a boiling category, and data points with values lower than this into a non-boiling 
category. 

q* threshold, a value which will separate data points with a first derivative higher than this into 
a boiling category, and all other data points into a non-boiling category. 
a" threshold, a value which will separate data points with a second derivative higher than this 
into a boiling category, and all other data points into a non-boiling category. 

Threshold Sample. A file which will contain a sample of the time-history, first-derivative, 
second-derivative and boiling function for one heater. The purpose of this file is for 
checking the validity of the threshold values. 

Lower Percentile Limit, the lower percentile bound, used in calculating statistical parameters 
U pper Percentile Limit. The upper percentile bound, used in calculating statistical parameters. 
Cancel button. Exit the window 

Convert button. Begin performing data reduction on a file 

Batch Processing button. This button opens a window which allows the user to enter a file 
name which contains information about a batch of data reduction steps. 

B.4. GRAPH 

The GRAPH program is used to display heat flux data immediately after it has been 
acquired. Its program window, which is shown in Figure B.7, displays a grid of squares which 
represent the heaters in the heater array. To the left of the grid, a scale is displayed which relates 



180 


the colors to the power in mW that the heater is dissipating. Data points which exceed the scale 
are displayed as white squares. Below the grid is a box which displays the time in ms. 

In order to load a file into the graph program, first enter the file name of a binary data file 
into the File Name box. Double-click on the box in order to browse the files on the disk. Then 
enter the number of points to be loaded from the file in the Max. Points box. If all the points in 
the file are to be loaded, enter "0". 

Press Load in order to load the data from disk into memory and convert from voltage data 
to power data. The program will not respond at all while this operation is taking place. When it 
is completed, press Start to display the data on the grid. 

The data file can be displayed one step at a time, or any specified number of steps at a 
time, by using the Step button. For instance, zero in the Frames box will cause the data file to 
advance one frame every time the Step button is pressed. Ten in the Frames box will cause the 
data file to play for 1 1 frames and stop. 

Heat flux offset, resistance and area information is not used to perform the conversion 
from heater voltage to heater power. The heater resistance is assumed to be 1000 ohms. Since 
heater power, not heater heat flux, is displayed, then heater size is not used. 

B.4.1. "Graph" Window Controls 

Following is a summary of controls in the GRAPH program. These controls are shown in 
Figure B.7. 

Max. Points. Limits the maximum number of time steps that are loaded and displayed 
File Name. The file name of the binary file that is loaded and displayed. Double click on the 
box to activate a file browsing box. 

Load. Loads the binary file into memory and converts it from voltage data to heat flux. 

Start. Begins displaying the heat flux data on the grid one frame after another as fast as the 
computer hardware will allow. 

Max. Power. The maximum power level to display. The values between zero and this level are 
scaled to use the entire color scale, and values above the maximum power level are displayed 
as white squares. 

Rescale. Initiates the re-scaling operation on the data in memory. 

Frames. Number of frames to step forward when the Step button is pressed 
Time. The time text box displays the time from the starting point in milliseconds. 

B.5. FILE FORMAT SPECIFICATIONS 

B.5.1. Calibration File Format 

In order to modify the calibration file, it is important to know the format of the 
calibration file. The calibration file is simply a text file, with numbers separated by lines, and 
with text fields surrounded by quotation marks. The first part of the file contains information 
about the setup configuration that was used to make the calibration file. The second part of the 
file contains the actual calibration data. 

1 . Threshold voltage, mV 

2. No longer used 

3. Voltage step rate, Steps/s 

4. No longer used 

5. DeltaV, mV 

6. ADC Offset 

7. Scans per datapoint 



181 


8. Hardware Scanrate 

9. Gain index - No longer used 

10. Heater Method - 0 = All, 1 = Range, 2 = Specific 

11. First Heater in Range 

12. Last Heater in Range 

13. Number of heaters in Specific Heaters box 

14. Heater numbers for specific heaters. The above field defines how many there will be. If the 
above field is zero, then skip this field. 

15. Comments field, surrounded by quotes. 

This concludes the calibration setup data. The following fields consist of temperature- 
specific information. 

1. Temperature 

2. Date code 

3. Comments 

4. List of V cm d values, in mV. The number of values corresponds to the number of heaters that 
are specified above. 

B.5.2. Binary Data File Format 

The data points are saved in the binary file as 16 bit numbers. DAQBook data files 
encode a 10 V voltage range as an unsigned 16 bit integer. The custom A/D board encodes a 12 
V range as an unsigned 1 6 bit integer. The conversion from an unsigned integer to a floating 
point number depends on the A/D hardware type constant that is stored in the .TAG file. A 
factor of 10 or 12 is used in converting to a floating point number, depending on which hardware 
type is detected. 

B.5.3. Control Setup File Format 

The setup file for the control program is typically saved using a .CTL extension. It 
contains the following fields 

1. The first 16 lines contain the file names of the calibration files 

2. This variable is not presently used 

3. Gain Index - Not presently used 

4. A/D sampling rate 

5. A/D sampling duration 

6. Delay time - Not presently used 

7. Trigger source - Not presently used 

8. Temperature 

9. Method for selecting heaters to sample- 0 = All, 1 = Range, 2 = Specific 

10. First heater in range 

1 1 . Last heater in range 

12. Number of heaters in Specific Heaters box 

13. Heater numbers for specific heaters. The above field defines how many there will be. If the 
above field is zero, then skip this field. 

14. Data file format 

15. Comments from setup 

16. Setup file name 

1 7. A/D hardware type 

18. D/A hardware type 

19. A/D Channel Offset 



182 


B.5.4. Tag File Format 

The tag file typically has a .TAG extension. It is a text file that must be attached to the 
data file because the data file contains no information about how to interpret the binary file. It 
contains the CONTROL setup file format information listed above, and some information that is 
specific to a particular data file. It follows a format similar to the calibration file, with numbers 
on separate lines, and text fields surrounded by quotation marks. 

1 . The first part of the file contains the same information listed in the CONTROL setup file 
format information above. 

2. Comments from the main CONTROL window 

3. Date field 

4. Time field 

Several other files are necessary to perform the conversion from heater voltage to surface 
heat flux. A description of these files and their format is given here. 

B.5.5. Resistance File Format 

In order to calculate the heat flux more accurately from the heater voltage, two files 
containing heater resistance information are loaded. The first file contains information on the 
slope of the resistance vs. Temperature line, and the second file contains information on the y- 
intercept of this line. The equation y=mx+b is used to calculate the resistance, where y is the 
calculated resistance, x is the temperature, m is the slope and b is the y intercept. 

The format of both of these files is the same as the calibration files, except that instead of 
Vcmd values, slope information is saved in one file and y-intercept information in the other. 

B.5.6. Offset File Format 

The offset files contain the substrate conduction heat flux for each heater at a given 
temperature. These values are subtracted from the heat flux values that are calculated from the 
binary data files to obtain the value of the heat flux leaving the top of the heater elements. Thus, 
a different offset file must be specified for each heater temperature. The format for this file is 
the same as the calibration file format, except that instead of a V cm d value, it contains a list of 
heat fluxes. The important quantities in this file are the temperature and the offset values. The 
offsets are given in units of W/cm 2 ., 

B.5.7. Size File Format 

In order to calculate the heat flux more accurately, the area of each heater element, 
including a portion of the unheated surface between the heaters, is stored in this file. The format 
of this file is also the same as the calibration file format, except that instead of V cm d values, the 
file contains a list of heater areas, in units of cm 2 10 4 . That is, the values in the file must be 
multiplied by 10' 4 to obtain units of cm 2 . 



183 


B.6. FIGURES 


it Heater Array Calibration f” 



'j'SJU 


Figure B.l : CAL window 















184 



Figure B.3: CONTROL window 




185 



Figure B.4: CONTROL setup window 







186 




Boiling Function 


EATRULE \DAT\082397\0823, 


E:\TRULE\DAT \082397\0823_ 


E ATR U LE \D AT \082397\0823_ 


EATRULE U3FG\0828A.RES 


EATRULE \DAT\082397\0823_ 


EATRULE\CFG\0828B.RES 


EATRULE\DAT\082397\0823_ 


E AT R U LE \CFG \062QA. S IZ 


E AT R U LE \D AT \082397\0823_ 


E AT R U LE \D AT \082397\0823_ 


2500 


1.5E7 


EAT RULE \DAT \082397\0823_ 


Ml Post Processing 


Figure B.6: CONTROL post-processing window 

























187 








188 


APPENDIX C: CUSTOM A/D SYSTEM 

This appendix describes the design and operation of the custom A/D board that is used to 
collect heat flux data at very high speeds. Section C. 1 . describes the physical connections to the 
board, and how the I/O operations are programmed. Section C.2. describes the operation of the 
individual components on the board. 

C.l. CONNECTIONS AND I/O OPERATIONS 

C.1.1. Cabling 

The custom A/D system connects to the computer through a 25-pin male sub-D connector 
on the motherboard. The computer interfaces to the A/D system using a digital I/O adapter, the 
PCM-D24CTR from Computerboards, Inc. This device provides 24 channels configurable as 
either inputs or outputs. The Computerboards universal library is used to address the board in 
Microsoft Visual Basic. 

A cable (PCM-C37/33) was purchased from Computerboards to connect a female 37-pin 
sub-D connector to a specialized connector on the I/O board. A second cable was fabricated to 
map the digital inputs and outputs from the 37-pin connector to a 25-pin female sub-D connector 
which connects to the A/D board. This connector was adapted to a 25-pin female sub-D 
connector which plugs into the motherboard. Table C.6 shows how the pins of the 37-pin 
connector map into the 25-pin connector. The "Port" category contains the name of the input or 
output port that is addressed in software in order to read the data. Each of these ports can be 
programmed for either input or output. 



Input or Output 

25-pin 

3 7 -pin 

Port 

Group Address 

Output 

19-22 

1-4 

FirstportA 

Frequency Select 

Output 

18,17 

5,6 

FirstportA 

RESET 

Output 

13 

7 

FirstportA 

Increment 

Output 

14 

8 

FirstportA 

Data Values 

Input 

1-8 

9-16 

FirstportB 

Data Values 

Input 

9-12 

17-20 

FirstportCL 

DONE 

Input 

15 

21 

FirstportCH 

START 

Output 

16 

22 

FirstportCH 

Ground n 


23-25 

33 



Table C.6: List of A/D Cable Connections 


Table C.l lists the function of the test-point pins which are located along the edge of the 
board. These pins can be used to check vital functions when troubleshooting. 


Test Point # 

Function 

TP1 

+ 10 Volt voltage reference 

TP2 

D/A Converter Output (V cmd) 

TP3 

Pulse Signal 


Table C.7: Test Point Functions 









189 


C.1.2. Data acquisition and downloading procedure 

Each A/D card holds two distinct A/D systems. Each system digitizes 16 channels, and 
stores the digitized values in memory. Each of these memory segments is addressed as a 
separate "group" when the data is downloaded from the A/D card. Therefore, if 96 heaters are 
being digitized, it will be necessary to address 6 groups, groups 0 through 5, in order to 
download all the values. Table C.8 relates group address to which A/D card and which feedback 
card will be addressed. 


Group 

Address 

A/D 

Card 

Number 

Feedback 

Card 

Number 

0 

1 

1 

1 

1 

2 

2 

2 

3 

3 

2 

4 

4 

3 

5 

5 

3 

6 

6 

4 

7 

7 

4 

8 

8 

5 

9 

9 

5 

10 


Table C.8: Group Address Reference 


The sampling frequency is set by setting the frequency select value. Table C.9 lists the 
frequency select bit values and the corresponding sampling frequency. 


Sampling 

Frequency 

(samples/s) 

Register 

value 

10,000 

0 

5,000 

1 

2,500 

2 

1,250 

3 


Table C.9: Frequency Select Register Values 

The following procedure is implemented by the Visual Basic program to control the A/D 
board. Note that "pulse" means the signal goes from LOW to HIGH back to LOW. 






190 


To Collect 
Data: 

1 . Pulse RESET signal 

2. Set Frequency Select 

3. Pulse RESET 

4. When DONE goes HIGH, begin data reading sequence 

To Read Data: 

1 . Set group address 

2. Pulse RESET signal 

3. Read and store 12 bit word 

4. Pulse Increment Address 

5. When DONE goes HIGH, all data has been read from this 
group. Proceed to next group by returning to step 1 . If the 
last group has been read, then quit. 

6. Otherwise, return to step 3 to continue reading data. 

C.2. DETAILS OF A/D BOARD DESIGN 
C.2.1. Introduction 

This section describes in greater detail the design of the high-speed A/D system that was 
designed at the University of Denver by Mr. Richard Quine for acquiring data from the constant- 
temperature heater array at very high speeds. A schematic for the high-speed A/D board is 
included in Appendix F.3. The following text will refer often to the timing diagram in Figure 
C.l for clarity. 

The first and the central part of the design is the A/D chip. Typical A/D chips require an 
external sample and hold chip to stabilize the voltage that is being digitized. However, this 
particular A/D chip, the MAX 122 from Maxim, has sample and hold circuitry built into the chip 
itself. After digitization is finished, the 12-bit digital values will be stored sequentially in a 
memory chip. Finally, the board will communicate and transfer the data stored in memory to the 
laptop computer through a third party PCMCIA digital I/O card. 

This A/D chip utilizes successive approximation to convert an analog voltage into a 12- 
bit digital word. 1 3 clock cycles after digitization begins, the digital data is made available on the 
output bus of the chip. As a requirement of this research project, the A/D system must sample 
data at a rate as high as 10,000 samples/s/channel. Since each A/D chip will sample 16 channels 
that have been multiplexed down into one single analog input to the A/D chip, the A/D chip has 
to operate at a clock speed of 2.72 MHz in order to achieve an effective sampling rate of 10,000 
samples/sec/channel. In this design, the sampling rate is software adjustable using FI and F0 
signals. Counter (U4A) is used to divide the clock down by factors of 2 (LSB), 4, 8, and 16 
(MSB). Therefore the clock used runs at 5.44 MHz. Using this clock speed, sampling rates of 
10000, 5000, 2500, and 1250 samples/s/channel are achieved for the given factors. 

Following is a detailed calculation of the clock frequency requirements of the A/D board. 

Each channel requires 10 kilosamples/sec/channel 


f 10-KH 

Each A/D chip samples 1 6 channels. 

N 1 

Total frequency for A/D converter that serves 1 6 channel is calculated. 
f total N - 



191 


f total = ,60KH 

Total conversion time is calculated. 

1 

T 

^total 

x = 6.25-10 6 - sec 

From the timing diagram, Figure C.l, it takes a total of 13+4=17 clock cycles to achieve 
a conversion. 


T 

T clock 7 


Time per clock cycle 


T clock = 3 - 67 * 10 7 ' sec 

The clock frequency required to achieve 10 kilosamples/sec/channel is calculated. 

f 1 
clock 

T clock 


f clock= 2 - 72 - MH 

Static random-access-memory (SRAM) from Cypress is being used to store the data 
before it is transferred to the computer. 

The CY7C106A is a 256K*4 high performance CMOS SRAM. Since each chip is only 4 bits 
wide, three of the CY7C106A are used to store 12 bits of data. In other words, using three 
CY7C106A chips, the board can store up to 256 Ksamples of data before it is downloaded to the 
computer. 

In order to ensure clarity, italicized words indicate signals, and the forward slash/ 6 /”, is 
the notation for an inverted signal. For example, /B is the inverted B. Confusion can be 
minimized by constantly refering to the circuit schematic in Appendix F and to Figure C.l, the 
timing diagram. 

START ■ * - ASYCHRONI2ED START 


A 

CLK 

B 

/B 

C 

CD 

/BUSY 

D 


T=6.25 us 


J7_ri. r 


"i i 


...n n 


RESET ADD CTR 


i I 

■ V.. 
"1 


WRITE MEMORY 


MEM IN WR MODE 


CLK 

B 

/B 

n c 

INC MEM ADD CD 
4 /BUSY 


k INCMUXADD 


, 2nd CONV. BEGINS 


CTR STATE 
RUN 


11111111111 1234111 

RUN 


Figure C.l a: Begin conversion 



192 


CLK J 
C 

CD 

/BUSY 

D 


"i j ~ r]._n_m i_riJiJ"T_ru i. . n j i. 

WRITE LAST WORD 


! ' '3 

J L 


"fed 


INC MEM ADD ONE PAST LAST ADD 
TO CLOCK DONE (USA) FLIP-FLOP 


LAST CONVERSION 


CTR STATE 1111111111234 


RUN (U7A) FLIP-FLOP RESET BY /DONE 


RUN 

DONE 


MEM IS FULL 


MEM IN RD MODE 

Figure C.lb: Last Conversion 
Figure C. 1 : Timing Diagram of A/D System 


CLK 

C 

CD 

/BUSY 

D 

CTR STATE 

RUN 

DONE 


C.2.2. Analog to Digital Converter Chip Control Signals 

To initiate data acquisition, an external START signal is sent from the computer through 
PCMCIA. In order to follow the explanations below, constant referral to the A/D system circuit 
schematic in Appendix F is extremely helpful. The asynchronous START signal will cause the D- 
input in flip-flop A (U6A) to appear in the output Q. The CLK will then synchronize signal A on 
the positive going edge and output it in flip-flop B (U6B). As soon as /B becomes low (one CLK 
cycle after START), it sets flip-flop RUN (U7A) to high and resets flip-flop A (U6A) and C to 
low. Output of flip-flop C (U7B) and /RUN both being low will activate the /RD and /CS on the 
MAXI 22 and hence begin acquisition. Since A has been reset, /B becomes high in the next CLK 
cycle. When/S becomes high, flip-flop C (U7B) is not held reset and flip-flop RUN (U7A) is not 
held set anymore. RUN will stay high as long as DONE or PCRES stays low. DONE will go high 
only when the memory is all filled and ready to be transferred to the computer. XOR gate with 
one of the inputs tied to high +5V will act as an inverter. Before conversion, /BUSY signal is 
high, therefore flip-flop D (U21 A) has been reset to low. BUSY and /RUN is high, so the output 
of the NOR gate (U1 1 A) is low, so the output of counter (U10) kept loading 000 1 2 . Qc is low 
and /BUSY is high, output of the XOR gate, CD is high. During conversion, /BUSY signal will 
become low until conversion is finished and the 12-bit data is available on the output pins. 

/BUSY being low will not reset flip-flop D (U21A) anymore, therefore in the next CLK cycle, the 
output of D goes high until /BUSY goes low again. The positive edge of D will increment the 
multiplexer address INCMUXADD. Also with /BUSY low, CD will be low until /BUSY goes high 
that signifies conversion completes. The conversion will take 13 CLK cycles. Now that the 
conversion is finished, /BUSY and CD are both high and RUN is still high, the output of the 
NOR gate (U1 1 A) will turn into a high. The counter (U10) will begin counting from the next 
CLK cycle. After CTR counts to 0100 2 (4) 0 ), the CD signal will go from high to low. In the 
transition from high to low in CD, the memory address will be incremented by CD. Note that 
output of flip-flop C (U7B) depends upon CD, so when CD goes low as /BUSY remains high 
(after conversion), the next clock cycle will cause data acquisition to start all over again. The 
digitized voltage is output in a 12-bit data labeled MDAO being the LSB to MDA11 being the 
MSB. 



193 


C.2.3. Multiplexer Control Signals 

Before the first conversion, /RUN is high and therefore the output of the 4-Stage Binary 
Ripple Counter (U13A) is 0000 2 . The 1NCMUXADD signal is fed into the counter and every 
negative-going edge will advance the counter by one state. The 4-bit multiplexer address 
corresponds to one of the 16 analog inputs that is to be digitized. The output of the multiplexer is 
conditioned by analog circuits before entering the MAX 122. 

C.2.4. Memory Control Signals 

The memory chip can operate in either write or read mode. The CY7C106A is in write 
mode when the MAX 122 is transferring data into the memory. Conversely, read mode occurs 
when data is being transferred from the CY7C106A to computer. Write mode is controlled by 
signal /WR driven by C and INCMEMADD driven by CD. In read mode, /RDA or /RDB and 
ADDINC from PCMCIA serve as the control signals. One A/D board has two groups of A/D 
system. Each group serves 16 channels. To differentiate between groups, A and B refers to each 
individual group on the same board. In write mode, every group will write concurrently. Only in 
read mode do different groups need to be separated. This explains the reason for having /RDA 
and /RDB. 

In the write mode, conversion has just finished. 12-bit data is ready to be written to 
memory on MDAO to MDA11. Flip-flop W/R (U8B) is set by /B being low when the first 
conversion is initiated. This brings the S (select) pin on the data selector (U20) to low and 1 A, 
2A, 3 A, and 4A will be transferred to 1 Y, 2Y, 3Y, and 4Y. B being high for one CLK cycle will 
reset the address counters (U17A, U17B, U18A, U18B). Each negative going edge of 
INCMEMADD driven by CD will advance the counter (U17A) by one state. This will increment 
the memory address after the previous data has been written. /WR driven by C changes from low 
to high one CLK cycle after CD goes high. /WR going high will write data into memory. 1 8 bits 
are needed to address 256K memory. When the memory is filled, the 19 th bit on the counter (Q c 
in U13B) turns into a high. This will change the output of flip-flop DONE (U8A) to high. This 
DONE signal informs the computer that the memory is filled with data and ready to be read. 

From the previous paragraph, /DONE turns low when memory is ready to be read. 
/DONE will reset the flip-flop W/R (U8B), so S on data selector (U20) will turn high. Similar to 
the write cycle, 1 Y will be driven by ADDINC from the computer interface, 2Y is /RDB driven 
by GSELB, 3 Y is high, and 4Y is /RDA driven by GSELA. GSELA or GSELB is selected by the 
computer interface when reading the data to the computer. A PCRES signal is sent from the 
computer to clear the memory address before data is read. Now the address counters are all lows. 
In read mode, the increment address signal is controlled by the computer. /RDA will enable the 
tri-state buffers for group A (U22A, U22B, U23A) to take control of the data bus to the 
computer. /RDB will enable the tri-state buffers for group B (U24A, U24B, U23B). Meanwhile, 
/RDA will enable data to be put on the data bus to be stored into the computer. After all data has 
been read from the memory, again when the 1 9 th bit on the counter (Q c in U 1 3B) turns high, 
DONE will change to high to inform the computer. 

C.2.5. Conditioning Analog Circuits 

MAX 122 is a bipolar A/D converter which accepts voltages from -5 V to +5V. Since the 
input analog signal will vary from OV to 12V, it needs to be offset and attenuated before entering 
the MAXI 22. Op-Amp LF347 (U28A) with R1 and R2 will attenuate the voltage range of 12V 
to approximately 10V. R3, R4, and R7 is to offset the input voltage. 



194 


APPENDIX D: CONNECTIONS BETWEEN COMPONENTS 

A 15 pin male connector on the motherboard is used to supply power to the control 
system. Table D.l describes the pin assignment of this power connector. The same connector is 
located on the decoding board, and the pin assignments are identical, except that pins 1,2,5, and 
6 are not connected. +5V power and +24V power are not needed on the decoding board. 


Pin 

Function 

1,2 

+5V 

3,4 

+15V 

5,6 

+24V 

7,8 

-15V 

9,10 

-5V 

11,12,13,14,15, 

16 

GND 


Table D.l : Pin assignment for power connector on motherboard. 

A 9 pin female connector on the motherboard is used to connect a personal computer to 
the microprocessor control board using an RS-232 serial port connection. Table D.2 describes 
the pin assignment of the RS-232 connector. 


Pin 

Function 

2 

RXD 

3 

TXD 

4 

DTR 

8 

CTS/DSRDCD 

5 

GND 


Table D.2: Pin assignment for RS-232 connector on motherboard 

The 26-pin connectors on the motherboard are used to connect the feedback boards to the 
decoding board. Ribbon cables are used to make this connection. Table D.3 lists the pin 
assignment of the ribbon-cable connectors on the motherboard and the decoding board. Each 
connector carries 16 heater power leads and 10 ground leads. Originally, this large number of 
ground leads was specified so that it would provide a very small voltage drop between the 
motherboard ground and the decoding board ground bus bar. However, in practice the difference 
can be significant when one to two amps is flowing between the motherboard and the decoding 
board. 


Pin 

Function 

1 

Feedback board voltage-sensing lead 

2-5 

GND 

6-21 

Heater power lead connections 

22-26 

GND 


Table D.3: Pin assignments for 26-pin ribbon cable connectors 

Instead, the ground voltage controller circuit on the decoder board is used to maintain a 
steady ground voltage. In order for this to work properly, several wires in the ribbon cable must 






195 


be cut. Doing so increases the resistance in the current path between the ground on the feedback 
boards and the grounding bar on the decoding board. This is necessary because the control 
circuit on the decoding card is designed to draw the voltage of the ground bar down to a level 
that can be several mV lower than the ground plane of the motherboard. If the current path 
between the ground on the motherboard and the ground on the decoder board is too low in 
resistance, then the control circuit would have to sink a very large current in order to maintain 
the proper ground voltage. 

Table D.4 describes the pin assignment of the 26-pin ribbon-cable connections. The 
ribbon cables should connect pins of the same number on each end of the cable. 


Pin 

Function 

1 

Feedback board voltage-sensing lead 

2-5 

No connection 

6-21 

Heater power lead connections 

22-25 

No connection 

26 

Ground 


Table D.4: Modified pin assignments for 26-pin ribbon cable connectors 

50-pin ribbon cable connectors are used to connect the decoding board to the circuit 
board that holds the heater array. With the present heater array layout, each pair of adjacent 
wires on the ribbon cable connects to an individual heater. All the wires are used except the first 
two, pins one and two, of each cable. Table D.5 illustrates the arrangement of the ribbon cable 
connector pins. 


1 

3 

5 

7 

9 

11 

13 

15 

17 

19 

— 

47 

49 

2 

4 

6 

8 

10 

12 

14 

16 

18 

20 

.... 

48 

50 


Table D.5: Arrangement of ribbon cable connector pins. 


Since each adjacent pair of pins, such as 3 and 4, 5 and 6, etc, connects to a heater, all the 
pins on one side are assigned as ground pins, and are connected to the ground bar. Meanwhile 
all the pins on the other side are assigned as power leads, and wire-wrap connections are made 
from that pin to one of the heater leads from the feedback boards. 











196 


APPENDIX E: DATASHEETS FOR KEY PARTS 

The following pages contain reproductions of manufacturer data sheets for key parts in 
the control system. These data sheets contain information on offset voltage, offset drift, power 
supply levels and frequency response that are important when designing the control system. 



197 


□ ANALOG 
DEVICES 


Low Cost 
Analog Multiplier 


AD633 


FEATURES 

Four-Quadrant Multiplication 
Low Cost 8-Pin Package 

Complete — No External Components Required 
Laser-Trimmed Accuracy and Stability 
Total Error Within 2% of FS 
Differential High Impedance X and Y Inputs 
High Impedance Unity-Gain Summing Input 
Laser-Trimmed 10 V Scaling Reference 

APPLICATIONS 

Multiplication, Division, Squaring 
Modulatlon/Demodulatlon, Phase Detection 
Voltage-Controlled Amplifiers/ Attenuators/Filters 


CONNECTION DIAGRAMS 
8-Pin Plastic DIP (N) Package 



8-Pin Plastic SOIC (R) Package 


PRODUCT DESCRIPTION 

The AD633 is a functionally complete, four-quadrant, analog 
multiplier. It includes high impedance, differential X and Y in- 
puts and a high impedance summing input (Z). The low imped- 
ance output voltage is a nominal 10 V full scale provided by a 
buried Zener. The AD633 is the first product to offer these fea- 
tures in modestly priced 8-pin plastic DIP and SOIC packages. 

The AD633 is laser calibrated to a guaranteed total accuracy of 
2% of full scale. Nonlinearity for the Y-input is typically less 
than 0.1% and noise referred to the output is typically less than 
1 00 pV rms in a 10 Hz to 10 kHz bandwidth. A 1 MHz band- 
width, 20 V/ps slew rate, and the ability to drive capacitive loads 
make the AD633 useful in a wide variety of applications where 
simplicity and cost are key concerns. 

The AD633*s versatility is not compromised by its simplicity. 
The Z- input provides access to the output buffer amplifier, en- 
abling the user to sum the outputs of two or more multipliers, 
increase the multiplier gain, convert the output voltage to a cur- 
rent, and configure a variety of applications. 

The AD633 is available in an 8-pin plastic mini-DIP package 
(N) and 8-pin SOIC (R) and is specified to operate over the 
0°C to +70°C commercial temperature range. 



X2 

XI 

w 


PRODUCT HIGHLIGHTS 

1. The AD633 is a complete four-quadrant multiplier offered in 
low cost 8-pin plastic packages. The result is a product that 
is cost effective and easy to apply. 

2. No external components or expensive user calibration arc re- 
quired to apply the AD633. 

3. Monolithic construction and laser calibration make the de- 
vice stable and reliable. 

4. High (10 MQ) input resistances make signal source loading 
negligible. 

5. Power supply voltages can range from ±8 V to ± 1 8 V. The 
internal scaling voltage is generated by a stable Zener diode; 
multiplier accuracy is essentially supply insensitive. 


REV. A 

Information furnished by Analog Devices is believed to be accurate and 
reliable. However, no responsibility is assumed by Analog Devices for its 
use, nor for any infringements of patents or other rights of third parties 
which may result from its use. No license Is granted by implication or 
otherwise under any patent or patent rights of Analog Devices. 


One Technology Way, P.O. Box 9106 r Norwood, MA 02062-9106, USA 
Tel: 617/329-4700 Fax: 617/326-8703 







198 


AD633— SPECIFICATIONS {T a = + 25°C, V s = ±15 V, R l >2MI) 


Model 



AD633J 






(X-X 2 )(Y 1 -K) 


TRANSFER FUNCTION 


W - 

10 V 

+ z 


Parameter 

Conditions 

Min 

Typ 

Max 

Unit 

MULTIPLIER PERFORMANCE 






Total Error 

-10 V ^ X, Y £ +10 V 


±1 

±2 

% Full Scale 

T\iin t0 Tmax 



±3 


% Full Scale 

Seale Voltage Error 

SF = 10.00 V Nominal 


±0.25% 


% Full Scale 

Supply Rejection 

V s = ±14Vto±16V 


±0.01 


% Full Scale 

Nonlinearity, X 

X = ±10 V, Y = +10 V 


+ 0.4 

±1 

% Full Scale 

Nonlinearity, Y 

Y = ±10 V, X = +10 V 


±0.1 

±0.4 

% Full Scale 

X Feedthrough 

Y Nulled, X = ±10 V 


±0.3 

±1 

% Full Scale 

Y Feedthrough 

X Nulled, Y = ±10 V 


±0.1 

±0.4 

% Full Scale 

Output Offset Voltage 



±5 

±50 

mV 

DYNAMICS 






Small Signal BW 

V 0 = 0.1 V rms, 


1 


MHz 

Slew Rate 

V 0 = 20 V p-p 


20 


V/ps 

Settling Time to 1% 

A V 0 = 20 V 


2 


& 

OUTPUT NOISE 






Spectral Density 



0.8 


|iV/V Hz 

Wideband Noise 

f= 10 Hz to 5 MHz 


1 


mV rms 


f = 10 Hz to 10 kHz 


90 


jiV rms 

OUTPUT 






Output Voltage Swing 


±11 



V 

Short Circuit Current 

a 

o 

II 


30 

40 

mA 

INPUT AMPLIFIERS 






Signal Voltage Range 

Differential 

±10 



V 


Common Mode 

±10 



V 

Offset Voltage X, Y 



±5 

±30 

mV 

CMRRX, Y 

Vcm = ± 10 V, f = 50 Hz 

60 

80 


dB 

Bias Current X, Y, Z 



0.8 

2.0 

\xA 

Differential Resistance 



10 


MQ 

POWER SUPPLY 






Supply Voltage 






Rated Performance 



±15 


V 

Operating Range 


±8 


±18 

V 

Supply Current 

Quiescent 


4 

6 

mA 


Specifications shown in boldface arc tested on ail production units at electrical test. Results from those tests arc used to calculate outgoing quality levels. All min and 
max specifications arc guaranteed, although only those shown in boldface arc tested on all production units. 

Specifications subject to change without notice. 


ABSOLUTE MAXIMUM RATINGS' ORDERING GUIDE 


Supply Voltage 

Internal Power Dissipation 2 

+ 18 V 

500 mW 

±18 V 

Model 

Description 

Package 

Option 

Output Short Circuit Duration 


AD633JN 

8-Pin Plastic DIP 

N-8 

Storage Temperature Range 

. -65°C to +150°C 

AD633JR 

8-Pin Plastic SOIC 

R-8 

Operating Temperature Range 

. . . 0°C to +70°C 

+300°C 

1000 V 

AD633JR-REEL 

8-Pin Plastic SOIC 

R-8 

Ijead Temperature Range (Soldering 60 sec) 
ESD Rating 





NOTES 

'Stresses above those listed under “Absolute Maximum Ratings” may cause 
permanent damage to the device. This is a stress rating only and functional 
operation of the device at these or any other conditions above those indicated in 
the operational section of this specification is not implied. 

2 8-Pin Plastic Package: Bj* - 1 65°C/W; 8-Pin Small Oulfine Package: ftj* = 1 55*C/W. 

Tor supply voltages less than ± 18 V, the absolute maximum input voltage is equal 
to the supply voltage. 

-2- REV. A 


199 


National Semiconductor 


December 1994 


LF155/LF156/LF157 Series Monolithic 
JFET Input Operational Amplifiers 


General Description 

These are the first monolithic JFET input operational ampli- 
fiers to incorporate well matched, high voltage JFETs on the 
same chip with standard bipolar transistors (BI-FETtm Tech- 
nology). These amplifiers feature low input bias and offset 
currents/low offset voltage and offset voltage drift, coupled 
with offset adjust which does not degrade drift or common- 
mode rejection. The devices are also designed for high slew 
rate, wide bandwidth, extremely fast settling time, low volt- 
age and current noise and a low 1/f noise corner. 

Advantages 

■ Replace expensive hybrid and module FET op amps 

■ Rugged JFETs allow blow-out free handling compared 
with MOSFET Input devices 

■ Excellent for low noise applications using either high or 
low source impedance— very low 1 /f comer 

■ Offset adjust does not degrade drift or common-mode 
rejection as in most monolithic amplifiers 

■ New output stage allows use of large capacitive loads 
(5,000 pF) without stability problems 

■ Internal compensation and large differential input volt- 
age capability 

Applications 

■ Precision high speed integrators 

■ Fast D/A and A/D converters 

■ High impedance buffers 

■ Wideband, low noise, low drift amplifiers 

■ Logarithmic amplifiers 


■ Photocell amplifiers 

■ Sample and Hold circuits 

Common Features 

(LF155A, LF156A, LF157A) 

■ Low input bias current 30 pA 

■ Low Input Offset Current 3 pA 

■ High input impedance 10l2n 

■ Low input offset voltage 1 mV 

■ Low input offset voltage temp, drift 3 jtV/'C 

■ Low input noise cuirent 0.01 pA/TRi 

■ High common-mode rejection ratio 100 dB 

■ Large dc voltage gain 106 dB 

Uncommon Features 



LF155A 

LF156A 

LF167A 

Units 

■ Extremely 

4 

1.5 

(Av = 5) 
1.5 

J&S 

fast settling 
time to 
0.01% 

■ Fast slew 
rate 

5 

12 

50 

V/ /AS 

■ Wide gain 

2.5 

5 

20 

MHz 

bandwidth 
■ Low input 
noise voltage 

20 

12 

12 

nV/vRz 


©1 W6 National Samtanduclor Corporation TL/H 75646 


RRO-B3CM1 15/ Printed kiU. S.A. 


LF155/LF156/LF157 Series Monolithic JFET Input Operational Amplifiers 




200 


Absolute Maximum Ratings 

If Military/ Aerospace specified devices are required, contact the National Semiconductor Sales Office/Distributors for 
availabflity and specifications. 

(Notes) 


Supply Voltage 
Differential Input Voltage 
Input Voltage Range (Note 2) 

Output Short Circuit Duration Coi 

TjMAX 

H-Package 

N-Package 

M-Package 

Power Dissipation at T* = 25°C (Notes 1 and 9) 


LF155A/6A/7A 

±22V 

±40V 

±20V 

Continuous 


LF155/6/7 

±22V 

±40V 

±20V 

Continuous 


LF355B/6B/7B 

LF255/6/7 

±22V 

±40V 

±20V 

Continuous 


LF355/6/7 

LF356A/6A/7A 

± 18V 
±30V 
± 16V 
Continuous 


23°C/W 

-6^ to + 150°C 


wc/w 

65°C/W 


23°C/W 

— 65®C to +15<TC 


400 mW 
1000 mW 
670 mW 
380 mW 

16CTC/W 
65’C/W 
130°C/W 
1 95°C/W 

23°C/W 

— 65*CtO + 150°C 


400 mW 
1000 mW 
670 mW 
380 mW 

160°C/W 

65*C/W 

13CTC/W 

195°C/W 

23°C/W 

— 65*C to + 150*C 


H-Package (Still Air) 560 mW 560 mW 400 mW 400 mW 

H-Package (400 LF/Min Air Flow) 1200 mW 1200 mW 1000 mW 1000 mW 

N-Package 670 mW 670 mW 

M-Package 380 mW 380 mW 

Thermal Resistance (Typical) 0 ja 

H-Package (Still Air) 160‘C/W 160*C/W 16CTC/W 160°C/W 

H-Package (400 LF/Min Air Flow) 65°C/W 65°C/W 65’C/W 65*C/W 

N-Package 130°C/W 130-C/W 

M-Package 195-C/W 195-C/W 

(Typical) 0jc 

H-Package 23°C/W 23*C/W 23*C/W 23°C/W 

Storage Temperature Range — 65 c Cto + 150®C — 65° C to +150*0 — 65*Cto + 150°C — 65'C to +1 

Soldering Information (Lead Temp.) 

Metal Can Package 

Soldering (10 sec.) 300° C 300°C 300°C 300°C 

Dual-ln-Llne Package 

Soldering (10 sec.) 260*C 260*C 260*C 

Small Outline Package 

Vapor Phase (60 sec.) 21 6°^ 21 5°C 

Infrared (15 sec.) 22 °°C 22CTC 

See AN-450 “Surface Mounting Methods and Their Effect on Product Reliability" for other methods of soldering surface 
mount devices. 

ESD tolerance 

(100 pF discharged through 1 .5 kH) 1000V 1000V 1000V 1000V 


DC Electrical Characteristics (Noie3>T A = t. 


Co tuition* 


R s = 50n.T A = 25‘C 
Over Temperature 


R s =50n 


R s =50n, (Note 4) 


Tj = 25“C, (Notes 3, 5) 
Tj^TniGH 


T| = 25*C, (Notes 3, 5) 
Tj^THIQH 


V S = ±15V,T A =25“C 
Vo=±10V. R L = 2k 
Over Temperatire 


V s = ±15V, R L =10k 
V S =±15V. R L =2k 


Symbol 

Parameter 

Vos 

Input Offset Voltage 

A Vqs /AT 

Average TC of Input 
Offset Voltage 

ATC/AVqs 

Change in Average TC 
with Vqs Adjust 

los 

Input Offset Current 


Input Bias Current 

Rin 

Input Resistance 

Avot 

Large Signal Voltage 
Gain 

Vo 

Output Voltage Swing 


25”C 


LF155A/6A/7A 


Typ 

Max 

1 

2 

2.5 

3 

5 


LF366A/6A/7A 


Typ Max 






























































201 


Absolute Maximum Ratings 


II Military/ Aerospace specified devices are required, contact the National Semiconductor Sales Office/ Distributors for 
availability and specifications. 

(Note 8) 





LF355B/6B/7B 

LF355/6/7 


LF155A/6A/7A 

LF155/6/7 

LF255/6/7 

LF355A/6A/7A 

Supply Voltage 

±22V 

±22V 

±22V 

+ 18V 

Differential Input Voltage 

±40V 

±40V 

±40V 

±30V 

Input Voltage Range (Note 2) 

±20V 

±20V 

±20V 

± 16V 

Output Short Circuit Duration 

Continuous 

Continuous 

Continuous 

Continuous 

TjMAX 





H-Package 

150°C 

150*C 

115°C 

1 15°C 

N-Package 



100°C 

ioo°c 

M-Package 



100*0 

100°C 

Power Dissipation at Ta = 25*C (Notes 1 and 9) 




H-Package (Still Air) 

560 mW 

560 mW 

400 mW 

400 mW 

H-Package (400 LF/Min Air Flow) 

1200 mW 

1200 mW 

1000 mW 

1000 mW 

N-Package 



670 mW 

670 mW 

M-Package 



380 mW 

380 mW 

Thermal Resistance (Typical) 0 ja 





H-Package (Still Air) 

160°C/W 

160°C/W 

160°C/W 

160°C/W 

H-Package (400 LF/Min Air Flow) 

65®C/W 

65°C/W 

65°C/W 

65°C/W 

N-Package 



130°C/W 

130°C/W 

M-Package 



195°C/W 

195°C/W 

(Typical) 0jc 





H-Package 

23*C/W 

23°C/W 

23*C/W 

23°C/W 

Storage Temperature Range 

— 65*C to + 150°C 

— 65*C to +150°C 

— 65 C C to + 150°C 

-65°Cto +150°C 

Soldering Information (Lead Temp.) 





Metal Can Package 





Soldering (10 sec.) 

300°C 

300*C 

300*C 

300°C 

Dual-In-Line Package 





Soldering (10 sec.) 


260° C 

260°C 

260°C 

Small Outline Package 





Vapor Phase (60 sec.) 



215°C 

215°C 

Infrared (15 sec.) 



220°C 

220°C 


See AN-450 “Surface Mounting Methods and Their Eflect on Product Reliability" for other methods of soldering surface 


mount devices. 

ESD tolerance 

(100 pF discharged through 1 .5 kfl) 1000V 1000V 1000V 1000V 




































































202 


DC Electrical Characteristics t a = t, = 25’c, v s = ±isv 


Parameter 

LF165A/155, 

LF255, 

LF355A/355B 

LF355 

LF156A/156, 

LF256/356B 

LF356A/356 

LF1 57 A/167 
LF257/357B 

LF357 A/357 

Units 


Typ 

Max 

Typ 

Max 

Typ 

Max 

Typ 

Max 

Typ 

Max 

Typ 

Max 


Supply Current 

2 

4 

2 

4 

5 

7 

5 

10 

5 

7 

5 

10 

mA 


AC Electrical Characteristics t a = t, = 25’c, v s = +isv 





LF15S/255/ 

LF156/256, 

LF1 56/256/ 

LF1 57/257, 

LF157/267/ 


Symbol 

Parameter 

Conditions 

355/355B 

LF356B 

356/356B 

LF357B 

357/357B 

Units 




Typ 

Min 

Typ 

Min 

Typ 


SR 

Slew Rate 


5 

7.5 

12 



V/jaS 







30 

50 

V/ja$ 

GBW 

Gain Bandwidth 


2.5 


5 


20 

MHz 


Product 








t s 


(Note 7) 

4 


1.5 



JAS 


Equivalent Input Noise 

R s =100fl 





mm 

nV/VRz 


Voltage 

1 = 100 Hz 

25 







1 = 1000 Hz 

20 


■ 


8K1SHI 

nW,/Hz 


Equivalent Input 

1 = 100 Hz 

0.01 


0.01 


0.01 

pA/^Hz 


Current Noise 

1 = 1000 Hz 

0.01 


0.01 


0.01 

pA/^Hz 

C|N 

Input Capacitance 


3 


3 


3 

PF 


Notes for Electrical Characteristics 

Note 1: The maximum power dissipation for these devices must be derated at elevated temperatures and is dictated by Tjmax, «]A. and the ambient temperature, 
T a . The maximum available power dissipation at any temperature is Pd - (T )M ax -TaV*|A or the 25*C PdMAX- whichever is less. 

Note 2: Unless otherwise specified the absolute maximum negative input voltage is equal to the negative power supply voltage. 


Note 3: Unless otherwise stated, these test conditions apply: 



LF155A/6A/7A 

LF155//6/7 

LF265//6/7 

LF355A/6A/7A 

LF356B/6B/7B 

LF355//6/7 

Supply Voltage, V s 
Ta 

Thigh 

±15VSV s ^±20V 
-55°C<:Ta^ + 125'C 
+ 1 25°C 

±15V<:V S £ ±20V 
-25*C^T a ^ +85*C 
+ 85°C 

±15V£V$<:±18V 
0*CiT A S +70”C 
+ 70*C 

±15V^V$±20V 
0*C^T a ^+70*C 
+ 70°C 

Vg= ± 15V 
0 °C^T a ^+70"C 
+ 70°C 


and Vos. >Q and los are measured at Vcw« 0. 

Note 4: The Temperature Coefficient of the adjusted input offset voltage changes only a smaN amount (0.5*iV/*C typically) for each mV of adjustment from its 
original unadjusted value. Common-mode rejection and open loop voltage gain are also unaffected by offset adjustment 

Note & The irput bias currents are junction leakage currents which approximately double for every 10*C increase in the junction temperature, Tj. Due to limited 
production test time, the input bias currents measured are correlated to junction temperature. In normal operation the junction temperature rises above the ambient 
temperature as a result of internal power dssrpatlon, Pd. T|-T a +0|a Pd where is the thermal resistance from junction to ambient Use of a heat sink is 
recommended if input bias current is to be kept to a minimum. 

Note & Supply Voltage Rejection is measured for both supply magnitudes increasing or decreasing simultaneously, in accordance with common practice. 

Note 7: Setting time is defined here; for a unity gain inverter connection using 2 kft resistors for the LF 165/6. It is the time retired for the error voltage (Ihe 
voltage at the inverting input pin on the ampler) to settle to within 0.01% of its final value from the time a 10V step input is applied to the inverter. For the LF157, 
A v - -5. the feedback resistor from output to input is 2 kn and the output step is 10V (See Setting Time Test Circuit). 

Note 8: Refer to RETS155AX for LF155A, RETS 1 55 X for LF155, RETS 158 AX for LF156A, RETS156X for LF156, RETS 157 A for LF157A and RETS 1 57 X for 
LF157 military specifications. 

Note 9: Max. Power Dissipation is defined by the package characteristics. Operating the part near the Max Power Dissipation may cause the part to operate 
outside guaranteed limits. 























































































203 


APPENDIX F: CONTROL SYSTEM SCHEMATICS 

This section contains the complete schematics and part lists for the control system, 
including the feedback control board in section F.l. , the microprocessor control board in Section 
F.2. , the custom high-speed A/D board in Section F.3. , and the motherboard in Section F.4. . 
Only the first feedback board schematic is shown, because the other 15 feedback circuits on each 
board are identical. 



204 


F.l. FEEDBACK CONTROL BOARD SCHEMATIC 



+ 2 4 V 


















205 



0171 

























206 


F.2. MICROPROCESSOR CONTROL BOARD SCHEMATIC 









































8 



+ 12 V VOLTAGE REGULATOR 





















209 


F.3. CUSTOM HIGH-SPEED A/D BOARD 

















210 



014 

CY7C106 




































212 














213 































DEPARTMENT OF ENGINEERING 


5 



































217 



J 30 J31 J32 J 3 3 J34 J35 J36 

TO HEATERS FB CARD TO DACBOOK A/D CARD TO DACBOOK FB CARD TO HEATERS 

26 PIN 62 PIN 20 PIN 100 PIN 20 PIN 62 PIN 26 PIN 






































219 














220 


APPENDIX G: SOURCE CODE LISTINGS FOR VISUAL BASIC 
PROGRAMS 

The following chapters contain the source code listings for the programs that are 
described in Appendix B. 


G.l. LISTING OF “CONTROL. VBP” 


Module=modADC; . . \TRIM\MODADC . BAS 

Module-modDaqBook; . . \DAQBOOK . BAS 

Module=modShared; MODSHARE.BAS 

Module-modCBW; . . \CB\VBWIN\CBW . BAS 

Module=modConvert ; MODCONVE . BAS 

Form=FRMSETUP. FRM 

Form= . . \TRIM\FRMCONFI . FRM 

Form=FRMVIEWC . FRM 

Form-. . \TRIM\FRMDAC . FRM 

Form=FRMADC . FRM 

Fo rm= FRMCONVE . FRM 

Form-FRMAUTOM. FRM 

Form-FRMCALFI . FRM 

Form-FRMAUTO. FRM 


Form=FRMBATCH . FRM 

Object-{ F9043C88-F6F2-101A-A3C9-08002B2F49FB} #1 . 0#0; COMDLG16 . OCX 
Object={BDC217C8-EDl6-llCD-956C-0000C04E4C0A} #1 . 0#0; TABCTL16 . OCX 
Object- { FAEEE763-117E-101B-8933-08002B2F4F5A} #1 . 0#0; DBLIST1 6 . OCX 
Obi ect={ 00028C0 1-0000-0000-0000-000 00000004 6 } #1 . 0#0; DBGRID16. OCX 

Ref erence=*\G{ BEF6E001-A874 -1O1A-8BBA-00AAO0300CAB } #1 . 0#0#C : \WINDOWS\SYSTEM\OC25 . DLL#Standard 


OLE 


Ref erence=*\G { 00025E01-0000-0000-0000-00000000004 6 } #2 . 5#0#C: \ WINDOWS \ S YSTEM\ DA025 1 6 . DLL#Microsof t 
DAO 2.5 Object Library 

Object- { 648A5603-2C6E-101B-82B6-000000000014 }#1 . 0#0; MSCOMM16 . OCX 
ob ject={A8B3B723-0B5A-101B-B22E-00AA0037B2FC}#1.0#0; GRID16.0CX 
Pro jWinSize—55 , 360, 251, 397 
ProjWinShow=2 
I con Form-" f rmMain" 

HelpFile-" ” 

ExeName="CONTROL . EXE" 

Path="F : \BIN" 

Name-" Pro j ectl " 

HelpContextID= M 0 ,, 

StartMode=0 

VersionCompatible=”0" 

MajorVer=l 
MinorVer-0 
RevisionVer=0 
AutoIncrementVer-0 
Serve rSupportFiles-0 

VersionCompanyName="University of Denver" 


G.l.l. Listing of MOD ADC.BAS 

Attribute VB_Name = "modADC" 

Option Explicit 
> ****** 

» * This module contains code for declaring the A/D 
’* data types and for handling the low-level A/D 
' * functions 


i ***** 

1 * the ADC type is the data type that will be used 
'* to interface with the A/D card. I’m trying to 
•* design it so that the software won’t have to know 
’ * anything more about the hardware than what s in 
' * the ADC members, so that all the low-level 
’* hardware details can be isolated in one module - 
’* that is, this module. 

r ***** 



221 


Public Type ADCtype 

’* I don't anticipate needing different gains for 
' * different channels, so I'm just using one gain 
'* for all channels 
Gain As Integer 

'* Sampling rate in samples/second, for all channels 
Freq As Integer 

'* Channels is TRUE if active, FALSE if inactive 
Channels ( 160 ) As Boolean 
’* How many samples to take 
numscans As Integer 

'* How to trigger - Hardware, software, etc. 
trigger As Integer 
• * * * * * 

* * i am going to map all data into a 2-D array, 

* * even if the input routines read the data as 
'* 1-D. 

i * 

1 * This buffer will not be used if writing data 

' * to disk . 

* * 

»* First index is the next highest channel read, 

’* second index, is the data point. 

• ★ * * * * 


Buffer (96, 40) As Double 

'* File name that data will be saved to when 
' * writing directly to disk 
filename As String 
FileNumber As Integer 
HardwareType As Integer 
End Type 

'* Specifies whether we are using Daqbook or Custom A/D 

Public ADCHardwareType As Integer 

' * Trigger source Constants 

'* This specifies a software trigger 

Public Const MANUALTRIG = 0 

'* List of gains for the drop-down list-boxes 
Public GainList As ListType 

'* List of trigger choices for drop-down list-boxes 
Public TriggerList As ListType 
’* General ADC setup variable 
Public ADC As ADCtype 

'* to signal when ADC has been initialized 

Public ADCInitialized As Boolean 

Public Const ADCLASTCHANNEL = 95 

Public Const ADCNOHARDWARE = True 

Public Const ADCNONE = 0 

Public Const ADCDAQBOOK = 1 

Public Const ADCCUSTOM = 2 


i ***** 

'* The following are declarations pulled out of 
■* dbk2disk . f rm, from the daqbook software. 

» ***** 


» * This constant determines the number of elements in the 
* * array that spools data to disk 
Const ARRAYSIZE = 16000 

Dim DataArray ( 1 To ARRAYSIZE) As Integer 

Dim ScanSize As Integer 

Dim MaxBuf Index As Integer 

Dim Readlndex As Integer 

Dim ScansProcessed As Long 

Dim FHandle As Integer 

Dim er As Integer 

Dim FileNumber As Integer 

. * Declare the fast, low-level disk I/O function for getting data to 
■* disk without the buffer overflowing. 



222 


Private Declare Function fWrite Lib "kernel” Alias "_lwrite" (ByVal hFile As Integer, lpBuff As 
Any, ByVal wBytes As Integer) As Integer 

'* ADCOffset is the number that is added to the physical channel number 
** that is sampled, but not to the Vcmd heater number that is output or the 

* * heater number reference that is saved to disk. 

* * EXAMPLE: I want to calibrate heaters 16-31 (16 heaters) using 

’* the daqbook base unit (channels 0-15). I use an offset of -16. That 
’* way, the outputs a command voltage to heater 16, but it will sample the 

* * output voltage with channel 16+ADCOffset or 16+(-16)=0 -> channel 0 

* * of the daqbook. 

' * EXAMPLE: Use an offset of +16 for the expansion module, since expansion 

'* module channel 0 is actually referenced as channel 16. 

Public ADCOffset As Integer 

’ * variables and constants for the custom A/D system 

Const ADFREQ10000 * 0 
Const ADFREQ5000 - 1 
Const ADFREQ2500 = 2 
Const ADFREQ1250 = 3 
Const ADCBOARDNUM « 0 

'* variable true if group contains channels to sample, 

’* false if it can be skipped 
Dim ADCGroups (10) As Integer 
Dim ADCFirstGroup As Integer 
Dim ADCLastGroup As Integer 
Dim ADCBuffer (16000, 96) As Integer 
Dim ADCFreq As Integer 
Dim ADCGroupNum As Integer 
Public Type ADCListType 
Num As Integer 
text (5) As String 
Value (5) As Integer 
End Type 

Public ADCList As ADCListType 
'* parallel port protocol 
Public ADCPPP As Integer 
' * Extended Parallel Port on TI computer 
Public Const ADCEPP = DaqProtocolSMC666 
' * 8-bit protocol 

Public Const ADC8BIT - DaqProtocol8 

Public Sub ADC2Disk() 

Dim TriggerConst As Integer 
Dim chans (ADCLASTCHANNEL) As Integer 
Dim gains (ADCLASTCHANNEL) As Integer 
'Dim stChan As Integer 
' Dim endChan As Integer 
1 * i already defined i. TDR 
Dim i As Integer 
Dim Cnt As Integer 
Dim Freq As Single 
Dim MaxScansInBuf As Integer 
Select Case ADCHardwareType 
Case ADCDAQBOOK 

ScansProcessed = 0 
Readlndex = 1 

'* Returns the operating system file handle 
FHandle = FileAttr ( ADC . FileNumber , 2) 

'* I'm getting rid of these lines because I 
'* want to be able to specify any combination 
’* of channels. TDR 

1 stChan = Val (StartChannelTextBox . Text) 



223 


'endChan = Val (EndChannelTextBox . Text ) 

• * disable channel tagging 
er = VBdaqAdcSetTag (0) 

•Configure the channels with their gains. 

’Each channel can have a different gain, but for simplicity s 
'sake, I've made them all the same. 

1 cnt = 0 

'For i - stChan To endChan 
' chans (cnt) = i 

• gains (cnt) = GainCombo . Listlndex 

• cnt = cnt + 1 
'Next i 

’* Instead of the above lines, I want to use 
'* The ADC. Channels array to form the ch { ) array 
'* That is necessary for the following function. 

’ * TDR 
Cnt = 0 

For i = 0 To ADCLASTCHANNEL 

If ADC. Channels (i) = True Then 
chans (Cnt) = i + ADCOffset 
gains (Cnt) - ADC. Gain 
Cnt = Cnt + 1 
End If 
Next i 

' * the cnt variable should now contain the number 
'* of items in the ch and gain arrays, and can be 
'* used for scansize. 

'* set active channels and gains for each channel 
1 * in the daqbook. 

er = VBdaqAdcSetScan (chans 0 , gains 0, Cnt) 

Freq - ADC . Freq 

er = VBdaqAdcSetFreq (Freq) 

'Set the trigger parameters 
If ADC. trigger - MANUALTRIG Then 
TriggerConst = DtsSoftware 
End If 

er = VBdaqAdcSetTrig (TriggerConst, False, 0, 0, 0) 

'Setup the background acquisition to place new readings 

•into the array dataArray in the background. The other parameters 

'provide infinite cycling through this array. 

' scanSize = endChan - stChan + 1 
ScanSize - Cnt 

MaxScansInBuf = Int (ARRAYSIZE / ScanSize) 

MaxBuf Index = MaxScansInBuf * ScanSize 

er = VBdaqAdcRdNBack (DataArray () , MaxScansInBuf, True, False) 

> The collection and storage of the data happens in the 

’ tmrADC Timer event under the Timer control, in the form frmADC. 

'* These two lines set the timer interval to 50 ms, and 

'* enable the timer. 

frmADC ! tmradc. interval = 50 

frmADC! tmradc. Enabled = True 

'* if it’s setup for a manual trigger, then trigger 
'* the data acquisition NOW. 

If ADC. trigger = MANUALTRIG Then 
er = VBdaqAdcSof tTrig ( ) 

End If 

Case ADCCUSTOM 

'* set frequency to 10,000 
ADCSetFreq ( ADFREQ10000 ) 



224 


’* Output reset pulse to reset buffer address 
ADCReset 

'* start timer, wait for done signal. 

frmADC ! tmrwait . Enabled = True 

' * write caption to indicate status 

frmMain! lblStatus. Caption = "Waiting for trigger" 

'* refresh the form so caption is changed 

frmMain. Ref resh 

' * Send the start signal to the custom A/D 
ADCStartCustom 

End Select 
End Sub 

Sub ADCStartCustom ( ) 

Dim retval As Integer 

' * send reset signal 

' * reconfigure port for output 

retval = cbDConf igPort (0 , FIRSTPORTCH, DIGITALOUT) 

' * Pulse the output 

retval = cbDBitOut (0, FIRSTPORTA, 21, 1) 
retval = cbDBitOut (0, FIRSTPORTA, 21, 0} 

1 * Reconfigure port for input 

retval = cbDConf igPort (0, FIRSTPORTCH, DIGITALIN) 

End Sub 


Sub SetADCO 

Dim i As Integer 

»* close ADC before implementing new settings 
ADCClose 

ADCHardwareType = ADCList .Value { SetupData . ADChwtype) 

Select Case ADCHardwareType 
Case ADCDAQBOOK 

ADC. Gain = GainList .Value (SetupData . Gainindex) 

ADC.Freq = SetupData . SampRate 
Case ADCCUSTOM 

’ * set gain to 1 

ADC. Gain = GainList . Value (0 ) 

SetupData . Gainindex = 0 

»* get the frequency to either 10,000, 5,000, 2500, or 1250. 

For i = 0 To 3 

If SetupData . SampRate <= 10000 / 2 A i Then 
ADC.Freq = 10000 / 2 A i 
End If 
Next i 

SetupData . SampRate = ADC.Freq 
End Select 

< * Set the filename for the A/D conversion from the text box 
ADC. filename = SetupData. filename 

ADC.numscans = SetupData . Duration * SetupData . SampRate 
ADC. trigger = TriggerList . Value (SetupData . Trigsrc) 

Select Case SetupData . Heaters .method 
Case ALLACTIVE 

For i = 0 To ADCLASTCHANNEL 
ADC. Channels (i) = True 
ADCGroups ( i \ 16) = True 

Next i 

Case RANGEACTIVE 

For i = 0 To ADCLASTCHANNEL 
ADC . Channels (i ) = False 
ADCGroups (i \ 16) = False 
Next i 

For i = SetupData. Heaters. Range (0) To SetupData . Heaters . Range ( 1) 



225 


ADC. Channels (i) = True 
ADCGroups { i \ 16) = True 
Next i 


Case SPECIFIC 

’* set groups initially to false 
For i = 0 To 5 

ADCGroups (i) - False 
Next i 

For i = 0 To ADCLASTCHANNEL 

ADC. Channels (i) = SetupData . Heaters . List ( i ) 

If SetupData. Heaters . List (i) = True Then 
ADCGroups (i \ 16) = True 
End If 
Next i 
End Select 

ADCOffset « SetupData. ADCOff set 


** initialize ADC hardware with new settings 
ADCInit 

End Sub 

Sub ADCClose ( ) 

■* close the daqbook. But first check if the program is 
»* with or without hardware. 

If ADCNOHARDWARE = False Then 
VBdaqAdcStopBack 
VBdaqClose 
End If 

Unload frmADC 
End Sub 

Sub ADCDef ine ( ) 

Dim i 
> *■*★■*★ 

'* Initialize Variables 
« * * * * * 


'* Define trigger options for drop-down box 
TriggerList . Num = 1 
TriggerList .Value (0) = MANUALTRIG 
TriggerList . text ( 0 ) = "Manual” 

' * Define ADC options 
ADCList . Num = 3 

ADCLis t. Value (0) = ADCNOHARDWARE 

ADCList. text (0) = "No Hardware" 

ADCList .Value (1) = ADCDAQBOOK 
ADCList . text (1) = "DaqBook" 

ADCList. Value (2) « ADCCUSTOM 
ADCList. text (2) = "Custom A/D" 

• + Make sure all ADC channels are turned off. 

For i = 0 To ADCLASTCHANNEL 
ADC .Channels (i ) = False 
Next i 

■* Define gain-options for drop-down boxes 
GainList.Num = 4 
For i = 0 To GainList.Num - 1 
GainList .Value (i) = i 

GainList . text ( i ) = Str$ (2 ~ GainList .Value ( i) ) 
Next i 

ADCFirstGroup = 0 


running 



ADCLastGroup = ADCLASTCHANNEL / 16 
End Sub 

Sub ADCGetData { ) 

i **•*■*★ 

' * This subroutine handles low-level control of 
’ * the A/D input. It takes a variable of type 
' * ADCtype as an arguement and returns the 
' * results in an array within that structure. 

' * It is only for collecting small amounts 
’* of data. 

i ★ ★■*■**■ 

’ * Values are returned in mV, in the buffer ADC . Buffer ( 0, i ) 
'* where i is from 0 to ADC.numscans -1 

Dim i As Integer 

Dim er As Integer 

Dim Buffer (4000) As Integer 

Dim Cnt As Integer 

Dim TriggerConst As Integer 

Dim chans (160) As Integer 

Dim gains (160) As Integer 

Dim Freq As Single 

Dim LngDataPoint As Long 

Select Case ADCHardwareType 
Case ADCDAQBOOK 

' * set to no channel tags 
er = VBdaqAdcSetTag (0) 

'* assign the chans array 
Cnt = 0 

For i = 0 To ADCLASTCHANNEL 

If ADC . Channels (i) = True Then 
chans (Cnt) = i + ADCOffset 
gains (Cnt) - ADC. Gain 
Cnt = Cnt + 1 
End If 
Next i 

er = VBdaqAdcSetScan (chans () , gainst), Cnt) 

* * set the sampling frequency from the ADC structure 
Freq = ADC. Freq 

' * set sampling frequency in hardware 
er = VBdaqAdcSetFreq (Freq) 

’Set the trigger parameters 
If ADC. trigger = MANUALTRIG Then 
TriggerConst = DtsSoftware 
End If 

’* set trigger in hardware 

er = VBdaqAdcSetTrig (TriggerConst, False, 0, 0, 0) 

’ * save the software trigger command to the hardware 
If ADC. trigger = MANUALTRIG Then 
er = VBdaqAdcSoftTrig 
End If 

'* Read data into buffer using forground command 
er = VBdaqAdcRdNFore (Buffer, ADC.numscans) 

' * convert hex data to voltage values 
For i = 0 To ADC.numscans - 1 

LngDataPoint = Buffer(i) 

If LngDataPoint < 0 Then 

LngDataPoint = Buffer (i) + 2 A 16 
End If 

ADC. Buffer (0, i) = (CDbl (LngDataPoint ) / 2 A 16 
* 10000 ) 

/ Val (GainList . text (SetupDat a. Gain index) ) 

Next i 
End Select 
End Sub 



227 


Function ADCGetWordO 

Dim fpb As Integer, fpcl As Integer, word As Integer, retval As Integer 
retval = cbDln (ADCBOARDNUM, FIRSTPORTB, fpb) 
retval = cbDln (ADCBOARDNUM, FIRSTPORTCL, fpcl) 

»* convert bit and nibble to unsigned 16-bit word 
ADCGetWord = (fpb + 256 * fpcl - 2048) * 2 A 4 
End Function 

Sub ADCIncrChan (steps As Integer) 

Dim retval As Integer, i As Integer, j As Integer 
'* This routine just sets the channel increment bit 

'* delay loops are added to try to get A/D cards to 
1 * keep from skipping. Counting to 100 seems to work 
• * ok for the 486 laptop. 

For i = 1 To steps 

retval = cbDBitOut (ADCBOARDNUM, FIRSTPORTA, 7, 1) 

For j = 1 To 100 
Next j 

retval = cbDBitOut (ADCBOARDNUM, FIRSTPORTA, 7, 0) 

For j = 1 To 100 
Next j 
Next i 

End Sub 

Sub ADCInitO 

Dim i As Integer, j As Integer 
Dim retval As Integer 

»* initialize daqbook hardware, if hardware is present 
Select Case ADCHardwareType 
Case ADCDAQBOOK 

retval = VBdaqlnit (LPTl , 7) 

■ * Set up for unipolar input 
retval = VBdaq200SetMode (0, 0, 0) 

' * set parallel port protocol 
retval = VBdaqSetProtocol ( ADCPPP) 

Case ADCCUSTOM 

* * configure digital i/o port 

' * FIRSTPORTA, 8 bits, is the digital output channels 
retval - cbDConf igPort (0, FIRSTPORTA, DIGITALOUT) 

* * FIRSTPORTB, 8 bits, is the first 8 bits of the 12 Bit word, 
retval - cbDConf igPort (0, FIRSTPORTB, DIGITALIN) 

' * FIRSTPORTCL is the last 4 bits of the 12 bit word 
retval - cbDConf igPort (0 , FIRSTPORTCL, DIGITALIN) 

i* FIRSTPORTCH is 4 bits, the first of which is the DONE bit, second 
'* is the start bit. Initially configure for input 
retval = cbDConf igPort (0, FIRSTPORTCH, DIGITALIN) 

End Select 

End Sub 

Sub updatePercent (numscans, i) 

Static oldPC As Long, PercentComplete As Long 
1 * Display the percent complete 
oldPC = PercentComplete 

PercentComplete = CLng(i) * 100 / (numscans - 1) 

If Not oldPC = PercentComplete Then 

frmMain ! lblStatus . Caption = "Downloading " + Str (PercentComplete) + % 

End If 
End Sub 


Sub ADCReadCustomO 

Dim i As Integer, j As Integer, 
Dim ScanLine As String 


k As Integer, channel As Integer, 


skip As Integer 



228 


frmADC! tmrwait. Enabled = False 

frraMain! lblStatus .Caption = "Downloading ..." 

frmMain. Refresh 

ADCReset 

»* define an increment size for incrementing the 
' * reading of the 10kHz data 
For k = 0 To 3 

If ADC.Freq = 10000 / 2 * k Then 
skip - 2 * k 
End If 
Next k 

For k = ADCFirstGroup To ADCLastGroup 

1 * perform following steps only if these groups are active 
If ADCGroups (k) = True Then 
ADCSetGroup (k) 

ADCReset 

For j = 0 To ADC.numscans - 1 
For i = 0 To 15 

channel = i + k * 16 

ADCBuf f er { j , channel) = ADCGetWord 

ADClncrChan (1) 

Next i 

' + skip ahead (skip - 1) points in time 
ADClncrChan ( (skip - 1) * 16) 

Call updatePercent< (ADCLastGroup - ADCFirstGroup) * ADC.numscans, ADC.numscans * 

(k - ADCFirstGroup)) 

DoEvents 
Next j 
End If 
Next k 

frmMain! lblStatus .Caption = "Writing to Disk ..." 

For j = 0 To ADC.numscans - 1 

For i = 0 To ADCLASTCHANNEL 

If ADC . Channels (i) = True Then 
• * Write datapoint 

Put ADC.FileNumber, , ADCBuf fer(j, i) 

End If 
Next i 
DoEvents 
Next j 

ADCStop 

End Sub 

Sub ADCReset ( ) 

Dim retval As Integer 
’ * send reset signal 

retval = cbDBitOut(0, FIRSTPORTA, 6, 1) 
retval = cbDBitOut(0, FIRSTPORTA, 6, 0) 


End Sub 


Function ADCSetGroup (Group As Integer) 

Dim bit (4) As Integer, i As Integer, retval As Integer 
For i = 3 To 0 Step -1 

If Group >= 2 A i Then 

Group = Group - 2 ~ i 
bit ( i ) = 1 

Else 

bit(i) = 0 
End If 

retval = cbDBitOut(0, FIRSTPORTA, i, bit(i)) 

Next i 

ADCGroupNum = Group 



End Function 


Sub ADCStopO 

1 * Halt background data collection. 

Select Case ADCHardwareType 

Case ADCDAQBOOK 

er = VBdaqAdcStopBack ( ) 

'* Shut off data collection timer 
frmADC ! tmradc . Enabled = False 

Case ADCCUSTOM 

* * shut off the wait timer 
frmADC ! tmrwait . Enabled = False 
ADCReset 
End Select 

Close ADC. FileNumber 

'* Notify the main form that data acquisition is 
■* finished. 

Call f rmMain. ADCDone 


End Sub 

Public Sub ADCTimerSub ( ) 

'* This is the code that the timer tmrADC calls every 
' * time interval. 


1 * * * 

'* Most of this code is from the daqbook example 
' * dbk2dsk . 

i ***** 

Dim active As Integer 

Dim Buf f erOverrun As Integer 

Dim Unprocessed As Long 

Dim Ints As Long 

Dim FirstBufSize As Long 

Dim SecondBuf Size As Long 

Dim Cnt As Long 

Buf f erOverrun = VBdaqAdcGetBackStat (active, Cnt) 

Debug. Print cnt, buf f erOverrun 

If Buf f erOverrun Then 

Call ADCBuff erOverrun 
Exit Sub 
End If 

If Cnt > ScansProcessed Then 'New data available 
Unprocessed = Cnt - ScansProcessed 
Ints = Unprocessed * ScanSize 
If Ints > 16000 Then 

Call ADCBuff erOverrun 
Exit Sub 

End If , 

If Ints + Readindex > MaxBuf Index Then 'With array wrap-around 

FirstBufSize - MaxBuflndex - Readindex + 1 

er = fWrite (FHandle, DataAr ray (Readindex) , FirstBufSize * 2) 
Readindex = 1 

SecondBufSize = Ints - FirstBufSize 

er = fWrite (FHandle, DataArray (Readindex) , SecondBufSize * 2 
Readindex = Readindex + SecondBufSize 
Else ’w/O array wrap-around 

er = fWrite (FHandle, DataArray (Readindex) , Ints * 2) 
Readindex = Readindex + Ints 
End If 
End If 

ScansProcessed = Cnt 

’ PercentCompleteText . Text = 100 * ScansProcessed / ADC.NumScans 
'If the desired number of scans is exceeded, stop the acquisition. 



230 


If ScansProcessed >= ADC.numscans Then 
Call ADCStop 
End If 

End Sub 

Sub ADCBuf f erOverrun { ) 

er = VBdaqAdcStopBack () 

MsgBox "Memory Buffer Overrun .. Computer too slow writing to disk.." 

Chr$ ( 10) + "Scan rate is too Fast.." 

Close ADC . FileNumber 

frmADC ! tmradc. Enabled = False 

End Sub 

Function ADCSetFreq { Freq As Integer) 

Dim bit {4 To 5) As Integer, i As Integer, retval As Integer 
Select Case Freq 

Case ADFREQ10000 
bit ( 4 ) =0 
bit ( 5 ) = 0 
Case ADFREQ5000 
bit ( 4 ) = 1 
bit ( 5 ) = 0 
Case ADFREQ2500 
bit ( 4 ) = 0 
bit ( 5 ) = 1 
Case ADFREQ1250 
bit ( 4 ) = 1 
bit {5 ) = 1 
End Select 
For i = 4 To 5 

retval = cbDBitOut{0, FIRSTPORTA, i, bit ( i ) ) 

Next i 

End Function 


G.1 .2. Listing of MODSHARE.BAS 

Attribute VB_Name = "modShared" 

Option Explicit 
> ***** 

' * This module contains general declarations 
’ * and procedures that are common to several of 
'* these programs. 

• ***** 


> ***** 

• * TYPE DECLARATIONS 
» ***** 


Public Type ListType 

Value (16) As Integer 
text (16) As String 
Num As Integer 
End Type 

Public Type HeaterType 

' * method of selecting heaters 
method As Integer 

1 * array containing specific heaters to sample 
List (160) As Boolean 

1 * array containing lowest and highest heater 

' * to sample 

Range (2) As Integer 

1 * number of heaters to be sampled 

Num As Integer 


+ Chr$ (13) + 


End Type 



231 


’ * * * * Data Type to hold calibration setup information 
Type CalSetupType 

'* Heater Output threshold voltage 
Vthresh As Double 

' * How fast Vcmd will increase/decrease 
Slew As Double 

'* following was the previous definition 

' * How large a step Vcmd will take 

’* however, this variable is now used for the 

'* number of Vcmd steps per second 

Vstep As Double 

'* Vcmd to start at 

Vmin As Double 

' * Maximum Vcmd to attain 

'* Now used as the maximum difference between 
' * high and low Vcmd when doing the bisection 
1 * method 
Vmax As Double 

' * How many times to repeat calibration cycle 
' * for each point 
Rep As Double 

’* number of scans to average for each vcmd step 

numscans As Double 

'* The rate to gather these scans 

ScanRate As Double 

' * defined in order to preserve compatibility 
' * with other setupdata type 
SampRate As Double 

' * Temperature that bath will be held at 
temp As Double 

1 * Index of the gain value in the GainList 
Gainindex As Integer 

'* Information on which heaters to sample 
Heaters As HeaterType 
* * Comments 
Comments As String 

1 * filename for saving and loading 
FileName As String 

’* hardwaretype variable to preserve compatibility 
ADChwtype As Integer 
ADCOffset As Integer 
Duration As Double 
Trigsrc As Integer 
End Type 

Public Type CalType 

'* calibration temperature 
temp As Double 

»* array of Vcmd values for each heater element 
Vcmd (160) As Double 
Comments As String 
Date As Date 
End Type 

Public Position (-1 To 8, -1 To 8) As Integer 
» ***** 

’ * CONSTANTS 

i * * * * 

'* Data File Format Constants 
Public Const TEXTFORMAT = 0 
Public Const BINFORMAT = 1 

* * heater method constants 

Public Const ALLACTIVE = 0 
Public Const RANGEACTIVE = 1 
Public Const SPECIFIC = 2 

' * Heater area in cm A 2 

Public Const AvgHeaterArea = 0.000625 
'Public Const AvgHeaterArea = 0.0007466 

Public Function ChgExt ( FileNamel As String, Extension As String) As String 



232 


<* return a string with a different file extention 
Dim Lngth As Integer 
Dim Seg As String 
Dim i As Integer 

ChgExt = FileNamel 

'* find the total length of the string 
Lngth = Len (ChgExt) 

'* see if any of the last four characters are 
' * periods 
If Lngth > 3 Then 

For i = Lngth To Lngth - 3 Step -1 
Seg — Mid$ (ChgExt, i, 1) 

If Seg = " . " Then 

ChgExt = Left$ (ChgExt, i - 1) 

End If 
Next i 

' * add on new extension 
ChgExt = ChgExt + Extension 
End If 

End Function 

Sub WriteCalSetup (SetupOut As CalSetupType, FileNumber As Integer) 
Dim i As Integer 

' * write all members of the SetupData structure 
' * to file with number FileNumber, in binary format. 

Write #FileNumber , SetupOut . Vthresh 
Write #FileNumber, SetupOut . Slew 

' * Step rate for stepping through new bisection method steps 
Write #FileNumber, SetupOut . Vstep 
Write #FileNumber , SetupOut . Vmin 

’* Vmax is now the Delta-V value in the bisection method 

Write #FileNumber, SetupOut . Vmax 

’* set this unused variable to the ADCOffset, 

’* so that it can be saved in the setup file 

SetupOut. Rep = SetupOut . ADCOffset 

Write #FileNumber , SetupOut. Rep 

' * Scans per data point 

Write #FileNumber, SetupOut . numscans 

1 * Hardware Scan Rate 

Write #FileNumber, SetupOut . ScanRate 
Write #FileNumber, SetupOut . Gainindex 
Write #FileNumber, SetupOut . Heaters .method 
Write #FileNumber, SetupOut . Heaters . Range ( 0) 

Write #FileNumber , SetupOut . Heaters . Range { 1 ) 

Write # FileNumber, SetupOut . Heaters . Num 
For i = 0 To ADCLASTCHANNEL 

If SetupOut . Heaters . List (i) = True Then 
Write #FileNumber, i 
End If 
Next i 

Write #FileNumber , SetupOut . Comments 
End Sub 

Sub ReadCalSetup (CalSetupIn As CalSetupType, FileNumber As Integer) 
■* read all the values of SetupData into a variable 
Dim Heaterlndex As Integer 
Dim i As Integer 

Input #Fi leNumber , CalSetupIn .Vthresh 
Input #FileNumber, CalSetupIn . Slew 
Input #FileNumber , CalSetupIn. Vstep 
Input # FileNumber , CalSetupIn . Vmin 
Input #FileNumber, CalSetupIn. Vmax 
Input #FileNumber , CalSetupIn . Rep 

* * se t the adcoffset to the unused variable in the setup file. 

CalSetupIn. ADCOffset = CalSetupIn . Rep 

Input #FileNumber , CalSetupIn . numscans 

Input #FileNumber , CalSetupIn . ScanRate 

Input #FileNumber , CalSetupIn . Gainindex 

Input # FileNumber , CalSetupIn . Heaters . method 



233 


Input #FileNumber, CalSetupIn . Heaters . Range ( 0 } 

Input #FileNumber, CalSetupIn . Heaters . Range ( 1 ) 

Input #FileNumber, CalSetupIn . Heaters . Num 
For i = 0 To CalSetupIn . Heaters . Num - 1 
Input #FileNumber, Heaterlndex 

CalSetupIn. Heaters . List (Heaterlndex) = True 

Next i 

Input #FileNumber, CalSetupIn . Comments 
End Sub 

Sub ReadCal (ByRef Calln As CalType, FileNumber As Integer) 
Dim i As Integer 
Input #FileNumber , Calln. temp 
Input #FileNumber, Calln. Date 
Input #FileNumber r Calln . Comments 
For i = 0 TO ADCLASTCHANNEL 

Input #FileNumber, Calln. Vcmd(i) 

Next i 
End Sub 

Sub WriteCal (CalOut As CalType, FileNumber As Integer) 

Dim i As Integer 
Write #FileNumber, CalOut. temp 
Write #FileNumber, CalOut. Date 
Write #FileNumber, CalOut . Comments 
For i = 0 To ADCLASTCHANNEL 

Write #FileNumber, CalOut .Vcmd { i ) 

Next i 
End Sub 


G.1.3. Listing of MODCONVE.BAS 

Attribute VB_Name = "modConvert" 

Option Explicit 
Type binary 

Value (96) As Byte 
End Type 
Type fluxtype 

Value (96) As Double 
End Type 


Dim offset As Double 

Public formatnum As Integer 

Const STANDARD = 0 

Const MATRICES = 1 

Const GNUPLOT = 2 

Const MPEG = 3 

Const IMAGETOOL = 4 

Const MATRIXFILES = 5 

Const AVGFLUX = 6 

Const TIMEAVG = 1 

Const RMS = 8 

Const PROBDIST = 9 

Const FFT = 10 

Const BOIL = 11 

Const SAMPLE = 12 


Sub BitRemap (array ( ) As Byte, output ( ) As Byte, _ 

heaterlist ( ) As Integer, setupin As SetupType) ,,, nn . 

Dim k As Integer, j As Integer, byteVal As Integer, bitVal(lOO) 
Dim NewByteVal (100) As Byte, x As Integer, y As Integer 
' * Decode entire heater array 


As Byte 


For j = 0 To setupin. Heaters. Num - 1 

NewByteVal (heaterlist (j ) ) = array (j) 

Next j 

NewByteVal (96) = 0 

'* form a binary array variable which will be written to the 



234 


' * output file, 
k = 0 

For y = 8 To -1 Step -1 
For x - -1 To 8 

* * subtract 1 from ’’position” result because it starts at 
’* heater 1, not heater 0 

output (k) = NewByteVal (Position(x ; y) - 1) * 255 
k = k + 1 
Next x 
Next y 


End Sub 


Sub CalcBoilFunc (ByRef BoilFuncO As Byte r setupin As SetupType, ByRef Flux() As fluxtype, _ 
k() As Integer, TimeStep As Double, FluxThreshold As Double, _ 

dqdtthreshold As Double, d2qdt2threshold As Double, ByRef dqdt ( ) As Double, _ 

ByRef d2qdt2 O As Double) 

Dim TimeStepSqrd As Double 

Dim j As Integer 

TimeStepSqrd = TimeStep A 2 

For j = 0 To setupin. Heaters . Num - 1 

' * Only values from index 1 and up are valid. 

>* Absolute values are used for the following, so threshold can be taken 
>* estimate first derivative with centered difference 

dqdt(j) = Abs (Flux (k (2) ) . Value (j ) - Flux (k (0) ) .Value (j ) ) / (2 * TimeStep) 

•* estimate second derivative with centered difference 

d2qdt2 { j ) = Abs (Flux (k (2) ) .Value (j ) - 2 * Flux { k ( 1 )). Value ( j ) + Flux ( k ( 0 )). Value ( j ) ) / 

TimeStepSqrd 

If (dqdt(j) > dqdtthreshold Or d2qdt2(j) > d2qdt2threshold _ 

Or Flux (k { 1) ) .Value ( j ) > FluxThreshold) Then 
' * set bit in boiling function variable to 1 

1 * NOTE: 1 is not TRUE. TRUE = -1. Comparing this value to 
1 * TRUE will always result in a FALSE. 

BoilFunc(j) = 1 

Else 

BoilFunc(j) - 0 
End If 
Next j 
End Sub 

Sub setbit (ByRef array () As Byte, j As Integer) 

' * This function is only designed to set a bit to 1 that was 
'* previously zero. 

Dim ByteNum As Integer, BitNum As Integer 
ByteNum - j \ 8 
BitNum ® j Mod 8 

array (ByteNum) = array (ByteNum) + 2 BitNum 
End Sub 

Sub subBoilFunc ( ) 

Dim Flux (4) As fluxtype 
Dim BoilFunc (2500) As binary 

Dim k{4) As Integer, Reload As Integer, heaterlist ( 160 ) As Integer 
Dim inputf ilenumber As Integer, Output FileNumber As Integer, _ 
j As Integer, Heaterlndex As Integer, i As Integer, _ 
numscans As Integer, output (100) As Byte, BoilFile As Integer, __ 

HeaterGroup ( 5 ) As Integer, CLLength (2500 ) As Integer, _ 

TimeHistoryFile As Integer, Index As Integer, g As Integer 

Dim MinHeater As Integer, MaxHeater As Integer 

Dim ResFilel As String, ResFile2 As String, AreaFile As String, __ 
sep As String, Header As String 

Dim setupin As SetupType 



235 


Dim offset (160) As Double, FullScale As Double, TimeStep As Double, _ 

TimeStepSqrd As Double, OutData(160) As Double, BoilSum{160) As Double, _ 
BoilFlux { 5 ) As Double, BoilFrac{5) As Double, _ 

time As Double, FluxThreshold As Double, dqdtthreshold As Double, _ 
d2qdt 2 threshold As Double, d2qdt2(100) As Double, dqdt(100) As Double, _ 
LocalBoilFrac { 160 ) As Double, RingFrac(5) As Double, RingFlux{5) As Double 
Dim SumFlux (2500) As Double, SpaceFlux { 100 ) As Double, SpaceAvg(5) As Double, _ 
RingAvg ( 5 ) As Double, SumCenter As Double, LowPercent As Double, _ 

HighPercent As Double, LocalNorm{-90 To 160, 160) As Double, _ 

RingHigh (5 ) As Double, RingLow(5) As Double, RingNorm (-20 To 160, 5) As Double, 

RingSum As Double, TotalSum As Double, TotalLow<5) As Double, _ 

TotalHigh { 5 ) As Double, TotalNorm(-20 To 160, 5) As Double 
Dim Sum As Double, low(100) As Double, high(100) As Double, DistWidth ( 100 ) As Double 
LocalBoilFlux (100) As Double 

Dim BoilCount ( 5 ) As Long, LocalBoilCount ( 1 60 ) As Long, _ 

RingCount (5 ) As Long, CLTotal As Long, LocalProb ( -90 To 160, 160) As Long, _ 

RingProb ( -20 To 160, 4) As Long, TotalProb (-20 To 160, 5) As Long 

HeaterGroup (0) = 0 
HeaterGroup ( 1) = 4 
HeaterGroup (2 ) = 16 
HeaterGroup (3) = 36 
HeaterGroup ( 4 ) = 64 
HeaterGroup (5) = 96 

time =0 , 

• * insure that resistance files will be loaded the first time through 

Reload = True 

ResFilel = f rmConvert ! txtresf ilel . text 

ResFile2 = f rmConvert ! txtresf ile2 . text 

AreaFile = f rmConvert ! txtAreaFile . text 

FluxThreshold = Val ( f rmConvert ! txtf luxthreshold . text ) 

dqdtthreshold = Val (frmConvert ! txtdqdtThreshold. text ) 

d2qdt 2 threshold = Val ( frmConvert ! txtd2qdt2Threshold . text ) 

LowPercent = Val ( frmConvert ! txtLowPercent . text ) / 100 
HighPercent = Val ( frmConvert ! txtHighPercent . text ) / 100 

'* define column seperator - chr$(9) is a Tab 
sep = Chr$ ( 9 ) 

' * open input file and load setup information 

Call openinputf ile (setupin, input filenumber, frmConvert ! txtinputfile . text ) 

Call OpenOutputFile (formatnum, OutputFileNumber , frmConvert ! txtoutputf ile . text ) 

Call subReadOf fset (offset, f rmConvert ! txtoffsetf ile . text) 

Call subHeaterList (setupin) 

BoilFile = FreeFile 

Open frmConvert ! txtBoilFile . text For Output As BoilFile 

TimeHistoryFile = FreeFile . 

Open frmConvert ! txtTimeHistoryFile . text For Output As TimeHistoryFile 

Heaterlndex = 0 

For i = 0 To ADCLASTCHANNEL 

If setupin. Heaters . List (i) = True Then 
heaterlist (Heaterlndex) = i 
Heaterlndex = Heaterlndex + 1 

End If 
Next i 

FullScale = SetFullScale (setupin. ADChwtype) 

TimeStep = 1 / setupin . SampRate 
TimeStepSqrd = TimeStep A 2 

numscans = setupin . Duration * setupin. SampRate 

■* set the initial value of the index variables 
k { 0 ) = 0 
k ( 1 ) = 1 
k (2 ) = 2 



For i = 0 To numscans - 1 
time = TimeStep * i 

'* load voltage on heaters for one timestep into 
’ * OutData matrix 

Call subLoadStep (setupin, inputf ilenumber , FullScale, OutData) 

< * calculate power from voltage using resistance files 
1 * place result in Flux matrix 

Call CalcFlux {OutData, Flux < k (2 )) .Value, offset, ResFilel, ResFile2, AreaFile, 
setupin. Temp, setupin. Heaters . Num, Reload) 

Call CalcBoilFunc (BoilFunc (i) .Value, setupin, Flux, k, TimeStep, _ 
FluxThreshold, dqdtthreshold, d2qdt2 threshold, dqdt, d2qdt2) 

For j = 0 To setupin. Heaters .Num 

If BoilFunc(i) .Value(j) = 1 Then 

•* sum the number of boiling occurrences 
LocalBoilCount ( j ) = LocalBoilCount { j ) + 1 

•* sum the boiling heat fluxes 
BoilSum ( j ) = BoilSum ( j ) + Flux (Ml) ) .Value (j ) 

'* sum the probability distributions 
1 * assign an index to a probability bin 
Index = Int (Flux (k{l) ) .Value (j ) ) 

'* add one to the probability bin 

LocalProb (Index, j) = LocalProb { Index, j) + 1 

End I f 

< * sum the space-averaged, time-resolved compontent 
SumFlux(i) = SumFlux(i) + Flux ( k ( 1 )) .Value ( j ) 

• * sum the time-averaged, space-resolved compontent 
SpaceFlux(j) = SpaceFlux(j) + Flux (k ( 1 )) .Value (j ) 

Next j 

'★ rotate the index variable 
k (3) = k ( 0 ) 
k (0) = k (1) 
k (1) = M2) 
k<2) = M3) 

Call subContactLine (BoilFunc (i) .Value, CLLength(i), heaterlist, setupin) 
CLTotal = CLTotal + CLLength(i) 

Call subUpdateStatus (numscans, i) 

DoEvents 
Next i 

’* calculate probability density parameters 
'* calculate the width of the distribution 
For j = 0 To setupin. Heaters .Num - 1 
Sum = 0 

For i = -20 To 160 

»* normalize local distribution interval 
If LocalBoilCount (j ) > 0 Then 

LocalNorm(i, j) ■ CDbl (LocalProb ( i , j)) / CDbl (LocalBoilCount (j ) ) 

Else 

LocalNorm(i, j) = 0 
End If 

Sum = Sum + LocalNorm(i, j) 

If Sum >= LowPercent Then 
low(j) = i + 1 
Exit For 
End If 
Next i 
Sum = 0 

For i = 160 To -20 Step -1 

Sum = Sum + LocalNorm(i, j) 

If Sum >= HighPercent Then 
high ( j ) = i - 1 
Exit For 
End If 
Next i 

DistWidth ( j ) = high(j) - low(j) 

If high ( j ) - low(j) < 0 Then DistWidth(j) = 0 
If LocalBoilCount (j) > 0 Then 

Local Boil Flux ( j ) = BoilSum(j) / LocalBoilCount ( j ) 

Else 



237 


Local Boil Flux { j ) = 0 

End If 
Next j 


For i = 0 To numscans - 1 

Call BitRemap(BoilFunc(i) .Value, output, heaterlist, setupin) 

« * add three because the corner heaters are also included 
For j = 0 To 99 

Put #OutputFileNumber , , output (j) 

output (j) = 0 
Next j 

» * calculate the average of the boiling function over the center 
' * four heaters 

For j = 0 To 3 . 

SuinCent er = SumCent e r + Boi IFunc ( i ) .Value (heaterlist ( 3 ) ) 

Next j 

1 * divide the sum by 4 to get the average 
SumCenter = SumCenter / 4 

** print the time and the average value to a data file 

Print #TimeHistoryFile, Str(i * TimeStep) + sep + Format ( SumCenter , ’’scientific ) 
’* reset the sumation variable to zero 
SumCenter = 0 

’* all other system tasks to execute 
DoEvents 
Next i 

' * obtain sumations 
For i = 0 To 4 

For j = HeaterGroup (i ) To HeaterGroup ( i +1) - 1 

RingCount (i) = RingCount(i) + LocalBoilCount ( j ) 

LocalBoilFrac ( j ) = LocalBoilCount ( j ) / numscans 

RingAvg ( i ) = RingAvg(i) + SpaceFlux(j) 

1 * sum up probability distributions for the rings 
For g = -20 To 160 

RingProb (g, i) = RingProb(g, i) + LocalProb(g, j) 

Next g 

If LocalBoilCount (j ) > 0 Then 

RingFlux(i) — RmgFlux(i) + BoilSum(j) / LocalBoilCount ( j ) 

End If 
Next j 

sum the total count of boiling events 
BoilCount (i) * BoilCount (i ) + RingCount(i) 

1 * normalize the ring distributions for number of boiling occurrances 

’ * in that ring, and calculate high and low 

RingSum = 0 

TotalSum = 0 

For g = -20 To 160 

* * normalize ring distribution 
If RingCount (i ) > 0 Then 

RingNorm(g, i) — RingProb{g, i) / RingCount (i) 

End If 

TotalProb{g, i) = TotalProb(g, i) + RingProb(g, i) 

If BoilCount (i) > 0 Then 

TotalNorm(g, i) = TotalProb(g, i) / BoilCount (i) 

End If 

TotalProb (g, i + 1) = TotalProb(g, i) 

' * sum the distribution at each interval 
RingSum = RingSum + RingNorm(g, i) 

TotalSum = TotalSum + TotalNorm(g, i) 

• * check to see if the probability limit has been reached 
If RingSum <= LowPercent Then 

’ * set the lower limit value 
RingLow(i) = g + 1 
End If 

If RingSum <= 1 - HighPercent Then 
' * set upper limit value 
RingHigh(i) = g + 1 



238 


End If 

If TotalSum <= LowPercent Then 
TotalLow(i) = g + 1 
End If 

If TotalSum <= 1 - HighPercent Then 
TotalHigh { i ) = g + 1 
End If 

Next g , ^ . . 

'* The partition indexes (k) mark the BOTTOM of the interal containing 
•* the heat fluxes. Therefore, the NEXT interaval (k+1) is the 
'* partition between the lower and higher probabilities. 


>* calculate the sumation for average boiling flux over 
1 * section of heaters 

BoilFlux { i ) = BoilFlux { i ) + RingFlux(i) 

• * aC id current count and flux summations to the summation 

* * for the next step 

SpaceAvg ( i ) = SpaceAvg(i) + RingAvg(i) 

BoilCount ( i + 1) = BoilCount(i) 

BoilFlux (i + 1) = BoilFlux (i ) 

SpaceAvg (i + 1) = SpaceAvg (i) 

'* divide the sumations to obtain the averages 
BoilFlux ( i } * BoilFlux (i) / HeaterGroup (i + 1) 

RingFlux (i ) = RingFlux(i) / (HeaterGroup ( i + D - HeaterGroup d ) ) 

BoilFrac { i ) = BoilCount (i) / numscans / HeaterGroup (i + 1) 

RingFrac(i) = RingCount(i) / numscans _ 

/ {HeaterGroup (i + 1) - HeaterGroup ( i ) ) 

RingAvg { i ) = RingAvg(i) / (HeaterGroup { i + 1} - HeaterGroup ( l ) ) / numscans 

SpaceAvg (i) = SpaceAvg (i) / HeaterGroup ( i +1) / numscans 
Next i 

• * Calculate boiling heat flux 

Print #BoilFile, ''Local Boiling Fraction" 

Call subWriteHeater ( setupin, LocalBoilFrac, BoilFile, heaterlist) 

Print #BoilFile , "Local Boiling Heat Flux 

Call subWriteHeater (setupin, LocalBoilFlux, BoilFile, heaterlist) 

Print #BoilFile, "Boiling Heat Flux" 

Print #Boi lFile, "Total" + sep + "Ring" 

For j = 0 To 4 

Print #BoilFile, Format (BoilFlux ( j ) , "scientific ) + sep _ 

+ Format (RingFlux { j ) , "scientific") 

Next j 

Print #BoilFile, "Boiling Fraction" 

For j = 0 To 4 

Print #BoilFile, Format (BoilFrac (j ) , "scientific") + sep _ 

+ Format (RingFrac(j) , "scientific") 

Next j 

Print #BoilFile, "Average Heat Flux" 

For j = 0 To 4 

Print #BoilFile , Format ( SpaceAvg (j ) , "scientific”) + sep _ 

+ Format (RingAvg(j) , "scientific") 

Next j 

Print #BoilFile, "Low Heat Flux" 

For j = 0 To 4 

Print #BoilFile , Format (TotalLow ( j ) , "scientific") + sep _ 

+ Format ( RingLow ( j ) , "scientific") 

Next j 

Print #BoilFile, "High Heat Flux" 

For j = 0 To 4 

Print #BoilFile, Format (TotalHigh ( j ) , "scientific") + sep _ 

+ Format (RingHigh(j) , "scientific") 

Next j 

Print #BoilFi le , "Contact Line Length" + sep + Format (CLTotal / numscans, "scientific ) 
Print #BoilFile, "Heat Flux Threshold" + sep + Format ( FluxThreshold, "scientific ) 

Print #BoilFile, "dq/dt Theshold" + sep + Format (dqdtthreshold, "scientific ) ^ 

Print #BoilFile, "d2q/dt2 Threshold" + sep + Format (d2qdt2threshold, "scientific } 



239 


Close inputf ilenumber 
Close OutputFileNumber 
Close BoilFile 
Close TimeHistoryFile 
End Sub 

Sub subContactLine (BoilFunc ( ) As Byte, CLLength As Integer, heaterlist 0 As Integer, ByRef 
setupin As SetupType) 

Dim j As Integer, x As Integer, y As Integer 
Dim LastPoint As Byte, NewPoint As Byte 
Dim array(160) As Byte 

For j = 0 To setupin. Heaters .Num - 1 
array ( heater list ( j ) ) = BoilFunc(j) 

Next j 

array(96) - 0 

'* form a binary array2 variable which will be written to the 
* * output file. 

For y = 0 To 7 

LastPoint - array (Position { 0, y) - 1) 

For x = 1 To 7 

'* subtract 1 from "position" result because it starts at 

'* heater 1, not heater 0 

NewPoint = array ( Position (x, y) - 1) 

If Not NewPoint = LastPoint Then 
CLLength = CLLength + 1 
End If 

LastPoint = NewPoint 
Next x 
Next y 

For x = 0 To 7 

LastPoint = array (Position (x, 0) - 1) 

For y = 1 To 7 

NewPoint = array ( Position (x, y) - 1) 

If Not NewPoint = LastPoint Then 
CLLength = CLLength + 1 
End If 

LastPoint = NewPoint 
Next y 
Next x 

End Sub 

Sub subReadOf f set (offset () As Double, filename As String) 

Dim calOffset As CalType 
Dim CalSetup As CalSetupType 
Dim freefilenum As Integer 
Dim i As Integer 

freefilenum = FreeFile 

Open filename For Input As freefilenum 
Call ReadCalSetup (CalSetup, freefilenum) 

Call ReadCal (calOffset, freefilenum) 

Close freefilenum 

For i = 0 To CalSetup. Heaters. Num - 1 
offset (i) = calOffset. Vcmd(i) 

Next i 

End Sub 


Function SetFullScale (HWType As Integer) 

'* set the voltage scaling to the correct value 
If ADCList .Value ( HWType ) = ADCDAQBOOK Then 

SetFullScale = 10 

Elself ADCList .Value (HWType) = ADCCUSTOM Then 



240 


SetFullScale = 12 

Else 

SetFullScale = 10 

’* in case we read old files that don’t have the extra setup data 
End If 

End Function 

Sub subHeaterList (ByRef setupin As SetupType) 

»* the following code just converts all the other 
’* heater specification methods to the list method. 

'* This is just a work-around for the way this routine was 
'* originally written. 

Dim i As Integer 

Select Case setupin . Heaters .method 
Case ALLACTIVE 

For i = 0 TO ADCLASTCHANNEL 

setupin. Heaters . List (i) = i 

setupin . Heaters . Num = ADCLASTCHANNEL + 1 
Next i 

Case RANGEACTIVE 

setupin . Heaters . Num = setupin. Heaters . Range { 1 ) _ 

- setupin. Heaters . Range (0) + 1 

For i = 0 To ADCLASTCHANNEL 

If i >= setupin. Heaters . Range (0) _ 

And i <= setupin. Heaters . Range ( 1) Then 
setupin . Heaters . List ( i ) = True 

Else 

setupin . Heaters . List (i ) = False 

End If 
Next i 

End Select 

End Sub 

Sub subAvgFlux ( ) 

Dim Reload As Integer, numscans As Integer, inputf llenumber As Integer, _ 
OutputFileNumber As Integer, i As Integer, j As Integer 
Dim FullScale As Double, time As Double, OutData(160) As Double, _ 

Flux (160) As Double, SumPower As Double, TotalSum As Double, _ 

TimeStep As Double, AveragePower As Double, offset (160) As Double 
Dim ResFilel As String, ResFile2 As String, AreaFile As String, _ 
sep As String, Formatted As String, ScanLine As String 
Dim setupin As SetupType 

time = 0 
TotalSum = 0 

SumPower =0 , 

1 * insure that resistance files will be loaded the first time through 
Reload = True 

ResFilel = f rmConvert ! txtresf ilel . text 
ResFile2 = f rmConvert ! txtresf ile2 . text 
AreaFile = f rmConvert ! txtAreaFile . text 
1 * define column seperator - chr$(9) is a Tab 
sep = Chr$ (9) 

- * open input file and load setup information 

Call openinputfile (setupin, inputfilenumber , f rmConvert ! txtinputfile. text) 

Call OpenOutputFile (formatnum, OutputFileNumber, f rmConvert ! txtoutputf lie . text) 

Call subHeaterList (setupin) 

Call subReadOffset (offset, f rmConvert ! txtof f setf ile . text ) 

FullScale = SetFullScale (setupin. ADChwtype) 

TimeStep = 1 / setupin. SampRate 

numscans — setupin. Duration * setupin . SampRate 

For i = 0 To numscans - 1 
time = TimeStep * i 

' * load voltage on heaters for one timestep into 



241 


' * OutData matrix 

Call subLoadStep (setupin, inputf ilenumber , FullScale, OutData) 

• * calculate power from voltage using resistance files 
Call CalcFlux (OutData, Flux, offset, ResFilel, ResFile2, AreaFile, _ 
setupin . Temp , setupin. Heaters . Num, Reload) 

For j = 0 To setupin . Heaters . Num - 1 
'* sum the power from each heater 
SumPower = SumPower + Flux(j) 

Next j 

AveragePower = SumPower / setupin. Heaters . Num 
» * print the average to the outputf ile 
' * format the average for output 
Formatted = Format (AveragePower, "scientific”) 

’* compute the total sum for an overall average heat flux 
’ * value 

TotalSum = TotalSum 4- AveragePower 

'* add the time stamp to the beginning of the line 

ScanLine = Str$(time) + sep + Formatted 

’ * output to a file 

Print #OutputFileNumber , ScanLine 

1 * reset sum value to zero 

SumPower = 0 

Call subUpdateStatus (numscans, i) 

DoEvents 
Next i 

•* output, as a final value, the overall average 
** heat flux. Add two seperation characters 
' * to put it in the 3rd column in Excell 

<* compute the average and format the average for output 
Formatted = Format (TotalSum / numscans, "scientif ic" ) 
frmConvert ! txtavgf lux . text = Formatted 

•* add the time stamp to the beginning of the line 

ScanLine = sep + sep + Formatted 

' * output to a file 

Print #Output Fi leNumber , ScanLine 

Close inputf ilenumber 

Close OutputFileNumber 

End Sub 

Sub subLoadStep (setupin As SetupType, inputf ilenumber As Integer, FullScale As Double, ByRef 

OutData () As Double) 

Dim j As Integer 

ReDim datapoint(0 To setupin . Heaters . Num - 1) As Integer 
Dim LngDataPoint As Long 
Get inputf ilenumber , , datapoint 

For j » 0 To setupin. Heaters .Num - 1 
1 * input one data point 

> * each datapoint is loaded as an integer 
LngDataPoint = datapoint (j) 

OutData { j ) = (CDbl (LngDataPoint) / 2 A 16 _ 

* FullScale) _ 

/ Val (GainList . text (setupin . Ga inindex) ) 

If OutData(j) < 0 Then OutData(j) = OutData(j) + FullScale 

Next j 

• * OutData now contains all the heater voltages at that 
'* time step. 


End Sub 

Sub subProbDist ( ) 

Dim Reload As Integer, numscans As Integer, inputf ilenumber As Integer 
OutputFileNumber As Integer, i As Integer, j As Integer, _ 

Index As Integer, Dist(-90 To 160) As Long, _ 

LocalDist (-90 To 160, 160) As Long, _ 

Heaterlndex As Integer, heaterlist ( 160 ) As Integer 
Dim FullScale As Double, time As Double, OutData (160) As Double, _ 
Flux (160) As Double, Normalized As Double, _ 

TimeStep As Double, TotalNum As Double, Sum As Double, _ 



AvgData(160) As Double, rmsdata(160) As Double, Mode(160) As Double, _ 

Median (160) As Double, DistWidth(160) As Double, MaxProb As Double, _ 
high(160) As Double, low(160) As Double, LocalNorm(-90 To 160, 160) As Double 


242 


Dim ResFilel As String, ResFile2 As String, AreaFile As String, _ 

sep As String, Formatted As String, ScanLine As String, lineout As String 

Dim setupin As SetupType „ „ . , 

Dim offset (160) As Double, LowPercent As Double, HighPercent As Double 


*★ insure that resistance files will be loaded the first time through 
Reload = True 

ResFilel = f rmConvert ! txtresf ilel . text 
ResFile2 = f rmConvert ! txtresf ile2 . text 
AreaFile = f rmConvert ! txtAreaFile . text 
LowPercent = Val { f rmConvert ! txtLowPercent . text) / 100 
HighPercent = Val { f rmConvert ! txtHighPercent . text ) / 100 

»* define column seperator - chr$(9) is a Tab 
sep = Chr$ (9) 

* * open input file and load setup information 

Call openinput file (setupin, inputf ilenumber, f rmConvert ! txt input file . text ) 

Call OpenOutputFile { forma tnuin, OutputFileNumber , f rmConvert ! txtoutputf lie . text 
Call subReadOffset (offset, f rmConvert ! txtoffsetfile . text ) 

Call subHeaterList (setupin) 

Heaterlndex = 0 

For i = 0 TO ADCLASTCHANNEL 

If setupin. Heaters . List (i) = True Then 
heaterlist (Heaterlndex) = i 
Heaterlndex = Heaterlndex + 1 

End If 
Next i 


FullScale = SetFullScale (setupin. ADChwtype) 

TimeStep = 1 / setupin . SampRate 

numscans = setupin . Duration * setupin . SampRate 

For i = 0 To numscans - 1 
time = TimeStep * i 

’* load voltage on heaters for one timestep into 
1 * OutData matrix 

Call subLoadStep (setupin, inputf ilenumber , FullScale, OutData) 


»* calculate power from voltage using resistance files 
Call CalcFlux (OutData, Flux, offset, ResFilel, ResFile2, AreaFile, _ 
setupin . Temp, setupin . Heaters . Num, Reload) 

Call subTimeAvg (AvgData, Flux, numscans, setupin. Heaters .Num) 

Call subRMS (rmsdata, Flux, numscans, setupin . Heaters . Num) 

For j = 0 To setupin. Heaters .Num - 1 

•* return the first integer less than or equal to (flux(j)) 

'* to be used as an index in a probability distribution 
. * Therefore, the value of Index indicates the lower bound 
'* of the interval which contains the heat flux value. The 
• * lower bound will be inclusive. 

Index = Int (Flux ( j ) ) 

LocalDist ( Index , j) = LocalDist ( Index, j) +1 
Next j 

Call subUpdateStatus (numscans, i) 

DoEvents 
Next i 

TotalNum = CDbl (numscans ) * CDbl ( setupin . Heaters . Num) 

'* sum the total distribution 
For i = -20 To 160 

For j = 0 To setupin. Heaters .Num - 1 

Dist(i) = Dist(i) + LocalDist(i, j) 



Next j 
Next i 

'* write distributions to file 
For i = -20 To 160 

■* normalize the distribution to the number of samples 
lineout = lineout + Str(i) 

For j = 0 To setupin. Heaters .Num - 1 

’* normalize local distribution interval 
Normalized = CDbl (LocalDist (i, j)) / CDbl (numscans) 

• * format for scientific notation output 
Formatted - Format (Normalized, "scientific”) 

' * add number onto one row 
lineout = lineout + sep + Formatted 

1 * assign normalized value to a local normalized array 
LocalNorm{ i f j) = Normalized 
Next j 

’* normalize the total distribution and add that onto last 
' * column 

Normalized = CDbl (Dist (i) ) / TotalNum 
Formatted = Format (Normalized, "scientific”) 
lineout = lineout + sep + Formatted 
' * output one row 

Print #OutputFileNumber, lineout 
f * clear row 
lineout - MH 
DoEvents 
Next i 

1 * calculate the width of the distribution 
For j = 0 To setupin. Heaters .Num - 1 
Sum = 0 

For i = -20 To 160 

Sum = Sum + LocalNorm(i, j) 

If Sum >= LowPercent Then 
low(j) - i + 1 
Exit For 
End If 
Next i 
Sum = 0 

For i = 160 To -20 Step -1 

Sum « Sum + LocalNorm(i, j) 

If Sum >” HighPercent Then 
high(j) = i - 1 
Exit For 
End If 
Next i 

DistWidth ( j ) = high ( j ) - low(j) 

If high ( j ) - low(j) < 0 Then DistWidth(j) = 0 

Next j 

'* calculate mode 

For j = 0 To setupin. Heaters. Num - 1 
MaxProb = 0 

For i = -20 To 160 

If LocalNorm ( i , j) > MaxProb Then 
MaxProb = LocalNorm(i, j) 

Mode(j) = i 
End If 
Next i 
Next j 

’ * calculate median 

For j = 0 To setupin. Heaters. Num - 1 
Sum = 0 

For i = -20 To 160 

Sum = Sum + LocalNorm (i, j) 

If Sum >=0.5 Then 
Mediant j) - i 



244 


Exit For 
End If 
Next i 
Next j 

Close inputfilenumber 
Close OutputFileNumber 

■ * check to see if file names exist, write various data files to disk 
If Not f rmConvert ! txtmodef ile = "" Then 
OutputFileNumber = FreeFile 

Open f rmConvert ! txtmodef ile For Output As OutputFileNumber 
Call subWriteHeater (setupin, Mode, OutputFileNumber, heaterlist) 

Close OutputFileNumber 
End If 

If Not f rmConvert ! txtwidthf ile. text = Then 
OutputFileNumber = FreeFile 

Open frmConvert! txtwidthf ile. text For Output As OutputFileNumber 
Call subWriteHeater (setupin, DistWidth, OutputFileNumber, heaterlist) 

Close OutputFileNumber 
End If 

If Not frmConvert ! txtmedianf ile . text = "" Then 
OutputFileNumber - FreeFile 

Open frmConvert! txtmedianf ile. text For Output As OutputFileNumber 
Call subWriteHeater (setupin, Median, OutputFileNumber, heaterlist) 

Close OutputFileNumber 
End If 

If Not frmConvert ! txtmaxf ile. text = "" Then 
OutputFileNumber = FreeFile 

Open frmConvert ! txtmaxf ile. text For Output As OutputFileNumber 
Call subWriteHeater (setupin, high, OutputFileNumber, heaterlist) 

Close OutputFileNumber 
End If 

If Not frmConvert ! txtminfile . text = Then 
OutputFileNumber = FreeFile 

Open frmConvert! txtminfile. text For Output As OutputFileNumber 
Call subWriteHeater ( setupin, low, OutputFileNumber, heaterlist) 

Close OutputFileNumber 
End If 

End Sub 
Sub subFFT ( ) 

Dim c(160, 2048, 3) As Double, csum(2048), f As Double, fmax As Double 
Dim FullScale As Double, OutData(160) As Double, Flux(160) As Double 
Dim offset (100) As Double 

Dim m As Integer, i As Integer, j As Integer, n As Integer, _ 

heater As Integer, Reload As Integer, inputfilenumber As Integer, _ 
OutputFileNumber As Integer, numscans As Integer, k As Integer, _ 

LastHeater As Integer 
Dim numheaters As Integer 

Dim sep As String, ResFilel As String, ResFile2 As String, _ 

AreaFile As String, Formatted As String 
Dim setupin As SetupType 
Const Re = 0 
Const Im = 1 
Const mag = 2 
Const PI = 3.14159 

'* fft summation obtained from Mathcadd help. 

Reload = True 

ResFilel = frmConvert ! txtresfilel . text 
ResFile2 = frmConvert ! txtresfile2 . text 
AreaFile = frmConvert ! txtAreaFile . text 
numheaters = Val ( frmConvert ! txtNumHeaters . text) 

'* define column seperator - chr$(9) is a Tab 
sep = Chr$(9) 

' * open input file and load setup information 

Call openinputfile (setupin, inputfilenumber, frmConvert ! txtinputf ile . text ) 

Call OpenOutputFile ( f ormatnum, OutputFileNumber, frmConvert ! txtoutputf ile . text ) 

Call subHeaterList (setupin) 

FullScale = SetFullScale (setupin. ADChwtype) 



245 


numscans = setupin. Duration * setupin . SampRate 
' * calculate nyquist frequency 
fmax = setupin . SampRate / 2 


1 * find value of m 
For i = 2 To 16 

If 2 A i <= numscans And 2 A (i + 1) > numscans Then 
m = i 
End If 
Next i 

»* define n — number of points to use in the FFT . 
n = 2 A m 


Call subLoadStep (setupin, inputf ilenumber , FullScale, OutData) 

• ★ calculate power from voltage using resistance files 
Call CalcFlux (OutData, Flux, offset, ResFilel, ResFile2, AreaFile, _ 
setupin . Temp, numheaters. Reload) 

For heater = 0 To numheaters - 1 


For j = 0 To n / 2 

c (heater, j, Re) = c(heater, j, Re) + Flux(heater) _ 

* Cos (-2 * PI * j * k / n) 

c (heater, j, Im) = c(heater, j, Im) + Flux(heater) _ 

* Sin { -2 * PI * j * k / n) 

Next j 
DoEvents 
Next heater 

Call subUpdateStatus (n, k) 

Next k 


1 * calculate magnitudes 
For j = 0 To n / 2 

For heater = 0 To numheaters - 1 

' * divide all the sumations by two to obtain the final FFT values 
c (heater, j, Re) = c(heater, j, Re) / n 
c (heater, j, Im) = c(heater, j, Im) / n 
> * calculate the magnitudes of all the fft values 

c (heater, j, mag) = Sqr (c (heater, j, Re) " 2 + c(heater, j, Im) - 2) 
■ * sum the magnitudes of all the heaters at each frequency 
csum(j) = csum(j) + c(heater, j, mag) 

Next heater 

1 * normalize by the number of heaters 
csum(j) = csum(j) / numheaters 
»* calculate frequency for this value of j 
f = fmax * j / (n / 2) 

** format frequency component magnitude for output 
Formatted = Format (csum ( j ) , "scientific") 

’* write line to file 

Print # Output FileNumber, Str(f) + sep + Formatted 
Call subUpdateStatus (n / 2, j) 

Next j 

Close inputf ilenumber 
Close OutputFileNumber 
End Sub 


Sub subRMS ( ByRe f OutData)) As Double, InDataO As Double, numscans As Integer, numheaters As 
Integer) 

Static Sum ( 99) As Double, SumSquare ( 160) As Double 
Static n As Integer 
Dim i As Integer 

Dim a As Double, b As Double, c As Double 

' * this subroutine depends on VB setting all declared variables - 0 
'* when the program starts. Other languages don't do that. 

'* sum heat fluxes for each heater 
For i = 0 To numheaters 



Sum(i) = Sum(i) + InData(i) 

SumSquare (i) = SumSquare (i) + InData(i) A 2 
Next i 

1 * increment the scan count 
n = n + 1 

** check to see if all the scans have been summed 
If n = numscans Then 

' * reset scan count 
n = 0 

»* set outdata equal to the average 
For i = 0 To numheaters - 1 

a = SumSquare ( i ) / (numscans - 1) 
b = Sum ( i ) A 2 / ((numscans - 1)) 
c = a - b / numscans 
If c < 0 Then c = 0 
OutData { i } = Sqr(c) 


' * reset sum to zero 
Sum(i) = 0 
SumSquare (i) = 0 
Next i 
End If 


End Sub 

Sub setoff set (of f setval As Double) 
offset = offsetval 
End Sub 


Sub subConvert ( ) 

Dim ScanLine As String, sep As String, strDate As String, _ 

strTime As String, Comments As String, Formatted As String, _ 
BaseName As String, appendage As String, ResFilel As String, _ 
ResFile2 As String, AreaFile As String 
Dim LngDataPoint As Long 

Dim i As Integer, j As Integer, x As Integer, y As Integer, _ 
a As Integer, b As Integer, datapoint As Integer, _ 
inputfilenumber As Integer, OutputFileNumber As Integer, _ 
TagFileNumber As Integer, Heaterlndex As Integer, _ 
heaterlist (160) As Integer, bMax As Integer, _ 
numscans As Integer, Lastlndex As Integer, _ 

Reload As Integer, of f setf ilenumber 
Dim MaxPower As Double, OutData(160) As Double, _ 

time As Double, TimeStep As Double, SumPower As Double, TotalSum As 
AveragePower As Double, Flux (160) As Double, FullScale As Double, _ 
Values (160) As Double 
Dim setupin As SetupType 
Dim itout (44) As Byte 
Dim offset (160) As Double 

TotalSum =0 ± . .. , 

i * insure that resistance files will be loaded the first time throug 

Reload = True 

ResFilel = f rmConvert ! txtresf ilel . text 
ResFile2 = f rmConvert ! txtresf ile2 . text 
AreaFile = f rmConvert ! txtAreaFile . text 

Call subReadOf fset (of fset , f rmConvert ! txtof f setf ile . text ) 

1 For i = 0 To 5 

' if optFormat (i) .Value = True Then 

* Forma tNum = i 

• End If 
1 Next i 


Double, 


MaxPower = 0 
time = 0 
ScanLine = 

Select Case formatnum 

Case STANDARD, MATRICES, MATRIXFILES, AVGFLUX, TIMEAVG, RMS 
1 * define column seperator - chr$(9) is a Tab 
sep = Chr$ (9) 

Case GNUPLOT, MPEG 



247 


sep = CRLF 
End Select 

' * open input file and load setup information 

Call openinputf ile (setupin, inputf ilenumber , f rmConvert ! txtinputf lie . text ) 


Call subHeaterList (setupin) 


Call OpenOutputFile (formatnum, OutputFileNumber, 

FullScale = SetFullScale (setupin. ADChwtype) 

•* xf the textbox is non-zero, limit the number 
numscans = setupin . Duration * setupin. SampRate 
If Val (f rmConvert ! txtsteps . text) > 0 Then 

If numscans > Val (f rmConvert ! txtsteps. text) 
End If 

TimeStep = 1 / setupin . SampRate 


f rmConvert ! txtoutputf ile . text) 
of scans to read in 

Then numscans = Val (f rmConvert ! txtsteps . text) 


1 * write heading with channels 
** insert first tab to skip first column 
ScanLine = ScanLine + sep 
Heaterlndex = 0 


For i = 0 To ADCLASTCHANNEL 

If setupin. Heaters. List (i) = True Then 
ScanLine = ScanLine + Str${i) + sep 
heaterlist (Heaterlndex) = i 
Heaterlndex = Heaterlndex + 1 


End If 
Next i 

Select Case formatnum 
Case STANDARD 

Print #Output Fi leNumber , ScanLine 
End Select 

ScanLine = "" 

'* Step through the time steps 
For i = 0 To numscans - 1 
time = TimeStep * i 

If formatnum = MATRIXFILES Then _ , _ . . . .. , 

Call openMatrixFile (f rmConvert! txtoutputf ile. text, OutputFileNumber , l) 

End If 

1 ★ load voltage on heaters for one timestep into 
' * OutData matrix 

Call subLoadStep (setupin, inputf ilenumber , FullScale, OutData) 

• * calculate power from voltage using resistance files 
Call CalcFlux (OutData, Flux, offset, ResFilel, ResFile2, AreaFile, _ 
setupin. Temp, setupin . Heaters . Num, Reload) 

Select Case formatnum 

Case MATRICES, GNUPLOT, MPEG, IMAGETOOL, MATRIXFILES 
For j = 0 To setupin. Heaters. Num - 1 
»★ outdata array doesn't necessarily contain the 
'* heater information in the order of the heater numbers. 

1 * therefore we assign the Values array by remapping using 
'* the heaterlist array. 

Values (heaterlist (j ) ) = OutData(j) 

Next j 
End Select 

Select Case formatnum 
Case STANDARD 

For j = 0 To setupin. Heaters .Num - 1 

Formatted = Format (Flux ( j ) , Scientific ) 

1 * add channel sample to line of data 
ScanLine = ScanLine + Formatted + sep 



248 


Next j 

' * append time index to line of data 
ScanLine = Str$(time) + sep + ScanLine 
Print #OutputFileNumber, ScanLine 
'* clear scanline 
ScanLine = "" 

Case AVGFLUX 

Case TIMEAVG . , „ ^ 

•* when the last iterationis reached, outdata will contain the 

' * time-averaged heater values . 

Call subTimeAvg ( Flux, Flux, numscans, setupin . Heaters . Num) 

Case RMS 

Call subRMS{Flux, Flux, numscans, setupin . Heaters . Num) 

Case MATRICES, GNUPLOT, MPEG, MATRIXFILES 
For x = 0 To setupin. Heaters . Num 

If Flux(x) > MaxPower Then MaxPower = OutData(x) 

If formatnum = MPEG Then 

’* inverse the data so GNUplot ranges will be right 
Flux { x ) = -Flux (x) 

End If 

Next x . . . . 

Call subWriteHeater (setupin, FluxO, Output FileNumber, heaterlist) 

' * append a line feed 
Print #OutputFileNumber, 

Case IMAGETOOL 

Call ITWrite ( Output FileNumber ) 

End Select 

Call subUpdateStatus {numscans, i) 

If formatnum - MATRIXFILES Then 
Close OutputFileNumber 
End If 
DoEvents 
Next i 

Select Case formatnum 
Case AVGFLUX 

Case TIMEAVG, RMS . . . . , . 

Call subWriteHeater (setupin, Flux, OutputFileNumber, heaterlist) 

Call subWriteOffset (setupin. Flux, f rmConvert ! txtof fsetwrite. text, heaterlist) 

End Select 

? * close files 

Close inputfilenumber 

Close OutputFileNumber 

If formatnum = MPEG Then 

Call MPEGWrite (OutputFileNumber , MaxPower, numscans) 

End If 
End Sub 

Sub CalcFlux (OutData ( ) As Double, ByRef FluxO As Double, offset!) As Double, _ 

Res Fi lei As String, ResFile2 As String, AreaFile As String, _ 

Temp As Double, numheaters As Integer, ByRef Reload As Integer) 

Static ResSetupl As CalSetupType, ResSetup2 As CalSetupType, AreaSetup As CalSetupType 
Static Resl As CalType, Res2 As CalType, Area As CalType 
Dim ResFileNumberl As Integer, ResFileNumber2 As Integer, _ 

AreaFileNumber As Integer, i As Integer 
’* Check if Reload is true 
If Reload = True Then 
Reload = False 

•* open Calibration files containing resistance 
' * data, and containing heater area data. 

ResFileNumberl = FreeFile 
1 * open file for input 

Open ResFilel For Input As ResFileNumberl 
' * input setup data 



249 


ResFileNumber2 = FreeFile 

Open ResFile2 For Input As ResFileNumber2 
AreaFileNumber = FreeFile 

Open AreaFile For Input As AreaFileNumber 

Call ReadCalSetup (ResSetupl , ResFileNumberl ) 

Call ReadCalSetup (ResSetup2 , ResFileNumber2 ) 

Call ReadCalSetup (AreaSetup, AreaFileNumber) 

1 * Read resistance data 

Call ReadCal (Resl, ResFileNumberl) 

Call ReadCal (Res2 , ResFileNumber2 ) 

Call ReadCal {Area, AreaFileNumber) 

'* close Resistance Files 
Close ResFileNumberl 
Close ResFileNumber2 
Close AreaFileNumber 
End If 

•* Calculate Heat Flux in Watts/cm A 2 
For i = 0 To numheaters - 1 

• ★ start with voltage value. Square it. Divide by the 
'* interpolated resistance value to get Watts. Divide by area 
>* to get watts/cm A 2. subtract the offset to get rid of the 
1 * substrate conduction heat transfer. 

Flux ( i ) = OutData ( i ) A 2 / (Temp * Resl.Vcmd(i) + Res2 . Vcmd ( i ) ) _ 

/ (Area . Vcmd ( i ) * 0.0001) - offset(i) 

Next i 
End Sub 

Sub OpenMatrixFile( filename As String, OutputFileNumber As Integer, i As Integer) 
Dim appendage As String 
On Error Resume Next 
appendage — Trim(Str(i)) 

If i = 0 Then appendage = "0" 

' * add zeros to fill out to 3 places 

appendage = String<3 - Len (appendage) , "0") + appendage 
Open ChgExt (filename, appendage + " .dat") _ 

For Output As OutputFileNumber 
If Err. Number = 53 Then 

MsgBox (Err . Description) 

Close OutputFileNumber 
Exit Sub 
End If 


End Sub 

Sub ITWrite (OutputFileNumber) 

Dim x As Integer, y As Integer, a As Integer, b As Integer, _ 
bMax As Integer 

Dim Values (160) As Double, itout(160) As Double 
For y = 7 To 0 Step -1 

itout(0) = Values (Position^, y) - 1} * 2 / 10 * 255 
itout(l) = itout(0) 

itout ( 42 ) = Values (Position (7, y) - 1) 2 ! 10 255 

itout ( 43 ) = itout ( 42 ) 

For x = 0 To 7 

For a = 0 To 4 

itout (2 + 5 * x + a) = Values (Position (x, y) - 1) A 2 / 100 _ 
* (255) 

Next a 
Next x 

Select Case y 
Case 0, 7 

bMax = 6 
Case 1 To 6 
bMax = 4 
End Select 
For b = 0 To bMax 
For a = 0 To 43 

Put OutputFileNumber, , itout (a) 



250 


Next a 
Next b 
Next y 


End Sub 

Sub MPEGWrite (OutputFileNumber, MaxPower, numscans As Integer) 
Dim BaseName As String 
Dim i As Integer 

■* write batch files necessary for 
1 * making the MPEG movie 


'* open gnuplot script file 

BaseName = ChgExt (frmConvert ! txtoutputf ile. text, ) 

OutputFileNumber = FreeFile 
On Error Resume Next 

Open BaseName + ".gpt" For Output As OutputFileNumber 
If Err. Number = 53 Then 

MsgBox (Err. Description) 

Close OutputFileNumber 
Exit Sub 
End If 


Print #OutputFileNumber, 
Print #OutputFileNumber, 

+ Str (-MaxPower ) , Str 
Print #OutputFileNumber , 
Print #OutputFileNumber , 
Print #OutputFileNumber , 
Print #OutputFileNumber , 
Print #OutputFileNumber , 
Print #OutputFileNumber , 
Print # OutputFileNumber, 

+ " . dat" + Chr (34 ) + 

+ Chr { 34 ) + Chr ( 34 ) + 
Print #OutputFileNumber, 
Print #OutputFileNumber , 

+ ” . ps" + Chr (34 ) 
= 0 To numscans - 1 


For i 


'set key 8,0,0" 

'set cntrparam levels incr " _ 

[ -MaxPower *6/7) 

'set cntrparam levels 8" 

'set view 180, 0, 1, 1" 

'set nosurface; set contour base" 

'set cntrparam bspline" 

'set size 0.5, 0.7" 

'n=0" 

' splot " + Chr (34) + BaseName _ 

" index n title " _ 

" with lines" 

"set term postscript portrait color solid 
"set output " + Chr (34) + BaseName __ 


Print #OutputFileNumber , 


+ Str(i) + 


replot 


Next i 

Close OutputFileNumber 

1 * write batch file 
OutputFileNumber = FreeFile 
On Error Resume Next 

Open BaseName + ".bat" For Output As OutputFileNumber 
If Err. Number = 53 Then 

MsgBox (Err. Description) 

Close OutputFileNumber 
Exit Sub 
End If 


Print # OutputFileNumber , "gs -sOutputFile=" + BaseName 
+ "%%d.pcx -sDEVICE=pcx256 -g220x200 -r35x40 
+ BaseName + ".ps" 

For i = 1 To numscans 

Print #OutputFileNumber, 

+ Trim(Str(i) ) + ".pcx | 

+ Trim (Str (i)) + ".ppm" 

Print # OutputFileNumber , 

+ ".ppm " + BaseName 


"pcxtoppm < " + BaseName _ 

pnmcut 60 10 160 120 > " + BaseName _ 

"ppm2cyuv " + BaseName + Trim(Str(i)) 
+ Trim(Str(i)) + " -CCIR601" 


Next i 


Print # OutputFileNumber , "pvrgmpeg -XING -a 1 b " _ 
+ Str (numscans) + " 3_5g -s " + BaseName + ".mpg" 



251 


Close OutputFileNumber 


End Sub 

Sub openinputf ile {ByRef setupin As SetupType 
String) 

' * open an input file for the Convert 


, ByRef 
routine 


inputf ilenumber As Integer, 


filename As 


Dim datapoint As Integer 
inputf ilenumber = FreeFile 
On Error Resume Next 

Open ChgExt (filename, ".TAG") For Input As inputf ilenumber 
If Err. Number Then 

MsgBox (Err . Description) 

Close inputfilenumber 
Exit Sub 
End If 

Call ReadSetup {setupin, inputfilenumber) 

^♦inpu^lengt^is^the number of heaters * 2 since we're inputing^integers (2 bytes) 
Open filename For Binary As inputfilenumber Len = Len (datapoint) 96 


End Sub 

Sub OpenOutputFile (formatnum As Integer, ByRef OutputFileNumber As Integer, filename As String) 
* * open the outputf ile for "Convert 
OutputFileNumber * FreeFile 

Cas^STANDARD^ ^MATRICES , GNUPLOT, MPEG, MATRIXFILES, AVGFLUX , TIMEAVG, RMS, PROBDIST, FFT, 
SAMPLE 

On Error Resume Next 

Open filename For Output As OutputFileNumber 
If Err. Number = 53 Then 

MsgBox (Err . Description) 

Close OutputFileNumber 
Exit Sub 
End If 

Case IMAGETOOL, BOIL 

On Error Resume Next 

Open filename For Binary As OutputFileNumber 
If Err. Number = 53 Then 

MsgBox (Err . Description) 

Close OutputFileNumber 
Exit Sub 
End If 
End Select 


End Sub 


Sub subTimeAvg( ByRef OutDataO As Double, InDataO As Double, numscans As Integer, numheaters As 
Integer) 

Static Sum (160) As Double 
Static n As Integer 
Dim i As Integer 

'* this subroutine depends on VB setting all declared variables = 0 
.* W hen the program starts. Other languages don't do that. 

* * sum heat fluxes for each heater 
For i = 0 To numheaters 

Sum(i) = Sum(i) + InData(i) 

Next i 

1 * increment the scan count 
n = n + 1 

»* check to see if all the scans have been summed 
If n = numscans Then 

1 * reset scan count 
n = 0 

'* set outdata equal to the average 
For i = 0 To numheaters - 1 



252 


OutData (i ) = Sum(i) / numscans 
' * reset sum to zero 
Sum ( i ) = 0 
Next i 
End If 
End Sub 


Sub subUpdateStatus (numscans, i) 

Static oldPC As Long, PercentComplete As Long 
• * Display the percent complete 
oldPC = PercentComplete 

PercentComplete = CLng{i) * 10 / {numscans - 1) 
»* only refresh if it has changed by 10%. 

'* keeps the display from slowing down 
' * the program. 


If Not oldPC = PercentComplete Then 

f rmConvert ! txtStatus . text - Str$ ( PercentComplete 
f rmConvert ! txtStatus . Refresh 
frmConvert ! txtinputf ile . Ref resh 
f rmConvert ! txtoutputf ile . Refresh 
frmConvert ! txtavgf lux . Refresh 
frmConvert ! txtOf f set . Refresh 
End If 


10) + "% Complete” 


End Sub 


Sub subWriteHeater (setupin As SetupType, FluxO As Double, OutputFileNumber As Integer 

heaterlist ( ) As Integer) 

Dim j As Integer, x As Integer, y As Integer 

Dim Values (160) As Double 

Dim ScanLine As String, sep As String 

1 * outdata array doesn't necessarily contain the 

<* heater information in the order of the heater numbers. 

' * therefore we assign the Values array by remapping using 
■* the heaterlist array, 
sep = Chr$(9) 

For j = 0 To setupin. Heaters . Num - 1 
Values {heaterlist { j ) ) = Flux(j) 

Next j 

’* remap into array shaped like the heater. 

<★ S et heater 96 (97 starting at 1) to zero. 

Values (96) = 0 


For y = 8 To -1 Step -1 
For x = -1 To 8 

’* subtract 1 from "position” result because it starts at 
»* heater 1, not heater 0 

ScanLine = ScanLine + Format (Values (Position (x, y) - 1), "scientific ) + sep 

Next x 

' * append a line feed 
ScanLine = ScanLine + CRLF 
Next y 

1 * append a line feed 
ScanLine = ScanLine + CRLF 
' * output a dataset 

Print #OutputFileNumber, ScanLine 


End Sub 


Sub subWriteOff set (setupin As SetupType, FluxO As Double, offsetfilename As String, heaterlist () 
As integer) 

Dim freefilenum As Integer, i As Integer 
Dim CalSetup As CalSetupType 
Dim offset As CalType 
freefilenum = FreeFile 

Open offsetfilename For Output As freefilenum 
CalSetup. Comments = setupin. Comments 



253 


CalSetup . Temp = setupin.Temp 
CalSetup . Heaters = setupin . Heaters 
offset .Comments = setupin. Comments 
offset. Temp = setupin.Temp 

For i = 0 To setupin . Heaters . Num - 1 
offset . Vcmd { i ) = Flux(i) 

Next i 

Call WriteCalSetup (CalSetup, freefilenum) 
Call WriteCal (offset, freefilenum) 

Close freefilenum 
End Sub 


Sub 


subThresholdS ample { ) 

Dim k (4 ) As Integer, inputf ilenumber As 
i As Integer, numscans As Integer, 


Integer, OutputFileNumber As Integer, _ 
Reload As Integer, SampleHeater As Integer 


Dim 

Dim 

Dim 


BoilFunc ( 1 ) As Byte 

ResFilel As String, ResFile2 As String, AreaFile As String, _ 
sep As String 

FluxThreshold As Double, dqdtthreshold As Double, _ 

d2qdt 2 threshold As Double, offset (100) As Double, FullScale As Double, _ 
TimeStep As Double, OutData(lOO) As Double, dqdt(l) As Double, _ 
d2qdt2 ( 1) As Double, time As Double 


Dim setupin As SetupType, setuptemp As SetupType 
Dim Flux (4) As fluxtype 

>* insure that resistance files will be loaded the first time through 
Reload = True 

ResFilel = f rmConvert ! txtresf ilel . text 

ResFile2 = f rmConvert ! txtresf ile2 . text 

AreaFile = f rmConvert ! txtAreaFile . text 

FluxThreshold = Val (frmConvert ! txtf luxthreshold . text) 

dqdtthreshold = Val (frmConvert ! txtdqdtThreshold . text ) 

d2qdt 2 threshold = Val ( frmConvert ! txtd2qdt2Threshold . text ) 

SampleHeater = frmConvert ! txtThreshSamp . text 


•* define column seperator - chr${9) is a Tab 
sep = Chr$ (9) 

•* open input file and load setup information 

Call openinputfile (setupin, inputf ilenumber, frmConvert ! txtinputf lie .text ) 
Call OpenOutputFile (formatnum, OutputFileNumber, frmConvertltxtoutputfile.tex 
Call subReadOff set (offset, f rmConvert ! txtoffsetfile . text ) 

Call subHeaterList (setupin) 

FullScale = SetFullScale (setupin. ADChwtype) 


TimeStep — 1 / setupin * SampRate 

numscans = setupin. Duration * setupin. SampRate 

«* set the initial value of the index variables 
k ( 0 ) = 0 
k ( 1 ) = 1 
k { 2 ) = 2 

For i = 0 To numscans - 1 
time = TimeStep * i 

» * load voltage on heaters for one timestep into 

1 * OutData matrix . 

Call subLoadStep (setupin, inputf ilenumber, FullScale, Out 
'* calculate power from voltage using resistance files 
1 * place result in Flux matrix 

OutData (0) = OutData { SampleHeater ) 

setuptemp = setupin 
setupin . Heaters .Num = 1 



Call CalcFlux (OutData, Flux ( k (2 )). Value , offset, ResFilel, ResFile2, AreaFile 
setupin. Temp, setupin . Heaters . Num, Reload) 

Call CalcBoilFunc (BoilFunc, setupin, Flux, k, TimeStep, _ 

FluxThreshold, dqdtthreshold, d2qdt2threshold, dqdt, d2qdt2) 

Print #OutputFileNumber , Str(time) + sep _ 

+ Format (Flux (k (1) ) .Value (0) , "scientif ic" ) + sep _ 

+ Format (dqdt (0) , "scientific") 

+ sep + Format <d2qdt2 (0 ) , "scientific") 

+ sep + Str (BoilFunc (0) * 5) 

' * rotate the index variable 
k{3) = k(0) 
k { 0) = k ( 1 ) 
k ( 1 ) = k (2 ) 
k (2 ) = k ( 3 ) 

setupin = setuptemp 

Call subUpdateStatus (numscans , i) 

DoEvents 
Next i 

Close OutputFileNumber 
Close inputf ilenumber 


End Sub 

G.1.4. Listing of FRMAUTOM.FRM 

Option Explicit 

' * index to the sequence currently being specified 

Dim Seqlndex As Integer 

1 * contains automation sequence data 

Dim NewAuto(16) As SetupType 

Dim AutoOut(16) As SetupType 

Dim AutoIn(16) As SetupType 


Private Sub chkActive_Click ( ) 

If chkActive . Value = Unchecked Then 
NewAuto (Seqlndex) . active = False 

Else 

NewAuto { Seqlndex) . active = True 
End If 


End Sub 

Private Sub chkActive_KeyPress (KeyAscii As Integer) 
Call chkActive_Click 
End Sub 


Private Sub cmbf ilef ormat_Click ( ) 

NewAuto (Seqlndex) . DataFormat = cmbf ilef ormat . Listlndex 
End Sub 


Private Sub cmbGain_Click ( ) 

NewAuto (Seqlndex) . Gainindex = GainList. Value (cmbGain. Listlndex) 
End Sub 


Private Sub cmbSequence_Click ( ) 

' * Change the index of the sequence that is 
1 * being modified 
Seqlndex = cmbSequence . Listlndex 
' * update the screen 
Call Init 
End Sub 


Private Sub cmbTrigger_Click ( ) 



255 


NewAuto (Seqlndex) .TrigSrc = TriggerList. Value (cmbTrigger. Listlndex) 
End Sub 


Private Sub cmdAdd_Click { ) 

Dim heater As Integer 
■* convert text to integer value 
heater = Val { txtHeaters ) 

'* check if heaters is already selected 

If Not NewAuto (Seqlndex) .Heaters. List (heater) = True Then 
'* set heater ON in the heater array 
NewAuto ( Seqlndex) . Heaters . List (heater ) — True 
1 * increment number of active heaters 
NewAuto (Seqlndex) . Heaters .Num _ 

= NewAuto (Seqlndex) .Heaters. Num + 1 

1 * add new 

IstHeaters . Addltem Str$ (heater) 

End If 

If IstHeaters . Listlndex >= IstHeaters . ListCount _ 

Or IstHeaters . Listlndex < 0 Then 
IstHeaters . Listlndex * 0 
End If 
End Sub 

Private Sub cmdApply_Click ( ) 

Dim i 

For i = 0 To 15 

AutoSetup (i) - NewAuto (i) 

Next i 
End Sub 

Private Sub cmdBrowse_Click ( ) 

frmCalFile ! cmnl . DefaultExt = ".BIN 1 ' 
f rmCalFile ! cmnl . DialogTitle = "Data File Name" 

frmCalFile! cmnl. FILTER = "Data Files ( * . BIN ) | * . BIN | All Files (*. )l 

frmCalFile! cmnl. Flags = cdlOFNHideReadOnly + cdlOFNOverwntePrompt 

On Error Resume Next 

frmCalFile ! cmnl . ShowSave 

If Not Err. Number = cdlCancel Then 

txtFileName = frmCal File ! cmnl . FileName 
Call txtFileName__Change 
End If 
End Sub 


Private Sub cmdCancel_Click ( ) 

Unload f rmAutomation 
End Sub 

Private Sub cmdDef aults__Click ( } 

NewAuto (Seqlndex) « Defaults 
Call Init 
End Sub 

Private Sub cmdDelete_Click ( ) 

If IstHeaters . ListCount > 0 Then 
Dim heater As Integer 
Dim Index As Integer 

* * assign the deleted heater to the text box 
•* so it could be quickly re-added 

Index = IstHeaters .Listlndex 
txtHeaters = IstHeaters . List ( Index) 
heater = Val ( IstHeaters . List ( Index) ) 

* * remove heater from setup array 

NewAuto (Seqlndex) . Heaters . List (heater) = False 

»* decrement number of active heaters 

NewAuto (Seqlndex) .Heaters. Num _ 

= NewAuto (Seqlndex) .Heaters. Num - 1 

' * remove the heater from the list box 
IstHeaters . Removeltem Index 


* »' 

cdl OFN Pa thMust Exist 



256 


If Index < NewAuto (Seqlndex) . Heaters .Num Then 
IstHeaters . Listlndex = Index 
Elself NewAuto (Seqlndex) .Heaters. Num > 0 Then 
IstHeaters . Listlndex = Index - 1 
End If 
End If 
End Sub 

Private Sub cmdLoad_Click ( ) 

Dim SetupFileNumber As Integer 
Dim SetupFileName As String 
Dim i As Integer 

1 * set up properties of file box 

frmCalFile ! cmnl . Def aultExt = ".aut" 

f rmCalFile ! cmnl . DialogTitle = "Load Setup File" 

frmCalFile! cmnl. FILTER = "Setup Files <* .AUT) I * .AUT I All Files (* ♦ *) I * . *" 

frmCalFile ! cmnl . Flags = cdlOFNHideReadOnly + cdlOFNPathMustExist + cdlOFNFileMustExist 
On Error Resume Next 
frmCalFile ! cmnl . ShowOpen 

If Not Err. Number = cdlCancel Then 
SetupFileName = frmCalFile ! cmnl . FileName 
SetupFileNumber - FreeFile 
On Error Resume Next 

Open SetupFileName For Input As #SetupFileNumber 
If Err Then MsgBox Err . Description 
Call ReadAuto (NewAuto, SetupFileNumber) 

Close SetupFileNumber 
Call Init 

End If 
End Sub 

Private Sub cmdOk_Click ( ) 

Dim i 

For i = 0 To 15 

AutoSetup (i) = NewAuto (i) 

Next i 

Unload f rmAutomation 
End Sub 

Private Sub cmdSave_Click ( ) 

Dim SetupFileNumber As Integer 

Dim SetupFileName As String 

Dim i As Integer 

■* Initialize CommonDialogBox 

frmCalFile! cmnl. Def aultExt = ".AUT" 

frmCalFile ! cmnl . DialogTitle = "Save Setup" 

frmCalFile! cmnl. FILTER = "Setup Files (*. AUT) I * . AUT| All Files (*.*)!*■*" 

frmCalFile! cmnl. Flags = cdlOFNHideReadOnly + cdlOFNOverwritePrompt + cdlOFNPathMustExist 

On Error Resume Next 

frmCalFile ! cmnl . ShowSave 

If Not Err. Number = cdlCancel Then 

SetupFileName = frmCalFile ! cmnl . FileName 
SetupFileNumber = FreeFile 

Open SetupFileName For Output As #SetupFileNumber 
Call WriteAuto (NewAuto, SetupFileNumber) 

Close SetupFileNumber 
End If 

End Sub 

Private Sub Form_Load() 

Dim i As Integer 
Seqlndex = 0 

'* initialize combo box for gain control 
For i = 0 To GainList.Num - 1 

cmbGain . Addltem GainList . Text (i ) , i 
Next i 



257 


* * initialize trigger options 
For i = 0 To Tr iggerList . Num - 1 

cmbTrigger .Addltem TriggerList . Text (i ) , i 
Next i 

• * initialize file format options 
For i = 0 To Forma tList . Num - 1 

cmbfilef ormat . Addltem FormatList . Text (i ) , i 
Next i 

’* add 16 sequence numbers to the sequence box 
For i = 1 To 16 

cmbSequence . Addltem Str(i) 

Next i 

cmbSequence . Lis t Index = 0 


For i = 0 To 15 

NewAuto { i ) = AutoSetup (i) 

Next i 

* * initialize Form Variables 
Call Init 

End Sub 

Sub AllEnable ( ) 

NewAuto (Seqlndex) .Heaters .method = ALLACTIVE 
txtRange (0) .Enabled = False 
txtRange (1) . Enabled = False 
txtHeaters . Enabled = False 
IstHeaters .Enabled = False 
cmdAdd. Enabled = False 
cmdDelete . Enabled - False 
optMethod(O) .Value = True 
optMethod ( 1 ). Value — False 
optMethod (2) .Value = False 
End Sub 

Sub InitO 

Dim i As Integer 

If NewAuto (Seqlndex) . active = True Then 
chkActive. Value = Checked 

Else 

chkActive. Value = Unchecked 
End If ^ ^ , 

cmbGain . List Index = Str (NewAuto (Seqlndex) . Gainindex) 
txtSampRate . Text = St r (NewAuto (Seqlndex) . SampRate) 
txtDuration . Text - Str (NewAuto (Seqlndex) . Duration) 

txtDelayTime . Text = Str (NewAuto (Seqlndex) . DelayTime) 
cmbTrigger .Listlndex = NewAuto (Seqlndex) . TngSrc 
txtTemp . Text = Str (NewAuto (Seqlndex) . Temp) 

txtRange(O) .Text - Str (NewAuto ( Seqlndex) . Heaters . Range ( 0 ) ) 
txtRange (1) .Text = Str (NewAuto (Seqlndex) . Heaters . Range ( 1 ) ) 
Do While IstHeaters . ListCount > 0 
IstHeaters . Removeltem 0 

Loop 

For i = 0 To ADCLASTCHANNEL 

If NewAuto (Seqlndex) . Heaters . List ( i ) = True Then 
IstHeaters .Addltem Str$(i) 

End If 
Next i 

If IstHeaters. ListCount > 0 Then 
IstHeaters . Listlndex = 0 
End If 


If NewAuto (Seqlndex) . Heaters .method - ALLACTIVE Then 
Call AllEnable 

Elself NewAuto (Seqlndex) .Heaters. method = RANGEACTIVE Then 
Call RangeEnable 



258 


Elself NewAuto (Seqlndex) .Heaters. method = SPECIFIC Then 
Call Specif icEnable 
End If 

txtHeaters . Text = 

txtComments . Text = NewAuto (Seqlndex) .Comments 
txtFileName . Text = NewAuto (Seqlndex) . FileName 
cmbf ilef ormat . Listlndex = NewAuto (Seqlndex) . DataFormat 

End Sub 

Sub RangeEnable ( ) 

NewAuto (Seqlndex) .Heaters. method = RANGEACTIVE 

txtRange(O) .Enabled = True 

txtRange(l) .Enabled = True 

txtHeaters . Enabled = False 

IstHeaters . Enabled = False 

cmdAdd . Enabled = False 

cmdDelete . Enabled = False 

optMethod (0) .Value = False 

optMethod(l) .Value = True 

optMethod (2 ) .Value = False 

End Sub 


Sub Specif icEnable ( ) 

NewAuto (Seqlndex) . Heaters .method = SPECIFIC 

txtRange ( 0 ). Enabled = False 

txt Range ( 1 ). Enabled — False 

txtHeaters . Enabled = True 

IstHeaters. Enabled = True 

cmdAdd. Enabled = True 

cmdDelete. Enabled = True 

optMethod ( 0 ) .Value = False 

optMethod ( 1 ) .Value = False 

optMethod (2) .Value - True 

End Sub 

Private Sub optMethod_Click ( Index As Integer) 

If Index = 0 Then 
Call AllEnable 
Elself Index = 1 Then 
Call RangeEnable 
Elself Index = 2 Then 

Call Specif icEnable 
End If 

End Sub 


Private Sub optMethod_KeyPress (Index As Integer, KeyAscn As Integer) 
Dim newindex As Integer 
If Index < 2 Then 

newindex = Index + 1 

Else 

newindex = 0 
End If 

optMethod (newindex) .SetFocus 
End Sub 


Private Sub txtComments_Change ( ) 

NewAuto (Seqlndex) .Comments = txtComments . Text 

End Sub 


Private Sub txtDelayTime_Change ( ) 
NewAuto (Seqlndex) . DelayTime = 
End Sub 


Val (txtDelayTime .Text) 



259 


Private Sub txtDelayTime_LostFocus { ) 

txtDelayTime . Text = Str (NewAuto (Seqlndex) . DelayTime) 
End Sub 


Private Sub txtDuration_Change { ) 

NewAuto (Seqlndex) . Duration = Val (txtDuration.Text) 

End Sub 


Private Sub txtDuration_LostFocus ( ) 

txtDuration.Text = Str {NewAuto (Seqlndex) . Duration) 
End Sub 


Private Sub txtFileName_Change ( ) 

NewAuto ( Seqlndex }. FileName = txtFileName ♦ Text 

End Sub 

Private Sub txtRange_Change ( Index As Integer) 

Dim limit As Integer 

' * heater range is specified from 0 to adclastchannel 
limit = Val (txtRange (Index) ) 

If limit > *1 And limit < ADCLASTCHANNEL + 1 Then 
NewAuto (Seqlndex) .Heaters . Range ( Index) = limit 
End If 

txtRange (Index) .Text _ 

- Str$ (NewAuto (Seqlndex) .Heaters . Range (Index) ) 


End Sub 

Private Sub txtSampRate_Change ( ) 

NewAuto (Seqlndex) .SampRate - Val (txtSampRate . Text ) 

End Sub 


Private Sub txtSampRate_LostFocus ( ) 

txtSampRate. Text = Str (NewAuto (Seqlndex) . SampRate) 
End Sub 

Private Sub txtTemp_Change ( ) 

NewAuto (Seqlndex) . Temp = Val (txtTemp . Text ) 

End Sub 


Private Sub txtTemp__LostFocus ( ) 

txtTemp. Text = Str (NewAuto (Seqlndex) . Temp) 
End Sub 


G.1.5. Listing of FRMCONFI.FRM 

Option Explicit 

Dim answer As Integer 

Public Function yesno (Caption As String) As Integer 
• ***** 

• * returns True if user clicks on "yes" and 
'* False if user clicks on "no” 

« ***** 

lblConf irm = Caption 
yesno = False 
answer = False 
Show 1 

yesno = answer 
End Function 


Private Sub cmdNoJSlick ( ) 
Unload frmConfirm 



260 


End Sub 


Private Sub cmdYes_Click ( ) 
answer = True 
Unload frmConfirm 
End Sub 


G.1.6. Listing of FRM VIE WC.FRM 

Option Explicit 

Sub RangeEnable ( ) 

txtRange(O) .Enabled = True 
txtRange(l) .Enabled = True 
IstHeaters . Enabled = False 
optMethod ( 0 ). Value = False 
optMethod(l) .Value = True 
optMethod (2 ) .Value = False 

End Sub 

Sub Specif icEnable ( ) 

txtRange (0) . Enabled = False 
txtRange ( 1 ). Enabled = False 
IstHeaters .Enabled = True 
optMethod(O) .Value 35 False 
optMethod ( 1 ). Value — False 
optMethod (2) .Value = True 

End Sub 

Sub AllEnableO 

txtRange (0) .Enabled = False 
txtRange ( 1 ). Enabled = False 
IstHeaters . Enabled = False 
optMethod ( 0 ). Value = True 
optMethod (1) .Value = False 
optMethod (2 ) .Value = False 

End Sub 


G.1.7. Listing of FRMD AC. FRM 

Option Explicit 

i ***** 

f * This form exists to handle comm port activities 
’* using the MSComm control 

i * * * * * 

Private Sub comDAC_OnComm ( ) 

’ Beep 

If comdac . CommEvent = comEvDSR Then 

'* Don't do anything - DSR changed from 
’* TRUE to FALSE meaning 

Else 


MsgBox "comDAC. CommEvent = " + Str$ (comdac. CommEvent) 

End If 
End Sub 

Private Sub Form_Load ( ) 

r ***** 

** NOTE: If you put a comDAC . PortOpen = false 

'* statement right after an Output method, the 
' * output will never get to the comm port, 

'* because the port will close too early. 

• * 

’ * The computer control board requires a carriage 
'* return, line-feed combination, so I defined 



261 


'* a variable in modDAC called CRLF to append 
' * to all output. 

• * * * ★ * 


End Sub 


G.1.8. Listing of FRMADC.FRM 

Option Explicit 


Private Sub tmrADC_Timer ( ) 
Call ADCTimerSub 
End Sub 


Private Sub tmrWait_Timer ( ) 

Dim done As Integer, retval As Integer 
' * Check to see if the A/D boards are finished 
• * collecting data. If so, then read the data 
'* and set controls so heaters, temperature, etc. 
' * can be reset . 

retval = cbDBitIn{0, FIRSTPORTA, 20, done) 

If done = 1 Then Call ADCReadCustom 

End Sub 


G.1.9. Listing of FRMAUTO.FRM 

Option Explicit 
Const INDEXNOFILL - 0 
Const INDEXGETDATA = 0 
Const INDEXMANUAL = 0 


Sub GridlnitO 

Dim i As Integer 
grdAuto . FixedRows = 1 
grdAuto . FixedCols = 1 
grdAuto. Rows = 16 
grdAuto. Cols = 5 

grdAuto. ColWidth(O) = grdAuto . Width / grdAuto. Cols 
For i = 1 To 4 

grdAuto . ColWidth ( i ) = grdAuto . Width / grdAuto. Cols - 110 
Next i 

grdAuto . RowHeight (0) = (grdAuto . Height / 14 - 10) * 2 
For i = 1 To 15 

grdAuto. RowHeight (i) = grdAuto . Height / 14 - 10 
Next i 

grdAuto. col = 0 
For i = 1 To 15 

grdAuto. Row = i 
grdAuto. text = Str(i) 

Next i 

grdAuto. Row - 0 
grdAuto. col = 1 

grdAuto. text = "Temper- ature" 
grdAuto. col = 2 
grdAuto. text = "Input File” 
grdAuto. col 3 

grdAuto. text = "DaqBook File" 
grdAuto. col 4 



grdAuto . text = "High-speed file 


grdAuto.Row = 1 
grdAuto. col = 1 

End Sub 


Private Sub cmbNumFormat_Click { ) 

cmbNumFormat . Listlndex = INDEXNOFILL 
End Sub 

Private Sub cmbTask_Click {) 

cmbTask. Listlndex = INDEXGETDATA 
End Sub 

Private Sub cmbTempMode_Click ( ) 

cmbTempMode . Listlndex = INDEXMANUAL 
End Sub 

Private Sub cmdCopy_Click ( ) 

Dim CellText As String 

Dim i As Integer, j As Integer, OldRow As Integer 
OldRow = grdAuto.Row 
CellText = grdAuto. text 
For i = 1 To grdAuto. Rows - 1 
grdAuto.Row = i 
grdAuto. text = CellText 
Next i 

grdAuto.Row = OldRow 
End Sub 

Private Sub cmdDelete_Click ( ) 

Dim i As Integer, j As Integer, OldRow As Integer, OldCol As Integer 
OldRow = grdAuto.Row 
OldCol = grdAuto. col 

For i = grdAuto. SelStartRow To grdAuto . SelEndRow 

For j = grdAuto. SelStartCol To grdAuto . SelEndCol 
grdAuto.Row = i 
grdAuto. col - j 
grdAuto. text = 

Next j 
Next i 

grdAuto.Row = OldRow 
grdAuto. col = OldCol 
End Sub 

Private Sub cmdLoadAuto_Click ( ) 

Dim FileNumber As Integer, i As Integer, j As Integer 
Dim junk As String 
FileNumber - FreeFile 

Open txtAutoFileName . text For Input As FileNumber 
Input #FileNumber, junk 
txtDelayTime . text = junk 

For i = 1 To grdAuto. Cols - 1 

For j = 1 To grdAuto. Rows - 1 
grdAuto.Row = j 
grdAuto. col = i 
Input #FileNumber, junk 
grdAuto. text = junk 
Next j 
Next i 

Close FileNumber 
End Sub 

Private Sub cmdSave_Click ( ) 

Dim FileNumber As Integer, i As Integer, j As Integer 
FileNumber = FreeFile 

Open txtAutoFileName. text For Output As FileNumber 



263 


Write #FileNumber , txtDelayTime . text 
For i = 1 To grdAuto.Cols - 1 

For j = 1 To grdAuto . Rows - 1 
grdAuto.Row = j 
grdAuto. col = i 

Write #FileNumber, grdAuto. text 
Next j 
Next i 

Close FileNumber 
End Sub 

Private Sub cmdStartAuto_Click ( ) 
grdAuto.Row = 1 
grdAuto. col = 1 

f rmMain. txtTemp = grdAuto. text 

tmr Auto . Enabled = True 
End Sub 


Private Sub Form__Load{) 

Gridlnit 

txtChangeGrid. Top = grdAuto. Top - txtChangeGrid. Height 

lblChangeGrid. Height = txtChangeGrid . Height 

IblChangeGrid. Top = txtChangeGrid. Top 

lblChangeGrid, Caption = "Edit Cell:" 

txtBaseName . text * "" 

txtFirstNum. text = "" 

txtLastNum. text = "" 

cmbNumFormat .Add Item "Don't Fill" 

cmbNumFormat . Addltem "Fill with zeros" 

cmbNumFormat . Listlndex = 0 

txtNumLength = "" 

cmbTempMode. Addltem "Manual Entry" 
cmbTempMode . Addltem "Range" 
cmbTempMode . Add I tern "Randomize" 
cmbTempMode. List Index =* 0 
txtLowTemp . text = "" 
txtHighTemp . text = "" 
txtTempInterval . text = "" 
cmbTask. Addltem "Data Acquisition" 
cmbTask. Addltem "Data Reduction" 
cmbTask .Addltem "Both" 
cmbTask . Listlndex - 0 

tmrAuto . Enabled — False 
tmrHighSpeed . Enabled - False 
tmrTemp . Enabled = False 

'* set two second interval, to make sure to include 

'* 1.6 second DAC time. 

tmrTemp. interval = 2000 

'* set Timer Intervals 

' * 1 minute interval 

tmrAuto . interval = 60000 

’ * 1 second interval 

tmrHighSpeed. interval = 1000 

' * 2 second interval allows time for high-speed 
1 * data-acquisitions to complete 


End Sub 


Private Sub grdAuto_Click { ) 
txtChangeGrid. SetFocus 
End Sub 

Private Sub grdAuto_RowColChange { ) 

txtChangeGrid. text = grdAuto. text 
End Sub 



264 


Private Sub tmrAuto_Timer ( ) 

Static Minutes As Integer 
Minutes = Minutes + 1 

If Minutes = Val { txtDelayTime . text ) Then 
Minutes = 0 

f rmMain ! cmdStart . Value = True 
tmrHighSpeed . Enabled = True 
tmrAuto . Enabled = False 
End If 
End Sub 

Private Sub tmrHighSpeed_Timer ( ) 

Static seconds As Integer 
seconds = seconds + 1 

'* wait until the data acquisition is complete 
If seconds = SetupData . Duration + 5 Then 
seconds = 0 

tmrHighSpeed. Enabled = False 
f rmMain ! cmdStart . Value = True 
tmrTemp . Enabled - True 
End If 
End Sub 


Private Sub tmrTemp_Timer ( ) 

1 * check if there are more datapoints to take 

i* if not, then turn off the timer and don’t do anything else 
1 * otherwise , perform the following steps 
* * change temperature 
' * change Output File Name 
'* Enable Wait timer 
tmrAuto . Enabled = True 
tmrTemp . Enabled = False 
End Sub 


Private Sub txtAutoFileName_Click ( ) 

Static filename As String 
frmCalFile ! cmnl . filename = filename 
f rmCalFile ! cmnl . Def aultExt = "AUT" 
f rmCalFile ! cmnl . DialogTitle = "Data File Name” 

frmCalFile! cmnl. FILTER = "Data Files {* . AUT) | * . AUT | All Files { . )l 

f rmCalFile! cmnl. Flags = cdlOFNHideReadOnly + cdlOFNOverwntePrompt 
On Error Resume Next 
frmCalFile ! cmnl . ShowSave 


+ cdl 0 FN Pat hMust Exist 


If Not Err. Number = cdlCancel Then 

txtAutoFileName = frmCalFile ! cmnl . filename 
filename = frmCalFile ! cmnl . filename 
End If 
End Sub 


Private Sub txtChangeGrid_Change O 
grdAuto . text = txtChangeGrid 
End Sub 


Private Sub txtChangeGrid_GotFocus ( ) 
txtChangeGrid. SelStart = 0 

txtChangeGrid. SelLength = Len (txtChangeGrid. text ) 
End Sub 


(11.10. Listing nfFRMBATCH.FRM 

Dim SampleHeater (100) As Integer, numheaters (100) As Integer, numfrles As Integer, _ 

NumFormat (100) As Integer 

Dim inputf ilename (100) As String, output! ilename ( 100) As String, _ 
offsetfilename (100) As String, boilfilename (100) As String 

Dim FluxThreshold (100) As Double, dgdtthreshold(lOO) As Double, d2qdt2threshold ( 100 ) As Double 



265 


Dim activeForm As Form 

Private Sub cmdAutomate_Click: { ) 

Dim i As Integer, j As Integer 
Dim Flux As Double 
Dim freefilenum As Integer 
Dim offset (119) As Double 
Dim strng As String 
Dim frmActive As Form 
Set frmActive = frmConvert 
Do While 1+1=3 

'* input a list of offset values from a file 
freefilenum = FreeFile 

Open "\trule\dat\sc .dat" For Input As freefilenum 

For i = 0 To 14 

Input #f reef ilenum, offset (i) 

'* assign 15 to 29 the descending order values 
offset (29 - i) = offset { i ) 

Next i 

Close freefilenum 

'* assign the other values of offset in the same 
' * order as 0 to 29 
For i = 0 To 29 

offset(30 + i) = offset(i) 
offset(60 + i) * offset (i ) 
offset ( 90 + i) * offset(i) 

Next i 

Loop 

freefilenum = FreeFile 

'Open "\trule\dat\062297\0622flux. dat" For Output As freefilenum 
Do While 1+1=3 

’ * convert to rms and avgf lux data 
frmActive ! cmbFormat. Li st Index = 7 

For i = 0 To 59 
With frmActive 

. txt input file . text = "\trule\dat\062397\0623_" + Trim(Str(i)) + ".bin" 

. txtoutputfile. text = "\trule\dat\062397\0623_" + Trim(Str(i)) + ".avg" 
. txtOff set . text = Str (of f set (i ) ) 

. cmdConvert .Value = True 
'Print #freef ilenum, . txtavgf lux . Text 
End With 
Next i 

'Close freefilenum 

Loop 

' * Convert to RMS values 

' * convert to rms and avgflux data 
cmbFormat . Li st Index = 7 

For i = 2 To 21 

strng - Trim(Str(i)) 

If i < 10 Then strng = "0" + strng 

frmActive! txtinputf ile . text = "\trule\dat\061797\0617_" + strng + "c.bin" 
frmActive ! txtoutputfile . text = "\trule\dat\061797\0617_" + strng + "c.avg" 

' txtOff set . Text = Str (of f set (i ) ) 
frmActive ! cmdConvert .Value = True 
'Print #f reefilenum, txtavgf lux . Text 
Next i 

Do While 1+1=3 

1 * Redo the above conversion for the nucleate boiling curve data 
' * from 6/22 
For i = 0 To 6 

offset { 13 - i) = offset (i ) 

Next i 

’* assign the other values of offset in the same 
'* order as 0 to 14 



266 


For i = 0 To 13 

offset{14 + i) 
offset(28 + i) 
offset (42 + i) 
Next i 


offset ( i) 
offset (i) 
of fset (i ) 


cmbFormat . Listlndex - 6 


f reef ilenum = FreeFile 

Open "\trule\dat\062397\0624a. fix" For Output As freefilenum 
For i = 0 To 59 

With frmActive , . „ 

txtinputf lie. text = "\trule\dat\062497\0624_" + TrimlStr <i) ) + a. bin 
txtoutputf ile .text = "\trule\dat\062497\0624_" + Trim(Str(i)) + "a.dat" 
'txtOf fset. Text = Str (offset (i) ) 
cmdConvert .Value = True 
Print #f reefilenum, . txtavgf lux. text 
End With 
Next i 

Close freefilenum 

Loop 
End Sub 


Private 

Dim 

Dim 

Dim 

Dim 

Dim 

Dim 

Dim 

Dim 

Dim 

Dim 

Dim 

Dim 

Dim 

Dim 

Dim 

Set 


Sub cmdAveraging_Click ( ) . 

freefilel As Integer, freefile2 As Integer, freefile3 As Integer, freefile4 
ncfilenum{ 100) As Integer, dataf ilenum ( 100 ) As Integer 
scnc(100) As Double 

ncfiletxt As String, datafiletxt As String 

ncfilenartie As String, datafilename As String, outfilename As String 
OutData As Double 
txtline As String 
scncnew As Double 

scncnewtxt As String, datatxt As String 
i As Integer, j As Integer, k As Integer 
ncscnewtxt As String 
data As Integer 
sep As String 

Sum As Double, avg As Double 
frmActive As Form 
frmActive = frmConvert 


sep = Chr$ ( 9 ) 
freefilel = FreeFile 

Open "\trule\dat\scnc . dat" For Input As freefilel 
For i = 0 To 14 

Input #f reef ilel, scnc(i) 

i* assign 15 to 29 the descending order values 
scnc (29 - i) « scnc(i) 
ncfilenum(i) = i + 7 
ncfilenum(29 - i) = i + 7 


Next i 

Close freefilel 


As 


Integer 


For i * 0 To 29 

scnc (30 + i) = scnc (i) 

ncf ilenum ( 30 + i) = ncfilenum(i) 

Next i 

freefile4 = FreeFile 

Open "\trule\dat\062397\0623uncr.dat" For Output As freefile4 
For i - 0 To 59 

ncfiletxt = Trim{Str (ncf ilenum(i) ) ) 
datafiletxt - Trim(Str(i)) 

If ncfilenum(i) < 10 Then ncfiletxt = ”0” + ncfiletxt 
ncfilename = "\trule\dat\061797\0617_" + ncfiletxt + "c.avg" 
datafilename = ”\trule\dat\062397\0623 + datafiletxt + ".avg” 

* outfilename = "\trule\dat\062397\0623_" + datafiletxt + "b.avg" 
freefilel = FreeFile 

Open ncfilename For Input As freefilel 



267 


f reef ile2 = FreeFile 

Open datafilename For Input As freefile2 
' f reef ile3 = FreeFile 

’Open outfilename For Output As freefile3 
For j = 0 To 9 

For k = 0 To 9 

Input #f reef ilel, scncnew 

Input #f reef ile2, data 

OutData - data + scnc(i) ' - scncnew 

If j = 0 And k = 0 _ 

Or j = 0 And k = 9 _ 

Or j = 9 And k = 0 _ 

Or j = 9 And k = 9 _ 

Then OutData = 0 

Sum — Sum + OutData . . „ 

txtline = txtline + format (OutData, "scientific ) 

Next k 

'Print #freefile3, txtline 
txtline = "" 

Next j 

avg — Sum / 96 

Print #f reef ile4 , format {avg, "scientific ) 

Sum = 0 

Close freefilel 
Close freefile2 
'Close freefile3 
Next i 

Close freefile4 
End Sub 


Private Sub cmdBatch_Click ( ) 

Dim inputf ilenumber As Integer 
Dim blank As String 
batchf ilenumber = FreeFile 

Open txtBatchFileName. text For Input As batchf ilenumber 
Input #batchf ilenumber , blank 
Input #batchf ilenumber , numfiles 

- * mput an extra line to provide space for labels 
Input #batchf ilenumber , blank 
For i = 0 To numfiles - 1 

Input #batchf ilenumber, NumFormat(i) 

Next i 

Input #batchf ilenumber , blank 
For i = 0 To numfiles - 1 

Input #batchf ilenumber, inputf ilename (i) 

Next i 

Input #batchf ilenumber , blank 
For i = 0 To numfiles - 1 

Input #batchf ilenumber , outputf ilename { i) 

Next i 

Input #batchf ilenumber , blank 
For i = 0 To numfiles - 1 

Input #batchf ilenumber, of fsetf ilename ( i ) 

Next i 

Input #batchf ilenumber , blank 
For i = 0 To numfiles - 1 

Input #batchf ilenumber, boilf ilename ( i ) 

Next i 

Input #batchf ilenumber, blank 
For i = 0 To numfiles - 1 

Input #batchf ilenumber, numheaters (i ) 

Next i 

Input #batchf ilenumber , blank 
For i = 0 To numfiles - 1 

Input #batchf ilenumber, FluxThreshold (i) 

Next i 


+ sep 



268 


Input #batchf ilenumber , blank 
For i = 0 To numfiles - 1 

Input #batchf ilenumber, dqdtthreshold ( i ) 
Next i 

Input #batchf ilenumber, blank 
For i = 0 To numfiles - 1 

Input #batchf ilenumber, d2qdt2threshold (i) 

Next i 

Input #batchf ilenumber, blank 
For i = 0 To numfiles - 1 

Input #batchf ilenumber , SampleHeater (i ) 
Next i 

tmrbatch . Enabled = True 
End Sub 


Private Sub Form_Load{) 

tmrbatch . Enabled = False 
tmrbatch. interval = 1000 
Set activeForm = frmConvert 
End Sub 


Private Sub tmrbatchjrimer ( ) 

Static i 

If activeForm! cmdConvert. Enabled = True Then 

activeForm! cmbFormat . Listlndex = NumFormat(i) 
activeForm! txtinputfile. text = inputf ilename ( i ) 
activeForm! txtoutputfile. text = outputf ilename <i ) 
activeForm! txtoffsetfile. text = of fsetf ilename (i) 
activeForm! txtBoilFile. text = boilf ilename (i) 

activeForm! txtNumHeaters . text = Str (numheaters (i ) ) 
activeForm! txtf luxthreshold . text = Str { FluxThreshold ( i ) } 
activeForm! txtdqdtThreshold. text = Str (dqdtthreshold ( i ) ) 
activeForm! txtd2qdt2Threshold. text = Str (d2qdt2threshold (i ) ) 
activeForm ! txtThreshSamp . text = Str (SampleHeater ( i ) ) 
activeForm! cmdConvert .Value = True 

i = i + 1 
End If 

If i = numfiles Then 

tmrbatch. Enabled = False 
i = 0 
End If 

End Sub 


G.2. LISTING OF “CAL.VBP” 


Form=FRMMAIN . FRM 

Module =mo d D AC ; . . \TRIM\MODDAC . BAS 

Module=modADC ; . . \TRIM\MODADC . BAS 

Module=modShared; . . \CONTROL\MODSHARE. BAS 
Module=modDaqBook; . . \DAQBOOK. BAS 
Module=modMain; MODMAIN.BAS 
Form=. . \TRIM\FRMCONFI . FRM 
Form=FRMSETUP . FRM 


F o r m= F RMC OMMO . FRM 

Form=. . \TRIM\FRMDAC . FRM 

Form=. . \CONTROL\FRMADC . FRM 

Form= . . \ CONTROL \FRMCALF I . FRM 

Module-modCBW; . . \ . . \ . . \CB\VBWIN\CBW .BAS 

Obiect={ F904 3C88-F6F2-101A-A3C9-08002B2F4 9FB}#1.0#0; 

Ob ject=(BDC217C8-EDl 6-11CD-95 6C-OOOOC04E4COA } # 1 . 0 # 0 ; 

Obiect= ( FAEEE7 63-117E-101B-8933-08002B2F4F5A) #1 . 0#0; 

Obi ect=( 00028CO 1-0000-0000-0000-00000000004 6 ) #1 . 0#0; 


COMDLG1 6 . OCX 
TABCTL16 . OCX 
DBLIST16 . OCX 
DBGRID16. OCX 


/ -nn00-0000-00uu-uuuuuuuuuu4 o ) » i . uitu, uouiMUiv.uw. 

Ref erence=*\G{ BEF6E001-A874 -101A-8BBA-00AA00300CAB ) #1 . 0#0#C : \WINDOWS\SYSTEM\OC25 . DLL#Standard OLE 


Types 



269 


Ref erence=* \G{ 00025E01-0000-0000-COOO-000000000046)#2.5#0#C: WINDOWS \SYSTEM\DA0251 6 . DLL#Microsof t 
DAO 2.5 Object Library 

Object={ 64 8A5603-2C6E-101B-82B6- 0000000000 14 } #1 . 0#0; MSCOMMl 6 . OCX 
Pro jWinSize=46, 385,251,413 
Pro jWinShow=2 
IconForm=” f rmMain” 

HelpFile=” ” 

ExeName="CAL . EXE" 

Name=" Calibration" 

HelpContextID= ,f 0 M 

StartMode=0 

VersionCompatible=”0" 

MajorVer=l 

MinorVer=0 

RevisionVer=0 

AutoIncrementVer=0 

ServerSupportFiles=0 

VersionCompanyName="University of Denver” 

G.2.1. Listing of MODDAC.BAS 

Attribute VB_Name = "modDAC" 

Option Explicit 

i ****** 

' * This module contains code for declaring D/A 
’ * data types and handling low-level D/A functions. It 
' * was designed for controlling the computer control board 
’* for outputing Vcmd values. 

i ****** 


i ***** 

1 * The type DACtype contains only the information 
’* that the software cares about. The low-level 
’ * hardware information will be contained in other 
’* structures and variables which the user and the 
’ * software don’t care about. 

i ***** 

Public Type DACtype 

i ***** 

'* Vcmds values given in units of V. 

’* first index is heater number, second 
' * index is the number of the temperature 
' * table . 

i ***** 


Vcmd(160, 16) As Single 
1 * Indicates whether a table should 
' * be filled with values when DACPutData 
' * is called 

TableActive { 16) As Boolean 
End Type 

'* contains the ASCII values of a 
'* a carriage-return and a line-feed 
Public CRLF As String 

' * the general variable containing the 

' * DAC information 

Public dac As DACtype 

’* Set communication port number 

Public Const PortNum = 1 

' * Set to indicate whether the DAC hardware 

’ * is connected or not 

Public DACHardwareType As Integer 

Public Const DACNOHARDWARE = 0 

Public Const DACCCB = 1 

Public Type DACListType 
Num As Integer 
text (5) As String 
Value (5) As Integer 
End Type 

Public DACList As DACListType 



270 


Sub Cal2DAC (CalData As CalType, TableNum As Integer) 
Dim i 

» * assign vcmd values from caldata to DAC 
For i = 0 To ADCLASTCHANNEL 

dac . Vcmd ( i , TableNum) — CalData . Vcmd { i ) 

Next i 

’ * set table TableNum active 
dac. TableActive (TableNum) = True 

End Sub 


Sub DACClose ( ) 

•* called when the program is exiting, typically 
» * close the comm port when this form is unloaded 
• * which always happen, and only happen, when 
1 * the program exits. 

Select Case DACHardwareType 
Case DACCCB 

f rmDAC ! comdac . PortOpen = False 
Unload frmDAC 
End Select 

End Sub 


Sub DACDef ine { } 

* * initialize the DAC variables 
DACList . Num = 2 

DACList .Value (0) = DACNOHARDWARE 

DACList .Value { 1) = DACCCB 
DACList .text (0) = "No Hardware” 

DACList. text (1) = "Comp. Control Board" 

End Sub 

Sub DACSetTable ( j As Integer) 

<* Set which table in the hardware is being used to ouput 

' * Vcmd signals 
Select Case DACHardwareType 
Case DACCCB 

frmDAC ! comdac . output = CRLF + "T" + Hex(j) _ 

+ CRLF 

dac . TableActive ( j ) = True 
End Select 
End Sub 

Function HexAddr (HeaterNum As Integer, TableNumber ) As String 


l ***** 

' * This subroutine converts a channel address 
f * into a hex string of the 

’* form required by the computer control board 

i ***** 


i ***** 

' * The binary address consists of 3 zeros, 

»★ followed by 4 card select digits, followed 
«* by 4 channel select digits, followed by 1 
»* zero. The highest index is the most sig. 

'* digit (leftmost digit) 

• ***** 

Dim CS As Integer 
Dim ChS As Integer 
Dim DecAddr As Integer 
Dim i As Integer 

Dim BinCS (4 ) As Integer, BinChS{4) As Integer 
Dim BinAddr { 12) As Integer 

•* convert heater number to card select, channel 
«* select. HeaterNum from 0 to ADCLASTCHANNEL 



271 


’* Card select from 0 to 15 

CS = HeaterNum \ 16 

' * Channel Select from 0 to 9 

ChS = HeaterNum Mod 16 

BinAddr(O) = 0 

BinAddr(9) = 0 

BinAddr(lO) = 0 

BinAddr(ll) = 0 


For i = 3 To 0 Step -1 

* * Convert Decimal Card Select into Binary 

* * Card Select 

If CS >= 2 A i Then 
CS = CS - 2 A i 
BinCS(i) = 1 

Else 

BinCS (i) = 0 
End If 

' * Convert decimal Channel Select into Binary 
’ * Channel Select 

If ChS >= 2 A i Then 
ChS = ChS - 2 A i 
BinChS { i ) = 1 

Else 

BinChS { i ) = 0 
End If 

»* m ap Card select and channel select into 
' * binary address 

BinAddr(i + 1) = BinChS (i) 

BinAddr(i +5) = BinCS (i) 


Next i 

For i = 0 To 11 

DecAddr = DecAddr + 2 A i * BinAddr(i) 

Next i 

’* add on &HC000 to get the base address 

'* add on &H200 * tablenumber to get table address 

DecAddr = DecAddr + SHC000 + &H200 * TableNumber 
HexAddr = dectohex (DecAddr, 4) 


End Function 


Function dectohex (ByVal Decimal As Integer, Digits As Integer) As String 


Dim hexl As String 
Dim LeadingZeros As Integer, 
Dim length As Integer 
■ * converts a decimal integer 
'* Digits. Adds leading zero 
’ * length. 


i As Integer 

to a HEX string of the length 
's to fill out to the correct 


1 * convert vcmd to hex value 
hexl = Hex$ (Decimal) 

< * calculate number of leading zero for 3 digits 
’* total string length 
length = Len(hexl) 

LeadingZeros = Digits - Len(hexl) 

' * add leading zeros to string 
For i = 1 To LeadingZeros 
hexl = "0" + hexl 
Next i 

dectohex = hexl 



272 


End Function 

Sub DACInitO 

Dim i As Integer 
Dim junk As String 


Select Case DACHardwareType 
Case DACCCB 

CRLF = Chr$ (13) + Chr$(10) 

' * load the form that has the COM port controls 
Load frmDAC 

** only run the following lines if hardware 
' * is hooked up 

f rmDAC ! comdac. CommPort = PortNum 
frmDAC! comdac. Settings = "9600, N, 8 , 1" 
frmDAC! comdac. InputLen = 1 
frmDAC ! comdac. PortOpen = True 

send a reset command, and set the calibration 

* * table to 0 volts 

* **■*■*★ 


frmDAC! comdac. output = CRLF + "X" + CRLF 
Do While frmDAC ! comdac. InBuf f erCount = 0 

wait until something comes into the 
'* input buffer 

Loop 

Do While frmDAC ! comdac . InBuf f erCount > 0 
** input 1 character at a time until 
’ * the input buffer is empty 
junk = frmDAC! comdac. Input 

Loop 

frmDAC ! comdac . output = CRLF + "CO" + CRLF 
1 * Set table to TO 

If frmDAC! comdac. DSRHolding = False Then frmDAC ! comdac . output = CRLF + TO 

For i = 0 To 15 

dac . TableActive (i) = False 
Next i 
End Select 
End Sub 

Public Sub DACPutData (DACval As DACtype) 

' * Write Vcmd data to all the active tables on the 
1 * microprocessor control card. 

Dim i As Integer, j As Integer 
Dim Address As String 

For j = 0 To 15 

If dac . TableActive ( j ) = True Then 

1 * Step through 160 Vcmd Channels 
For i = 0 To ADCLASTCHANNEL 

'* dac. vcmd is given in mV 
Address = ”S" __ 

+ HexAddr{i, j) _ 

+ dectohex (DACval .Vcmd (i, j) * &HFFF ! 10000, 3) _ 

+ "0" + CRLF 

Select Case DACHardwareType 
Case DACCCB 

frmDAC ! comdac. output = Address 
'* wait until output buffer is clear 
Do While frmDAC ! comdac . OutBuff erCount 
Loop 

End Select 


+ CRLF 



Next i 
End If 
Next j 


End Sub 

Sub SetHeater (HeaterNum As Integer, Voltage As Double) 


■ * * * * * 

' * Output a string to Table zero of the controller board to 
' * change the resistance of one heater. 

» ***** 

’ * voltage is in units of mV 

dac .Vcmd (HeaterNum, 0) = Voltage 
Dim Address As String 
Address = CRLF + "S” _ 

+ HexAddr ( HeaterNum, 0) 

+ dectohex (Voltage * &HFFF / 10000, 3) 

+ "0" + CRLF 

' frmADCStatus ! Ibl2 . Caption = Address 
Select Case DACHardwareType 
Case DACCCB 

frmDAC ! comdac . output = Address 
End Select 

End Sub 


G.2.2. Listing of MODMAIN.BAS 

Attribute VB_Name = "modMain” 

Public SetupDone As Boolean 
Public SetupData As CalSetupType 
Public SetupOut As CalSetupType 
Public Setupln As CalSetupType 
Public Cal As CalType 


G.2.3. Listing of FRMSETUP.FRM 

Dim NewSetup As CalSetupType 
Dim Default As CalSetupType 
Private Sub Combo l_Change ( ) 

End Sub 


Private Sub cmbADChwtype_Change ( ) 

End Sub 

Private Sub cmbADChwtype_Click { ) 

NewSetup .ADChwtype - cmbADChwtype . Listlndex 

End Sub 


Private Sub cmbGain_Click ( ) 

'commented out because I'm not using variable gain 
1 NewSetup . Gainindex = cmbGain . Listlndex 
End Sub 



274 


Private Sub cmdAddClick ( ) . 

Dim heater As Integer 
'* convert text to integer value 
heater = Val { txtHeaters . text ) 

' ★ check if heaters is already selected 
If Not NewSetup . Heaters . List (heater ) = True Then 
<* set heater ON in the heater array 
NewSetup . Heaters . List (heater ) = True 
1 * increment number of active heaters 
NewSetup . Heaters . Num = NewSetup . Heaters . Num + 1 
’ * add new 

IstHeaters . Addltem Str$ (heater) 

End If 

If IstHeaters . Listlndex >= IstHeaters . ListCount _ 
Or IstHeaters .Listlndex < 0 Then 
IstHeaters. Listlndex = 0 
End If 


End Sub 

Private Sub cmdADSetup_Click ( ) 
frmADSetup. Show 1 

End Sub 

Private Sub cmdCancel_Click ( ) 
Unload frmSetup 
End Sub 

Private Sub cmdDASetup__Click { ) 
f rmDASetup. Show 1 
End Sub 


Private Sub cmdDef aults_Click ( ) 

NewSetup = Default 
Call Init 

End Sub 

Private Sub cmdDelete_Click ( ) 

If IstHeaters . ListCount > 0 Then 
Dim heater As Integer 
Dim Index As Integer 

’* assign the deleted heater to the text box 

' * so it could be quickly re-added 

Index = IstHeaters .Listlndex 

txtHeaters = IstHeaters . List ( Index) 

heater — Val (IstHeaters .List (Index) } 

' * remove heater from setup array 

NewSetup. Heaters .List (heater) = False 

' * decrement number of active heaters 
NewSetup . Heater s . Num = NewSetup . Heaters . Num - 1 
• * remove the heater from the list box 
IstHeaters . Removeltem Index 
If Index < NewSetup. Heaters. Num Then 
IstHeaters . Listlndex = Index 
Elself NewSetup. Heaters .Num > 0 Then 
IstHeaters . Listlndex = Index - 1 
End If 
End If 


End Sub 

Private Sub cmdLoad_Click ( ) 

Dim SetupFileNumber As Integer 
Dim SetupFileName As Integer 
'* set up properties of file box 



275 


f rmCalFile ! cmnl . Def aultExt = ".CFG" 
f rmCalFile ! cmnl . DialogTitle = "Load Setup File” 

frmCalFile! cmnl. FILTER = "Setup Files ( * . CFG) | * . CFG | All Files { * . * } I * . *” 

f rmCalFile ! cmnl . Flags = cdlOFNHideReadOnly + cdlOFNPathMustExist + cdlOFNFileMustExist 
On Error Resume Next 
f rmCalFile ! cmnl . ShowOpen 
If Not Err. Number = cdlCancel Then 

1 * return the file name from the text box 
NewSetup. FileName = f rmCalFile ! cmnl . FileName 
' * find free file number 
SetupFileNumber = FreeFile 
'* open data file for input 

Open NewSetup. FileName For Input As #SetupFileNumber 
'* call the subroutine that reads the data 
Call ReadCalSetup (NewSetup, SetupFileNumber) 

'* close the setup file 
Close SetupFileNumber 
** re-initialize the form 
Call Init 

End If 

End Sub 

Private Sub cmdOK_Click ( ) 

'* Look for parameters that cause problems. 

If NewSetup. Heaters. Range{0) > NewSetup . Heaters . Range ( 1 ) Then 
MsgBox "Number of Last Heater" + CRLF _ 

+ "is higher than First Heater." 

Else 

? * if all the parameters are ok, then 
' * setup i sok. 

SetupData = NewSetup 
Call SetADCParams 
Call SetADC 
SetupDone = True 
Unload frmSetup 
End If 

End Sub 

Private Sub cmdSave_Click ( ) 

Dim SetupFileNumber As Integer 
Dim SetupFileName As String 
'* Initialize CommonDialogBox 
f rmCalFile ! cmnl . Def aultExt = ".CFG" 
f rmCalFile ! cmnl . DialogTitle = "Save Setup" 

f rmCalFile ! cmnl. FILTER = "Setup Files ( * . CFG) I * . CFG I All Files {*.*)!*.*" 

f rmCalFile! cmnl. Flags = cdlOFNHideReadOnly + cdlOFNOverwritePrompt + cdlOFNPathMustExist 

On Error Resume Next 

frmCalFile ! cmnl . ShowSave 

If Not Err. Number = cdlCancel Then 

' * return a file name from dialog box 
NewSetup. FileName = frmCalFile ! cmnl . FileName 
1 * find a free file number 
SetupFileNumber = FreeFile 
* * open setup file for output 

Open NewSetup. FileName For Output As #SetupFileNumber 
'* call the subroutine that writes the data 
Call WriteCalSetup (NewSetup, SetupFileNumber) 

' * close the output file 
Close SetupFileNumber 
End If 

End Sub 


Private Sub Commandl_Click ( ) 


End Sub 



276 


Private Sub Form_Load{) 

’* Got rid of gain list - gain of 1 works for 

' * all situations 

’For i = 0 To GainList . Num - 1 

’ cmbGain . AddI tem GainList .Text { i ) , i 

'Next i 


i * * * * * 

'* Define Default Setup Values 
* ***** 

Default . Vthresh = 300 

Default. Slew = 100 

Default . Vstep = 3 

Default. Vmax = 10 

Default. Rep = 1 

Default . nuinscans = 20 

Default . ScanRate - 1000 

Default . Gainindex - 0 

Default . Heaters .method = ALLACTIVE 

Default . Heaters . Num = 0 

Default . Comments ■ 


If SetupDone = True Then 
NewSetup - SetupData 

Else 

NewSetup = Default 
End If 

’* Initialize Form Variables 
Call Init 


End Sub 


Sub InitO 

' * several of the following lines were commented 
'* out when calibration routine was changed to 
’* bisection routine. 

txtVThresh. text = Str$ (NewSetup .Vthresh) 

' txtSlew. Text = Str$ (NewSetup . Slew) 
txtVStep .text = Str$ (NewSetup .Vstep) 

' txtVmin.Text = Str$ (NewSetup . Vmin) 
txtVMax . text = Str$ (NewSetup. Vmax) 

' txtRep . Text = Str$ (NewSetup. Rep) 
txtNumScans . text = Str$ (NewSetup . numscans ) 
txtScanRate . text - Str$ (NewSetup . ScanRate) 

'commented out because cmbgain had no values in list 
' cmbGain. Listlndex = NewSetup. Gainindex 
txtADCOf f set . text = Str (NewSetup . ADCOff set ) 

txtRange(O) - NewSetup . Heaters . Range (0) 
txtRange ( 1 ) = NewSetup . Heaters . Range ( 1 ) 

Do While IstHeaters . ListCount > 0 
IstHeaters . Removeltem 0 

Loop 

For i = 0 To 159 

If NewSetup . Heaters. List (i) = True Then 
IstHeaters .Addltem Str$(i) 

End If 
Next i 

If IstHeaters .ListCount > 0 Then 
IstHeaters . Listlndex = 0 
End If 


If NewSetup . Heaters . method = ALLACTIVE Then 



Call AllEnable 

Elself NewSetup. Heaters .method = RANGEACTIVE Then 
Call RangeEnable 

Elself NewSetup. Heaters . method = SPECIFIC Then 
Call SpecificEnable 
End If 

txtComments = NewSetup . Comments 
txtHeaters = "" 

End Sub 

Sub AllEnable () 

NewSetup. Heaters .method = ALLACTIVE 
txtRange (0) . Enabled = False 
txtRange ( 1 ). Enabled = False 
txtHeaters . Enabled = False 
IstHeaters . Enabled = False 
cmdAdd . Enabled = False 
cmdDelete . Enabled = False 
optMethod (0 ). Value = True 
optMethod ( 1 ). Value = False 
optMethod {2 ) .Value = False 
End Sub 

Sub RangeEnable ( ) 

NewSetup . Heaters . method = RANGEACTIVE 
txtRange ( 0) . Enabled = True 
txtRange ( 1 ). Enabled = True 
txtHeaters . Enabled = False 
IstHeaters . Enabled = False 
cmdAdd . Enabled = False 
cmdDelete . Enabled = False 
optMethod {0 ) .Value = False 
optMethod (!) .Value - True 
optMethod (2 ) .Value = False 


End Sub 

Sub Specif icEnable ( ) 

NewSetup . Heater s . method = SPECIFIC 
txtRange ( 0) . Enabled = False 
txtRange ( 1 ). Enabled = False 
txtHeaters . Enabled = True 
IstHeaters . Enabled = True 
cmdAdd . Enabled = True 
cmdDelete . Enabled ■ True 
optMethod ( 0) . Value - False 
optMethod ( 1 ). Value - False 
optMethod (2 ). Value = True 

End Sub 

Sub SetADCParams ( ) 

SetupData . Gainindex = 0 
SetupData . ADChwtype = 1 

1 * set the duration variable for use in the 
’ * SetADC subroutine 

SetupData. Duration = SetupData . numscans / SetupData . ScanRate 

1 * let samprate = scanrate to preserve 

’* compatibility with other program 

SetupData . SampRate = SetupData . ScanRate 

SetupData . Trigsrc = 0 

ADC. trigger = MANUALTRIG 

ADC.Freq = SetupData . ScanRate 

ADC. numscans = SetupData . numscans 

' * I don’t want to turn on all the ADC. Channels 
1 * right now. 

’If SetupData . Heaters .method = ALLACTIVE Then 
’ For i - 0 To 159 
1 ADC . Channels ( i ) = True 



278 


Next i 

Elself SetupData. Heaters. method = RANGEACTIVE Then 
For i = 0 To 159 

ADC . Channels (i ) = False 
Next i 

For i = SetupData. Heaters. Range (0) _ 

To SetupData. Heaters. Range(l) 

ADC .Channels (i) = True 
Next i 


» Elself SetupData. Heaters .method = SPECIFIC Then 

’ For i = 0 To 159 

» ADC . Channels (i) - False 

' Next i 

• For i = 0 To SetupData . Heaters . Num - 1 

» ADC . Channels (IstHeaters . List ( i ) ) = True 

1 Next i 

1 End If 


End Sub 


Private Sub Textl_Change { ) 
End Sub 


Private Sub optMethod_Click ( Index As Integer) 

If index = 0 Then 
Call AllEnable 
Elself Index = 1 Then 
Call RangeEnable 
Elself Index - 2 Then 

Call Specif icEnable 
End If 

End Sub 

Private Sub txtADCOf fset_Change { ) 

NewSetup . ADCOf f set - Val (txtADCOf f set . text ) 

End Sub 

Private Sub txtComments_Change ( ) 

NewSetup . Comments = txtComments . text 
End Sub 

Private Sub txtHeaters_Change ( ) 

Static Value 
Dim NewValue 

NewValue = Val (txtHeaters . text ) 

If NewValue > -1 And NewValue < 160 Then 
Value = NewValue 

Else 

txtHeaters . text = Str$ (Value) 

End If 
End Sub 


Private Sub txtHeaters_KeyPress (KeyAscii As Integer) 
If KeyAscii = 13 Then 
Call cmdAdd_Click 
End If 


End Sub 



279 


Private Sub txtNumScans_Change ( ) 

NewSetup . nuinscans = Val { txtNumScans . text ) 
End Sub 

Private Sub txtNumScans_LostFocus ( ) 

txtNumScans .text = Str$ (NewSetup. nuinscans) 
End Sub 


Private Sub txtRange_Change { Index As Integer) 

Dim limit As Integer 

'* heater range is specified from 0 to 159 
limit = Val (txtRange (Index) ) 

If limit > -1 And limit < 160 Then 

NewSetup . Heaters . Range (Index) = limit 
End If 

End Sub 

Private Sub txtRange_LostFocus ( Index As Integer) 

txtRange (Index) .text = Str$ (NewSetup . Heaters . Range (Index) ) 

End Sub 


Private Sub txtRep_Change ( ) 

NewSetup. Rep = Val (txtRep . text ) 
End Sub 

Private Sub txtRep_LostFocus ( ) 

txtRep. text = Str$ (NewSetup. Rep) 
End Sub 


Private Sub txtSampRate_Change ( ) 

NewSetup. ScanRate = Val (txtScanRate . text ) 
End Sub 

Private Sub txtScanRate_Change ( ) 

NewSetup. ScanRate = Val (txtScanRate . text ) 
End Sub 


Private Sub txtScanRate_LostFocus ( ) 

txtScanRate . text = Str$ (NewSetup. ScanRate) 
End Sub 


Private Sub txtSlew_Change ( ) 

NewSetup . Slew = Val (txtSlew. text) 

End Sub 

Private Sub txtSlew_LostFocus { ) 

txtSlew. text = Str$ (NewSetup . Slew) 
End Sub 


Private Sub txtTemp_Change { ) 

NewSetup. temp = Val (txtTemp . text ) 
End Sub 

Private Sub txtTemp_JL.ost Focus ( ) 

txtTemp. text = Str$ (NewSetup . temp) 
End Sub 


Private Sub txtVMax_Change ( ) 
Dim newval As Double 
newval = Val (txtVMax. text) 



If newval <= 10000 And newval > 0 Then 
NewSetup . Vmax = newval 
End If 
End Sub 

Private Sub txtVMax_LostFocus ( ) 

txtVMax. text = Str$ (NewSetup. Vmax) 

End Sub 


Private Sub txtVmin_Change ( ) 

Dim newval 

newval - Val (txtVmin . text ) 

If newval >= 0 And newval < 10000 Then 
NewSetup. Vmin = Val (txtVmin. text) 
End If 
End Sub 

Private Sub txtVmin_LostFocus ( ) 

txtVmin. text = Str$ (NewSetup. Vmin) 

End Sub 


Private Sub txtVStep_Change ( ) 

NewSetup. Vstep = Val (txtVStep. text) 
End Sub 

Private Sub txtVStep_LostFocus ( ) 

txtVStep. text = Str$ (NewSetup .Vstep) 
End Sub 


Private Sub txtStepRate_Change ( ) 

End Sub 

Private Sub txtVThresh_Change ( ) 

NewSetup. Vthresh = Val (txtVThresh. text ) 

End Sub 


Private Sub txtVThresh_LostFocus ( ) 

txtVThresh. text = Str$ (NewSetup. Vthresh) 
End Sub 


G.2.4. Listing of FRMMAIN.FRM 

Option Explicit 

i ■**•*■** 

* * declare variables for the calibration timer routine 

i * * * * * 

1 * keeps track of the element in the heaterlist array 
' * that is being tested. 

Dim Heaterlndex As Integer 

’* keep track of the number of repetitions 
Dim Replndex As Integer 

»* contains a list of the heaters to be tested 
Dim HeaterList (160) As Integer 
1 * number of heaters to scan through 
Dim NumHeaters 

'* hrs, min, seconds since beginning of test 
Dim TestTime As Long 

• * number of seconds since midnight at start of test 
»* This will cause a confused test time if tests run 
'* past midnight, but it isn't a critical variable. 

Dim StartTime As Long 

1 * sum of Vcmd values from each repitition 
Dim VcmdSum As Double 



' * number of Vcmd values that are summed to 
' * get the average that is saved in the calibration 
’ * array 

Dim NumVals As Integer 

* * generic variable used in averaging 
Dim Sum As Double 

’Vcmd stores the value of Vcmd to be output 
'* to the controller board 
Dim Vcmd As Double 

' * VHeater contains the average of the scans of 
' * the heater output voltage 
Dim VHeater As Double 

* * Vindex is used in the bisection routine to tell which 

* * of the three voltages is being applied 
Dim Vindex As Integer 

' * array of three vcmd values that are used in subBisect 
Dim V{3) As Double 


Sub ADCDone ( ) 

• * ADCDone doesn’t do anything but call another subroutine because there is 

• * a subroutine in the ADC module that calls ADCDone to signal the end of 
'* data acquisition, but I initially used the subroutine StopCal for this 

• * same purpose before I started using that subroutine. I THINK that's 
' * what happened, anyway! 

Call StopCal 

End Sub 

Sub CalErrorO 

txtErrors . text = _ 

"Calibration failed heater # " _ 

+ Str$ (HeaterList (Heaterlndex) ) _ 

+ CRLF + txtErrors . text 
Cal . Vcmd (HeaterList (Heaterlndex) ) = 0 

NextChannel 


End Sub 

Sub NewPoint (exceeded () As Integer) 

Dim DeltaV As Double 
Dim i As Integer 

' * calculate the new calibration datapoint to take 
DeltaV = V (2 ) - V(l) 

If Not exceeded (0) And exceeded(l) Then 
V (2 ) = V < 1 ) 

exceeded{2) - exceeded(l) 

V ( 1 ) = V<0) + (V (2) - V(0) ) / 2 
Elself Not exceeded (1) And exceeded (2) Then 
V(0) = V(l) 

exceeded (0) «■ exceeded (1) 

V ( 1 > = V{0) + ( V ( 2 ) - V(0) ) / 2 

Elself Not exceeded(O) And Not exceeded(l) And Not exceeded (2) Then 
For i = 0 To 2 

V ( i ) = V ( i ) + DeltaV 

Next i 
Vindex = 0 

Elself exceeded (0) And exceeded (1) And exceeded (2) Then 
For i = 0 To 2 

V (i) = V (i ) - DeltaV 

Next i 
Vindex = 0 
End If 

' + check if the last heater has been sampled 
* * check to see if DeltaV has become small enough to accept 
’ * calibration point 
If DeltaV <= SetupData. Vmax Then 
Savepoint 



282 


Else 

' * Otherwise, set the heater for the correct 
' * value 

Call SetHeater (HeaterList (Heaterlndex) , V ( 1 ) ) 
' * set ADC sampling for this channel also 
ADC . Channels (HeaterList (Heaterlndex } ) = True 


End If 


■* Check to see if newly-assigned Vcmd exceeds the limits 
If V(0) < 0 Or V (2 ) > 10000 Then 
CalError 

'* Set the returned Vcmd to zero and display error message 
' * go to the next channel 
End If 

' * set Vcmd to V ( 1 ) 


End Sub 

Sub Savepoint () 

1 * call subroutine to save the value of Vcmd 
' * and change to next heater number 
' * Swap to Old Values 

Cal .Vcmd (HeaterList (Heaterlndex) ) = Int(V(l)) 
lblOldHeaterNum. Caption = lblHeaterNum. Caption 
lblOldVcmd. Caption = Str (Cal .Vcmd (HeaterList (Heaterlndex) ) ) 

NextChannel 


End Sub 

Sub NextChannel ( ) 

' * set Vcmd output to zero 

Call SetHeater (HeaterList (Heaterlndex) , 0} 

' * turn off sampling on this channel 

ADC . Channels (HeaterList (Heaterlndex) ) = False 

' * increment the heeater index 

Heaterlndex = Heaterlndex + 1 

1 * reset the index to zerO 

Vindex = 0 

V(0) = 0 

V(l) = 5000 

V (2 ) = 10000 

* * check to see if we’ve sampled the last heater 
If Heaterlndex >= NumHeaters Then 

' * set current heater Vcmd to zero 

Call SetHeater (HeaterList (Heaterlndex) , 0) 

' * call the CalStop routine 
Call StopCal 

Else 

Call SetHeater (HeaterList (Heaterlndex) , V < 0 ) ) 
End If 


End Sub 


Sub StopCal () 

' * This subroutine executes after the calibration is complete. It save the 
’* calibration data and shuts everything off. 

Dim FileNumber As Integer 
' * disable timer 
tmrl. Enabled = False 


» * 


toggle command buttons 



283 


cmdStart .Enabled = True 
txtFileName. Enabled = True 
cmdBrowse. Enabled = True 
txtComments . Enabled = True 
cmdSetup . Enabled = True 
cmdStop . Enabled = False 

* * set Vcmd = 0 

Call SetHeater (HeaterList (Heaterlndex) , 0) 

' * turn off sampling of that channel 

ADC. Channels (HeaterList (Heaterlndex) ) = False 

' * Save Vcmd File 
1 * find a free filenumber 
FileNumber = FreeFile 

»* open file using textbox name, for output 
Open txtFileName. text For Output As FileNumber 
' * write setup data 

Call WriteCal Setup ( SetupData, FileNumber) 

' * write Vcmd Data 

Call WriteCal (Cal, FileNumber) 

Close FileNumber 
’ * Change Status Indicator 
lblStatus. Caption = "Inactive” 
lblStatus . ForeColor - RGB(255, 0, 0) 


End Sub 

Sub subBisect() 

Static exceeded{3) As Integer 

Dim i As Integer, OverThresh As Integer 

’* On the first sample, Vcmd should have already 

* * been set to it's first value in cmdStart. 

'* Turn on ADC array for desired heater to sample 
** All other ADC values should have been 
’ * set in setup 

ADC. Channels (HeaterList (Heaterlndex) ) = True 

' * Take Data 

1 * I want ADCGetData to return mV readings 
ADCGetData 

' * Average scan values 
Sum = 0 

For i = 0 To ADC.numscans - 1 

Sum - Sum + ADC . Buff er (0, i) 

Next i 

' * Vheater is given in mV 
VHeater = Sum / ADC.numscans 

'* Check heater voltage for Threshold voltage 
If VHeater > SetupData . Vthresh Then 
OverThresh = True 

Else 

OverThresh = False 
End If 


** check if all three vcmd values have been tested. Then decide what 
1 * three values of vcmd to test next. 

If Vindex < 3 Then 

' * assign threshold value to indexed array 
exceeded (Vindex) = OverThresh 
' * increment the Vcmd index 
Vindex = Vindex + 1 
' * set vcmd to V (vindex) 

Call SetHeater (HeaterList (Heaterlndex) , V(Vindex)) 

* * set ADC sampling for this channel also 

Else 

exceeded (1) = OverThresh 



284 


End If 

If Vindex - 3 Then 

Call NewPoint (exceeded) 

End If 

UpdateWindow 
End Sub 
Sub subExitO 

If f rmConf irnu yesno ( "Exit Heater Calibration?") = True Then 
Unload frmMain 
End If 

End Sub 

Sub UpdateWindow ( ) 

’* Update the values displayed in the window control. 

' * update test time 

TestTime = CLng (Timer) - StartTime 
lblTestTime. Caption = Str$ (TestTime) 

lblHeaterNum. Caption = Str$ (HeaterList (Heaterlndex) ) 
lblVcmd. Caption = Str$ (Vcmd) 
lblReps .Caption = Str$ (Replndex) 

End Sub 

Private Sub cmdBrowse_Click ( ) 

' * Load a common-dialog window to browse calibration output files 
frmCalFile ! cmnl . DefaultExt - ".CAL" 
f rmCalFile ! cmnl . DialogTitle = "Data File Name" 

frmCalFile ! cmnl . FILTER = "Calibration Files (* . CAL) I * . CAL | All Files (*.*)!*.*" 

frmCalFile ! cmnl . Flags = cdlOFNHideReadOnly + cdlOFNOverwritePrompt + cdlOFNPathMustExist 

On Error Resume Next 

frmCalFile ! cmnl . ShowSave 

If Not Err. Number = cdlCancel Then 

txtFileName = frmCalFile ! cmnl . FileName 
Call txtFileName_Change 
End If 

End Sub 

Private Sub cmdExit_Click ( ) 

'* call the subroutine to prompt the user to confirm exit 
Call subExit 
End Sub 

Private Sub cmdSetup_Click ( ) 

■* Load the setup form, to set parameters in the program 
f rmSetup. Show 1 

1 * enable the start button once setup is complete. Thus the user is 
•* required to go to setup and press "OK" before any calibration 
' * can be performed. 

'* Also checks to see if a filename has been entered in the filename box 

If SetupDone = True _ 

And Not ADC. FileName * "" Then 
cmdStart . Enabled = True 
End If 

End Sub 

Private Sub cmdStart_Click ( ) 

' * Begin the calibration 

' * Disable everything we don't want user to 
' * mess with while collecting data. 

Dim i As Integer 
cmdStart . Enabled = False 
txtFileName . Enabled = False 



285 


cmdBrowse . Enabled = False 
txtComments . Enabled = False 
cmdSetup. Enabled = False 
cmdStop . Enabled = True 

** Turn on the status indicator 
lblStatus .Caption = "Calibrating" 
lblStatus . ForeColor = RGB(0, 255, 0) 

' * set the timer interval - mult, by 1000 to convert to ms 
tmrl . interval = 1000 / SetupData . Vstep 
1 * enable the timer 
tmrl. Enabled = True 

•* initialize variables for the calibration routine 
V (0) = 0 
V(l) = 5000 
V { 2 ) = 10000 

'* initially set Vindex to zero 

Vindex = 0 

Heaterlndex = 0 

VcmdSum - 0 

NumVals = 0 

txtErrors . text = "" 

'* initialize the start time, update after each 
' * calibration 
StartTime = Timer 
TestTime = 0 

'* go through and initially make sure sampling 
' * is turned off on all the channels. It accidently 
1 * got turned on in SetADC. Gotta fix that! 

For i = 0 To ADCLASTCHANNEL 
ADC. Channels (i) = False 

Next i 


•+ form heater list array to make program simpler 
* * The number of valid elements in this array 
’* should be the same as setupdata . heaters . num 
If SetupData . Heaters .method = SPECIFIC Then 
For i - 0 To 159 

If SetupData. Heaters. List (i) = True Then 
HeaterList (Heaterlndex) = i 
Heaterlndex = Heaterlndex + 1 
End I f 
Next i 

NumHeaters = SetupData . Heaters . Num 
Elself SetupData . Heaters .method = RANGEACTIVE Then 

For i = SetupData. Heaters . Range (0) To SetupData . Heaters . Range ( 1 ) 
HeaterList (Heaterlndex) = i 
Heaterlndex ■ Heaterlndex + 1 
Next i 

NumHeaters « SetupData . Heaters . Range { 1 ) _ 

- SetupData. Heaters. Range(0) + 1 
Elself SetupData . Heaters .method = ALLACTIVE Then 
For i = 0 To 159 

Heaterlndex = i 
HeaterList (Heaterlndex) = i 
Next i 

NumHeaters = 96 
End If 

' * reset heaterindex to zero 
Heaterlndex = 0 

' * set vcmd to V (vindex) 

Call SetHeater (HeaterList (Heaterlndex) , V (Vindex)) 

1 * update the values displayed in the main window 
Call UpdateWindow 



End Sub 

Private Sub cmdStop_Click ( ) 

*★ call subroutine to stop the calibration 

Call StopCal 
End Sub 


Private Sub Form_Load() 

'* initialize control values 

cmdStop . Enabled = False 

cmdStart. Enabled = False 

CRLF = Chr$ ( 13) + Chr$(10) 

txtTemp . text = "" 

txtErrors . text = 

txtFileName. text = "" 

txtComments . text = " " 

lblStatus . Caption = "Inactive" 

lblStatus . ForeColor = RGB(255, 0, 0) 

lblTestTime . Caption = 

lblHeaterNum. Caption = 

lblVcmd. Caption = "" 

lblReps .Caption = 

lblOldHeaterNum. Caption = 

lblOldVcmd. Caption = 

* * temporarily use to set hardware selections 
ADCHardwareType = ADCDAQBOOK 
DACHardwareType = DACCCB 
• + set daqbook parallel port protocol 
ADCPPP = ADC8BIT 

SetupData. ADChwtype = ADCDAQBOOK 

'* when program is initially loaded, setup has not been performed, so set 
1 * this variable . 

SetupDone — False 

'* cause error to result if the file load/save 

'* form is canceled. 

f rmCalFile ! cmnl . Cancel Error = True 

' * initialize A/D variables 

ADCDef ine 

Call DACInit 

End Sub 


Private Sub Form_QueryUnload (Cancel As Integer, UnloadMode As Integer) 
If Not UnloadMode — vbFormCode Then 
Call subExit 
End If 

End Sub 


Private Sub Form_Unload {Cancel As Integer) 
DACClose 
ADCClose 
End 

End Sub 


Private Sub tmrl_Timer{) 



287 


subBisect 


End Sub 


Private Sub txtCominents_Change ( ) 

- * text in this text box is saved with the calibration 

Cal. Comments = txtComments . text 
End Sub 


file 


Private Sub txtFileName_Change 0 
ADC . FileName = txtFileName 
If ADC. FileName = Then 

cmdStart .Enabled = False 
Elself SetupDone = True Then 
cmdStart. Enabled * True 
End If 


End Sub 


Private Sub txtTemp_Change { ) 

Cal. temp = Val { txtTemp . text ) 
End Sub 


Private Sub txtTemp_Los t Focus ( ) 
txtTemp = Str$ (Cal .temp) 

End Sub 


G.3. LISTING OF GRAPH1.VBP 


Form=FRMMAIN . FRM 

Module=modShared; . . \CONTROL\MODSHARE , BAS 
Module-modMain; . . \CONTROL\MODMAIN . BAS 
Module=modADC; . . \TRIM\MODADC . BAS 
Module=modDaqBook; . . \DAQBOOK . BAS 
Form= . . \ CONTROL \FRMCALFI . FRM 


Form= . . \CONTROL\ FRMADC . FRM 

Module=modGraph; MODGRAPH.BAS _ 

Ob ject= { F9043C88-F6F2-101A-A3C9-08002B2F49FB } #1 . 0#0 ; COMDLG16 . OCX 

Object={ FAEEE7 63- 117E-101B-^ #1 ! 0#0; DBLIST16.0CX 

Ref erence=* \G^BEF6E001-A874-101A-8BBA-00AA00300CAB^#1^0#0#C^\WINDOWS\SYSTEM\OC25 . DLL# Standard 


OLE 


Reference** \G ( 00025E01-0000-0000-COOO-00000000004 6} #2 . 5#0#C: \WINDOWS\SYSTEM\DA02516. DLL#Microsoft 

DAO 2.5 Object Library 
Pro j WinS i 26=19, 314,251,413 
ProjWinSh o w=2 
IconForm="f rmMain" 

ExeName= n GRAPH 1 . EXE" 

Path=”F : \BIN" 

Name="Projectl" 

HelpContextID="0" 

StartMode=0 

VersionCompatible= M 0" 

Ma j orVer=l 
MinorVer=0 
Revis ionVer=0 
Autolncrementver=0 
Serve rSupportFiles=0 

VersionCompanyName="University of Denver 


G 3A - Ligting of MODGRPAH.BAS 


Attribute VB_Name : 
’ * These functions 


* "modGraph” 

and constants are necessary only to keep 


the compiler 



•* from complaining, without including cbw.bas. Not even necessary when running 
•* without a full compile. 


Public Const FIRSTPORTA = 0 
Public Const FIRSTPORTB = 0 
Public Const firstportcl = 0 
Public Const FIRSTPORTCH = 0 
Public Const DIGITALOUT = 0 
Public Const digitalin * 0 


Function cbdbitin(a, b, c, d) 

* * dummy function 
End Function 

Function cbdbitout(a, b, c, d) 

' * dummy function 
End Function 

Function cbdconf igport (a, b, c) 

* * dummy function 
End Function 

Function cbdin(a, b, c) 

' * dummy function 
End Function 

Function cbdout(a, b, c) 

' * dummy function 
End Function 


G32, lasting nfFRMMAIN.FRM 

Option Explicit 
Dim OutData As Double 
Dim NumScans As Integer 
Dim HeaterColor As Long 
Dim Setupln As SetupType 

Dim x ( 1 60 ) As Integer, y(160) As Integer 
Dim Data (100, 2000) As Double 
Dim Colors (100, 2000) As Long 

Dim MaxPower As Double 


Sub ADCDone ( ) 

«* Dummy subroutine so it will compile 


End Sub 

Sub Animate ( ) 

Dim i 
Dim j 

Dim Time As Integer, TimeStep As Double 
Dim TimePrint As Integer 


Time = 0 

'* TimeStep is in ms 

TimeStep = 1 / Setupln. SampRate * 1000 
TimePrint = 0 


For i = 0 To NumScans - 1 


For j = 0 To Setupln. heaters. Num - 1 

Line (x(j), y(j))-(x(j) + 230, y(j> 
Next j 

' * Time is in ms 
Time - TimeStep * i 
TimePrint = TimePrint + 1 


+ 230) , Colors ( j , 


i), BF 



If TimePrint = 10 Then 

txtTime. text = Str(Time) 
TimePrint = 0 
txtTime . Refresh 
End If 

Next i 


End Sub 


Function FalseColor (OutData As Double) As Long 

Dim R As integer, G As Integer, b As Integer, 
temp = OutData * 255 * 5 / MaxPower 
If temp <= 255 Then 
R = 0 
G = 0 
b = temp 

Elself temp <= 256 * 2 Then 
R = 0 

G = -255 + temp 
b = 255 

Elself temp <= 256 * 3 Then 
R = 0 
G = 255 

b = 256 * 3 - temp 
Elself temp <= 256 * 4 Then 
R = temp - 256 * 3 
G = 255 
b = 0 

Elself temp <= 256 * 5 Then 
R = 255 

G = 256 * 5 - temp 
b = 0 

Else 

R = 255 
G = 255 
b = 255 
End If 


temp As Integer 


FalseColor = RGB(R, G, b) 
End Function 


Sub LoadBinO 

Dim DataPoint As Integer 

Dim ScanLine As String, Sep As String 

Dim j As Integer 

Dim strDate As String 

Dim strTime As String 

Dim Comments As String 

Dim inputFileNumber As Integer 

Dim Output FileNumber As Integer 

Dim TagFileNumber As Integer 

Dim IngDataPoint As Long 

Dim Formatted As String 

Dim heaters (160) As Integer 

Dim PercentComplete As Long, oldPC As Long 
Dim i As Integer, FullScale As Integer 
Dim heaterindex As Integer 


PlotScale 


InputFileNumber = FreeFile 
On Error Resume Next 
Open ChgExt {txtlnputFile . text , 
If Err. Number = 53 Then 

MsgBox (Err . Description) 
Close InputFileNumber 
Exit Sub 


".TAG") For Input As InputFileNumber 


Call ReadSetup (Setupln, InputFileNumber) 
Close InputFileNumber 



290 


Open txtlnputFile . text For Binary As InputFileNumber Len - 
NumScans = Setupln . Duration * Setupln . SampRate 
If frmMain! txtsteps . text > 0 Then 

If NumScans > Val (frmMain ! txtsteps . text) Then NumScans 

End If 


Len (DataPoint) 


= Val (frmMain! txtsteps. text) 


** set the voltage scaling to the correct value 
If ADCList .Value (Setupln. ADChwtype) = ADCDAQBOOK Then 

FullScale =10 . 

Elself ADCList .Value (Setupln. ADChwtype) = ADCCUSTOM Then 

FullScale = 12 

Else 

FullScale =10 ^ , , 

•* in case we read old files that don't have the extra setup data 

End If 

’* the following code just converts all the other 
»* heater specification methods to the list method. 

«* This is just a work-around for the way this routine was 
' * originally written. 

Select Case Setupln . heaters . method 
Case ALLACTIVE 

For i = 0 To ADCLASTCHANNEL 

Setupln. heaters. List (i) = i 

Setupln . heaters . Num = ADCLASTCHANNEL + 1 
Next i 

Case RANGEACTIVE 

Setupln . heaters . Num = Setupln . heaters . Range ( 1 ) _ 

- Setupln. heaters. Range (0) + 1 

For i = 0 To ADCLASTCHANNEL 

If i >- Setupln. heaters . Range (0) _ 

And i <= Setupln. heaters .Range (1) Then 
Setupln. heaters .List (i) - True 

Else 

Setupln. heaters .List (i) = False 

End If 
Next i 
End Select 


heaterindex = 0 
For i = 0 To 159 

If Setupln. heaters . List (i) = True Then 
heaters (heaterindex) = i 
x (heaterindex) = lblHeater (heaterindex) . Left 
y (heaterindex) = lblHeater (heaterindex) .Top 
heaterindex * heaterindex + 1 


End If 
Next i 


For i = 0 To NumScans - 1 

For j = 0 To Setupln. heaters. Num - 1 
1 * input one data point 
Get InputFileNumber, , DataPoint 
IngDataPoint = DataPoint 

OutData = (CDbl (IngDataPoint) / 2 A 16 _ 

* FullScale) _ 

If OutData < 0 Then OutData = OutData + FullScale 
« ★ val (GainList . Text (Setupln. Gainindex) ) 
Formatted = Format (OutData, '’Scientific ) 

Data(j, i) = OutData 

HeaterColor = FalseColor (OutData A 2) 

Colors (j, i) = HeaterColor 
Next j 
Next i 

' * close files 
Close InputFileNumber 



291 


End Sub 


Sub PlotScaleO 

Dim i As Integer 
For i = 0 To 14 

HeaterColor = FalseColor{i * MaxPower / 14) 
lblHeater (96 + i).BackColor = HeaterColor 
lblHeater(96 + i) .Caption - Str(Int(i * MaxPower / 14)) 
Next i 

f rmMain .Refresh 
End Sub 

Sub ReColor ( ) 

Dim i 
Dim j 

MaxPower = Val ( txtMaxPower . text ) 

If MaxPower = 0 Then MaxPower = 100 
PlotScale 

For i = 0 To NumScans - 1 

For j = 0 To Setupln. heaters . Num - 1 

HeaterColor = FalseColor (Data ( j , i) * 2) 

Colors (j, i) = HeaterColor 
Next j 
Next i 
End Sub 

Private Sub Textl_DblClick ( ) 

' * Browse file names 
End Sub 

Private Sub cmdReScale_Click { ) 

ReColor 
End Sub 


Private Sub cmdRestart__Click ( ) 
Animate 
End Sub 


Private Sub cmdStep_Click ( ) 

Static i 
Static j 

Static Time As Integer, TimeStep As Double 
Static TimePrint As Integer 

' * TimeStep is in ms 

TimeStep =11 Setupln . SampRate * 1000 

For i = i To i + Val ( txtFrames ) 

For j = 0 To Setupln. heaters .Num - 1 

Line <x(j), y ( j ) ) - (x ( j ) + 230, yij) + 230), Colorslj, i), BF 

Next j 

1 * Time is in ms 
Time = TimeStep * i 
TimePrint = TimePrint + 1 
If TimePrint = 10 Then 

txtTime . text = Str(Time) 

TimePrint = 0 
txtTime . Refresh 
End If 

Next i 

If Time > Setupln. Duration Then Time = 0 
End Sub 

Private Sub Command2_Click ( ) 



292 


LoadBin 
End Sub 


Private Sub Form_Load() 

ADCDefine 
MaxPower = 100 
txtMaxPower . text = "100" 
txtlnputFile . text = "" 
txtTime.text = "0" 

lblHeater ( 111) . BackColor = RGB{255, 255 f 255) 
lblHeater ( 111 ) . ForeColor = RGB(0, 0, 0) 

lblHeater (111) .Caption = "OVER" 

PlotScale 
End Sub 

Private Sub txtlnputFileJDblClick ( ) 


Static FileName As String 

» * set up properties of file box 

frmCalFile ! cmnl . FileName = FileName 

f rmCalFile ! cmnl . Def aultExt = ".BIN" 

frmCalFile ! cmnl . DialogTitle = "Binary Input File" 

frmCalFile! cmnl. FILTER = "Binary Data Files (* .BIN) I *. BIN I All Files 
frmCalFile! cmnl. Flags = cdlOFNHideReadOnly + cdlOFNPathMustExist + 
On Error Resume Next 
frmCalFile ! cmnl . ShowOpen 


If Not Err. Number = cdlCancel Then 

frmMain! txtlnputFile. text = frmCalFile ! cmnl . FileName 
FileName = frmCalFile ! cmnl . FileName 
•Call txt Input Fil e__Change 
End If 


< * . * } | " 
cdlOFNFileMust Exist 


End Sub 



