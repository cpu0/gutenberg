TASK: UT20 
CDRL: 04014 
12 June 1992 


AD-A257 430 




UT20—Ada PCTE 
Binding Version 
Description Document 
Version 0.1 

S DTIC 

electe 

OCT 2 8 1992 

C 


Informal Technical Data 


0 


Wol'SX-'.'T’i;*:.' 
Apwn {£; ; 


Ta.i*C3®l 

-tad 


STARS-TC-04014/001/00 
12 June 1992 


•ft 114 










TASK: UT20 
CDRL: 04014 
12 June 1992 


VERSION DESCRIPTION DOCUMENT 
For The 

SOFTWARE TECHNOLOGY FOR ADAPTABLE, RELIABLE SYSTEMS 

(STARS) 

Ada PCTE Binding (AdaPCTE) 

Version 0.1 

SunOS Implementation 


STARS-TC-04014/001/00 
12 June 1992 


Data Type: A005, Informal Technical Data 

CONTRACT NO. F19628-88-D-0031 
Delivery Order 0008 


Prepared for: 

Electronic Systems Division 
Air Force Systems Command, USAF 
Hanscom AFB, MA 01731-5000 


Prepared by: 


Par am ax Systems Corporation 
Tactical Systems 
12010 Sunrise Valley Drive 
Reston, VA 22091 


Access!'?:! 

NTIS GSASLl 
ime TV i i 

Unanncninc ad 

JiiStif icatioa 



jync QUALITY INSPECTED S 


*y-—- 

Distribution/_ 

I Avails!. "-tT Couss 
■ jJWftii n^d/or 

Dlst | Special 

M I I 




VERSION DESCRIPTION DOCUMENT 

Ada PCTE Binding (AdaPCTE) 

Version 0.1 

SunOS Implementation 

TASK: UT20 
CDRL: 04014 
12 June 1992 

Principal Author(s): 


Robert C. Smith, Paramax, Valley Forge Labs 

Date 

Michael J. Horton, Paramax, Valley Forge Labs 

Date 

Approvals: 




Task Manager Dr. Thomas E. Shields 

Date 


(Signatures on File) 







TASK: UT20 
CDRL: 04014 
12 June 1992 

VERSION DESCRIPTION DOCUMENT 
Ada PCTE Binding (AdaPCTE) 

Version 0.1 

SunOS Implementation 


Change Record: 











REPORT DOCUMENTATION PAGE 


Form Approved 
OMB No. 0704-0188 


Puolic reoorting ourden for mis collection of ihtormatioh »s estimated tc average ‘ ^our oer 'esoorse. including tne time tor reviewing instructions. searcmng existing aaca sources 
gathering and maintaining the data needed, ana corroietinq ana reviewing the collection of information Sena comments regarding this burden estimate o r any other asoect of this 
collection of information, including suggestions tor reducing this ouraen. to Washington neaaauarters Services. Directorate tor information Operations and Reports. 1215 Jefferson 
Davis Highway. Suite 1204. Arlington, va 22202-4302. and to the Office of Management ana Budget. Paperwork Reduction Project (0704-0188). Washington. DC 20503 


1. AGENCY USE ONLY (Leave blank) 2. REPORT DATE 3. REPORT TYPE AND DATES COVERED 

12 June 1992 Version Description Document 


4. TITLE ANO SUBTITLE 

Ada PCTE Binding (AdaPCTE) 

Version 0.1 

5. FUNDING NUMBERS 

F19628-88-D-0031 

6. AUTHOR(S) 

Paramax Systems Corporation 


7. PERFORMING ORGANIZATION NAME(S) AND AODRESS(ES) 

8. PERFORMING ORGANIZATION 
REPORT NUMBER 

Paramax System Corporation 

12010 Sunrise Valley Drive 

Reston, VA 22091 

STARS-SC-04014/001/00 

9. SPONSORING MONITORING AGENCY NAME(S) ANO ADDRESS(ES) 

10. SPONSORING /MONITORING 

AGENCY REPORT NUMBER 

Department of the Air Force 

Headquarters Electronic Systems Division 

Hanscom AFB, MA 01731-5000 

04014 

11. SUPPLEMENTARY NOTES 

12a. DISTRIBUTION AVAILABILITY STATEMENT 

Distribution "A" 

12b DISTRIBUTION CODE 


13. ABSTRACT (Maximum 200 words) 


The Ada Portable Common Tool Environment (PCTE) binding (AdaPCTE) provides Ada 
applications access to a PCTE object base as defined by the European Computer Manufac¬ 
turers Association (ECMA) Ada PCTE specification (Standard ECMA-162 Ada Language 
Binding, December 1991). This “alpha” release provides a minimal set of interfaces to permit 
Ada developers to experiment with and evaluate PCTE for use in future Ada applications. 
It is expected that later releases will complete the binding. 


14. SUBJECT TERMS 

PCTE, Ada Bingings 


t 17. 
I 


SECURITY CLASSIFICATION 


0 F l$<??Iisified 


18. SECURITY CLASSIFICATION 

Unclassified 


19 


SECURITY CLASSIFICATION 
OF ABSTRACT 
Unclassified 


15. NUMBER OF PAGES 

14 


16. PRICE CODE 


20. LIMITATION OF ABSTRACT 

SAR 


























12 June 1992 


STARS-TC-04014/001 /OO 


Contents 

1 SCOPE 1 

1.1 Identification. 1 

1.2 System Overview. 1 

2 RELATED SOFTWARE 1 

3 VERSION DESCRIPTION 1 

3.1 Inventory of Contents. 1 

3.1.1 Directory: adapcte/code . 1 

3.1.2 Sub-directory: adapcte/code/C . 2 

3.2 Adaptation Data. 2 

3.2.1 Operating Environment. 2 

3.2.2 Development Environment. 2 

3.2.3 Configuration-unique Data. 2 

3.3 Interface Compatibility. 2 

3.4 Installation Instructions. 3 

3.4.1 Build Procedure. 3 

4 USER FEEDBACK 3 

5 NOTES 3 

A Appendix: Inventory of Contents 7 

B Appendix: Build Scripts 9 

B.l Script: Buil<LAdaPCTE.var . 9 

B.2 Script: Build.AdaPCTE.csh . 13 


Page ii 

















12 June 1992 


STARS-TC-04014/001 /OO 


1 SCOPE 

1.1 Identification 

Version Description Document, 
Ada PCTE Binding (AdaPCTE), 
Version 0.1, 

SunOS Implementation 


1.2 System Overview 

The Ada Portable Common Tool Environment (PCTE) binding (AdaPCTE) provides Ada 
applications access to a PCTE object base as defined by the European Computer Manufac¬ 
turers Association (ECMA) Ada PCTE specification (Standard ECMA-162 Ada Language 
Binding, December 1991). This “alpha” release provides a minimal set of interfaces to permit 
Ada developers to experiment with and evaluate PCTE for use in future Ada applications. 
It is expected that later releases will complete the binding. 


2 RELATED SOFTWARE 

Since no conforming implementations of ECMA PCTE exist as defined in Standard ECMA- 
149, AdaPCTE is implemented on GIE Emeraude’s PCTE V12.2 Fix 7. Because only a 
subset of the ECMA PCTE Ada specification has been implemented for the 0.1 release, and 
because ECMA PCTE functionality differs somewhat from Emeraude PCTE functionality, 
the complete functionality of Emeraude PCTE is not available to Ada applications using 
these bindings. 


3 VERSION DESCRIPTION 
3.1 Inventory of Contents 

The AdaPCTE distribution is structured as shown below. The top-level directory adapcte 
includes PostScript (VDDadapcte.ps) and clear ASCII text (VDDadapcte.tty) versions 
of this document, along with a complete directory listing of the distribution (Contents.tty, 
reproduced herein as Appendix A). 


3.1.1 Directory: adapcte/code 

The adapcte/code directory contains the Ada source files for the Ada binding to PCTE and 
the UNIX C-shell script BuildLAdaPCTE.csh. Build-AdaPCTE.csh can be used to build 
the entire AdaPCTE Binding using the SunAda 1.0 Development System. No provisions 
within the build script have been made for installing the bindings in the PCTE object base. 


Page 1 





12 June 1992 


STARS-TC-04014/001/00 


Applications being developed on these bindings are expected to be developed within a UNIX 
environment and executable code files may be installed by the user in the PCTE object base 
(but are not required to be installed in the object base). The build script is reproduced 
herein as Appendix B.2. 


3.1.2 Sub-directory: adapcte/code/C 

This directory contains a small C file, util.c , containing utility routines used by AdaPCTE. 
The build script compiles this file in the target directory, and inserts a link directive in the 
Ada library, so users need not add util.o to link commands for any applications developed 
on these bindings. 


3.2 Adaptation Data 

3.2.1 Operating Environment 
Sun-4 Workstations 
SunOS, Version 4.1.2 
Emeraude PCTE V12.2 Fix 7 

3.2.2 Development Environment 
Sun-4 Workstations 

SunOS, Version 4.1.2 
Emeraude PCTE V12.2 Fix 7 
Sun Ada 1.0 
C compiler 

3.2.3 Configuration-unique Data 

3.3 Interface Compatibility 

AdaPCTE uses the recently adopted standard ECMA-162 for the Ada binding specifica¬ 
tion. Because no ECMA PCTE implementation is available, AdaPCTE is bound to GIE 
Emeraude’s PCTE 1.5 V12.2 implementation written in “C”. As a result, the AdaPCTE 
specification contains some minor modifications to ECMA-162. The exact specification of 
the implemented binding can be found in the Ada package specifications located in the 
directory /adapcte/code in this delivery. 


Page 2 






12 June 1992 


STARS-TC-04014/001 /OO 


3.4 Installation Instructions 

File adapcte/code/Build.AdaPCTE.csh is an executable UNIX C-shell script, which can be 
used interactively to build the AdaPCTE Binding from the Ada source code, using the 
SunAda 1.0 system. It ensures that library dependencies are established correctly, making 
it unnecessary for the installer to perform these operations manually. 


3.4.1 Build Procedure 

1. (OPTIONAL) - To prevent interactive prompting when executing the script, uncom¬ 
ment and edit the environment variables at the beginning of file code/BuUdLAdaPCTE.var 
(see Appendix B.l) to reflect the actual operating environment. The following envi¬ 
ronment variables must be modified: 

AdaPCTE - identifies the full pathname of the directory into which the AdaPCTE 

distribution has been loaded (e.g., /local/adapcte); 

COMPILERNAME - identifies the name of the compiler to be used; 

COMPVERSION - identifies the compiler version; 

COMPILERPATH - identifies the full pathname of the directory containing the 

SunAda compilation system (e.g., /local/sunadal.O); 

TARGET - identifies a Build directory to be used for building the software. 

2. Execute Build.AdaPCTE. csh, providing configuration information when prompted by 
the script. 


4 USER FEEDBACK 

This version of AdaPCTE is considered an “alpha” release. The primary purpose of the 
release is to encourage experimentation with the software and to solicit feedback from the 
Ada and PCTE user communities. Thus, we would greatly appreciate your comments, 
suggestions, and criticisms. 


5 NOTES 

The full set of PCTE path names as described in the ECMA PCTE Abstract Specification 
(149) has not been implemented for this release. The following characters 
and “/” plus alphanumeric characters are valid characters in AdaPCTE path names. The 
following are examples of valid AdaPCTE path names: 


_/sun4.tools 
"/.history.e 


Page 3 





12 June 1992 


STARS-TC-04014/001/00 


AdaPCTE Version 0.1 has not implemented all the interfaces defined in ECMA-162. The 
following describes which interfaces are implemented in Version 0.1 including any limitations. 


Package Pete 

Package Sequence 
function get 
procedure put 
procedure delete 
procedure copy 
function length.of 
function index.of 
function equal 
procedure normalize 
Package Reference 

— These procedures use a limited form of path names as defined 

— in the abstract spec. You can use ”, / plus ascii 

— characters 
function get.path 
procedure set.absolute 
procedure set.relative 
procedure unset 

— New operations added by VFL 
function get.reference.id 
procedure set.reference.id 

Package Pcte.contents 

— This package is only implemented for files; no pipes or devices 
procedure close 
function get.position 
procedure open 
function read 
procedure seek 
procedure set.position 
procedure set.properties 
procedure write 
— New operations added by VFL 
procedure standard.input 
procedure standard.output 
procedure standard.error 
function end.of.contents 
procedure write.s 

— (writes a string) 
procedure read.s 


Page 4 






12 June 1992 


STARS-TC-04014/001/00 


— (reads a string) 

Package Pcte.error 
procedure set 
procedure unset 
procedure set.will.raise 
procedure set.will.record 
function will.raise 
function vill.record 
function last.error 

Package Pcte.object 
procedure create 

— can not specify another volume 
procedure delete 

procedure get.attribute 

— for boolean, integer, natural and string types only 
procedure get.several.attributes 

— for boolean, integer, natural and string types only 
function get.type 

procedure list.all.links 

— does not support EXTERNAL extents 

— does not support COMPOSITE scopes 

— ignores links parameter 

— none of the other 8 procedure variations of 

— object.list.links is supported 

Package Pcte.process 

procedure create.and.start 

— no process objects created; just fire up a process 

— local execution site only 
procedure set_vorking.schema 

— for current process only 
procedure wait.for.any.child 
procedure wait.for.child 

package Pcte.sds 

procedure get.link.type.properties 
procedure get _obj ect _type.properties 
function get.type.name 

— ignores any sds param value other than IN.WORKING.SCHEMA 

package Pcte.link 

procedure get.attribute 

— for boolean, integer, natural and string types only 


Page 5 




12 June 1992 


STARS-TC-04014/001/00 


procedure get_several_attributes 

— for boolean, integer, natural and string types only 


Page 6 




12 June 1992 


STARS-TC-04014/001 /OO 


A Appendix: Inventory of Contents 

IOTE: identifies executables; "/" identifies directories. 

adapete: 

Contents.tty 
VDDadapcte.ps 
VDDadapcte.tty 
code/ 

adapcte/code: 

Build.AdaPCTE.esh* 

Build.AdaPCTE.var 
C/ 

Pete.a 

Pete.accounting.a 

Pcte.activity.a 

Pcte.audit.a 

Pcte.b.a 

Pcte.contents.a 

Pcte_contents_b.a 

Pete.discretionary.a 

Pcte.discretionary.b.a 

Pcte.error.a 

Pcte_error_b.a 

Pcte.liait.a 

Pete_nandatory.a 

Pete_aandatory_b.a 

Pete.message.a 

Pcte_notify.a 

Pcte.object.b.a 

Pcte.ons.a 

Pcte.oas.b.a 

Pcte.process.a 

Pete_process_b.a 

Pcte.qneue.a 

Pete_replicated_objeot.a 

Pcte.sds.a 

Pcte.sds.b.a 

Pete.tiae.a 

Pcte.vol.dev.archi.a 

Pcte.workstation.a 

eaer.conversion,a 

error.a 

error.b.a 


Page 7 



12 June 1992 


STARS-TC-04014/001 /OO 


errors.c.a 
pcte_l_5_int.a 
pcte_l_5_»upport.a 
pcta_l_5_«upport_b.a 

adapcte/code/C: 
util.c 


Page 8 





12 June 1992 


STARS-TC-04014/001/00 


B Appendix: Build Scripts 
B.l Script: Build.AdaPCTE.var 
1 # 

2 # Uncomment and edit these lines if you do not want to 

3 # be prompted lor the environment variables 

4 # 

5 setenv ADAPCTE /local/adapcte 

6 setenv COMPILER!AKE sunada # set to sunada 

7 setenv COMPVERSIOV SunAdal.O # e.g. SunAdal.O; not tested on SunAdal.l 

8 setenv COMPILERPATH /local/SunAda 

9 setenv TARGET $ADAPCTE/Build_$COMPVERSIO! 

10 

11 * 

12 # Define the location of the RGB source code directories. 

13 * 

14 

15 if ( ! $?ADAPCTE ) then 

16 echo MM 

17 echo "Specify path to top level Ada PCTE directory " 

18 echo "(e.g. /local/adapcte ) " 

19 echo "" 

20 echo -n " ADAPCTE * " 

21 setenv ADAPCTE $< 

22 echo "" 

23 endif 

24 if ( ! -e $ADAPCTE ) then 

25 echo "" 

26 echo "** $ADAPCTE does not exist **" 

27 echo "** Script aborted **" 

28 echo "" 

29 unsetenv ADAPCTE 

30 exit -1 

31 endif 

32 

33 

34 

35 * 

36 # Define C Language compilation variable 

37 # 

38 setenv CC " cc -g -c " 

39 

40 

41 


Page 9 



12 June 1992 


STARS-TC-04014/001 /OO 


42 # 

43 * Determine the Ida compilation system to use 

44 * 

45 * 

46 # Establish a path to the SnnAda compilation system 

47 # 

48 if ( ! $?COMPILERVAME 11 ! $?COMPVERSIOV 11 • $?COMPILERPATH ) then 

49 echo ,,M 

50 echo "Please select yonr compiler name: [snnada] " 

51 echo "" 

52 echo -n " COMPILERSAME = - 

53 setenv COMPILERVAME $< 

54 echo " M 

55 switch (SCOMPILERVAME) 

56 case Vads: 

57 case VADS: 

58 case vads: 

59 echo -n "Are you building with VADS Version 6.0.3? [y,n](n> “ 

60 set COMPVERSIOV = $< 

61 echo "" 

62 switch (SCOMPVERSIOV) 

63 case V: 

64 case y: 

65 set COMPVERSIOV = Vads603 

66 breaks? 

67 case I: 

68 case n: 

69 default: 

70 set COMPVERSIOV = Vads 

71 echo "" 

72 echo "Warning! Software not tested under your Torsion of the VADS com 

73 piler." 

74 breaks? 

75 ends? 

76 breaks? 

77 case SunAda: 

78 case Sunada: 

79 case sunada: 

80 echo -n "Which Torsion of SunAda are you using? [0,1](O) " 

81 set COMPVERSIOV = $< 

82 echo "" 

83 switch (IC0MPVERSI0V) 

84 case 1: 

85 set COMPVERSIOV « SunAdal.1 

86 echo "Warning! Software not tested under yonr Torsion of the SunAda compiler." 


Page 10 





12 June 1992 


STARS-TC-04014/001 /OO 


87 breaks? 

88 case 0: 

89 default: 

90 set COMPVERSIOI = SunAdal.O 

91 breaks? 

92 ends? 

93 breaks? 

94 default: 

95 echo "" 

96 echo "You must specify a compiler name." 

97 echo "“ 

98 unsetenv COMPVERSIOI 

99 exit -1 

100 breaks? 

101 ends? 

102 

103 echo "" 

104 echo "Specify path to the compiler (e.g. /local/SunAda)" 

105 echo "" 

106 echo -n " COMPILERPATH = " 

107 setenv COMPILERPATH A< 

108 if ( ( ACOMPILERPATH == ) 11 ( ! -e ACOMPILERPATH/bin/ada ) ) then 

109 echo "" 

110 echo "** Cannot find Ada compiler in ACOMPILERPATH/bin **" 

111 echo "** Script aborted **" 

112 echo "" 

113 unsetenv COMPILERPATH 

114 exit -1 

115 endif 

116 endif 

117 if ( -e ACOMPILERPATH/bin/ada ) then 

118 if ( ACOMPILERIAME == "sunada" II ACOMPILERIAME == "vads" ) then 

119 setenv COMPILERBII ACOMPILERPATH/bin 

120 setenv COMPILE "ACOMPILERBII/ada -v -00 " 

121 setenv LIIK "ACOMPILERBII/a.ld " 

122 endif 

123 else 

124 echo "" 

125 echo "** Cannot find ACOMPILERPATH/bin/ada **" 

126 echo "** Script aborted **" 

127 echo "" 

128 unsetenv COMPILERPATH 

129 exit -1 

130 endif 

131 


Page 11 




STARS-TC-04014/001 /OO 


12 June 1992 

132 

133 * 

134 # Define the Destination of the ADAPCTE build 

135 # where TARGET = path to build destination (e.g. $ADAPCTE/Build_SunAdal.O) 

136 « 

137 if ( ! $?TARGET ) then 

138 echo MM 

139 echo "Specify the path to the TARGET directory " 

140 echo "(Defaults to tADAPCTE/Build_t{COMPVERSIOI» " 

141 echo "" 

142 echo -n " TARGET = " 

143 setenv TEMP $< 

144 echo "" 

145 if ( tTEMP == ) then # check for null entry 

146 setenv TARGET $ADAPCTE/Build_${COMPVERSIOI> 

147 unsetenv TEMP 

148 else 

149 setenv TARGET tTEMP 

150 unsetenv TEMP 

151 endif 

152 endif 

153 


154 

echo 

MM 




155 

echo 

M 

TARGET 

s 

tTARGET" 

156 

echo 

M M 




157 

echo 

H 

ADAPCTE 

« 

$ADAPCTE" 

158 

echo 

MM 




159 

echo 

M 

C0MPILER1AME 

= 

tCOMPILERIAME" 

160 

echo 

•• 

COMPVERSIOV 

s 

tCOMPVERSIOI" 

161 

echo 

•• 

COMPILERPATH 

s 

tCOMPILERPATH" 

162 

echo 

M 

COMPILE 

s 

tCOMPILE" 

163 

echo 

M 

LIVK 

= 

tLinc" 


164 

165 * 

166 # Create the directories for the build 

167 f 

168 if ( I -d tTARGET ) nkdir tTARGET 

169 

170 

171 


Page 12 






12 June 1992 


STARS-TC-04014/001 /OO 


B.2 Script: Build-AdaPCTE.csh 

1 #! /bin/csh -f 

2 echo M " 

3 echo "Defining installation-dependent variables" 

4 echo "" 

5 source Build_AdaPCTE.var 

6 

7 echo "" 

8 echo "Bnilding Ada libraries for the Ada Bindings to PCTE" 

9 echo "" 

10 

11 if ! -e ITARGET nkdir ITARGET 

12 if ! -e ITARGET/C nkdir ITARGET/C 

13 

14 cd ITARGET 

15 

16 if ( ( ICOKPILERIANE == "vads" ) 11 (ICOKPILERVAME « "snnada” ) ) then 

17 if ( ! -e ada.lib ) then 

18 $CONPILERBIl/a.nklib -f ITARGET iCONPZLERPATH/verdizlib 

19 ICONPILERBII/a.info -a VITH1 iTARGET/util.o 

20 endif 

21 endif 

22 

23 echo "" 

24 echo "Creating source code links in lADAPCTE/code" 

25 echo "" 

26 foreach file (lADAPCTE/code/*.a) 

27 if (! -e |{file:t> ) In -s Ifile |{file:t> 

28 end 

29 

30 foreach file (lADAPCTE/code/C/*) 

31 if O -e l{file:t> ) In -s Ifile |{file:t> 

32 end 

33 

34 m -rf LOGadapcte 

35 

36 echo "" 

37 echo "Compiling the Ada PCTE binding source" 

38 echo "" 

39 

40 ICOKPILE Pcte.error.a »ft LOGadapcte 

41 ICOKPILE Pete.a »t LOGadapcte 

42 ICOKPILE Pcte.contents.a »A LOGadapcte 

43 ICOKPILE Pcte_replicated_object.a »A LOGadapcte 


Page 13 




STARS-TC-04014/001 /OO 


12 June 1992 


44 

(COMPILE 

Pcte.nessage.a 

V 

V 

«r 

LOGadapcte 

45 

(COMPILE 

Pcte_error_b.a 

»* 

LOGadapcte 

46 

(COMPILE 

Pcte_notify.a 

»* 

LOGadapcte 

47 

(COMPILE 

Pcte_discr«tionary.a 

»* 

LOGadapcte 

48 

(COMPILE 

Pete_mandatory.a 

»* 

LOGadapcte 

49 

(COMPILE 

Pcte_audit.a 

»* 

LOGadapcte 

50 

(COMPILE 

Pcte_mandatory_b.a 

»t 

LOGadapcte 

51 

(COMPILE 

Pcte_workstation.a 

»k 

LOGadapcte 

52 

(COMPILE 

Pete_discr«tionary_b.a 

»k 

LOGadapcte 

53 

(COMPILE 

Pcte_proc«ss.a 

»k 

LOGadapcte 

54 

(COMPILE 

ener_conversion.a 

»k 

LOGadapcte 

55 

(COMPILE 

Pete_vol_dev_archi.a 

»k 

LOGadapcte 

56 

(COMPILE 

errors_c.a 

»k 

LOGadapcte 

57 

(COMPILE 

error.a 

»k 

LOGadapcte 

58 

(COMPILE 

error_b.a 

»k 

LOGadapcte 

59 

(COMPILE 

pcte_l_6_int.a 

»k 

LOGadapcte 

60 

(COMPILE 

pcte_l_6_support.a 

»k 

LOGadapcte 

61 

(COMPILE 

pcte_l_6_snpport_b.a 

»k 

LOGadapcte 

62 

(COMPILE 

Pete_process_b.a 

»k 

LOGadapcte 

63 

(COMPILE 

Pcte_contents_b.a 

»k 

LOGadapcte 

64 

(COMPILE 

Pcte_b.a 

»k 

LOGadapcte 

65 

(COMPILE 

Pcte.ons.a 

»k 

LOGadapcte 

66 

(COMPILE 

Pcte_object_b.a 

»k 

LOGadapcte 

67 

(COMPILE 

Pcte_oms_b.a 

»k 

LOGadapcte 

68 

(COMPILE 

Pcte.time.a 

»k 

LOGadapcte 

69 

(COMPILE 

Pcte.sds.a 

»k 

LOGadapcte 

70 

(COMPILE 

Pcte_sds_b.a 

»k 

LOGadapcte 

71 

(COMPILE 

Pcte.qnene.a 

»k 

LOGadapcte 

72 

(COMPILE 

Pete_acconnting.a 

»k 

LOGadapcte 

73 

(COMPILE 

Pcte.activity.a 

»k 

LOGadapcte 

74 

(COMPILE 

Pcte.liait.a 

»k 

LOGadapcte 

75 





76 





77 

•cho MM 




78 

•cho "Compiling the C code” 



79 

•cho "" 




80 

(CC util 

.c 

»k 

LOGadapcte 


81 

82 echo " M 

83 echo "Coapilation Complete" 


Page 14 



