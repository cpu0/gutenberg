
TEXAS INSTRUMENTS 




COMPUTER 
AWARENESS 
PROGRAM 




COMPUTER ADVANTAGE CLUB 



Contents 



The Computer Awareness Program Manual is a resource for you, both in this course and in your future experiences with 
computers. Your instructor will refer to this manual throughout the course, and you will find that the manual's coverage 
of materials on computing, its practice problems in T! BASIC, and its list of groups and magazines with information on 
computing can help you develop your skills with computers. 



The Computer Awareness Program: A Course Outline 2 

What Is a Microcomputer? 4 

How a Computer Works 6 

Computer Components 7 

A Tour of the Keyboard 8 

Three Types of Program and Data Storage 9 

Tips on Using Software 10 

Programming Languages 12 

TI BASIC Commands 14 

Helpful Sources on BASIC 15 

TI LOGO Commands 16 

Helpful Sources on LOGO 17 

Getting Started in TI BASIC Programming 18 

Advanced TI BASIC Programming Examples 23 

Programming Exercises — 27 

Programming Challenges 29 

Texnet and The Source^" 33 

TI Users' Groups 34 

Sources for Additional Information 35 

Most Often Asked Questions and Answers 36 

An Overview of the Development of the Computer — — 38 

Applications Programs 40 

A Glossary of Personal Computing Terms 42 

Certificate of Participation • - 45 

Pages for Your Notes 47 




FOR ADULTS 

Name 

Date of Course 

Your Instructor 



Texas Instruments invented the integrated circuit, 
the microprocessor and the microcomputer, which 
have made TI synonymous with reliability, 

affordability, and compactness. 1 



A Course Outline 



Texas Instruments Computer Advantage Club encourages active involvement 
with computers in each session of the course. 



Session One 

Introduction to Your Instructor 

An Overview 

The Solid State Cartridge 
The Keyboard and the Monitor 

An Introduction to BASIC 

Concepts and Terms 
Programming 

Further Practice 

The Home Financial Decisions Cartridge 
Computer Games of Your Choice 

New Terms for the Day: 



ALPHA LOCK Key 

BASIC 

CLEAR Key 

CTRL (CONTROL) Key 

Computer 

DONE 

Edit 

ENTER Key 

FCTN (FUNCTION) Key 
Input and Output (I/O) 
Joysticks (Wired Remote 



LIST 

Loop 

Memory 

Menu 

Program 

Programming 

RAM 

ROM 

RUN 

SHIFT Key 
Solid State Cartridge 
Speech Synthesizer 
Video Monitor 




Controllers) 
Keyboard 



2 



Session Two 

Question and Answer Session 
Saving Data 

With Cassettes 

With Disks 
More About Programming Languages 

BASIC Programming with Color, Graphics, Sound, and Speech 

Other Programming Languages 

New Terms for the Day: 



Session Three 

Question and Answer Session 
Increasing Your Skills In TI BASIC 
An Introduction to TI LOGO 

New Terms for the Day: 



Session Four 

Question and Answer Session 

The Home Computer and Your Individual Needs 

TEXNET and You 

Expanding Your Skills in TI BASIC 

Free Time with the Home Computer 

Course Evaluation 

New Terms for the Day: 

RS232 Interface Terminal Emulator II 

Speech Editor TEXNET 

Telephone Coupler (Modem) The Source 



Cassette 
Cassette Cables 
Data 

Disk Drive Controller 
Disk Memory Drives 
Disk Memory System 
Editor/ Assembler 



PILOT 
SAVE 

TI Extended BASIC 
TI LOGO 



Pascal 

Peripheral Expansion System 



Assignment Statement 

Color Screens 

Grid 

GOTO 

IF. . . THEN 



LET 

Printer 

Sprites 

Turtle Graphics 



What is a 
Microcomputer? 



For many of us, computers create two powerful images. One is the scene from a science 
fiction film in which pasteboard walls decorated with lights, switches, and levers are the 
setting for a trip in space or across time. We don't believe what's happening, and we 
wonder if the actors do. The other image is a huge room filled with box-like equipment 
also decorated with lights, switches, and levers. In these rooms, massive computations 
occur, space flights are monitored, and scientists and mathematicians are able to do 
research which was previously impossible. With both the science fiction view of the 
computer and the technological reality, many of us can't believe what we see. The image 
of the computer is of something far away from reality and certainly far from our everyday 
lives. 

Technology, however, has made the computer part of the possibilities of everyday life 
with astonishing speed. Five years ago, many of you would not have considered taking 
this course, much less having a computer in your home. What has happened in a short 
period of time is that technology has miniaturized the computer. Computations which 
could formerly be performed only on equipment that required a huge room and over five 
tons of air conditioning to keep it operable can now be performed with equipment that 
fits easily on a desk. Having a home computer is now possible, and each year more of us 
buy computers. Computers offer ways to reduce record-keeping drudgery at home and 
in business, to expand educational opportunities for ourselves and our children, and- 
thanks in part to the development of video games- to have fun. 

The popularity of the microcomputer has also caused us to be overwhelmed by a new 
vocabulary. We now hear words such as CPU, RAM, ROM, memory, bytes, input, 
output, disks, chips, and microcomputer. For many of us, the new terms are as much a 
stumbling block to our being comfortable with the home computer as is the equipment 
itself. 

One of the easiest ways to think about these new terms is to compare them to 
something with which all of us are familiar-the human mind. We receive information from 
the world around us through our senses. Computers, however, are dependent upon 
people for their information. We "input" into a computer from a keyboard, and-for the 
computer-the input circuits attached to the keyboard are its eyes and ears. 

We process the information we receive and so does the computer. We make decisions 
based on previous experience. We reason. The computer reasons by using a CPU, or 
Central Processing Unit. 

Like us, the computer also needs "memory," or storage spaces, in order to hold and 
process information. Humans have long- and short-term memory. For example, we 
remember how to do addition problems in our long-term memory, but we only remember 
the numbers we're adding for as long as it takes us to do the problem. 



4 



For the computer, these two memories are called ROM (Read Only Memory) and RAM 
(Random Access Memory). ROM holds information needed permanently, and RAM 
stores information temporarily-until you clear the memory or turn off the computer. 
With both RAM and ROM, the information is stored in tiny memory cells. Each cell has 
an "address" so that the computer can retrieve the particular piece of information you 
want and not a hodgepodge of information. Information is stored in the computer in 
bytes, or small units of information. Computers have limits on how much information 
they can store. For example, a computer with 16K bytes of RAM can store 16,000 bytes 
of information in its Random Access Memory. 

The computer is also similar to the human mind because both can adjust and follow new 
instructions. For example, if we are given step-by-step instructions, we can operate a new 
machine, assemble a new toy for our children, or cook a new dish. The computer's 
equivalent to instructions is a software program. By plugging into hardware (the 
computer) a set of instructions (a program) stored on software (either a cassette tape, a 
disk, or a Solid State Cartridge), you can make the computer follow a new set of 
instructions. 

The computer serves us and processes information for us, but that work is useless 
unless we can receive it. The computer's "output" circuits present its work to us on the 
video monitor or, in some cases, on a printer. In the same sense, we communicate to 
others by speaking or writing. 

These basic elements of the computer were part of the huge computers of the 1950s. 
Many inventions have helped to make it possible to minaturize these parts; however, one 
of the most dramatic innovations was the development of the integrated circuit. Because 
of the integrated circuit, a chip of silicon can contain thousands of the intricate circuits of 
the computer. The integrated circuit on the silicon chip has made the microcomputer 
possible. 

The technology which has made the microcomputer possible has brought us new 
challenges in getting used to new terms and to new equipment, but it has also brought 
the power of the computer to our homes. Fortunately, the technology of the 
microcomputer has been designed to be "user friendly." We can enjoy the technology of 
the microcomputer without having to become computer specialists, just as we do not 
have to become mechanics to operate a car or electricians to flip on the living room light. 

The computer is no longer simply the pasteboard science fiction movie set. It has 
become a convenient, exciting, and entertaining part of everyday life. 



How a Computer Works 



Most computers have the same main parts. As you read, follow the diagram to 
understand how these parts work together. 

When you type on the 
keyboard, you send 
information to the 
computer. This flow of 
information to the 
computer is called 
" input." 



KEYBOARD 



The input goes to the 
central processing unit 
(CPU). The CPU 
calculates, sorts, and 
compares information. It 
can also store information 
in the memory for use 
later. 



CPU 



MEMORY 




The flow of information from the computer is called "output." You see the output 
on the screen in the form of words and pictures. Some output can also be printed 
when you attach a printer to the computer. 



Computer Components 




1. TI-99/4A HOME COMPUTER-A typewriter-like console that allows you to enter, store, 
and manipulate data. 

2. VIDEO MONITOR-A ten-inch color screen with a display format for 24 lines of 32 
characters and audio capabilities. 

3 . PERIPHERAL EXPANSION SYSTEM-A compact system designed to centralize the Disk 
Memory System, the RS232 Interface, the Memory Expansion unit, and other accessories 
in one place. 

4. SPEECH SYNTHESIZER-A device which reproduces human speech electronically and 
accurately, allowing the computer to communicate verbally. 

5. HOME COMPUTER SOFTWARE-A large library of preprogrammed cassettes, 
diskettes, and Solid State Cartridges designed to help you learn, keep household 
records, or play stimulating games. 

6. WIRED REMOTE CONTROLLERS— Eight-position remote control with top-mounted 
action button allows you to move objects on the screen. 

7. DISK MEMORY SYSTEM-S tores data or programs that you wish to save for later 
use. 

8. TI TELEPHONE COUPLER (MODEM)-Allows your Home Computer to send or 
receive information through a telephone. 



Tour of the Keyboard 



1. ENTER 

2. SHIFT 

3. ALPHA LOCK 

4. SPACE BAR 

5. FUNCTION 

6. CONTROL 




A Tour of the Keyboard 

1. ENTER Press this key to enter information into the computer's 

memory. 

2. SHIFT Press this key and any alphabetic key to produce uppercase 

letters. For example, SHIFT A produces "A". 

3. ALPHA LOCK In locked (down) position, ALPHA LOCK produces 

uppercase (capital) alphabetic characters. In unlocked (up) 
position, it produces lowercase (small) alphabetic characters. 
Number keys will print numbers regardless of ALPHA LOCK 
position. When using joysticks, ALPHA LOCK should always 
be in the unlocked (up) position. 

4. SPACE BAR Press to type a space. Typing a space over a displayed 

character erases it. 

5. FCTN Pressing FUNCTION and any of the number keys activates 

the features printed on the overlay strip above the row of 
number keys. For example, FCTN 1 activates the delete 
editing feature, FCTN 2 the insert feature, and so on. 
Pressing FCTN and a key with a character imprinted on the 
side facing you produces that character. For example, FCTN 
P produces quotation marks (")i and FCTN I produces a 
question mark (?). Exceptions are the arrow keys (S and D), 
which when pressed simultaneously with FCTN can cause the 
cursor to move left or right without erasing printed 
characters. 

FCTN = (QUIT), pressed once and released, will stop most 
programs in progress. It will also erase anything in the 
computer's memory. 

6. CTRL Used mainly in telecommunicating with other computers, this 

key works in manner similar to the FCTN key. 

NOTE: Any key held down for more than one second will automatically repeat its character 
until the key is released. For more information regarding the keyboard, consult the TI-99/4A 
User's Reference Guide and software manuals. \^ 



Three Types of 
Program and Data Storage 



SOLID STATE CARTRIDGES 




Equipment needed: 

• computer console 

• TI Color Monitor or TV with adapter (Video Modulator) 

• cartridge (contains a printed-circuit board with chips) 
The cartridge medium is an excellent way to take advantage 
of the wide assortment of preprogrammed software currently 
available. Most of these cartridges available require no extra 
peripherals because they plug right into the console. 
Cartridges, most of which are not erasable, are fast and very 
easy to use. You can even store your own data (temporarily 
or permanently) on the specialized Mini Memory cartridge. 




CASSETTES 



.q>^,q\\ 




Equipment needed: 

• computer console 

• TI Color Monitor or TV with adapter (Video Modulator) 

• compatible cassette recorder 

• cassette tape (a high quality tape) 

• Cassette Cable 

Using cassettes is an inexpensive way to store your own 
programs and data files and to enjoy preprogrammed 
software. The small amount of equipment which is needed is 
relatively inexpensive and, of course, has uses other than with 
the computer. One or two cas^tte recorders can be 
controlled from the console. Although using cassettes 
sometimes involves waiting and repetition of the procedure in 
order to successfully load data into the computer, it is an 
especially good method if you want to store your own data 
but want to avoid the higher cost of a disk system. 



DISKETTES 




Equipment needed: 

• computer console 

• TI Color Monitor or TV with adapter (Video Modulator) 

• TI Disk Controller peripheral (or Disk Controller card 
with the Peripheral Expansion System) 

• One or more TI Disk Memory Drives 

• diskettes (5% inch floppy disk) 

The TI Disk Memory System is the most sophisticated 
method to store your own data. Preprogrammed software is 
also available in this medium (usually the same programs are 
available on both diskette and cassette). Though the 
equipment involved requires more of an investment, the speed 
and efficiency of using diskettes is well worth it. This disk 
system uses 5% inch single-sided, single-density, soft-sectored 
diskettes. When a blank diskette is prepared for use, it is 
divided into forty tracks, each of which is divided into nine 
sectors, so that the computer can access information quickly. 
About 90,000 keystrokes of information can be stored on a 
single disk. 



Tips on 

Using Software 



SOLID STATE CARTRIDGES 
To Insert Solid State Cartridges 

Turn on your console and monitor or TV. The TI master title screen should automatically display 
on your screen. 

Insert a solid state cartridge firmly into the slot to the right of the keyboard. The screen will go 
blank for a second and the the TI master title screen should reappear. 

Press any key to move to the next screen. 

Select the name of the cartridge you inserted (usually by pressing the number 2--the number 1 will 
always take you into TI BASIC). 

To Remove Solid State Cartridges 

Return to the master TI title screen by pressing FCTN and the "=" key, or by exiting according to 
instructions included in the cartridge's program. 

Remove the cartridge from its slot. 

In Case Of Difficulty 

If a cartridge does not seem to operate properly, try reinserting the cartridge. Or, if the screen 
locks or produces unusual displays, try turning the console off and waiting a few seconds before 
turning it back on. 

CASSETTE SOFTWARE 

Load and Save with Cassette 

Use only high-quality cassette tapes of sixty minutes or less. 

Connect a compatible cassette recorder to your computer by means of the Dual Cassette 
Cables. The red-wired plug at the end of the cable connects into the cassette microphone jack. 
The white-wired plug connects into the earphone or auxiliary cassette jack. It is not necessary to 
insert the black-wired remote plug into the cassette deck (it can cause some cassette recorders 
not to function). The single plug at the other end of the cable is inserted into the back of the 
console. 

Check to make sure that ALPHA LOCK is in locked (down) position. 
Loading a Program 

Make sure the cassette player is either plugged in or contains good batteries. 
Insert a cassette with a program on it into the cassette player. 
Turn on the console and monitor or TV. 

Select TI BASIC from the menu on the screen following the master TI title screen. 
When TI BASIC READY appears, type: OLD CSl 
Press ENTER. 

Follow the directions which appear on the screen to "walk" you through the loading procedure. 
When the DATA OK statement appears on the screen, wait for the flashing cursor to reappear. 
Type: RUN 

Press ENTER. (It may take several seconds for the program to display its first screen on your 
video.) 

Saving a Program 

Have a program in your computer's memory. 

Insert a blank cassette tape into your cassette recorder. 

Turn on your console and monitor or TV. 

Select TI BASIC. 

Type: SAVE CSl 

Press ENTER. 

Follow the instructions which appear on the screen to "walk" you through the save procedure. 
When the save procedure is completed, you are asked if you want the recording checked-it is a 
good idea to respond "yes." 



10 



If You Have Difficulties 

You may receive an error message which reads "NO DATA FOUND." If this happens, 
you should check for the following problems and correct them: 

-an unplugged cassette recorder or weak batteries 
-improperly placed or loose connections 
-cassette volume level (it should be around 8) 
-cassette tone level (it should be around 6) 

-an excessively long leader on your cassette tape (after you press the PLAY button on your 
recorder, wait a few seconds and then press ENTER) 

If you have ruled out these common problems and continue to receive error messages, it 
is possible you may have a damaged cassette, an incompatible cassette recorder, 
or improperly functioning equipment. 

DISKETTE SOFTWARE 

To Load and Save from Diskette 

Follow the set-up procedures outlined in the Disk Memory System manual. 
Use standard 5%-inch, soft-sectored, 40-track floppy diskettes. 
Make sure ALPHA LOCK is in the locked (down) position. 

Loading a Program 

Insert the diskette with programs saved on it into the disk drive. 
Close the disk drive door. 

Turn on the disk drive and controller (or the Peripheral Expansion System), the monitor 
or TV, and finally the computer. 
Select TI BASIC. 

When TI BASIC READY appears on your screen, type: OLD DSKl. 

(where represents program name.) 

Press ENTER. 

When the flashing cursor reappears on the screen (this may take several seconds to 
occur), type: RUN 
Press ENTER. 
Saving a Program 

Initialize a blank diskette using the Disk Manager cartridge. Refer to the Disk Manager 
manual for instructions on initialization. 
Have a program in your computer's memory. 
Insert the initialized diskette into the disk drive unit. 

Close the disk drive unit door. (Never open a disk drive door when the red light is on.) 

Type: SAVE DSKL 

(Where represents the name of your program.) 

Press ENTER. 

Remove the diskette when the save procedure is completed. For future reference, make 
a label to put on the diskette with the name of the program you just saved. 

SOME FINAL TIPS 

As a strict rule, keep all software away from heat ( especially diskettes and cassettes), 
magnetic fields (metal detectors, TV's, monitors, magnets), and static electricity. 
Handle disks with care-be careful not to soil the magnetic surface or to bend or warp 
the disks. 

Reading (and keeping on hand) the instruction booklets that come with software and 
hardware can save you a lot of time and aggravation. 



Prosramming Languages 



Just like any other language, a computer programming language is utilized as a means of 
exchanging information. The languages that are intelligible to a computer are written in a 
coded, specialized form that enables you to dictate instructions to your computer 
system. Without any programming language input, your computer would have no 
information to transmit back to you-its screen would be blank and useless. 
Many languages are used in computer programming. The following is a brief overview of 
some of those languages. 

BASIC 

BASIC stands for Beginners All-purpose Symbolic Instruction Code. BASIC is very much 
like our own English language. For instance, terms such as PRINT, GOTO, RUN, and 
END have almost identical meanings in BASIC and English. This is why BASIC is the 
most popular programming language in use today. 

BASIC, like English, may be "spoken" in various dialects. The BASIC dialect in the 
TI-99/4A console is called TI BASIC. TI BASIC gives your computer a full range of 
programming capability for most home and personal applications. Many personal 
computer owners find that BASIC or any one of its dialects are more than satisfactory 
for their programming purposes. 

Requirements for use with the TI-99/4A: None. 
TI EXTENDED BASIC 

When a programming language with more complex capability is desired, TI Extended 
BASIC may be considered as the first in a series of increasingly specialized languages for 
the computer. 

TI Extended BASIC is a language often used to program business and professional 
software. This language contains many commands that are not available in TI BASIC. 
For example, TI Extended BASIC provides commands that enable you to produce 
moving, animated graphics on the screen, which isn't possible with TI BASIC. 

As a whole, TI Extended BASIC executes commands faster than TI BASIC and allows 
you to control how information is entered and formatted on the screen. This language 
also gives you access to the Memory Expansion unit, thereby increasing the amount of 
information you can process. When used in conjunction with other peripherals, programs 
of almost unlimited length may be written with TI Extended Basis. 

Requirements for use with the TI-99/4A: TI Extended BASIC Solid State Cartridge. Note: 
For enhancement, add the TI Disk Memory System (TI Disk Drive Controller and one to 
three Disk Memory Drives) or cassette recorder with the Peripheral Expansion System. 

EDITOR/ASSEMBLER (TMS 9900) 

Assembly language is very similar to machine language. When a computer program is 
written in this language, instructions to the computer are automatically converted from 
the symbolic language code to machine code. Commands issued in Assembly are not 
translated by the computer, and your programs run much faster than when entered in 
other programming languages. Because you directly address your computer in Assembly, 
you have complete control over the entire computer system. 

Assembly is not a high-level programming language (meaning it doesn't communicate with 
the computer using everyday words), and it requires familiarity with the language in order 
12 to use it. Therefore, Assembly is not intended for the beginning programmer. 



Requirements for use with the TI-99/4A: TI Editor/ Assembler Solid State Cartridge and 
Diskette; TI Disk Memory System; and TI Memory Expansion unit with the Peripheral 
Expansion System. Note: For enhancement, add the RS232 Interface, an impact printer, 
additional disk drives, or other TI peripherals. 
Pascal 

The Pascal programming language gives you access to a large library of technical and 
professional programs. Pascal programs are relatively easy to read and understand, and 
unlike BASIC, the Pascal language has been specifically designed to run on various types of 
computer systems. 

To illustrate how Pascal works with the TI-99/4A system, instructions entered in Pascal are 
translated into "p" or "pseudo" code. Through use of the TI P-code Card peripheral, 
p-code is then directly translated into the native machine instruction language compatible 
with your computer. 

Requirements for use with the TI-99/4A: P-code Card peripheral; Pascal Compiler 
diskette; Editor/Filer diskette software; TI Disk Memory System (with at least two disk 
drives); Memory Expansion Card with the Peripheral Expansion System. Note: For 
enhancement, add the RS232 Interface, an impact printer, additional Disk Memory Drives, 
and other TI peripherals. 

TI LOGO 

TI LOGO is extraordinarily easy to use and makes learning to program fun. The 
language is especially designed to create an open-ended learning environment for children 
who are just becoming acquainted with the computer. 

Programming in TI LOGO works by allowing you to "share" knowledge with the 
computer by giving it simple commands that return exciting graphics to the screen. With 
TI logo's easy-to-understand commands, you can progress from sketching, animated 
graphics, and writing to mathematics and complex problem-solving. TI LOGO lets you 
experience the world of computer programming through self-paced exploration and 
discovery. 

Requirements for use with the TI-99/4A: TI LOGO Solid State Cartridge; TI Memory 
Expansion Unit with the Peripheral Expansion System. Note: For enhancement, add the 
Disk Memory System or cassette recorder. 

TI PILOT 

PILOT is short for Programmed Inquiry, Learning, Or Teaching. Used to develop educational 
programs, PILOT programming language is employed specifically for Computer Assisted 
Instruction (CAI). PILOT can be readily learned by instructors for use in the classroom. 

With the growing use of computer-based instructional materials, educators are using 
computer programs as effective classroom tools, and TI PILOT simplifies that task. 
Instructors may create programs with TI PILOT which allow them to demonstrate 
concepts and simulate laboratory-like environments. To further aid students, TI PILOT 
programming make features such as individualized drill, practice, and testing available. 

Requirements for use with the TI-99/4A: TI PILOT Diskette, Memory Expansion Card; P- 
Code Card; and TI Disk Memory System with the Peripheral Expansion System. Note: 
For enhancement, add the UCSD p-System* Editor/Filter/Utilities diskette, TI Solid 
State Speech Synthesizer, an RS232 Interface, and an impact printer. 
*UCSD p-System is a trademark of the Regents of the University of California. 



BASIC Commands 



Command 

LIST 

NEW 

RUN 
SAVE 

OLD 
BYE 

CALL CLEAR 
RANDOMIZE 
EDIT 

Statement 

INPUT 

LET 

PRINT 
IF... THEN 

CALL CHAR 
CALL COLOR 

CALL SOUND 



DATA 

END 
INT 



Example 

INPUT A 



LET A=5 

PRINT "HELLO" 
IF A=5 THEN 40 

CALL CHAR (36,FFF) 
CALL COLOR (1,16,13) 

CALL SOUND (1000,440,1) 

DATA 34,23,0 

90 END 
INT (34.6) 



Explanation 

Tells the computer to display the 
program in its memory. 

Erases the current program in the 
computer's memory and prepares for 
entering a new program. 

Tells the computer to "run" or execute 
the program in its memory. 

Tells the computer to store the program 
in is memory onto a cassette tape 
(SAVE CSl) or diskette 
(SAVE DSKl.MYFILE). 

Tells the computer to load a program 
from cassette tape (OLD CSl) or diskette 
(OLD DSK1.^4YFILE) into its memory. 

Leaves TI BASIC. 

Clears the screen but doesn't alter 
program in computer memory. 

Resets random number generator to an 
unpredictable sequence. 

Displays a line for editing. 



Explanation 

Stops the program and waits for you 
to type a number and press ENTER. 
The value you enter is assigned to 
the variable A. 

Assigns the value 5 to the variable 
name A. (In TI BASIC, the word LET 
is optional, so this statement 
could be written A=5 also.) 

Instructs the computer to print the 
word HELLO on the screen. 

Tests the value of A. If A is equal 
to 5, the program transfers to line 
number 40. If A is not equal to 5, 
the instruction is ignored and the 
program goes on to the next program 
line. 

Tells the computer to redefine the 
dollar sign character (ASCII code 
36) to a pattern which you want to 
substitute. 

Tells the computer to use white 
(color code 16) as the foreground 
color and dark green (color code 
13) as the background color for all 
the characters in character set 1. 

Tells the computer to play a tone 
to last one second (1000 
milliseconds) at a frequency of 440 
cycles per second (middle C on the 
piano) at a loud volume. 

Stores the given numbers as data in 
a program, to be "read in" by a 
READ statement. 

Stops the program. 

Tells the computer to find the 
greatest integer (whole number) 
which is less than or equal to the 
number in parentheses. 



OPEN 

GOTO 
FOR... NEXT 

CALL SCREEN 
CALL HCHAR 

CALL VCHAR 

READ 

REM 

RND 
TAB 



OPEN #1:"DSK1.MYFILE 

GOTO 20 

FOR A=l TO 10 
NEXT A 

CALL SCREEN (9) 
CALL HCHAR (1,4,42,10) 

CALL VCHAR (2,5,42,10) 

READ X,Y,Z 

10 REM PAYROLL PROGRAM 

PRINT RND 
TAB (15) 

COLOR CODES 



Opens a "file" (a memory segment) 
on an accessory device so that the 
computer can output data to the 
device, in this case. Disk Drive 1. 

Directs the program to transfer to 
line number 20. 

Creates a program "loop" that 
repeats ten times, increasing 
the value of A by 1 each time until 
the value of A exceeds 10. 

Tells the computer to change the 
screen color to medium red (color 
code 9). 

Tells the computer to place a 
horizontal line of ten asterisks 
(character code 42) on the screen 
(starting at row 1, column 4). 

Tells the computer to place a 
vertical line of ten asterisks 
(character code 42) on the screen 
(starting at row 2, column 5). 

Tells the computer to find a DATA 
statement in the program and assign 
the first three values there to 
variables X,Y, and Z respectively. 

Tells the computer to ignore this 
line of the program; used for 
remarks or comments to describe 
what the program is doing. 

Tells the computer to print a 
pseudo-random number greater than 
or equal to zero and less than one. 

Tells the computer to start at 
position 15 when printing. 



Value 


Color 


Value 


Color 


1 


Transparent 


9 


Medium Red 


2 


Black 


10 


Light Red 


3 


Medium Green 


11 


Dark Yellow 


4 


Light Green 


12 


Light Yellow 


5 


Dark Blue 


13 


Dark Green 


6 


Light Blue 


14 


Magenta 


7 


Dark Red 


15 


Gray 


8 


Cyan 


16 


White 



Helpful Sources On BASIC 

Davis, William S. BASIC: Getting Started. Reading, Mass.: Addison-Wesley 
Publishing Company, 1981. 

Dwyer, Thomas A., and Critchfield, Margot. BASIC and the Personal Computer. 
Reading, Mass.: Addison-Wesley Publishing Company, 1978. 

Inman, Don; Zamora, Ramon; Albrecht, Bob; Quiram, Jacquelyn; and O'Dell, Bob. 
Beginner*s BASIC. Dallas: Texas Instruments, 1981. 

Peckham, Herbert D. Programming BASIC with the TI Home Computer. New York: 
McGraw-Hill Book Company, 1979. 

Shelley, John. Addison-Wesley Pocket Guide to Programming. Reading, Mass.: 
Addison-Wesley Publishing Company, 1982. 

Texas Instruments. User's Reference Guide (for the TI-99/4A Home Computer). 
Dallas: Texas Instruments, 1981. 



LOGO Commands 



TI LOGO COMMANDS 



Command 

BACK 

BYE 

COLORBACKGROUND 



Example 

BK 20 

BYE 



CB : Orange 
CB9 



Explanation 

Moves turtle backward without 
erasing its line; moves sprite backward. 

Leaves TI LOGO at the end of a 
session. 

Defines the color of the screen. 



END 


END 


Defines the end of a procedure. 


FORWARD 


FD 30 


Moves turtle in a forward direction, 






leaving a line in its path; moves 






sprite in a forward path. 


HOME 


HOME 


1 cub a luiiif^ Ui a opnic lu appr^cir 






in inc CcllLcI UI lllc dCiccll. 


LEFT 


LT 45 


Turns turtle or sprite to the left 






the angle of degrees specified. 


REPEAT 


Repeat 4 


Cause a seQuence of operations 




(FD 30 RT 90) 


to repeat the specified number of 






times. 


RIGHT 


RT 90 


Turns turtle or sprite to the right 






the angle of degrees specified. 


SETCOLOR 


SC :PURPLE 


Assigns color to the line 




SC 13 


that the turtle draws or to the 






object that the sprite carries. 


SETHEADING 


SH90 


Tells a turtle or a sprite in which 






direction to move. 


TELL 


TELL TURTLE 


Used to indicate who (sprite, 




TELL SPRITE 1 


turtle, tile) is to be the current 




TELLl 


listener. 




TELL [2 4 6] 




TO 


TO BOX 


Enters the mode that lets you teach 


(Return by pressing BACK) 


the computer a procedure. 


WHO 


WHO 


Tells you whom you are currently 






addressing (sprite, turtle, etc). 


COLORS 


NUMBER 


COLORS NUMBER 


CLEAR 





RUST 8 


BLACK 


1 


ORANGE 9 


GREEN 


2 


YELLOW 10 


LIME 


3 


LEMON 11 


BLUE 


4 


OLIVE 12 


SKY 


5 


PURPLE 13 


RED 


6 


GRAY 14 


CYAN 


7 


WHITE 15 



TURTLE MODE 



Command 


Example 


Explanation 


CLEARSCREEN 


CS 


Clears screen of writing and lines. 


HIDETURTLE 


HT 


Tells turtle not to appear in the 
drawing. 


NOTURTLE 


NOTURTLE 


Causes LOGO to leave the turtle mode. 


PENDOWN 


PD 


Reverses PENUP command and returns 
turtle to the normal state of the pen. 


PENERASE 


PE 


Tells turtle to erase any line it 
passes over. 


PENUP 


PU 


Prepares turtle to move without 
drawing a line. 


SHOWTURTLE 


ST 


Reverses HIDETURTLE command and 
returns the turtle to the screen. 


oFKI 1 1 MUDt 






CARRY 


CARRY : PLANE 
CARRY 1 


Defines or changes the shape of a 

SDrite' tells a snrifp to takp a 

shape created in MAKESHAPE mode. 


CLEARSCREEN 


CS 


Clears screen of writing. 


FREEZE 


FREEZE 


Stops motion of sprites. 


MAKESHAPE 

(Return by pressing BACK) 


MS 6 


Brings a grid to the screen so 
that a sprite shape may be created. 


SETSPEED 


SS 87 


Tell a sprite how fast to move. 
(Negative speed makes the sprite move 
in the direction opposite to the 
SETHEADING.) 


THAW 


THAW 


Resumes sprite motion. 


WAIT 


WAIT 60 


Produces a pause. 


RESIDENT SPRITES 






Number 


Shape 




1 


PLANE 




2 


TRUCK 




3 


ROCKET 




4 


BALL 




5 


BOX 





Helpful Sources On LOGO 

"And a Little Child Shall Lead Them." Instructional Innovator, 
February 1982, p.l9. 

Eyster, Richard H. "Seymour Papert and the LOGO Universe." Creative Computing, 
December 1981, pp.70, 72. 

Papert, Seymour. "Computers Are Objects to Think With." Instructor, 
March 1982, pp. 86-87,89. 

Mindstorms: Children, Connputers, and Powerful Ideas. Basic 

Books, Inc., 1980. 

Staples, Betsy. "Turtles and Sprites for the 99/4A." Creative Computing, 
December 1981, pp. 66, 68, 70. 



LOGO Programs (Procedures) 



To create these LOGO designs: 

1) Type in the procedure. (The END statement 
appears automatically in LOGO.) 

2) Press BACK (FCTN 9). 

3) Type in the name of your procedure 
(example, STAR) and press ENTER. 



FOR THE TURTLE 

TO STAR 
CLEARSCREEN 
TELL TURTLE 
FORWARD 50 
RIGHT 144 
FORWARD 50 
RIGHT 144 
FORWARD 50 
RIGHT 144 
FORWARD 50 
RIGHT 144 
FORWARD 50 
END 



TO BUTTERFLY 
CLEARSCREEN 
TELL TURTLE 
RIGHT 50 
FORWARD 50 
RIGHT 120 
FORWARD 50 
RIGHT 120 
FORWARD 100 
LEFT 120 
FORWARD 50 
LEFT 120 
FORWARD 50 
END 



TO PENTAGON 
CLEARSCREEN 
TELL TURTLE 
FORWARD 50 
RIGHT 72 
FORWARD 50 
RIGHT 72 
FORWARD 50 
RIGHT 72 
FORWARD 50 
RIGHT 72 
FORWARD 50 
END 



TO BOX 

TELL TURTLE 

REPEAT 4 [FD SORT 90] 

RT20 

BOX 

END 

(This procedure repeats itself. 
To stop it, press BACK) 



FOR SPRITES 

TO SQUARE 
TELL SPRITE 1 
HOME 

CARRY :BALL 
SETCOLOR :RED 
SETSPEED 10 

REPEAT 8 [WAIT 30 RIGHT 90] 

SETSPEED 

END 



TO VANISH 
TELL :ALL 
CARRY 
SETCOLOR 
SETSPEED 
SETHEADING 
END 



Getting Started in 
TI BASIC Programming 



The program samples on the following pages can help you explore the TI BASIC 
programming language. Beside each program line you'll find a simple explanation of what 
the line does. Look at the lines, and then read the explanations before entering each 
program. If you have questions, be sure to ask your instructor for assistance. 

Line Numbers 

When you type each program line, be sure to include the number shown at the beginning 
of the line. This number tells the computer the order in which the lines will be performed. 

Pressing ENTER 

Also, don't forget to press ENTER after typing each line! This is the computer's cue to 
store the line in its memory. 

Running Your Program 

When you have finished entering a program and have checked for and corrected any 
typographical errors, type the word RUN and press ENTER. The RUN command 
instructs the computer to perform or "execute" your program. 



Most important of all, have fun! Programming is an exciting new skill for you, and you 
may be surprised at how quickly you get "up and running" in TI BASIC. 



19 



Simple Averaging Program 



This program allows you to enter five numbers, which are then added together. The sum 
is divided by 5, and the "average" is displayed on the screen. 



NEW 

10 INPUT A 

20 INPUT B 

30 INPUT C 

40 INPUT D 

50 INPUT E 

60 N=(A+B+C+D-fE) /5 

70 PRINT N 



Clears the computer's memory for a new program. 

Stops the program and waits for you 

to enter a number from the keyboard. 

When you have typed a number, press ENTER 

to go on to the next line. 

Adds the five numbers and divides by 5 
Prints your average on the screen. 



If you make an error while typing a line, use the left-arrow key (FCTN S) to backspace 
to the error and correct the error by typing over it. 

OR 

You can also press ERASE (FCTN 3) to erase the line and start over, including the line 
number. 

If you spot an error after you have already pressed ENTER, retype the line correctly, 
including the line number, and press ENTER again. The computer will replace the old line 
with the new correct line in its memory. 



Quick Demonstrations with Color, 
Graphics, Sound, and Speech 



Color Program 1 

This program gives you a "light show" featuring the screen color of your choice. Try 
typing any number from 3 through 16 when the computer asks for a number. Then press 
ENTER and see what color you've chosen! 

NEW Clears the computer's memory for a new 

program. 

10 CALL CLEAR Clears the screen. 

20 PRINT "TYPE A NUMBER FROM 3 TO 16" Prints a message on the screen. 

30 INPUT "THEN PRESS ENTER. ":A Waits for you to enter a number from 

3 to 16. 

40 CALL SCREEN (A) Turns the screen that color. 

50 FOR DELAY=1 TO 200 Sets up a "time-delay loop"that 

60 NEXT DELAY repeats 200 times 

so you can see the color. 
70 GOTO 10 Goes back to line 10 and starts over. 

Color Program 2 

This program lets you view all the possible screen colors (see Color Code chart, p 15). 
The computer displays each color, from one through sixteen, for a controlled period of 
time. When all sixteen colors have been displayed, the program stops. 

NEW Clears the computer's memory for a new 

program. 

10 CALL CLEAR Clears the screen. 

20 FOR K= 1 TO 16 Begins the loop to change screen color. 

30 CALL SCREEN (K) Changes the screen color to a different 

color each time through the loop. 
40 FOR DELAY=1 TO 500 Delays the program so that the screen color 

is displayed for a controlled period of time. 

50 NEXT DELAY 

60 NEXT K Closes the change-screen-color loop. 

Color Graphics Program 

This program changes the screen color to dark red and places a cross of asterisks on 
the screen. Press FCTN 4 to clear the program. 

NEW Clears the computer's memory for a new program. 

10 CALL CLEAR Clears the screen. 

20 CALL SCREEN (7) Changes the screen color to dark red (color code 7). 

30 CALL HCHAR (11,1,42,32) Placed a horizontal line of 32 asterisks 

(character code 42) on the screen (starting at 

row 11, column 1). 

40 CALL VCHAR (1.16,42,24) Places a vertical line of 24 asterisks (character 

code 42) on the screen (starting at row 1, column 16). 

50 GOTO 50 This line returns to "itself", allowing the image 

on the screen to remain. 



21 



Sound Program 

This program causes the computer to generate a series of tones. With the CALL 
SOUND command you can control the duration, frequency (in cycles per second), and 
volume of the tone. 



NEW 

10 LET TONE=110 



20 FOR COUNT=l TO 10 

30 CALL SOUND (100, TONE, 1) 



40 TONE=TONE+100 



50 NEXT COUNT 



Clears the computer's memory for a new program. 
Assigns the value of 110 to the variable TONE; 
sets the frequency of the first tone at 110 
cycles per second. 

Begins a loop to be repeated ten times. 
Tells computer to play a tone for 100 thousandths 
(one tenth) of a second, at the pitch specified 
by the variable TONE, and at a loud volume. 
Each time the computer reaches this line in the 
loop, the value of TONE becomes a higher pitch 
(100 cps higher). 
Repeats the loop. 



Tcxt-to-speech Program 

(for use with the Terminal Emulator 11 cartridge) 

The word is out-computers can talk! Here's a program that lets you enter any word or 
phrase you want and listen to the way the computer speaks it. 

Don't forget to press ENTER after you type your word or phrase. 



NEW 

10 OPEN #1: "SPEECH",OUTPUT 
20 INPUT A$ 
30 PRINT #1:A$ 
40 GOTO 20 



Clears the computer's memory for a new 
program. 

Tells the computer you want to use the 
Speech Synthesizer. 

Waits for you to type a word or phrase and 
press ENTER. 

"Passes" your word or phrase to the Speech 
Synthesizer and "speaks" it. 
Returns to line 20 so that you can enter 
another word or phrase. 



If you make an error while typing a line, use the left-arrow key (FCTN S) to backspace 
to the error and correct the error by typing over it. 

OR 

You can also press ERASE (FCTN 3) to erase the line and start over, including the line 
number. 

If you spot an error after you have already pressed ENTER, retype the line correctly, 
including the line number, and press ENTER again. The computer will replace the old line 
with the new correct line in its memory. 



Advanced TI BASIC 
Programming Examples 



The examples on the following page give you a glimpse of some of the more advanced 
capabilities of the TI BASIC programming language. The emphasis in this section is on 
"what computers can do for you." 

If you don't understand every line in these programs, don't worry. Even though you haven't 
experimented with them before, you'll probably be able to figure out what's going on just 
by watching the program's operation. 

To help you explore, each line is explained briefly, just as in the earlier examples. 



Multiplication Program 

Everyone knows that computers can do math very quickly. This program gives you a 
small sample of the computer's math power-a "times table" based on the number you 
enter. 

10 CALL CLEAR Clears the screen. 

20 INPUT A Waits for you to type a number and press ENTER. 

30 FOR &=1 TO 12 Sets up a "loop" that repeats 12 times. 

40 PRINT A; "TIMES"; B; "IS"; A*B Calculates and prints the multiplication table for 

the number you entered (for example, 2 TIMES 1 IS 2, 

2 TIMES 2 IS 4, etc.). 
50 NEXT B Goes back to line 30 for the next value of B. 



If you make an error while typing a line, use the left-arrow key (FCTN S) to backspace to the 
error and correct the error by typing over it. 

OR 

You can also press ERASE (FCTN 3) to erase the line and start over, including the line 
number. 

If you spot an error after you have already pressed ENTER, retype the line correctly, 
including the line number, and press ENTER again. The computer will replace the old line 
with the new correct line in its memory. 



23 



Expanded Averaging Program 



This program demonstrates a more versatile averaging program than the one on page 20. 
Here, you can enter as many numbers as you like, rather than just five. Just think how 
easy report card time would be if you were a teacher with a program like this! 

10 INPUT A Stops the program and waits for you to enter 

a number. 

20 X=X+1 Keeps a count of your entries. 

30 TOTAL=TOTAL+A Adds your entry to the previous total. 

40 INPUT "MORE?(Y/N)":C$ Asks if you have more entries to make. 

Press Y for yes or N for no; then press 

ENTER to go on. 

50 IF C$="Y" THEN 10 Tests to see if your answer is Y for yes. 

If so, goes back to line 10 and starts over. 
60 PRINT "AVERAGE=";TOTAIVX Prints the average of the numbers you 

entered. 



If you make an error while typing a line, use the left-arrow key (FCTN S) to backspace 
to the error and correct the error by typing over it. 

OR 

You can also press ERASE (FCTN 3) to erase the line and start over, including the line 
number. 

If you spot an error after you have already pressed ENTER, retype the line correctly, 
including the line number, and press ENTER again. The computer will replace the old line 
with the new correct line in its memory. ^^^^^^ 



Checkbook 
Balancing Program 



CHECKBOOK BALANCING PROGRAM 

Ever wish you had a little help when you were balancing your checkbook? This program 
shows you a simple way to "let the computer do it." 

The program first prompts you to enter your current balance and then continues to ask 
for each check amount until you have entered all your outstanding checks. The new 
balance is then displayed, along with a report of how many checks you entered. 

Don't forget to press ENTER each time you enter an amount. 



10 INPUT "CURRENT BALANCE?": A 
20 INPUT "CHECK AMOUNT?":B 
30 X=X+1 
40 A=A-B 

50 PRINT "NEW BALANCE IS";A 
60 INPUT "MORE?(Y/N)":C$ 

70 IF C$="Y" THEN 10 

80 PRINT "YOU HAVE ENTERED"; 
X; "CHECKS." 



Waits for you to enter your current balance. 

Waits for you to enter the next check. 

Keeps a count of your entries. 

Calculates the new balance. 

Prints the new balance on the screen. 

Asks if you have more checks. Press Y 

or N and then press ENTER. 

Tests to see if your answer is Y for yes. 

If so, goes back to line 10 and starts over. 

Tells you how many checks you have entered. 



If you make an error while typing a line, use the left-arrow key (FCTN S) to backspace to the 
error and correct the error by typing over it. 

OR 

You can also press ERASE (FCTN 3) to erase the line and start over, including the line 
number. 

If you spot an error after you have already pressed ENTER, retype the line correctly, 
including the line number, and press ENTER again. The computer will replace the old line 
with the new correct line in its memory. 



25 



Chromatic 
Scale Program 



This program makes the computer play a chromatic scale (by half steps) up an octave and 
back down again to the starting pitch. 



100 INPUT A 

110 FOR B=l to 12 

120 CALL SOUND(500,A,0) 



130 A=A*2 A (1/12) 

140 NEXT B 

150 FOR C =1 TO 12 

160 CALL SOUND(500,A,0) 

170 A=A*2 A-(l/12) 

180 NEXT C 



Waits for you to enter the starting pitch (262 
for middle C). 

Begins loop to play 12 tone scale up an octave. 

Tells the computer to play a tone for 500 

milliseconds, at the frequency of the current 

value of A, and at a loud volume. 

Tells the computer to step up the frequency by 

one half step. 

Ends loop. 

Begins loop to play 12 tone scale down an octave. 
(See line 120) 

Tells the computer to step down the frequency by 
one half step. 
Ends loop. 



If you make an error while typing a line, use the left-arrow key (FCTN S) to backspace 
to the error and correct the error by typing over it. 

OR 

You can also press ERASE (FCTN 3) to erase the line and start over, including the line 
number. 

If you spot an error after you have already pressed ENTER, retype the line correctly, 
including the line number, and press ENTER again. The computer will replace the old line 
with the new correct line in its memory. 



26 



Programming Exercises 



EDITING 

Run the following program. You'll see a row of asterisks moving on the screen. Now let's add some 
color to your program. Add a line with a CALL COLOR(2,A,A) statement to your program. Use 
line 30 for this statement. 

Color Bar Program 

NEW 

10 FOR A=2 TO 16 

20 CALL CLEAR 

40 CALL HCHAR(A+5,3,42,28) 

50 FOR B==l TO 300 

60 NEXT B 

70 NEXT A 



Deleting lines from a program is very simple-you just type the line number and then press ENTER. 
The line is automatically removed from the computer's memory. 

Type and run the following program just as it's written. Then delete line 10 by typing 10 and 
pressing ENTER, and run the program again to see the effect of the change. 

Football Fan Program 

NEW 

10 CALL CLEAR 
20 LET A$="GO" 

30 PRINT TAB(13);A$::TAB(12);"TEAM"::TAB(13);A$;"!" 

40 FOR Z=l to 10 

50 PRINT 

60 NEXT Z 

70 FOR Z=l TO 600 

80 NEXT Z 

90 GOTO 10 



In the following program, make these alterations: 

Change the number 75 in line 10 to 100 

Add a CALL CLEAR statement to the program 

Add a line that will print "THE ANSWER IS." 

Math Program 

NEW 

10 LET M=75 
20 LET R=4/2*M 
30 PRINT R 



27 



"Debugging" 



The programs below are filled with typographical errors or "bugs." "Debug" the 
programs, correcting all errors. Then, run the corrected programs. 

Two-dice Roll 

NEW 

5 CALL CLEAR 
10 RANDODIZE 

20 INPUT "NUMBER OF ROLLS?: "N 

30 FOR ROLL=l TO N 

40 DIE1=INT(6*RND+1 

50 DIE 2=INT(6*RND)+1 

60 PINT DIE1;DIE2,DIE1+DIE2 

70 NEXT ROLL 

80 PRINT 

90 GOTO 20 

Diagonal Box Graphics 

NEW 

10 CALL CLER 

20 CALL COLOR2,5,5) 

30 LET K=l 

40 CAL HCHAR (K,K+1,42) 
50 K=K+1 

60 IF K< 25 THEN 40 
70 K=l 

80 CALL HCHAR K,K+3,42 
90 K=K+1 

100 IFK<25 THEN 80 
110 GOTO 110 



28 



Programming Challenge 



If youVe caught on to the programming weVe done so far, you may be ready for a new 
challenge: solving some stated problems for which you will write the programs. 

Four problems are stated on the following pages. Read the problem carefully, making 
sure you fully understand it. Then decide what your program will need to do in order to 
solve the problem. Be sure to check for errors in your program. 

When finished, run your program and correct any errors that you may discover. Then 
turn to page 32 and compare your program with the one listed there. Don't worry if your 
program doesn't look exactly like that one. If your program gets the desired results, that 
is all that matters. 



Prosrammins Challenges 



Programming Challenge 1: Counting 

Write a program to make the computer count from 1 to 20 and print this on the screen. 
Hint: Use a FOR-NEXT loop and have the computer print the value of the control 
variable (the variable immediately following the word FOR) each time through the loop. 

Programming Challenge 2: Summation 

Devise a program to compute the sum of all the whole numbers between 1 and 10 
inclusive (including 1 and 10). Hint: Use a loop with a GOTO statement at the end to 
add numbers into the sum. Use the variable names: 



SUM — for sum 

COUNT — for the loop counter 



Programiiiins Challenges 



Programming Challenge 3: Miles Per Gallon 

On a 120-mile automobile trip your car uses 8.5 gallons of gasoline at $1.15 per gallon. 
Write a program which computes and prints the miles per gallon and the total cost of 
fuel for the trip. Use the following variable names: 



Programming Challenge 4: Payroll 

An employee is paid an hourly rate of $5.25 per hour. An 18% withholding tax is 
deducted from the weekly paycheck. Write a payroll program to input the number of 
hours worked and compute both the gross pay (before the tax deduction) and the net 
pay (after the tax deduction). Have the computer print the results. 



DIST 
GAL 
CPG 
MPG 



cost per gallon 
miles per gallon 



distance in miles 
gallons of gasoline used 



TCOST 



total cost of gasoline 




31 



Answer Key 



(Answers to Stated Programming Problems on Pages 29 through 31) 



1. Counting 

10 CALL CLEAR 
20 FOR B = 1 TO 20 
30 PRINT B 
40 NEXT B 

2. Summation 

10 LET SUM = 

20 LET COUNT = 1 

30 IF COUNT > 10 THEN 70 

40 LET SUM = SUM + COUNT 

50 LET COUNT = COUNT + 1 

60 GO TO 30 

70 PRINT "SUM =";SUM 

3. Miles Per Gallon 

10 LET DIST = 120 [or] INPUT "DISTANCE?": DIST 

20 LET GAL = 8.5 [or] INPUT "GALLONS?": GAL 

30 LET CPG = 1.15 [or] INPUT "COST PER GALLON?":CPG 

40 MPG = DIST/GAL 
50TCOST = CPG*GAL 
60 PRINT "MPG = ";MPG 
70 PRINT "TCOST = ";TCOST 

4. Payroll 

10 LET HRATE = 5.25 
20 LET TRATE = .18 
30 INPUT "NO. OF HOURS?":HOURS 
40 GROSS = HRATE*HOURS 
50 NET = GROSS-TRATE*GROSS 
60 PRINT "GROSS =";GROSS 
70 PRINT "NET = ";NET 



[HRATE is hourly rate] 
[TRATE is tax rate] 



32 



Texnet and The Source 



TEXNET is a special edition of The Source, an on-line computer information and 
communication service developed by the nation's pioneer information utility: Source 
Telecomputing Corporation. The Source is a home computer owner's key to over one 
thousand information and communications services. Once you're on-line with the Source, 
you are able to receive such things as up to the minute news from United Press 
International, numerous business services, and much, much more. Here's a small sample 
index of the information you have at your fingertips from the Source: 

Acupuncture Lectures 

Airline Schedules Mail 

American Stock Exchange Mental Health 

Backgammon National News 

Barter Network New York Stock Exchange 

Business News Office Equipment 

Car Rentals Photography 

Chat Quotations 

Cinema Random Sonnets 

Classifled Ads Science Fiction 

Commodities Shopping at Home 

Daily News Software 

Dining Out Spelling Lessons 

English Lessons Stocks 

Fairs and Festivals Student Aid 

FORTRAN Travel Plans 

Help Wanted United Press International 

Income Tax Vintages of Wine 

Joint Tax Filing Weather 

Labor and Management Weekend Getaway 
Since TEXNET was created for the Texas Instruments Home Computer, there are many 
features made exclusively for the enhancement of the TI-99/4A that are not available 
through the Source, such as: 

TI News TI Software Exchange 

TI Voice Chat TI Phonetic Dictionary 

TI Help TI Software Directory 

TI User's Group TI Service Centers 

TI Graphics Library TI Music and Sound Libary 

You can access TEXNET and the Source with a minumum of additional equipment. The 
only special features you need are the Terminal Emulator II, an RS-232 Interface, and a 
TI Telephone Coupler (Modem). Then when you want to tap TEXNET or the Source, 
you just dial a local number in over 270 cities, type in your private ID account number 
(for the Source, a network number and a password are also required). Once you're on- 
line, you simply type in your commands in plain English. You don't have to be a 
computer expert to use it; you can program your own systems into TEXNET and the 
Source as easily as typing a letter. You're a part of today's communications revolution 
with TEXNET and the Source! 

33 

© Source Telecomputing Corp., 1981. 



TI Users' 
Groups 



INTERNATIONAL 
USERS GROUP 

International 99/4 Users' Group 
7908 N.W. 23rd Street, Suite 5 
Bethany, Ok. 73008 
(405) 787-8521 

International Home Computer 
Users Association 
P.O. Box 371 

Rancho Sante Fe, Ca. 92067 

99/4 Users of America 
Duane Fischer 
5028 Merit Drive 
Flint. MI. 48506 
(313) 736-3774 

LOCAL USERS' GROUP 

CAUFORNIA 

Orange County 
Arnold Hirsch 
1673 Chatequ 
Anaheim, Ca. 92802 

L.A./South Bay 99er Users' Group 

Bob Saunders 
4128 Merrill St. 
Torrance, Ca. 90503 
(213) 540-1089 
San Diego 

Larry DeRusha 
P.O. Box 2403 
Del Mar. Ca. 95030 

Los Gatos 

Capt. Byron Monroe 
16380 E. La. Chiquita 
Los Gatos. Ca. 95030 

COLORADO 

Colorado 99/4 Users* Group 
Peter Crowell 

15177C East Louisiana Drive 
Aurora, Co. 80012 
(303) 750-5949 

ILLINOIS 

Chicago 

Jerome Strauss 
353 Park Drive 
Palatine. IL. 60067 
(312) 397-2550 



MASSACHUSETTS 

Pioneer Valley TI-99/4 Users' Group 
Richard Guenette 
3 Market Street 
Northampton, Mass. 01060 

MICHIGAN 

99/4 Users' Group 
Duane Fischer 
5028 Merit Drive 
Flint. MI. 48506 

(313) 736-3774 

MINNESOTA 

Greater Minneapolis /St. Paul 
Home Computer Users' Group 
P.O. Box 12351 
St. Paul. Mn. 55112 

MISSOURI 

99/4 Users' Group of St. Louis 
Mark Summer 
812 Keswick Place 
St. Louis, Mo. 63119 

(314) 962-8286 

OHIO 

Cin-Day Users' Group 
Jin Schwaller 
11987 Cedarcreek Dr. 
Cincinnati, Oh. 45240 

OREGON 

Pacific Northwest TI-99/4 Users' Group 
Gary Kaplan 
P.O. Box 5537 
Eugene, Or. 97495 
(503) 485-8796 

PENNSYLVANIA 

Northeast 

Daniel Cooper 
P.O. Box 285 
Hazelton, Pa. 18201 
(717) 454-3023 



Pittsburgh 

Pittsburgh Users' Group 
P.O. Box 18124 
Pittsburgh, Pa. 15236 

SOUTH CAROLINA 

South Carolina Texas Instruments 

Computer Club (TIC) 

Danny Pack 

225 Wynchwood Drive 

Irmo, S.C. 29063 

(803) 781-0994 

TEXAS 

Amarillo 

Rafael C. Quinces 
P.O. Box 366 
Canyon. Texas 79015 
(806) 6554563 

Dallas 

Dallas TI Home Computer Group 
Doyle Kelly 
P.O. Box 672 
Wylie. Tx. 75098 
(214) 995-4068 

Fort Worth 

Andy Belivacqua 
Route 2, Box 75-U 
Mansfield. Tx. 76063 
(817) 473-0712 

Houston 

Houston Users' Group 

Raymond Wells 

8922 Roos Road 

Houston, Tx. 77036 

(713) 771-3483 

(713) 871-8000 Ext. 4516 

JSC Users' Group (JUG) 
Lewis H. Harris 
15727 El Camino Real 
Houston. Texas 77062 



Lubbock 

Lubbock Computer Club 
99/4 Users' Group 
Brett Pijan 
2006B 43rd Street 
Lubbock Tx. 79412 
(806) 765-0102 

Midland 

West Texas 99/4 Users' Group 
Richard Biddle 
P.O. Box 6448 M/S 3030 
Midland. TX. 79701 

WASHINGTON D.C. 

Washington, D.C. 99/4 Users' Group 
Bill Whitmore 
P.O. Box 267 
Leesburgh, Va. 22075 

WASHINGTON (STATE) 

Puget Sound 99'ers 
Jeff Dean 
21404 54th PL. W. 
Mountlake, Wa. 98665 
(206) 695-7002 

99/4 Computer Society 
R.S. (Bob) Chase 
421 Northwest 69th Street 
Vancover. Wa. 98665 
(206) 695-7002 

WISCONSIN 
Gene Hitz 

"Program Innovators" 
2007 North 71st Street 
Waauwatosa, Wi. 53213 
(414) 452-0499 

LOGO USERS' GROUP 

Young Peoples' 
LOGO Association 
1208 HUlsdale Drive 
Richardson. Tx. 75081 
(214) 782-7548 



34 



Sources For 
Additional Information 



Many different people-men and women with small businesses, teachers, hobbyists, and 
professionals in many fields-have begun to use home computers, and popular computing 
magazines now include articles to match their particular interests. Materials about 
computing are also becoming part of the coverage of many magazines and journals. 
Teachers' journals now include suggestions for computer use in the classroom, and 
general magazines also have articles on computing. 

Because of the rapid increase in the number of people who see the value—and the fun- 
in personal computing, no list of suggested magazines can cover all that is available. Use 
this list as a introduction to information on computing. A visit to your community's 
library will show you the wealth of information available on this exciting new field. 

General Interest Magazines 

BYTErThe Small Personal Computing 

Systems Journal Disk Drive 



POB 590 

Martinsville, NJ 08836 



Box 1408 

Riverton, NJ 08077 



Creative Computing 



Popular Computing 
POB 307 

Martinsville, NJ 08836 



POB 5214 
Boulder, CO 80321 



99'er Magazine 
POB 5537 
Eugene,OR 97405 



Recreational Computing 

People's Computer Company 
1263 El Camino,POB E 
Menlo Park, CA 94025 



Journals of Special Interest to Teachers 



Classroom Computer News 



Educational Technology 

140 Sylvan Ave. 
Englcwood Cliffs, NJ 07632 



Subscription Dept. 
51 Spring Street 
Watertown, MA 02172 



The Computing Teacher 

The Computer Science Dept. 



Electronic Learning 

902 Sylvan Ave. 
Englewood Cliffs, NJ 07632 



University of Oregon 
Eugene, OR 97403 



Computers and Education 

Pergamon Press, Inc. 
Elmsford, NY 10523 



Technological Horizons in 
Education Journal 



T.H.E. Journal 
Information Synergy, Inc. 
POB 992 
Acton, MA 01720 



35 



Most Often Asked 
Questions and Answers 



1. Questions: Will it work with my television set? 

Answer: Yes. The TI-99/4A console can be connected to a television set by means of the TI-900 Video 
Modulator. 

2. Question: Is it durable? Will it withstand electrical shock via static electricity, keyboard abuse, etc.? 
Answer: The TI-99/4A is probably the most durable computer that's ever been made. TI has applied 
everything that was learned from years of experience in building handheld calculators to the TI-99/4A. For 
example, the computer has been designed to withstand a static electricity shock in excess of 50,000 volts with 
no physical damage to the computer. The only change occurring at that particular point is that some data in 
RAM may be changed or lost. As far as physical abuse to the keyboard, it's probably one of the most rugged 
keyboards that's ever been put into any computer. We have a very durable, very hard-to-hurt computer. It's 
been designed to operate under conditions far in excess of those you would ever encounter in your home. 

3. Question: Will it work like a typewriter or word processor? 

Answer: Yes. The TI-99/4A with the Typing Tutor or the TI Writer Word Processor cartridges can function 
as a typing or word processing too. 

4. Question: Will it drive a large printer? 

Answer: Yes. The TI-99/4A working with the RS232 Interface unit will drive any printer that can be driven 
via the RS232 standard. This includes most current line printers, such as the TI-99/4A Printer, the OMNI 810 
(which is made by TI), and other printers which are on the market. In addition, the RS232 Interface Card 
features a parallel interface for those printers which do not use RS232. 

5. Question: Can you print the contents of any screen? 

Answer: The answer to this is no. However, a TI BASIC program can be written that will print the con- 
tents of a screen. It is also possible to print the contents of some screens generated by cartridges. 

6. Question: Can I do fine line graphics? 

Answer: Yes. The screen resolution of the monitor is a 192 by 256 dot matrix. The screen is capable of 
producing 32 characters by 24 characters, each character being produced from an eight-by-eight dot 
matrix. Any character can be called by a character number, which allows for the generation of all sorts 
of graphic elements. The TI-99/4A can do dot-addressable (bit-map) graphics with specialized software. 

7. Question: Will the cost come down like the calculator did? 

Answer: The cost has already come down dramatically. In 1979 the TI-99/4 console cost around $900. The 
suggested retail price for the TI-99/4A as of September 1982 is $450.00. The important thing to remember is: If 
you wait around for the cost to come down any more, you may be waiting forever; in the meantime, you are not 
able to capitalize on the powerful benefits of owning a Home Computer. 

8. Question: Will it be obsolete next month? 

Answer: An emphatic "No." The TI-99/4A is designed to support a wide variety of peripheral devices 
which add to its function and usefulness. Therefore, when a new peripheral comes out, you simply plug it 
into the TI-99/4A and it performs the function of that new peripheral. 

9. Question: What is the warranty like? 

Answer: If the computer fails within the first ninety days because of defective materials or workmanship, 
it will be replaced free of charge. If a failure occurs after the ninety-day period, the computer will be repaired 
for a small fee, depending on the severity of problem. There are also 42 Exchange Centers located around 
the United States where, for a small fee, you can exchange your computer for a working computer. These 
are the same repair and exchange centers that currently handle our calculator products. 

10. Question: Can I edit or change Solid State Cartridges? 

Answer: No. The Solid State Cartridges are programs locked in integrated circuit chips. The user cannot 
alter them. 



36 



11. Question: Why are there so few programs for businesses? 

Answer: The TI-99/4A was designed from the very outset to be a true home-use computer. This does 
not rule out its application in many small business situations. In fact, independent sources have written 
many small business applications. However, the major software thrust will continue to be geared for the 
home. 

12. Question: Why should I buy this computer instead of the competition (Apple, TRS-80, Atari, etc.)? 
Answer: There are several reasons. First of all TI has, without a doubt, the easiest computer to use 
that's available on the market today. The use of Solid State Cartridges allows a novice to use the com- 
puter with a minimum of effort and experimentation. Second, we believe we offer an unparallelled record 
of service to consumers. Texas Instruments has for years been in the business of bringing high-powered 
technology into the home. We stand behind our products after the sale by providing things like quality 
service, user newsletters, and continuing software support. 

13. Question: What microprocessor do you use, and what are its advantages? 

Answer: We use the TMS9900 series microprocessor. It allows us to operate and do some very 
sophisticated things as far as signal processing is concerned, especially when using peripheral devices. Why did 
we use that particular microprocessor? The 9900 series microprocessor is a 16-bit microprocessor makes the 
computer more accurate, allows two computer words to be processed at a time, has more memory storage, 
allows the use of disk system with 16K RAM, and is exponentially more powerful than an 8-bit microprocessor. 

14. Question: Is system documentation (schematics) available? 
Answer: Yes. Documentation can be obtained by writing to: 

Texas Instruments 

Wc/o The Dealer Parts Department 
P.O. Box 53 
Lubbock, Texas 79408 

15. Question: What is the power consumption of the console and the monitor? 

Answer: The power consumption of the console plus the monitor is about the same as a 150-watt light 
bulb. 

16. Question: Can you connect it to large computer data bases? 

Answer: Yes. With the use of the Telephone Coupler (Modem), Terminal Emulator II Solid State Car- 
tridge, and the RS232 Interface, our computer can be connected to large computer data bases such as 
MICRONET, THE SOURCE, COMPUSERVE, DOW JONES, etc. Information about these data bases can be 
obtained at your local computer store. 

17. Question: What cassette recorders can be used to store data on the TI-99/4A? 
Answer: G.E. Model 3-5154A (Silhouette-2) G.E. Models 510F & G 

Cost: $40-50 Cost: $30-50 

Features: Tape counter Features: No counter 

Panasonic Model 2309A Realistic Model CTR-21A 
Cost: $40-50 Cost: $50-70 

Features: Tape counter Features: Tape counter, cue review, record meter 

18. Question: Can the computer do things for my home-turn on lights, regulate the temperature, control 
burglar alarms, etc.? 

Answer: At the present time the only things standing between these sorts of functions and our current 
computer are simple peripheral devices that will plug into the computer. 

19. Question: How much information can I store on a diskette? 

Answer: The current disk system will store 90K bytes of data, which is about the same as 90,000 
keystrokes of information (per diskette, per drive). 

20. Question: Is the new Peripheral Expansion System compatible with the old "train" peripherals? 
Answer: Yes, the new peripheral system will plug into the TI-99/4A console or into the old-style 
peripherals. 



An Overview of the 
Development of the Computer 



3000 B.C. 

One of the most ancient counting machines is the abacus, which was invented in Asia. The 
Chinese abacus, called a "suan-pan," was developed around 3000 B.C. The abacus was modified 
and improved in the centuries that followed, and it is still used by many people in the world today. 

1600s 

In the late 1600s, the German Philosopher Gottfried Wilhelm Leibniz invented a machine which 
multipled by rapid, repeated additions. 

In the 1640s, the French philosopher and mathematician Blaise Pascal invented and built the first 
adding machine that could carry sums. 

1800s 

The French inventor Joseph M. Jacquard designed a loom for weaving patterned fabric in 1801. 
The loom selected colored threads for sections of the cloth as directed by punched cards. 
Jacquard*s punched cards enabled him to direct a machine in specific tasks and to change the 
directions simply by changing the card. 

Charles Babbage, an English mathematician, designed a calculating device with all the components 
of a modern computer in the 1820s. Because the source of power in the 1820s was steam-driven 
engines, he was unable to complete the design. 

In the United States in 1888, William S. Burroughs made the first adding machine which 
successfully recorded data. 

Hermann Hollerith and John Shaw Billings of the United States invented a machine that used 
punched cards for counting census data. Hollerith's machine was used for the 1890 U.S. census. 

1930s 

Vannevar Bush, an American electrical engineer in the 1930s, designed and built the first analog 
computer. 

Between 1937 and 1944, Howard H. Aiken of Harvard University designed and built the first digital 
computer in conjunction with IBM. The Harvard Mark I, or the Automatic Sequence Controlled 
Calculator, could perform three additions every second. It was eight feet high and fifty-one feet 
long. 

1940s 

Electrical engineers at the University of Pennsylvania, John Mauchly and John Presper Eckert, built 
ENIAC (Electronic Numerical Integrator and Computer) in the 1940s. ENIAC had 18,000 vacuum 
tubes, but it was faster than earlier machines. 

Bell Labs in 1948 invented the transistor, which eventually replaced the bulkly vacuum tubes 
previously used in computers. 

1950s 

The Universal Automatic Computer, or UNIVAC, was the first computer produced for sale. In 
38 1951, it was installed at the U.S. Bureau of the Census. 



In 1954, Texas Instruments designed the world's first commercially produced transistor radio. As a 
result of the project, TI became the first company to design and mass-produce low-cost germanium 
transistors. 

1958 

In 1958, Jack S. Kilby of TI invented the integrated circuit (IC), a single piece of silicon containing 
complete electronic circuits. 

1967 

In 1967, TI produced the first electronic handheld calculator. This miniature electronic calculator is 
in the permanent collection of the Smithsonian Institute at Washington, D.C. 

1970 

The single-chip microprocessor, an integrated circuit containing all the elements of a computer's 
central processing unit (CPU), was invented by Gary Boone of TI in 1970. Today, similar devices 
are the "brains" of a wide range of electronic products, such as the TI-99/4A Personal Computer. 

1971 

TI introduced in 1971 the single-chip microcomputer, invented by Gary Boone and Michael 
Cochran of TI. The device packed all the elements of a computer (CPU, data and instructions 
memory, input/output circuitry and clock) into a silicon chip the size of a baby's fingernail. The 
device later evolved into the "miracle chip" that has found wide application in calculators, watches, 
appliances, automobiles, office equipment, electronic toys and games, and hundreds of other 
products. 

1976 

Solid State Software (TM) technology was invented at TI in 1976. The invention allowed electronic 
devices-calculators, learning aids, home computers-to be "reprogrammed" through the use of 
interchangeable, plug-in modules. 

1978 

TI introduced in 1978 the Speak & Spell (TM) electronic learning aid, a device which incorporated 
TI's invention, the single-chip speech synthesizer. This speech synthesizer-the first integrated 
circuit to duplicate electronically the human vocal tract-led to the introduction of TI's Solid State 
Speech (TM) technology which is also used in the TI Home Computer. 

1981 

In 1981 TI introduced TI LOGO (TM). LOGO was the first microcomputer language to allow 
children to create a personal learning environment. Using TI LOGO, children "teach" the TI-99/4A 
Personal Computer to draw lines and create colorful moving shapes. 



Applications Programs 



HOME MANAGEMENT/PERSONAL FINANCE 
Cartidges 

Home Financial Decisions 
Household Budget Management 
Securities Analysis 
Personal Record Keeping 
Tax/ Investment Record Keeping 
Personal Real Estate 
Personal Report Generator 
Tl WRITER Word Processor** 
Microsoft™Multiplan"'***+ 



Cassettes 

Personal Financial Aids 
Business Aids Library- 
Lease/Purchase Decisions 



Diskettes 

MaUinq List 

Personal Financial Aids 

Checkbook Manager 

Business Aids Library-Finance 
Management 

Business Aids Library-Inventory 
Management 

Business Aids Library-Cash 
Management 

Business Aids Library- 
Lease /Pure base Decisions 

Personal Tax Plan * (Aardvark 
Software Inc.) 



40 



EDUCATION/PERSONAL ENRICHMENT 

Cartridges: Texas Instruments 
Early Learning Fun 
Beginning Grammar 
Number Magic 
Video Graphs 
Video Chess 
Physical Fitness 
Music Maker 

Weight Control and Nutrition 
TI LOGO 

Touch Typing Tutor* ' * 

TiLOGO ir-- 

Cartridges: Scott, Foresman 
Reading and Math Packages 
(Development by Scott, Foresman) 

Early Reading 

Reading On * ' 

Reading Roundup* 

Reading Rally* * 

Reading Flight* * 

Addition and Subtraction I 

Addition and Subtraction II 

Multiplication I 

Division I* 

Cartridges: Scholastic Packages 
(Developed by Scholastic, Inc.) 
Scholastic Spelling-Level 3 
Scholastic Spelling-Level 4 
Scholastic Spelling-Level 5 
Scholastic Spelling-Level 6 

Cartridges: Addison -Wesley Computer 
Math Games (Developed by 
Addison-Wesley Publishing Co.) 
Computer Math 11** 
Computer Math Games VI** 

Cartridges: Milliken Math Sequences- 
Kindergarten through 8th grade 
(Developed by Milliken Publishing Co.) 

Addition* * * 

Subtraction * * * 

Multiplication*** 

Division * * * 

Integers* * * 

Fractions* * * 

Decimals* * * 

Percents* * * 



Diskettes: Texas Instruments 
Teach Yourself BASIC 
Music Skills Trainer 
Computer Music Box 
Market Simulation 
Teach Yourself Extended BASIC 
Music Maker Demonstration 
Basketball Statistics 
Bridge Bidding I 
Speak & Spell Program 
Speak & Math Program 
Bridge Bidding II 
Bridge Bidding III 
Spell Writer 

Beginner's BASIC Tutor* * 

Diskettes: MECC Packages 
(Developed By Minnesota 
Educational Computing Consortium) 

Eementary Economics*** 

Metric and Counting*** 

Elementary Math and Science* * * 

Astronomy* * * 

Word Beginnings* * * 

Exploring* * * 

Math Practice* * * 

Science Facts* * * 

Natural Science* * * 

Social Science* * * 

Teacher's Tool Box* * * 

Cassettes: Texas Instruments 
Teach Yourself BASIC 
Music Skills Trainer 
Computer Music Box 
Market Simulation 
Teach Yourself Extended BASIC 
Bridge Bidding I 
Speak & Math Program 
Bridge Bidding II 
Bridge Bidding III 
Spell Writer 

Beginner's BASIC Tutor* * 



ENTERTAINMENT 



Cartridges: Texas Instruments 
Football 
Video Games I 
Hunt the Wumpus 
Indoor Soccer 
Mind Challengers 
A-Maze-Ing 

Tombstone City: 21st Century 
TI Invaders 
Car Wars 
Munch Man 
Tunnels of Doom * 
Alpiner* * * 
Chisholm Trail* * 
Parsec*** 

Cartridges; Milton Bradley Packages 
(Developed by Milton Bradley Company) 

The Attack + + 

Blasto-f -f 

Blackjack and Poker + + 
Hustle + 
Zerozap+ 
Hangman + + 
Connect Four + + 
Yaht2ee+ + 

Cartridges: Adventure International 
Packages 

(Developed by Scott Adams) 
Adventure (with diskette) 
Adventure (with cassette) 

Cartridges: Gabriel Industries 
Package (Developed by Gabriel 
Industries) 
Othello(3) 



OTHER APPLICATIONS PROGRAMS 

Cartridges 

Diagnostic 
Demonstration 
Speech Editor 
Statistics 
Extended BASIC 
Terminal Emulator II 
Editor/ Assembler 
Mini-Memory 

SMU Electrical Engineering 

Library(l)' 
Electrical Engineering 

Library 

Cassettes 

Programming Aids I 
Math Routine Library 
Electrical Engineering Library 
Graphing Package 
Structural Engineering Library 
AC Circuit Analysis* * 



Diskettes: Texas Instruments 
TI-Trek 

Mystery Melody 
Oldies but Goodies-Games I 
Oldies but Goodies-Games II 
Saturday Night Bingo 
Draw Poker 

Tombstone City: 21st Century* 

TI Invaders* 

Munch Man* 
Diskettes: Adventure International 
Adventure Series (Developed by 
Scott Adams) 

Adventureland 

Mission Impossible 

Voodoo Castle 

The Count 

Strange Odyssey 

Mystery Fun House 

Pyramid of Doom 

Ghost Town 

Savage Island I & II 

Golden Voyage 

Cassettes: Texas Instruments 

Mystery Melody 

Oldies But Goodies-Games I 

Oldies But Goodies-Games II 

Saturday Night Bingo 

Draw Poker 
Cassettes: Adventure International 
Adventure Series (Developed by 
Scott Adams) 

Adventureland 

Mission Inpossible 

Voodoo Castle 

The Count 

Strange Odyssey 

Mystery Fun House 

Pyramid of Doom 

Ghost Town 

Savage Island I & II 

Golden Voyage 

Diskettes 

Programming Aids I 

Programming Aids II 

Math Routine Library 

Programming Aids III 

Graphing Package 

Structural Engineering Library 

AC Circuit Analysis** 

UCSD Pascal(2) Compiler* * 

UCSD p-Systcm(2) Assembler/Linker* 

UCSD p-System(2) Editor/Filer/ 

UHlities** 
TI PILOT** 

Course Designer Authoring Package* * 
Text-To-Speech (English)* * 



Other packages for the TI-99/4A 
computer are available from 
independent software developers. 
See your dealer for information. 



*Available in Summer 1982 
'Available in Fall 1982 
•Available in Winter 1982 



+DeveIoped by Microsoft"", Inc. Multiplan^is a trademark of (i) Course is designed to be used with Circuit Analysis I texbook. 

Microsoft, Inc. (2) UCSD, UCSD Pascal and UCSD p System are all trademarks of the 
■H-Developed by Milton Bradley-The Attack, Blasto, Hustle, Zerozap, Regents the University of California. 

Connect Four, and Zahtzee are trademarks of Milton Bradley. (3) Othello is a trademark of Gabriel Industries. 41 



A Glossary of 

Personal Cotnputins Terms 



Array— a collection of numeric or string variables arranged in a list or matrix for processing by the computer. 
Each element in an array is referenced by a subscript describing its position in the list. 
ASCU-the American Standard Code for Information Interchange, the code structure used internally in most 
personal computers to represent letters, numbers, and special characters. 

BASIC (Beginners All-purpose Symbolic Instruction Code)-A very successful and popular computer language 
developed at Dartmouth College in 1963-64. 

Baud-The signaling speed of information in a computer (typically relating to input and output). It is the number 
of bits of information per second that your computer can process. Baud rates are a factor in selecting a printer 
for your computer. 

Binary-The two-digits (bit) number system based on and 1. Computers recognize the binary bits and 1 by 
using gates. Gates are electronic circuits which are either off or on represent or 1. 
Bit-A Binary digit (0 or 1). 

Branch~a departure from the sequential performance of program statements. An unconditional branch causes 
the computer to jump to a specified program line every time the branching statement is encountered. A 
conditional branch transfers program control based on the result of some arithmetic or logical operation. 
Breakpoint-A point in a program specified by the BREAK command where program execution can be 
suspended. During a breakpoint, you can perform operations in the Immediate Mode (Command Mode) to help 
you locate program errors. Program execution can be resumed with a CONTINUE command, unless editing 
took place while the program was stopped. 

Buffer-An area of computer memory for temporary storage of an input or output record. 
Bug-An error in the hardware or software of a computer. 
Byte-A string of eight binary bits. 

CAI (Computer- Assisted Instruction)-The use of computers for instructional purposes in any subject area, 
including tutorials, drill and practice, education for the handicapped, etc. 

Cassette-Computers can use the same type cassettes used to record music for program storage and other 
information. 

Central Processing Unit (CPU)-The nerve center of a computer; the network of electronic circuits that 
interprets programs and tells a computer how to carry them out. 

Charactcr-A letter, number, punctuation symbol, or special graphics symbol, usually equivalent to one byte. 
Chip-Tiny silicon slices used to make electronic memories and other circuits. A single chip may have as many 
as 30,000 electronic parts. 

Circuit Board- A rigid fiberglass or phenolic card upon which various electronic parts are mounted. Printer or 
etched copper tracks connect the various parts to one another. 

Command- A word or pair of words that tells the computer to do something in the Immediate Mode. 

Examples: NEW, LIST, RUN, CALL CLEAR. 
Command Module-Preprogrammed ROM modules which are easily inserted in the TI computer to extend its 
capabilities. See also: Solid State Cartridge. 

Computer-a network of electronic switches and memories that processes data. 

Concatenation-Linking two or more strings to make a longer string. The ampersand symbol (&) is the 
concatenation operator. 

Console-Main part of the computer containing the keyboard and the CPU. 

Constant-A specific numeric real number (such as 1.2 or-9054) or a string constant (any combination of up to 
112 characters enclosed in quotes, such as "HELLO THERE" or "275 FIRST ST." 
CPU-See Central Processing Unit. 

Cursor-A flashing rectangle showing where a typed character will appear. 
Data-Information, often numerical information. 

Default-A standard characteristic or value which the computer assumes if certain specification are omitted 

within a statement or program. 

Disk-See Floppy Disk. 

Diskette-See Floppy Disk. 

Display-The video screen on the monitor. 

ENTER key-Key used to enter data. 



42 



Exponent-a number indicating the power to which a number or expression is to be raised, usually written at 
the right and above the number. For example: 

2 ® =2x2x2x2x2x2x2x2. In TI BASIC, the exponent is entered following the A! symbol or following the letter 
"E" in scientific notation. 

For example: 2 ^ =2 A 8; 1.3 x 10 25 =l.3E25. 

File-A collection of related data records stored on a device; also used interchangeably with device for 
input/output equipment which cannot use multiple files, such as a line printer. 

Floppy Disk-A flexible plastic disk coated with the same magnetic material used to make recording tape. 
Flow Chart-A diagram of geometric shapes connected by arrows that show the progression of a computer 
program. Flow charts are handy for developing complicated computer programs and illustrating how programs 
work. 

Gate~a very simple electronic circuit that is always either on or off. Clusters of gates can manipulate binary 
numbers (O=off, l=on). They can also count, do arithmetic, make decisions, and store binary numbers. Gates 
are the basic building blocks of computers. 

Graphics-Visual constructions on the screen, such as graphs, patterns, and drawings, both stationary and 
animated. 

Graphics Line-A 32 character line used by the TI BASIC graphics subprograms. 

Hard Copy-The permanent printout of a program or its results produced by a printer connected to computer. 
Hardware-The circuit boards and electronic parts inside a computer. 
Hertz (Hz)-A unit of frequency. One Hertz = one cycle per second. 

Hexadecimal-A base-16 number system using 16 symbols, 0-9 and A-F. It is used as a convenient "shorthand" 
way to express binary code. For example, 1010 in binary = A in hexadecimal; 11111111 = FF. Hexadecimal is 
used for constructing graphics characters in the CALL CHAR subprogram. 

Immediate Mode-A computer mode in which commands are entered directly into the computer without a line 
number. Such commands are executed immediately. 

Input-The means by which data is entered into a computer-often a keyboard. 

Input line-The amount of data which can be entered at one time. In TI BASIC, this is 112 characters. 

Instruction-A statement or command that tells a computer what to do. 

Integer-A whole number, either positive, negative, or zero. 

Interpreter-The program stored inside a computer that converts or translates BASIC statements into the 
computer*s machine language. 

Iteration-The technique of repeating a group of program statements; one repetition of such a group. See 
Loop. 

K-Short for kilo meaning thousand. Used to designate memory capacity-thus a 4K memory has approximately 
4,000 storage elements. 

Keyboard-A typewriter-like panel of switches and keys used to enter programs and data into a computer. 
Line Number-A number identifying a statement in a program. Line numbers determine the order in which a 
computer executes commands of a program. 

Loop-A group of cpnsecutive program lines which are repeatedly performed, usually a specified number of 
times. 

Mantissa-The base number portion of a number expressed in scientific notation. In 3.264E +4, the mantissa is 
3.264. 

Memory-Any of the many devices (ROMs, RAMs, floppy disks, magnetic tapes, etc.) that store computer 
programs and data. 

Microcomputer-A computer made by combining a microprocessor with some memory. Microcomputers are 
small in size, not performance. 

Microprocessor-The central processing unit of a computer assembled on a single silicon chip. 
Monitor-Television-like device to display programs as they run or are being written. 
Operator-A symbol used in calculations (numeric operators) or in relationship comparisons (related 
operations). The numeric operators are +, -, *, /, A . The relational operators are > , < ,<=,>=,<>. 



Output-Information that is being sent from the computer, i.e., graphics on the monitor screen, a report being 

printed. Also, the means by which data leaves a computer-often a television monitor or printer. 

Paper Tape-A narrow ribbon of paper which contains computer data in the form of punched holes. A hole 

indicates the bit 1; no hole indicates the bit 0. Paper tape is sometimes used to enter programs into a 

computer. 

Pcriphcral-An accessory which can be added to a computer to increase its capability and usefulness (a floppy 
disk, paper tape unit, etc.). 

Personal Computer (Home Computer)-An economical microcomputer designed for use by small 
businesses, schools, and computer hobbyists. 

Printer-A computer output mechanism that delivers hard copy data. 
Print line-a 28-position line used by the PRINT and DISPLAY statements. 

Program-The list of instructions or statements that tells a computer what to do to perform a task. 
Program line-A line containing a single statement, the maximum length of which is 112 characters. 
Programmer-A person who writes programs. 

Programming Language-Numeric or alphabetic commands which a computer can assimilate, understand, 
and execute. 

Prompt-A symbol ( > ) which marks the beginning of each command or program line you enter; a symbol or 
phrase that requests input from the user. 

RAM (Random Access Memory)- A temporary memory, i.e., one in which data is stored so long as electrical 
power is applied. Data in RAM can be accessed or changed and is lost if electrical power is cut off. 
ROM (Read Only Memory)- A permanent memory, i.e., one which retains stored data regardless of whether 
electrical power is applied. Certain instructions for the computer are permanently stored in ROM and can be 
accessed but cannot be changed. 

Run Mode- A computer mode in which the computer is executing a program. Run Mode is terminated when 
program execution ends normally or abnormally. You can cause the computer to leave Run Mode by pressing 
CLEAR during program execution. (See Breakpoint) . 

Scientific Notation-A method of expressing very large or very small numbers by using a base number 
(mantissa) times ten raised to some power (exponent). 

Scroll-Movement of text on the screen so that additional information can displayed. 
Software-Computer programs written on paper or stored on magnetic tape or a floppy disk. 
Solid State Cartridges-Preprogrammed ROM which are easily inserted in the TI computer to extend its 
capabilities. See also: Command Module. 

Speech Synthesizer-A peripheral that enables the computer to talk. 

Sprite-In TI LOGO, an invisible character to which you can give shape, color, speed, screen position, and 
direction. 

Statement-A single line of a computer program containing a single instruction like PRINT, LET, RUN, etc. 
String-A series of letters, numbers, and symbols treated as a unit. 

Subprogram-A predefined general-purpose procedure accessible to the user through the CALL statement in 
TI BASIC. Subprograms extend the capability of BASIC and cannot be easily programmed in BASIC. 
Subroutine— A program segment which can be used more than once during the execution of a program, such 
as a complex set of calculations or a print rountine. In TI BASIC, a subroutine is entered by a GOSUB 
statement and ends with a RETURN statement. 

Subscript-A numeric expression which specifies a particular item in an array. In TI BASIC the subscript is 
written in parentheses immediately following the array name. 

Terminal-An input device such as a keyboard or an output device such as a printer or a TV monitor. 
Trace-Listing the order in which the computer performs program statements. Tracing the line .lumbers can 
help you find errors in a program flow. 

Turtle-In TI LOGO, the small triangle with which designs are drawn on the screen. 

User's Group- An informal or formal association of persons who own or operate similar or identical computing 
equipment. User's groups are usually formed to exchange programs and other helpful information. 
Variable-A name given to a value which may vary during program execution. A variable is a memory location 
where values can be replaced by new values during program execution. 

Wired Remote Controllers-Small, handheld controls, sometimes called joysticks, used to move items around 
on the screen. 




h 
Z 

h 

z 

< 
u 



Q 

h 
< 

O 
d 

O 
U 

z 



(0 



^ c 

d) .a 

E .2 

o "G 

«J 3 

S (A 

U CD 



13 

o -2 

^ cj 

S w 

^5 2? 

^ -o ^ 

Q) O 
C (A 

V- O 3 

a a 



(A 



a 

E 
o 
O 



E 
o 
U 



E 
o 



47 



48 



NOTES 




1049710-1 



