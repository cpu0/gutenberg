
Government 
Systems 




/ 



'^ -/3 - c ^ 



Simulator Design 



for 

Advanced ISDN Satellite Design 

and Experiments 

30 March 1992 



P/10 



A:^\/\N^i.K li'^.-, ;>Ar-LLiT^ i.-^\:,IoN A;m" 
cXP"r>>IMr;\T;, I.>ii.' Completion iN^^^or ^ , ^^ '^<'P. 
iQ^n - 1 M,,r. 1^9? (crr ;%ov^:rfvn<:MiL ::,y=.t-rni. 



j/1^' 



Unci js 

un 7 ■' _: ^u 



Task Completion Report 
NASA SCAR Contract NASW-4520, 13 Sep 1990 



Prepared by 

Gerard R. Pepin 

GTE/Government Systems 

15000 Conference Center Drive 

Chantllly, Virginia 22021-3808 



SECTION 1 

INTRODUCTION 
SECTION 1 

INTRODUCTION 



1.1 Background 

The objectives of this element of the NASA Satellite Communications Applications 
Research (SCAR) Program are to develop new advanced on-board satellite capabilities that 
will enable the provision of new services, namely interim and full Integrated Services 
Digital Network (ISDN) services via satellite and to provide a system a.nalysis of futuristic 
satellite communications concepts, namely broadband services via satellite. 

This aspect of the NASA SCAR Program provides a research and development effort to: 

1) develop basic technologies and concepts to use the on-board processing and 
switching capabilities of advanced satellites that will enable the provision of 
interim and full ISDN services and 

2) provide a systems and requirements analysis of future satellite 
communications concepts based on a new generation of broadband 
switching and processing satellites. 

These objectives will be achieved in part via modeling and simulation of ISDN satellites as 
part of the ISDN terrestrial network. Models of the Interim Service ISDN Satellite (ISIS) 
and the Full Service ISDN Satellite (FSIS) described in their Task Completion Report dated 
15 Sep 1991 and 1 Mar 92, respectively, will exercised using discrete event simulation 
techniques. To provide meaningful results these network models represents the subsystems 
of the advanced satellite system at a proper level of abstraction to include real world ISDN 
communications sateUite design parameters. 

An end-to-end network view was developed using the framework of the CCITT and ANSI 
standards to ensure that ISDN procedures and protocols are property implemented to permit 
meaningful simulation, evaluation and analyses of ISDN communications satellite designs. 
Performance measures and scenarios published in a recent update report, dated 28 Feb 
1992, addressed simulation results in terms of throughput, response time, blocking 
probability, and robustness. Simulation measurements must provide insight into the 
engineering viability of the ISDN communication satellite systems by associating them with 
parameters such as propagation delay, signal degradation, message queue lengths, network 
node switching delays and protocol timers. 

1.2 Scope 

This task completion report documents the simulation techniques that will be associated 
with the network model associated with both the ISIS and FSIS architectures. The 
approach is described in Figure 1.1-1, "NASA/SCAR Approaches for Advanced ISDN 
Satellites". The ISIS Network Model design represents satellite systems like the Advanced 
Communications Technology Satellite (ACTS) orbiting switch. 



1-1 




> ^ 

CDS ^ 
3 i2 



c 

Q - 

n » 

— 10 

= in :r — 

2 in 

to S. 

2 U 

O tl 

lO «- 



_ o 
— u 



S a 



> w 

5i 



? z 



c c 






0) 

lO .^ 

a 4> 

1/1 o 

— O 

TT < 

O >. 

«> E 

> a. 



U1 

£ 
a. " 

jz a 
— c 

= s_- 

tf) O o 

• "= i: 

* 3.S 
^€.^ 

2 ^ t 

« •: Ts 

SB !3 

s - * 

O 3 U 

i £2 



3» 

^ > 

— c 
~ c 

— o 

HI u 

£ *" o 

«> '>» ^ 

(/> ra «> 

•» — o» 

u 4> e 

p o 5 

— 9» X 

(V l>4 0* 

U • I- 

— _ 01 



— £ — C 

w ■a ~ — w 
on— !$ S 









-: 






1. 


CT 


c 




< 


C 

iZ 







■o 


u 


!^ 




c 


<u 


c 




3 


*^ 


a» 




o 


rn 






^ 


c 


en 




(^ 







c 


ii 


c 




u 


c 




in 


s 


ifl 




4) 


c 




■o 


VI 


u 




u 


w 


n 




«> 


«> 




rv 




J< 


« 


in 


c 


u 


m 


ai 


(9 


3 


<j 


A 


_ 


£ 




^^ 








lA 








> 


S 


5 


W 



2 «« t: 
Q m 2 

4> U) C 






c/^.X 



si 

"- in 



a> — <z 

Z S 19 









(« 












c 






tn 






c 






v 






n 






o 






*^ 


















> 


</> 


(^ 


n 






•u 

lO 

z 
a 


U1 

u 

< 


O 

a> 

Ok 


at 

« 

1- 

> 
o 
u 


>. 
> 




a> 


« 


c 


u 


o 
c 


c 








•> 
c 
c 


«> 
c 


a 


k- 


c 
o 


ra 


o 


m 


o 




01 

3 


(J 


X 


ft 


a. 


(« 


Z 


«w 


L. 


z 




c 
» 


O 


• 


C 


■a 


(A 


•o 


« 


M. 






(« 








C 


> 
o 


o 


> 
o 




• 






I. 




(« 


o 


Q. 




a. 


V) 


OT 


«rf 



c 
E 

^ < 

« tn 

= o 

£ a. 

u2 

o 



c 



c 



c 
c 

i i 



c 
o 



E = 

- 5* 

o r <o 

- • « 

C ^ *^ 

o " = 

u — — 

= " s 

-^ " s 

u g "> 

(o E « 

I/) — — 



— — "9 






4> 

CO 



o 

■o 

a> 
u 

c 

> 

< 



u 

O 
L_ 

o, 

a. 
< 

OC 

< 

u 
en 

< 

< 

z 









in 

V 
















Of 


— 








u 
















u. 


1 








> 














■o 


3 


— 








L. 














C 


u 










u 










at 




(• 


« 


•^ 




c 




(/I 










c 




^ 




t ^. 




at 






















4> 








Z 






WJ 


1- 


^ 




x: 


l_ 


s 

ervlce 
elllte 


4) 

o 

*4 




o 
(n 

•o 
c 

o 

L. 

1- 

IV 

z 

> 
o 
u 
a. 


in 

4> 


in 
in 
« 

u 
u 


IV 

c 
£ 


4* 

— < 


IV 

c 




c 
o 
u 


u 

< 
c 


3 

u. 


ISI 

Interim S 
ISDN Sat 


< 


u 
«• 

■o 
c 
o 
a, 
<n 
c 
(« 
u 
»- 

c 

IV 


U 

u 

< 
• 

s 

(J 

W) 

(0 

o 


(0 

«l 
e 

E 
« 

« 

> 
o 
1- 


«» 
*« 

a! 

i« 

Z 
Q 


using ISDN Satel 
Terminal 


c 
e 
(« 

o 

« 
in 

3 


in 
in 

t- 
i 

3 


"iv 
u 

< 

« 

<n 

3 

5 


» 
in 

1 

«i 
in 
m 
to 






• 




• 




• 






• 




• 







1-2 



ACTS will be controlled by a Master Ground Station (MGS) shown in Figure 1.2-1, 
"Closed User-Oriented Scenario". A user of the ACTS satellite orbiting switch request 
services from the MGS, a combination of the NASA Ground Station (NGS) and the Master 

Control Station (MCS). The MGS, in turn, commands the satellite to switch the 
appropriate communication channel. 

The ultimate aim of this element of the SCAR Program is to move these MGS functions on- 
board the next generation ISDN communications satellite as shown in Figure 1.2-2, 
"Advanced ISDN Satellite" as part of the FSIS architecture. The technical and operational 
parameters for the advanced ISDN communications satellite design will be obtained from 
the simulation of ISIS and FSIS engineering software models of the major subsystems of 
the ISDN communications satellite architecture. Discrete event simulation experiments will 
be performed with these model using various traffic scenarios, design parameters, and 
operational procedures. The data from these simulations will be analyzed using the NASA 
SCAR performance measures discussed in previous reports. 

1.3 Document Overview 

This task completion report begins by citing the SCAR Simulation Objectives in Section 2, 
and explain the logic for the four simulation phases. A description of each phase is 
provided. Section 3 discusses the SCAR simulation development and methodology used to 
determine the design parameters for the SCAR advanced ISDN communications satellite 
design. Particular attention is given to the comparison between the ISIS and FSIS 
simulations since over 80% of the software modules will be reused between them. The two 
main sections of this task completion report are Section 4.3, Simulation Structures, which 
include a descriptions of both ISIS and FSIS architectures down to the process level and 
Section 4.4, Simulation Processes, which provides a detail description of each process. 

Several appendices are included to provide more detail on the Scenario Traffic File (STF), 
Process Array Strucmre, the Traffic Model Database, the Q.931 Protocol Simulation, and 
the Measurement Save (MSave) file. 



1-3 




X 

a 

< 
a. 



♦ ♦♦♦' 



I- i 

3 K 





O 

•o 

e 
« 

'u 

O 
■ 

u 



I 



4) 

3 






X 

5 



1-4 



Control Station (MCS). The MGS, in turn, commands the satellite to switch the 
appropriate communication channel. 

The ultimate aim of this element of the SCAR Program is to move these MGS functions on- 
board the next generation ISDN communications satellite as shown in Figure 1.2-2, 
"Advanced ISDN Satellite" as part of the FSIS architecture. The technical and operational 
parameters for the advanced ISDN communications satellite design will be obtained from 
the simulation of ISIS and FSIS engineering software models of the major subsystems of 
the ISDN communications satellite architecture. Discrete event simulation experiments will 
be performed with these model using various traffic scenarios, design parameters, and 
operational procedures. The data from these simulations will be analyzed using the NASA 
SCAR performance measures discussed in previous reports. 

1.3 Document Overview 

This task completion report begins by citing the SCAR Simulation Objectives in Section 2, 
and explain the logic for the four simulation phases. A description of each phase is 
provided. Section 3 discusses the SCAR simulation development and methodology used to 
determine the design parameters for the SCAR advanced ISDN communications satellite 
design. Particular attention is given to the comparison between the ISIS and FSIS 
simulations since over 80% of the software modules will be reused between them ..The 
two main sections of this task completion report are Section 4.3, Simulation Structures, 
which include a descriptions of both ISIS and FSIS architectures down to the process level 
and Section 4.4, Simulation Processes, which provides a detail description of each 
process. 

Several appendices are included to provide more detail on the Scenario Traffic File (STF), 
Process Array Structure, the Traffic Model Database, the Q.931 Protocol Simulation, and 
the Measurement Save (MSave) file. 



1-5 






>♦♦♦< 



>♦♦♦< 
>♦♦♦< 







X 






a 






< 






a. 
1 




Ji « 






1> 


1- c 














• ^M 


» E 


^^^ 


10 i= 


22 








0) 


«» « 




O X 


z »- 




_J u 


fl 


H =^ 


z 


Q 


C/3 




■^ 


4) 


U 


a 


es 


> 


■o 


< 


n 


I 


r^ 


• 


^ 


« 


>.! ^ 


jImh^ 






3 


' 




4^ 


OA 


^ m 




ov 


• ^H 


fe£ 


"™" 


c 


b 


> 6 




-i UJ 






1-6 



SECTION 2 
SCAR SIMULATION 



2.1 SCAR Simulation Objective 

The objective of this SCAR simulation project is to design and develop software models 
that can be used to simulate those aspects of an ISDN communications satellite with 
sufficient fidelity to assist in determining design parameters. This simulation effort will 
assist in the development new advanced on-board satellite capabilities that will enable the 
provision of new services of an interim and full ISDN communication satellite. Figure 2.1- 
1., "ISDN Communications Satellite Simulation Top View" indicate the inputs and outputs 
expected of the SCAR simulation as well as the characteristics of the simulation, itself 

ISDN protocols, procedures, standards and user traffic form the input basis for the 
simulation. Together with the SS7 technology, the OSI methodology, and the satellite 
environment this ISDN aspect of communication satellite design is challengingly 
constrained. The SCAR ISDN communication satellite simulation uses discrete event 
based simulation of communication protocol flows through an engineering model to 
generated results traceable to the technical design parameters The SCAR simulation 
outputs will be capable of demonstrating the viability of an ISDN satellite design and 
provide the rationale for recommending specific engineering parameters and changes to 
published ISDN standards. 

2.2 Simulation Programs 

This end-to-end simulation is divided into four distinct simulation phases: database 
generation, scenario generation, simulation run, and product generation as shown in Figure 
2.2-1., "SCAR Simulation Phases". The ISDN communications satellite end-to-end 
simulation is shown in Figure 2.2-2, "End to End Model Architecture". Each program is 
physically and functionally separated by input/output data files. This separation ensures 
that each simulator program is independent. The only link between these programs is the 
data file they share. Each program is briefly described in the following sections in order to 
provide an overview of the simulation process. 

2.2.1 Database Generation Program 

The Database Generation (DbGen) program assembles the major ISDN user characteristics 
into a machine readable database. For this NASA SCAR effort the traffic model consists 
of a number of databases: the City Reference DB, ISDN User vs Industry DB, Application 
vs Industry DB, Application vs Time DB, and Application vs Bearer Services DB. Figure 
2.2.1-1, "CONUS City Locations for NASA SCAR Traffic Model Database", shows the 
cities that are part of the traffic model. Those cities outlined with an ellipse identify the 
ACTS-east cities. Those cities outiine with a rectangle identify the "ACTS-west" cities and 
the blackened squares depict the fixed antenna cities. The east/west city clusters are 
separated by a dashed line. The figure shows that the NASA SCAR ti-affic model is well 
aligned with the cities of interest for ACTS. The traffic model database represents the 
ISDN traffic for these cities and is the principal input to the scenario generation process. 
The traffic model databases data are presented in Appendix C, "SCAR Traffic Model 
Database Data" 



2-1 





o 



C3 

i- 
+-> 

to 

c 
o 

£ 

Q 



c 

Q 
a; 



en 



■o 

■o 

c 

cn 



o ro 

1- o 

<u -^ 

Q. ■*-' 

o ^ 
o 

a> — 

*-> c 

^ I 

K) o 

en (_) 



(T) CO 



E Q 

ro CO 



m 




Q. 


O 


c 


CO 


l_ 


u> 


O) 


c 


d) 


ro 


r: 


^ 




( ) 


en 




r 


u 


LU 


c 




O) 


U 


E 


<»- 


E 


o 


o 


Cl> 


o 


Q. 


(U 



— — LO DC 




♦ 



cn 



a> 
■o 
o — 

C _1 



c 



o 
u 
o 



a> o 

UJ Ol 



■o 
o 
in 

GQ 

c 
> 

LU 
I 

-1-' 

\- 

u 

cn 



O X 



cn 



(n 
Q 



■4-> 
CO 

to 



c 
.2 <-> 



^ cn 



o 
in 



in 
in 



.t^ ^ o 

T- ^ -^ «-> 

•p ^ Q. C 

<u CO :3 TO 

? i^ 5 ^ 
< 



0) 



§ Q 



c ^ cu cn 



CO 



E 



Q 



O) 

o 



il cn >v a> 

, — rn . — 4-> 






^ -^ c 

^ 01 — 

ro E — i- 

co UJ I— O 



cn 



in 





cn 











CO 










13 




■M 




in 


cn 





U> 


<»— 




in 


Q. 






in 




+-> 


(O 


E 


a> 




i_ 


■0 


CQ 






CO 






^— 


in 


U 




■i-» 





^ 


t_ 


t_ 














(i> 


a> 


• — 


f- 


<)> 


a 



■0 



CO 

■0 


h- 




u 





cn 


u 






1 .' 


ID 
■•-> 





£ 


4-> 


c > 


f- 


L_ 




*-> 


l/J 




<i> 


-i-» 


> 


il £1 


UJ 




i\j 








m 


a> 







l/) 




>« 





i_ 


— 


t_ 


> 


L. 


1 


( 


4-' 


in 




(_ 


(U 




(O 


c_ 


a> 


• — l_ 





c 


CO 


Q. 


Q. 


10 


3 


1^ 
CO 


Q. 


Z 


cn 



_j 


Q. 


in 


CO 

cn 


U 


LU 


tx 






Q. 

o 



o 
TO 

E 

(7) 

<L> 



4-> 
TO 
(/) 

cn 

c: 
o 



TO 



E 

E 
o 
(_) 

CO 



I 

CN 

CD 

£_ 

CJ) 



< *-■ OvI 

^ i/> a> 

< c - 

in ^ c 



U-) 



2-2 




73 



I 






o 



c 




o 








■*-» 




ro 




t. 


, 


O) 




c 


H 




E 




ro 


4-* 


[_ 


o 


a> 


3 


o 


T3 


t_ 


O 


n 


(- 




D. 





I 









c 




o 








■>-> 




ro 




C- 


CM 


c 


4« 


(1> 


E 




(\J 


■4-> 


l_ 


o 


en 


3 


o 


■o 


(_ 


o 


n 


l_ 




CL 





I 





c 




o 








A~l 




ro 






C. 


c 


t» 


a> 


E 




<n 


■!-» 


(_ 


O 


CD 


Z3 


O 


T3 


1_ 


O 


n 


I- 




Q. 





f 



CQ 



r: 

< I c-i 

Q -- t^ 

LO t CO 



O LO 
IT) Q- i= 

in lo H 





c 






o 




a> 






Ul 


■i-> 


H 


ro 


«j 


ra 


r> 


i_ 


(- 


ra 


<u 


C7> 


■i-> 


c 


O 


(0 


a> 


1- 


Q 


o 


a. 



it 



CO 



o 

(^ 

13 
E 

CO 

a: 
< 
u 

CO 



I 

CN 
CL> 



2-3 




e 
« 

u 

m 



^ in cr> 
< 



(_ 

u 

O) 

!E 
a 

< 

■o 
o 

H 
Q 

c 






CN 

I 

CN 

CN 

a> 



2-4 




o 






? 



o 



o 



I 



•S 



S s 

• a 

e 

5 



00 

e 



n 



o 

o 



(O 



a: 
< 

u 

< 
en 

< 



c: 
o 

u 
o 



U 
(O 

Z 
O 

u 



I 



vn 



O 
CM 



•n 



ORiGIISJAL PAGE IS 



< 

< 
u 
to 

r> 

o 

m 



a. 

r _ 

o o» 

_i — 

>» - 

o £ 

E 2J 

n a. 

I- 41 

*- in 



2-5 



2.2.2 Scenario Generation Program 

The Scenario Generation (ScenGen) program selects the traffic model database entries that 
describes a scenario of ISDN users together with the statistical information of the ISDN 
services requested. The ScenGen program uses entries from the user traffic model 
database and engineering parameter databases to generate a list of time ordered, initiating 
discrete events. The discrete event list is call a Scenario Traffic File (STF). The STF is 
used to initialize the model for a specific advanced ISDN communications satellite design 
and to exercise that satellite design using the requests for ISDN services dictated by the 
ISDN user traffic. 

2.2.3 Simulation Run Program 

The Simulation Run (SimRun) program consists of a model of the real world 
communications network of the major ISDN communications satellite components. Each 
of these ISDN communication components is represented by a block diagram within the 
overall architecture. As shown in Figure 2.2.3-1, "Simulation Run Program", the SimRun 
program essentially reads each discrete event from the (STF), takes the appropriate action, 
and logs that action and the corresponding results in a measurement save (MSave) file. 
The appropriate action taken by the simulation includes allocating and releasing 
communication resources, denying specific services, and calling other processes in-tum. 

2.2.4 Product Generation Program 

The Product Generation (ProdGen) program reads the data in the MSave file and analyzes 
these data in accordance with specific algorithms. It is envisioned that there will be as 
many product generation programs as there are ISDN communications satellite issues to be 
studied: throughput, response time, trace, delay, call blocking, busy-minute, busy-hour, 
etc. Each ProdGen program is tailored to a particular area of ISDN communications 
satellite design. Performance measures will be used as criteria to evaluate the design 
parameters, operational procedures and degree of ISDN communications standard 
compliance of the particular ISDN communications satellite design. 



2-6 



^ — 

C X 



a 

uT 






C „ 

o c 



-••si 



= 5 2 i - - > 

u w e « " • — 

c u £ 2 • > o 

u. 3 £ M _ u u 

"-_2 • S •• 
■" •« S r? 



E 

(_ 

O 



c 

QC 

C 

o 
E 

CO 






a a. o < a d 



«* <« 

= (n 

u 

X C 



I 
r> 

cvi 

a> 

(_ 



2-7 



SECTION 3 
SIMULATION DEVELOPMENT 



3.1 Technical Concept 

This NASA SCAR effort uses network modeling and simulation as the principal vehicle for 
determining the parameters of an ISDN communications satellite design. This network 
modeling and simulation must clearly delineate the network architecture (as defined by the 
network methodology, the number and kinds of communications elements and how those 
elements are configured), the network operations (including link and network layer 
protocols and how network functions are distributed among communications elements), 
and the system constraints (imposed both by the network and by the operational 
requirements). 

3.2 Network Model and Simulator Design 

Discrete event simulator designs for both ISIS and FSIS were initially defined based on the 
Phase I network model of the these communications architectures. The traffic model 
database and the scenarios, also developed in Phase I, were used to define ISIS and FSIS 
the designs using these simulator inputs. The simulator design outputs were based on the 
performance measures established in Phase I and will be used to evaluate overall ISDN 
communications satellite system design. 

3.3 Simulator Development 

ISDN is based on the Open System Interconnection (OSI) Reference Model. Though the 
simulator design will focus on the second (data link) and third (network) layers to evaluate 
the performance of routing, acknowledgement, congestion control, and other protocol 
driven functions, this design will also address the time-out issues relate to the first 
(physical) layer. Although physical characteristics of the system will not be directiy 
simulated, the effects of the physical conditions will be parametrically simulated. For 
example, the cases involving heavy rain, severe signal degradation, and higher error rates 
are examined in terms of protocol performance when multiple transmission are required. 
Instead of calculating a link budget where all signal losses and gains are summed and 
converting the signal-to-noise ratio and to a bit-error rate, the simulator will take the power 
loss associated for that error rate as input. Such simulation techniques reduce the 
complexity of the simulator design, while providing the same level of information about 
layer protocols and their timers. 

3.4 Generic Network Model for Simulation 

Figure 3.4-1, "Generic Network Model Block Diagram", shows the major subsystems of a 
communications architecture for a generic ISDN communications satellite simulating two 
satellite terminals each supporting three users. For this simulation, these subsystem 
models associated with the satellite terminals consist of an uplink transmitter and 
transmitting antenna, a downlink receiver and receive antenna, three users generating 
traffic, and a multiplexer/demultiplexer that combines and separates this traffic. The satellite 
is modeled by corresponding receivers, transmitters, antennas, an on-board switch, and an 
on-board processor that decodes received commands, contn)ls the switch, and generates 
response traffic. 



3-1 



"1 1 ( — r 1 



• nuj*a/'"^u 



ma 






Offi 



et 






-5 



^« 



HQI 



I 
^ 






z 



rosr 

TTTTT. 



^1 




•I. 






1 

I 

I 

ti imt 



Tfirr 
IXXU. 



••4 



'l|« 









ms. 









m i l ' 
JSS 



inuita/inu 



unit HHH UTTB 



G 



I 



[ 



i 
3 



E 



u 
o 

CD 



•o 
o 

o 

z 



a> 

c 
a> 
(A 



I 
a> 



3-2 



3.5 Generic Network Model Subsystems 

Each of the communications subsystems in the network model design is represented by a 
software module that performs the functions of that communication component. Figure 
3.5-1, "SCAR Network Model Systems", shows the generic network model presented in 
Figure 3.4-1 as interconnected software modules. Each module has parameters (p) inputs 
that determines that module's characteristics. For an antenna: p includes such things as the 
gain, beamwidth, scan rate, dwell time, etc. For a receiver: p includes frequency, burst 
rates, receiver threshold, receiver delay, etc. For a processor: protocol repertoire, 
processing time, clock frequency, number of ISDN resources, etc. In general each model 
module has a p-set that determines die design characteristics. These p's are input via an 
engineering data matrix that is loaded before the simulation run begins. These engineering 
data determine the design of die ISDN communication satellite subsystems being 
evaluated. 

The initial discrete events (E) are part of the STF and are executed as a function of time 
depending on the scenario that generated them. Each of event (E) serves as the initial event 
for a sequence of internal protocols generated by a particular module in the simulation. 
Each module processes each discrete event (E) and takes actions accordingly. Many of 
these actions include generating response events (e) for another modules. The response 
events (e) are integrated in time order with the initial events (E) via the (stf) to be executed 
at their respective times. For ISDN protocols, a single initial discrete event (E) will 
generate many sequential response events (e). The simulation process continues the 
execution of the time ordered event list of Es and es until the simulation ends. The 
technical data generated by tiie simulation is obtained from a Measurement Save (MSave) 
file. Every time an discrete event is presented to a module its identity and its time of arrival 
is time-tagged and saved on the MSave file (M). Also, all resource allocations, resource 
releases, resource denials, event generations, and the status of every module are saved on 
the MSave file (M) together with their time of occurrence, The MSave file has a complete 
time ordered history of every event, action, and status of every module for the entire 
simulation. That MSave file can be analyzed on post run basis to generate any number of 
technical and operational report products. 

3.6 Generic Network Model Simulation Software 

The simulation software inside each module determines its communication characteristics 
and responses. Figure 3.6-1, "SCAR Network Model Simulation Software", depicts the 
software flow chart for a single module - Proc. In that example, when the processor 
function (Proc) receives the event (Sig#27). It first reports the event and time to MSave 
(M). The software then determines if the requested resources are available. At the 
beginning of the simulation parameter (PI) allocated a number of these resources to Proc. 
If none of those resources are now available, Proc sends a "No Resources Available" 
message to the MSave. Proc then clears all Sig#27 items and returns control to the 
simulation timing routine. On the other hand if resources were available, Proc would 
allocate and adjust those resources; report the allocation to MSave; and activate the next 
process in the sequence. The activation time for the next process will be calculated using 
the processing delay value of P2 milliseconds. Both PI and P2 values were assigned via 
the engineering data matrix before the start of the simulation. 

The same software modules will be re-used with different parametric values for similar 
functions such as antenna, receiver, processor, etc. for both the ISIS and FSIS 
architectures. This will result in the generation of less simulation code for a given software 
development. 

3-3 




m 

E 
(i> 

>^ 

ID 

oj 
■o 
o 



o 

■•-J 
0) 

cr 
< 

CO 

I 
m 

ro 

a> 



< 

Q 
CO 
< 

U 

cn 

ID 

o 



01 

E 

(D 
♦-» 
in 

CO 

<l> " 

■o < 

O ( 

r ■ 

o • 



E 

aj 
-«— ' 
cl 
<u 



in CO CO 



3-4 




c a 



0^ 









?. - 




a. o 
4* •-• 



f 






«> 

u 

3 — L 



X 



Z 3 

<• o 

o « 

o «> 

— oc 

< a. 



in 

u 

:r 
o 
i/t 
<u 

a. 



i 




A 



> 
a 



^» 
o 
(n 

c 
o 





-M~i 



3 

E 
(75 

T3 
O 



V 

Z 

cr 
< 
u 
en 



I 

ri 



3 

a» 



3-5 



3.7 Multi-Terminal SCAR Simulations 

The Figure 3.7-1, "FSIS Multi-Terminal SCAR Model", depicts a satellite-based switch 
using on-board control to simulate communications services between terminals on the left. 
This same model is also capable of simulating central offices on the right. Such 
simulations can be used as a vehicle for analyzing the protocol messages flow among all the 
users connected to the satellite. 



3-6 




3-7 



SECTION 4 
Simulation Components and Processes 

4.1 Introduction 

The simulation context of the previous sections is now applied to the ISIS and FSIS 
architectures. The FSIS simulation focuses on the on-board satellite ISDN circuit switched 
protocols: call control (Q.931). LAPD (Q.921), PRI (LI431), BRI (1.430), and SS7 
(ISUP). Whereas the ISIS simulation addresses ground based call management usmg 
these same protocols supplemented by special order-wire (OW) commands between the 
satellite and Master Control Station (MGS). The D-channel protocol messages and their 
associated timing, propagation, processing, and execution are the main concems of both 
these models. The B-channels are modeled as resources to be allocated and released as 
their availability dictate. 

As illustrated in Figure 4.1-1, "FSIS SCAR Model Systems", the FSIS system provides 
the ISDN user access via VSATs connected with ISDN Satellite Terminal Adapters 
(ISTAs). The FSIS simulation use D channel signalling and those parts of the ISUP 
necessary for call control. This approach enables an advanced satellite to provide nation- 
wide ISDN using an on-board call control and B-channel switching architecture. The 
ultimate aim of this aspect of this SCAR Program is to move all ISDN functions on-board 
the satellite for the next generation ISDN communications sateUite design. 

In both cases, ISIS and FSIS, the simulation analyses will be obtained from engineering 
software models of their major subsystems of the ISDN communications satellite 
architecture and their appropriate ground terminations. Discrete event simulation 
experiments will be performed with these models using various traffic scenarios, design 
parameters, and operational procedures and performance measures. 

4.2 Definition and Purpose 

Both ISIS and FSIS simulations consist of a number of VSATs connected to an ISDN 
satellite via a single hop. The VSATs will exchange ISDN traffic on a demand access, 
circuit switched basis. The purpose is to investigate the throughput, response time, 
blocking probability, and robustness of these two ISDN satellite architectures in a benign 
environment to provide a performance measures baseline and to investigate protocol timing 
issues at the lower layer levels. Particular attention will focus on the timing and time-outs 
associated with the ISDN physical layer protocol. These simulations will also deal with 
issues such as: packet switching on the B and D channels, full SS7 protocols, weather, 
and direct connectivity to an ISDN public switched network (IPSN). 

4.3 Simulation Structures 

Both the ISIS and FSIS simulation will be described in the same context. A top view of 
the architecture is presented at the communication component l evel. This provides visibility 
into the architecture and links for these major communication components of the 
engineering models that are used to represent them. The next view treats these models as 
simulation processes and connects them in an end-to-end diagram representing the protocol 
flow. To ease the routing algorithm for the simulation a sequential number was ascribed to 
each process, Process Index (PI). This PI integer uniquely defines the specific occurrence 
of the process, its neighbors at that time, and the direction of protocol flow. The last view 



4-1 




in 

in 
en 
a> 

H 

Q. 

3 



in 



■31 
in 



C71 

C/1 — 



1/1 <D 
!/1 — 

a, Q. 



o 

(/> 
(O 
a> 

t_ 
rs 

< 
< 



4) 

(/I I. 

i I 

< ^ 

T. (- 

< i_) 



in 

in (TJ 

in <n 

a* in 

< O) 

(/I 

tz <^ 

— a> 

— <D 



<D "^ 
II 

5 if; 
u > 

i E 
< 

j: -I <-> n 

< UJ _i Q 

— CE cr t- 








i: r r ^ 2^ 5 

5 Q Q q: y 5 

? < < 

S E Z 



/^HRJ^ 


! o> 






j c 


0) 


^" ■■ 


— 


4-1 


W! 


: .w 


— _ 


r 


i ffl 


^— 




:i c 


a> 


E; 


i CJi 


■A-l 


<_ . 




W 


a> s 


(- 


(/> 


h-s 


O 




s 


iaaai 




^> 





cn 

E 

CD 
CO 

a> 
■a 
o 



< 

u 
en 

(/) 
c7) 



I 

a; 

(- 



>- 

_ CN 

< 13 Ci 

O O _ 

< ^ _ 

'-' 5 r> 

in < "^ 

in '-' 5^ 

o in ^ 

CO Li. -> 



4-2 



tabulates these piDcesses into a pictorial matrix that associates each of them with their 
unique process index. The sequential aspects of this representation form a sort of pmcsss 
index "racetrack" p attern that can be used to visualize the protocol hand-off from one PI 
element to next. 

For the FSIS architecture, seven major communication components are connected by 
six interfaces. Figure 4.3-1., "FSIS Simulation Communication Components", shows the 
ISDN Telephone, ISDN Satellite Terminal Adapter, VSAT Satellite Terminal and the FSIS 
Satellite connected by the S-Interfaces, U-Interfaces, and Propagation. Figure 4.3-2., 
"FSIS End-to-End Simulation Processes", are connected into a network using the Process 
Index (PI) as a sequence identification mechanism for tracking protocol flow. The 
processes are aligned with die major communication components depicted at the top of the 
page. Figure 4.3-3., "FSIS Simulation Communication Components and Model 
Processes Racetrack", lists all the simulation processes along with their PI numbers. The 
reference numbers are keyed to the text in this section that provide more detail about both 
the communication components and the processes. The FSIS simulation architecture 
statistics include: 

4 types of major Communication Components 
16 types of simulation modules (processes) 

77 process indexes 

4.8 factor of software reuse (77 / 16) 

For the ISIS architecture, nine major communication components are connected by 
eight interfaces. Figure 4.3-4., "ISIS Simulation Communication Components", shows 
the ISDN Telephone, ISDN SateUite Terminal Adapter, VSAT Satellite Terminal, the FSIS 
Satellite, and the Master Ground Station connected by tiie S-Interfaces, U-Interfaces, and 
Propagation. Figure 4.3-5., "ISIS End-to-End Simulation Processes", are connected into 
a network using the Process Index (PI) as a sequence identification mechanism for tracking 
protocol flow. Figure 4.3-6., "ISIS Simulation Communication Components and Model 
Processes Racetrack", lists all the simulation processes along witii their PI numbers. The 
reference numbers are keyed to the text in tiiis section tiiat provide more detail about both 
the communication components and the processes. The ISIS simulation architecture 
statistics include: 

5 types of major Communication Components 
1 8 types of simulation modules (processes) 
109 process indexes 

6.0 factor of software reuse (109/18) 

The commonality factor between the ISIS and FSIS architectures is 89% (16 common 
modules of 18 modules). The following sections describes each of these ISIS and FSIS 
communication components in terms of their implementing modeling processes. 

4.3.1 ISIS and FSIS Satellite Communication Component 

The advanced ISDN communications satellite design under the NASA SCAR Program 
uses as its design starting point an ISDN switch in orbit. A user of the ISDN satellite 
requests services using ISDN protocols. These ISDN protocols are routed to the satellite 
via the VSATs and ISTAs . Depending on the communication satellite design, ISIS or 
FSIS, these ISDN protocols processed differently. 



4-3 







a> 






04 




c 
o 






h- 




iZ 


o 


■ 


~ Z 




Q. 


to 


IM 


^ Q 


z 


a> 


T 


U* 


2 (^ 


n 






O 


o — 


in 


0) 










1— 









4-> 


nj 


l_ 










c 


(1> 


— 


o 




■ — 




4-» 


to 


to 


Ll. 




E 


Q. 


^ 


•^ 


(O 


in 


(1> 

(- 


■o 
< 











<1> 

4-> 


ro 


° ^ 
^ ^ 










c 


K o 






1- 
< 


0) 

4.^ 


E 


z o tr 

< CM < 
X X <^ 


to 


U- 


(/) 


(0 


<i> 


cr DC > 




3 


> 


(A 


1— 










— 4-> 

tn CO 
u. tn 



o 

to 
(- 
z 
< 

X 



_ O Q- 

to — CM to 3 !lr 
X in o^ <y* I/) in 



cr a: u. o a — 11- 



04 

c 
c 

■C CL 

V => 

CO — 



o 

CM 

9 o z cj. 

to CM 5ii OJ < o 

0» CTi en X X (T 

O O U- t- (- CL 



1 





0) 






^ to 






■4-) 


ro 




O 1- 




< 


oj 


c 
E 


to 


< to < 

t^ X X 





■t-t 


i_ 




> 1- h- 


a. 


(J) 


ro 


0) 








> 


en 


t- 









1 




ISDN 

Satellite 
Terminal 
Adapter 


1430 
1431 
UIF 



cn 

a 
a> 
c 
o 

Q. 

E 
o 
u 

o 

CJ 



E 

E 
o 
u 

c 
o 

4-» 

E 

CO 

cn 

CO 






in 

4-1 
c 

a 
o 

CL 

to E - 
o 5 r-- 

o U] j_ 

•"■ cn <2 
in u- r 





<i> 










c 


a> 











t- 








£ 


z r~ 


' — 





z 


o. 


in ^ 


IM 
CT. 


to LL. 


r> 


*— 


— a 





_ in 


cn 


a> 










f- 









4-4 






a> 






c 






o 






^ 












Z a> 






Q — 






en .*» 














TT 










nj 












a> 








c 




1/1 


« — 




— c c» 




z » E Q 




!^.S^? 












re 




















c 




3 


Q> — 








< 5 ^ 


in ra Of 


> in h- 





o 




3 

5" 



ID 


1 = 




^ 


O* ^ (TV 


-T 






1 ° 







w 



M 



2 

2 I- 



T 




O 


V 


r 


V 


~" 





o 




— 




^ 


V 


~ 





i3 K> 




O 


















a -■ 


o 

X V 


o 

> 


5^ 






a. 


is 

o 


z 
a 



o 
35 N 



o 

CM in 

X f4 









a. 

'= *:: 

m in 



o 

to T 



^^ <n - 



"? 



o 

in «3 
in ~ 






^1 



a 
in m 



o 
CM ri 

X lO 






a> — 

— c 






< i: 










(O 


ID 




to 


(T) 




en 
(1) 


U. 


■o 


u 




r 


o 


IN 
1 


LU 






O 

1 


C 

o 


a> 


■o 


-4-> 


(_ 


1_ 


«1 


•D 


LU 




O) 




_J 


II 




E 



en 



o 
X •o 


o 
> 


z 

50 



M 



M 



E & 




r-1 l~- 






o 










f^ 


— 




7- 









V 


r^ 


— 





n 





-u. ^ 








gin 


n 


3 


3 


3 


h 








to CM 


M fO 


M T 




0> 


TT 







— 







fin 


10^ 









1- 



5- 



o 

z 

ID 



i7 



4-5 



8T044SIMRUN 




FSISRACE.WK3 




March 17, 1992 




Comm Componenl: ProcesJ 


Model 




Model 




I 


'ara # 4.3.5 Index (PI) 


Processes: FSIS Rpt 


Processes: 








ISDN Tel 


1 1 


ISDNO (Tel) Para# 


4.4.5 


ISDNO (Tel) 


77 








2 1 


Q.931U(User) 


4.4.11 


0.931 U (User) '^ 


76 








3 V 


Q.921U(User) 


4.4.10 


0.921 U (User) | 


75 








4 


I430U 


4.4.3 


I430U 1 


74 






«.3.7 


5 


SIF 


4.4.14 


SIF 


73 






».3.4 
















ISTA 


6 


I430N 


4.4.3 


I430N 


72 








7 


1431 U 


4.4.4 


1431 U 


71 






4.3.8 


8 


UIF 


4.4.17 


UIF 


70 






4.3.3 
















VSAT 


9 1 


1431 N 


4.4.4 


1431 N 


69 








10 1 


VSATO (OW) 


4.4.18 


VSATO (OW) '^ 


68 








11 V 


Tx (30) 


4.4.12 


Rx (20) 1 


67 








12 


TxAnt (30) 


4.4.13 


RxAnt (20) 1 


66 






4.3.6 
4.3.1 


13 


Propa (30) 


4.4.9 


Propa (20) 


65 






FSIS ISDN 


14 


RxAnt (30) 


4.4.16 


TxAnt (20) 


64 






Comm SateUite 


15 


Rx (30) 


4.4.15 


Tx (20) 


63 






Pott Bypatt 


16 


FSISO (OW) 


4.4.2 


FSISO (OW) 


62 








17 


Q.921N (Network) 


4.4.10 


0.921 N (Network) 


61 








18 


Q.93 IN (Network) 


4.4.11 


0.931 N (Network) 


60 








19 1 


ISUP 


4.4.6 


ISUP 


59 






CCIRttMgllRtsAUoc 


20 1 


FSISP (Proc) BCh 


4.4.1 


FSISP (Proc) 1 


58 








21 V 


ISUP 


4.4.6 


ISUP 1 


57 








22 


Q.931N (Network) 


4.4.11 


0.931 N (Network) 


56 








23 


Q.92 IN (Network) 


4.4.10 


0.921 N (Network) 


55 






Pott Bypatt 


24 


FSISO (OW) 


4.4.2 


FSISO (OW) 


54 








25 


Tx (20) 


4.4.12 


Rx (30) 


53 








26 


TxAnt (20) 


4.4.13 


RxAnt (30) 


52 






4,3.6 
4.3.3 


27 


Propa (20) 


4.4.9 


Propa (30) 


51 






VSAT 


28 


RxAnt (20) 


4.4.16 


TxAnt (30) 


50 








29 1 


Rx (20) 


4.4.15 


Tx (30) 


49 








30 1 


VSATOW 


4.4.18 


VSATOW 1 


48 








31 V 


1431 N 


4.4.4 


1431 N 1 


47 






4.3.8 


32 


UIF 


4.4.17 


UIF 


46 






4.3.4 
















ISTA 


33 


1431 U 


4.4.4 


1431 U 


45 








34 


I430N 


4.4.3 


I430N 


44 






4.3.7 


35 


SIF 


4.4.14 


SIF 


43 






4.3.3 
















ISDN Tel 


36 


I430U 


4.4.3 


I430U 


42 








37 1 


Q.921U(User) 


4.4.10 


0.921 U (User) ^ 


41 








38 1 


0.931 U (User) 


4.4.11 


0.931 U (User) i 


40 








39 V 


ISDND (Tel) 


4.4.5 


ISDND (Tel) 1 








Figure 4.3-3. FSIS Simulation Communication Components and Model Processes Racetrack 







4-6 






a> 








c 
o 




1- 




^ 


o 


T.^'Z. 




Q. 


ro 


(N M Q 


^ 


O) 


T 


CT> OV ^ 


r^ 


'— 




O O — 


<n 


<u 








H 







0, — 




4-» ra «_ 






o — 


r> K> u. 
^ T — 


Q +-> <_ <2 


— — 13 











OJ 










in 










J ' 


o 








— 






o 






n 








c 
c 






CM 


(/) 


0) 

*-> 


1— 
z 
< 


o 


o 


tn 


o 


o 

CM 


z a 
< o 


tn 


ro 


X 


X 


fO 


(O 


(_) 


(O 


X 


X cr 


(O 


cr 


cr 






1 




1— 


1— Q- 














CO 











4-> 












^— 






H- O Z 


CL 


1- 
< 


o 


E 


fo 
TT 


< p; < 

tn X X 


o 


tn 


ro 


a> 




> 1- 1- 


Cl. 


> 


(T) 


1- 











(i> 


o 








CO 




o 








ro 








c 

(0 
t7 




CM 




tn 


a> 


z 
< 


o 


o 
tn 


CL 

tn 


o 
in 


1- 
CM < 


o 


tn 


ro 


X 


X 


ro 


to 


u 


(O 


X X 


a. 


(A 


a. 


tr 






1 




V- 1— 


Ul 














m 











o 




o 




CM 

1- 






tJ => 4-> 


RXAN 
RX20 

neso 

0921 
093 


n Q- rL - 


— O Z Q. 


W O CO 


I5U 
MSS 
ISU 
093 


CM M < O 


(u L. 4-> 


(Ti X X cr 


t o tn 


O H- 1- Q- 






■t-> 




2 •- 




^^ 




t- O Z Cl 


h- 


d> 


E 


fO ■* M < O 


< 




(_ 


«: t^ X X cc 


tn 


ra 


(U 


— > 1- H Cl 


> 


tn 


h- 





1 


ISDN 

Satellite 
Terminal 
Adapter 


1430 
1431 
UIF 





a> 










c 


a> 








o 


1- 








^ 


2 ~ 


"~ 


O 




u. 


Q ^ 


CM 


K> Li_ 


z 


V 


^J^ 


CT> 


^ — 


n 


^— 


O 


— tn 


tn 


a> 










1— 




^^ 





CO 

c: 

CD 

C 

o 

E 
o 
u 

c 
o 

-M 

u 



E 

E 
o 
u 

c: 
o 

4-> 

CO 

ZJ 

E 

CO 

en 
I 

CD 

£_ 

:d 



< -o 

(-1 r 
o ^ 

o cr) 
1^^ 



4-7 




^ 


-""^ 




o 


is 


3 

5 i" 



< ? 









a 



Z 



o 
in o 

- V 



S-I^i 



5(1^ 



A 



y 




o 

m 


o 

in 


— 




3 




_ 




V 


V 


~ 






E 

< c _ 

1/1 w ^ 



5= ■» 



o 









z 



X 



U4 



o 

trt o 

17 r^- 



^ 






>i 



o 
X >o 



o 
X <o 



o 

> 



2 




o 


o 


T 


vO 


~ 




Z) 












9 


«D 


^_ 





o 



O 

CM ^o 

X J^ 



o 

X K> 



O 
lO M 

r 



<M 3 



■^2 



Jl 



■^ 



o 



9 y^ 



a 

O CM 



o 



(A m 

lO CM 






2LJ- 



o 
CM r~ 

X P^ 



O 
(/) CO 

i: 



l?2 



o 



o 

K> in 

X — 



m n 



■^ 






:? 






W— 
?- 



J; 



o 

tn (M 



W""Ao 



X c^ 



o 



o 


o 




in lO 


X eo 


o A 




Z 



is 

o 



a. 
in CM 

i: 



o 



o 
CM in 












O 

CM <J> 
X Oi 

a. 



o 

I- o 

< o 



M O 
T — 



CO 




z: 



■o 



a> 
(/) 

CO 

u 
o 





1 


3 

5" 


J 




2^, 

T — 




z 


M O 

T — 




P-; 








3 

K> CM 
<J> 

a 


3 

CM r) 

c^ 

a 


3 
5 




r 


— « 

1-1 o 

o> — 

o 


3 

M O 

o 










in o 
2 ~ 

















ID 

hO o _ 



^ T o 

Z3 LU 



CO 



CO 



4-8 



8T044SIMRUN 




[SISRACEWK3 




Man: 


h 17. 1992 




CooKD Con^raaent 


Prooea 


Model 




Model 






Pu**4 3.5 


InifcjCPD 


Prooeuei: 


SiniRpi 


Proocncs: 


PI 






ISDN Tel 


1 


ISDNO (Tel) p«# 


445 


ISDNO (Tel) 


109 








2 1 


Q.931U (User) 


4411 


0.931 U (User) '^ 


108 :] 






3 V 


Q.921U (User) 


44 10 


0.921 U (User) | 


107 








4 


I430U 


44 3 


I430U 1 


106 






43.7 


5 


SIF 


44,14 


SIF 


105 






434 
















ISTA 


6 


I430N 


443 


I430N 


104 








7 


I431U 


444 


I431U 


103 






4.3.8 


g 


UIF 


4417 


UIF 


102 






4.3.3 
















VSAT 


9 1 


I431N 


444 


I431N 


101 








10 1 


VSATO (OW) 


4418 


VSATO (OW) -^ 


100 








11 V 


Tx (30) 


4412 


Rx (20) 1 


99 








12 


TxAnt (30 


4 4.13 


RxAnt (20) 1 


98 






4.3.6 

4.3.1 


13 


Propa (30 


449 


Propa (20) 


97 






ISIS ISDN 


14 


RxAnt (30) 


4416 


TxAnt (20) 


96 






Comm Saftat 


15 


Rx (30) 


4415 


Tx (20) 


95 






Fna Bjpatt 


16 1 


IS ISO (OW) 


**2 


ISISO (OW) -^ 


94 






R4tAtt€ 


17 1 


ISISP (Proc) BCh 


441 


ISISP (Proc) 1 


93 






P9U BypaMt 


18 V 


IS ISO (OW) 


4 42 


ISISO (OW) 1 


92 








19 


Tx (20) 


4412 


Rx (30) 


91 








20 


TxAnt (20 


4413 


RxAnt (30) 


90 






43.6 
43J 


21 


Propa (20 


449 


Propa (30) 


89 






MasUr Ground 


22 


RxAnt (20) 


4416 


TxAnt (30) 


88 






SitUioH MGS 


23 


Rx (20) 


4415 


Tx (30) 


87 






Pou Bypatt 


24 


MGSO (OW) 


447 


MGSO (OW) 


86 








25 


Q.921N (Network) 


4410 


Q.921N (Network) 


85 








26 


Q.93 IN (Network) 


44 11 


Q.931N (Network) 


84 








27 1 


ISUP 


446 


ISUP '^ 


83 






CCIKtMttKStuPnu*- 


28 1 


MGS (Proc) 


44 8 


MGS (Proc) 1 


82 








29 V 


ISUP 


446 


ISUP 1 


81 








30 


0.93 IN (Network) 


4.4 11 


0.93 IN (Network) 


80 








31 


Q.921N (Network) 


4410 


0.921 N (Network) 


79 






Pmj BypcMt 


32 


MGSO (OW) 


447 


MGSO (OW) 


78 








33 


Tx (30) 


4 4 12 


Rx (20) 


77 








34 


TxAnt (30) 


4413 


RxAnt (20) 


76 






43.6 
43.1 


35 


Propa (30) 


449 


Propa (20) 


75 






KM ISDN 


36 


RxAnt (30) 


4416 


TxAnt (20) 


74 






Comm SatelUtt 


37 


Rx (30) 


4415 


Tx (20) 


73 






P»u BypoMt 


38 1 


ISISO (OW) 


i42 


ISISO (OW) 


72 






KttAltc 


39 1 


ISISP (Proc) BCh 


441 


ISISP (Proc) 1 


71 






Ptu Bypatt 


40 V 


ISISO (OW) 


4 42 


ISISO (OW) 1 


70 








41 


Tx (20) 


4412 


Rx (30) 


69 








42 


TxAnt (20) 


44.13 


RxAnt (30) 


68 






43.6 
4.3.3 


43 


Propa (iO) 


44.9 


Propa (30) 


67 






VSAT 


44 


RxAnt (20) 


4416 


TxAnt (30) 


66 








45 1 


Rx (20) 


4,4,15 


Tx (30) '* 


65 








46 1 


VSATOW 


44.18 


VSATOW 1 


64 








47 V 


143 IN 


4 4.4 


1431 N 1 


63 






4.3.8 


48 


UIF 


4417 


UIF 


62 






4.3.4 
















ISTA 


49 


1431 U 


444 


I431U 


61 








50 


I430N 


443 


I430N 


60 






4.3.7 


51 


SIF 


4414 


SIF 


59 






433 
















ISDN Tel 


52 


I430U 


443 


I430U 


58 








53 1 


Q.921U (User) 


44.10 


0.921 U (User) '^ 


57 








54 1 


Q.931U (User) 


4411 


0.931 U (User) | 


56 








55 V 


ISDND (Tel) 


445 


ISDND (Tel) I 








Fiturc 4J-6 ISIS SimulatioD CommuDicaUon Componenta and Modd Procoses Racetrack 







4-9 



For ISIS, the ISDN satellite operations are modeled by an uplink receiving antenna 
(RxAnt 30) and receiver (Rx 30) that are connected to the on-board ISDN orderwire 
processor (ISISO). See Figure 4.3-6. The ISISO either routes the protocol messages to 
the VSAT satellite downlink or to the MGS satellite downlink. The MGS acts on all 
protocol messages destined for this satellite. The ISIS on-board processing acts on the 
commands form the MGS to switch the allocated B -channels as directed by order wire 
commands. Both the VSAT and MGS downlinks are modeled by a downlink transmitter 
(Tx20) and an associated downlink transmitting antenna (TxAnt20). Both the downlink 
and uplink propagation are modeled by propagation (Prop) process that delays these 
protocol messages as a function of distance between the satellite and the respective ground 
terminal. 

For FSIS, the ISDN satellite operations are modeled by an uplink receiving antenna 
(RxAnt 30) and receiver (Rx 30) that are connected to the on-board ISDN orderwire 
processor (FSISO). See Figure 4.3-1. The FSISO either routes the protocol messages to 
the ISDN satellite downlink or routes them through the protocol conversion modules: 
Q921N, Q931N, and ISUP to the on-board protocol processor (FSISP). The FSISP acts 
on all protocol messages destined for this satellite. Reply protocol messages follow a 
reverse protocol excursion back to their destination. The ISDN downlink is modeled by a 
downlink transmitter (Tx20) and an associated downlink transmitting antenna (TxAntlO). 
Both the downlink and uplink propagation are modeled by propagation (Prop) process that 
delays these protocol messages as a function of distance between the satellite and the 
ground terminal. 

4.3.2 Master Ground Station (MGS) Communication Component 

The ISDN Master Ground Station (MGS) serves as the ground based ISDN protocol 
analysis and decision component for satellite not capable of performing these functions. 
The MGS operations are modeled by a downlink receiving antenna (RxAnt 20) and receiver 
(Rx 20) that are connected to the ground based order wire processor (MGSO). See Figure 
4.3-6. The MGSO either routes the protocol messages to the ISDN satellite uplink or 
routes them through the protocol conversion modules: Q921N, Q931N, and ISUP to the 
ground based protocol processor (MGSP). The MGSP acts on all protocol messages 
destined to it.. Reply protocol messages follow a reverse protocol excursion back to their 
destination. The MGS uplink is modeled by an uplink transmitter (Tx30) and an 
associated uplink transmitting antenna (TxAnt30). Both the downlink and uplink 
propagation are modeled by propagation (Prop) process that delays these protocol 
messages as a function of distance between the satellite and the MGS. 

4.3.3 VSAT Communication Component 

The VSAT user terminal represents the ISDN user entry into the ISDN communications 
satellite. For both the ISIS and FSIS architecture, the VSAT is generic terminal capable of 
converting 1431 protocol to uplink signals and converting downlink signals to 1431 
protocol. The VSAT connects the user with U-interface and connects to the ISDN satellite 
with a propagation (Prop) interface. As such the VSAT represents the exchange 
termination (ET) for the user. The VSAT converts ISDN protocol messages into TDMA 
uplink signals in one direction and converts the downlink signals to ISDN protocols in the 
other direction. 

The VSAT operations are modeled by a TDMA downlink receiving antenna (RxAnt20) and 
receiver (Rx20) that are connected to the VSAT orderwire processor (VSATO). The 
VSATO translates all downlink signals into 1431 protocols messages. The 1431 process 
provides the 1,544 kbps primary rate ISDN interface at the U-interface level. 

4-10 



The VSAT TDMA uplink operations are modeled in siniilar manner to convert ISDN 
protocols to uplink signals. The ISDN protocols come to the 1431 process via the U 
interface. The VSATO converts the 1431 protocol into a TDMA format for uplink 
transmission via Tx30 and TxAnt30 to ISDN communications satellite. Both the downlink 
and uplink propagation are modeled by the propagation (Prop) process that delays the 
protocol messages as a function of distance between tfie satellite and the VSAT. 

4.3.4 ISDN Satellite Terminal Adapter (1ST A) Communication Component 

The ISDN satellite terminal adapter (ISTA) represents the user's NT2 and NTl connection 
between the user at the S-interface and the exchange termination (ET) at the U-interface. It 
represents protocol conversion necessary for aggregating a number of BRI services in a 
PRI link for ultimate translation into a TDMA uplink. For a downlink the ISTA also 
converts a PRI connection into a BRI service connections. 

The ISTA operations are modeled by a Layer 1, physical protocol conversion process 
(1430) process at the S-interface. These protocols are converted up and down the OSI 
layers to match the S-interface BRI protocols to the U-interface PRI protocols. The 
translation process converts 1430 protocols into 1431 protocols in the S-interface to U- 
interface direction. The reverse sequence of processes models the U-interface to S- 
interface direction. 

4.3.5 ISDN Telephone User Communication Component 

For the FSIS Network Model the ISDN telephone represents the source and sink of all 
ISDN call connections. The off-hook and on-hook conditions are used as a starting point 
for the call connection protocol sequences that are converted along the OSI layer chain to 
the S-interface of the network termination (NT). 

The ISDN Telephone operations are modeled by a human interface process (ISDNO and 
ISDND) that provides the on-hook and off-hook conditions. The ISDNO process act as 
originator of the Layer 3 protocol sequence using the Q931 messages that are converted 
down the OSI layers by the Q931, Q921 and 1430 processes to S-Interface signals. That 
sequence is triggered by the initiating Request and Terminating events on the STF. The 
ISDND process represents the destination user in the same way as ISDNO portrays the 
originator. The reverse sequence of protocol processes models the S-interface to ISDND 
direction. 

4.3.6 Propagation Communication Component 

Both the downlink and uplink propagation in both ISIS and FSIS architectures account for 
the time delay experienced by a signal as it propagates between the ISDN satellite and any 
ground terminal. A significant amount of time is spent in signal propagation. 
Propagation is modeled by a single propagation (Prop) process that delays the signal as a 
function of distance between the satellite and the ground terminal. That distance depends 
on the satellite orbit and topology and the terminal distribution. These propagation 
distances change dramatically as a function of time and points of origin and destination. 
For a particular simulation these satellite to earth station distances may pre-calculated and 
Stored as part of the City array. Similarly, transmitter signal loss is a function of the 
distance and must accounted for during the simulation. 



4-11 



4.3.7 S-Interface Communication Component 

The S-interface component provides the BRI connectivity between the ISDN user and the 
ISTA. This connection is similar to most wiring configuration which can be used to 
connect to an NT. These configurations can be divided into three types: 

• A single installation where only one terminal is connected to an NT 

• A multi-terminal installation where several terminals are connected to an 
NTl via a passive bus 

• A multi-terminal installation where several terminals are connected to an 
NTl or an NT2 in a star configuration 

At the outset both the ISIS and FSIS architecture will use a single point installation between 
the ISDN Telephone and the VSAT. This will permit the use of up to 1000m of cable to 
assure maximum of 6 dB attenuation at 96 kHz. This cable length will provide a signal 
round trip delay of 10 to 42 microseconds from the transmitter to the receiver. 

The S-interface is modeled by a single process (SIF) that delays the message as a function 
of the round trip delay. For both the ISIS and FSIS Network Model all protocol messages 
are sent on the D-channel and therefore have a constant delay once the D -channel 
contention has been resolved. 

4.3.8 U-Interface Communication Component 

The U-interface component provides the transfer of information that takes place on the two 
wire circuit between the ISTA and the VSAT. For both the ISIS and FSIS architecture 
echo cancelUng is used. Echo cancelling is characterized by simultaneous transmission in 
both direction, full duplex, elimination of echo, and a bit rate of 160 kbps. The 144 kbps 
are used for the 2B+D BRI information and the other 16 kbps is used for synchronization, 
operations, and maintenance. 

The U-interface is modeled by a single process (UIF) that delays the messages as a 
function of its BRI rate. For both the ISIS and FSIS Network Model all protocol messages 
are sent on the D-channel and therefore have a constant delay. 

4.4 ISIS and FSIS Simulation Processes 

This section describes the software simulation processes that make up the communication 
components of both the ISIS and FSIS Network architectures. Their use in the ISIS and 
FSIS end-to end simulation processes diagram depicted in Figures 4.3-5 and 4.3-2, 
respectively.. These processes are the software modules that implement the communication 
functions being modeled. As indicated above, each of these processes/modules is reused in 
a number of Ae communication components that make up the ISIS and FSIS Network 
Models. The same description format is used in order to provide a direct comparison 
between the processes 

4.4.1 ISDN Protocol Process -- FSISP 

The ISDN Protocol Processor process accepts ISUP command messages; takes the 
appropriate call control action of assigning and relinquishing B-channel resources; sends 
appropriate ISUP status messages. 

Inputs: ISUP Command Messages 

Outputs: ISUP Status Messages 

4-12 



Operation: 

Accept ISUP Command Message from ISIS and FSIS Process 
Assign B-Channel 
Relinquish B-Qiannel 
Send ISUP Status Message 
Accommodate Design Processing Time 
Return 

Parameters: Number of B-Channels Available for assignment 

Processing Time for each accept, assign, relinquish and send action 

4.4.2 Order Wire Process - ISISO, FSISO 

The Order Wire Process accepts TDMA signals from the VSAT via the uplink receiver 
(Rx30) and converts them to ISDN basic access frames and routes them to the Q921 
process. The protocol conversion process continues up the the Q931 and ISUP layers to 
the ISDN Protocol Processor (FSISP). On the other side the ISISO, FSISO and MGSO 
processes accepts ISDN basic access frames from the Q921 process, convert them to 
TDMA signals and routes them to the satelUte downlink transmitter. 

Inputs: TDMA Signals, Basic Access Frame 

Outputs: TDMA Signals, Basic Access Frame 

Operations: 

Accept TDMA Signals from Rx30 Process 

• Convert to Basic Access Frames 
Route TDMA Signals to Q921 Process 

• Accommodate Design Processing Time 

• Return 

Accept Basic Access Frames from ISISO and FSISO Process 
Convert to TDMA Signal 
Route TDMA Signal to Tx20 Process 
Accommodate Design Processing Time 

• Retum 

Parameters: Processing Time for each accept and route action 

4.4.3 1430 Process 

The 1430 process is based on the CCITT Recommend ation 1.430. Basic User Interface - 
Layer 1 Specification , for the point-to-point operation at Layer 1 for a single transmitter 
(source) and receiver (sink) are active at one time. The nominal transmitted bit rate at the 
interface is cited as 192 kbps in both direction of transmission. The activation/deactivation 
sequence shown in Figure 4.4.3-1, "Layer 1 Protocol Activation/Deactivation" will be 
used. The processing of associated management primitives is reserved for future 
implementations. 

The 1430 process will propagate all higher layer messages without error to and from the S- 
interface via die Info3 and Info4 transmissions in F7-Acnvated and G3- Active states. 

Inputs PH-ACnVATE, PH-ACTIVATE-IND, PH-DEACTTVATE IND, INFOO, 

INF02, INF03[TE->NE], and INF04[TE<-NE] Messages 

Outputs: PH-ACnVATE IND, PH-DEACTIVATE IND, INFOO, INF02, 

INF03[TE->NE], and INF04[TE<-NE] Messages 



4-13 



Layer 2 

Entity 



Terminal 
Side 



PH-Actlvatlon Req 



Layer 1 
Entity 

F1 



Layer i 
Entity 



Layer 2 
Entity 



Inactive Unpowered 

i 

F2 
Sensing Powered, no Rx signal 

w^ — Deactivation ino^ 
''^ infoO 

F3 Gl 

Deactivated „ nparttv^fpri 

■^ Deactivation Req ^^^^V^^'-^'^ 



F3 
Deactivated 

Deactivation Req 

Info 



Gl 
Deactivated 



Network 
Side 




Figure 4,4.3-1 Layer 1 Protocol Actlvatlon/Deacttvatlon 



5 T036 SCA DAT 

Layer 1 Proto Act/Deact 

September 13, 1991 



4-14 



Operations: 

Accept PH- ACTIVATE from Q921 Process 
if F3-Deactivated State 
Start T3-Timer 
Send Infol(non-synced) to SIF Process 

• Set F4-Awaiting Signal State 

• Accommodate Design Processing Time 

• else Return 

Accept Infol from SIF Process 
if G3-Deactivated State 
Send Info2 (within Isec) to SIF Process 
Start Tl-Timer 

• Set G2-Pending Activation State 
Accommodate Design Processing Time 

• else Return 

Accept Info2 fiom SIF Process 

• if F4- A waiting Signal State 

Send InfoO (within 5 millisec) to SIF Process 

• Set F5-Identifying Input 

Send Info3 (within 1(X) millisec of Info2 to SIF Process) 

• Set F6-Synchronized 
Accommodate Design Processing Time 

• else Return 

Accept Info3 from SIF Process 
if G3-Active State 
Send [Info3] to Q921 Process 

• else if 

• G3-Pending Activation State 

Send Info4 (within 5(X) millisec) to SIF Process 
Send PH-ACnVATED I^fD to Q921 Process 
Set G3-Active State 
Accommodate Design Processing Time 

• else Return 

Accept Info4 from SIF Process 
if F7- Activated State 
Send [Info4] to Q921 Process 

• else if 

• F6-Synchronized State 

• Send PH- ACTIVATED IND to Q921 Process 

• Set F7-Activated State 
Accommodate Design Processing Time 

• else Return 

Parameters: Values of T 1 , T2, and T3 timers 

Processing Time for each accept, if, and send action 



4-15 



4.4.4 1431 Process 

The 1431 process is based on the rriTT Recommendation 1.431. Primary Rate User- 
Network Interface - LavRr 1 Specification, for the point-to-point operation at Layer 1 for a 
single transmitter (source) and receiver (sink) are active at one time. The nominal 
transmitted bit rate at the interface is cited as 1544 kbps in both direction of transmission. 
The interfaces for the primary rate user-network interface is active at all times. No 
activation/deactivation are applied to the interface. The Fl -Operational State and the Gl- 
Operational State are assumed to be active. The other fault condition states are left for 
future implementations. 

Inputs : Layer 2 and UIF Frames 

Outputs: Layer 2 and UIF Frames 

Operations: 

Accept Layer 2 Frames from UIF Process 

if Gl -Operational State 

• Send Layer 2 Frames to Q921 Process 

• Accommodate Design Processing Time 

• else Return 

Accept Layer 2 Frames from UIF Process 

• if Fl -Operational State 

• Send Layer 2 Frames to Q921 Process 

• Accommodate Design Processing Time 

• else Retum 

Parameters: Processing Time for each accept, if, and send action 

4.4.5 ISDN Telephone Process -- ISDNO, ISDND 

The ISDN Telephone process is based on human interface that requests and terminates 
ISDN telephone calls. The ISDNO process acts as a source by generating a Layer 3 
protocol sequence that triggers the Q931 process. The timing and content of these initiating 
messages are obtained from the scenario traffic file (STF). 

Inputs: Scenario Traffic File (STF). 

Outputs: Request and Terminate Messages 

Operations: 

Read STF 

Send Q93 1 Message to Q93 1 process 

• loop 

Accept Q931 Message from Q931 Process 

Set IDSNO and ISDND Internal State 

Send Q931 Response Message to Q931 Process 

• Accommodate Design Processing Time 

• Retum 

Parameters: Processing Time for each accept and send action 



4-16 



4.4.6 ISUP Process 

The ISUP process provides its end-user with the capability to establish, supervise, and 
terminate basic bearer services. As currently defined, the ISUP is restricted to 64 kbps 
switched connections. The message structures and functional procedures for carrying out 
ISUP tasks are given in CCITT Recommendations Q.730, Q761 to Q.764, and Q.766. 
For the FSIS Network Model, the ISUP functions are performed within the ISDN Satellite. 
For ISIS the ISUP functions are performed by the MGS. 

Inputs : Q93 1 and ISUP Messages 

Outputs: Q93 1 and ISUP Messages 

Operations: 

Accept Q931 Message from Q931 Process 

Send ISUP Message to ISISO and FSISO Process 

Accommodate Design Processing Time 

• Return 

Accept ISUP Message from VSATO Process 
Send Q93 1 Message to Q93 1 Process 
Accommodate Design Processing Time 

• Return 

Parameters: Processing Time for each accept and send action 

4.4.7 MGS Order Wire Process -- MGSO 

The Mission Ground Station (MGS) order wire process accepts TDMA signals from the 
ISIS satellite downlink receiver and converts them to ISDN basic access frames and routes 
them to the Q921 process. The protocol conversion process continues up the the Q931 
and ISUP layers to the ISDN Protocol Processor (MGSP). On the other side, the MGSO 
process accepts ISDN basic access frames from the Q921 process, convert diem to TDMA 
signals and routes them to the ISIS satellite uplink transmitter (Tx30). 

Inputs: TDMA Signals, Basic Access Frame 

Outputs: TDMA Signals, Basic Access Frame 

Operations: 

Accept TDMA Signals from Rx30 Process 

• Convert to Basic Access Frames 
Route TDMA Signals to Q921 Process 

• Accommodate Design Processing Time 

• Return 

Accept Basic Access Frames from ISISO and FSISO Process 
Convert to TDMA Signal 
Route TDMA Signal to Tx20 Process or Tx30 Process 

• Accommodate Design Processing Time 

• Return 

Parameters: Processing Time for each accept and route action 



4-17 



4.4.8 MGS Processor Process 

The Mission Ground Station (MGS) ISDN Protocol Processor process accepts ISUP 
command messages; takes the appropriate order wire call control action of assigning and 
relinquishing B-channel resources; sends appropriate ISUP status messages. 

Inputs: ISUP Command Messages 

Outputs: ISUP Status Messages 

Operation: 

Accept ISUP Command Message from MGSO Process 

• Assign B-Channel 

• Relinquish B-Channel 
Send ISUP Status Message 

• Accommodate Design Processing Time 

• Return 

Parameters: Number of B-Channels Available for assignment 

Processing Time for each accept, assign, relinquish and send action 

4.4.9 Propagation Process 

The Propagation (Prop) process models all space propagation aspects for both the ISIS and 
FSIS Network Model. The distance between transmitter and receiver reduces the amount 
of energy (SigPropEnergy) available at the receiver. The weather conditions also affect the 
SigPropEnergy and are included in this Prop process. The notation "**" is used to 
represent 20Ghz, 30Ghz, or other frequencies as appropriate. 

Inputs: Any Message from TxAnt** Process 

Outputs: Input Message to RxAnt** Process 

Operations: 

Accept Message from TxAnt** Process 

• if Communication Component (input) is VSAT 

• Adjust SigPropEnergy by Prop(VSATLoc,ACTSLoc) 

• Adjust SigPropEnergy by Prop(WeaVSAT) 

• Send Message to ISDNOW RxAnt30 Process 

• Accommodate Design Processing Time 

• else Return 

Accept Message fhsm TxAnt** Process 

if Communication Component (input) is ISIS and FSIS 

Adjust SigPropEnergy by Prop(VSATLoc,ACTSLoc) 

Adjust SigPropEnergy by Prop(WeaVSAT) 

Send Message to VSAT RxAnt20 Process 

Accommodate Design Processing Time 
else Return 

Parameters: Processing Time for each accept, if, and send action 
WeaVSAT = weather between VSAT and ACTS 



4-18 



4.4.10 Q921 Process 

The Q921 process provides data link peer-to-peer exchange of information of the Link 
Access Procedures on the D-channel, LAPD. The CCITT Recommendation 0.921. ISDN 
User-Network Interface - Data Link Laver Specification provide a description of the 
procedures and function of LAPD. This LAPD protocol is used in the IDSNO and 
ISDND, ISTA, and the VSAT communication components to assure error free peer-to-peer 
protocol message exchanges in the D-channel. 

Inputs: 1430, FSISO, MGSO, and Q931 Messages 

Outputs: 1430, FSISO, MGSO, and Q931 Messages 

Operations: 

Accept 1430 Message from 1430 Process 

Send Q931 Message to Q93 1 Process 

• Accommodate Design Processing Time 

• Return 

Accept FSISO and MGSO Message fiiom FSISO and MGSO Processes 
Send FSISO and MGSO Messages to Q93 1 Process 

• Accommodate Etesign Processing Time 

• Return 

Accept Q931 Message from Q931 Process 
Send 1430 Message to 1430 Process 
Accommodate Design Processing Time 
Return 

Parameters: Processing Time for each accept, if, and send action 

4.4.11 Q931 Process 

The Q931 process provides procedures for establishing, maintaining, and clearing network 
connections at the ISDN user-network interface. Messages are exchanged over the D- 
channel. The CCTT T Recommendation 0.931. ISD N User-Network Interface Laver 3 
S pecification for Basic Call Control p rovide a description of the procedures and functions. 
For the ISIS Network Model this Q.931 protocol is used in the ISDNO, ISDND, ISTA, 
and the VSAT communications component to assure error free peer-to-peer protocol 
message exchanges in the D channel. 

Inputs: ISDNO, ISDND, ISUP, and Q931 Messages 

Outputs: ISDNO, ISDND, ISUP. and Q931 Messages 

Operations: 

Accept ISDNO and ISDND Messages from ISDNO and ISDND Processes 

Convert ISDNO and ISDND Messages to Q93 1 Message 

Send Q93 1 Message to Q92 1 Process 

• Accommodate Design Processing Time 

• Return 

Accept ISUP Message from ISUP Process 

• Convert ISUP Message to Q931 Message 
Send Q931 to Q921 Process 

• Accommodate Design Processing Time 

• Return 



4-19 



Accept Q931 Message from Q921 Process 

if Communication Component is ISDNO or ISDND 
Convert Q931 Message to ISDNO or ISDND Messages 

• Send ISDNO and ISDND Messages 

to ISDNO and ISDND Process, respectively 
Accommodate Design Processing Time 
else Return 

Parameters: Processing Time for each accept, if, and send action 

4.4.12 Rx ** Process 

The Rx** process models all receivers of both the ISIS and FSIS Network Architectures. 
The "**" notation is place holder for 20Ghz, 30Ghz, or other frequencies that represent the 
downlink and uplink frequencies of the Network Models. The receivers have a sensitivity 
parameter that set the energy values below which a signal is not accepted. For signal 
energy below the receiver sensitivity the whole message is consider loss. That message is 
logged to the MSave file as a lost message togetiier with the time/subsystem tiiat failed it. 
The message is not propagated. 

Inputs: Any Message from RxAnt** 

Outputs: Input Message to FSISO, ISISO, MGSO or VSATO 

Operations: 

Accept Message from RxAnt** Process 

• if MsgProp Value > Rx**Sensitivity 

if Communication Component is ISDN Satellite 

• Send Message to the appropriate FSISO or ISISO Process 

• Return 

• if Communication Component is VSAT 

• Send Message to VSATO Process 

• Accommodate Design Processing Time 

• Return 

• if Communication Component is MGS 

• Send Message to MGSO Process 

• Accommodate Design Processing Time 

• Return 
else Return 

Parameters: Processing Time for each accept, if, and send action 
Rx**Sensitivity as receiver threshold 

4.4.13 RxAnt ** Process 

The RxAnt** process models all receiver antennas of the FSIS Network Model. The "**" 
notation is place holder for 20Ghz, 30Ghz, or other frequencies that represent tiie downlink 
and uplink frequencies of the ISIS or FSIS Network architectures. The receiver antennas 
have a number of parameters tiiat reflect its design. RxAnt* *BW represents the antenna 
beam; RxAnt**G sets the antenna gain; RxAnt**Lat and RxAnt**Lon indicate the antenna 
subpoint location; RxAnt**Dwell represents the antenna dwell time at a location; 
RxAnt**HopFreq represents its hop frequency; and RxAnt**Scan provides the antenna 



4-20 



scan rate. To be received by the corresponding receiver the transmitted energy must 
coincide with all these antenna parameters. 

Inputs: Any Message from Prop Process 

Outputs: Input Message to Rx** Process 

Operations: 

Accept Message from Prop Process - Case 

• if Communication Component is VSAT 

if VSAT RxAnt20 pointed at ACTS Satellite 

Adjust SigPropEnergy by RxAnt20Gain 
Send Message to VSAT Rx20 Process 

• Accommodate Design Processing Time 
else Return 

• if Communication Component is ISDN S atellite 

if ISDN Satellite RxAntSO pointed at transmitter subpoint 
Adjust SigPropEnergy by RxAntSOGain 
Send Message to ACTS Rx30 Process 

• Accommodate Design Processing Time 
else Retum 

if Communication Component is VSAT 

if VSAT RxAnt20 pointed at ACTS Satellite 

• Adjust SigPropEnergy by RxAntlOGain 
Send Message to VSAT Rx20 Process 

• Accommodate Design Processing Tinre 
else Retum 

default Retum 

Parameters: Processing Time for each accept, if, and send action 
RxAnt**BW = antenna beam 
RxAnt**Gain = antenna gain 
RxAnt**Lat = antenna latitude 
RxAnt**Lon = antenna longitude 
RxAnt**Dwell = antenna dwell time 
RxAnt**HopFreq = antenna hop frequency 
RxAnt**Scan = antenna scan rate. 

4.4.14 SIF Process 

The SIF process models the S-interface between the user ISDN Telephone and the ISDN 
Satellite Terminal Adapter (1ST A). For the FSIS Network Model, the SIF Process 
provides basic rate ISDN (BRI) connectivity for the 1.430 Basic Access Frames. 

Inputs: 1430 Protocol Basic Access Frames from the 1430 Process 

Outputs: 1430 Protocol Basic Access Frames to the 1430 Process 
Operations: 

Accept 1430 Basic Access Frames from 1430 Process 

• Send 1430 Basic Access Frames to 1430 Process 

• Accommodate Design Processing Time 

• Retum 

Parameters: Processing Time for each accept and send action 

4-21 



4.4.15 Tx ** Process 

The Tx** process models all transmitters of the FSIS Network Model. The "**" notation 
is place holder for 20Ghz, 30Ghz or other frequencies that represent the ISIS and FSIS 
downlink and uplink frequencies. The transmitters are modeled as isotropic radiators that 
added to the signal being transmitted with SigPropEnergy value. This value is mitigated by 
the TxAnt**, propagation (Prop) and RxAnt** processes, and finally used by the Rx** 
process to accept the message. . 

Inputs: Signals from ISISO, FSISO, MGSO or VSATO Process 

Outputs: Signal to TxAnt** 

Operations: 

Accept Message from MGSO or VSATO Process 

• Set SigPropEnergy for Message 

• Send Signal to TxAnt** Process 

• Accommodate Design Processing Time 

• Return 

Parameters: Processing Time for each accept, if, and send action 
SigPropEnergy for energy associated with message 

4.4.16 TxAnt ** Process 

The TxAnt** process models all transmitter antennas of the FSIS network Model. The 
"**" notation is place holder for 20Ghz, 30Ghz or other frequencies that represent the ISIS 
and FSIS downlink and uplink frequencies. The transmitter antennas have a number of 
parameters that reflect its design. TxAnt**BW represents the antenna beam; TxAnt**Gain 
sets the antenna gain; TxAnt**Lat and TxAnt**Lon indicate the antenna subpoint location; 
TxAnt**Dwell represents the antenna dwell time at a location; TxAnt* *HopFreq represents 
its hop frequency; and TxAnt**Scan provides the antenna scan rate. To be received by the 
corresponding receiver antenna, the transmitted antenna energy must coincide with all these 
antenna parameters. 

Inputs: Any Signal from Tx** Process 

Outputs: Input Signal to Prop Process 

Operations: 

Accept Signal from Tx** Process 

Check RxAnt** and TxAnt** coincidence 

Adjust SigPropEnergy by TxAnt**Gain 

Send Signal to Prop Process 

Accommodate Design Processing Time 

Return 

Parameters: Processing Time for each accept, check, and send action 
TxAnt**BW = antenna beam 
TxAnt**Gain = antenna gain 
TxAnt**Lat = antenna latitude 
TxAnt* *Lon = antenna longitude 
TxAnt**Dwell = antenna dwell time 
TxAnt**HopFreq = antenna hop frequency 
TxAnt**Scan = antenna scan rate. 



4-22 



4.4.17 UIF Process 

The UIF process models the U-interface between the ISDN Satellite Terminal Adapter 
(ISTA) and the VSAT. For the FSIS Network Model, the UIF process provides primary 
rate ISDN (PRI) connectivity for the 1431 signals. 

Inputs : 143 1 Protocol Signal from the 143 1 Process 

Outputs: 143 1 Protocol Signal to the 143 1 Process 

Operations: 

Accept 1431 Signal from 1431 Process 

Send 143 1 Signal to 143 1 Process 

• Accommodate Design Processing Time 

• Return 

Parameters: Processing Time for each accept and send action 

4.4.18 VSAT Order Wire Process 

The VSAT Order Wire process accepts ISDN Basic Access Frame and converts them to 
TDMA Signal and conversely. 

Inputs : ISUP and OBOW Signals 

Outputs: Basic Access Frames and TDMA Signals 

Operations: 

Accept Basic Access Frames from 1431 Process 

Convert the frame to TDMA Signal 

Sends the TDMA Signal to Tx30 Process 

• Accommodate Design Processing Time 

• Return 

Accept TDMA Signal from Rx20 Process 

• Converts TDMA Signal to a Basic Access Frame 

• Sends the frame to 1431 Process 

• Accommodate Design Processing Time 

• Return 

Parameters: Processing Time for each accept, convert, and send action 



4-23 



SECTION 5 
SUMMARY 



5.1 General 

This Simulator Design task completion report presented the complete end-to-end protocol 
architecture for both ISIS and FSIS suitable for discrete event simulation. The simulation 
processes arc applicable to both the the Interim Service ISDN Satellite (ISIS) and the Full 
Service ISDN Satellite (FSIS). The ultimate aim of this aspect of the SCAR Program is the 
design of a new advanced ISDN communications satellite. The technical and operational 
parameters for this ISDN advanced communications satellite design will be obtained from 
an engineering software model of the major subsystems of the ISDN communications 
satellite architecture. Discrete event simulation experiments will be performed with these 
ISIS and FSIS models using various traffic scenarios, technical parameters, and 
operational procedures. The data from these simulations will be analyzed using the 
performance measures discussed in previous NASA SCAR reports. 

5.2 Review 

After an introduction that provided the background and scope of this NASA SCAR 
Program, the use of modeling and simulation to determine the parameters for the advanced 
ISDN communications satellite design was presented. An overview of the modeling and 
simulation tasks included a brief description of the four software programs for the effort. 
Section 3 discussed the SCAR simulation development and methodology used to determine 
the design parameters for the SCAR advanced ISDN communications satellite design. 
Particular attention was given to the comparison between the ISIS and FSIS simulations 
since over 80% of the software modules will be reused between them. The two main 
sections of this task completion report are Section 4.3, Simulation Structures, which 
include a descriptions of both ISIS and FSIS architectures down to the process level and 
Section 4.4, Simulation Processes, which provides a detail description of each process. 

Several appendices are included to provide more detail on the Scenario Traffic File (STF), 
Process Array Structure, the Traffic Model Database, the Q.931 Protocol Simulation, and 
the Measurement Save (MSave) file. 

5.3 Continuing Efforts 

The research in the simulator design task has been satisfactorily completed and the results 
are capable of supporting the NASA SCAR Program. The implementation of the ISIS and 
FSIS Network architectures into SIMSCRIPT II.5 will no doubt result in some refinements 
but the basic design will remain intact. As shown in Figure 5.3-1, "Typical ISDN 
Configuration with ISIS, FSIS, and BSIS Overlay", the ultimate goal is to assure that 
ISDN communication satellites are a viable component option for networks of the future. 



5-1 




^Bb 



< 

cc- 



IIIIIIIIIIINIIIIIIII 













<b 


z 




F 


a> 




c 


n 




1 


n 






(0 


w 


a> 


rtj 








in 


t- 


■o 
< 




LJJ 






sdqx 361 



Vb9 



5 







CM lo j: 





^^ 


c 






c 






J_, 




<\> 


ra 


h- 


<~ 


c 


_J 


_l 


E 

I— 



< 

ID 



-H-H- 




5 - 



ra — c 

o */> S 

i_ ro c_ 

OQ CO CL 

< < < 

CO (X (T 

m ID Q. 




TO 

c_ 

> 

o 

(/) 
en 

■o 

c 

en 

CO 



en 
en 



-H-H- 






Q. CD X :: 



< 
ID 






9 S 

en f 

o 2; 

CD (N C ^ 
CM CT. 



l/> 



Z 

I— CM ■= 



C 

o 

-t-» 
(Si 

t_ 

CO 
«»— 

c 
o 
(_) 

z 
en 



o. 



in 

CD 

£_ 



CM 



5-2 



Appendix A 
Scenario Traffic File (STF) Structure 

A section of the a STF is provided in this appendix. 

The STF is a sequence of records that reflects the actions of an input scenario. 
Each STF record represents an event in the scenario sequence. The STF, then, 
is a time ordered list of events that is presented to the discrete event simulation 
as initiating events for a particular scenario. This list is read by the SIMSCRIPT 
11.5 discrete event simulation program by an external process. The external 
process, is called STF, activates the initiating protocol requester, ISDNO - ISDN 
Originator. That protocol is passed from process to process being analyzed and 
acted upon along the way. 

Even though only three fields are visible in the STF presented in this appendix, 
four fields actually make up each record of the STF. The first field "STF" is used 
by SIMSCRIPT 11.5 to identify the external file it belongs to. Since process STF 
is the external process reading this file, STF must head each record. 

The second field "1601." of the first record is a real variable representing the 
simulation time in seconds. The action of the external process STF is to activate 
process ISDNO at that time as part of the simulation. 

The next six characters after the decimal point form the Call Reference Number 
for that event record. The Call Reference Number uniquely identifies the 
service being requested and is used for every action concerning that call. The 
16 format blanks leading zeroes and the following field, which is also 16, blends 
into the Call Reference Number making seem like a single number. The first 16 
records in the STF presented in this appendix have the following Call 
Reference Numbers: 

94, 94, 95, 95, 96, 96, 97, 97, 98, 98, 99, 99,1,1.100,100 



The last field of the STF record is a combination of integer subfields. The field: 

115224 

is decomposed into the following information elements: 

1 represents the Operation being requested. 
In this case 1 stands for "Rqst". 
Whereas, a 2 in that position would mean "Term" 



A-1 



1 represent the bearer service being requested. 
1 means a single B-channel. 

52 represents the originating city identification 

with scenario generation. 52 = Washington DC 

24 represents the destination city identification 

with scenario generation. 24 = Los Angeles 

The first record of the STF is decoded as follows: 

Request a single B-channel from Washington DC to Los Angeles 
at 1601 seconds-of-day ( 26min 41 sec after mid-night) 
using Call Reference Number #94. 

The second record of the STF is decoded as follows: 

Terminate the service associate 

with Call Reference Number #94. 

at 1860 seconds-of-day ( 31 min OOsec after mid-night). 

The result is that a B-Channel was allocated to Call Reference #94 for 4 
minutes and 19 seconds. 



A-2 



cTF^I ^^ ' i^' 



STF 


1601. 


94115224* 


3TF 


1860. 


94200000* 


STF 


3201. 


95115252* 


STF 


3377. 


95200000* 


STF 


4801. 


96115224* 


STF 


5075. 


96200000* 


STF 


6401. 


97115252* 


STF 


6690. 


97200000* 


STF 


8001. 


98115224* 


STF 


8138. 


98200000* 


STF 


9601. 


99115252* 


STF 


9758, 


99200000* 


STF 


11111. 


1112452* 


STF 


11159. 


1200000* 


STF 


11201. 


100115224* 


STF 


11421. 


2112424* 


STF 


11429. 


100200000* 


STF 


11642. 


2200000* 


STF 


11731. 


3112452* 


STF 


11880. 


3200000* 


STF 


12041. 


4112424* 


STF 


12178. 


4200000* 


STF 


12351. 


5112452* 


STF 


12627. 


5200000* 


STF 


12661. 


6112424* 


STF 


12801. 


101115252* 


STF 


12971. 


7112452* 


STF 


12979. 


101200000* 


STF 


13026. 


6200000* 


STF 


13152. 


7200000* 


STF 


13281. 


8112424* 


STF 


13504. 


8200000* 


STF 


13591. 


9112452* 


STF 


13832. 


9200000* 


STF 


13901. 


10112424* 


STF 


14102. 


10200000* 


STF 


14211. 


11112452* 


STF 


14401. 


102115224* 


STF 


14506. 


11200000* 


STF 


14521. 


12112424* 


STF 


14653. 


102200000* 


STF 


14694. 


12200000* 


STF 


14831. 


13112452* 


STF 


14956. 


13200000* 


STF 


15141. 


14112424* 


STF 


15303. 


14200000* 


STF 


15451. 


15112452* 


STF 


15491. 


15200000* 


STF 


15761. 


16112424* 


STF 


15854. 


16200000* 


STF 


16001. 


103115252* 


STF 


16071. 


17112452* 


STF 


16162. 


17200000* 


STF 


16246. 


103200000* 



A-3 



Appendix B 
Process Array (ProcAr) Structure 

A copy of a ProcAr is provided in this appendix. 

The ProcAr is a matrix of engineering data that determines all the parameters 
associated with the discrete event simulation. The labels associated with 
ProcAr are shown in the table, "Process Array, Routing Table and Engineering 
Parameters". The actual ProcAr, engineering parameters, used for FSIS Build 1 
are shown in the next two matrices. Each row of the ProcAr represents 
parameters associated with the Process Index (PI) in the first element of that 
row. Up to 9 parameters can be associated with each PI. 

Since Pi's represent a diversity of communication functions, such protocol 
analysis, receiving, transmitting, allocating, each row consists of a diversity of 
technical parameters. For protocol analysis, such parameters as timer values, 
state number are important. For the receiving function, such things as receiver 
threshold, noise figures, BER are meaningful. For the transmitting function, 
power gain and transmitting frequency play an important part. In essence, each 
record has parameters that pertain explicitly to that PI. 

For example, only one software module is used for the receiving function, Rx. 
But that receiving function takes on the characteristic provided by the ProcAr 
record for the PI position it is modeling. It will use difference values for a 20GHz 
receiver than for a 30GHz receiver. Similar ProcAr technical parameters for the 
power generating capabilities of a space based transmitter and a ground based 
transmitter will be determined by the PI position they play in the simulation. 

In the ProcAr Matrix in this appendix, the first column of the ten columns 
contains the PI number. The second column shows the delay time, in 
milliseconds, required for that PI to perform all its tasks. Most PI values have 
temporarily, arbitrarily set to 10 msecs. Of particular interest is the value 6 
msecs/1000 miles for Pi's: 13, 27, 51, and 65. Those Pi's use the propagation 
process that multiplies this value by the number of miles. That value has 
temporarily, arbitrarily set at 22,000 miles resulting in a constant propagation 
delay of 132 msecs. 

The other engineering parameters, especially the timer values associated 
actual protocol standards for Q.931, Q.921, 1430, 1431, and ISUP will be added 
to the appropriate Pi's to study their effects on end-to-end ISDN communication 
satellite. 



B-1 



8 T044 SIM RUN 






PROCARR.WK3 


March 18, 1992 






Process Array, Routing Table and Engineering 


Parameters 




ProcAr(PIJ) 












Process 


•Delay 


^ Pnninporinn Paramptpr^- 


— > 


V ti ly u icci 11 ly i aiciiiiddo 


Process 


Name* 


(sec) 






Index (PI) 


J=l 


2 


3 4 5 


6 


1 


77 


ISDN Tel 


## 


STF Driven: Rqst and Term 




2 


76 


Q931 


## 


*T301 *T302 


•T303 ... *T322 


3 


75 


Q921 


## 


*T200 *T201 *T202 


*T203 


4 


74 


1430 


## 


*T1 *T2 *T3 




5 


73 


SIF 


## 


*Rate(Kbps)::D/16 




6 


72 


1430 


## 


*T1 *T2 *T3 




7 


71 


1431 


## 


*Rate(Kbps)::D/16 




8 


70 


UIF 


## 


*Rate(Kbps)::D/16 




9 


69 


1431 


## 


*Rate(Kbps)::D/16 




10 


68 


VSATOW 


## 






11 


67 


TX30 


## 


*Freq(GHz) *Power(Db) 




12 


66 


TXANT30 


## 


*Freq(GHz) *Power(Db) *BW(deg) * 


HopRate(msec) 


13 


65 


PROP 


## 


•LossRate(Dd/d) 




14 


64 


RXANT30 


## 


*Freq(GHz) *Power(Db) *BW(deg) * 


HopRate(msec) 


15 


63 


RX30 


## 


*Freq(GHz) *Thresh(Db) 




16 


62 


FSISO 


## 






17 


61 


Q921 


## 


*T200 *T201 *T202 


*T203 


18 


60 


Q931 


## 


*T301 *T302 


*T303 ... *T322 


19 


59 


ISUP 


## 






20 


58 


FSISP 


## 


*Freq(MHz) *Mem(Mby) *WordSize(# 


I 


21 


57 


ISUP 


## 






22 


56 


Q931 


## 


*T301 *T302 


*T303 ... *T322 


23 


55 


Q921 


## 


*T200 *T201 *T202 


*T203 


24 


54 


FSISO 


## 






25 


53 


TX20 


## 


*Freq{GHz) *Power(Db) 




26 


52 


TXANT20 


## 


•Freq(GHz) *Power(Db) *BW(deg) * 


HopRate(msec) 


27 


51 


PROP 


## 


*LossRate(Dd/d) 




28 


50 


RXANT20 


## 


*Freq(GHz) *Power{Db) 'BWCdeg) * 


HopRate(msec) 


29 


49 


RX20 


## 


*Freq(GHz) *Thresh(Db) 




30 


48 


VSATOW 


## 






31 


47 


1431 


## 


*Rate(Kbps)::D/16 




32 


46 


UIF 


## 


*Rate(Kbps)::D/16 




33 


45 


1431 


## 


*Rate(Kbps)::D/16 




34 


44 


1430 


## 


*T1 •T2 *T3 




35 


43 


SIF 


## 


*Rate(Kbps)::D/16 




36 


42 


1430 


## 


*T1 *T2 •T3 




37 


41 


0921 


## 


*T200 *T201 *T202 


*T203 


38 


40 


0931 


## 


*T301 *T302 


*T303 ... *T322 


39 




ISDN Tel 


## 


Protocol Response; Always available 






78 


ISDNSat 




*Lat(deg) *Lon(deg) *Alt(Kmi) 






79 


B-Channels 




BChMax BChAvall 





B-2 



P/^64/t' D-^r" 



1 

7 



10 
10 

10 









^ 
























































P^c^d' bk-T^ 



1 


10 


























2 


10 


























3 


10 


























4 


10 


























5 


10 


























6 


10 


























7 


10 


























8 


10 


























9 


10 


























10 


10 


























11 


20 


30 


100 




















12 


5 


30 


8000 


10 


20 














13 


6 





-100 




















14 


5 


30 


9000 


40 


20 














15 


30 


30 


100 




















16 


10 


























17 


10 


























18 


10 


























19 


10 


























20 


10 





2 




















21 


10 


























22 


10 


























23 


10 


























24 


10 


























25 


10 


30 


100 




















26 


5 


30 


8000 


10 


20 














27 


6 





-100 




















28 


5 


30 


9000 


40 


20 














29 


30 


30 


100 




















30 


10 


























31 


10 


























32 


10 


























33 


10 


























34 


10 


























35 


10 


























36 


10 




















'J 





37 


10 


























38 


10 


























39 


10 


























40 


10 


























41 


10 


























42 


10 


























43 


10 


























44 


10 


























45 


10 


























46 


10 


























47 


10 


























48 


10 


























49 


20 


30 


100 




















50 


5 


30 


8000 


10 


20 














51 


6 





-100 




















52 


5 


30 


9000 


40 


20 














53 


30 


30 


100 




















54 


10 



























B-3 



/ !■ 



Ucik^.t^^'^ 



55 


10 


























56 


10 


























57 


10 


























58 


10 





2 




















59 


10 


























60 


10 


























61 


10 


























62 


10 


























63 


10 


30 


100 




















64 


5 


30 


8000 


10 


20 














65 


6 





-100 




















66 


5 


30 


9000 


40 


20 














67 


30 


30 


100 




















68 


10 


























69 


10 


























70 


10 


























71 


10 


























72 


10 


























73 


10 


























74 


10 


























75 


10 


























76 


10 


























77 


10 


























78 


5 





-100 




















79 





























80 





























81 





























82 





























83 





























84 





























85 





























86 





























87 





























88 





























89 





























90 





























91 





























92 





























93 





























94 





























95 





























96 





























97 





























98 





























99 





























100 






























B-4 



Appendix C 
Traffic Model Database Data 

This Traffic Model consists of a number of databases: the City Reference DB, the ISDN 
User vs Industry DB, the Application vs Industry DB, the Application vs Time DB, and 
the Application vs Bearer Services DB. The "City Reference Database", DBl, identifies 
the percentage of ISDN users that arc associated with the population of fifty-four major 
cities. Due to paucity of specific ISDN user information this percentage factor will be used 
as multiplier of population to infer the number of ISDN users in that region. The 
geographic coordinates of these of these cities together with their US time-zone are 
included in the Traffic Model in order to provide a sub-point for communications satellite 
operations. A view of the geographical distribution of these CONUS Traffic Model Cities 
is shown in "NASA/SCAR Traffic Model". 

The "ISDN User vs Industry", DB2, apportions the ISDN traffic among twenty-one 
industries. These data permit the scenario selection on an industry-by-industry basis. This 
database in used in conjunction with the City Reference Database to further decompose the 
ISDN service use in terms of industry affiliation. The "Application vs Industry Database", 
DBS, further apportions the industry into applications of communication services. This 
added data granularity permits the selection of scenarios tailored on an application basis. 
The nine applications are spread across each of the twenty-one industries on a percentage 
basis too permit each application to contribute in a normalized fashion. 

The "Applications vs Time Database", DB4, associates daily time-slots for issuing ISDN 
service requests on an application basis. These data allows the generation of traffic 
distributions that are appropriate to the application being used in a scenario. The hours in a 
day are divided into four unequal time slots along the line of a typical work day: 0001- 
0800, 0801-1200, 1201-1800, and 1801-2400. The "Application vs ISDN Bearer 
Service, Message Length Database", DBS, associates ISDN bearer services with the 
selected scenario applications. For this SCAR program the following ISDN bearer services 
have been selected: circuit switched (64 kbps and 128 kbps), D-Channel X.25, B-Channel 
Frame Relay, and Telemetry. This database also associates the message length and 
message hold-time with each application. These message duration values provide a 
measure of the length of time each ISDN bearer service is used. 



C-1 



i jrm SCA DB3 



n :'SCA«DB<Tm(g'. WX3 



^xvitntm \i. IWI 



City Reference Database 

SCAJt Daiahaia J. 



CrrVSAME 



Honolulu 

Anchorage 

Seattle-Tacoma 

Portland-Vancouver 

San Francisco-Oakland-San Jose 

Sacramento 

Los Angeles-AnaheJm-Riverside 

SanOiego 

Phoenix 

Salt Lake City-Ogden 

Denver-Boukier 

Houston-Galveston 

San Antonio 

Oklahoma City 

Dallas-Fort Worth 

Kansas City 

Minneapolis-St. Paul 

St. Louis 

Memphis 

New Orleans 

Milwaukee-Racine 

Chicago-Gary Lake County 

Indianapolis 

Nashville 

Birmingham 

Louisville 

Cincinnati- Hamilton 

Oayton-Spngfield 

Atlanta 

Oetroit-Ann Arbor 

Columbus 

Tsmipa-St. Petersburg-Clearwater 

Cleveland-Akron-Lorain 

Jacksonville 

Orlando 

Pittsburgh-Beaver Valley 

Chartotte-Gastonia-Rocky Hill 

Miami-Fort-Lauderdale 

Greensboro-Winston-Salem-High 

Buffalo-Niagara Fails 

Rochester 

Washington 

Richmond-Petersburg 

Baltimore 

Philadelphia-Winington-Trenton 
Norfolk-Virginia Beach-Newport News 
Hartford-New Britain-Middleton 
Albany-Schenectady-Troy 
New York-New Jersey-Long Island 
Boston-Lawrence-Salem 
Providence-Pawtucket-Fall River 
San Juan-Caguas-Ponce, PR 

MCnaii 



LATnVDE ISDNPCT 

POPUUTION LONCrrUDE TIMEZONB 

,000 dtf dtf <^ $ 



838 
227 
2421 
1414 
6042 
1385 
13770 
2370 
2030 
1065 
1858 
3641 
1323 
964 
3766 
1575 
2388 
2467 
979 
1307 
1572 
8181 
1237 
972 
923 
967 
1728 
948 
2737 
4620 
1344 
1995 
2769 
898 
971 
2284 
1112 
3001 
925 
1176 
980 
3734 
844 
2342 
5963 
1380 
1068 
851 
18120 
4110 
1125 
550 



21 

61 

47 

45 

37 

38 

34 

32 

33 

40 

39 

32 

30 

35 

32 

39 

44 

38 

35 

29 

42 

41 

39 

36 

33 

38 

39 

39 

33 

42 

39 

27 

41 

30 

28 

40 

35 

25 

36 

42 

43 

38 

37 

39 

39 

36 

42 

42 

40 

42 

41 

18 



-157 
-150 
-122 
■122 
-122 
-121 
-118 
-117 
-112 
-111 
-103 
-100 
-98 
-97 
-97 
-94 
-93 
-90 
-90 
-90 
-87 
-87 
-86 
-86 
-86 
-85 
-84 
-64 
-84 
-83 
-83 
-82 
-81 
-81 
-81 
-80 
-80 
-80 
-79 
-78 
-77 
-77 
-77 
-76 
-75 
-74 
-73 
-73 
-73 
-71 
-71 
-66 



3.30 

3.10 

3.40 

3.10 

4.00 

3.30 

4.50 

3.30 

3.30 

3.10 

3.10 

3.40 

3.10 

3.20 

3.40 

3.10 

3.30 

3.20 

3.10 

3.10 

3.10 

3.90 

3.10 

3.10 

3.10 

3.10 

3.20 

3.20 

3.20 

3.30 

3.10 

3.20 

3.30 

3.10 

3.20 

3.20 

3.10 

3.30 

3.10 

3.20 

3.20 

3.30 

3.20 

3.20 

3.80 

3.20 

3.00 

3.20 

5.00 

3.30 

3.00 

3.20 



C-2 




(S33jf ap) sprnp^q 



C-3 



8 T037 SCA DB3 



B:\SCARDHMSDNUBYT.WK3 September 16. 1991 



ISDN User vs Industry 

SCAR Database 2. 



Industry 



ISDN 

% 



BROADCAST 


4.0 


COMMUNICATION 


10.0 


CONSTRUCTION 


2.0 


DATA PROCESSING 


2.0 


EDUCATION 


6.0 


ENERGY 


2.0 


FINANCIAL 


8.0 


FOOD SERWICE 


2.0 


GOVERNMENT 


8.0 


LEGAL 


6.0 


LODGING 


4.0 


MANUFACTURING 


6.0 


MEDICAL 


6.0 


MILITARY 


10.0 


PUBLISHING 


4.0 


RECREATION 


4.0 


RESIDENTIAL 


2.0 


RETAIL 


4.0 


TRANSPORT 


6.0 


UTILITY 


2.0 


WHOLESALE 


2.0 


... 


-- Check 


21 Co>nl 


100.0 Normalizauoo 



C-4 



___ -w« -OO 3«. 

Ill 188 111 |g 



-*OOlO 0U1O ooo 
3 (OU)oj cnoj«- cM*oo 



* o in m ooo ooo 
f rvjCMOi n*-— ^_^ 

d 
b 
— ft* 

0*0010 vnoo ooo 
5 (SiflCM -vinn — '«u> 



^ «ooo ooo ooo 
2 u>u>i- n>-<- <M<ain 



«oou> ooo ooo 



B «ou)u> ooo ooo • 

a nCMO — m ■^ — 'V^ = 

a o 

3*ooo ooo ooo «» 

3 uiino r^ — f-« lo^co ^ 1 



'OOO ooo ooo 
<n n ^ cnoo oa>r» 



s 

a 



e*^ 



3 
C 



■j'ooo ooo ooo 
^i3 ^u>r« cncoto ncMcn 



11 



*ooo tnoo ooo 
u>inu) CMn'v invn 



u'oom looo ooo 
2 u> in b (Ni (ci V — lA in 



^L 



c 
o 



a. 
a. 

< 



<*OPO ooo opp 
• b»- uii^r^ ui "9 fi 



5 'I 



|«ou>in ooo opp 

q •wK»- a> at d eociK 

g «OUtO U)00 OOO 

g 'TMIO CM-^ (MJMCT 



3 • O O O 

J r^ O •- 



ooo OOO 

<n n o o m u) 



S *ooin ooo ooo 

M <n«CM u)^<n (ncNjcn 

|*ooo ooo ooo 

^j loioio uioo dpj« 



«ooo ooo oop 
oi — - ->o^ O'vn 



3#oioo inino ooo 

cS n ei ui rjo^ ^^^ 

s| 

S *ppo ooo ooo 

j loiho —obcvi uiobb 

3 ' " ^ - - 

S^'piop u)oo ooo 

^ n d ■^ doifii cvicMn 



<s 81 






^ w w 'w 

Stj J Q - 
5 3-sg JS2 aSf 



C-5 



8 T037 SCA DB3 



B^^CARDBVA PPVSTIM. WK3 



Septttnfaef 16. 1991 



Application vs Time Database 

SCAR Darabase 4 



\ 


0001-0800 


0801-1200 


1201-1800 


1801-2400 






midJSam 


8am/noon 


noon/6pm 


6pmJmid 






8 hours 


4 hours 


6 hours 


6 hours 


Chtk 


APPUCATION 


TIMENOl 


TIMENOl 


TIMEN03 


T1MEN04 


Sonmaiuaum 




% 


% 


% 


% 


% 


Voice(interactive) 

Volc8(message) 

Facsimile 


2.5 
2.5 
2.5 


32.0 
32.0 
32.0 


51.0 
51.0 
51.0 


14.5 
14.5 
14.5 


100.0 
100.0 
100.0 


FlleTransfer 

VideoBroadcasting 

VideoConference 


52.0 

10.0 

2.5 


3.0 
25.0 
32.0 


5.0 
30.0 
51.0 


40.0 
35.0 
14.5 


100.0 
100.0 
100.0 


InteractiveOata 

Transaction 

Teletex 


2.5 
2.5 
2.5 


32.0 
32.0 
32.0 


51.0 
51.0 
51.0 


14.5 
14.5 
14.5 


100.01 

100.0 

100.0 



C-6 



s 



s 






$.■5200 
5 



41 e o «rv o 
j^ 5 -g m - d 

I i 



■ yt o e o 

I ' g 8 g 



:£ 8 8 

(N VO vo 

ON r- 



o o o 
odd 



r>- p» >o 
<N r4 r~ 



o o o 
o d es 



S S 8 8 8 8 









(0 

(0 

Q 



^ I 






z 

Q 
0) 

0) 

> 



o o o 
o o d 



o o o 
lo d o 



o o o 

odd 
c\j •^ CJ 



O) 


s 








c 










0) . 










-1 "^ 










O) ^ 


•J 


^ o o o 


o o o 


O O O 


sa 


d d CO 


in in d 


d d d 


a 1 


^ 




T- CO CQ 


•^ T- CM 


S5 


3 








SO 


!ii 








.«^ 










s 


c 


« o o o 


o o o 


o o o 


o 


d d CNJ 


odd 


d d d 


1 

0) 






CO 


•V ■V TT 










0) 










k 










P 


2 


^ o o o 


o o o 


O O O 




g 


d d in 


S o o 


d d d 


3 


■^ 


CM TT TT 


T- CM T- 


ffi 


a 









JC ^ o o o 
a d d d 

S O O CO 



o o o 
d tn d 

CO CM CO 



o o o 
d d d 

CM CVJ ^ 



o 

< 
u 

V) 



(0 

o 

a. 
a 

< 



a; 

i 



If 

2 Q> <D 

8 8 



"^ CO ^ 

w> o S 

C w O 

(0 m o 

li: o o 

r- CD <D 

■i "2 "2 
Li- > > 



2 
<3 

■a £ 

(D o 

!5 c a5 



Appendix D 
Q.931 Protocol Simulation 

The Q931 process provides procedures for establishing, maintaining, and clearing network 
connections at the ISDN user-network interface. Messages are exchanged over the D- 
channel. The rriTT Recommendatio n 0.931. ISDN User-Network Interface Lavcr 3 
Specification for Basic Call Control p rovide a description of the procedures and functions. 

This protocol like all other protocol will be simulated at the message element level. All 
aspects of the protocol necessary set up an ISDN service, as depicted in the "Part of 
Unidirectional ISDN Call Scenario" will implemented. The protocols depicted by the 
Specification Design Language (SDL) diagrams will be converted to a matrix depicting the 
initial state, the intervening message, and the output state. In our example, the "Part of the 
SDL Diagram for Outgoing Call Setup Procedure" can be traced to seven record entries in 
the "Q931 Network-side States" matrix. The top level of the SDL diagram in this 
appendix is converted to the thini record in the Q931 matrix. In this way the many pages 
of SDL diagrams can be reduce to a single matrix that can now be accessed by the 
corresponding Q931 process. A view of both the user states and the network states for a 
preliminary version of the Q931 "Software Flow Diagram" process implementation is 
shown in the last pages of this appendix. That process description look more intimidating 
than it actual is. Less than ten line of code are needed to access the data in either matrix. 
The principal task is centered at reducing the many SDL diagrams to a single matrix. 



D-1 




D-2 




Government 
Systems 




/o 



Null 



SETUf 



Part of 
SDL Diagram 

for 

Outgoing Call 

Setup Procedure 



i.\S 



ProetMMt 

ftvum 



CALL 

raocccoiNO 



atl 



SMite 
indiCMien 



5.1.1 



Call 
initiaiieii 



5.13 



r«q«i«tt 



CALL 
mOCUOINO 



8T050 5CADAT 00134-00 

Spec Design Lang Dlag Call Setup Proc 

March 16, 1992 

Ref CCITT Blue Book volVl.ll Rec Q.931 



5.1.3 



Mora mio 

rMMMM 



SfTUP _, 

ACKNOWLEOOC 



Owartae 



5.1. 3 



Info 
rlQUMI 



INFORMATION 



OmtUd 



5.3.2 •! 



Rtiact 
'tauMi 



RCLEASC 
COMPLETC 



r< 



Null 



5.1.3 



INFORMATION 



Into 



Omtmp 



D-3 



8T044SCADAT 



093INrrA.WK3 



MtMI. I9W 



Q.931 Network-side States 



Initial 
Slalt 

NOO 

NOO 

NOO 

N01 

N01 

N01 

N01 

N01 

N02 

N02 

N02 

N02 

N02 

N03 

N03 

N03 

N03 

N03 

N04 

N04 

N04 

N06 

N06 

N06 

N06 

N06 

N06 

N07 

N07 

N07 

N08 

N08 

N08 

NOd 

N09 

N09 

Nog 

N09 
N10 
N10 
N11 
Nil 
N11 
N12 
N12 
N15 
N15 
N15 
N15 
N17 
N17 
N17 
N17 
N19 



15 

Initial 
Slau 



Primitive 

from Call Control 

SetUpRqst 



ProcRqst 

DisconnRqst 

RejRqst 
MorelnfoRqst 



DisconnRqst 
InfoRqst 
ProcRqst 
AlertRqst 
ProcRqst 

SetUpResp 
DisconnRqst 

SetUpResp 
DisconnRqst 



DisconnRqst 



DisconnRqst 



SetUpCompRqst 
DisconnRqst 



DisconnRqst 



NotifyRqst 

DisconnRqst 
ReleaseRqst 



DisconnRqst 
SuspRejRqst 
SuspResp 
DisconnRqst 
ResumeReJRqst 
ResumeResp 



14 
Primiuvt 
from Call Control 



Mtsiag* 
from User 



RESUME 
SETUP 

DISCONNECT 
[DisconnBCh] 



INFORMATION 

DISCONNECT 

[DisconnBCh] 



DISCONNECT 

[DisconnBCh] 

DISCONNECT 

[DisconnBCh] 

CONNECT 
DISCONNECT i 
RELEASE_COMPi 

ALERTING 
[DisconnBCh] 
CAI±_PROC 
DISCONNECT 
[DisconnBCh] 

CONNECT 
DISCONNECT 

[DisconnBCh] ^ 
DISCONNECT i? 
PROGRESS 
CONNECT 
[DisconnBCh] 
ALERTING 
SUSPEND 

DISCONNECT 
[DisconnBCh] 

DISCONNECT o 

RELEASE 
DISCONNECT 
[DisconnBCh] 



[DisconnBCh] 



DISCONNECT 
RELEASE_COMP 

u 

Message 
from User 



Message 
loUser 

SETUP 



Primitive 

lo Call Control 



Resumeind 
Setup Ind 



CALL_PROC 

[DisconnBCh] DisconnInd 
DISCONNECT 
RELEASE_COMP 
SETUP ACK 



[DisconnBCh] 

DISCONNECT 

INFORMATION 

CALL_PROC 

ALERTING 
PROGRESS 
[DisconnBCh] 

CONNECT 
DISCONNECT 
[DisconnBCh] 

CONNECT 
DISCONNECT 

[DisconnBCh] 



DISCONNECT 

[DisconnBCh] 

DISCONNECT 

[DisconnBCh] 

CONN_ACK 

DISCONNECT 

[DisconnBCh] 



DISCONNECT 



NOTIFY 
[DisconnBCh] 

DISCONNECT 

RELEASE 
[ReieaseBCh] 
[DisconnBCh] 

DISCONNECT 
SUSP_REJ 
SUSP_ACK 
DISCONNECT 
RESUME_REJ 
RESUME_ACK 
[DisconnBCh] 
[ReieaseBCh] 

16 
Message 

lo User 



Info Ind 
DisconnInd 



DisconnInd 



DisconnInd 



SetUpConf 

DisconnInd 

Releaselnd 

Alertind 

Procind 
DisconnInd 

SetUpConf 
DisconnInd 



DisconnInd 
Progressind 
SetUpConf 

Alertind 
Suspind 

DisconnInd 



Releaselnd 
DisconnInd 



DisconnInd 
Releaselnd 



Primitive 

lo Call Control 



New 
Slau 

N06 

N17 

N01 

N03 

N11 

N12 

NOO 

N02 

N02 

N11 

N12 

N02 

N03 

N04 

N03 

Nil 

N10 

N12 

Nil 

N10 

N12 

NOB 

Nil 

NOO 

N07 

N12 

N09 

Nil 

N12 

N08 

N11 

N10 

N12 

Nil 

N09 

N08 

N12 

N07 

N15 

N10 

Nil 

N12 

N19 

N19 

NOO 

Nil 

N12 

N10 

NOO 

N12 

N10 

N10 

Nil 

NOO 

IS 

Neiv 
Slate 



D-4 



»TO44SlMltUN 



QW1FD.W1U 



M»dilt,IWa 



Software Row Diagram 




PI :: PnxadndM 






»i<U): 


PaaaNav 


Twim 


Q931D«lay(PI) 


sac 



[ MSav* ) 



TIME.V. CdlRef. PI. Mag, Stuiulndei :: Entry 

-> {MSav»| 



Calculals ISONT»ID«lay 
f( CallRef, ProcAr(PI) ) 
WaH ISONTsI Delay 
I 
Calculata rwxt PI 
Datormlna n«xt Procass 

I 
FSIS I 

< Pl= 2,38,41,76 :: Usar skla? > 



I 



' = CallR8i,NawPI,... 




J ' 


cdnwAfon 






SaSMi 


0-> 


6 


0— > 


17 


0— > 


1 


1 -> 


3 


1 — > 


2 


2-> 


12 


2~> 





2-> 


3 


2-> 


11 


2-> 


2 


3~> 


4 


3-> 


10 


3-> 


12 


3-> 





3-> 


11 


4— > 


12 


4-> 





4-> 


11 


5-> 




6-> 


7 


6-> 


25 


6~> 


9 


6-> 





6-> 


8 


7-> 


12 


7-> 





7-> 


11 


7-> 


8 


8-> 


10 


8-> 


12 


8-> 





8-> 


11 


9-> 


12 


9-> 





9-> 


7 


9-> 


11 


9~> 


8 


10 -> 


12 


10 —> 





10 -> 


10 


10— > 


11 


10— > 


15 


11 — > 


19 


11— > 





12— > 





12— > 


19 


13— > 




14— > 




15— > 





IS— > 


10 


16— > 




17— > 


10 


17 -> 


10 


18 -> 




19 -> 





25 -> 


12 


25 -> 


25 


25 -> 





25 -> 


7 


25 -> 


11 


25 ~> 


9 


25 -> 


8 



UierStatt 

Go to CallRafAr(CalRa(,PI) 



Msg>S — > -Naxt Prooats w/*SI > and 

Msg-RR — > -Next Procass w/*R > and 

MsQ^SR — > -Naxt Procass WS > and 

Msg=CP — > -Naxt Procass vm^'PI > end 

Msg'SA — > -Next Process w/*MII > end 

Msg^D — > -Next Procass vt/'D\ > end 

Msg=R ~> -Next Procass w^*RI+RC > end 

Msg=CP — > -Next Process it/'Pi > end 

Msg=DR — > -Next Process wrD > end 

MsgsIR — > -Next Procass wri > end 

Msgs^ — > -Next Procass w/*AI > end 

MsgsK: — > -Next Procass wTSC > end 

Msg=D — > -Next Procass wTDI > end 

MsgsR — > -Next Procass wTRI+RC > end 

MsgsDR — > -Next Procass w/*D > and 

Msg«D — > -Naxt Process wTDI > end 

Msg>R — > -Naxt Procass wir*RI+RC > and 

Msg«R — > -Naxt Process \*rRI+RC > end 

— > [MSave] with TIME.V,CaURer.n.M>|.SanBlixk<::UOSEii 

MsQsAR — > -Next Procass wTA > end 

Msg«MIR — > -Next Procass mTSA- — > end 

Msg-PR — > -Naxt Procass \«rCP > end 

MsQ-RejR — > -Next Procass wTRC > end 

Msg»SR — > -Naxt Procass ^'C > end 

Msg-D — > -Next Process *i^*DI > end 

Msg°R — > -Next Process wTRI+RC > end 

MsgsOR — > -Next Process w/*D > end 

Msg^SR — > -Next Procass <m/'C > end 

Ms9^A — > -Next Process vi/'SC\ > end 

Ms9=D — > -Next Process WDI > end 

Msg^R — > -Next Process v«^*RI+RC > end 

Msg«DR — > -Next Procass wro > end 

Msg>D — > -Naxt Procass wTDI > end 

Msg^R — > -Naxt Procass wTRI+RC > end 

Msg=AR — > -Next Process w/'A > end 

Msg=DR — > -Next Process wro > end 

Msg=SR — > -Next Procass vt/'C > end 

Msg'O — > -Next Process w/'DI > end 

Msg-R — > -Naxt Procass vw^'RI+RC > end 

MsgiN — > -Naxt Procass v«'*NI > and 

MsgaOR — > -Naxt Process w/*D > end 

Msg^SR — > -Next Process <m/'S > end 

Mso=D — > -Next Process vmTR > end 

MsgsR — > -Next Process vn^'RI+RC > end 

Msg^R — > -Next Process wTRI+RC > end 

Msg=RR — > -Next Process wrR > end 

— > [MSava] with TIME.V, CaURcf. PI. Mag. StuwIndM :: U13 Eir 

— > (MSavaj with TlME.V.C<lllUr.n.Mjg.StuuIi>lu::UUEir 

MsgsSA — > -Next Process wrSC > end 

Ms9«SR — > -Next Process wTSRI > end 

—> [MSava] with TIME.V.CdlRef.PI.Mjg.StalMli>ki::UUEir 

Msg^RA — > -Next Process w/'RC- — > end 
MsgsRRej — > -Next Procass wTRRI > end 

—> [MSava] with TIME.V.C«nRef.PI.Mjg.SuniiIiiclc»::UUEw 

MsgsRC — > -Next Procass wrRC > end 

Msg»D — > -Next Procass w/*DI > end 

Msg'l — > -Next Process wril > end 

Msa=R — > -Next Process w^'RI+RC > end 

Msg=AR — > -Next Procass wi^'A > end 

Msg-DR — > -Next Process w/"D > end 

Msg=PR — > -Next Process w/*CP > end 

Msg=SR — > -Next Process w/'C > end 



D-5 





FSIS 1 




NelwoitStale Q931 


Oxum 


< Pl= 18,22,56,61 :: Nrtworkside? > — 


-y-> 


GotoCallR«lAf(CallR««,PI) 

1 




1 fnmaeum 


S«Su> 


1 




1 0— > 


6 


Msg=S — > -Next Process wrSI > end 




1 0— > 


17 


Msg^RR — > -Next Process wrR > end 




1 0— > 


1 


Msg=SR — > -Next Process w/'S > end 




1 1 — > 


3 


Msg=PR — > -Next Process w/*CP > end 




1 1 -> 


11 


Msg=D — > -Next Process w^'DI- — > end [Disconn B-Ch] 




1 1 -> 


12 


Msg=DR — > -Next Process wro > end [Disconn B-Ch) 




1 1 -> 





Msg=RejR — > -Next Process w^'RC > end 




1 1 — > 


2 


Msg=MIR — > -Next Process vn^'SA- — > end 




1 2-> 


2 


Msg»l — > -Next Prx>oess wni > end 




1 2-> 


11 


Msg=D — > -Next Process viii'*OI > end [Disconn B-Ch] 




1 2-> 


12 


Msg=DR — > -Next Process w/*D > end (Disconn B-Ch] 




1 2-> 


2 


Msg=IR — > -Next Process w/*l > end 




1 2~> 


3 


Msg=PR — > -Next Process w/'CP- — > end 




1 3-> 


4 


Msg=AR — > -Next Process w/*A > end 




1 3— > 


3 


Msg=PR — > -Next Process tt/'P- —> end 




1 3~> 


11 


MsgsD — > -Next Process wi'*DI > end [Disconn B-Ch] 




1 3— > 


10 


Msg=SR -> -Next Process ti/'C- — > end 




1 3-> 


12 


Msg=DR — > -Next Process wro > end (Disconn B-Ch] 




1 4-> 


11 


Msg=D — > -Next Process vn^'OI > end [Disconn B-Ch] 




1 4— > 


10 


Msg=SR — > -Next Process w^'C- — > end 




1 4-> 


12 


Msg=DR — > -Next Process wrD > end (Disconn B-Ch] 




1 5— > 




—> [MSave] with TIME.V.C>URef.PI.Msg.SunuIilde<::NOSEiT 




1 6— > 


8 


Msg=C — > -Next Process w/*SC > end 




1 6-> 


11 


Msg=D — > -Next Process w/*DI > end [Disconn B-Ch] 




1 6— > 





Msg=RC — > -Next Process wrRI > end 




1 6-> 


7 


Msg=A — > -Next Process wrAI > end 




1 6— > 


12 


Msg=DR — > -Next Process w/*D > end [Disconn B-Ch] 




1 6-> 


9 


Msg=CP — > -Next Process vi^'Pi- — > end 




1 7-> 


11 


Msg>D — > -Next Process w^'OI > end [Disconn B-Ch] 




1 7-> 


12 


Msg=DR — > -Next Process wrD > end [Disconn B-Ch] 




1 7-> 


8 


Msg=C — > -Next Process w^'SC > end 




1 8-> 


11 


Msg=D — > -Next Process vtf'Dl > end (Disconn B-Ch] 




1 8— > 


10 


Msg=SCR — > -Next Process wrCA > end 




1 8-> 


12 


Msg=DR — > -Next Process wrD > end (Disconn B-Ch] 




1 9-> 


11 


Msg-D — > -Next Process vn^'DI- -> end (Disconn B-Ch] 




1 9-> 


9 


MsgsP — > -Next Process w/*PI > end 




1 9-> 


8 


Msg=C — > -Next Process WSC > end 




1 9-> 


12 


Msg=DR — > -Next Process wrD > end (Disconn B-Ch] 




1 9-> 


7 


Msg=A -> -Next Process w/*AI- -> end 




1 10— > 


15 


Msg>S — > -Next Process wrSI > end 




1 10— > 


10 


Msg=NR — > -Next Process wrN- — > end 




1 11 —> 


11 


Msg=D — > -Next Process v^'Dh — > end [Disconn B-Ch] 




1 11— > 


12 


Msg=DR — > -Next Process wrD > end (Disconn B-Ch] 




1 11— > 


19 


MsgsR — > -Next Process »i'*RI? > end 




1 12— > 





Msg=R — > -Next Process vitf'RI- — > end (Release B-Ch] 




1 12 -> 


19 


Msg^D — > -Next Process w^*R > end 




1 13 -> 




— > [MSave] with TTME-V. CUUfaf. pi. Mjj. SanisLidei ;: N13 Eir 




1 14 -> 




— > [MSave] with TIME.V, CJlR«t, pi, Mjj, Sunalnde. :: NU En 




1 15— > 


11 


Msg=D — > -Next Process viii'*DI- — > end (Disconn B-Ch] 




1 15— > 


12 


Msg=DR — > -Next Process wrD > end [Disconn B-Ch] 




1 15 -> 


10 


MsgsSRejR — > -Next Process w/*SR > end 




1 15— > 





Msg«SR — > -Next Process w^'SA > end 




1 16 -> 




— > [MSave] with TIME.V. CillHef. pi, Msj, StanuLidct :: N16 En 




1 17 -> 


12 


Msg=DR — > -Next Process w/*D > end [Disconn B-Ch] 




1 17 ~> 


10 


Msg=RRejR — > -Next Process wrRRej > end 




1 17 ~> 


10 


Msg=RResp — > -Next Process w/'RA- — > end 




1 17 -> 


11 


Msg=D — > -Next Process wC'DI > end [Disconn B-Ch] 




1 18 -> 




— > [MSave] with TIME.V, CURtf, pi. Mij. Sanulinki :: N18 EiT 




1 19 -> 





Msg=RC — > -Next Process wrRC- -> end (Release B-Ch] 




[ MSave ] 








TIME.V, CallRef. I. Mjg. SlaRuIndei :: 
1 


P['10(PIem>r 






1 

end 







D-6 



Appendix E 
Measurement Save (MSave) Structure 

A copy of one of the MSave files generated by the FSIS Build 1 is provided in 
this appendix. 

The Measurement Save (MSave) contains the tinne sequenced data generated 
by the simulation. Every time a communication process is activated an entry is 
made in MSave. Also, all significant events, such as call connection, 
disconnection and blocking are saved in MSave. Periodically the internal 
MSave array is saved to disk as MSAVE##.DAT. Where ## represents a 
sequential digit starting with 1. These MSave files are the principal data 
sources for post simulation analyses. The contain all the data can be obtained 
from a particular simulation. 

The MSave contains data that is relevant to call processing in an ISDN era. It is 
expected that the data within MSave can be used to calculate throughput, 
response time, blocking probability, and robustness. By using these 
performance measure an advanced ISDN satellite can be postulated and tested 
using these simulation techniques. 

The MSave record consists of five fields: the simulation time, the call reference 
number, the PI, the protocol msg, and a status indicator. For FSIS Build 1, the 
protocol message was replace by the combination in the STF to show the 
Operation/B-channel/Orig City/Dest City. 

For example the first record of the MSave file in the appendix shows the 
simulation time in milliseconds-of-day: 

12661634 milliseconds after midnight 



The second field is call reference number associated with this call: 

6 is the Call Reference Number 

The third field identifies the number of the PI generating the record: 

41 is the PI 

For FSIS Build 1 , the forth field contains the last entry in the STF that originated 
the event. As mentioned previously: 



E-l 



112424 represents: 
1 :: Rqst 

1 :: B-Channel bearer service 
24 :: Originating City (Los Angeles) 
24 :: Destination City (Los Angeles) 



The fifth field represents the status of the Call Reference at the time indicated. 
For FSIS Build 1 these status definitions apply: 

1 Process entry 

2 Process exit 

3 Call Connect 

4 Call Disconnect 

5 Call Blocked 

Using the combination of Call Reference Number and Status index the 
progression of a call can be traced as it enters each process (PI) and the 
corresponding actions take for that call. 

For example: Call Reference #101 requested a B-Channel at 12801.000 
sees. That request progressed through 58 Pi's until it was connected at 
12801.996 sees. Call #101 requested a disconnect at 12979.000 sees; that 
disconnect request was affected at 12979.342 sees. 

The analysis: 12801.000 Rqst (Status = 1) 

1 2801 .996 Connected (Status = 3) 

therefore Connect Response Time: .996 sees 

12979.000 Term (Status = 1) 

12979.342 Disconnected (Status = 4) 

therefore Disconnect Response Time: .342 sees 

Call Reference #101 used the B-Channel between 

12979.342 
12801.996 



177.346 sees (2min 57.3sec) 

Note. Call Reference #7 requested a B-Channel at 12971.000. It was declared 
blocked (Status Index = 5) at 12971.996. 



E-2 



'riS 



f^.js\u . }>tT 



12661674 


6 


41112424 


1 


12661684 


6 


42112424 


1 


12661694 


6 


43112424 


1 


12661704 


6 


44112424 


1 


12661714 


6 


45112424 


1 


12661724 


6 


46112424 


1 


12661734 


6 


47112424 


1 


12661744 


6 


48112424 


1 


12661754 


6 


49112424 


1 


12661774 


6 


50112424 


1 


12661779 


6 


51112424 


1 


12661911 


6 


52112424 


1 


12661916 


6 


53112424 


1 


12661946 


6 


54112424 


1 


12661956 


6 


55112424 


1 


12661966 


6 


56112424 


1 


12661976 


6 


57112424 


1 


12661986 


6 


58112424 


1 


12661996 


6 


58112424 


3 


12801000 


101 


1115252 


1 


12801010 


101 


2115252 


1 


12801020 


101 


3115252 


1 


12801030 


101 


4115252 


1 


12801040 


101 


5115252 


1 


12801050 


101 


6115252 


1 


12801060 


101 


7115252 


1 


12801070 


101 


8115252 


1 


12801080 


101 


9115252 


1 


12801090 


101 


10115252 


1 


12801100 


101 


11115252 


1 


12801120 


101 


12115252 


1 


12801125 


101 


13115252 


1 


12801257 


101 


14115252 


1 


12801262 


101 


15115252 


1 


12801292 


101 


16115252 


1 


12801302 


101 


17115252 


1 


12801312 


101 


18115252 


1 


12801322 


101 


19115252 


1 


12801332 


101 


20115252 


1 


12801342 


101 


21115252 


1 


12801352 


101 


22115252 


1 


12801362 


101 


23115252 


1 


12801372 


101 


24115252 


1 


12801382 


101 


25115252 


1 


12801392 


101 


26115252 


1 


12801397 


101 


27115252 


1 


12801529 


101 


28115252 


1 


12801534 


101 


29115252 


1 


12801564 


101 


30115252 


1 


12801574 


101 


31115252 


1 


12801584 


101 


32115252 


1 


12801594 


101 


33115252 


1 


12801604 


101 


34115252 


1 


12801614 


101 


35115252 


1 



E-o 



Title and Subtitle 

Simulator Design for Advanced Satellite Designs and Experiments 
(Task Completion Report) 



NASA 



National Aeronautics and 
Space Administration 



Report Documentation Page 



1. Report No. 



2. Government Accession No: 



7. Aulhor(s) 

Gerard R. Pepin 



9. Performing Organization Name and Address 

GTE Government Systems 
15000 Conference Center Drive 
P.O. Box 10814 
Chantilly, VA 22021-3808 



12. Sponsoring Agency Name and Address 

NASA Headquarters 
Headquarters Acquisition Division 
300 7th Street, SW 
Washington, DC 20546-0001 



3. Recipient's Catalog No. 



5. Report Date 

30 March 1992 



6. Performing Organization Code 



8. Performing Organization Report No. 



10. Work Unit No. 



1 1 . Contract or Grant No. 

NASW-4520 



1 3. Type of Report and Period Covered 

Simulator Design Task Completion 
Report (25 SEP 90 - 1 MAR 92) 



14. Sponsoring Agency Code 



5. Supplementary Notes 



16. Abstract 

This Simulation Design Task Completion Report documents the simulation techniques associated with the 
network models of both the Interim Service ISDN Satellite (ISIS) and the Full Service ISDN Satellite 
(FSIS) architectures. The ISIS Network Model design represents satellite systems like the Advanced 
Communications Technology Satellite (ACTS) orbiting switch. 

The FSIS architecture, the ultimate aim of this element of the SCAR Program, moves all control and 
switching functions on-board the next generation ISDN communications satellite. The technical and 
operational parameters for the advanced ISDN communications satellite design will be obtained from the 
simulation of ISIS and FSIS engineering software models for their major subsystems. Discrete event 
simulation experiments will be performed with these models using various traffic scenarios, design 
parameters, and operational procedures. The data from these simulations will be used to determine the 
engineering parameters for the advanced ISDN communications satellite. 



17. Key Words (Suggested by Author(s)) 

ISDN, satellite, traffic network, simulation, 
ISDN standards, B-ISDN, frame relay, on-orbit 
switching, computer networks, satellite orbits, 
satellite transmission quality, network 
configuration, traffic model 



19. Security Classif. (of this report) 

Unclassified 



18. Distribution Statement 

Unclassified-Unlimited 



20. Security Classif. (of this page) 

Unclassified 



21. No. of pages 



22. Price 



