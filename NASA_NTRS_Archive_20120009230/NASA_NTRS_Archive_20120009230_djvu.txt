This work was done by Terrance L. Hunts- 
berger, Andrew B. Howard, Hrand Aghazar- 
ian, and Arturo L. Rankin of Caltech for 
NASA’s Jet Propulsion Laboratory. Further in- 
formation is contained in a TSP ( see page 1 ). 

In accordance with Public Law 96-51 7, 
the contractor has elected to retain title to this 
invention. Inquiries concerning rights for its 
commercial use should he addressed to: 
Innovative Technology Assets Management 

JPL 

Mail Stop 202-233 
4800 Oak Grove Drive 
Pasadena, CA 91109-8099 
E-mail: iaoffice@jpl.nasa.gov 
Refer to NPO-4 7533, volume and number 
of this NASA Tech Briefs issue, and the 
page number. 


@ LEGION: Lightweight Ex- 
pandable Group of Inde- 
pendently Operating Nodes 

LEGION is a lightweight C-langtiage 
software library that enables distrib- 
uted asynchronous data processing 
with a loosely coupled set of compute 
nodes. Loosely coupled means that a 
node can offer itself in service to a 
larger task at any time and can with- 
draw itself from service at any time, 
provided it is not actively engaged in 
an assignment. The main program, i.e., 
the one attempting to solve the larger 
task, does not need to know up front 
which nodes will be available, how 
many nodes will be available, or at what 
times the nodes will be available, which 
is normally the case in a “volunteer 
computing” framework. The LEGION 
software accomplishes its goals by pro- 
viding message-based, inter-process 
communication similar to MPI (mes- 
sage passing interface), but without the 
tight coupling requirements. The soft- 
ware is lightweight and easy to install as 
it is written in standard C with no ex- 
otic library dependencies. 

LEGION has been demonstrated in a 
challenging planetary science applica- 
tion in which a machine learning system 
is used in closed-loop fashion to effi- 
ciently explore the input parameter 
space of a complex numerical simula- 
tion. The machine learning system de- 
cides which jobs to run through the sim- 
ulator; then, through LEGION calls, the 
system farms those jobs out to a collec- 
tion of compute nodes, retrieves the job 
results as they become available, and up- 
dates a predictive model of how the sim- 
ulator maps inputs to outputs. The ma- 
chine learning system decides which 
new set of jobs would be most informa- 


tive to run given the results so far; this 
basic loop is repeated until sufficient in- 
sight into the physical system modeled 
by the simulator is obtained. 

This ivork was done by Michael C. Burl of 
Caltech for NASA’s Jet Propulsion Labora- 
tory. Further information is contained in a 
TSP (see page 1). 

This software is available for commercial li- 
censing. Please contact Daniel Broderick of 
the California Institute of Technology at 
danielb@caltech.edu. Refer to NPO-47910. 


@ Real-Time Projection to 
Verify Plan Success 
During Execution 

The Mission Data System provides a 
framework for modeling complex sys- 
tems in terms of system behaviors and 
goals that express intent. Complex activ- 
ity plans can be represented as goal net- 
works that express the coordination of 
goals on different state variables of the 
system. Real-time projection extends the 
ability of this system to verily plan achiev- 
ability (all goals can be satisfied over the 
entire plan) into the execution domain 
so that the system is able to continuously 
re-verily a plan as it is executed, and as 
the states of the system change in re- 
sponse to goals and the environment. 

Previous versions were able to detect 
and respond to goal violations when 
they actually occur during execution. 
This new capability enables the predic- 
tion of future goal failures; specifically, 
goals that were previously found to be 
achievable but are no longer achievable 
due to unanticipated faults or environ- 
mental conditions. Early detection of 
such situations enables operators or an 
autonomous fault response capability to 
deal with the problem at a point that 
maximizes the available options. 

For example, this system has been ap- 
plied to the problem of managing bat- 
tery energy on a lunar rover as it is used 
to explore the Moon. Astronauts drive 
the rover to waypoints and conduct sci- 
ence observations according to a plan 
that is scheduled and verified to be 
achievable with the energy resources 
available. As the astronauts execute this 
plan, the system uses this new capability 
to continuously re-verify the plan as en- 
ergy is consumed to ensure that the bat- 
tery will never be depleted below safe 
levels across the entire plan. 

In particular, this enables an execu- 
tion system to predict problems such as 
resource exhaustion before they occur. 
The models are expressed and executed 
in a way that can be optimized for real- 


time use in an embedded system. 

This luork was done by David A. Wagner, 
Daniel L. Dvorak, Robert D. Rasmussen, Rus- 
sell L. Knight, John R. Morris, Matthew B. 
Bennett, and Michel D. Ingham of Caltech for 
NASA’s Jet Propulsion Laboratory. For more 
information, contact iaoffice@jpl.nasa.gov. 

This software is available for commercial li- 
censing. Please contact Daniel Broderick of the 
California Institute of Technology at 
danielb@caltech.edu. Refer to NPO-47734. 


Q Automated Performance 
Characterization of DSN 
System Erequency Stability 
Using Spacecraft Tracking 
Data 

This software provides an automated 
capability to measure and qualify the fre- 
quency stability performance of the Deep 
Space Network (DSN) ground system, 
using daily spacecraft tracking data. The 
results help to verify if the DSN perform- 
ance is meeting its specification, therefore 
ensuring commitments to flight missions; 
in particular, the radio science investiga- 
tions. The rich set of data also helps the 
DSN Operations and Maintenance team 
to identify the trends and patterns, allow- 
ing them to identify the antennas of lower 
performance and implement corrective 
action in a timely manner. 

Unlike the traditional approach 
where the performance can only be ob- 
tained from special calibration sessions 
that are both time-consuming and re- 
quire manual setup, the new method 
taps into the daily spacecraft tracking 
data. This new approach significantly 
increases the amount of data available 
for analysis, roughly by two orders of 
magnitude, making it possible to con- 
duct trend analysis with good confi- 
dence. 

The software is built with automation 
in mind for end-to-end processing. 
From the inputs gathering to computa- 
tion analysis and later data visualization 
of the results, all steps are done auto- 
matically, making the data production at 
near zero cost. This allows the limited 
engineering resource to focus on high- 
level assessment and to follow up with 
the exceptions/deviations. 

To make it possible to process the con- 
tinual stream of daily incoming data 
without much effort, and to understand 
the results quickly, the processing needs 
to be automated and the data summa- 
rized at a high level. Special attention 
needs to be given to data gathering, 
input validation, handling anomalous 
conditions, computation, and present- 


16 


NASA Tech Briefs, May 2012 


