RL-TR-92-265 
Final Technical Report 
December 1992 


AD-A261 850 

.. 





} 


ARC DIGITAL RASTER 
IMAGERY (ADRI) 
DEVELOPMEMT 



Synectics Corporation 
Bradley A. Rogers 



APPROVED FOR PUBLIC RELEASE; DISTRIBUTION UNUMITED. 

93-05050 


^ 9 006 


iilMliill 




Rome Laboratory 
Air Force Materiel Command 
Griffiss Air Force Base, New York 










This report has been reviewed by the Rome Laboratory Public Affairs Office 
(PA) and is releasable to the National Technical Information Service (NTIS). At NTIS 
it will be releasable to the general public, including foreign nations. 

RL-TR-92-265 has been reviewed and is approved for publication. 


APPROVED: 

JAMES A. SIEFFERT 
Project Engineer 




FOR THE CCMIANDER: 


ft. 

ALBERT JAMBERDINO 

Acting Technical Director 

Intelligence & Reconnaissance Directorate 


If your address has changed or if you wish to be removed from the Rome Laboratory 
mailing list, or if the addressee is no longer employed by your organization, please 
notify RL( IRRIP Griffiss AFB, NY 13441-5700. This will assist us in maintaining a 
current mailing list. 


Do not return copies of this report unless contractual obligations or notices on a 
specific document require that it be returned. 






REPORT DOCUMENTATION PAGE 


PubicrapafttigbLRlinfarthiBcclacUanaf irfanratlanlsasIiTiatadtaavaraga i hcu per mponML Mudng th* tira for raviaw^ hstructians, ssarcting existing das soixces. 
gathering and mairtairing ttw data naadad, and co rntia i ng and teviaMing thacolactian of tia ine ti cri Sard ua ia fta ragardng ttis txadan estrnae cx ary other aspea of this 
colactlonofW o ttTiatlor\>idLa>ig a gg Balin n e forredix * igthl a bLfdarttoWaahth6>onHaadquaitetaServlcaa, Dlractoraa for HormaianOperaions and Reports. t 2 is Jeffason 
Davie Hltfarair. Suta ia>4, Aifci^ort VA 22202-430Z, and to tha Offload M a iagatTart and Btdgat. Papawv a l r flaductlon Protect (0704-0188). Washincfon. DC 20S03 


1. AGENCY USE ONLY (Leave Blank) 


2 . REPORT DATE 

December 1992 


a REPORT TYPE AND DATES COVERED 
Final Feb 91 - Oct 91 


4. TITLE AND SUBTITLE 

ARC DIGITAL RASTER IMAGERY (ADRI) DEVELOPMENT 

a FUNDING NUMBERS 

C - F30602-91-D-0003, 

Task 1 

PP _ 9704QP 

a AUTHOR(S) 

Bradley A. Rogers 

PR - PMPD 

TA - QH 

WU - 01 

7. PERFORMING ORGANIZATION NAME(S) AND ADDRESS(ES) 

a PERFORMING ORGANIZATION 

Synectics Corporation 

111 East Chestnut Street 

Rome NY 13440 

REPORT NUMBER 

N/A 

9. SPONSORING/MONITORING AGENCY NAME(S) AND AOORESS(ES) 

Rome Laboratory (IRRP) 

10. SPONSORING/MONITORING 

AGENCY REPORT NUMBER 

21 Hangar Road 

Grlffiss AFB NY 13441-4114 

RL-TR-92-265 

11. SUPPLEMENTARY NOTES 


Rome Laboratory Project Engineer: James A. Sleffert/IRRP/(315) 330-2344 

12a DISTRIBUTlON/AVAlLABILfTY STATEMENT 

Approved for public release; distribution unlimited. 

12b. DISTRIBUnON CODE 


1 a ABSTRACT (Vaadam zoo word^ 

This document gives a general overview of the software developed and is intended to 
provide the knowledge necessary to understand the capabilities and general operation. 

A full set of design and testing documents were produced. This document is not intended 
to be a stand-alone user's manual or maintenance manual. 

The ADRI development system provides a baseline capability to exploit the ADRI product. 
It provides the ability to perform point positioning against ADRI, as well as the 
ability to create a compressed ADRI product. The point positioning capability can be 
performed utilizing either compressed or noncompressed ADRI. The ADRI data 
compression subsystem provides the capability to take a raw, noncompressed, ADRI 
product and compress it by a factor of approximately 18:1. 


14. SUBJECT TERMS 

ADRI, ARC Digital Raster Imagery, Point Positioning, Image 
Compression 


IS NUMBER OF PA(3ES 


1ft PRICE CODE 


17. SECURITY CLASSIFICATION 
OF REPORT 
UNCLASSIFIED 


754001-2804800 


1 a SECURITY CUSSIFICADON 1 a SECURITY CLASSIFICATION 
OF THIS PAGE OF ABSTTTACT 

UNCLASSIFIED UNCLASSIFIED 


. LIMITATION OF ABSTRACT 
UL 


SUndM Farm 288 (Rn 2 89) 
PrMCribad ANSI Std Z39 18 























1.0 OVERVIEW 


This document gives a general overview of the software developed 
under the ARC Digital Raster Imagery Development effort. This 
document is intended to provide a user of this software with the 
knowledge necessary to understand the capabilities and general 
operation of the software. A full set of design and testing 
documents, including the documents listed below, were produced for 
this effort: 

V Software Requirements Specification 

V Interface Requirements Specification 

V Software Programmer's Manual 

>1 Computer Resources Integrated Support Document 

V Software User's Manual 

V Software Test Plan 

V Software Test Description 

This document is not intended to be a standalone user's manual 
or maintenance manual. For design and use details beyond the scope of 
this document, the user is referred to the appropriate documents as 
listed above. 


1.1 SYSTEM OVERVIEW 

The ARC Digital Raster Imagery Development (ADRID) system 
provides a baseline capability to exploit the ARC Digital Raster 
Imagery (ADRI) product. The ADRID system provides the ability to 
perform point positioning against ADRI, as well as the ability to 
create a compressed ADRI product. The point positioning capability 
can be performed utilizing either compressed or non-compressed ADRI. 

The ADRID system consists of two subsystems: 

V ADRI Exploitation 

V ADRI Data Compression 

The ADRI Exploitation subsystem provides point positioning 
capabilities in three languages: C, Ada, and FORTRAN. Each of the 
three implementations of this software has the following capabilities: 

V Point Positioning V Magnify Image 

V Visit Geographic Point V Adjust Contrast 

V Visit File Point V Restore Contrast 

V Save Point V Decompress Compressed ADRI 

The ADRI Data Compression subsystem provides the capability to 
take a raw, noncompressed, ADRI product and compress it by a factor of 
approximately 18:1. The compressed data is written to a compressed 
ADRI file that is similar in format to the standard ADRI product (see 


1 




Appendix B for details of the compressed format). The ADRI Data 
Compression subsystem contains four individual programs. Each of the 
programs must be executed in succession to produce a compressed and 
formatted ADRI product. The programs are: 

V Train 

V Encode 

V Packager 

V Compare 


2.0 USE OF ADRI POINT POSITIONING SOFTWARE 


2.1 SYSTEM INITIALIZATION FOR POINT POSITIONING SOFTWARE 

The point positioning software, as delivered under the ADRID 
effort, is hosted on a Sun Sparc IPC processor, running under the 
SunOS 4.1.1 operating system. This software also requires that an Xll 
or Xll/NEWS server be installed on the host system or be accessible 
from a network. 

In order to utilize the adrix application, your workstation must 
be booted. Boot procedures vary from one system to another. The 
following instructions apply to the general case in which default 
procedures are followed in starting up a Sun workstation. For the 
details of booting your particular workstation you should contact your 
system or facility manager. 


2.1.1 GENERAL SUN BOOT PROCEDURE 

The following general procedures should be followed to boot your 
workstation. Additional instructions can be found in the Sun System 
Administrator's Guide, Sun Sparc User's Guide, and the Sun Sparc 
Installation Guide. 

1) Power on all external devices, including the monitor, 
external hard disks, CD-ROM drives, tape drives, etc. 

2) Power on the main system unit. Following power-on, the 
system will boot. During the boot phase several pages of 
diagnostics will appear. After several minutes a login 
prompt will appear, indicating that the system is ready for 
use. If the system fails to boot, check to make sure all 
devices are powered on. If no problem is found, contact 
your system or facility manager. 


2.2 APPLICATION INITIALIZATION FOR POINT POSITIONING SOFTWARE 


2 




The following instructions detail the procedure of logging into 
the host workstation and initializing the adrix application. These 
instructions assume that the adrix software is installed on the host 
system, the user has a user ID and password on the host system, and 
has access to the adrix executables and ADRI data sets from his/her 
account. 

To initialize the adrix application execute the following 
instructions (boldface indicates user inputs, and italics indicate 
inputs that will vary depending on specific circumstances): 

1) Log in on the host system. On the delivery system this is 
accomplished by entering the following at the login prompt: 

sface_sun login: adrid 
password: password 

2 ) Following the entry of the user name (adrid) and the 
password, the login procedures will execute. At this point 
the Xll/NEWS server should also start. If the window 
server does not start, or you are unsure whether the window 
server has started, contact your system or facility 
manager. The instructions in the remainder of this 
document assume that the window server starts at login, and 
that the user is running the Open Windows graphical user 
interface. Other graphical user interfaces will vary in 
their behavior. 

3) When the command window appears, use the mouse to place the 
cursor in the command window, and click the left-hand 
button. The command line cursor in the command window will 
be highlighted, indicating that the command window is now 
active. 


4) 


At this point you must decide which version of the adrix 
application to execute. As detailed in the design 
documentation for CSCI 1, there are three equivalent 
implementations of the adrix application. These three 
versions are written in C, Ada, and FORTRAN. To execute 
the desired version you must change to the appropriate 
directory. On the system used for testing and delivery 


this is accomplished with one of the following commands: 


Vc 

version 



Acceslon For / 





NTIS CRA&I [ji 


• sface sun% 

cd 

c/source/adrix 

OTIC TAB □ 

Unannounced Q 


Ada version 



Justificdtton 


• sface_sun% 

cd 

ada/source/adrix 

By 





Oistfibulion / 

i_-- 


DTiY"! -r 'TV T:Tr.PFGTED 1 


Av.ii(aDility Cories 

I Awdil arid / O' 

I ‘Special 



3 






V FORTRAN version 

• sface_sun% cd fortran/source/adrix 

5) After executing the cd command in step 4, you will be in 
the directory containing the appropriate executable. To 
run the adrix application enter the following command: 

sface_sun% adrix adri_patb ±nxt±al_latitude 
initial_longitude 

In this command the adri_path is the path to the directory 
containing the transmittal header (.THF) file for the ADRI 
data set with which you wish to work. On the system used 
for delivery and testing this path would be 
"/files/adritest/noncomp_adri" if you wish to utilize 
noncompressed ADRI, or "/files/adritest/comp_adri" if you 
wish to utilize compressed ADRI data. The initial_latitude 
and initial_longitude arguments indicate the coordinates on 
which the data is to be centered on application startup. 
These coordinates are optional, and are expressed in 
decimal degrees. 

6) After the above command is entered at the Unix command 
line, the adrix application will initialize, and the 
specified ADRI data set will be displayed. If the 
application fails to start, see Section 4 for an 
explanation of errors. 


2.3 APPLICATION FEATURES 

The adrix application gives the user the ability to perform a 
number of ADRI exploitation functions. These functions, and a brief 
description of each, are as follows: 

V Point Positioning - Allows the user to determine the latitude, 
longitude, and elevation of a point within the coverage of the 
ADRI data set. This function is selected by use of the mouse 
buttons. 

V Visit Geographic Point - Allows the user to specify a latitude 
and longitude, and recenter the image display on that point. 
This function is selected from a menu bar button at the top of 
the screen. 

V Visit File Point - Allows the user to select a previously 
saved latitude and longitude and recenter the image display on 
that point. The point is selected from a list of points 


4 




previously saved using the SAVE POINT function. This function 
is selected from a menu bar button at the top of the screen. 

V Save Point - Allows the user to save the latitude and 
longitude of the current center point of the image display. 
This point can later be viewed through use of the VISIT FILE 
POINT function. This function is selected from a menu bar 
button at the top of the screen. 

V Magnify - Allows the user to magnify the center of the current 
full-resolution image display by a factor of 2X. This 
function can be called numerous successive times, with each 
call magnifying by 2X. The magnification limit is reached 
when the entire full-resolution display window consists of 
just four pixels. This function is selected from a menu bar 
button at the top of the screen. 

V Adjust Contrast - Allows the user to perform a clip and 
stretch contrast enhancement on both the overview and full- 
resolution image window simultaneously. This function is 
selected either by a menu bar button at the top of the screen, 
or by pressing the center mouse button when the cursor is 
within an image window. 

V Restore Contrast - Allows the user to restore image contrast 
to its default setting after the ADJUST CONTRAST function has 
been executed. This function is selected from a menu bar 
button at the top of the screen. 

V Exit - Allows the user to quit from the adrix application and 
return to the Unix command line. This function is selected 
from a menu bar button at the top of the screen. 

The next section describes the use of each of these features. 


2.4 USER INPUTS 

This section describes the use of each of the ADRI exploitation 
functions described in Section 2.3. The instructions given in this 
section assume that the host workstation is booted, the user is logged 
in, and one of the three versions of the adrix application has been 
successfully initialized with proper ADRI and DTED data sets. 


2.4.1 POINT POSITIONING 

1) Use the mouse to place the cursor on the desired point 
within either the overview or full-resolution window. 


6 





2) With the cursor on the desired point, press the left-hand 
mouse button, A menu will appear below the cursor with the 
following options: 

"SET CURRENT POINT HERE" 

"RECENTER DISPLAY AND SET CURRENT POINT" 

3) Use the mouse to place the cursor on the desired option, 
and press any of the mouse buttons to select the option. 

If the SET CURRENT POINT HERE option was chosen, the 
latitude, longitude, and elevation of the point will be 
displayed in the geographic information window. 

If the RECENTER DISPLAY AND SET CURRENT POINT option was 
chosen, the latitude, longitude, and elevation will be 
displayed in the geographic information window, and both 
the overview and full-resolution image windows will 
recenter on the selected point. 


2.4,2 VISIT GEOGRAPHIC POINT 

1) Use the mouse to place the cursor on the VISIT GEO POINT 

button on the menu bar at the top of the screen. 

2) With the cursor on the menu button, press the right-hand 

mouse button to select the function. An input window will 

appear. 

3) Use the keyboard to enter the desired latitude and 
longitude in the input window, then press return. The 
input window will disappear, and both the overview and 
full-resolution image windows will recenter on the 
coordinates that have been entered. The latitude, 
longitude, and elevation will be updated in the geographic 
information window. 


2.4.3 VISIT FILE POINT 

1) Use the mouse to place the cursor on the VISIT FILE POINT 

button on the menu bar at the top of the screen. 

2) With the cursor located on the menu button, press the 
right-hand mouse button to select the function. A list of 
point names will appear below the menu button. 

3) Locate the name of the point you wish to visit, and use the 

mouse to place the cursor on the desired name. 


6 




4) 


With the cursor on the name of the desired point, press the 
right-hand mouse button. The name list will disappear, and 
both the overview and full-resolution image windows will be 
recentered on the selected point. The latitude, longitude, 
and elevation will be updated in the geographic information 
window. 


2.4.4 SAVE POINT 

1) Use the POINT POSITIONING, VISIT FILE POINT, or VISIT 
GEOGRAPHIC POINT functions (as described above) to select a 
current point to be saved. 

2) Use the mouse to place the cursor on the SAVE POINT button 
on the menu bar at the top of the screen. 

3) With the cursor located on the menu button, press the 
right-hand mouse button to select the function. An input 
window will appear near the bottom of the screen. 

4) Use the keyboard to enter a name for the current point in 
the input window, then hit return. The input window will 
disappear, and the latitude, longitude, elevation, and name 
of the point will be appended to the saved points file. 


2.4.5 MAGNIFY 

1) Use the POINT POSITIONING, VISIT FILE POINT, or VISIT 
GEOGRAPHIC POINT functions (as described above) to select a 
current point and recenter the overview and full-resolution 
windows on the point to be magnified. 

2) Use the mouse to place the cursor on the MAGNIFY button on 
the menu bar at the top of the screen. 

3) With the cursor on the menu button press the right-hand 
mouse button to select the function. The full-resolution 
image window will be magnified by a factor of 2X, centered 
on the center point of the full-resolution image window 
before magnification. 


2.4.6 ADJUST CONTRAST 

1) If an image pixel brightness histogram is not currently 

displayed in the bottom right-hand corner of your screen, 
do one of the following to bring up the histogram: 

V Use the mouse to place the cursor within one of the image 


7 







display windows, and press the center mouse button. The 
image pixel brightness histogram will appear near the 
bottom right-hand corner of the screen. 

V Use the mouse to place the cursor on the ADJUST CONTRAST 

button on the menu bar at the top of the screen. With the 
cursor on the menu button, press the right-hand mouse 
button. The image pixel brightness histogram will appear 
near the bottom right-hand corner of the screen, 

2) Use the mouse to place the cursor within the image pixel 
brightness histogram at the desired lower brightness value. 
With the cursor at this location press the left-hand mouse 
button. The low end of the histogram will be clipped to 
this brightness, and the contrast will be stretched and 
updated in both the overview and full-resolution image 
display windows. 

3) Use the mouse to place the cursor within the image pixel 
brightness histogram at the desired upper brightness value. 
With the cursor at this location press the right-hand mouse 
button. The high end of the histogram will be clipped to 
this brightness, and the contrast will be stretched and 
updated in both the overview and full-resolution image 
display windows. 


4.7 RESTORE CONTRAST 

1) Use the mouse to place the cursor on the RESTORE CONTRAST 
button on the menu bar at the top of the screen. 

2) With the cursor located on the menu button press the right- 
hand mouse button. The contrast in both the overview and 
full-resolution image windows will be restored to its 
setting before execution of any previous ADJUST CONTRAST 
operations. 


4.8 EXIT 

1) Use the mouse to place the cursor on the EXIT button on the 
menu bar at the top of the screen. 

2) With the cursor located on the menu button press the right- 
hand mouse button. The application will terminate, and the 
user will be returned to the Unix command line. 


0 USE OF THE ADRI DATA COMPRESSION SOFTWARE 


8 





3.1 SYSTEM INITIALIZATION FOR DATA COMPRESSION 


All programs within the data compression subsystem were designed 
for the Unix operating system. Commands and procedures for working 
within Unix may be found in the documents which came with the host 
machine. General initializations procedures are outlined in Section 


2 . 1 . 


Otherwise, the only initialization specific to this software is 
setting the environment variable ISO_PATH. ISO_PATH must be set to 
the directory containing the THF file of the AD^I data set to be 
compressed. 


3.2 USER INPUTS 

Three standalone programs must be run to execute this CSCI. 

These programs are Train, Encode, and Pkgr (Packager) . Encode may be 
run multiple times in order to split a large image into several 
smaller runs. These programs and their user inputs are described 
below. 

Additionally, there are two utility programs provided to aid in 
viewing the results of the compression. Compare gives a statistical 
analysis of the compression process for a given image and code book. 
Display allows compressed and noncompressed images to be viewed on an 
8-bit console monitor. These programs and their user inputs are also 
described below. 


3.2.1 TRAIN 

Train accepts noncompressed ADRI as input, samples the data, 
performs LOT on the samples, and does the VQ build and DCTinv to 
produce a code book. 


3.2■1.1 _ Command Line 

train <fname> [-s size] [-p psize] [-d dir] 

<fname> is in the form of "ssccddnn.IMG" or "ssccddnn.OVR'. It 
specifies the ADRI image file, which is in ISO 8211 format, to be 
compressed. 

size represents the dimension of the training set to extracted. 
It is best if this is a multiple of 4. The default is 512, which 
causes the equivalent of a 512 by 512 pixel portion of the image to be 
used for training. 


9 






pslze represents the cluster or patch size of image samples: 1 
means that an 8x8 pixel patch is processed on each access to the file; 
2 means a 12x12 patch; n accesses an (n+l)*4 squared patch. The 
accepted range for psize is 1 through 31. The default value is 1. 

dir represents the directory where the code book produced for 
this image is to be located. The default is the local directory 
("./") . 


3.2.2 ENCODE 

Encode accepts a noncompressed ADRI image file and its 
corresponding code book as input. It compresses the data using Lapped 
Orthogonal Transform (LOT), Vector Quantization (VQ), and Arithmetic 
Coding (AC) compression techniques. It produces a compressed data set 
as output. This typically runs in batch mode and can specify partial 
images to be compressed. This facilitates restarting the compression 
of very large images if some unforeseen interruption of the process 
should occur. 


3.2.2.1 _ Command Line 

encode <fname> [-s s_tile] [-n n_tiles [-d dir] 

<fname> is in the form of "ssccddnn.IMG" or "ssccddnn.OVR'. It 
specifies the ADRI image file, which is in ISO 8211 format, to be 
compressed. 

s_tile is the starting tile number for this compression run. 
This may range from 1 through the total number of physical tiles in 
the image. The default is 1, i.e., the first tile of the image. 

n_tiles represents the number of sequential physical tiles to 
extract and compress. If n_tiles is not specified, all remaining 
tiles (i.e., from the starting tile through the end) will be 
processed. 

dir is the directory where the corresponding code book for the 
image is located. The default is the local directory ("./"). 


3.2.3 PKGR 

The Pkgr program concatenates the output of the compression 
process into one file in the ISO 8211 format. 


10 






3.2,.. 3 ..1_Command Line 


pkgr <base> [in_path [out_path] ] 


<base> is the name of the compressed image or overview file to 
be created. It must be in the form "ssccddnn.IMC" or "ssccddnn.OVC". 
This base is used to internally generate the following names of input 
files which were produced by either Train or Encode. 


ssccddnn.CDBK 
ssccddnn.00001.tCDIX 
ssccddnn.00001.tCDSQ 
ssccddnn.xxxxx.tCDIX 
ssccddnn.xxxxx.tCDSQ 


code book file 
index(es) to start of tiles 
compressed data stream(s) 
index(es) to start of tiles 
compressed data stream(s) 


where the value of "xxxxx" is determined by the number of tiles in the 
previous index and data sequence files, and where "t" is either "I" or 
"O" for an "IMC" or "OVC" file, respectively. 


ln_path is the optional input file path. The default is the 
local directory ("./"). 

out_path is the optional output file path. If this is 
specified, then in_path must also be specified. 


3.2.4 COMPARE 

Compare accepts a noncompressed ADRI image file and its 
corresponding code book as input, and runs a statistical analysis on 
the original image, a compressed-decompressed image, and the 
difference image of the two. This typically runs in batch mode and 
can specify partial images (contiguous physical tiles) to be compared. 
See Appendix A for the statistics collected and the corresponding 
formulas. 


3.2.4.1 _ Command Line 

compare <fname> [-s s_tile) [-n n_tiles [-d dir] 

<fname> is in the form of "ssccddnn.IMG" or "ssccddnn.OVR'. It 
specifies the ADRI image file, which is in ISO 8211 format, to be 
compared. 

s_tile is the starting tile number for this comparison run. 

This may range from 1 through the total number of physical tiles in 
the image. The default is 1, i.e., the first tile of the image. 

n_tiles represents the number of sequential physical tiles to 


11 





extract and compare. If n_tiles is not specified, all remaining tiles 
(i.e., from the starting tile through the end) will be processed. 

dir is the directory where the corresponding code book for the 
image is located. The default is the local directory ("./"). 


3.2.5 DISPLAY 

Display extracts contiguous logical tiles of compressed ADRI, 
decompresses them, and displays them on the system console. 


3.2.5.1 _ Command Line 

display <fname> [-t col row] [-s scale] [-w width] [-h 
height] 

<fname> is in the form of "ssccddnn.ext" where ext must be 
"IMC", "IMG", "OVC", or "OVR". It specifies the ADRI image file 
(either compressed or not) to be displayed. The support data file 
(i.e., GEN file) for this image is also derived from this parameter. 

col row represent the logical tile coordinates of the upper 
left tile to the display. The default is 0 0 (i.e., the upper left 
corner of the image). 

scale is a pixel intensity multiplier. This is needed to 
brighten dark imagery. The default is 4. 

width specifies the width of the displayed image in tiles. The 
default is 4. 

height specifies the height of the displayed image in tiles. 

The default is 4. 


3.3 OUTPUTS 

This section describes the expected output for the three 
programs discussed above. 


3.3.1 TRAIN 

Train produces a code book file with a name of either 
"ssccddnn.ICDBK" or "ssccddnn.OCDBK," for a detail image file or 
overview image file, respectively. Train also produces the mean 
square error of the code book after each LBG iteration and after 
convergence is printed to standard out. 


12 







3.3.2 ENCODE 


Encode produces two files. The first is a compressed data 
stream file with a name of "ssccddnn.xxxxx.ICDSQ" or 
"ssccddnn.xxxxx.OCDSQ," for a detail or overview image file, 
respectively. Since the length of each encoded tile is not predefined 
due to the use of arithmetic coding, the offset to the^start of each 
tile must also be provided. This information is given in the code 
index file, which has the same name as above except with an extension 
of either "ICDIX" or "OCDIX." For both files, the "xxxxx" is the file 
name and is the starting tile number contained in the files. Also, 
the input and output file sizes and compression statistics are printed 
to standard out. 


3.3.3 PKGR 

Pkgr produces a single file with an extension of either "IMC" or 
"OVC". It contains the compressed form of the ADRI image in ISO 8211 
format. 


3.3.4 COMPARE 

Compare prints the imagery statistics to the standard output 

file. 


3.3.5 DISPLAY 

Display places the imagery in a SunView window. 


4.0 ERROR MESSAGES 


4.1 ERROR MESSAGES FOR POINT POSITIONING 

All error messages output by the adrix application are self 
explanatory. The majority of error messages produced by the 
application are generated on application startup. Messages generated 
on application startup will cause application initialization to fail, 
and leave the user at the Unix command line. 

The only error message produced during application execution 
occurs when the user attempts to use the point positioning function 
without a proper DTED data set installed on the system. An error 
message will be generated on the console indicating that the DTED 
files are not present. This error will not be visible to the user 


13 






until exiting from the application. However, when the no DTED 
condition occurs, an elevation of zero will be displayed for all 
points selected while in the adrix application. 


4.2 ERROR MESSAGES FOR DATA COMPRESSION 

The error messages which may be produced by the programs 
discussed in Section 3.2, above, are described in this section. 

The errors that may be produced fall into two categories: 

V User input errors 

V System environment errors 

An error from the first category occurs when erroneous input is 
given to a program. Each program is designed to print a general usage 
statement when a syntactic error occurs on the command line, such as 
specifying an option which does not exist. A usage statement gives 
the command line expected with a brief explanation of the options and 
parameters available. When the syntax of the statement is correct but 
a problem exists with the value of one of the parameters, more detail 
concerning the problem is given. For example, a value may be out of 
range or a file may not exist. Generally, instructions for correcting 
such problems are included in the error message. If a file does not 
exist, check for common errors such as misspelling of file names, 
being in the wrong directory, etc. 

All other errors, such as a memory allocation error, are beyond 
the scope of the user to fix. Such error messages should be recorded 
and given to the appropriate personnel. 


14 







APPENDIX A 


1.0 SYSTEM ARCHITECTURE 


The ADRI Exploitation test bed architecture is presented in 
Exhibit A-1. The test bed is the only segment being defined by this 
document, and will consist of the hardware and software for exploiting 
the ADRI product. 

There are two Hardware Configuration Items (HWCIs) which are a 
SUN SPARCStation with a 16-inch color display, high capability hard 
disk subsystem, and high capacity cartridge tape subsystem; and a DEC 
MicroVAX-II with an 8-bit programmable display adapter, color display 
monitor, high capacity hard disk, 9-track tape drive, and an optical 
disk subsystem. 


There are two Computer Software Configuration Items (CSCIs). 

The first CSCI is the ADRI exploitation capability. This item 
executes as an integrated package with all capabilities accessible 
through the use interface. The primary purpose of this CSCI is to 
perform precise monoscopic point positioning. This CSCI consists of 
three primary Computer Software Components (CSCs), each an equivalent 
implementation of the same application written in three different 
languages: C, Ada, and FORTRAN. Support capabilities which are 

identified as lower level CSCs are: 

V Point Positioning - This is the user selection of a point of 
interest and the display of that point's latitude, longitude, 
elevation, and linear and circular error estimates. 


Visit Geographic Point - This allows a user to specify a point 
that becomes the center of the area of interest. 


V Visit File Point — This allows a user to retrieve a point that 
has been saved and make it the center of the area of interest. 

V Save Point — This allows a user to save a point with a unique 
identifier for later use. 

V Magnify — This allows a user to zoom in or out on the displayed 
area of interest. 

V Adjust Contrast — This allows a user to adjust the contrast 
levels on a displayed image. 

V Restore Contrast — This allows a user to restore the original 
contrast levels on a displayed image. 


15 





V 


Decompress — Converts compressed ADRI imagery into a format 
usable by the internal data structures of ADRI applications. 


Exhibit A-1 

System Architecture for the ADRI Exploitation Test Bed 


ADRI 

Exploitation 
Test Bed 
(Segment 1) 



ADRI 


ADRI Data 


ADRI 

Exploitation 
(CSCI 1) 


Compnjssion 


Decompression 


(CSCI 2) 


(CSC 1.8) 




C 

adiix 

(CSC 1.1) 

c 

adrix 

(CSC 1.2) 

C 

adrix 

(CSC 1.3) 


Train 
(CSC 2.1) 

Encode 
(CSC 2.2) 

Point 

Positioning 
(CSC 1.1.1) 

Point 

Positioning 
(CSC 1.2.1) 

Point 

Positioning 
(CSC 1.3.1) 


Packager 
(CSC 2.3) 

Compare 
(CSC 2.4) 


Visit 

Visit 



Geographic 

Geographic 


1 

■ IM 

Point 


1 (CSC 1.1.2) i 

(CSC 1.2.2) 

(CSC 1.3.2) 



visit 

Visit 



FUe 

File 



Point 

Point 


(CSCJ.1.3) 

(CSC 1.2.3) 

(CSC 1.3.3) 


Save 


Save 


Point 


Point 


(CSC 1.1.4) 

(CSC 1.2.4) 

(CSC 1.3.4) 


Magnify 

Magnify 



(CSC 1.1.5) 

(CSC 1.2.5) 



Adjust 

Adjust 

Adjust 



Contrast 

Contrast 


(CSC 1.1.6) 

(CSC 1.2.6) 

(CSC 1.3.6) 


Restore 

Restore 

Restore 


Contrast 

Contrast 

Contrast 


(CSC 1.1.7) 

(CSC 1.2.7) 

(CSC 1.3.7) 



Decompress 

Decompress 



(CSC 1.2.8) 

(CSC 1.3.8) 



The second CSCI is the Compression process for the ADRI product. 


16 


































































This CSCI will be executed as a standalone process. There are three 
components to the ADRI compression process. The CSCs for the 
compression CSCI are: 

V Train — This is the generation of a code book for the vector 
quantization compression. 

V Encode — This performs the retrieval of the code book and the 
arithmetic coding, lapped orthogonal transform, and vector 
quantization. 

V Packager — This assembles the compressed overview and compressed 
image files and outputs the two as a single compressed ADRI 
product. 

There is a fourth CSC, Compare, which is a post prcjessing 
quality assurance step. 

V Compare - This performs a statistical comparison of an image 
before and after compression. 


1.1 OPERATIONAL SCENARIOS 

There are two operational modes for the ADRI Exploitation test 
bed. The first operational mode is the Unix command line level which 
is the initial condition when starting the workstation. From the the 
command line the user may execute either of the two CSCIs. The ADRI 
exploitation CSCI is presented in Exhibit A-2. The second CSCI is the 
ADRI compression which is also executed from the Unix command line and 
is presented in Exhibit A-3. 


17 



Exhibit A-2 

ADRI Exploitation CSCI Overview 


UNIX Command Line 















Exhibit A-3 

ADRI Compression CSCI Overview 


UNIX Command Line 


f ^ 


_I_ 

ADRI 

Compression 
(CSCI 2) 


iCT ^ 

ADRI 



Compressed 

ADRI 







— ^ 


2.0 SYSTEM DESIGN 


This section will present the system design for the ADRI 
Exploitation test bed. The design of the CSCIs will be presented at 
the CSC level. 


2.1 HARDWARE (HWCI) IDENTIFICATION - SUN SPARCStation 

The ADRI Exploitation software (CSCI 1) was developed on a SUN 
workstation in C, Ada, and FORTRAN. The operating system is UNIX and 
the graphical environment is X-Windows. The following list describes 
this HWCI. 

V Hardware 

• SUN SPARC IPC 

• 16-inch color display 

• 8 MB RAM 

• Internal floppy disk drive 

• 207 MB internal hard disk 

• 16 MB RAM upgrade 

• External 8mm tape drive/669 MB hard disk 

• External 644 MB CD-ROM drive 

V Softwar e 

• SUN OS with X-Windows 

• Soft copy documentation 

• SUN FORTRAN 

• TeleSoft Ada 


19 







The software developed is designed to operate on any compatible 
configuration as a stand-alone system. The only external interfaces 
to the HWCI is the source data products on their respective media. 


2.2 CSCI IDENTIFICATION 

There are two CSCIs in the ADRI Exploitation test bed. One CSCI 
is the ADRI Exploitation item which is the self contained application 
of the ADRI product and Digital Terrain Elevation Data (DTED) to 
precise monoscopic point positioning. The other CSCI is a self- 
contained process that takes native ADRI data, compresses the ADRI 
data using arithmetic coding, lapped orthogonal transform, and vector 
quantization. Each of the two CSCIs are executable from the UNIX 
command line. 


2.2.1 CSCI 1 - ADRI EXPLOITATION 

The ADRI Exploitation CSCI performs the necessary processes for 
precise monoscopic point positioning using ADRI data and DTED. This 
CSCI satisfies all requirements contained within the Task Statement of 
Work, paragraph 4.1.2 and its subparagraphs. The design of the ADRI 
Exploitation CSCI is composed of 27 CSCs. The three top level CSCs 
(CSC 1.1, CSC 1.2, and CSC 1.3) are the top level ADRI Exploitation 
applications. The following exhibits present the lower-level ADRI 
Exploitation CSCs, their internal interface requirements, and manual 
operation requirements. 


20 





Exhibit A-4 

Point Positioning, CSC 1.1.1, 1.2.1, 1.3.1 



Manual Operation: 


User selects point in either overview or full-resolution window by clicking left-hand 
or right-hand button of mouse. 

Required tiles are calculated and input. 

If left-hand mouse button was clicked, both windows are recentered on the selected 
point. 

Latitude, longitude, elevation, and linear error/circular error estimates are displayed 
in the information window. 


21 









Exhibit A-5 

Visit Geographic Point, CSC 1.1.2, 1.2.2, 1.3.2 



Manual Operation: 


User selects point in either overview or full-resolution window by clicking left-hand 
or right-hand button of mouse. 

Required tiles are calculated and input. 

If left-hand mouse button was clicked, both windows are recentered on the selected 
point. 

Latitude, longitude, elevation, and linear error/circular error estimates are displayed 
in the information window. 


22 









Exhibit A-6 

Visit File Point, CSC 1.1.3, 1.2.3, 1.3.3 



Manual Operation: 

User selects from menu with right-hand mouse button. 

A pull-down menu of point names appears. 

User selects one name by clicking with right-hand mouse button. 

Required tiles are calculated and input. 

Overview and full-resolution windows are recentcred on the input coordinates. 

Latitude, longitude, elevation, and linear error/circular error estimates are displayed in 
the information window. 


23 









Exhibit A-7 

Save Point, CSC 1.1.4, 1.2.4, 1.3.4 



Manual Operation: 

User selects from menu with right-hand mouse button. 

A text input window appears. 

User enters name of save point and hits Enter. 

Input window disappears. 

Point name, latitude and longitude are written to end of file (ADRIPTS.DAT). 


24 








Exhibit A-8 

Magnify, CSC 1.1.5, 1.2.5, 1.3.5 



Manual Operation: 

User selects from menu with right-hand mouse button. 
Bitmap for full-resolution window is updated. 

Full resolution is updated. 


25 










Exhibit A-9 

Adjust Contrast, CSC 1.1.6, 1.2.6, 1.3.6 



Manual Operation: 

User selects from menu with right-hand mouse button. 

A scene brightness histogram appears. 

User clips upper end of histogram with right-hand mouse button. 
User clips lower end of histogram with left-hand mouse button. 
Center button removes histogram from display. 

Contrast is stretched and display windows are updated. 


26 











Exhibit A-10 

Restore Contrast, CSC 1.1.7, 1.2.7, 1.3.7 



Manual Operation: 

User selects from menu with right-hand mouse button. 
Restore contrast to original levels. 

Image display windows are updated. 


27 







Exhibit A-11 

Decompress, CSC 1.1.8, 1.2.8, 1.3.8 



Manual Operation: 

None. All interfaces to this CSC are internal to the calling application. 


2.2.2 CSCI 2 - ADRI DATA COMPRESSION 

The ADRI Data Compression CSCI performs the necessary processes 
for compressing a native ADRI data file into a compressed ADRI . This 
CSCI satisfies all requirements contained within the Task Statement of 
Work, paragraph 4.1.3 and its subparagraphs. The design of the ADRI 
Data Compression CSCI is composed of four CSCs. The following 
exhibits, A-12 through A-15, present the ADRI Data Compression CSCs, 
their internal interface requirements and manual operation 
requirements. 


See Exhibit A-12. 



2.3 


See Exhibit A-15. 

MANUAL OPERATIONS IDENTIFICATION 

All manual operations associated with both CSCI 1 and CSCI 2 are 


28 








identified in the following exhibits. 


2.4 INTERNAL INTERFACES 

All internal interfaces are identified in the following 
exhibits. 


Exhibit A-12 
Train, CSC 2.1 



Manual Operation: 

User specifies and inputs overview or image file, and optional parameters. 
Train produces a codebook file for the overview or image file. 


29 








Exhibit A-13 
Encode, CSC 2.2 



Manual Operation: 

User specifies and inputs overview or image file, and optional parameters. 
Encode retrieves corresponding codebook. 

Encode performs arithmetic coding, lapped orthogonal transform, and vector 
quantization. 

Encode outputs a compressed overview or image file, and an indices file. 


30 






Exhibit A-14 
Packager, CSC 2.3 



Manual Operation: 

User specifies a compressed overview or image file, and its 
corresponding indices file. 

Packager assembles the two files into a compressed ADRI file. 


31 







Exhibit A-15 
Compare, CSC 2.4 



Manual Operation: 

User specifies input file (noncompressed imagery), and codebook name 
for compressed imagery. 

Compare generates statistics indicating image quality before and after 
compression. 


32 







APPENDIX B 


1.0 COMPRESSED ADRI FORMAT 

CSCI 2 produces a compressed ADRI data set with a format very 
similar to the standard ADRI specification. This appendix describes 
this format. 


1.1 DIFFERENCES BETWEEN COMPRESSED/NONCOMPRESSED ADRI 

The compressed ADRI format is nearly identical to the standard 
ADRI format. The sections given below detail differences between the 
two formats. The text of the standard ADRI spec is given with changes 
to support compressed data highlighted in boldface. 

Paragraph 3.9.3 of the compressed specification should read as 
follows: 



TRANSMITTAL_HEADER_FILE TRANSHOl.THF 

TEST_PATCH_IMAGE_FILE TESTPAOl.CPH 

GENERAL_INFORMATION_FILE SSCCddOl.GEN 

QUALITY_FILE SSCCddOl.QAL 

OVERVIEW_IMAGE_FILE SSCCddOl.OVC 

GEO_DATA_FILE SSCCddOl.IMC 

Paragraph 3.11.3-b of the compressed specification should read 
as follows; 

b. Records and fields. 

IMAGE_RECORD_(OVERVIEW) 

RECORD_ID_FIELD (tag 001) 

PADDING_FIELD (tag PAD) 

CODE_BOOK_FIELD (tag CDB) 

DATA_INDEX_FIELD (tag CDX) 

PIXEL_FIELD (tag SCN) 

Paragraph 3.11.4-b of the compressed specification should read 
as follows: 

b. Records and fields. 

IMAGE RECORD (ZDR) 


33 



RECORD_ID_FIELD (tag 001) 

PADDING_FIELD (tag PAD) 

CODE_BOOK_FIELD (tag CDB) 

DATA_INDEX_FIELD (tag CDX) 

PIXEL_FIELD (tag SCN) 

Paragraph 3.14.3 of the compressed specification should read as 
follows: 


3.14.3 OVERVIEW IMAGE FILE 


IMAGE_RECORD_(OVERVIEW) 

IMAGE_ID_FIELD (tag 001) 
RTY A 3 IMG 

RID A 2 01 


Record type 
Record ID number 


PADDING_FIELD (tag PAD) 

PAD A Var SP Padding so that the 

image pixels start 
at the beginning of a 
512 byte boundary 


CODE_BOOK_FIELD 
*CBK A 1 


(tag CDB) 

4096 8-bit code book 
values 


DATA_INDEX__FIELD (tag 
*IDX A 32 


CDX) 

Indices into the SCN 
field to locate 
beginning of each 
tile 


PIXEL_FIELD (tag SCN) 

*PIX A 1 Pixel value (unsigned 

8-bit binary integer) 


Paragraph 3.14,4 of the compressed specification should read as 
follows: 


3.14.4 GEO DATA FILE. 


IMAGE_RECORD__ (ZDR) 

IMAGE_ID_FIELD (tag 001) 
RTY A 3 IMG 

RID A 2 01 


Record type 
Record ID number 


34 



PADDING_FIELD (tag PAD) 
PAD A Var SP 


Padding so that the 
image pixels start at 
the beginning of a 512 
byte boundary 


CODE_BOOK_FIELD 
*CBK A 1 


(tag CDB) 

4096 8-bit code book 
values 


DATA_INDEX_FIELD 
*IDX A 


(tag CDX) 

3 2 Indices into the SCN 
field to locate 
beginning of each 
tile 


PIXEL_FIELD (tag SCN) 
*PIX A 1 


Pixel value (unsigned 
8-bit binary integer) 


OU.S. GOVERNMENT PRINTING OFFICE: 1993-710-093-601113 


35 



tilSSION 


OF 

ROME LABORATORY 

Rome Laboratory plans and executes an interdisciplinary program in re¬ 
search, development, test, and technology transition in support of Air 
Force Command, Control, Communications and Intelligence (C l) activities 
for all Air Force platforms. It also executes selected acquisition programs 
in several areas of expertise. Technical and engineering support within 
areas of competence is provided to ESD Program Offices (POs) and other 

o 

ESD elements to perform effective acquisition of C l systems. In addition, 
Rome Laboratorys technology supports other AFSC Product Divisions, the 
Air Force user community, and other DOD and non-DOD agencies. Rome 
Laboratory maintains technical competence and research programs in areas 
including, but not limited to, communications, command and control, battle 
management, intelligence informati<m processing, computational sciences 
and software producibility, wide area surveillance/sensors, signal proces¬ 
sing, solid state sciences, photonics, electromagnetic technology, super¬ 
conductivity, and electronic reliability/maintainability and testability. 





