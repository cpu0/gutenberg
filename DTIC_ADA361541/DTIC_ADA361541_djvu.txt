Structural Assessment of Pile Supported Piers 

by 

Richard Jay Keiter 

B.S., Mechanical Engineering 
Purdue University, 1991 

submitted to the Department of Civil and Environmental Engineering 
and the Department of Ocean Engineering in Partial Fulfillment of the 
Requirements for the Degrees of 

Master of Science in Civil and Environmental Engineering 

and 


Master of Science in Ocean Engineering 


at the 

Massachusetts Institute of Technology 
February 1999 

DISTRIBUTION STATEMENT A 

Approved for Public Release 
Distribution Unlimited 


© 1999 Richard J. Keiter. 
All rights reserved. 


Signature of Author_ 


Apartment of Civi 


Certified by_ 


Certified by_ 


Accepted by_ 


Accepted by_ 


of Civil and Environmental Engineering 

luary 15,1999 







Jerome J. Connor 
Professor of Civil and Environmental Engineering 

Thesis Supervisor 

n 



J. Kim Vandiver 
Professor of Ocean Engineering 
// ft , ; Thesis Reader 


Andrew J. Whittle 
Chairman, Departmental Committee on Graduate Studies 
Department of Civil and Environmental Engii^ering 






J. Kim Vandiver 
Chairman, Departmental Committee on Graduate Studies 

Department of Ocean Engineering 



Structural Assessment of Pile Supported Piers 

by 

Richard Jay Keiter 
Submitted to the 

Department of Civil and Environmental Engineering 
and the 

Department of Ocean Engineering 
on January 19,1999 in Partial Fulfillment of the 
Requirements for the Degrees of 

Master of Science in Civil and Environmental Engineering 

and 

Master of Science in Ocean Engineering 


Abstract 

With the mobile nature of the armed forces, marine facilities are being encountered overseas 
for which no design data is readily available. To be able to consider such a pier in tactical 
planning, an assessment must be performed to estimate the load capacity of the pier. There is 
a group of technicians in the U.S. Navy that can perform rapid inspections on marine 
stmctures and gather data on the physical condition of the structure as well as the local 
environment. This data, combined with knowledge of design principles for waterfront 
structures, is used to provide a rapid estimate of the load capacity of the pier. This study 
focuses on a strategy for providing a rapid stmctural assessment of a waterfront pier given the 
information gathered during the on-site inspection combined with principles of waterfront 
design. The author has developed a program using the C programming language that, given 
the limited information gathered by Underwater Construction Team personnel, can be used in 
the field to provide an estimate of the structural capacity of an open, timber, pile-supported 
pier. The program prompts the«ser for various physical, environmental, and condition data 
and outputs various data files. A text file is produced which contains the inspection record 
that reflects the users input and the assessment results for the pier being analyzed. A 
MATLAB® script file is produced which can be used for subsequent processing. 

Thesis Supervisor: Jerome J. Connor 

Title: Professor of Civil and Environmental Engineering 

Thesis Reader: J. Kim Vandiver 
Title: Professor of Ocean Engineering 


IXriC QUALITY 8. 


1 9990406 100 



Abstract 


With the mobile nature of the armed forces, marine facilities are being encoxmtered overseas 
for which no design data is readily available. To be able to consider such a pier in tactical 
planning, an assessment must be performed to estimate the load capacity of the pier. There is a 
group of technicians in the U.S. Navy that can perform rapid inspections on marine structures 
and gather data on the physical condition of the structure as well as the local environment. 
This data, combined with knowledge of design principles for waterfront structures, is used to 
provide a rapid estimate of the load capacity of the pier. This study focuses on a strategy for 
providing a rapid structural assessment of a waterfront pier given the information gathered 
during the on-site inspection combined with principles of waterfront structure design. The 
author has developed a program using the C programming language that, given the limited 
information gathered by UCT personnel, can be used in the field to provide an estimate of the 
structural capacity of an open, timber, pile-supported pier . The program prompts the user for 
various physical, environmental, and condition data and outputs various data files. A text file 
is produced which contains the inspection record that reflects the users input and the 
assessment results for the pier being anal 5 'zed. A MATLAB® script file is produced which can 
be used for subsequent processing. 



Acknowledgments 


There are those whom without their assistance this work could not have been 
accomplished. Mr. Stan Black of the Naval Facilities Engineering Service Center 
provided a tremendous amount of assistance. If the reference existed, Stan knew 
where to find it. Professor Kim Vandiver of the Ocean Engineering Department at 
the Massachusetts Institute of Technology (MIT) who took the time to read this 
work and does an outstanding job of teaching...in the classroom and out. And 
finally, Professor Jerome Connor of the Civil and Environmental Engineering 
Department at the MIT, who has served not only as thesis advisor, but also as 
faculty advisor for my short stay here at MIT. Professor Coimor listened and 
helped to smooth out the bumps. 


3 



7 


Table of Contents 

Abstract.2 

Acknowledgments.3 

Table of Figures.6 

List of Tables.6 

I. Introduction.7 

A. General.7 

B. Underwater Construction Teams. 8 

C. Scope of this Study.8 

II. Pier Configuration and Nomenclature.10 

A. Pier Construction.11 

L Piles . 11 

2. Decking . 1^ 

III. Design Considerations.14 

A. Material.14 

B. Loading.15 

1. Vertical . 1^ 

2. Lateral . 17 

3. Dynamic . 19 

C. Seismic.19 

D. Geotechnical.20 

E. Ice.20 

F. Factor of Safety.20 

G. Miscellaneous.21 

IV. Underwater Construction Team Inspection Data.22 

A. Levels of Inspection.22 

B. Pier Inspection Documentation.22 

1. Physical Dimensions . 23 

2. Environmental Data . 24 

V. Assessment.26 

A. Loads.26 

1. Dead. . 26 

2. Wind . 28 

3. Current. . 21 

4. Waves . 21 

5. Dynamic . 26 

B. Piles.38 

1. Fixity . 28 

2. Vertical . 29 

3. Lateral . 41 

C. Decking.43 

1. Stringers - Simply Supported Beams . 43 


4 












































T 


2. Continuous Beams . 49 

VI. Rapid Structural Assessment- Pier.55 

VIL Conclusion.56 

References. 57 

Appendix A - Levels of Inspection.58 

Appendix B - Pile Inspection Record.59 

Appendix C - Pile Condition Ratings for Timber Piles.60 

Appendix D - Crane Loading Data Charts.61 

Appendix E - Program Listing.67 

Appendix F - Sample RSAP Output Data File.125 


5 












Table of Figures 


Figure 1. Examples of finger piers (top view).7 

Figure 2. Typical open, pile supported pier.10 

Figure 3. Typical timber pier structure and nomenclature.11 

Figure 4. Example of a simple fender.12 

Figure 5. Pile head connection details.13 

Figure 6. Decking detail.13 

Figure 7. Damage profiles for the woodgribble (left) and the teredo (right).15 

Figure 8. Typical loading on a marine structure.16 

Figure 9. Displacement to wind load relation (Tsinker[l]).30 

Figure 10. Depth to fixity illustrated.39 

Figure 11. Bending modes and effective lengths of 2 columns.40 

Figure 12. AASHTO Truck specifications.45 

Figure 13, Comparison of moment equation results vs. L/a - HS Loading.46 

Figure 14. H Loading resulting moments vs. L/a .48 

Figure 15. Simplified Three-Moment Equation Terms[13].50 

Figure 16. Three-moment equation model output.51 

Figure 17. Shear-Moment diagram: Pile spacing - 6'; Axle - centered...51 

Figure 18. Shear-Moment diagram: Pile spacing - 10'; Axle - centered.52 

Figure 19. Sample MATLAB Output.55 

List of Tables 

Table 1. Properties of timber commonly used in marine construction[3].14 

Table 2. Level of inspection versus detectable damage to timber waterfi'ont structures.22 

Table 3. Coefficients Ci and Ca for wind force calculation.29 

Table 4. Hydrodynamic coefficients, Cd and Cm .34 

Table 5. Soil compatability table for Dj. .39 

Table 6. Forklift wheel loads and dimensions.48 


6 




























T 


I. Introduction 


A. General 


Maritime transportation has generally been the most convenient and least expensive means of 
transporting goods^ As technology in the ship design and construction industry has improved, 
cargo ships have become larger and more specialized. Accordingly, complex port facilities 
worldwide have been developed to accommodate waterborne cargo. These marine facilities 
typically include piers, wharves, quays, and dolphins as well as a wide array of cargo handling 
equipment such as forklifts, cranes, and stacking straddle carriers. Historically, the finger pier 
(see Figure 1) was the most characteristic type of berth construction [1]. Though modem 
constraction has been trending towards more use of concrete, steel, composites, and 
combinations, timber has been, and continues to be, a primary construction material. 



There are a number of timber, finger piers still in service in the United States and overseas. 
For many of the marine facilities located in the U.S., adequate design information is available 
that, with current condition data, can be used to determine the load capacity of the stracture. 
However, with the mobile nature of the armed forces, marine facilities are being encoimtered 
overseas for which no design data is readily available. To be able to consider such a pier in 
tactical plaiming, an assessment must be performed to estimate the load capacity of the pier. 
There is a group of technicians in the U.S. Navy that can perform rapid inspections on marine 
stmctures and gather data on the physical condition of the structure as well as the local 
environment. This data, combined with knowledge of design principles for waterfi-ont 
stmctures, can be used to provide a rapid estimate of the load capacity of the pier. 


7 




B. Underwater Construction Teams 

The Underwater Construction Teams’ (UCTs) mission tasks them with: “Providing(sic) a 
capability for construction, inspection, repair, and maintenance of ocean facilities in support 
of Naval and Marine Corps operations...” and “Maintaining(sic) [the] capability to support a 
Fleet Marine Force (FMF) amphibious assault...” To accomplish their assigned mission, there 
are a number of capabilities which the UCTs must maintain. Among these, the items of 
interest to this study include : 

• During the initial period of contingency mobilization, provide underwater 
construction support of Naval Beach Groups, Harbor Defense Groups, and 
other fleet units as directed. 

• Construct, inspect, and repair ocean facilities in support of Naval and 
Marine Corps operations in the combat zone or at forward area support 
bases. 

• Respond to emergency inspection and repair of essential fleet water-front 
systems within 48 hours. 

As these capabilities indicate, and anecdotal evidence supports, the UCTs must be able to 
provide rapid inspections of waterfront facilities which are being considered for use in tactical 
operations. Specifically, the UCTs perform waterfront inspections of ocean facilities in 
support of combat operations. While the results of the inspection may reveal that the pier is 
sound and undamaged there is currently no method of taking the information gathered during 
an inspection and quickly estimating the structural capacity of the pier in question. 

C. Scope of this Study 

This study focuses on a strategy for providing a rapid structural assessment of a waterfront 
pier given the information gathered during the on-site UCT inspection combined with 
principles of waterfront structure design. The author has developed a program using the C 
programming language that, given the limited information gathered by UCT personnel, can be 
used in the field to provide an estimate of the structural capacity of an open, timber, pile- 
supported pier . The program prompts the user for various physical, environmental, and 
condition data and outputs various data files. A text file is produced which contains the 


8 



7 


inspection record that reflects the users input and the assessment results for the pier being 
analyzed. A MATLAB® script file is produced which can be used for subsequent processing. 


9 



II. Pier Configuration and Nomenclature 

The general designation for the place where a vessel can be moored is a dock. A pier is a dock 
that extends outward, perpendicular to, or at some skew angle to, the shoreline. A pier is 
essentially a free-standing structure, shore connected at one end, which allows berthing of 
vessels along both sides. The most common pier construction consists of open, pile supported 
structures which include a decking system constructed on a pile foimdation. The foundation 
contains a series of evenly spaced pile groups, or bents, as shown in Figure 2. The pile bents 
may be further strengthened to resist lateral loads by the addition of batter piles or by being 
rigidly cross-braced. 



Timber has been the traditional material for waterfront construction. It is durable and it 
possesses good impact resistance and the ability to distribute loads effectively . It is 
particularly durable in locations which are free from biological organisms and subjected to 
continuous “wet” conditions. Tsinker(l) sites the example of the more than 100 year old 
Brooklyn Bridge which is supported on a timber cribbage foundation. Currently, all-timber 
pier construction is usually relegated to lightly loaded sites such as small craft harbors and 
public facilities. 

There are many types of timber used in marine construction. For pilings, the type selected 
generally depends upon availability and cost. Usually, piling timber is treated with chemical 
agents such as creosote to deter waterborne biological organisms, such as limnoria or teredos, 
and prolong the life of the pile. Decking timber is generally a hardwood such as white oak but 


10 





T 


may vary based upon availability. It is not necessary to treat the decking timber since it is well 
away from the splash zone and not subject to the aforementioned biological hazards. 

A. Pier Construction 

Timber pier construction is generally of the type shown in Figure 3. The shaded components 
may be present but are not required. 



Figure 3. Typical timber pier structure and nomenclature 


1. Piles 

There are three types of piles that contribute to a piers ability to withstand loading. Bearing 
piles are vertical piles that support the vertical load of the pier and may provide lateral support 
as well. Bearing piles are friction-type, end-bearing, or a combination of both. Batter piles are 
placed on an angle to provide lateral support. Additionally, they may provide vertical support 
as well. As with bearing piles, batter piles may be friction-type, end-bearing or a combination 
of both. For batter piles that are a combination of both, a batter may contribute to the lateral 


11 











7 


resistance in either compression or tension. Conversely, end-bearing batter piles may 
contribute only if in compression. Lastly, there are fender piles. There are many 
configurations of fender system comprised of piles with the simplest shown in Figure 4. A 
fender system is installed to absorb the energy imparted to the pier while a ship is berthing, 
thus decreasing the lateral displacement of the pier and ultimately reducing the loads on the 
pier. Fender piles are generally considered sacrificial in nature and require regular 
maintenance to minimize damage fi'om docking impact to the pier. 


Figure 4. Example of a simple fender 



2. Decking 

Decking consists of everything above the pile ends. This includes the pile caps, deck 
stringers, deck planking, and deck facing. Of these, the deck facing is the only component that 
does not contribute to the structural capacity of the pier. Its purpose is to protect the decking 
against damage firom vehicular traffic, etc. The decking is usually placed well above the splash 
zone. Pile caps, shown in Figure 5[3], consist of either a solid beam that spans across the tops 
of the pilings 


12 




Figure 5. Pile head connection details 

in the bent or two beams that are situated on either side of the pile tops. In both cases, the pile 
head is considered a pinned connection. Deck stringers are evenly spaced timbers, placed 
edgewise, that span the bents. Lastly, the deck planking spans the stringers to complete the 
load carrying structure. Figure 6, adapted from NAVFAC'*, details these various components. 



Figure 6. Decking detail 


13 




III. Design Considerations 

When designing a marine structure, there are no definitive, binding building codes or 
standards to which the designer may refer. However, “...there are several guideline codes of 
practice to which the designer may refer for general design and for specific requirements.”[3] 
Before a meaningful discussion of the analytic methods used in conducting the structural 
assessment can be properly conducted, it is important to understand the various considerations 
that are an integral part of a marine facility design. 

A. Material 

There are various types of timber used throughout waterfi'ont construction. Timber is used 
because it is durable, convenient to work with, possesses good impact resistance and the 
ability to distribirte loads effectively[3]. Table 1 contains properties of a few types of timber 
commonly used for pilings. Often, the softer timbers will be pressure-treated before use. For 


Timber Type 

Elastic modulus 
in bending (psi) 

Proportional limit 
in compression 
parallel to grain 
(psi) 

Proportional limit in 
compression 
perpendicular to 
grain (psi) 

Shearing 
strength 
parallel to 
grain (psi) 

Unit 

weight 

Douglas Fir 

1,950,000 

5,850 

870 

1,160 

34± 

(coast type) 

Southern Yellow 

1,990,000 

6,150 

1,190 

1,500 

36± 

Pine (long leaf) 
Greenheart (Ocotea 

3,700,000 

10,140 

2,090 

830 

66± 

radiaei) 

Azobe (Ekki) 

3,000,000 

10,260 

2,870 

2,650 

65.5 

(Lophira procera) 

♦These values for “air 

-diy” wood.. .typically around 12% moisture. For wood with a higher moisture content, 

such as wood that is continuously submerged, strength properties are reduced and unit weights increased 


Table 1. Properties of timber commonly used in marine construction [3] 


the decking structure of a pier, hardwood, such as white oak, is often used. The main threats to 
timber marine structures are rot, mechanical damage, or marine organism attack. Rot is caused 
primarily by stagnant fi:esh water. When present, rot is usually found in the structural 
components above the pilings and can be difficult to detect. Mechanical damage can be 
caused by any number of sources including berthing operations and cargo handling. It can be 
found in the decking and the pilings. However, major mechanical damage to pilings is usually 


14 






7 


confined to those pilings located at the perimeter of the structure. It is in those locations that 
the pilings can come into direct contact with ships, barges, tugs, etc. In the interior of the 
piling group, mechanical damage is caused primarily by abrasion and wear from floating 
debris. Of the main threats to timber marine structures, marine organism attack is the most 
prevalent. There are two prominent types of marine borers: the woodgribble of the Limnoria 
family and the teredo, which is a mollusk. 



Figure 7. Damage profiles for the woodgribble O^fO the teredo (right) 

The woodgribble eats away shallow furrows at the piling surface in the surf zone leaving an 
“hourglass” appearance. The teredo tunnels throughout the pile leaving the pile riddled with 
holes. Examples of this damage can be seen in Figure 7. Because most of the teredo damage is 
inside the pile, it takes a more experienced eye to detect it. 

B. Loading 

“Design of fixed piers and wharves is usually controlled by live load and lateral load 
requirements.”^ Various loads must be considered when assessing the structural capacity of a 
pier. These loads fall into one of three general categories of loading: permanent load which is 
also known as dead load and is a vertical loading; temporary loads which include live loads 
from operations and environmental loads and contribute to both vertical and lateral loading; 
and special loads which include accidental loads, seismic loads and other imusual loading. A 


15 






7 


structure is not always loaded as designed and, thus, when designing a marine structure, 
“...the selection of design loads is a problem of statistics and assessment of probability.”[l] 
Figure 8 illustrates the numerous sources of loading that a pier may experience. 


Crane & 



Figure 8. Typical loading on a marine structure. 


Compared to other types of structures, piers are typically designed to support relatively heavy 
transient loads as well as a relatively large lateral load. The design vertical load capacity is 
generally governed by deck and cargo live loading, vehicle loading, and mobile equipment 
used on the pier. The design lateral load is governed by berthing and mooring forces. Loading 
design considerations are discussed as to the contribution they make to the vertical and lateral 
components of loading. 

1. Vertical 

Vertical loading includes the dead load, which is the weight of the structure and everything 
permanently attached such as any mooring hardware, curbs, light poles, etc. The vertical load 
also contains live load contributions which consist of uniform loading and point loading from 
cargo, vehicular traffic, and material handling equipment such as forklifts and mobile cranes. 


16 







7 


which are rubber tire or crawler tracked mounted. When designing a pier, there are two 
concepts employed in the formulation of design loads: the “real-life” load assumption based 
upon miscellaneous loads falling in a line or concentrated load category, and the “equivalent 
uniform” load assumption[l]. The latter can be misleading. For example, a pallet or container 
may be assumed to provide uniform loading on the order of 200-600 psf. However, a pallet or 
container may actually be loaded in such a way that there is concentrated loading that exceeds 
the assumed uniform loading. Thus, it is best to compromise with a combination of both 
concepts. When looking at the influence of loading, concentrated loads dominate at the 
decking while uniform loading tends to dominate the substructure such as piling size. 

2. Lateral 

The lateral loads consist primarily of mooring forces, berthing forces, and environmental 
loading. The mooring forces are usually from environmental loading on the ship alongside the 
pier. The berthing forces are from the actual berthing operations where there are potential 
impacts incident upon the pier from the ship. This assessment deals with the environmental 
aspects of lateral loading since the berthing forces are highly unpredictable, varying with ship 
size, speed, angle of approach, and fender system. It is assumed that if a pier is of importance 
tactically, great care will be taken to see that damage, such as the type experienced during 
careless berthing, will be avoided. 

a. Wind 

Wind contributes primarily to the lateral loading on a pier. It blows from many directions and 
can change without notice. The wind impinging upon a surface, increases the pressure on that 
surface and results in a force loading. However, given the construction characteristics of an 
open pier, the loading on the structure itself is minor compared with the wind effects of the 
ship moored along side. The exposed, directional, surface area of the ship is susceptible to 
wind loading which is then transferred to the pier. When designing a pier, historical wind 
data, along with the design ship size, is analyzed to size the structural members according to 
the predominant wind direction. Also, it is assumed that xmder high wind or wave conditions, 
vessels will leave the berth and crane operations will cease so that there is a limiting design 
wind. The wind speed used in loading calculations is the wind 10 m above the siuface of the 


17 




water. If the wind speed is measured at a different height, a relation is available to convert it to 
a 10 m equivalent. The maximum wind load on a pier will be when the wind direction is 
perpendicular to the pier. 

b. Current 

“Current forces are normally neglected in the design of harbor structures. However, the 
rational design of exposed piling as a column...requires that lateral forces due to current be 
considered.”^ Currents can be caused by the wind, river flow, and tide flow. The current speed 
is usually maximum at the surface and reduces to zero at the bottom. It is possible to have 
opposing sources such as might be seen when a river current flows in on direction and the 
wind induces a current flow in the opposite direction. If strong enough, a current can increase 
the pressure head on one side of a moored vessel causing a considerable increase in mooring 
forces. The submerged, directional, siuface area of the ship is susceptible to current loading 
which is then transferred to the pier. As with the wind effects, current effects are present on 
the pilings of the pier, but the effects from the ship dominate. The maximum current load on a 
pier will occur when the current direction is perpendicular to the pier. 

c. Waves 

As with wind, wave design considerations rely on historical data. This data is usually 
presented as short-term data, which is presented in terms of occurrence frequency and yearly 
averages for each month, and long-term wave statistics, which are usually given in terms of 
maximum wave height versus statistical return period. If considering unidirectional sea waves, 
they are usually represented as a wave spectrum due to their irregularity. When expanding to 
the more realistic case where waves are multi-directional, there have been three dimensional 
wave spectra developed but use in regards to harbor design/analysis is limited[3]. Waves are 
generally classified as one of the following: wind generated waves; ship generated waves; 
astronomical tidal waves; storm surges; harbor seiches, which is the excitation of a harbor due 
to long period ocean waves; tsunamis; capillary waves; and interval waves[l]. Of these, wind 
is the primary cause of waves. Therefore, wind waves and their associated swells are 
considered in the design of coastal facilities. Given the oscillatory nature of waves, wave 
loads are dynamic. However, for the range of water depths encountered with coastal piers. 


18 



T 


wave load can generally be represented as equivalent static loads[3]. The manner in which 
wave loads and their associated calculations are handled depends upon the member or 
structure dimension relative to wavelength. If the member being investigated is a pile and its 
diameter is small compared to the wavelength, the wave is not influenced by the pile and the 
resulting force on the pile is due to water particle velocities and accelerations. These are also 
know as drag forces and inertial forces respectively. If the member or structure being 
investigated is large enough to affect the passing wave, diffraction and wave scattering must 
be considered. If the structure is very wide, such as a ship, then reflection occurs and the 
forces are treated as a rise in hydrostatic pressure head. Gaythwaite[3] provides the following 
criteria for application of wave force calculations: 

• For D/ 0.2, drag and inertia forces dominate; use the Morison equation. 

• For D/ /I > 0.2, diffraction effects become increasingly important; use diffraction theory. 

• For D/ X>\ .0, pure reflection conditions exist; treat the structure as a seawall. 

Open piled structures are the preferred type of construction at locations exposed to heavy 
waves because they enable practically free passage of waves[l]. The maximum wave loading 
occurs when the wave propagation direction is perpendicular to a moored ship. 

3. Dynamic 

The two predominant contribution to dynamic loading are periodic waves and seismic activity. 
If a wave having a period, T^, close to that of the moored ship is incident to the ship, it may 
result in resonant phenomena that will amplify the ships mooring forces on the pier. 
Determination of these effect require extensive analysis of the location, to include scale 
modeling to calibrate the mathematical model, and detailed seismic history data. 

C. Seismic 

Typically, marine structures, such as piers, are designed for high lateral loading and thus, are 
relatively rigid with natural periods on the order of 0.5 seconds or less[3]. Additionally, 
immersion in water provides damping in addition to that inherent in land-based structures. 
However, there may be exceptions such as piers having vertical cantilever piles. For nearshore 
pier structures, a check for seismic forces should be conducted in accordance with 


19 



7 


specifications provided by The American Association of State Highway Transportation 
Officials or AASHTO’. 

D. Geotechnical 

Soil properties contribute greatly to the ability of a pile to withstand vertical loading either in 
end bearing capacity, fiiction bearing capacity or a combination of both. When designing a 
pier, extensive testing is conducted on the soil foundation to determine its ability to support 
loading. This information is used to determine the depth to which the piles must be driven and 
the point of fixity, Df, which is the point at which the pile is considered fixed in the soil. The 
fixity is used to determine the unsupported pile length in load capacity calculations. Since the 
UCT will not have access to design soil information in a tactical situation, they must either 
test the soil to determine soil type or rely upon a basic assumption. The current method* for 
dealing with unknown piers is to assume that the constructors used piles sized such that the 
soil and geotechnical conditions exceed the strength of the pile. Thus the pile strength is the 
limiting factor when considering the foundation strength. 

E. Ice 

If present, ice can exert a lateral force upon the pilings at the waterline. If the ice is sheeted, 
both the wind and the current can exert shear force on the ice. Also, the ice can impose 
vertical loading on the piling with the tide change. However, if ice thick enough to cause 
significant loading on the pier is present, it is unlikely that a ship would be able to moor there. 
Tsinker [1] states that, normally, conventional open piled structures are not feasible in 
heavily-ice-infested waters. 

F. Factor of Safety 

When designing a waterfront structure for loading, great care must be taken to ensure that the 
structural member will not fail xmder design loading. When using AASHTO[7] specifications 
for pier design, as recommended in much of the literature, allowable stresses, with reduction 
factors for various conditions, are provided for the building material used. Often, these values 
can be converted directly to allowable loads. For pilings, however, an additional check for 
critical loading must be performed since the piling behaves as a column and is subject to 


20 



T 


buckling. Thus, the factor of safety is used to reduce the critical load to an allowable load that 
may, for longer piles, be less than the allowable load determined using allowable stress in 
compression parallel to the grain. 

G. Miscellaneous 

-When performing a design analysis, settlement of foundations and the resulting effect on pile 
cap load capacity reviewed. For this assessment, however, settlement will not be considered 
unless it is severe. And then only by the personnel on-site. 

-Often times there are connectors in a marine structure. It is left to the inspection team to 
assess the condition of any connectors that might be present and determine the impact to the 
structural capacity. If the connectors holding cross-bracing in place are severely deteriorated, 
it would be best to model the pier as having no cross bracing. While this may limit the lateral 
capacity of the pier, it will prevent an overly optimistic capacity assessment. 

-Biological fouling such as mollusk growth can add to the drag of the pilings when 
considering current and wave effects. It can also add weight to the structure at low tide since 
the growth will be above the waterline. 


21 



T 


IV. Underwater Construction Team inspection Data 

“A major portion of the UCT’s activity is directly related to the underwater inspection of a 
wide variety of waterfront structures and other marine facilities. UCT underwater inspections 
are primarily visual observations of the facility being inspected.”^ This quote comes directly 
from the NAVFAC P-990: Underwater Construction and Repair Techniques manual and 
highlights the fact that waterfront structure inspections are a UCT core competency. The P- 
990 provides the UCTs with the guidance to perform waterfront inspections on many types of 
structures including those constructed of timber. Additionally, emphasis is placed upon the 
importance of reliable, detailed inspection documentation for subsequent engineering 
assessment. 

A. Levels of Inspection 


The P-990 defines three levels of inspection which provide increasingly more detail as one 
moves from the basic Level I inspection to the more advanced Level III inspection. A level HI 
inspection is still primarily a visual inspection but will often include some Non-Destructive 


1 Level 

Purpose 

^Detectable Defects 

I 

General visual to confirm as-built condition 

-Major losses of wood 


and detect severe damage 

-Broken piles and bracings 
-Severe abrasion or marine borer attack 

II 

Detect surface defects normally obscured by 

-External pile damage due to marine borers 


marine growth 

-Splintered piles 

-Loss of bolts and fasteners 

-Early borer and insect infestation 

III 

Detect hidden and imminent damage 

-Internal damage due to marine borers (internal voids) 
-Decrease in material strength 


Table 2. Level of inspection versus detectable damage to timber waterfront structures 


Testing (NDT) techniques. In some cases, partially destructive techniques, such as core 
sampling, are used[9]. Appendix A provides a more detailed description of each level of 
inspection as described in the P-990[9]. However, a simunaiy of the purpose and detectable 
defects for each level of inspection are shown in Table 2. 

B. Pier Inspection Documentation 

As stated previously, it is important that an inspection produce reliable, detailed 
documentation. The P-990 provides a standard form for the reporting of pile condition as 


22 













7 


observed during a UCT pier inspection. This form, the Pile Inspection Record (see Appendix 
B), allows for each pile to be classified according to one of five condition codes: ND (no 
damage); MN (minor damage); MD (moderate damage); MJ (major damage); and SV (severe 
damage). Appendix C provides an explanation for each of these codes and gives 
representative diagrams of each pile condition. The Pile Inspection Record also allows for 
recording of the type of damage to the pile being inspected. This is important when evidence 
of biological damage, such as that from marine borers, exists. Additional information, which 
is easily collectible, required for the purpose of this paper include physical dimensions of 
various structural members and local environmental data such as wind, wave and current. 

1. Physical Dimensions 

Dimensions of the various structural components of the pier are required to assess their 
mechanical strength. These include measurements which are discussed individually. 

a. Pile Diameter and Depth 

Typically, pile diameter, D, is consistent throughout the pier structure and will be treated as 
such for the purposes of this assessment. However, care should be given when measuring the 
diameter of timber piles since they are often tapered and may experience a reduction in 
diameter from the pile cap to the embedded portion of the pile. Thus, measurement should be 
taken near the bottom to ensure an accurate calculation of the pile strength. Allowance has 
been made in the program for the possibility that batter pilings are of a different diameter than 
the bearing piles. In an extreme case, such as a damaged pile having been replaced, a different 
pile diameter may be entered for a bearing pile. This will be discussed further in the 
Assessment section of this paper. Also of interest are the depth, d, and water-surface-to-point- 
of-connection dimensions. These values combine to provide the imsupported length, of the 
pile. 

b. Pile Cap, Stringer, and Decking Dimensions 

These components of the load bearing structure can all be modeled as beams. The height and 
width of these members are required to perform the assessment. Care must be given to record 


23 



7 


the vertical dimension as “height”, h, and the horizontal dimension as “width”, b, so that the 
proper modulus in bending may be calculated. 

2. Environmental Data 

When designing a waterfront structure such as a pier, detailed environmental data is collected 
and used in the analysis to ensxire that the resultant structure can withstand the environmental 
loading expected given the construction budget. This information will include soil borings, 
temperature ranges, current data, and statistical wind data such as a wind rose. A wind rose 
graphically represents the direction, frequency, and intensity of the average winds at a 
particular location over a period of time.[l] When conducting inspections at known facilities, 
the UCT inspection team may have access to this historical data. However, when conducting 
an inspection in a tactical environment, the UCT inspection team will have little, if any, of this 
data available to them. They must collect it via observation. 

a. Wind 

Prevailing and extreme wind speeds and directions and their frequency of occurrence are of 
primary concern when considering wind loading[3]. The UCT inspection team can collect 
data from the time of their arrival on site to estimate the average wind speeds and prevailing 
directions from which they come. They are not capable of determining extreme wind speeds 
associated with long return periods such as those experienced in 50- or 100-year storms. 
However, given that the situation is tactical and that a ship interested in using the pier for off¬ 
loading will have access to meteorological information, the wind speed can be monitored for 
extreme conditions. The information of interest regarding wind is the velocity magnitude, V^, 
the direction it is blowing relative to the longitudinal axis of the pier, and the height above 
the water surface, K, that the measurement was taken/observed. 

b. Current 

The current is usually estimated by divers in the water. In most cases the current will run 
parallel to the shoreline and the current velocity will decrease with depth. The information of 
interest regarding current is the velocity magnitude, Vc, and the direction it is flowing relative 
to the piers longitudinal axis 6c- It is best to measure the current at the surface of the water. 


24 



7 


c. Waves 

There are two types of waves of interest to the loading on waterfront structures: sea waves and 
waves caused by passing vessels. It may be difficult to distinguish the various components of 
the incident waves. Therefore, it is best if UCT personnel measure the maximum periodic 
wave height, H-^ave, measured peak to trough, period, T^ave, and direction, dwave- Care must be 
take to discoimt single occurrence waves in this observation. 

d. Soil 

The capability to perform geotechnical testing using hand powered tools has been recently 
introduced into the UCTs. However, during conversations with personnel from the Naval 
Engineering Service Center, Port Hueneme, CA, additional experience is required with these 
tools before reliable soil strength information can be obtained. Information regarding soil type 
may be of use for determining depth to fixity, £>/. 


25 



7 


V. Assessment 

In this section, the methods for determining the forces and load capacity are developed. The 
general approach taken is to assess only the structural components of the pier. If additional 
structures are present on the pier or there is installed equipment present on the pier, this must 
be accounted for on-site in accordance with good engineering practice. In all cases, closed end 
solutions equations are used since they readily lend themselves to computer programming 
techniques. Gaythwaite[3] suggests that this is not unusual for near-shore water&ont 

structures. 

A. Loads 

1. Dead 

Ideally, when calculating the deadweight of the structure, detailed measurement would be 
taken of every pier member and attachment such as those used in mooring. However, given 
the nature of the situation in which the UCTs will be conducting such an inspection, this 
approach is unreasonable. Therefore, a simplifying approach is needed which will err on the 
conservative side. Before continuing with the actual weight calculations, a few simple 
dimension calculations must be made from the input provided by the inspection team. 



^pier = (^ of bents)(bent spacing) 

Eq.l 



£q. 2 

where: 

= length of pier, ft, 

§ of bents = total number of bents, 

bent spacing — center to center, ft, 

= width of pier, ft, 

piles/bent - # ofbearing piles in each bent, 

pile spacing = distance center to center of piles in a bent, ft. 



When considering the piles contribution to deadweight, an allowance must be made for 
buoyancy effects will act to reduce the weight of the pile. Thus, the weight of the pile will be 

calculated as follows: 

j \ Eq.3 

~ 4 y^nPpile ^nPwalerJ 


26 




where: wtpjaMng = weight of planking, lb 

hpiaMng ~ height dimension of planking, ft, 

Wpur = pier width, ft, 

bent spacing = center to center spacing, ft, 

Pdecking - density of decking material, Ibm/ft^. 

The weight of the deck stringers per bent is given as follows: 

stringers = KnngerKnnger(bent spacing + ^pile cap )| 

where: wtsinnger = stringer weight per bent, lb, 

bsmnger = Stringer base dimension, ft, 

hstringer = Stringer height dimension, ft, 

bent spacing = center to center spacing, ft, 

bpuecap - pile cap base dimension, ft, 

Wpier = pier width, ft, 

stringer spacing = distance center to center of stringers, ft, 

Ptkcting - density of decking, Ibm/ft^. 

To account for the various additional members of the pier, such as mooring accessories, 
whalers, curbing, etc. (excluding any buildings present on the pier), the weight of the decking 
will be increased by 15%. Thus, the weight carried by each bent can be expressed as follows: 

^^bent ~ pile cap planking stringet^ EQ. 7 


Stringer spacing 


Pdecking 


£q. 6 


27 



The weight can then be distributed as follows: 


Eq. 8 


- {Spiles per bent - 1)" 

for an interior pile. The exterior piles support only half as much deck area as do the interior 
piles. However, since a majority of the additional weight is carried by the external piles the 
weight for those piles will be adjusted even further and is represented by: 


pile,dead,ext^ 2(# pUes per bent -1) 


0.15wtu 


Eq. 8a 


2. Wind 

When calculating wind pressure, it is necessary to do so using the sustained wind velocity 
which is defined as the wind speed averaged over one minute. Also, the wind speed generally 
used for evaluation of wind loading is the sustained wind speed at located 10m above the 
water surface. If the wind speed observation is taken at another height, a correction must be 
applied to the measured, sustained wind velocity to normalized it to this standard reference 
datum. Thus, we have the following expression which yields the pressure, or load, due to 


wind: 


where: 


p,= 0.00256V,, 


V.o = 


32.8084 


Eq.9 


Eq. 10 


giving the following relation: 


where: 




= wind pressure, , 

= height above water surface, ft, 
= measured wind speed, mph. 


Eq.ll 


28 



7 


If physical characteristics of the ship are known, the unit wind pressure can be used in the 
following relation[l] to calculate the total force on the moored ship, and thus, on the pier, due 
to wind: 

= kp„C,C, (2 A, sin" e„ + 2 ; A, cos’ e.) Eq. 12 


where: P„ 

k 

Pw 

Cl 

C2 


£4;C& 

6L 


Total wind force, Ibf, 

1.3, shape factor-considers suction increase, leeward side, 
wind pressure, Ibf/f^, 

Coefficient that considers length of ship, see Table 3, 
gust factor; average value range 1.25-1.45, small values for 
large ships and large values for small ships, see Table 3 for 
adaptation, 

sum of exposed to wind areas of ship, structure, buildings 
on the structure, etc. in x and y direction, ft^, 
angle of wind direction to pier centerline with 0 being 
straight off the end of the pier fi*om the foot of the pier. 



Table 3. Coefficients Ci and C 2 for wind force calculation. 


If ship characteristics are unavailable, Tsinker[l] provides a graph relating ship displacement 
to approximate wind load per unit length of ship. After conversion to the USCS system of 
units, the plot looks like Figure 9. The values represented in this plot are considered 
conservative. 


29 





Approximate wind load per linear foot of ship 



Wind Load(lbf/lin ft of ship) 

Figure 9. Displacement to wind load relation (Tsinker[l]) 

However, they do enable the approximation of ship size capacity in the absence of ship 
dimension data. A curve fit was performed using Origin™ from Microcal™ resulting in the 
following relation: 

(P'w-302.97055) 

Dg =-2.97522+ 3.2640 le 509.’4674 Eq. 13 

where: Ds = Ship Displacement, OOO’s long tons, 

/* w = Wind Load/lin ft of ship, Ibf. 

If limited information about the ship is known, such as the displacement, the data fi-om Figure 
9 can be ordered such that wind loading is a function of ship displacement and the following 
relation is determined fi-om curve fit: 

f —D^ ^ ^ 

P'„ = 0.13376 +1.40261 1 - + 0.73301 1 - 

\ J \ J 

where P ^ and Ds are as before. If an additional ship were to moor at the pier, the wind load 
effects resulting form the presence of the second ship would be half of those of the first ship. 
This is due to sheltering effects of the windward ship on the leeward ship. However, this 
assessment considers only one ship at the pier. 


30 








7 


As stated previously, the maximum wind effects on the pier are when the wind is 
perpendicular to the pier. If the wind direction is landward along the longitudinal axis of the 
pier, the deck structure, along with the pier-shore interface, assists the pilings in resisting the 
load. If the wind direction is seaward, sheltering significantly reduces the wind load since a 
majority of the exposed ship area is below the land elevation. When designing for wind load, 
the m inimum limiting wind velocity should be taken as 70 miles per hour. This value will be 
checked in the calculations of wind loading in the program. 


3. Current 

The current force on the ship and submerged structure can be obtained from the following 
relation: 


P. =jp.Cr,{ZAK/ +E4V) 


where: 

Pc 

= avg current force submerged object, Ibf, 


Pw 

= density of water, slugs/ft3, 



= drag coefficient, 0.6-1.2 for piles, 1.0 for ship 


Ai 

= exposed area in the ith direction, ft^, 


Vc.i 

= current velocity, ft/s. 


giving the average force per unit length of pile over the depth as 



Eq. 15 


£q. 16 


For the pile, the resulting moment at the mudline due to this current can be written as 

d 




PJ 


Eq. 17 


The force on the ship due to current will be transferred to the pier as a point load at the pile- 
cap interface. Generally, the current, if any, flows perpendicular to the pier. The coefficient c 
provides for roughness due to organic growth. For heavy growth, the effective diameter of the 
piling may need to be increased when determining current forces on the pile. 


4. Waves 

The following discussion is an adaptation from the U.S. Army Corps of Engineers(COE)’° on 
dealing with wave effects on piles. The COE has a comprehensive approach to determining 
wave forces and moments on piles, often relying on graphs and charts for values of 


31 



coefficients or non-dimensionalized factors. This sort of analysis does not work well for 
programming since it would require limitless effort to curve-fit each and every plot contained 
therein. However, it is also possible to arrive at these values numerically, given some 
simplifications. 

When assessing the forces on a pile, it is unnecessary to have detailed information about the 
force distribution along the pile. What is important is the total force acting on the pile and the 
total moment about the mudline. As discussed earlier, the presence of the pile in the wave 
field has little, if any, effect on the passing wave due to its size relative to the wavelength. 
Thus, the Morison equation is applicable and the total wave force, in the direction of wave 


propagation, is: 


Eq. 18 


TcD^ du 1 ^ I . Pn 

Pwave = Pinenial + Pdrag = 2 P^1 

where: Py,ave = wave force 

Pi = component force 

Cm, Cd = hydrodynamic force coefficients 

p = density of seawater 

D = diameter of pile 

u = water particle velocity 

du/dt = water particle acceleration 

The total force, and total moment of forces, M^ave, can be found through integration: 


^wave = lPme«ialdz+ Jpd.aB<iz ^inertial ^d] 


Eq. 19 


= ii2 + d)Pi„,^a,^z+ l{z + d)p,,,^dz= 


Eq. 20 


In general form, these quantities can be written 


nD^ 

^inertial ^mPS ^ 


Eq. 21 


^drag ~^D r, PS^^wave 


Eq. 22 


It 

^inertial ~ ^mPS ^ ^wave^i^i*^ 


Eq. 23 


^drag ~ t PS^^wave 


Eq. 24 


32 



where: 


= gravity 
= wave height 
= depth 


From this point on we must assume that Airy theory applies to be able to complete the 
analysis of wave forces. A check is required to ensure that the conditions do fall within the 
Airy regime. If they do not, the analysis will proceed using Airy theory with a note of caution 
in the results. The literature provides a plot describing the regions of validity for the various 
wave theories using the wave height and the depth. This plot includes the various Stokes’ 
theories and the Cnoidal theory regions. Reading data off of the plot and performing a curve 
fit yields the following criteria for validity of Aiiy wave theory: 


J , < 0.07 and 0.00103-■ 

sT sT 

o ^ wave o ■* wave 


0.0017 


\-\-e 0.01306 


Eq. 25 


t>0.07 and 0.00103 

sT ^ sT ^ 

o wave o wave 


where: T„, 

d 


= wave period 
= depth 
= wave height. 


Eq. 26 


If either Eq. 25 or Eq. 26 are valid, then Airy wave theory applies in which case the following 
relations apply: 


1 (iKd^ {-Int 

K, = —tanh —— sin —— 


Eq. 27 


1 And!X f 2nt ] ( Int 

" 8 sinh(4;r6f / x)j HtlI 


5 . =1 + 


1-COS )\{lnd / Aj 
{ind / yl,)sinh(2;r<i / a) 


Eq. 28 


Eq. 29 


33 



5z,-2+- 


4 1 + 


And IX 
siiih(4;Ti/ / a) 


1 1-cosh(4;rJ / a) 

2 {And / ?i)s\r^{And / a ) 


Eq. 30 


From Eq. 27 and Eq. 28, the maximum values of the various force and moment components 
can be rewritten and Eq. 21 through Eq. 24 can now be further simplified: 

TtD^ Eq. 21a 


^inertial.m ^mPS a ^wave^i.n 


Pdrag.m ~ PS^^wave ^D,n 


inertial ,in ^inertial.m^i^ 


^drag.m ~ Pdrag.m^D^ 


Eq. 22a 


Eq. 23a 
Eq. 24a 


where Ki m and Ku.m according to Airy theory are obtained taking t = -Twave/4 and t = 0 
respectively. Depending upon depth, the inertial term is much smaller than the drag term and 
can be neglected. However, calculations should be performed across a wave cycle and the 
maximum combined value used for the assessment. When a wave is moving through the pile 
group, the maximum loading is not on every pile. However, since at some point it will be, the 
lateral capacity for each pile will be reduced accordingly. The moments above will be 
combined with the moment from the lateral load induced by the ship and the lateral load 
induced by the current to determine the maximum allowable lateral load. 

For the purposes of this assessment, the hydrodynamic force coefficients can be approximated 


as seen in Table 4. 


Re<3x 10" _ 

3xl0^<i?e 

i?^<2.5xl0^ 

2.5x 10^<^<5x 10^ 

i?,>5x 10^ 


Cd=\.2 _ 

Cd=Q.6 _ 

Cm = 2.0 

Cm= 2.5-J?,/(5x 10^) 
Cm=1.5_ 


Table 4. Hydrodynamic coefficients, Cd and Cm 


The Reynolds number is given by 


34 





T 


where: 

D 

V 


and Umax is given by 


Xo is the deep water wavelength 


_ max 


= maximum particle velocity 
= pile diameter 

= 1.0x10'^ /s, kinematic viscosity seawater 


^ ^wave^ 0 


Eq.31 


“max j ^ 


Eq. 32 


A 


gT ^ 

n _ o wave 

® “ 2;r 


Eq. 33 


and Xa is the local wavelength 


gT ^ 

X.=^-^tanh\ 
^ Itt 


^ In 


\^A J 


Eq. 34 


where: d = depth 

Since Xa appears on both sides of Eq. 34, it is necessary to solve using a root finding 
algorithm such as Newton-Raphson or by using the following approximation provide by 
Professor D.K.P. Yue, Department of Ocean Engineering, Massachusetts Institute of 
Technology. We need to first determine the wave regime, deeper water or shallower water. Let 

co^d An^d 


c = 


Eq. 35 


S '^wave S 

we can then use the value of c to determine which approximation to use to find the wave 
number, k. If 

c 


else,if 


c>2 -> k » —(l + 2e 


c<2^ k w-^(l + 0.169c+"-) 
d 


Eq. 36 


Eq. 37 


thus giving a value for Xa from the relation for the wave number k 


35 




Eq. 38 


2n 2 k 

k = —- => A — 


When considering the incident waves upon the moored ship, the lateral force is a function of 
the reflection coefficient, wave height, depth, and period. For the depth in which a ship will be 
tied up alongside the pier, the waves will be non-breaking during normal weather. Thus, the 
force is due to the increase in hydrostatic head caused by the wave. In extreme circumstances, 
the increase in pressure per linear foot of ship will be 


but will more likely be 




1 H 

Art ^ ^ ^yvave 

AP<-p.g— 


Eq. 39 


Eq. 40 


and will be neglected since the wave height required to generate any significant force on the 
ship will have to be « 10% of the depth or greater which in a depth of 30-35’ is 3-3.5’ waves. 
If the seas are this rough, other considerations will prevail for the safe mooring of the vessel. 


5. Dynamic 

Regarding dynamic analysis, Gaythwaite[3] states that “Most waterfront structures can be 
analyzed using static methods...” As stated previously, marine structures, such as piers, are 
designed for high lateral loading and thus, are relatively rigid with natural periods on the order 
of 0.5 seconds or less[3]. Additionally, immersion in water provides damping in addition to 
that inherent in land-based structures. This study covers only those structures immediately 
adjacent to the shore which may be required for operation in a tactical situation. However, 
there may be exceptions such as piers having vertical cantilever piles. Of the two predominant 
contributions to dynamic effects, periodic waves are of the most concern for everyday 
operations. If a wave having a period close to that of the moored ship is incident to the ship, it 
may result in resonant phenomena that will amplify the ships mooring forces on the pier. 
Without an in-depth, on-site analysis, the best that can be done is to approximate the period of 
the pier and compare it with that of the incident waves. Our primary concern is those piers that 
have no cross bracing and no batter piles. Piers of this type can be idealized as a single degree 


36 



7 


of freedom system with the pilings modeled as cantilever springs and the natural frequency 


estimated using the following: 



= natural frequency of the pier, rad/s, 

= mass of the pier + a portion of the live load, 
= equivalent spring constant 

with keq given by: 


where: 


w. 


n,pier 


m 


n,gq 


£q. 41 


Eq. 42 


where, for a cantilever spring, k„^ is given by: 


3EI 
K =TT 


with: E 

I 

Leff 

and for a round pile. 


= modulus of elasticity for the piling material, psi, 
= moment of inertia of the pile, in^, 

= effective length of the pile, in. 


7 = 


nr 


4 


4 


Eq. 43 


Eq. 44 


where: r = radius of pile, in. 

If the piling has experience damage and has a reduced cross-section, it will be assumed to be a 
rectangular beam whose shape will fit in the remaining pile cross-section. Thus: 



Eq. 45 


where: b 

h 

The period is then found from: 


= base of the rectangle, in, 

= height of the rectangle, in (taken as the smaller dimension 
in the case of pile damage). 


T. = 

pier 


2n 




n,pier 


Eq. 46 


Should there be any structures or installed equipment on the pier, this will increase the mass 
and decrease the natural frequency. 


37 



T 


B. Piles 

Pilings are the primary support for the waterfront structure. The are also the structural 
members most likely to experience damage. During vertical loading they act like a column. 
During lateral loading they can act like a cantilever beam. Thus, one of the most critical 
aspects to a pile is its length. The Naval Facilities Engineering Service Center, formerly Naval 
Civil Engineering Lab, recommends reducing the published ultimate strengths for fir and pine 
pilings that have been treated. However, the values used in this assessment are published 
allowable values and include a factor of safety which should adequately allow for the 
reduction in strength due to treatment while maintaining a conservative capacity estimate. 

1. Fixity 

Fixity is that point in the soil from which the unsupported length is calculated. Typically, soil 
strength information would be available to calculate this using developed relations. However, 
since this information is vmavailable to UCT persoimel, some simplifying assumptions are 
required, Gaythwaite[3] states the depth to fixity, Df, usually lies within a range of 3.5 to 8.5 
pile diameters. NAVFAC[6] provides more detailed guidance in the absence of the coefficient 
of sub-grade reaction (El is the modulus of elasticity to moment of inertia ratio of the pile.): 
Soft, cohesive soils El < 10x10^ psi D/, = 10ft 
El > 10x10^ psiD/, =12 ft 
Loose, granular soils & medium, cohesive soils 
El < 10x10^ psi D/, = 8ft 
EI>10xl0^psiD/, =10 ft 
For other cases D/, = 5 ft. 

The UCT’s possess the capability to perform a Rapid Penetration Test, which is a limited 
near-shore geotechnical survey. The only results from that test that are useful to this 
assessment are those indicating the type of soil present at the site. The type of soils determined 
from the RPT can be correlated directly with the above NAVFAC guidance regarding Df. For 
the purposes of this assessment, the RPT results will compare as shown in Table 5. If RPT test 
results are not available, D/will be assumed to be 8.5 times the pile diameter. Figure 10 
illustrates the concept of depth to fixity. In the case of a batter pile, Df remains the same. 


38 




7 


However, the resulting unsupported length is longer than that in the case of the vertical pile 
since the additional unsupported length for the batter is equal to D/sind where 0 is the angle 
the pile makes with the vertical. 




Soft, cohesive soils 

Very soft clay 

Soft clay 

Soft silt 

Mud 

Loose, granular soils & 
medium, cohesive soils 

Medium clay 

Loose sand 

Other cases 

Medium sand 

Stiff clay 

Dense sand & gravel 


Table 5. Soil compatability table for D/. 


Figure 10. Depth to fixity illustrated. 



2. Vertical 

The pilings supporting the pile behave as columns. The embedded end of the piling is 
considered fixed for the purposes of this assessment. The pile cap end, however, will be 
configured either as piimed or as fixed. The prime difference between the two configurations 
is the presence of cross-bracing in the latter case which restrains the upper end fi’om rotating. 
To determine the unsupported length the distance fi'om the mudline to either the cross¬ 
bracing, if so configured, or the pile cap is added to D/. Lgff, is dependent upon the end 


39 











7 


conditions of the pile. For the two configurations looked at in this assessment, Figure 11 


illustrates the end conditions and the corresponding effective lengths, Lef. 



Figure 11. Bending modes and effective lengths of 2 columns. 


Where this makes a difference as far as this assessment is concerned is in computing the 
working stress of the piling. Since the pilings behave as columns, Euler’s formula for critical 
buckling is applicable. This relation is as follows: 


where: 


Pc 

E 

I 


This leads to the critical stress: 


where: 


O’er 

A 


p 

^cr ~ r 2 

= critical load, Ibf, 

= modulus of elasticity, psi, 
= moment of inertia, in^, 

= effective length, in. 




= critical stress, psi. 


Eq. 47 


£q. 48 


= area of cross section, in . 

The allowable stress is the maximum, or critical, stress reduced by the factor of safety. Once 
this is accomplished, the allowable loading can be determined as follows: 


where: 


Oan 

Ocr 


FOS 


= allowable stress, psi, 
= critical stress, psi. 


Eq. 49 


40 




FOS = factor of safety. 

However, this value must be compared to published values for allowable stresses before 
proceeding with load calculations. The lesser of the two values, henceforth designated Gaii, is 
used in determining allowable axial loading for bearing piles: 

_ . 

PpiK^ert = Circular 

= bhagii rectangular cross - sections 

Tsinker discusses a factor of safety for pile loading as follows: 

“The working load on a pile is defined as the ratio of pile ultimate capacity to 
the appropriate factor of safety. Generally, the safety factor for a single pile, 

2.5 is considered as appropriate. However, where there is a sufficient number 
ofpile loading tests, or where a large body of load experience is available, the 
safety factor of 2.0 is normally considered. In cases where the soil 
characteristics are uncertain or large impact or vibratory loads are expected, 
the safety factor of up to 3.0 and more can be considered. For temporary 
structures, depending on site geological condition and pile loading, the factor 
of safety can be reduced to 1.5-2.0. ”[1] 

Vertical loading on pilings will be discussed further when developing the assessment 
procedures for pile caps. 


£q. 50 
Eq. 50a 


3. Lateral 

The lateral resistance of the structure will be provided by the bearing piles and the batter piles. 
If present, the batter pile capacity in lateral loading far exceeds that of the bearing piles. 
However, both configurations may be encountered and thus are discussed. For bearing pile 
capacity, we look at the maximum moment the pile can be subjected to given the allowable 
stresses for bending as published. If the pile is not braced and merely pinned into the cap, it is 
considered a pinned-fixed column. However, it experiences loading as a cantilever beam. The 
maximum moment for a cantilever beam is expressed as: 




Eq. 51 


In the case of pilings that are braced, they are considered fixed-fixed and the maximum 
moment experienced due to a load is 


41 




M = 


PL 


‘eg 


Given the stress due to bending 


11 


M 


a - 


where 


S = —, elastic section modulus 
c 


nr 

~T 

bh^ 


for a circular pile 

for a rectangular cross - section 


we arrive at a relation between the allowable stress, (Jaii, and the induced moments 

^all,bend ^ ~ ^bending,ship ^wave ^current ^wind 

which then gives us the allowable lateral loading 


nr 


^pile,lot 


^eg 

^eg 

kg 


^all 


^ ^wave ^pile,current 


nr ~ 

^all ^ ^^wave ^pile .current 

< ' > 

bh^ - 

^all ^ ^wave ^pile,current 


for a circular pile - braced 
for a circular pile - pinned 
for a rectangular cross-section 


Finally, adding in Eq. 17, Eq. 23, and Eq. 24, we have 


^pile,lat 


^eg 


^eg 


^eg 


-'all 


■'all 


nr 

’~7 

nr^ 

~r 

bh^ 


nif 


- C^Pg-r^^Md + -C^pgDH„jK^^d\ --pSo^k 


7t 1 

Cm PS ^ ^waveK^i^ ^ C^pgDH^^ K^S^d^ 

urt. I nPP _ 1 _ . , _ . 

<^aii~7'-\ CMPS—^H„^K,S,d + -CapgDH„^ K^S^d 


■^P.CoAVf 


d -3 

-^P.CoAV/ 


Eq. 52 

Eq. 53 

Eq. 54 

Eq. 54a 
Eq. 54b 


Eq. 55 

Eq. 56a 

Eq. 56b 
Eq. 56c 


Eq. 57a 

Eq. 57b 
Eq. 57c 


For batter piles, we refer back to Euler’s formula (Eq. 47) and the published allowable stress 
in compression parallel to the grain to find the maximum allowable load on a batter. 


42 



7 


nD^ 


pile,batter,lot 


' ^alt,comp ^batter 


Eq. 58 


Typically, a batter pile can resist lateral load in tension as well as in compression. However, 
detailed knowledge of the soil characteristics are required to conducted a thorough analysis of 
this capacity. Tsinker[l] states that, based upon additional geotechnical information, it is 
customary to assume 2/3. For the purposes of this assessment, the value will be assumed to be 
1/3 that of the axial capacity[7]. 


C. Decking 

The decking, which includes the structural members from the pile cap up, can all be modeled 
as beams. The stringers are modeled as simply supported beams while the pile caps and the 
planking are modeled as continuous beams. 


1. Stringers - Simply Supported Beams 

A simply supported beam is supported at each end and has a single span. It is statically 
determinate and develops a maximum moment for a concentrated load when the load is placed 
at the midpoint. The value of this moment is equal to 

^ EssacL Eq. 59 

4 


If a uniform load is present across the entire span, it creates the following moment 


M = - 




5 


Eq. 60 


For distribution of wheel loads to stringers, AASHTO[7] provides an adjustment to the live 
load bending moment for timber plank floors as follows: 

^ S 

^djmom =-^ 

where: 5 = span of stringers, ft 

The allowable load can now be found in a manner similar to that for the pile in bending using 
Eq. 53 


43 



T 


P = P 

St,all cone,all 


4c^allS 


Jh h ^ 

^ ^stringer stringer 


{bent spacing) Adj 3{bent spacing Adj ^ 


' all,bend 


{lb) 


= P = 

uni,all 




stringer b stringer 


mom 

2 


M'mom {bent spacingf SAdj„„„ (bent spacing) 


2 ^all,bend 


{lb / in) 


£q. 61a 
£q. 61b 


where: bsoinger - stringer base dimension, in 

htringer = Stringer height dimension, in 

o'aii.bend = allowable stress, psi 

bent spacing = spacing of bents, in 

The uniform loading can be converted to a psf capacity if we consider tributary loading 
analysis, that is, the stringer carries half the planking span load on either side. Thus, from Eq. 
61b the stringer can carry a uniform load of; 

p _ Eq. 62 

urn .all,tot stringer spacing 


Since a pier will be subjected to various types of point loading such as cargo handling 
equipment and vehicular traffic AASHTO[7] specifications apply. Figure 12 illustrates 
standard types and configurations of truck loading contained therein. The designations include 
either H for a two axle truck or HS for a tractor truck and the gross tons of the truck and 
tractor truck (w/1®* axle) respectively. 


a. HS Truck Loading 

The variable spacing in Figure 12 for the HS trucks account for the various tractor trucks 
available on the road today. When calculating the moment, the variable spacing, V, is to be 
adjusted fi:om 14-306 to provide the maximum value of moment. During cargo handling 
operations, trucks will be transiting the length of the pier in both directions. However, fully 
loaded trucks should be transiting in only one direction. Thus, load capacity specifications 
should be similar to those for a single lane bridge as presented by AASHTO[7]. 


44 





HS15-44 6.000 iBS, 24.000 LBS. 24,000 LBS. 



2 '^" 6 ‘- 0 " 2 ’- 0 ‘' 



W * COMBINED WEIGHT ON THE FIRST TWO AXLES WHICH IS THE SAME 
AS FOR THE CORRESPONDING H TRUCK. 

V = VARIABLE SPACING — 14 FEET TO 30 FEET INCLUSIVE. SPACING TO BE 
USED IS THAT INHICH PRODUCES MAXIMUM STRESSES. 

CLEARANCE AND 



2 -^'' 6 ‘- 0 " 2 -- 0 ‘- 


SUDdard US IVucks 


SteBdvd HTVwki 


Figure 12. AASHTO Truck specifications 


Since the truck will be traveling along the stringers, it is considered a rolling load and thus, 
the maximum moment calculation is more complex. However, Marks ’ Standard Handbook 
for Mechanical Engineers^^ provides a solution strategy for this type of loading. For the HS 
trucks with two evenly loaded axles, on a simply supported beam such as stringers, the 


following relation applies: 



Eq. 63 


where: P = the wheel load, lbs, 

L = bent spacing, ft, 

a = the spacing between axles. 

There are some practical limitations to this relation. For example if X < a, then the maximum 
moment could be caused by only one wheel load, placed mid-span. Thus, for a range of values 
of L/a, Eq. 59 applies. To determine which equation should be used to give the maximum 
moment, we set Eq. 59 equal to Eq. 63 


45 
















7 


M = 






ilV 




we then get an expression relating L and a 

r2 ^2 

X ^ « 

--La + --0 

Solving Eq. 64 for L, we have 

fl + -V2 

Of the two solutions, only Eq. 65a applies since Eq. 65b results in a stringer span shorter than 
the axle span. Thus, at a ratio of L!a = \ + -j212 = 1.707, the applicable moment equation 
changes. To determine the applicable regimes for each of the equations, a plot illustrates the 
resulting values of each versus the ratio L/a is in Figure 13. From this plot, it is clear that for 
LI a < 1.707, Eq. 59 dominates and for LI a > 1.707, Eq. 63 is applicable. 


Eq. 64 

Eq. 65a 
Eq. 65b 


Plots of moment equation results vs. L/a 



Figure 13. Comparison of moment equation results vs. L/a - HS Loading 

AASHTO specifies that a should be varied from 14-30’ to determine the maximum moment. 
However, observation of Figure 13 reveals that the moment increases with increasing L/a. 
This indicates that the smallest value of a, 14’, should be used when calculating max moment. 
Using Eq. 53 and Eq. 54, we now have 


46 




T 


bent spacing 


a 


bent spacing 


< 1.707 


> 1.707 


7h h ^ 

^ ^stringer '^stringer 


' st,all,HS 


3 AdJ„„„(bent spacing) 

(bent spacing)b,,^„g^Xringe/ 


all,bend 


ilb) 


' st,all,HS 


a 


3 Adj\^^\bent spacing-- 


2 ^all,bend 


{lb) 


Letting a = 14, the allowable stringer loading is 
bent spacing < 23.9 2b 


Stringer ' stringer 


‘ st,all,HS 


bent spacing > 23.9 


‘ st,all,HS 


3 Adj„,^„(bent spacing) 

(bent spacing)b^,,,„^^Xtringe ' 

3Adj„„„ (bentspacing-?) 


'all,bend 


{lb) 


2 ^all, bend 


{lb) 


£q. 66 

£q. 66a 


£q. 67 

£q« 68 


b. H Truck Loading 

H truck loading differs from HS in that it has loads of different magnitudes on the two axles. 
For H trucks, the axle span is fixed at 14’, thus, for any stringer length less than 14’, the 
maximum moment will occur when the heavy axle is mid-span on the beam and Eq. 61a 
applies. As with the equally loaded axles of the HS trucks, once the value of L exceeds a, or 
14’ in this case, the combination of point loads on the span has the potential to produce a 
moment which exceeds that calculated using Eq. 61a. Using Microsoft Excel®, a model was 
developed to calculate the reaction forces and, using Excel® add-in Solver, would iterate the 
moment arm value to find the maximum moment generated in a simply supported beam. Data 
was compiled for various values of L/14 and are displayed in Figure 14. Based upon these 
results, the maximum moment in the beam for L! a >« 1.93 is a straight line of the form: 

y=-mx + b 


thus, after a line fit, we have 


M = 


4.34475--1.6009 
V a 


P 


with a = 14, 


Af = (0.3103i-1.6009)P 


£q. 69 


47 



Maximum moment using two methods vs. Ua 



1.00 1.20 1.40 1.60 l.SO 2.00 2.20 2.40 2.60 ISO 3.00 

Ua 

Figure 14. H Loading resulting moments vs. Ua 


Finally, for the maximum allowable load due to an H truck, we have 
bent spacing <21 2b ■ h ■ ^ 

^ o ^ stringer'‘stringer _ 

^st,aIl.H ~ ~ j r, ! \^allj)end\‘^) 

3 Adj„„„[bent spacing) 


bent spacing > 27 


h h ^ 

^stringer stringer 


mom [l-862[bent spacing - 9.606 ) 


Eq. 70 

Eq. 71 


c. Forklift Loading 

Table 6 is taken from NAVFAC[4] and provides the maximum wheel loads for a number of 



Table 6. Forklift wheel loads and dimensions. 


48 


















































different sized forklifts. As can be seen, the min imum spacing of wheels occurs with the front 
wheels which are also eqxially, and the heaviest, loaded. Therefore, when checking for forklift 
capacity on the pier, Eq. 66 and Eq. 66a can be used with the appropriate value of Wheel 
spacing inserted for a. 

d. Crane Loading 

Appendix D contains the load data[4] on a number of mobile cranes. The outrigger loads 
therein can be considered as either point loads or uniform loads if reduced by the outrigger 
area. The program will provide maximum loading capacity for stringers and pile caps. It is left 
up to the on-site personnel to enter the tables and determine the maximum crane loading. 

e. Stringers - A Final Note 

All of the analysis regarding stringers has been conducted under the assumption that, as the 
loaded truck transits the pier, a stringer will have to bear a single wheel load from each axle. 
This assumption is fairly safe given that the wheel spacing on both trucks and forklifts is 6’ or 
larger and the span on point loads for cranes is larger still. Should the stringer spacing exceed 
6’, the above analysis may be less accurate. However, for timber piers, the stringer spacing is 
usually well within the range considered. Additionally, as the stringer spacing increases, the 
planking load carrying ability will begin to dominate before the above analysis begins to break 
down. 


2. Continuous Beams 

Continuous beams “...[have] two or more spans (i.e., three or more supports) and is statically 
indeterminate.”’^ The EIT Reference manual provides a method for determining the reactions 
on continuous beams using the three-moment equation. When analyzing a beam with more 
than two spans, the equation must be used with three adjacent supports at a time, starting with 
a support whose moment is known.[13] For a pile cap, this is the end where the moment is 
zero. In the most general form, the three moment equation can be used with beams of varying 
cross-section and looks like 


h 


+ 




^k+2^k+\ 

= -6 

A^a 

^ A+i^ 

1 1 

^k+\ J 

+ 

^k + \ 

1 



Eq.72 


49 



However, for beams of constant cross-section, such as pile caps and planking, the moment of 
inertia terms can be eliminated leaving 


-^* 4 + 4 + i ] + ^*+2-^*+i -“6 * + 


. 4 + 1 ^ 


Eq. 73 


Figure 15 illustrates the terms present in Eq. 73. To analyze the continuous beam 
configuration, a Microsoft Excel® model was developed that include 8 supports, 7 spans. This 
model resulted in a system of k-1 equations with k-1 unknowns. Unit loads representing 
vehicle axle loads were “placed” on the beam and the equations were solved using the Excel® 
add-in Solver. In this way, the percentage of the axle load carried by a particular support could 
be calculated. The maximum moment is calculated as well. A sample results screen can be 
seen in Figure 16. 





Figure 15. Simplified Three-Moment Equation Terms [13] 


50 





T 


M 0 000 0.036 -0.145 -0.820 -0.146 0.039 -0.010 0.000 

0.5 0.5 




7 3 

3 7 




10 

10 

10 

10 

10 

10 

10 

1 

2 

3 

4 

5 

6 

7 


R 0.004 -0.022 0.101 0.835 0.101 -0.023 0.006 -0.001 

Figure 16. Three-moment equation model output 

a. Pile Caps 

The three-moment equation model was used to evaluate the impact of pile spacing on the 
loading of the pile cap. Figure 17 and Figure 18 illustrate the effects of increasing the pile 
spacing from 6’ to 10’. As can be seen, and as expected, the moment and shear increase. 

Shear and Moment Diagram - Continuous Beam 

40 % - 



Figure 17. Shear-Moment diagram: Pile spacing - 6'; Axle - centered 


51 




Shear and Moment Diagram - Continuous Beam 


60 % j 



- 100 % -I- 


Figure 18. Shear-Moment diagram: Pile spacing -10'; Axle - centered 

Data was collected on the maximum values as the axle position was varied over the support 
and across the beam. For example, the loads were placed in such a way as to model one wheel 
load resting directly over a support while the other extends 6’ into the span. (6’ is the standard 
axle width considered in design) The calculations were run and the resulting maximum 
moments and support loadings recorded. This operation was performed for a number of 
variations of pile spacing and axle placement. A curve was then fit to the collected data 
providing the maximum moment in the pile cap as a function of the pile spacing and the axle 
load applied 

f - pile spacing\ ( pile spacing 

M^= -124.02 + 92.39 l-e >3.59 +169.237 l-e 


Eq.74 


Combining Eq. 74 with Eq. 53, we obtain the maximum allowable axle loading for the pile 
cap. The maximum wheel load would be half of this value. 



52 





The data regarding maximum support loading indicates what percentage of an axle load is 
transferred to the individual piles. When a curve is fit to the data, and the resulting expression 
combined with that of allowable loading, = Aag ,,, the maximum allowable axle load on 

the pile cap as limited by the pile is given as follows 

r - dead load 


A CT 

"^pile cross sec tion ^ all,comp,pile 


pile cap,all,pile 


f -pile spacing \ , 

^ -pile spacing ^ 

U-e \+22.3631 

1-e 

V J 

1 


where the numerator is the applicable expression from Eq. 50, Eq. 50a. It is unlikely that the 
pile will be the limiting factor on pile cap loading, but in the case of a damaged pile, Eq. 76 
may apply. 

When the model results for maximum moment due to uniform loading are evaluated and fit to 
a curve, we have 


M = 0.1056337ir 


Eq. 77 


which when combined with Eq. 53 and the tributary area of a pile cap, which is equal to the 
bent spacing, gives us the maximum allowable uniform loading on the pile caps 

Eq. 78 


W = 


h h ^ 

^pile cap^^pile cap 


6 • 0.1056338[pilespacingj{bent spacing) 


all,bend 


If a pile is severely damaged or missing, the pile cap will span twice the pile spacing making it 
susceptible to increased moments. This situation can be modeled using the three-moment 
equation with the assumption that only a single pile will be missing from a bent. The model 
was evaluated with the missing pile first being placed in the middle of the bent. It was then 
moved to a position next to an exterior pile. The maximum moments transferred to the pile 
cap occurred in the latter case and it is this equation that will be used to determine the 
maximum point load on a pile cap with a pile missing. 

h h ^ 

_ ^pile cap ^pile cap Eq. 79 

6■0.26169[pilespacing) 


The resulting maximum uniform loading was evaluated in the same fashion with the 
following result 


53 



T 


^ ^pile cap^pile cap 

6-0.1996[pilespacing^bent spacing) 


'cdlbend 


Eq. 80 


The previous discussion focused on an interior pile being severely damaged or missing. If this 
is the case with an exterior pile, the pile cap and loading is treated as a simple cantilever beam 
with either point loading or uniform loading which creates a moment. The following relations 
apply. 


W^,= 


bh 

pile cap pile cap 

^all “ .1 . \ ^cdUbend 

oypile spacing) 


7h h ^ 

^ ^pile cap^^pile cap 


6{pile spacing {bent spacing 


‘'all,bend 


Eq. 81 

Eq. 82 


b. Planking 

The deck planking is also modeled as a continuous beam. As such, the three moment equation 
model is useful in determining allowable loading. However, for the planking, as with the 
stringers, wheel loads were analyzed instead of axle loadings. This is because of the relative 
sizes of the wheel, the wheel loading area, and the stringer spacing, which is the planking 
span. Additionally, since the plank dimensions and the wheel dimensions are of the same 
order, the loading is better represented as a uniform load instead of a point load. Eq. 77 and 
Eq. 78 apply to this situation using stringer spacing (in) instead of pile spacing and plank 
width in place of bent spacing. 

~_ ^plankingplanking _ Eq. 83 

"all ~ / \t \ ^aijfend 

0.6338[stringer spacing j 


54 


VI. Rapid Structural Assessment- Pier 


Rapid Structural Assessment - Pier, or RSAP for short, is written in the C programming 
language (for code, see Appendix E). It is compiled on a PC to run in Windows 16-bit mode. 
The code is basic enough, however, that with a few minor changes, the program can run on a 
DOS platform. Additionally, portability to other platforms, such as UNIX, has been 
considered, and with a few changes, RSAP can be easily ported. However, the end users of 
this program, the UCTs, are using portable PCs in the field and thus, this program was 
customized to that end. The interface presents the user with simple query screens that prompt 
the user for data input. Once all of the inspection data has been entered, the user has the 
option to view the results on-screen, make changes, or pull up a previously entered file. When 
the user exits the program, the inspection data and the assessment results are printed to a text 
file that can be easily viewed with any word processor or text editor. Additionally, a script file 
is generated that can be run in MATLAB® which will provide graphical representation, such 
as that in Figure 19 of the assessment results. Included in the results section of the report are 
xmiform loading and concentrated loading capacities for the inspected pier. The results will 
also identify various sized equipment such as forklifts, trucks, and containers that can be 
placed on the pier. 



Figure 19. Sample MATLAB Output 


55 





T 


VII. Conclusion 

Now that we have calculated the allowable uniform capacity and concentrated load capacity 
for the main structural elements, we can establish the load capacity for the pier. In the case of 
the decking, the values will remain constant throughout. With the piles, however, the capacity 
will decrease as we move seaward on the pier due to the longer piles in deeper water. This 
may factor in to the ultimate pier capacity. If so, the results will reflect this because it is 
possible for a ship to off-load at various locations on a pier. If the lower value of capacity for 
the longer piles were established for the whole pier, it may unnecessarily restrict use of an 
otherwise capable pier. For the other three structural members, the lessor value will prevail as 
the load capacity for those members. This value will require adjustment for the dead load 
before we have our assessed capacity in the vertical direction. 

We have also determined the allowable capacity in the lateral direction. After adjusting for 
environmental loads, we can determine the loading capacity per linear foot of pier that a ship 
may impose. With unit values for the various enviroiunental loadings, an approximate ship 
size can be evaluated for safe berth at the pier. 

The UCT’s inspect piers that are being considered for use in tactical operations. They can 
usually perform an inspection on an average-sized pier in days. The results of their inspection, 
however, provide them no indication of the piers load carrying capability. This prevents the 
pier fi'om being considered for any type of combat operation. RSAP enables the UCT 
inspection team obtain an estimate of the piers structural capacity. 

Throughout the development of this assessment, all analytical calculations have been reduced 
to variables, or inputs, that are part of the inspection results already, or easily collectible on¬ 
site. Additionally, the assessment has been established using the guidelines for design of 
marine waterfront structures. When portions of the assessment were not readily quantifiable, 
assumptions were made that tended toward conservative, thus ensuring that the results would 
be within an acceptable range. This will enable a rapid, reliable, assessment of any timber pier 
being considered for tactical operations. 


56 



References 


' Tsinker, G. P., 1997. Handbook of Port and Harbor Engineering. Chapman and Hall, New 
York. 

^ Underwater Construction Team 2 Web Page. 

^ Gaythwaite, J. W., 1990. Design of Marine Facilities for the Berthing, Mooring, and Repair 
of Vessels. Van Nostrand Reinhold, New York. 

NAVFAC (1980). Piers and Wharves. Piers and Wharves. Design Manual 25.1. Department 
of the Navy, Naval Facilities Engineering Command, NAVFAC DM-25.1, Alexandria, VA 
22332-2300. 

^ NAVFAC(1994). Piers and Wharves. Piers and Wharves Military Handbook 1025/1. 
Department of the Navy, Naval Facilities Engineering Command, MBL-HDBK-1025/1, 
Change 3, Alexandria, VA 22332-2300. 

^NAVFAC(1988). General Criteria for Waterfront Construction. Military Handbook 1025/6. 
Department of the Navy, Naval Facilities Engineering Command, MIL-HDBK-1025/6, 
Alexandria, VA 22332-2300. 

^ AASHTO(1989). Standard Specifications for Highway Bridges, 14* ed. Plus annual 
supplements to 1991. Washington, D.C. 

® Conversation with Mr. Herb Herrmann, Deputy Director, Ocean Facilities Program, Naval 
Facilities Engineering Service Center, East Coast Detachment, Washington, D.C., 20374. 
^NAVFAC (1997). Conventional Underwater Construction and Repair Techniques. 
Publication 990. Department of the Navy, Naval Facilities Engineering Command, NAVFAC 
P-990 for CD January 1997, Alexandria, VA 22332-2300. 

Coastal Engineering Research Center(1984). Shore Protection Manual, Volume II. 
Department of the Army, Waterways Experiment Station, Corps of Engineers, Vicksburg, 

MS, 39180. 

Beer, F. P. and E. R. Johnston, Jr. (1981). Mechanics of Materials, McGraw-Hill, New 
York 

Avallone, E. A. and T. Baumeister HI, eds. (1986). Marks ’ Standard Handbook for 
Mechanical Engineers, 9* ed. McGraw-Hill, New York. 

Lindeburg, M. R. (1990). Engineer-In-Training Reference Manual, 1 ed. Professional 
Publications, Belmont, CA. 


57 



Appendix A - Levels of Inspection 

3.3.1 Levels of Inspection 

Three basic types or levels of inspection are used for inspecting marine facilities. They are 
distinguished by the resources and preparation needed to do the work and the type of 
damage/defect that is detectable, as: 

• Level I - General Visual Inspection. The Level I effort can confirm as-built structural plans 
and detect obvious major damage or deterioration due to over-stress (collisions, ice), severe 
corrosion, or extensive biological growth and attack. This type of inspection does not involve 
cleaning of any structural elements and can therefore be conducted much more rapidly than 
the other types of inspections. The Level I effort is essentially a general inspection “swim-by” 
overview. It does not involve cleaning of structural elements, which allows the inspection to 
be conducted rapidly. The underwater inspector relies primarily on visual and/or tactile 
observations (depending on water clarity) to make condition assessments. These observations 
are made over the specified exterior surface area of the imderwater structure, whether it is a 
quaywall, bulkhead, seawall, pile, or mooring. Although this is an overview, close attention 
should be given to confirming or providing information to update available facility drawings 
and condition evaluations. 

• Level n - Close-Up Visual Inspection. Level 11 efforts are complete, detailed investigations 
of selected components or sub-components, or critical areas of the structure, directed toward 
detecting and describing damaged or deteriorated areas that may be hidden by siuface bio¬ 
fouling. Limited deterioration measurements are obtained. These data are sufficient for gross 
estimates of facility load capability. This type of inspection will generally involve prior or 
concurrent cleaning of part of the structural elements. Since cleaning is time consuming, it is 
generally restricted to areas that are critical or that may be typical of the entire structure. 
Simple instruments such as calipers and measuring scales are commonly used to take physical 
measurements. Subjective judgments of structural integrity are occasionally made by probing 
wood with ice picks and by pounding concrete with hammers. 

• Level in - Highly Detailed Inspection. This level of inspection is primarily designed to 
provide data that can be used to perform a structural assessment and will often require the use 
of Nondestructive Testing (NDT) techniques. The procedures are conducted to detect hidden 
or immin ent damage. The training, cleaning, and testing requirements will vary depending on 
the type of damage/defect that is to be investigated and the type of inspection equipment to be 
used. In some cases. Level in inspections will require the use of partially destructive 
techniques such as sample coring in wood or concrete, material sampling, and in-situ surface 
hardness. The use of Level El inspection techniques is usually limited to key structural areas 
that may be suspect, or to structural areas that may be representative of the overall structure. 


58 



PILE INSPECTION RECORD 


Appendix B > Pile Inspection Record 

UNDERWA TER INSPECTION PROCEDURES 



135 


59 






















Appendix C - Pile Condition Ratings for Timber Piles 

UNDERWA TER INSPECTION PROCEDURES 


Timber Pile 
Condition 

Rating Explanation 


NI 

ND 



Not inspected, inaccessible or passed by 
No defects: 

- less than 5% lost material 

- sound surface material 

- no evidence of borer damage 

Minor Defects: 

- 5 to 10% lost material 

- sound surface material 

- no evidence of borer damage 

- minor abrasion damage 


Moderate Defects: 

- 15 to 45% lost material 

- significant loss of outer shell material 

- evidence of borer damage 

- significant abrasion damage 


Major Defects: 

- 45 to 75 % lost material 

- significant loss of outer shell and 
interior material 

- evidence of severe borer damage 

- severe abrasion damage 


Severe Defects 

- more than 75% lost material 

- no remaining structural strength 

- severe borer damage 


Figure 3-14. 

Explanation of pile condition ratings for timber piles. 


137 


60 









Appendix D - Crane Loading Data Charts 


61 



50-TON TRUCK CRANE 



CRANE TRAVELING - BOOM OVER FRONT 


FLOAT SIZE 

r-r' X rr* 

FLOAT AREA 
4.M 8Q. FT. 



1. DATA SHOWN FOR OUTRIGGER FLOAT 
LOADS ARE FOR OVER SIDE AND OVER 
REAR LIFTS. FOR OVER FRONT LIFTS. 

A FRONT BUMPER FLOAT IS REQUIRED. 

2. BOOM IS OVER THE CORNER FOR WHICH 
FLOAT LOAD IS GIVEN. 

3. FOR EQUAL RADII, RATED LOADS VARY 
according TO BOOM LENGTH. 


PLAN - OUTRIGGERS EXTENDED 


1 CRANE TRAVELING - RUBBER TIRE WHEEL LOADS (LBS) | 




BOOM OVER FRONT 

BOOM OVER REAR | 

TIRES 

BOOM 

TOTAL 

EACH 

EACH 

EACH 

EACH 

LENGTH 

WEIGHT 

FRONT 

REAR 

FRONT 

REAR 

NO. SIZE 

(FT.) 

(LBS.) 

SINGLE TIRE 

DUAL It RE 

SINGLE TIRE 

DUAL TIRE 

12 14.00-20 

40 





WMMII 

1 OUTRIGGER FLOAT LOADS (LBS) \ 

RATED 

LOAD 

RADIUS 

BOOM 

LENGTH 



FLOAT NUMBER 



(LBS.) 

(FT.) 

(FT.) 

(1) 

(2) 

(3) 

(4) 

100,000 


mm 

89,500 

107,000 

112,000 

64,500 

59,800 



89,500 

107,000 

112,000 

84,500 

46,700 

30 

B£H 

85,000 

101,700 

106,400 

80,300 

30,700 

40 


75, 

200 

89,100 

94,100 

71,000 

22,900 



72,500 

86,700 

90,700 

68,500 

17,700 



69,800 

83,500 

87,400 

65,900 

14,500 

70 

70 









11 ,800 

80 

80 









9,700 

90 

90 









8,050 

100 

100 









6,750 

110 

no 









5,550 

120 

120 









4,550 

130 

130 










130 

140 









■ 

130 

150 

69,800 

83,500 

67,400 

65,900 


FIGURE 9 

50-Toti Truck Crane Loadings 
25.1-27 


62 

































CRANE TRAVELING - BOOM OVER FRONT 


FLOAT SIZE = 

zr-xr-r* * 
FLOAT AREA *cp 
ASS SO. FT. 



70-TON TRUCK CRANE 


1. DATA SHOWN FOR OUTRIGGER FLOAT 
LOADS ARE FOR OVER SIDE AND OVER 
REAR LIFTS, FOR OVER FRONT LIFTS. 

A FRONT BUMFER FLOAT IS REQUIRED. 

2. BOOM IS OVER THE CORNER FOR WHICH 
FLOAT LOAD IS GIVEN. 

a FOR EQUAL RADII, RATED LOADS VARY 
ACCORDING TO BOOM LENGTH. 


PLAN - OUTRIGGERS EXTENDED 


CRANE TRAVELING - RUBBER TIRE WHEEL LOADS (LBS) 


TIRES boom total 

LENGTH WEIGHT 
NO. SIZE (FT.) (LSS.) 


12 14.00-201 40 I 114,580 


BOOM OVER FRONT 


EACH EACH 

FRONT REAR 

SINGLE TIRE DUAL TIRE 


4,683 I 23,963 


BOOM OVER REAR 


EACH EACH 

FRONT REAR 

SINGLE TIRE DUAL TIRE 


12,780 I 15,865 


OUTRIGGER FLOAT LOADS (LBS) 


RATED 
LOAD 
I LBS.) 


140,000 

107,000 

59.100 
37,300 
27,800 

21.500 

17.100 
14,000 

11.500 
9,550 

8.150 
6,800 

5.600 

4.600 
3,650 
3,400 

3.150 
2,900 


RADIUS 

(FT.) 


BOOM 

LENGTH 

(FT.) 



I 2 1,000 
12 1,000 
100,400 
87,100 
81,700 


FLOAT NUMBER 


81,700 


FIGURE 10 

70-Ton Truck Crane Loadings 
25.1-28 


145,500 

151,000 

145,500 

151,000 

120,800 

125,300 

104,800 

108,700 

98,200 

102,000 

98,200 

102,000 


115,000 
115,000 
95,500 
82,800 
77,600 


77,000 


63 





































90-TON TRUCK CRANE 



CRANE TRAVELING - BOOM OVER FRONT 


1. DATA SHOWN FOR OUTRIGGER FLOAT 
LOADS ARE FOR OVER SIDE AND OVER 
REAR LIFTS. FOR OVER FRONT LIFTS. 

A FRONT BUMPER FLOAT IS REQUIRED. 

2. BOOM IS OVER THE CORNER FOR WHICH 
FLOAT LOAD IS GIVEN. 

3. FOR equal radii. RATED LOADS VARY 
ACCORDING TO BOOM LENGTH. 


CRANE TRAVELING - RUBBER TIRE WHEEL LOADS (LBS) | 





1 BOOM OVER FRONT 

1 BOOM OVER REAR | 

TIRES 

BOOM 

TOTAL 

EACH 

EACH 

EACH 

EACH 

LENGTH 

WEIGHT 

FRONT 

REAR 

FRONT 

REAR 

NO. SIZE 

(FT.) 

(LBS.) 

SINGLE TIRE 

DUAL TIRE 

SINGLE TIRE 

DUAL TIRE 

12 14.00-24 

50 



28,091 

12,115 

22,083 

1 OUTRIGGER FLOAT LOADS (LBS) | 

RATED 

LOAD 

RADIUS 

BOOM 

LENGTH 



FLOAT NUMBER 



(IBS.) 

(FT.) 

(FT.) 

(1) 

(2) 

(3) 

(4) 

180,000 

12 

50 

133,500 

180,500 

187,000 

126,500 

125,000 

20 

t 

133,500 

180,500 

187,000 

126,500 

71,800 

30 


114,600 

155,200 

160,800 

108,800 

46,200 

40 

f 

100, 

100 

135,400 

140,300 

94,900 

33,500 

mSm 

50 

93,450 

126,350 

130,900 

88,550 

25,900 


60 









20,700 

70 

70 









16,900 

80 

80 









14,000 

90 

90 









11,600 

100 

100 









9,700 


1 10 









8,350 

120 

120 









7,000 

130 

ISO 









5,750 

140 

140 









4,700 

150 

150 









4,400 



160 









4,200 



170 









3,950 



180 









3,600 



190 









3,300 

ISO 

200 

93,450 

126,350 

130,900 

88,550 


FIGURE 11 

90-Ton Truck Crane Loadings 
25.1-29 


FLOAT SIZE 
y-r* x r-r* 
FLOAT AREA 
4.89 SO. FT. 



PLAN -- OUTRIGGERS EXTENDED 


64 


































115-TON TRUCK CRANE 


CRANE TRAVELING - BOOM OVER FRONT 


FLOAT SIZE 

FLOAT AREA 
4.«8Q. FT. 



1. DATA SHOWN FOR OUTRIGGER FLOAT 
LOADS ARE FOR OVER SIDE AND OVER 
REAR LIFTS. FOR OVER FRONT LIFTS, 

A FRONT BUMPER FLOAT IS REQUIRED. 

2. BOOM IS OVER THE CORNER FOR WHICH 
FLOAT LOAD IS GIVEN. 

a FOR EQUAL RADII, RATED LOADS VARY 
ACOORDING TO BOOM LENGTH. 


PLAN - OUTRIGGERS EXTENDED 



CRANE TRAVELING- 

RUBBER TIRE WHEEL LOADS (LBS) 


1 




1 BOOM OVER FRONT 

1 BOOM OVER REAR | 

TIRES 

BOOM 

TOTAL 

EACH 

EACH 

EACH 

EACH 

LENGTH 

WEIGHT 

FRONT 

REAR 

FRONT 

REAR 

NO. SIZE 

(FT.) 

(LBS.) 

SINGLE TIRE 

DUAL TIRE 

SINGLE TIRE 

DUAL TIRE 

12 14.00-24 

50 



lESQOl 

15,518 

25,280 

OUTRIGGER FLOAT LOADS (LBS) | 

RATED 

LOAD 

RADIUS 

BOOM 

LENGTH 



FLOAT NUMBER 



(LBS.) 

(FT.) 

(FT.) 

(1) 

(2) 

(3) 

(4) 

230,000 

1 2 


185,000 

233,000 

241 

.500 

176,500 

161,100 

20 


185,000 

233,000 

241,500 

176,500 

78,900 

30 


138,800 

174,800 

181 

,100 

132,400 

50,900 

40 

f 

118,400 

149 

,100 

154^00 

113,000 

37,000 


50 

III , 

000 

139,800 

144,900 

105,900 

28,500 

60 

60 









22,900 

70 

70 









18,900 

80 

80 









15,600 

90 

90 









13,000 

100 

100 









i0,800 

110 

1 10 









9,200 

120 

120 









7,700 

130 

130 









6,400 

140 

140 









5,200 

150 

150 









4,200 

160 

160 









3,250 

170 

170 









2,950 

170 

180 









2,500 

170 

190 





1 




2,250 

170 

200 

III, 

000 

139,800 

144,900 

105,900 


FIGURE 12 

115-Ton Truck Crane Loadings 
25.1-30 


65 























140-TON TRUCK CRANE 


CRANE TRAVELING - BOOM OVER FRONT 


FLOAT SIZE 
r-Z" X r-T' 
FLOAT AREA 
4.69 SO. FT. 



1. DATA SHOWN FOR OUTRIGGER FLOAT 
LOADS ARE FOR OVER SIDE AND OVER 
REAR LIFTS. FOR OVER FRONT LIFTS. 

A FRONT BUMPER FLOAT IS REQUIRED. 

2. BOOM IS OVER THE CORNER FOR WHICH 
FLOAT LOAD IS GIVEN. 

3. FOR EQUAL RADII. RATED LOADS VARY 
ACCORDING TO BOOM LENGTH. 


FLAN - OUTRIGGERS EXTENDED 


CRANE TRAVELING - RUBBER TIRE WHEEL LOADS (LBS) | 




1 BOOM OVER FRONT 

1 BOOM OVER REAR | 

TIRES 

BOOM 

TOTAL 

EACH 

EACH 

EACH 

EACH 

LENGTH 

WEIGHT 

FRONT 

REAR 

FRONT 

REAR 

NO. SIZE 

(FT.) 

(LBS.) 

SINGLE TIRE 

DUAL TIRE 

SINGLE TIRE 

DUAL TIRE 

12 14.00-24 

50 

168,821 


35,494 

13,759 

28,447 

1 OUTRIGGER FLOAT LOADS (LBS) | 

RATED 

LOAD 

RADIUS 

BOOM 

LENGTH 



FLOAT NUMBER 



(IBS.) 

(FT.) 

IFT.) 

(1) 

(2) 

(3) 

(4) 

280,000 

12 

50 

172,500 

225,500 

233,500 

164,000 

138,360 

25 

t 

172,500 

225,500 

233,500 

164,000 

1 1 4,400 

30 

1 

163,900 

214,200 

221,800 

155,800 

74,900 

40 

f 

146,600 

191,700 

198,500 

139,400 

55,100 

50 

50 

133,700 

174.800 

181,090 

127,100 

43,400 

60 

60 

131 

100 

171 

,400 

177.500 

124.600 

35,100 

70 

70 









29,200 

80 

80 









25,200 

90 

90 









21,400 

100 

100 









18,500 

110 

no 









15,900 

120 

120 









14,000 

130 

130 









12,200 

140 

140 









10,500 

ISO 

150 









9,050 

160 

160 









7,700 

170 

170 









6,650 

180 

180 









5,550 

190 

190 









4,500 

200 

200 









4,300 

200 

210 









3,500 

200 

240 







1 


2,650 

200 

270 

131,100 

171,500 

177,500 

124,600 


FIGURE 13 


140-Ton Truck Crane Loadings 
25,1-31 


























Appendix E - Program Listing 

/* (C)1999 All rights reserved - R. J. Keiter */ 

#include <stdio.h> 

#mclude <stdlib.h> 

#include <string.h> 

#include <math.h> 

#mclude <ctype.h> 

#include <dos.h> 

#mciude <conio.h> 

^include <time.h> 

#include <io.h> 

#mclude <fcntl.h> 

#include <process.h> 

#include <sys\stat.h> 

#define PI 3.141592654 
#defme GV 32,174 
#defineMIN__FOS1.5 
#defineMAX_FOS 5.0 
#define H20 RG 64.0 




typedef struct _pile Pile; 
struct _pile 
{ 

char id_let[3]; 

double diameter; 

double length_mud_to_cap; 

double unsup_length; 

double effjength; 

char condition[3]; 

int flag; 

double vertjoad; 
double uiii_load_j)si; 
double lat_load; 
double dead__load; 
double spring__cap; 
double load_area; 
double pile_weight; 

Pile *next; 

Pile *prev; 

}; 


typedef struct _bent Bent; 
struct _bent 
{ 

int id^num; 
double depth; 
double freeboard; 
double pile__length; 


67 




double brace_2_cap; 
double pile Jength_tot; 
double spring_tot; 
double weight_tot; 
double dead_\vt_per_pile; 
double dead_vvt; 
double dead_temp; 
double load__area; 
double lat_cap; 
char batters; 

Pile *pile; 

Bent *next; 


typedef struct _props Props; 
struct j)rops 
{ 

double bending_mod; 
double sig_j)ub_comp; 
double sig_pub_bend; 
double unit__wt; 
char tim_type[25]; 

}; 


typedef struct _loads Load; 
struct _loads 
{ 

char fork_lim__5; 
char fork_lim_6; 
char fork_liiQ_75; 
char fork_lim_8; 
char fork_lim_10; 
char fork_lim_12; 
char fork_lim_15; 
char fork_lim_20; 
double hs_limit_vvheel_str; 
double h_limit_^^ileel_str; 
double stringjtJim; 
double string_uniJimjsi; 
double axlejim_cap; 
double cap_j)tJim; 
double cap_unijimj)si; 
double plank_uniJim_psi; 
double pilej)t_miss; 
double pile_uni_miss; 
double pile_uni_min; 
double pile_pt_miss_end; 
double pile_uni_miss_end; 


typedef struct _env__data Env; 
struct _env_data 
{ 



double \vmd_spd; 
double wind_spd_ht; 
double wind^lO; 
double wind^angle; 
double wmd_angle_deg; 
double current_spd; 
double current_angle; 
double current_angle_deg; 
double current_pile_CD; 
double current_Re; 
double foulmg__factor; 
char soil_type[25]; 
int soil_flag; 


typedef struct _wave_data Wave; 
struct _wave_data 
{ 

double wave_H; 
double wave^T; 
double wave_d; 
double wave_angle; 
double wave_angle_deg; 
double wave_Re; 
double wave__k; 
double wave_c; 
double wave_Ki_max; 
double wave_KD_max; 
double wave_Si; 
double wave_SD; 
double lainbda_A; 
double lambda_0; 
double \vave_umax; 
double wave_CD; 
double wave_CM; 
double wave_M_inax_d; 
char wave_Airy; 

}; 


typedef struct ^batters Batters; 
struct ^.batters 
{ 

char batters; 
double batter_size; 
double batter_rise; 
double batter_run; 
double batter_angle; 
double batter_angle_deg; 

}; 


typedef struct _sup_struct Sup_struct; 
struct _sup_struct 
{ 




Props *sup__structj)rop; 
char cap_type; 
double cap_ht; 
double cap_w; 
double cap_wt; 
double string_spread; 
double string_ht; 
double string_w; 
double string_wt; 
double string__wt__bent; 
double plank^ht; 
double plank_w; 
double plank^wt; 
char bracing; 


typedef struct _flagz Flagz; 
struct _flagz 
{ 

char flag; 
int s_flag; 
int t_flag; 
int flagl; 
int flag2; 
int flags; 
int flag4; 
int flag5; 


typedef struct _pier_forces Force; 
struct _j)ier_forces 
{ 

double wind; 
double wind_x; 
double wind_70; 
double current_ship; 
double current_ship_x; 
double current_j)ier_M; 
double current j)ier_M__x; 
double wave_M_max_d; 
double wave_M_x_d; 

}; 


typedef struct _ship_data Ship; 
struct _ship_data 
{ 

double length; 
double Cl; 
double C2; 
double draft; 
double freeboard; 
double force_tot; 



typedef struct _j)ier__data PierData; 
struct _pier_data 
{ 

int no_of_bents; 
int piles_per__bent; 
int ship; 

double factor_of_safety; 
double pile_size; 
double fixity; 
double bent_spread; 
double pile_spread; 
double pier Jength; 
double pier_width; 
double spring_tot; 
double weight_tot; 
double pier_j)eriod; 
double lat_cap; 
double lat_cap_per_fl; 
double est__ton_ship; 
double pile_um_inin; 

Props *pilej)rop; 

Force *forces; 

Load *loads; 

Env *env_data; 

Bent *bents; 

Wave *Avave_data; 

Sup_struct *sup_struct; 

Batters *batters; 

Ship *ship_data; 

}; 




void clean(void); 

void open__nisg(void); 

void exit_msg(Flagz *); 

void file_msg(Flagz *); 

void t_check(PierData *, Flagz *); 

void date_plot(FILE *); 

void pause(void); 

void put_date(void); 

void menu (void); 

void get__pier_data(PierData *); 

void get_ship_data(PierData *); 

void get_prop_info(Props *, int); 

void get_bent_info(PierData *); 

void get j)ile_info(Bent *, PierData *); 

void get_cond(Bent *, Pile *, PierData *, int); 

void get_env__info(PierData *); 

void get_soil_info(Env *); 

void get__load_info(PierData *); 

void pm_to_screen(void); 


71 




void pile__plot(PierData *, char); 

void prt_err(char[35]); 

void prt_inv(void); 

char pm_to_file(PierData *, Flagz *); 

int quit(char); 

int testinput_int(int); 

int check_num(void); 

double test_input_double(double); 

double is_valid(double, double); 

double test_input(int, double); 

char check_fork(double, double, PierData *); 


«:|c )|c 19(c He 4: * :K * )|c 4: 4c 9|e i|e i|e ite ^ ♦ 4: He lie >|e )|( >|c ♦ ♦ 3(c sk * 4c 4:* * * * ♦ ♦ * * ♦ >»: * y 


int main(void) 

{ 

menu(); 

retum(O); 


y4c4c4:**4c4t4c4c4c4eJk*>k4e**sk4c4e*4e4e*J|e4e**********JkJk*4e4c4e4c4e4e4e**>|e*5k5k**4e4e4e4e/ 


void menu (void) 

{ 

char choice = 'O'; 

PierData *input; 

Flagz *flagz; 

put_dateO; 

open_msgO; 

cleanO; 

input = calloc(l,sizeof(PierData)); 

if(input = NULL) 

{ 

prt_err("PierData"); 

} 

flagz = calloc(l,sizeof(Flagz)); 

if(flagz==NULL) 

{ 

prt_err("Flags"); 

} 

while(choice != '3') 

{ 

cleanO; 

flagz->flag = 'Q’; 

printf("\n\n\t\tRSAP - Rapid Structural Assessment, Pier vl.O"); 
printf("\n\n\t\t\tDisplay File Menu"); 
prmtf("\n\n\t\t\tl) Input Inspection Data"); 
printf("'5i\t\t\t2) Display File"); 


72 



printf(”\n\t\t\t3) Exit”); 
printf(”\n\n\t\t\tEnter selection: ”); 
choice = getcheO; 

switch(choice) 

{ 

case T: 

fQush(stdin); 

clean(); 

t_check(input, flagz); 
get_pier_ciata(input); 
flagz->t_flag = 1; 

flagZ">flag = pm_to_file(input, flagz); 

flagz->flagl = 1; 

break; 

case *2': 

fflush(stdin); 

cleanQ; 

pm_to__screen(); 

break; 


case *3': 

if(flagz->flagl = l||flagz->flag4 = 1) 

{ 

fQush(stdin); 
flagz->t_flag = 0; 

flagz->flag = pm_to_file(input, flagz); 

exit_msg(flagz); 

choice = '3’; 

} 

else 

{ 

fiflush(stdin); 
exit_insg(flagz); 
choice = '3'; 

} 

break; 

default: 

printf("\n\n\tlnput should be 1,2,3,..."); 

prt_inv(); 

break; 

} 

} 


free(input); 

} 




void open_nisg(void) 


73 



printf("\n\n\n\tWelcome to RSAP - Rapid Structural Assessment, Pier. This”); 
printf(”\n\tprogram provides a means for rapidly estimating the capacity"); 
printf("\n\tof a timber, open, pile supported pier. It requires input that"); 
printf("\n\tis gathered by the US Navy Underwater Construction Teams during"); 
printf("\n\ta waterifront inspection. When prompted for input regarding"); 
printf("\n\tmeasurements, pay close attention to wliat is being asked for."); 
printf("\n\tWhen entering dimension information, the height and width are"); 
printf("\n\tthe vertical and horizontal dimensions of the member as it is"); 
printf("\n\tplaced. For example, planking is layed on its wide side. Thus"); 
printf("\n\tthe \"height\" is the narrow dimension. When prompted to select"); 
printf("\n\tfrom a list of choices, you need only enter the choice. You do"); 
printf("\n\tNOT need to press V'enterV after selecting your choice. "); 
printf("\n"); 

printf("\n\t\(C)1999 - All rights reserved. R. J. Keiter"); 

printf("\n\n\t\Questions? Problems? Contact me at: rjkeiter@iname.com"); 

printf("\n"); 

printf("\n"); 

pauseO; 


^ 3): 3|c ^ ]|c ]|C :)c ^ ** * 4 : ***** 4c **** ^ ****>((****>)( >1: ****** / 


void exit_msg(Flagz *flagz) 

{ 

cleanO; 

printf("\n"); 

printf("\n\tThank you for using RSAP - Rapid Structural Assessment, Pier."); 

printf("\n\n"); 

file_msg(flagz); 


^:(c4;:|c3(c3|c:)c9te4::^3fc:)e](c:|ejlc:|c9)ej|c3|e****************************************y 


void file_msg(Flagz *£lagz) 

{ 

charfilez[3][13]; 

intij; 

fflush(stdin); 

printf("\n"); 


if(flagz->flag != 'Q') 

{ 

strq)y(filez[0],"pile_in0.dat"); 

j = i; 

if(flagz->s_flag = 1) 

{ 

strcpy(filez[ 1 ],"pil_plt0.m"); 
strq5y(filez[2],"uni_plt0.m"); 

j = 3; 

} 


74 



printf("\n\tThe following file(s) have been saved to your"); 

printf("working directory:"); 

printf("\n"); 

for(i = 0; i < j; i++) 

{ 

filez[i][7] = flagz->flag; 
printf("\n\t\t\t%s", filez[i]); 

} 

} 

printf("\n\n"); 

pauseO; 

} 

void t_check(PierData *input, Flagz *flagz) 

{ 

char y_n; 

if(flagz->flagl === 1) 

{ 

printf("\n\n\tDo you wish to save the data you have"); 
printf(" already input(y/n)?"); 
y_n = getche(); 

while(y_n != y&&y_n != 'Y'&&y_n != 'n'&&y_n != 'N') 

{ 

prt_inv(); 

printf("\n\n\tDo you wish to save your data (y/n)?:"); 
y_n = getche(); 

} 

ihy_n = y||y_n = ’Y’) 

{ 

flagz->t_flag = 0; 

flagz->flag = pm_to_file(input, flagz); 
file_nisg(flagz); 

} 

} 

} 

y a|t a|c itt ♦♦★*♦*****♦♦♦:►♦♦♦*♦ a^ ♦ aft ate ate i|c ^ 

void get_pier_data(PierData *Input) 

{ 

Wave *wtemp; 

Force *flemp; 

char batters, cap_type, bracing, choice, choicel, f_o_str[20]; 
double batter_rise_ft, batter_run_fl, bent_spread_ft, pile_spread_ft; 
double batter_run_in, bent_spread_in, batter_rise_in, pile_spread_in 
double str_spr_ft, str_spr_in, CD_ship = 1.0, bio_Re, c_speed; 



double f_o_s = 0, j = 0,1_pile, EI_pile, t, theta, gamma, wave_Ki, wave_KD; 
double cwtemp, wave_Mi, wave_Mia, vvave_Mib, wave_Mic; 
double wave_MD, wave_MDa, wave_MDb, wave_MDc; 
int i; 

cleanO; 

get_env_mfo(Input); 

cleanO; 

wtemp = Input->wave_data; 

flemp = Input->forces; 

printf("\n\ffinter the factor of safety you"); 

printf("\n\twish to use (recommended: 3, min"); 

printfC = %.21f): ", MIN_FOS); 

scanfC %s", &f_o_str); 

v^hileO < MIN_FOS|lj > MAX_FOS) 

{ 

f_o_s = j = atof(f_o_str); 

if(f_o_s<MIN_FOS) 

{ 

printf("\n\tlnvalid input! The minimum factor of safety"); 
printfC" is %.21f!", MIN_FOS); 
printf(''\n\tRe-enter value:"); 
scanf(" %s", &f_o_str); 

} 

if(f_o_s>MAX_FOS) 

{ 

printf("\n\tAre sure you want this high of a"); 
printf("\n\tfactor of safety (y/n)?"); 
choice = getcheO; 


while(choice != 'y'&&choice != 'Y’&&choice 1= 'n'&&choice != TJ') 

{ 

prt_invO; 

printf("^\n\tAre sure you want this high of a"); 
printf("\n\tfactor of safety (y/n)? "); 
choice = getcheO; 

} 

if(choice = 'n'||choice == 'N') 

{ 

printf("\n\tRe-enter value:"); 
scanf(" %s", &f_o_str); 

) 

else 
j = 3; 

} 

} 

Input->factor_of_safety = f_o_s; 
cleanO; 


76 



prmtf(”\n\tEnter number of bents: '*); 

Input->no_of_bents = test_input_int(l); 
printf("\n\tEnter distance between bents,"); 
printf("\n\t\tfeet:"); 

bent_spread_ft = test__input_double(0.0); 
printf("\t\tinches: "); 

bent_spread_in = test_input_double(0.0); 

Input->bent_spread = bent_spread_ft + bent_spread_in/12; 

Input->pier_length = Input->no_of_bents * Input->bent_spread; 
clean(); 

printfC'\n\tEnter piling diameter size(inches):"); 

Input->pile_size = test_input_double(1.0); 
cleanO; 

if(wtemp->wave_H > 0.0) 

{ 

wtemp->wave_Re = wtemp->wave_umax*100000*Input«>pile_size/12; 

if(wtemp->wave_Re < 250000) 
wtemp->wave_CM == 2.0; 
else 

if(wtemp->wave__Re < 500000) 

wtemp->wave_CM = (2.5 - wtemp->wave_Re/500000); 
else 

wtemp->wave_CM = 1.5; 

if(wtemp->wave_Re < 300000) 
wtemp->wave_CD = 1.2; 
else 

wtemp->wave_CD = 0.6; 

for(i = 0;i<361;i++) 

{ 

t == wtemp->wave_T*i/360; 

theta = 2*PI*wtemp->wave_d/wtemp->lambda___A; 

gamma = 2*PI*t/wtemp->wave_T; 

wave_Ki = 0.5*tanh(theta)*sin(-gamma); 

if(wave_Ki > wtemp->wave_Ki__max) 
wtemp->wave_Ki__max = wave_Ki; 

wave_KD = ((l+(2*theta)/(sinh(2*theta)))*fabs(cos(gamma))*cos(gamma))/8; 

if(wave_KD > wtemp->wave_KD_max) 
wtemp->wave_KD_max = waveKD; 

wave_Mia = wtemp->wave__CM*PI*pow((Input->pile__size/12),2); 
wave_Mib = wtemp”>wave_H*H20_RG*wave_Ki/4; 
wave_Mic = wtemp->wave_Si*wtemp->wave_d; 
wave_Mi = wave_Mia*wave_Mib*wave_Mic; 
wave_MDa = wtemp“>wave_CD*0.5*(Input->pile_size/12); 
wave_MDb = pow(wtemp->wave_H,2)*H20_RG*wave_KD; 
wave_MDc = wtemp->wave_SD*wtemp->wave_d; 


77 



7 


wave_MD = wave_MDa*wave_MDb*wave_MDc; 

if(((wave_Mi + wave_MD)/wtemp->wave_d) > wtemp->wave_M_max_d) 
ftemp“>\vave_M_inax_d = (wave_Mi + wave_MD)/wtemp->wave_d; 

} 

} 

wtemp->wave_M_max_d = ftemp->wave_M_max_d; 
ftemp->wave_M_x_d = (flemp->wave_M_max_d*sin(wtemp->\vave_angle)); 

if(Input->env_data->current_spd > 0.0) 

{ 

c__speed = Input->env_data->current_spd*5280/3600; 

Input->env_^ta->current__Re = c_speed*(Input->pile_size/l2)* 100000; 

if(Input->env_data->current_Re < 300000) 

Input->env_data->current_j)ile_CD = 1.2; 
else 

Input->env_data->current_j)ile_CD = 0.6; 

ftemp->ciirrent_ship = ((H20_RG/GV)*pow(c_speed,2)*CD_ship)/2; 
ftemp->current_ship_x = (ftemp->current__ship*sin(Input->env__data“>current_angle)); 

if(Input->env__data->foulmg_factor > 0.0) 

{ 

bio_Re = (Input->pile_size+Input->env_data->foulmg_factor/2)/l 2* 100000; 

Input->env^ata->current__Re = c^speed * bio_Re; 

if(Input->env_data->current_Re < 300000) 

Input->env_data->current_j)ile_CD = 1.2; 
else 

Input->env_data->cuiTent_pile_CD = 0.6; 

} 

ftemp->ciirrent_pier_M = H 20 _RG*Input->pile_size/ 12 *pow(c_speed 52 )*Input->env_data- 
>current_pile_CD/4/G V; 

ftemp->current_pier__M_x = fabs(ftemp->current_j)ier_M*sin(Input->env__data->current__angle)); 

} 

printf("\n\tWhat type of timber are the pilings?"); 

Input->pile_prop = calloc(l, sizeof(Props)); 

if(Input->pile_prop = NULL) 

{ 

prt_err("Material Properties"); 

} 

get_prop_info(Input->pile_prop, 1); 

I_pile = (PI*pow(Input->pile_size/2,4)/4); 

EI_pile = (I_pile*Input->pile_prop->bending_mod); 

if(Input->env_data->soil_flag = 0) 

Input->fixity = (8.5*Input->pile_size)/12; 


78 



else 

if(Input->env__data->soil_flag = 1) 

{ 

if(EIjile <= 10000000000) 

Input->fixity = 10; 
else 

Input->fixity =12; 

} 

else 

if(Input->env_data->soil_flag = 2) 

{ 

if(EI_pile <= (10000000000)) 

Input“>fixity = 8; 
else 

Input->fixity = 10; 

} 

else 

if(Input->env_data->soil_flag = 3) 

Input->fixity = 5; 

cleanO; 

printf(”\n\n\tEnter number of pilings per bent:"); 

Input->piles__per_bent = test_input_int(l); 
flElush(stdin); 

if(Input->pilesj>er_bent < 4) 

{ 

cleanO; 

printf(”\n\t************************* WARNING**************************')' 
printfC'\n\n\t The accuracy of this assessment program is better for”); 
printf("\n\t a pier with more than %d piles per bent!!! ”,Input->piles_per_bent); 
printf("\n\n\t*************************WARNING*************************”)* 
printf(”\n”); 
pauseO; 
cleanO; 

} 

if(Input->piles_per_bent >1) 

{ 

printf("\n\tEnter distance between pilings in bent,”); 
printf(”\n\t\tfeet:"); 

pile__spread_fl = test_input_double(0.0); 
printf("\t\tinches:"); 

pile_spread_in = test_input_double(0.0); 

Input->pile_spread = pile_spread_fH-pile_spread_in/l 2; 

} 

Input->pier__width = (Input“>pilesj)er_bent-1) * Input«>pile_spread; 
cleanO; 

Input“>batters = calloc(l, sizeof(Batters)); 

if(Input->batters = NULL) 

{ 


79 



prt_err(”Batters’'); 


} 

printf('’\n\tAre there batter pilings (y/n)?: ”); 

batters = getcheQ; 

printf("\n"); 

\\hile(batters != y&&batters != 'Y'lfe&batters != 'n’&&batters != "N') 

{ 

prt_inv(); 

prmtf("\n\n\tAre there batter pilings (y/n)?: ”); 

batters = getcheQ; 

printf(’'\n”); 

} 

Input->batters->batters = batters; 

if(batters = y||batters = 'Y') 

{ 

prmtfC’\n\tEnter batter piling diameter size(mches):"); 

Input->batters“>batter_size = test_input_double(l .0); 
printf("\n\tTo find the slope of the batter pile,"); 
printf(”\n\tplease enter the following information:"); 
printf("\n\n\t\tVertical rise - feet:"); 
batter_rise_ft = test_input__double(0.0); 
printf("\t\tVertical rise - inches:"); 
batter_rise_in = test_input_double(0.0); 

Input->batters->batterjise = batter_rise__ft + batter__rise_in/12; 
printf("\n\t\tHorizontal run - feet:"); 
batter_run__ft = test_input_double(0.0); 
printf("\t\tHorizontal run - inches:"); 
batter__run__in = test__input_double(0.0); 

Input->batters->batter__run = batter_run_ft + batter_run_in/12; 

if(Input->batters->batter_run = 0.0) 

Input->batters->batter_angle = PI/2; 
else 

Input->batters->batter_angle = atan(Input->batters->batter_rise/Input->batters->batter_run); 
Input->batters->batter_angle_deg = Input->batters->batter_angle* 180/PI; 

} 

cleanQ; 

printf("\n\tWhat type of timber is the superstructure?"); 

Input->sup_struct = calloc(l, si 2 eof(Sup__struct)); 

if(Input->sup_struct = NULL) 

{ 

prt_err("Superstucture"); 

} 

Input->sup_struct->sup_struct_prop = calloc(l, sizeof(Props)); 


80 



if(Input->sup_stmct->sup_stmct_prop = NULL) 

{ 

prt_err('’Superstiicture Properties"); 

} 

get_j)rop_mfo(Input->sup__struct->sup_stmct_j5rop, 0); 
cleanO; 

printf("\n\tls there cross bracing on the pilings (y/n)?:"); 

bracing = getche(); 

printf("\n"); 


vvhile(bracing != y&&bracing != 'Y'&&bracing != ’n’&&bracing != N’) 

{ 

prt_inv0; 

printf("'ai\n\tls there cross bracing (y/n)?:"); 

bracing = getcheQ; 

printf("\n"); 

} 

Input->sup_struct->bracing = bracing; 
cleanO; 

printf("\n\tls the pile cap (S)olid or S(p)lit (\"s\" or \"p\")? "); 

cap_type = getche(); 

printf("\n"); 


while(cap_type != 's'&&cap_type != 'S'&&cap_type != 'p'&&cap_type != 'P') 

{ 

prt_inv0; 

printf("\n\n\tls the pile cap (S)olid or S(p)lit (\"s\" or V'pV’)?"); 

cap_type = getche(); 

printf("\n"); 

} 

Input->sup_struct->cap_type = cap_type; 

if(Input->sup_struct->cap_type = 's'|llnput->sup_struct->cap_type = ’S') 
printfl["\n\tEnter pile cap dimensions”); 
else 

printf("\n\tEnter pile cap member dimensions"); 

printf("\n\t\theight(inches):"); 

Input->sup_struct->cap_ht = test_mput_double(1.0); 
prmtf("\t\twidth(inches):"); 

Input->sup_struct->cap_w = test_input_double(l .0); 
cwtemp = Input->sup_struct->cap_w/12; 

Input->sup_struct->cap_wt = Input->sup_struct->cap_ht/l 2*cwtemp*Iiq>ut->pier_vvidth*Input->sup_struct- 
>sup_struct_prop->imit_wt; 

if(Input->sup_struct->cap_type — 'p'||Input->sup_struct->cap_type = 'P') 

{ 

Input->sup_struct->cap_wt ''‘= 2; 
cwtemp = Input->pile_size/12; 

} 


81 


printf("\n\tEnter stringer dimensions"); 
printf("\n\t\theight(inches):"); 

Input“>sup_struct->string_ht = test__input_double(l .0); 
printf("\t\twidth(inches):"); 

Input->sup_struct->string_w = test_input_double(l .0); 

Input->sup_struct->string_vvt ~ Input->sup_struct“>string_ht/12*Input->sup_struct->string_w/12*(Input« 
>bent_spread+cwtemp)*Input->sup_struct->sup_struct_prop->unit_wt; 
printf("\n\tEnter stringer spread - center to center"); 
printf("\n\t\tfeet:"); 
str_spr__ft = test_input_double(0.0); 
printf("\t\tinches:"); 
str_spr__in = test__input_double(0.0); 

Input->sup_struct->string_spread = str_spr_ft + str_spr_in/12; 

Input->sup__struct->string_wt_bent = (Input->pier__vvidth/Input->sup_struct->string_spread+l )*Input“ 
>sup_struct->string_'wt; 

printf("\n\tEnter deck planking dimensions"); 
printf("\n\t\theight(inches): "); 

Input->sup_struct->plank_ht = test_input_double(l .0); 
printf("\t\twidth(inches):"); 

Input->sup_struct->plank_w = test_input_double(l .0); 

Input->sup_struct->plank_wt = Input->sup_struct‘>plank__ht/12*Input->sup_struct->plank_w/12*Input- 
>sup_struct“>sup_stmct_j)rop->unit_wt; 
geMoad_info(Input); 
get_bent_info(Input); 

Input->pier_period = sqrt(Input->spring_tot/Input->weight_tot); 

Input->lat_cap_per_fl = Input->lat_cap^put->pierjength; 
cleanO; 

printf("\n\tDo you have physical size data on the ship"); 
printf("\n\tyou expect to moor at this pier (y/n)? "); 
choice 1 - getcheO; 

vvhile(choicel !=y&&choicel !='Y’&&choicel !=‘n’&&choicel i^Tsf') 

{ 

prt_inv(); 

prmtf("\n\n\tDo you have measurement data for the ship (y/n)? "); 
choice! = getche(); 

} 

if(choicel == 'y'||choicel = 'Y') 

{ 

Input->ship = 1; 
get_ship_^ta(Input); 

} 

if(Input->ship — 1) 

{ 

Input->est_ton_ship = -2.97522+3.264*exp((Input->lat_cap_per_ft-302.97)/509.75); 

if(Input->est_ton_ship > 100.0) 

]iiput->est_ton_ship = 100.0; 

if(Input->est_ton_ship < 0.0) 


82 


Input->est_ton_ship = 0.0; 

} 

} 

yjJcjleJlcjJt****^:*************************************************/ 

void get_env_iiifo(PierData *Input) 

{ 

Env *temp; 

Force ’"ftemp; 

Wave *wtemp; 
char rpt, bio; 
int flag = 0; 

double w_ang, c_ang, \vave_ang, airy_d, airy_h, airy_ha; 
double SK_coef, SD_a, SD_b; 

Input->env_data = calloc(l,sizeof(Env)); 

if(Input->env_data = NULL) 

{ 

prt_err("Enviroiimental"); 

} 

temp = Input->env_data; 

Input->forces = calloc(l,sizeof(Force)); 

if(Input->forces = NULL) 

{ 

prt_err("Forces"); 

} 

ftemp = Input->forces; 

Input->wave_data = calloc(l,sizeof(Wave)); 

if(Input->wave_data == NULL) 

{ 

prt_err("Wave"); 

} 

wtemp = Input->\vave_data; 

printf("\n\tWhen measuring wind speed, observations should be of); 
printf("\n\ta sustained wind that lasts for about 30 seconds."); 
printf("\n\n\tPlease enter the wdnd speed(mph):"); 
temp->wind_spd = test_input_double(0.0); 

if(temp->wind_spd > 0.0) 

{ 

printf("\n\tHow high from the water's surface was this"); 
printf("\n\tmeasurement taken(feet):"); 
temp->wind_spd_ht = test_input_double(0.0); 

printf("\n\tUsing the pier as the reference datum, you need to input the"); 
printf("\n\twind angle. Standing at the foot of the pier, orient a compass"); 
printf("\n\tsuch that North is the seaward end of the pier and represents"); 


83 



prmtf("\n\t-0- or 360 degrees."); 

printf("\a\n\tFrom vdiat angle is the wind coming(deg):"); 
wang = test_input_double(0.0); 

if(w_ang > 360.0) 

{ 

vdiile(flag = 0) 

{ 

prt_inv0; 

printf("\n\n\tWhat is the wind angle(deg)?: "); 
w_ang = test_input_double(0.0); 

if(w_ang <= 360.0) 
flag= 1; 

} 

} 

if(w_ang > 180.0) 
w_ang-= 180.0; 
else 

if(w_ang < 180.0) 
w_ang += 180.0; 

temp->wmd_angle_deg = w_ang; 
temp->wind_angle = temp->wind_angle_deg*PI/l 80; 

temp->wmd_10 = exp((log(temp->wind_spd_ht/32.8084))/7)*temp->wind_spd; 
flemp->wind = 0.00256*pow(temp->wind_10,2); 
flemp->wind_70 = (0.00256*pow(70,2)*sin(temp->wind_angle)); 
ftemp->wind_x = (ftemp->wind*sin(temp->wind_angle)); 

} 

cleanO; 

printf("\n\tTake current speed obserations at the waters surface."); 
printf("\n\tPlease enter the speed of the current(ft per sec):"); 
temp->current_spd = test_input_double(0.0); 
temp->current_spd = (temp->current_spd’'‘3600/5280); 

if(tenip->current_spd >0.0) 

{ 

printf("\n\tUse the pier as the reference datum as you did with the"); 
printf(" wmd.\n\n\tFrom vdiat angle is the current coming(deg):"); 
c_ang = test_input_double(0.0); 

if(c_ang > 360.0) 

{ 

t^4iile(flag = 0) 

{ 

prt_invO; 

printf("W\n\tWhat is the current angle(deg)?:"); 
c_ang = test_mput_double(0.0); 

if(c_ang <= 360.0) 
flag= 1; 


84 



} 

} 

if(c_ang > 180.0) 
c_ang-= 180.0; 
else 

if(c_ang < 180.0) 
c_ang += 180.0; 

temp->current_angle_deg = c_ang; 
temp->current_angle = temp->current_angle_deg*PI/l 80; 

} 

cleanO; 

printf("\n\tWave height measurements are from peak to trough and should be"); 
printf("\n\tof the average wave profile. Measurements should be taken near"); 
printf("\n\tthe end of the pier or at the area \\here ship will berth."); 
printf("\n\n\tPlease enter the wave height(inches):"); 
wtemp->wave_H = test_input_double(0.0)/l 2; 

if(wtemp->wave_H > 0.0) 

{ 

printf("\n\tEnter the depth w4iere wave measurements were taken(ft)?:"); 
wtemp->wave_d = test_mput_double(1.0); 

if(wtemp->wave_d < 15.0) 

{ 

prt_mv0; 

printf("\n\n\tlt is HIGHLY unlikely that a ship will be able to"); 
printf("\n\tsafely moor in %.llf ft of water.", wtemp->wave_d); 
printf("\n\n\tYou need to either correct your input or take a"); 
printf("\n\tmeasurement at a more appropriate depth...or, we can"); 
printf("\n\tgo with your original input..."); 

printf("\n\n\tWhat is the depth where wave measurements were taken(ft)?:"); 
wtemp->wave_d = test_input_double(0.0); 

} 

printf("\n\tUse the pier as the reference datum as you"); 
printf("\n\tdid with the wind and current."); 
printf("\n\n\tFrom what angle are the waves coming(deg):"); 
wave_ang = test_input_double(0.0); 

if(wave_ang > 360.0) 

{ 

while(flag — 0) 

{ 

prt_mv0; 

printf("\n\n\tWhat is the wave angle(deg)?:"); 
wave_ang = test_input_double(0.0); 

if(wave_ang <= 360.0) 
flag=l; 

} 


85 



} 


if(wave_ang > 180.0) 
wave_ang -= 180.0; 
else 

if(wave_ang < 180.0) 
wave_ang += 180.0; 

wtemp->wave_angle__deg = wave_ang; 

wtemp“>wave_angle = wtemp->wave_angle_deg*PI/l 80; 

printf(”\n\tHow much time passes between successive wave crests(sec): ”); 

wtemp->wave_T = test_input_double(0.0); 

wtemp“>lambda__0 = (GV*pov^wtemp->wave_T,2))/(2*PI); 

wtemp->wave_c = (4*wtemp‘>wave_d*pow(PI,2))/(GV*pow(wtemp->wave_T,2)); 

if(wtemp->wave_c < 2.0) 

wtemp->wave_k == (sqrt(wtemp->wave_c)*( 1+0.169* wtemp->wave_c))/wtemp->wave_d; 
else 

wtemp->wave_k = (wtemp->wave_c*(l+2.0*exp(-wtemp->wave_c)))/wtemp->wave_d; 
wtemp->lambda_A = ((2*PI)/wtemp->wave_k); 

wtemp->wave_umax = (PI*wtemp->wave_H*wtemp“>lambda__0)/(wtemp->wave_T*wtemp- 
>lambda_A); 

airy__d = wtemp->wave_d/(GV*pow(wtemp->wave_T,2)); 
airy_h = wtemp->wave_H/(GV*pov^wtemp->wave_T,2)); 
aiiy_ha = (0.00103-(0.0017/(l+exp((airy>0.00549)/0.01306)))); 

if(airy_d <= 0.07&&airy_h <= aiiy^ha) 
wtemp->wave_Airy = ’Y’; 
else 

if(airy_d > 0.07&&airy_h <= 0.00103) 
wtemp->wave__Airy = 'Y'; 
else 

wtemp“>wave_Airy = 74’; 

SK_coef = (2*PI*wtemp->wave_d/wtemp->iambda_A); 
wtemp->wave__Si = (l+((l-cosh(SK_coef))/(SK_coef*sinh(SK__coef)))); 

SD__a = (0.5+((l-cosh(2*SK_coef))/(2*SK_coef*sinh(2*SK_coef)))); 

SD_b - (l+((2*SK^coef)/(sinh(2*SK^coef)))); 
wtemp->wave_SD = 0.5+((l/(4*SD_b))*(SD_a)); 


clean(); 

printf("\n\tls there bio-fouling present(y/n)?: "); 

bio = getcheO; 

printfC’\n"); 


while(bio != y&&bio != *Y*&&bio != 'n'&&bio != 74') 

{ 

prt_inv(); 

printf("\n\tls there bio-fouling(y/n)?: ”); 

bio = getcheO; 

printf("\n"); 


86 



} 


if(bio = yi|bio = 'Y') 

{ 

printf("\n\n\tHow thick(mches)?:"); 
temp->fovilmg_factor = test_input_double(0.0); 

} 

clean(); 

printf("\n\tWere Rapid Penetration Tests(RPT) perfonned(y/n)?:"); 
rpt = getcheO; 
printf("\n"); 
flag = 0; 

v\Wle(rpt != y&&rpt != 'Y'&&ipt != 'n'&&rpt != 'N') 

{ 

prt_inv(); 

printf("\n\n\tWere RPTs perfonned(y/n)?:"); 

rpt = getcheO; 

printf("\n"); 

} 

clean(); 

if(rpt = y||rpt = 'Y’) 
get_soil_info(temp); 

cleanO; 


liim^ntJtt********^*******T¥^i^**^i^****************iii****************/ 

void get_bent_info(PierData *Input) 

{ 

Bent *temp; 
inti; 

char batters; 

Input->bents = calloc(l,sizeof(Bent)); 

if(Input->bents = NULL) 

{ 

prt_err("Bent"); 

} 

temp = Input->bents; 

Input->pile__uni__min = 1000; 

for(i = 0; i <= Input->no_of_bents-l; i+H-) 

{ 

clean(); 

temp->id_num = i+1; 

temp->load_area = Input->pier_width*Input->bent_spread; 


87 




if(i = Input->no_of_bents-l) 
temp->load_area /= 2; 

prmtf("\n\tFor Bent #%d, enter the depth(feet): ",temp->id_num); 

temp->depth = test_mput_double(0.0); 

printf["\n\n\tEnter the distance from the water surface to the"); 

if(Input->sup_struct->bracing = yi|Input->sup_struct->bracing = 'Y') 
printf("\n\tpoint vdiere the pile meets the cross bracing(feet):"); 
else 

printf("\n\tpoint vAere the pile meets the pile cap(feet);"); 

temp->freeboard = test_input_double(0.0); 
temp->dead_wt += Input->siq)_struct->cap_wt; 

temp->dead_wt+=Input->sup_struct->string_wt*(Input->pier_width/Input->sup_struct- 

>string_spread+l); 

temp->dead_wt+=Input->sup_struct->plank_wt*Input->pier_width*Input->bent_spread; 

temp->weight_tot += 1.15*temp->dead_wt; 

temp->dead_wt_per_pile = temp->dead_wt/(Input->piles_per_bent-1); 
temp->pile_length = temp->depth + temp->freeboard; 

if(Input->sup_struct->bracing = yi|Input->sup_struct->bracmg = 'V) 

printf("\n\tEnter the distance from where the piling meets the"); 
printf("\n\tbracing to the pile cap(feet):"); 
temp->brace_2_cap = test_input_double(0.0); 

} 

temp->pile_length_tot = temp->depth + temp->freeboard + temp->brace_2_cap; 

if(Input->batters->batters = yi|Input->batters->batters = 'Y') 

{ 

printf("\n\tDoes this bent have batter pilings(y/n)?:"); 
batters = getcheQ; 

vvhile(batters != y&&batters != 'Y'&&batters != 'n'&&batters != "N') 

{ 

prt_invO; 

printf("\n\n\tAre there batter pilings in this bent(y/n)?:"); 
batters = getcheQ; 

} 

temp->batters = batters; 

} 

get_pile_info(temp, Input); 

Input->spring_tot += temp->spring_tot; 

Input->weight_tot += temp->weight_tot; 

Input->lat_cap += temp->lat_cap; 

if(i < Input->no_of_bents -1) 

{ 


88 



temp->next = calloc(l,sizeof(Bent)); 


if(temp->next = NULL) 

{ 

prt_err(’’Bent"); 

} 


} 


temp = temp->next; 




void get_soil_info(Env *temp) 

{ 

int flag = 0; 
char choice; 

\\hile(flag = 0) 

{ 

prmtf("\n\tWhich type of soil did the tests indicate?"); 
printf("\n\n\t\t\tl) Soft Silt"); 
printf("\n\t\t\t2) Mud"); 
printf("\n\t\t\t3) Clay - Very Soft"); 
printf("\n\t\t\t4) Clay - Soft"); 
prmtf("\n\t\t\t5) Clay - Medium"); 
printf("\n\t\t\t6) Clay - Stiff'); 
printf("\n\t\t\t7) Sand - Loose"); 
printf("\n\t\t\t8) Sand - Medium"); 
printf("\n\t\t\t9) Sand - Dense/Gravel"); 
printf("\n\n\t\t\tEnter choice:"); 
choice = getcheO; 

switch(choice) 

{ 

case '1': 

strcpy(temp->soil_type, "Soft Silt"); 

temp->soil_flag = 1; 

flag=l; 

break; 

case '2': 

strcpy(temp->soil_type, "Mud"); 
temp->soil_flag = 1; 
flag=l; 
break; 

case *3': 

strcpy(temp->soil_type, "Very Soft Clay"); 

temp->soil_flag = 1; 

flag=l; 

break; 


89 




case *4': 

strcpy(temp->soil_type, "Soft Clay"); 

temp->soil_flag = 1; 

flag=l; 

break; 

case '5': 

strcpy(temp->soil_type, "Medium Clay"); 

temp->soil_flag = 2; 

flag=l; 

break; 

case '6': 

strcpy(temp->soil_type, "Stiff Clay"); 

temp->soil_flag = 3; 

flag=l; 

break; 

case 7': 

strcpy(temp->soil_type, "Loose Sand"); 

temp->soil_flag = 2; 

flag=l; 

break; 

case '8': 

strcpy(temp->soil_type, "Medium Sand"); 
temp->SQil_flag = 3; 
flag = 1; 
break; 

case '9': 

strcpy(temp->soil_type, "Dense Sand & Gravel"); 

temp->soil_flag = 3; 

flag=l; 

break; 

default: 

prt_inv(); 

break; 

} 

} 

} 

void getj5ile_info(Bent *bent, PierData *Input) 

{ 

Pile *temp, *prev_temp; 
int i; 

char side[6]; 

bent->pile = calloc(l,sizeof(Pile)); 


90 




if(bent->pile = NULL) 

{ 

prt_eiT("Pile"); 

} 

temp = bent->pile; 


for(i = 0; i <= Input->piles_per_bent -1; i-H-) 

{ 

clean(); 

temp->id_let[0] = "; 
temp->id_let[l] = (char)(i+65); 
temp->diameter = Input->pile_size; 
temp->unsup_length = bent->pile_length+Input->fixity; 

temp->pile_weight = (PI*po\v(temp->diameter/12,2)/4)*(bent->pile_length_tot*Input->pile_prop- 
>unit_wt-bent->depth*H20_RG); 

bent->weight_tot += temp->pile_weight; 
temp->length_mud_to_cap = bent->pile_length_tot; 
if(i = 0II i = Input->piles_per_bent -1) 

{ 

temp->dead_load = bent->dead_wt_per_pile/2 + 0.075*bent->dead_wt_per_pile; 
temp->load_area = bent->load_area/(Input->piles_per_bent -1)/2; 

} 

else 

{ 

temp->dead_load = bent->dead_wt_perj3ile; 
temp->load_area = bent->load_area/(Input->piles_per_bent -1); 

} 

if(Input->sup_struct->bracing = y||Input->sup_struct->bracing = ’V) 
temp->eff_length = 0.5*temp->unsup_length; 
else 

temp->eff_length = 2*temp->unsup_length; 

printf("\n\tFor Bent #%d,", bent->id_num); 
printfC'pile: %s \n\tenter the following:", temp->id_let); 
get_cond(bent, temp. Input, i+1); 

if(i < Input->piles_per_bent-l) 

{ 

temp->next = calloc(l,sizeof(Pile)); 

if(temp->next = NULL) 

{ 

pit_eiT("Pile"); 

} 

prev_temp = temp; 
temp = temp->next; 
temp->prev = prev_temp; 

} 

} 


91 



if(bent->batters == y||bent->batters = 'V) 

{ 

for(i = 0; i <= 1; i-H-) 

{ 

temp->next = calloc(l,sizeof(Pile)); 


if(temp->next = NULL) 

{ 

prt_err("Batter Pile"); 

} 


temp = temp->next; 


if(i = 0) 

{ 

strcpy(temp->id_let, "bL"); 
strcpy(side, "left"); 

} 

else 

{ 

strcpy(temp->id_let, "bR"); 
strq)y(side, "right"); 

} 

temp->unsup__length = (bent->pilejength + Input->fixity)/(sin(Input->batters->batter_angle)); 
temp->diameter = Input->batters->batter_size; 
temp->eflf_length = 0.7*temp->unsupjength; 

temp->pile_weight = (PI*pow(temp->diameter/l 2,2)/4)*(bent->pile_length_tot*Input- 
>pile_prop->iinit_wt - bent->depth*H20_RG)/(sin(Input->batters->batter_angle)); 
bent->weight_tot += temp->pile_weight; 
cleanO; 

printf(”\n\tFor Bent #%d, ”, bent->id_num); 
printfC'the %s batter pile, \n\tenter the following:”, side); 
get_cond(bent, temp, Input, 0); 

} 

} 

} 




void get_prop_info(Props *matl, int pflag) 

{ 

char choice; 
int flag = 0; 


vriiile(flag == 0) 

{ 

printf("\n\n\tWhen identifying the type of wood, if the type you are looking"); 

printf("\n\tfor is not present, choose the closest or next weaker type."); 

printf("\n\n\t\t\tl) Douglas Fir"); 

printf("\n\t\t\t2) Southern Pine"); 

printf("\n\t\t\t3) White Oak"); 

printf("\n\t\t\t4) Red Oak"); 


92 



printf("\n\t\t\t5) Northern Red Oak"); 
printf("\n\t\t\t6) Mixed Oak"); 
prmtf("\n\t\t\t7) Mixed Hardwoods"); 
printf("\n\t\t\t8) Greenheart - usually only piles”); 
printf("\n\t\t\t9) Ekki (Azobe) - usukly only piles"); 
printf("\n\n\t\t\tEnter choice:"); 
choice = getcheO; 

switch(choice) 

{ 

case'l': 

if(pflag = 1) 

{ 

matl->bending_mod = 1700000.0; 
matl->sig pub bend= 1750.0; 

} 

else 

{ 

matl->bendmg_mod = 1800000.0; 
matl->sig pub bend= 1900.0; 

} 

matl->sig pub comp = 1350.0; 
matl->umt_vvt = 34.0; 
strcpy(matl->tim_type, "Douglas Fir"); 
flag=l; 
break; 

case '2': 

if(pflag = l) 

{ 

matl->bending_mod = 1600000.0; 
matl->sig pub bend= 1500.0; 

} 

else 

{ 

matl">bending_mod = 1600000.0; 
matl->sigjpub_bend = 1800.0; 

} 

matl->sig_pub_comp = 975.0; 
matl->unit_wt = 36.0; 
strcpy(matl->tim_type,"Southern Pine"); 
flag=l; 
break; 

case '3': 

if(pflag = 1) 

{ 

matl->bending_mod= 1000000.0; 
matl->sig pub bend = 1300.0; 

} 

else 


93 




7 


{ 

matl“>bending_mod = 1000000.0; 
matl‘>sig_pub bend = 1400.0; 

} 

inatl->sig__pub_comp = 850.0; 
matl->unit_wt = 48.0; 
strq)y(matl->tim_type/'White Oak”); 
flag=l; 
break; 

case ’4’: 

if(pflag = 1) 

{ 

matl->bending_mod == 1200000.0; 
matl->sig_pub_bend = 1250.0; 

} 

else 

{ 

matl“>bendmg_mod = 1200000.0; 
matl“>sig_pub_bend = 1350.0; 

} 

matl->si g p ub comp = 875.0; 
matl->unit_wt = 44.0; 
strcpy(matl->tiin_type,"Red Oak"); 
flag= 1; 
break; 

case '5': 

if(pflag= 1) 

{ 

matl->bending_mod = 1300000.0; 
inatl->sig pub bend= 1500.0; 

} 

else 

{ 

matl->bendmg_mod = 1300000.0; 
matl->sig pub bend= 1600.0; 

} 

inatl->sig pub comp = 1000.0; 
matl->unit_wt = 44.0; 

strcpy(matl->tim_type,"Northem Red Oak"); 

flag=l; 

break; 

case '6': 

if(pflag= 1) 

{ 

matl->bending_mod = 1000000.0; 
matl->sig pub bend = 1250.0; 

} 


94 



else 

{ 

matl->bendmg_mod = 1000000.0; 
matl->sig pub bend= 1350.0; 

} 

matl->si g p ub comp = 875.0; 
matl->unit_wt = 46.0; 
strcpy(matl->tiin_type,"Mbced Oak"); 
flag=l; 
break; 

case '7': 

if(pflag — 1) 

{ 

matl->bendmg_mod = 1500000.0; 
matl->sig pub bend= 1550.0; 

} 

else 

{ 

matl->bending_mod = 1500000.0; 
matl->sig pub bend = 1650.0; 

} 

matl->sig pub comp = 875.0; 
matl->imit_wt = 42.0; 

strcpy(matl->tim_type,"Mixed Hardwoods"); 

flag=l; 

break; 

case '8': 

matl->bending_mod = 3700000.0; 
tDatl->sig pub comp = 3400.0; 
matl->sig pub bend = 4500.0; 
matl->unit_wt = 66.0; 
strcpy(matl->tmi_type,"Greenheart"); 
flag = 1; 
break; 

case '9': 

matl->bending_mod = 3000000.0; 

matl->sig pub comp = 3400.0; 

matl->sig pub bend = 4500.0; 

matl->unit_wt = 65.5; 

strcpy(taatl->tmi_type,"Ekki"); 

flag=l; 

break; 

default: 

prt_mv(); 

break; 

} 

} 


95 



} 


J|c ** ijc ]|c * 9|C :|c * 9|C )ic 9|C i|c ) 1 ( :)c 4c 4c 3(c 4: ** ♦♦ )|c *♦*♦♦**** ******** 9|c»c ])e :|c iK 9»: ** */ 


double test_input(int num, double check) 

{ 

char in_value[20] = {0}, choice; 

double out_value = 0.0; 
int j, i, flag = 0, ctr = 0; 


\vhile(flag = 0) 

{ 

scanf("%s", in_value); 

for(i = 0; i < strlen(in_value); i++) 

{ 

ifl;isdigit(m_value[i]) = 0) 
flag=l; 

} 

if(strlen(in_value) > num||flag =1) 

{ 

ctr++; 

if(ctr >= 3) 

{ 

printfC'VnUThat's 3 incorrect inputs in a row."); 
printf("\n\tDo you wish to quit (y/n)? "); 
choice = getcheO; 

if(quit(choice)) 

{ 

printf("\n\n\tLater!!!"); 
exit(O); 

} 

else 

{ 

ctr = 0; 

} 

} 

prt_inv(); 

printf("\n\tRe-enter value:"); 
flag = 0; 

in_value[0] = W; 


flag = 2; 


for(i = 0, j = strlen(in_value); j > 0; j-,i++) 

out_value += (double)(((int)in_value[i]-48)*pow(10, j-1)); 


96 



if(out_value < check) 

{ 

prt_inv(); 

printf("\n\tRe-enter value:"); 
out_value = test_input(num, check); 

} 


retum(out_value); 

} 




int quit(char choice) 

{ 

char temp = 'll'; 


if(choice = 'y'||choice = 'V) 
retum(l); 
else 

{ 

if(choice = 'n'||choice = "N') 
retum(0); 
else 

{ 

printfC'Invalid selection. Quit(y/n)?"); 
temp = getcheO; 
retum(quit(temp)); 

} 

} 

} 




void get_cond(Bent ^bent. Pile *temp, PierData *Input, int pile_no) 

{ 

Force *ftemp; 

int flag = 0, flagl = 0; 

double sigma = 0.0, Sigma_calc = 0.0,1 = 0.0, b = 0.0, h = 0.0, S == 0.0; 
double diam = 0.0, efif_l = temp“>eff_length, A = 0.0, x = 0.0, y = 0.0; 
double bat_temp = 0.0, wc__moment = 0.0; 
char choice, choice 1; 

ftemp = Input->forces; 

v^le(flag = 0) 

{ 

printf(*'\n\n\tCondition code for this pile:”); 
printf(”\n\n\t\tl)ND 2)MN 3)MD 4)MJ 5)SV"); 
printf("\n\n\t\t\tEnter choice: ”); 
choice = getcheO; 

switch(choice) 

{ 


97 




T 


case *1’: 

strcpy(temp->condition, "ND"); 
diam = temp->diaineter; 

I = (PI * pow(diam/2,4))/4; 

A = (PI * pov^diam/2, 2)); 
flag=l; 


if(Input->sup_struct->bracing — y||Input->sup_struct->bracing = ’Y') 
flagl = 1; 
else 

flagl =2; 

temp->flag = 0; 
break; 

case '2': 

strcpy(temp->condition, "MN"); 

printf(''\n\tEnter the reduced piling diameter size(inches):"); 
temp->diameter = test_input(2,1.0); 
diam = temp->diameter; 

I = (PI*pow(diain/2,4))/4; 

A = (PI * pow(diam/2, 2)); 
flag=l; 


if(Input->sup_struct->bracing = ’y’||Input->sup_struct->bracing == ’Y) 
flagl = 1; 
else 

flagl = 2; 


temp“>flag = 0; 
break; 

case ’3’: 

strcpy(temp->condition, "MD"); 
vdiile(flagl == 0) 

{ 

printf("\n\n\tls the defective portion of this pile"); 

printf(" (c)ircular\n\t or (r)ectangiilar (\"c\" or V’rV’)? "); 

choicel = getcheO; 

printf("\n"); 

switch(choicel) 

{ 

case ’c': 
case ’C: 

printf("\n\tEnter the reduced piling diameter size(inches):"); 
temp->diameter = test_input_doubie(l .0); 
diam = temp->diameter; 

A = (PI * pow(diam/2, 2)); 

I = (PI ♦ pow(diam/2,4)y4; 

if(Input->sup_struct->bracing = ’y'||Input->sup_struct->bracing = Y') 
flagl = 1; 
else 


98 



flagl=2; 


break; 

case 'r': 
case "R': 

prmtf(''\n\tSuperimpose a rectangle on the section."); 
printfC'Enter the\n\tfollowing dimensions 
printf("\n\t\tWidth(inches):"); 
h = test_input_double(0.0); 
prmtf("\t\tLength(inches):"); 
b = test_input_double(0.0); 

A = (h*b); 

I = (b*(pow(h,3))/12); 

flagl = 3; 

break; 

default; 

prt_inv(); 

break; 

} 

} 

flag=l; 
temp->flag = 0; 
break; 

case '4': 

strcpy(temp->condition, "MJ"); 
vdiile(flagl = 0) 

{ 

printf("\n\n\tls the defective portion of this pile"); 
printf(" (c)ircular, (r)ectangular"); 

printf("or (i)ncapable of supporting a load (\"c\", \"r\" or \"i\")? "); 

choice 1 = getcheO; 

printf("\n"); 

switch(choicel) 

{ 

case 'c': 
case 'C: 

printfl;"\n\tEnter the reduced piling diameter size(inches);"); 
temp->diameter = test_input_double(l .0); 
diam = temp->diameter; 

A = (PI*pow(diam/2,2)); 

I = (PI * pow(diam/2,4))/4; 

if(Input->si 5 )_struct->bracing — y||lnput->sup_struct->bracing == 'Y') 
flagl = 1; 
else 

flagl =2; 

temp->flag = 0; 
break; 


99 



T 


case 'r': 
case 'R': 

printf("\n\tSuperimpose a rectangle on the section."); 
printf("Enter the\n\tfollowmg dimensions 
prmtf("\n\t\tWidth(inches):"); 
h = test_input_double(0.0); 
printf("\t\tLength(inches):"); 
b = test_input_double(0.0); 

A = (h*b); 

I = (b*(pow(h,3))/12); 

flagl=3; 
temp->flag = 0; 
break; 

case 'i': 
case T: 

1 = 0 . 0 ; 

A = 0.0; 

flagl =4; 
temp->flag = 1; 
bre^; 

default: 

prt_inv(); 

break; 

} 

} 

flag=l; 

break; 

case '5': 

strcpy(temp->conditlon, "SV"); 

1 = 0.0; 

A = 0.0; 


flag=l; 
flagl = 4; 
temp->flag= 1; 
break; 

default: 

prt_inv(); 

break; 

} 

} 

X = pow(PI,2)*I*Input->pile_prop->bending_mod; 
y = A’*‘pow(eff_l*12,2)*Input->factor_of_safety; 


100 



T 


if(A = 0.0) 

Sigma_calc = 0.0; 
else 

Sigma_calc = x/y; 

if(Sigma_calc < Input->pile_prop->sigj)ub_comp) 
sigma = Sigma_calc; 
else 

sigma = Input->pilejprop->sig_pub_comp; 

if(temp->id_let[0] = T?’) 

{ 

temp->vert_load = A*sigma; 

if(temp->vert_load < 0) 
temp->vert_load = 0; 

bat_temp = temp->vert_load*cos(Input->batters->batter_angle); 

if(temp->id_let[l] = *R') 

{ 

temp->lat__load = 1.333*bat__temp; 
bent->lat_cap += temp“>lat_load; 

} 

} 

else 

{ 

if(temp“>flag =1) 

{ 

if(pile_no == l||piie_no = Input->piles_per_bent) 

{ 

temp->vertJoad = Input->loads“>pile_pt_miss_end - temp->deadJoad; 
if(pile_min_j) < temp->vert_load) 
temp->vertJoad = pile_min_p; 

temp->uni_load_j)si = Input->loads->pile_uni_miss_end - temp->dead_load/temp- 

>load_area/144; 

if(pile_min_u < temp->imi_load_psi) 
temp->uni_load_psi = pile_min_u; 

} 

else 

{ 

temp->vertJoad = Input->loads->pile_pt__miss - temp->deadJoad; 
if(pile_min_j) < temp->vertJoad) 
temp->vertJoad = pile_min_p; 

temp->uniJoadjsi = Input->loads->pile_uni_miss - temp->deadJoad/temp- 

>load_area/144; 

if(pile__min_u < temp->uni Joad_psi) 
temp->uniJoad_psi = pile_min_u; 

} 

} 

else 

{ 

temp->vert_load = A*signia - temp->dead_load; 


101 


temp“>uni_load__psi = temp->vert_load/temp->load__area/144; 

if(temp->vert_load <= 0) 

{ 

if(pile_no = ll|pile_no = Input->piles_j)er_bent) 

{ 

temp->vert_load = Input->loads->pile_pt_miss__end - temp->dead_load; 
if(pile_min_p < temp->vert_load) 
temp->vert_load = piie_min_p; 
if(temp->vert_load <= 0) 
temp->vertJoad = 0; 

} 

else 

{ 

temp->vert__load = Input->loads->pile__pt__imss - temp->dead_load; 
if(pile_min_p < temp->vert_load) 
temp->vert__load = pile__min_j); 
if(temp->vertJoad <= 0) 
temp“>vert_load = 0; 

} 

} 

else 

if((Input->loads->pile_pt_miss - temp->dead__load) < pile_mm_j>) 

{ 

if(temp->vert_load < (Input->loads->pile_j)t_miss - temp->dead_load)) 
temp->vertJoad = (Input->loads->pile_pt_iniss - temp->deadJoad); 

} 

else 

teinp->vert_load = pile_min_p; 

if(temp->uni_load_j)si <= 0) 

{ 

if(pile_no = l||pile_no = Input->piles_j)er_bent) 

{ 

temp->uni_load j>si = Input->ioads->pile_um_iniss_end - (temp- 
>dead_load/temp->load_area/l 44); 

if(pile_min_u < teinp->uni_loadjpsi) 
temp->uni__load_j)si = pile_min_u; 
if(temp->um_load_j)si <= 0) 
temp->uniJoad_psi = 0; 

} 

else 

{ 

temp->uniJoad_psi = Input->loadS“>pile_uni__miss - temp->dead__load/temp- 

>load_area/144; 

if(pile_min_u < temp->uni_load_psi) 
temp->imi__load_psi = pile_min_j); 
if(temp->um_load_j)si <- 0) 
temp->uniJoadjDsi = 0; 

} 

} 

else 

if((Input->loads->pile_uni_miss - temp->dead_load/temp->load_area/144) < pile_min_u) 


102 




T 


>load_area/144)) 

>load_area/144); 


{ 

if(temp->uni_load_psi < (Input->loads->pile_uni_iruss - temp->dead_load/temp- 
temp->uni_load_psi = (Input->loads->pile_uni_miss - temp->dead_load/temp- 

} 

else 


temp->uni_load_psi = pile_miii_u; 

} 

if(Input->pile_uni_min > temp->uni_load_psi) 

{ 

Input->pile_um_min = temp->uni_load_psi; 
Input->loads->pile_uni_mm = Input->pile_uni_min; 

} 


wc_moment = (ftemp->wave_M_x_d*bent->depth* 12)+(flemp->current_pier_M_x*pow(bent- 
>depth*12,2)); 

temp->spring_cap = 3''‘Input->pile_prop->bending_mod*I/pow(efif_l*12,3); 
bent->spring_tot += temp->spring_cap; 

S = Input->pile prop->sig pub bend; 


if(flagl = 1) 

{ 

temp->lat_load = 2*(S*PI*pow(diam/2,3)/4 - wc_moment)/(eff_l*12); 
bent->lat_cap += temp->lat_load; 

} 


if(flagl == 2) 

{ 

temp->lat_load = (S*PI*povv(diam/2,3)/4 - wc_moment)/(eff_l‘'‘12); 
bent->lat_cap += temp->lat_load; 

} 


if(flagl = 3) 

{ 

temp->lat_load = 2*(S*b*povv(h,2)/4 - wc_moment)/(eff_l*12); 
bent->lat_cap += temp->lat_load; 

} 


if(flagl = 4) 

{ 

temp->lat_load = 0.0; 
bent->lat_cap += temp->lat_load; 

} 

} 

} 




void getJoad_info(PierData *Input) 

{ 

Load *tenip; 

double hs__a = 0.0, hs_b = 0.0, h_a = 0.0, h_b = 0.0, pu_a = 0.0, pu_b == 0.0; 


103 




T 


double cu__a = 0.0, cu_b = 0.0, su_a = 0.0, su_b - 0.0, sp_a “ 0.0, sp_b - 0.0; 
double ca_a = 0.0, ca__b = 0.0, cp_a = 0.0, cp_b = 0.0, sig_sup = 0.0; 
double sig_adj_pl = 0.0; 

Input->loads = calloc(l,sizeof(Load)); 

if(Input->loads = NULL) 

{ 

prt_err("Load”); 

} 

temp = Input->loads; 

if(Input->sup_struct->piank_w >= 5.0) 

{ 

if(Input“>supistruct>>plaiik_ht <= 2.0) 
sig_adj_pl = 1.22; 
else 

if(Input->sup_struct->plank_ht <= 3.0) 
sig__adj__pl = 1.16; 
else 

sig_adj_pl = 1.11; 

} 

else 

if(Input->sup_struct->plaiik_ht <= 2.0) 
sig_adjj)l= 1.10; 
else 

if(Input->sup_struct->plank_ht <= 3.0) 
sig__adj__pl = 1.04; 
else 

sig_adj_pl = 1.00; 

sig_sup = Input->sup_struct~>sup_struct_prop->sig__pub__bend; 

if(Input“>bent_spread <= 23.9) 

{ 

hs_a = (4/Input->sup_struct->string_spread)*2*Input->sup_struct->strmg_w*pow(Input->sup_struct- 
>string_ht,2)*sig_sup; 

hs_b = 3*Input->bent_spread*12; 
temp->hs_limit_vviieel__str = hs_a/hs_b; 

} 

else 

{ 

hs_a = (4/Input*>sup_struct->string_spread)*Input->sup__struct->strmg_w*pow(Input->sup_struct- 
>string_ht,2)*sig_sup; 

hs__b = 3*pow((Input->bent_spread-7)*12,2); 
temp->hs__liimt_vy^eel_str = Input->bent_spread*12*hs_a/hs_b; 

} 

if(Input->bent_spread <= 27.0) 

{ 

h_a = (4/Input->sup_struct->string_spread)*2*Input->sup_struct->string_w*pow(Input->sup_struct- 
>string_ht,2)*sig_sup; 


104 




h_b = 3*Input->bent_spread*12; 
temp->h_limit_^\ileel_st^ = hjaJhJ); 

} 

else 

{ 

h_a = (4/Input->sup_struct->string_spread)*Input->sup_struct->string_w*pow(Input->sup_struct- 
>string_ht,2)*sig_sup; 

h_b = (1.862*Input“>bent_spread“9.606)*12; 
temp->h_liimt_'s^eel_str = h_a/h_b; 

} 

sp_a = (4/Input->sup_stmct->string__spread)*4*Input->sup_struct->string__w*pow(Input->sup_struct- 
>string_ht,2)*sig__sup; 

sp_b = 6*Input->bent_spread*12; 
teinp->string_j)t_lim = sp_a/sp__b; 

su_a = (4/Input->sup_struct->strmg_spread)*8*Input->sup_struct->string_w*pow(Input->sup_struct- 
>string_ht,2)*sig_sup; 

su_b = 6*pow(Input->bent_spread*12,2); 

temp->strmg_unijim_psi = su_a/su_b/(Input->sup_struct->strmg__spread*12); 

ca_a = Input->sup_struct“>cap_w*pow(Input“>sup_struct->cap_ht,2)*sig_sup; 
ca^b = 72*(-124.02+92.39*(l-exp(-Input->pile_spread/13.59))+169.237*(l-exp(-Input- 
>pile^spread/3.203)))/100; 

temp->axle_lim_cap = ca_a/ca_b; 

cp__a = Input->sup_struct->cap_w*pow(Input->sup_struct->cap_ht,2)*sig_sup; 
cp_b = 6*0.07922555*Input->pile_^spread*12; 
temp->capj>t_liin = cp_a/qp_b; 

cu_a = Input->sup_stmct->cap_w*pow(Input->sup_struct->cap_ht,2)*sig_sup; 
cu_b = 6*0.1056338*Input->bent_spread*12*Input»>pile__spread*12; 
temp->cap_uni_liin_j)si = cu_a/cu_b; 

pu_a = pow(Input->sup_struct->plank__ht,2)*sig_sup*sig_adj jdI; 
pu_b = 6*0.1056338*Input->sup_struct“>strmg_spread*12; 
temp->plank_imi_liin_j)si = pu_a/pu_b; 

temp->pile_uni_mm = Input“>pile_um_min; 

temp->pilej)t_niiss = (Input->sup_struct->cap__w*pow(Input->sup_struct- 
>cap_ht,2)*sig_sup)/(6*0.261686*Input->pile__spread* 12); 

temp->pile_uni_miss = (Input->sup_struct->cap_w*pow(Input->sup_struct- 
>cap_ht,2)*sig_sup)/(6*0.1996*Input->pile_spread* 12*Input->bent_spread* 12); 

temp->pile_pt_miss_end = (Input->sup_struct->cap_w*pow(Input->sup_struct- 
>cap_ht,2)*sig_sup)/(6*Input->pile_spread* 12); 

temp->pile_um__miss__end = (2*Input“>sup_struct->cap_w*pow(Input->sup__struct- 
>cap_ht,2)*sig_sup)/(6*pow(Input->pile_spread* 12,2)*Input->bent_spread* 12); 

temp-'>fork_lim_5 = check__fork(6.25,10000, Input); 
temp->fork_liin_6 = check_fork(6.25,11500, Input); 
temp->fork_lim_75 = check_fork(6.333,14500, Input); 
temp->fork_lim_8 = check__fork(6.333,15250, Input); 
temp->fork_liin_10 = check_fork(6.333,17500, ^put); 


105 



T 


temp->fork_lim_12= check_fork(6.333,22150, Input); 
temp->fork__lim_15 = check_fork(6.5,29000, Input); 
temp->fork__liiQ_20 = check_fork(8.0,490100, Input); 




char check_fork(double a, double lim, PierData *Input) 

{ 

double p, p_a, p__b; 

double sig_sup = Input->sup_struct->sup_struct_prop->sig_pub_bend; 

if(Input->bent_spread <= (1.707*a)) 

{ 

p_a = (4/Input->sup_struct->string_spread)*4*Input->sup__struct->string_w*pow(Input->sup_struct- 
>string_ht,2)*sig_sup; 

p_b = 6*Input->bent_spread*12; 
p = p_a/p_b; 

if(p >= lim) 
retumCY’); 
else 

retum('N'); 

} 

else 

{ 

p_a = (4/Input->sup_struct->string_spread)*2*Input->sup_struct->string_w*pow(Input->sup_struct“ 
>string_ht,2)*sig_sup; 

p_b = 6*pow((Input->bent_spread-a/2)*12,2); 
p = Input->bent_spread*12*p_a/p_b; 

if(p >= lim) 
retum(‘Y’); 
else 

retumCN’); 

} 

} 

void get_ship_data(PierData *Input) 

{ 

Ship *temp; 
double w_load, c_load; 
mtk= 1.3; 

Input->ship_data = calloc(l,sizeof(Ship)); 

if(Input->sliip_data = NULL) 

{ 

prt_eiT("Ship"); 

} 

temp = Input->ship_data; 


106 




prmtf("\n\n\t\tEnter ship length(feet):"); 
temp->length = test_mput_double(l .0); 

if(temp->length <= 80) 

{ 

temp->Cl = 1.0; 
temp->C2 = 1.45; 

} 

else 

if(temp->lenglii <= 250) 

{ 

temp->Cl =0.8; 
temp->C2 = 1.37; 

} 

else 

if(temp->length < 655) 

{ 

temp->Cl = 0.65; 
temp->C2 = 1.31; 

} 

else 

{ 

temp->Cl =0.5; 
temp->C2 = 1.25; 

} 

printf("\n\t\tEnter ship draft(feet):"); 
temp->draft = test_input_double(l .0); 

printf("\n\t\tFor this next amount, you will need to Y'flattenV' the"); 
printf("\n\t\tsuperstructure so that the ship is a rectangle sitting on"); 
printf("\n\t\tthe water."); 

printf("\n\n\t\tEnter the V'heightV of the rectangle (feet):"); 
temp->freeboard = test_input_double(1.0); 

wload = k*temp->Cl *temp->C2*temp->length*temp->freeboard*Input->forces->wmd_x; 
cjoad = temp->length*temp->draft*Input->forces->current_ship_x; 
temp->force_tot = w_load + c_load; 

if((Input->lat_cap-fabs(temp->force_tot)) > 0) 

Input->ship = 2; 

} 




char pm_to_file(PierData Fiagz *flagz) 

{ 


FILE ‘oQ), 

Bent *b_temp; 

Pile ♦p_temp; 

char choice, ^temp, fiiame[13] = "pier_in0.dat"; 
int flagl = 1; 

double uni_min, pjoad, w_load, t_angle, p_min; 


if(flagz->t_flag = 1) 
fiiame[7] = 't'; 


107 


T 


else 

{ 

remove("pier_int.dat"); 

printf("\n\n\tEnter a number between 0-9. This number will be used"); 
printfr\n\twiien saving the user data file so that you can tell the"); 
printf("\n\tdifference between input files. For example, if you"); 
printf("\n\tinput the number 3, your data file will be saved as:"); 
printf("\n\n\t\t\tpier_in3.dat"); 

printf("\n\n\tlf you enter a number that has been used previously,"); 

printf("\n\tyou will overwrite that file."); 

printf("\n\n\tPlease enter number:"); 

f_temp = (int)(check_num()+48); 

fiiame[7] = f_temp; 

while(flagl = 1) 

{ 

rQ) = fopen(fiiame, "r"); 


if(r^ !=NULL) 

{ 

printf("\n\n\tWaming!!! This file already exists."); 
printf("\n\tDo you wish to overwrite this file(y/n)?"); 
choice = getcheO; 


^^^^(choice != 'y'&&choice != 'Y'&&choice != 'n'&&choice != "N') 

{ 

prtinvO; 

prmtf("\n\tDo you wish to overwrite this file(y/n)? "); 
choice = getcheO; 

} 

if(choice = 'n’l|choice = TJ') 

{ 

printf("\n\n\tPlease enter new number:"); 
f_temp = (int)(check_num0+48); 
fiiame[7] = f_temp; 
rfy = fopen(fiiame, "r"); 

} 

else 

flagl = 0; 

} 

else 

flagl = 0; 

} 

fclose(r^); 

} 

clrscrO; 

if(p_info->no_of_bents >= 3&&p_info->piles_per_bent >=3&&flagz->t_flag != 1) 

{ 

flagz->s^flag = 1; 
pile_plot(p_info, f_temp); 


108 



T 


} 

ofp = fopen(fiiame, "w”); 

if(ofy = NULL) 

{ 

printf(”\nERROR: Cannot open user output file!\n”); 
exit(-l); 

} 

^rintf(o^,”\tFile generated: ”); 
date_j)lot(o^); 

^rintf(o^,”\n\tThe following information was input in to RSAP."); 
fjDrintf(o^,'’\n\t(C)1999 - All rights reserved. R. J. Keiter"); 

^rintf(of^,”\n\t ~ ■ - =”); 

if(p_info->env_data->wind_spd > 0) 

{ 

:^rintf(o^,"\n\n\tThe wind speed \vas measured at %.01f mph,",p_info->env_data->wind__spd); 
^rintf(o^,'‘ %.01f above \n\t the water’s surface",p_info->env__data->wind_spd_ht); 

if(p__info->env__data->wind__angle_deg >180) 

t_angle = p_infO“>env_data->wind_angle_deg -180; 
else 

t_angle = p_info->env_data->wind_angle_deg + 180; 

^rintf(oQ)," at an angle of %.01f degrees.",t_angle); 

} 

else 

fyrintf(ofy,"\n\tThere were no wind data provided."); 

if(p_info->env_data->current_spd > 0) 

{ 

^rintf(o^,"\n\tThe current speed was measured at %.21f mph",p_info->env_data->current_spd); 

if(p__info->env_data->current_angle_deg > 180) 

t_angle = p_info->env__data->current__angle_deg -180; 
else 

t_angle = p_info->env__data->cuiTent_angle_deg + 180; 
fyrintf(o^," at an \n\t angle of %.01f degrees.",t_angle); 

} 

else 

^rintf(o^,"\n\tThere were no current data provided."); 

if(p_info->wave_data->wave_H > 0) 

{ 

Q)rintf(ofy,"\n\t%.21A' waves at %.01f seconds were observed" ,p_info->wave__data->\vave_H, p_info- 
>wave_data->wave_T); 

if(p_info->wave_data->wave_angle_deg > 180) 

t_angle = p_info->wave_data->wave_angle_deg -180; 
else 


109 




^rintf(ofy," in %.01f of water at an \n\t angle of %.01f degrees.",p_info->wave_data- 
>wave_d,t_angle); 


} 

else 


if(p_info->wave_data->wave_Aiiy = 'N') 

{ 

Q>rintf(o:l^ M^^^^jicjiciit***^********************^****************************^. 
^rmtf(o:^ *'\^X**************** ATTENTION!!! *****♦****♦*********♦***'); 
^rintf(ofy •’^jj^j******************************************************”)’ 
f^rintf(o^,’'\n\n\tThese waves do not fall under the theory used here to"); 
^rmtf(o^,"\n\tanalyze the forces due to waves. The actual forces will"); 
^rintf(o^,"\n\tmost likely be larger than that calculated and used in "); 
^rintf(o^,"\n\tthis assessment. Proceed with caution!"); 

^rintf(oQ) ’'\n\n\t******************************************************"); 
^rintf(o^j"\n\t**************** ATTENTION!!! ************♦*******♦**”); 

} 


fyrintf(o^,"\n\tThere were no wave data provided."); 


if(p_info->env_data->soil_flag > 0) 

fyrintf(oQ3,"\n\n\tSoil Type: %s",p_info->env_data->soil_type); 
else 

^rintf(o^,"\n\n\tNo Soil information provided."); 

^rintf(oQ),"\n\n\tThis analysis was performed using a factor of safety of: "); 
Q)rintf(o^,"%.21f',p_info->factor_of_safety); 

^rintf(o^,"\n\n\tNumber of bents: %d", p_info->no_of_bents); 
fi)rintf(o^,"\n\tThe distance between bents is: %.21f", p_info->bent_spread); 

^rintf(o^,"\n\tThe pilings are %.01f\" %s", p_info->pile_size, p_mfo->pile_prop->tim_type); 

if(p_info->env_data->fouling^factor > 0) 

Q5rintf(o^," with %.01f\" of bio-fouling.", p_info->env_data->fouling_factor); 
else 

Q)rintf(oi^,"."); 

fprintf(oQ),"\n\tNumber of piles per bent: %d", p_info->piles_per_bent); 

^rintf(oQ),"\n\tDistance between pilings: %.21f", p_info->pile_spread); 

if(p_info->batters->batters = y|lp_info->batters->batters = ’V) 

{ 

fyrintf(o^,"\n\tThis pier has %.01f\" batter pilings", p_info->batters->batter_size); 

4)rintf(o:^," at a %.01f degree angle.", p_info->batters->batter_angle_deg); 

} 

QMTntf(oQ),"\n\n\tThe superstructure is constructed of %s,", p_info->sup_struct->sup_struct_prop->tim_type); 

if(p_info->sup_struct->bracing = y||p_info->sup_struct->bracmg — ’T) 
fyrintf(o^,"\n\t has cross bracing,"); 
else 

^rintf(oQD,"\n\t has NO cross bracing,"); 



if(p_info->sup_struct->cap_type = ’s'||p_mfo->sup_struct->cap_type = ’S') 
fyrintf(o^,"and has a solid type pile cap."); 
else 

^riiitf(oQ5,"and has a split type pile cap."); 

^rmtf(o^,"\n\tThe pile cap member dimensions are"); 

^rintf(o^," %.01f\" x %.01f\".", p_mfo->sup_struct->cap_w, p_info->sup_struct->cap_ht); 
^rintf(o^,"\n\tThe stringers are %.01f\" x %.01f\"", p_info->sup_struct->string_w, p_info->sup_struct- 
>string_ht); 

^rintf(o^," and are centered %.21f apart.", p_info->sup_struct->string_spread); 

fyrintf(o^,"\n\tThe deck planking is %.01f\" x*%.01f\".", p_info->sup_struct->plank_w, p_info->sup_struct- 
>plank_ht); 

fprintf(oQ),"\n\n\tThe piling inspection information is as follows:"); 

^rintf(o^,"\n\t (The number following the bent number is the"); 
fi)rintf(o^,"\n\t distance from the bottom to where the piling"); 
fprintf(o^,"\n\t meets the"); 

if(p_info->sup_struct->bracing = 'y'||p_info->sup_struct->bracing = 'Y') 

^rintf(oQ5," cross bracing.)"); 
else 

^rintf(o^," pile cap.)"); 

b_temp = p_info->bents; 

while(b_temp !=NULL) 

{ 

^rintf(oQ),"\n\n\tBent #%d - %.01f\n\t", b_temp->id_num, b_temp->pile_length); 
p_temp = b_temp->pile; 

while(p_temp != NULL) 

{ 

fyrintf(o^," %s; %s", p_temp->id_let, p_temp->condition); 
ptemp = p_temp->next; 

} 

b_temp = b_temp->next; 

} 


^rintf(o^,"\n\n\n\ t . . - . - =-:z=: ”y^ 

:^rintf(o%"\n \l " • Assessment Information - " ); 

^rintf(o^,"\n\ t- - ■ ■ ■ ■■ = ■ . "); 

^rintf(o^,"\n\n\tThe pier natural period is %.21f seconds. If we",p_info->pier_period); 
43rintf(o^,"\n\tcompare this to the wave period of %.21f seconds,",p_info->wave_data->wave_T); 


if((fabs(p_info->pier_period - p_info->wave_data->wave_T)) < 2) 
^rintf(ofp,"\n\tthis IS something to be concerned about..."); 
else 

^rintf(o^,"\n\tthis should be nothing to be concerned about..."); 


Iprintf(o^,"\n\n\tThe pile locations can hold the following point loads(lbs)"); 

btemp = p_info->bents; 

p_min = b_temp->pile->vert_load; 


111 



vvliile(b_temp != NULL) 

{ 

Q)rmtf(ofy,"\n\n\tBent #%d\n\t", b_temp->id_num); 
p_temp = b_temp->pile; 

vdiile(p_temp != NULL && p_temp->id_let[0] != 1)') 

{ 

4>rintf(oQ)," %s: %8.01f', p_temp->id_let, p_temp->vert_load); 

if(p_min > p_temp->vert_load) 
pmin = p_temp->vert_load; 

p_temp = p_temp->next; 

} 

btemp = b_temp->next; 

} 

fjprmtf(o^,'’\n\n\n\tTruck Wheel/Axle Load Infonnation"); 

4 ?rmtf( 0 ^,"\n \l n:.:.:. . ")■ 

if(p_min < (2*p_info->loads->hsJimit_'v\beel_str)||p_niin < (2*p_mfo->loads->h_limit_v\4ieel_str)) 

{ 

^rintf(o^,"\n\n\t****************************************************")* 
^riiitf(o:^5”\n\t****************************************************")* 
fi)rintf(o]^/'\n\tWariimg!!! There are individual pile load capacities"); 

^rmtf(o^,"\n\tthat are less than the computed arfe capacities. These"); 

^rintf(o^,"\n\tpiles can NOT support the calculated ^e load. Care"); 
fprintf(o^,"\n\tshould be taken that these piles are not overloaded."); 
^rintf(ofp,"\n\t****************************************************’‘)* 
^rintf(of^,"\n\t****************************************************”)* 

} 

fyrintf(o^,"\n\n\tFor an HS truck (tractor/trailer) the maximum"); 

f^rintf(o^ 5 "\n\tv^eel load is: %.01f lbs which gives a maximum",p_info->loads->hs_limit_wheel__str); 
^rintf(ofi),"\n\taxle load of: %.01f lbs.",(2*p_info->loads->hsJimit_wheel_str)); 
fyrintf(ofy,"\n\n\tFor an H truck (similar to a tactical 5T) the maximum"); 

fprintf(o^,"\n\twheel load is: %.01f lbs which gives a maximum",p_info->loads->hJimit_wheel_str); 
4)rintf(ol|),"\n\taxle load of: %.01f lbs.",(2*p_info->loads->h_limit_wheel_str)); 
fyrintf(o^,"\n\n\n\tPoint Load Information for Crane Loading"); 

^rintf(o1$,"\n\t======^ . =”); 

if(p_min < p_info->loads->cap_ptJim||p_min < p_info->loads->pile_pt__miss) 

{ 

fyrintf(ofp,"\n\n\t****************************************************")* 
Q)rintf(o^,"\n\t****************************************************”)* 
^rintf(o4),"\n\tWaming!!! There are individual pile load capacities"); 
fyrintf(ofp,"\n\tthat are less than the computed point load capacities."); 

^rintf(o^,"\n\tThese piles can NOT support the calculated point load."); 

^rintf(o^,"\n\tCare should be taken that these piles are not overloaded."); 

fyrintf(o^,"\n\t****************************************************")* 

fyrintf(oQ)5"\n\t****************************************************")* 

} 


112 



QDrintf(o^/'\n\n\tThe pile cap point load capacity vA\en bracketed"); 

^rintf(o^,"\n\tby two good piles is: %.01f ibs.",p_info->loads->cap_pt_lim); 
fyrintf(ofp,"\n\n\tFor a pile cap over a severely damaged or missing"); 
^rintf(o^,"\n\tpile, the point load capacity is: %.01f lbs.",p_info->loads->pile_pt_miss); 
^rintf(o^,"\n\n\n\tForklift Assessment"); 

^rintf(o^,"\n \t-"^- ==-.-=^:-r7:. , • . ■ »»)• 

^rintf(o4),”\n\n\tThe Y or N indicates the stringers ability to handle"); 
^rintf(o^,"\n\tthe forklift axle loading. However, if an individual pile"); 
^rintf(o^,"\n\tload capacity is less than the indicate axle capacity, the"); 
^rintf(o4)/’\n\tforklift will NOT be able to operate safely over those piles."); 
4>rintf(oQ),"\n\n\t\t 5T Forklift: %c, axle: 20,000",p_info->loads->fork_lim_5); 
^rintf(o^,"\n\t\t 6T Forklift: %c, axle: 23,000",p_info->loads->fork_lim_6); 
fi)rlntf(ofy,"\n\t\t7.5T Forklift: %c, axle: 19,000",p_info->loads->fork_lim_75); 
fi)rintf(o^,"\n\t\t 8T Forklift: %c, axle: 30,500",p_info->loads->fork_lim_8); 
fi)rintf(ofp,"\n\t\t lOT Forklift: %c, axle: 35,000",p_info->loads->fork_lim_10); 
^rintf(o^,"\n\t\t 12T Forklift: %c, axle: 44,300",p_info->loads->fork_lim_12); 
43rintf(o^,"\n\t\t 15T Forklift: %c, axle: 58,000",p_info->loads->fork_lim_15); 
4)rintf(o^,"\n\t\t 20T Forklift: %c, axle: 98,000",p_info->loads->forkjim_20); 


imi_min = p_info->loads->string__imiJim_psi; 


if(uni_min > p_info->loads->cap_uni_lim_psi) 
uni_min = p__info->loads->cap_uniJim_j)si; 

if(uni_min > p_info->loads->plank_uniJim_psi) 
uni_min = p_iiifo->loads->plank_um_lim_psi; 


:^rintf(oQ),"\n\n\tThe Uniform Load Capacity is: %.21f psi or %.21f psf.",uni_min,(144*uni_min)) 

if(uni_min > p_infO“>loads->pile_iini_min) 

{ 

^rintf(o^,"\n\n\tHowever, some areas are even lower as follows (psi)"); 
b_temp = p_info->bents; 

v^le(b_temp != NULL) 

{ 

^rintf(oQ),"\n\n\tBent #%d", b_temp->id_num); 
p_temp = b__temp->pile; 

wftile(p_temp != NULL && p_temp->idjet[0] != Id') 

{ 

p_load = uni_min; 

if(p_temp->uniJoadj)si < pjoad) 
p_load = p_temp->uni_load_psi; 

Q5rintf(ofy," %s: %7.21f', p_temp>>idjet, pjoad); 
pJemp = p_temp->next; 

} 

b_temp = b_temp->next; 

} 

} 


113 




7 


^rintf(o^,’'\n\n\tFor properly loaded containers, the following"); 
^rmtf(o^,"\n\tunifonn load values (psf) are applicable:"); 

^rintf(o^,"\n\n\t\t it of containers in stack"); 

^rintf(oft),"\n\n\t\t L W H 12 3"); 

^rintf(o^,"\n\n\t\t "); 

fi)rintf(o:^,"\n\n\t\t40.0x8.0x8.0 211 422 633"); 

fprintf(o^,"\n\t\t29.9x8.0x8.0 234 468 702"); 

^rintf(o^,"\n\t\tl9.9x8.0x8.0 284 568 852"); 

^rintf(o^,"\n\t\t 9.8x8.0x8.0 286 572 858"); 

^rintf(oQ),"\n\t\t6.4x8.0x8.0 305 610 915"); 

fprintf(o^,"\n\t\t4.8x8.0x8.0 294 589 883"); 

^rintf(o4)5"\n\n\n\tShip Information"); 

4?rintf(oi^,"\n\ l "); 


if(p_info->ship = l||p_info->ship = 2) 

{ 

fprintf(o^,"\n\n\tThe following ship information was input:"); 

^rintf(o^,"\n\tShip length: %.01f ft", p_info->ship_data->length); 
fyrintf(o^,"\n\tShip draft: %.01f ft", p_info->ship_data->draft); 

^rintf(o^,"\n\tShip equivalent freeboard: %.01f ft", p_info->ship_data->freeboard); 

if(p_info->ship =1) 

{ 

fprintf(oQ),"\n\tUsing the information provided, it is NOT safe for"); 
4)rmtf(o4),"\n\tthis ship to moor at this pier."); 

if(p_info->est_ton_ship > 0) 

{ 

i^rintf(o^,"\n\tYou should be able to berth a ship of); 
^rintf(o^,"\n\tapproximately %.21f long tons.",(0.8*p_info->est_ton_ship)); 

} 

} 

else 

{ 

^rintf(o^,"\n\tUsing the information provided, it is safe for"); 

^rintf(o^,"\n\tthis ship to moor at this pier."); 

} 

} 

i^rintf(o^,"\n\n\tWhen performing load calculations, the following wind"); 

45 rintf(o^,"\n\tand current forces should be applied to the area of the"); 

^rintf(o:^,"\n\tship under consideration:"); 


if(p_info->ship > 0) 

{ 

w_load = 1.3*p_info->ship_data->Cl*p_info->ship_data->C2*fabs(p_info->forces->wind_x); 
^rintf(ol|),"\n\n\tWind Loading: %.21f psf perpendicular to the pier",w_load); 
w_load = 1.3*p_info->ship_data->Cl *p_info->ship_data->C2*fabs(p_info->forces->wind_70); 
fyrintf(oQ>,"\n'to\tFor winds of 70mph, this force would be: %.21f psf ",w_load); 

} 

else 

{ 

if(fabs(p_info->forces->wind_x) > 0.0) 


114 



7 


{ 

^rintf(o^,"\n\n\tWind Loading is approximately: %.21f psf perpendicular to the 
pier",fabs(p_info->forces->\vmd_x)); 

^rintf(o^,"\n\n\tFor winds of 70mph, this force would be approximately: %.21f 
psf',fabs(p_info->forces->wind_70)); 

} 

else 

45rintf(o1^,"\n\n\tThere is no Wind Loading with the given input."); 

} 

if(fabs(p_info->forces->current_ship_x) > 0.0) 

{ 

fyrintf(oQj,"\n\n\tCurrent Loading: %.21f psf perpendicular to the pier",fabs(p_info->forces- 
>current_ship_x)); 

} 

else 

fyrintf(o^,"\n\n\tThere is no Current Loading with the given input."); 


fyrintf(o^, "\n%c", '\0'); 

fclose(ofy); 

retum(f_temp); 


3|C>»: 3(C)|C * 9tc * «9|( )K «t|e ]|C ]|C 9|C iK ****♦♦♦♦ t *♦♦♦**♦*« ’(c 4c ate ** )|C ]|c y 


void pm_to_screen(void) 

{ 

char choice, y_n, f_temp, fiiame[13] = '’pier_in0.dat"; 

int flag = 0, flagl = 1; 

int handle; 

int bytes; 

void *buf; 


while(flag = 0) 

{ 

cleanO; 

printf(”\n\n\t\tRSAP - Rapid Structural Assessment, Pier vLO”); 
printf("\n\n\t\t\tDisplay File Menu"); 
printf("\n\n\t\t\t 1 )View file just entered"); 
printf("\n\t\t\t2)View previously saved file"); 
printf("\n\t\t\t3)Retum to Main Menu"); 
printf("\n\n\t\t\tEnter selection:"); 
choice = getcheO; 

switch(choice) 

{ 

case'l': 

fiiame[7] = t'; 

if ((handle = open(fiiame, 0_RD0NLY 10_TEXT, S_IREAD)) = -1) 

{ 

fElush(stdin); 

clrscrO; 

printf("\n\n\n\t\tYou need to input data first!I !\n\t"); 


115 




T 


pauseO; 

} 

else 

{ 

fflush(stdm); 

clrscrQ; 

if((biif = calloc(l, filelength(handle))) = NULL) 

{ 

printf(''\n\tError opening read buffer"); 
exit(-l); 

} 

bytes = read(handle, buf, filelength(handle)); 

handle = close(handle); 

prmtf("%s",buf); 

free(buf); 

pauseO; 

} 

break; 

case '2': 

printf("\n\n\t\tEnter a number between 0-9. You should have input"); 

printf("\n\t\tthis number vshen saving the user data file."); 

printf("\n\n\t\tPlease enter number:"); 

f_temp = (mt)(check_num()+48); 

fiiame[7] = f_temp; 

flagl = 1; 

^^hile(flagl = 1) 

{ 

if ((handle = open(fiiame, 0_RD0NLY 10_TEXT, S_IREAD)) 

{ 

printf("\n\n\tFile not found!!! Do you wish to try"); 
printf(" another file (y/n)?"); 
y_n = getcheO; 

\\hile(y_n != y&&y_n != 'Y'&&y_n != 'n'&&y_n != N') 

{ 

prt_invO; 

printfC'MtDo you wish try another file (y/n)? "); 
y_n = getcheO; 

} 

if(y_n = yi|y_n = 'Y') 

{ 

printf("\n\n\tPlease enter new manber: "); 
f_temp = (int)(check_num0+48); 
fiiame[7] = f_temp; 

} 

else 

flagl = 2; 

} 

else 

flagl = 0; 


116 



} 

if(flagl — 0) 

{ 

fflush(stdin); 

clrscrO; 

if((buf = calloc(l, filelength(handle))) = NULL) 

{ 

printf(’'\n\tError opening read buffer”); 
exit(-l); 

} 

bytes = read(handle, buf, filelength(handle)); 

handle = close(handle); 

prmtf(”%s", buf); 

free(buf); 

pauseQ; 

} 

break; 

case 3': 
flag = 1; 
break; 

default; 
flag = 0; 
prt_mv(); 
break; 

} 

} 

} 

y :)c ]|c :(c 3|e ^ ^9|c :|c ^ % 4c :(c))( 9 )e ]|c 9(c:|c :(c :|c :ic ]|c 9tc i|c ^ ^ ]|c ^ if: :te It: ^ 

void pile_plot(PierData *p_info, char f_temp) 

{ 

FILE *ofp,*tfp; 

Bent *b_temp; 

Pile *p_temp; 

char foame[l 1] = "piljltO.m”; 
char tname[l 1] == "uni_plt0.m”; 
double uni_min, p_load; 

time_t t; 

tinie(&t); 

&ame[7] = f_temp; 
oQ) = fopen(fiiame, "w"); 

if(o^ = NULL) 

{ 

prmtf("\nERROR: Cannot open user output file!\n"); 
exit(-l); 

} 

^rintf(oQ),'’%%"); 


117 





T 


datej»lot(ofy); 

^rintf(o^,"%%”); 

^rmtf(o4),"\n%% This file processes the output of RSAP to plot the"); 
fprmtf(o^,"\n%% strength contours of the pile capacities."); 
^rintf(o^,"\n%%"); 

^rintf(o^,"\n%% (C)1999 - All rights reserved"); 
fyrintf(oJ^,"\n%% R. J. Keiter(rjkeiter@iname.com)"); 
:^rintf(o^,"\n\nbents = %d;", p_info->no_of_bents); 
fyrintf(ofi5,"\npiles = %d;", p_info->piles_per_bent); 
4)rintf(o4),"\nb_span = %.21f;", p_iirfo->bent_spread); 
^rintf(o]^,"\np_span = %.21f;", p_info->pile_spread); 

45rintf(o^,"\n"); 

^rintf(o^,"\n%%z = capacity matrix"); 

^rintf(o4>,"\n"); 

^rintf(o4),"\nz = ["); 
btemp = p_info->bents; 

wbile(b_temp != NULL) 

{ 

fprintf(ofy,"["); 
p_temp = b_temp->pile; 

NULL && p_temp->id_let[0] != 'b') 

{ 

^rintf(o^," %.01fp_temp->vert_load); 
p_temp = p_temp->next; 

if(p_temp != NULL && p_temp->id_let[0] != b') 
fyrintf(o^," "); 

} 

b_temp = b_temp->next; 

if(b_temp = NULL) 

^rintf(oQ3,"]];\n"); 

else 

{ 

ft)rintf(ol^,"]\n"); 

^rintf(o^," "); 

} 

} 

Q)rintf(ofp,"\nx_lim = (piles -1) * p_span;"); 

^rintf(o^,"\nx_lim2 = x_lim/2;"); 
fyrintf(o]^,"\ny_lim = (bents -1) * b_span;"); 

4)rintf(o^,"\n"); 

fyrintf(ol^,"\nx=-x_lun2:p_span:x_lim2;"); 

^rintf(o^,"\ny=0:b_span:y_lim;"); 

i|)rintf(o]^,"\n"); 

^rintf(o^,"\nxi = Iinspace(-x_lini2pc_liin2,x_lim);"); 

^rintf(o^,"\nyi = linspace(0,y_lun,y_lim/2);"); 

^rintf(o4),"\n"); 

^rintf(o]^,"\n[X,Y]=meshgrid(x,y);"); 


118 



fprintf(oQ),"\npCi,Yi] = meshgrid(xi,yi);"); 

^rintf(o^,"\n"); 

^rmtf(o^,"\nZ = interp2(x,y,z^i,Yi,'cubic');"); 

^rintf(o^,"\n"); 

^rintf(oj|),"\iicolormap(gray);"); 

^rintf(o^,"\npcolor(3Q,Yi^);"); 

Q5rmtf(o^,"\ncolorbar('v');"); 

4>rmtf(oQ),"\n"); 

^rintf(o^,"\nshading interp"); 

4)rmtf(o^,"\nhold on"); 

^rintf(ofy,"\ncontour(Xi, Yi^, 1 Ojlc’)"); 

^rintf(oQ),"\n"); 

fyrintf(o%"\na^s([(-x_lim 2) (x_lim 2) 0 (y_lim + y_lim/4)]);"); 

^rmtf(o^,"\n"); 

fyrintf(o^,"\nyl=lmspace(0,y_lmi,2);"); 

^rintf(o^,"\nxl=linspace(-x_lini2,-x_lini2,2);"); 

^rintf(o^,"\nplot(xl,yl);"); 

fyrintf(o^,"\n"); 

^rintf(o^,"\nyt=linspace(y_lim,y_lim,2);"); 

^rintf(o4),"\nxt=linspace(-x_lim2,x_lini2,2);"); 

^rintf(o^,"\nplot(xt,yt);"); 

^rintf(o4),"\n"); 

^rintf(o^,"'jm=linspace(x_lim2,x_lim2,2);"); 

^rmtf(o^,"\nplot(xr,yl);"); 

^rintf(o^,"\ntitle('Plot of Point Loading Capacity(lbs) - Based upon Pile Locations');"); 
^rintf(oQ),"\nxlabel('Pier Width - ft');"); 

^rmtf(o^,"\nylabel('Pier Length - ft');"); 
fclose(o^); 


uni_niin = p_info->loads->string_uni_lim_psi; 

tname[7] = f_temp; 

tfp = fopen(tname, "w"); 

if(tQ) = NLrLL) 

{ 

printf("\nERROR; Cannot open user output file!\n"); 
exit(-l); 

} 

^rintf(tQ),"%'’/o "); 
date_plot(t^); 

^rintf(t^,"%%"); 

4)rintf(tfi),"\n%% This file processes the output of RSAP to plot the"); 
4)rintf(t^,"\n%% uniform loading contours of the pier."); 
^rintf(tQ),"\n%%"); 

^rintf(t^,"\n%% (C)1999 - All rights reserved"); 

4)rintf(t^,"\n%% R. J. Keiter(ijkeiter@iname.com)"); 
^rintf(t^,"\n\nbents = %d;", p_info->no_of_bents); 
^rintf(t^,"\npiles = %d;", p_info->piles_per_bent); 
fi)rintf(t^,"\nb_span = %.21f;", p_info->bent_spread); 
^rintf(t^,"\np_span = %.21f;", p_info->pile_spread); 

^rintf(tfj},"\n"); 

^rintf(ti^,"\n%%z = capacity matrix"); 


119 



^rintf(tf^,"\nz = [”); 
b_temp = p_mfo->bents; 

while(b__temp != NULL) 

{ 

p_temp = b_temp->pile; 

while(p_temp != NULL && p_temp->id_let[0] != 'b') 

{ 

p_load = uni^min; 

if(p_temp->uni_loadjpsi < p_load) 
pJoad = pJemp->uniJoadj)si; 

^rintf(t^;’%.21f',pJoad); 
p_temp = p_temp“>next; 

if(p__temp != NULL && p_temp->idjet[0] != ’b’) 

} 

b_temp = b_temp->next; 
if(b_temp — NULL) 
else 

{ 

} 

} 


^rintf(t^,"\nx_lmi = (piles -1) * p_span;"); 
^rintf(t:^,"\nx_liin2 = x_lmi/2;"); 
4)rintf(t^,"\ny_lim = (bents -1) * b_span;"); 
^rintf(tQ),"\n"); 

^rmtf(t^,"\nx=-x_lim2:p_span:x_lini2;"); 

^rintf(t4),"\ny=0:b_span:y_lini;"); 

fj5rintf(t^,"\n"); 

^rintf(tfp,"\nxi = Iinspace(-x_lim2,x_lim2,x_lun);"); 
^rintf(t^,"\nyi = linspace(0,y_lim,y_lim/2);''); 
^rintf(t^,"\n"); 

^rintf(t^,"\n[X,Y]=meshgrid(x,y);"); 
4)rintf(t^,''\npCi,Yi] = mesligrid(xi,yi);''); 
i$rintf(tfi),”\n"); 

^rintf(t4),"\nZ = interp2(x,y,z^i,Yi,'cubic');"); 
^rintf(tfi),"\n"); 

^rintf(t^,"\ncolormap(gray);"); 

^rmtf(t^,"\npcolor(Xi,Yi,Z);"); 

fyrintf(t^,"\ncolorbar('v');"); 

J^rmtf(t^,"\n"); 


120 



^rintf(t^,''\nshading interp”); 

4)rintf(t^,''\nhold on"); 

f|)rintf(t^,"\ncontour(Xi,Yi^,10,'k')"); 

4)rintf(t^,"\n"); 

]^rintf(t^,"\naris([(-x_lira * 2) (x_lim * 2) 0 (y_lim + y_lim/4)]);"); 

^rintf(t^,"\nyl=linspace(0,y_lim,2);"); 

^rintf(t^,"\nd=linspace(-x_lini2,-x_lim2,2);"); 

^rintf(t^,"\nplot(xl,yl);"); 

^rintf(tfi),"\nyt=lmspace(y_lini,y_lim,2);"); 

^rintf(t]^,"\nxt=linspace(-x_lim2,x_liin2,2);"); 

^rintf(t^,"\nplot(xt,yt);"); 

fi)rintf(t^,"\nxr=linspace(x_lim2,x_lim2,2);"); 

fi)rintf(t^,"\nplot(xr,yl);"); 

^rintf(t^,"\ntitle('Plot of Uniform Loading Capacity(psi)');"); 
iprintf(t^,"\nxlabel('Pier Width - ft’);"); 

43rintf(t4),"\nylabel('Pier Length - ft');"); 
fclose(t^); 


y# 4c * 9|c)|c >|e ]|C itc He XC «9)e 3|c 4:aft if: 4c ♦*** *♦**♦** 


double test_input_double(double check) 

{ 

char in__value[20] = {0}, choice; 
int ctr = 0J; 
double i == 0.0; 
int flag = 0; 


while(flag = 0) 

{ 

scanf(’* %s", in_value); 

if(in_value[0] = ’0’&&strlen(in_value) = l&&check = 0.0) 
retum(O.O); 

i = atof(m_value); 

for(j = 0; j < strlen(in_value); j-H*) 

{ 

if(isalpha(in_value[j])) 
i = -1.0; 

} 

if(i < check) 

{ 

ctr++; 

if(ctr >= 3) 

{ 

printf("\n\tThat's 3 incorrect inputs in a row."); 
printf("\n\tDo you wish to quit(y/n)? "); 


121 



choice = getcheO; 


if(choice = y||choice = 'Y') 

{ 

printf(’'\n\n\tLater!!!"); 

exit(O); 

} 

else 

{ 

c1r = 0; 

} 

} 

prt_mvO; 

printfC'WtRe-enter value: ”); 
m_value[0] = ^0'; 

} 

else 

flag = 1; 

} 

retum(i); 

} 

int test_input_int(mt check) 

{ 

char in_value[20] = {0}, choice; 
int i = 0, ctr = 0, flag = 0, j; 

vvhile(flag = 0) 

{ 

scanf(" %s", m_value); 

if(in_value[0] = '0'&&strlen(in_value) = l&&check == 0) 
retum(0); 

i = atoi(in_value); 

for(j = 0; j < strlen(in_value); j-H-) 

{ 

if(isalpha(in_value[j])) 
i = -1.0; 

} 

if(i < check) 

{ 

ctr++; 

if(ctr >= 3) 

{ 

printf("\n\tThat's 3 incorrect inputs in a row."); 
printf("\n\tDo you wish to quit(y/n)? "); 
choice = getcheO; 


122 




if(choice = y||choice = 'y) 

{ 

printf("\n\n\tLater!!!"); 

exit(O); 

} 

else 

{ 

ctr = 0; 

} 

} 

prt_inv(); 

printf("\n\tRe-enter value:"); 
in_value[0] = ^0'; 

} 

else 

flag=l; 

} 

retum(i); 

} 

y3tc:(c:tc9|c)|c](c*9i(**)ic4c**9((:tc***:t:*>((3|t***>f(***4c*********9((*****************/ 

int check_num(void) 

{ 

char temp[5]; 
int i = 10; 

while(i > 9) 

{ 

scanf(" %s”, &temp); 
i = atoi(temp); 

if((i > 0&&i < 10)||(temp[0] = '0'&&strlen(temp) = 1)) 

{ 

retum(i); 

} 

else 

{ 

prt_mvO; 

prmtf("\n\t\tPlease enter number:"); 
i = 10; 

} 

} 

retum(0); 

} 

^9)c * 9|c tic :fc 9|C i(eJie 9|C )tc >|e 9)e 3|c ]|( 9|e * ate :1c jK * >ic ♦ * * * * aic 3*: * * >(t 9)e 9|C 3|c ](c 9)C4: * * 4c * * 3k * * + ^ 

void clean(void) 

{ 

clrscrO; 

printf("\n\n\t\t(C)1999 - All rights reserved."); 


123 


7 


printf("\n\t\t R. J. Keiter (ijkeiter@iname.com)''); 

printf("\n\n\t\t Today is;"); 

put_date(); 

printf("\n\n"); 




void date_j)lot(Fn.E *ofp) 

{ 

time__t t; 


time(&t); 

^rintf(o:^,’'%s”, ctime(&t)); 




void pause(void) 

{ 

char msg[27] = {"Press enter to continue..."}; 


printf("\n\t%s", msg); 
while ((getcharO) != V) {} 
fflush(stdin); 




void put_date(void) 

{ 

struct date d; 


getdate(&d); 

printf("%d/%d/%d", d.da_mon, d.da_day, d.da_year); 




void prt__err(char temp[35]) 

{ 

prmtf("\nERROR: Cannot create %s Structure!\n", temp); 
exit(-l); 




void prt_inv(void) 

{ 

fflush(stdin); 

printf("\n\n\tlnvalid input! Please try again...\n\n"); 
pauseO; 
clrscrO; 

} 


y**********************************************************/ 


124 




T 


Appendix F - Sample RSAP Output Data File 

File generated: Fri Jan 15 05:27:06 1999 

The following information was input in to RSAP. 

(C)1999 - All rights reserved. R. J. Keiter 


The wind speed was measured at 15 mph, 30' above 
the water's surface at an angle of 35 degrees. 

The current speed was measured at 0.68 mph at an 
angle of 85 degrees. 

1.17' waves at 14 seconds were observed in 35' of water at an 
angle of 10 degrees. 

ATTENTION!!! *♦**♦***♦***♦♦*♦♦*♦*♦** 

Jic :|c :)c :|e i|c :(t sjc :le ^ :|e :|c :|e :f; :|c 9|c :|c % )lc 9|c sic :|c :|c:|e ifc 9|c ]ic)|c 3|(:|c:|c aicfe 3|c :)c :)e )ic 9|c 3|c :f( i)e :|e 9|e:((4; % :fc )|c 


These waves do not fall under the theory used here to 
analyze the forces due to waves. The actual forces will 
most likely be larger than that calculated and used in 
this assessment. Proceed with caution! 

♦ ♦**♦»!£**♦*♦♦ 5k s|: St: s|e s|e sic sfc sj: sic sic s|e sfc sic 3|: ** sic sic sic sic s|e sf: sje sic s|c s|c s|e s!e sic sfc s|c s|c 

Sksk:k5k5kskak*5ksksicsicsicsk5k3k ATTENTION!!! *******************5k3ksk5k 

Sksk9k5k5k5k5k5k5ksksk5k5k3k5k5k4c5k5k5k5k5k5k5k5ksksksk:k3k4e5k5k5ksk5k5k5k5k5k:k5k5k5k5k5k5k5k5k5ksksk5k5k 


Soil Type: Medium Sand 

This analysis was performed using a factor of safety of: 2.00 

Number of bents: 7 

The distance between bents is: 12.00' 

The pilings are 14" Douglas Fir with 5" of bio-fouling. 
Number of piles per bent: 5 
Distance between pilings: 8.00' 

The superstructure is constructed of White Oak, 
has cross bracing, and has a solid type pile cap. 

The pile cap member dimensions are 14" x 20". 

The stringers are 3" x 16" and are centered 1.50' apart. 

The deck planking is 12" x 3". 


125 





T 


The piling inspection information is as follows: 
(liie number following the bent number is the 
distance from the bottom to where the piling 
meets the cross bracing.) 

Bent #1 - 25' 

A:ND B:ND C:ND D:ND E:ND 
Bent #2-30' 

A:1SID B:MN C:ND D:ND E:ND 
Bent #3-40' 

A:ND B:ND C:ND D: SV E:ND 
Bent #4-40' 

A:ND B:ND C:ND D:ND E:ND 
Bent #5 - 40' 

A;ND B:ND C: SV D:ND E:ND 
Bent #6-40' 

A:ND B:MJ C:ND D:ND E:ND 
Bent #7-40' 

A:ND B:ND C:ND D:ND E:ND 


Assessment Information 


The pier natural period is 0.56 seconds. If we 
compare this to the wave period of 14.00 seconds, 
this should be nothing to be concerned about... 

The pile locations can hold the following point loads(lbs) 

Bent#l 

A: 206048 B: 204741 C: 204741 D: 204741 E: 206048 
Bent #2 

A: 206048 B: 149607 C: 204741 D: 204741 E: 206048 
Bent #3 


126 









7 


A: 206048 B: 204741 C: 204741 D: 0 E: 206048 

Bent #4 

A: 206048 B: 204741 C: 204741 D: 204741 E: 206048 

Bent #5 

A: 206048 B: 204741 C: 0 D: 204741 E: 206048 

Bent #6 

A: 206048 B: 0 C: 204741 D: 204741 E: 206048 

Bent #7 

A: 206048 B: 204741 C: 204741 D: 204741 E: 206048 


Truck Wheel/Axle Load Information 


♦*************************************************** 

Warning!!! There are individual pile load capacities 
that are less than the computed axle capacities. These 
piles can NOT support the calculated axle load. Care 

should be taken that these piles are not overloaded. 
**************************************************** 

♦*************************************************** 


For an HS truck (tractor/trailer) the maximimi 
wheel load is: 13274 lbs which gives a maximum 
axle load of: 26548 lbs. 

For an H truck (similar to a tactical 5T) the maximum 
wheel load is: 13274 lbs which gives a maximum 
axle load of: 26548 lbs. 


Point Load Information for Crane Loading 


*************************♦♦♦♦*********************** 
**************************************************** 

Warning!!! There are individual pile load capacities 
that are less than the computed point load capacities. 

These piles can NOT support the calculated point load. 


127 






Care should be taken that these piles are not overloaded. 

The pile cap point load capacity when bracketed 
by two good piles is: 171802 lbs. 

For a pile cap over a severely damaged or missing 
pile, the point load capacity is: 52013 lbs. 


Forklift Assessment 


The Y or N indicates the stringers ability to handle 
the forklift axle loading. However, if an individual pile 
load capacity is less than the indicate axle capacity, the 
forklift will NOT be able to operate safely over those piles. 

5T Forklift: Y, axle: 20,000 
6T Forklift: Y, axle: 23,000 
7.5TForldift:N, axle: 19,000 
8T Forklift: N, axle: 30,500 
lOT Forklift: N, axle: 35,000 
12T Forklift: N, axle: 44,300 
15T Forklift: N, axle: 58,000 
20T Forklift: N, axle: 98,000 

The Uniform Load Capacity is: 10.24 psi or 1474.90 psf 

However, some areas are even lower as follows (psi) 


Bent#l 

A: 

10.24 

B: 

10.24 

C: 

10.24 

D: 

10.24 

E: 

10.24 

Bent #2 

A: 

10.24 

B: 

10.24 

C: 

10.24 

D: 

10.24 

E: 

10.24 

Bent #3 

A: 

10.24 

B: 

10.24 

C: 

10.24 

D: 

0.00 

E: 

10.24 

Bent #4 

A: 

10.24 

B: 

10.24 

C: 

10.24 

D: 

10.24 

E: 

10.24 

Bent #5 

A: 

10.24 

B: 

10.24 

C: 

0.00 

D: 

10.24 

E: 

10.24 

Bent #6 

A: 

10.24 

B: 

0.00 

C: 

10.24 

D: 

10.24 

E: 

10.24 


128 






Bent #7 A: 10.24 B: 10.24 C: 10.24 D: 10.24 E: 10.24 

For properly loaded containers, the following 
uniform load values (ps^ are applicable: 

# of containers in stack 

L W H 12 3 


40.0x8.0x8.0 

29.9x8.0x8.0 

19.9x8.0x8.0 

9.8x8.0x8.0 

6.4x8.0x8.0 

4.8x8.0x8.0 


211 422 633 
234 468 702 
284 568 852 
286 572 858 
305 610 915 
294 589 883 


Ship Information 


When performing load calculations, the following wind 
and current forces should be applied to the area of the 
ship under consideration: 

Wind Loading is approximately: 0.32 psf perpendicular to the pier 
For winds of 70mph, this force would be approximately: 7.19 psf 
Current Loading: 0.99 psf perpendicular to the pier 


129 






