Proposal for a CLIPS Software Library 


Ken Porter 

Harris Corporation 
P. O. Box 98000 
M/S R3-7257 
Melbourne, FL 32902 


Abstract. This paper is a proposal to create a software library for CLIPS, the C Language Integrated 
Production System expert system shell developed by NASA. Many innovative ideas for extending CLIPS 
were presented at the First CLIPS Users Conference, including useful user and database interfaces. CLIPS 
developers would benefit from a software library of re-usable code. The CLIPS Users Group should 
establish a software library-this paper proposes a course of action to make that happen. Open discussion 
to revise this library concept is essential, as only a group effort is likely to succeed. At the end of the paper 
is a response form intended to solicit opinions and support from the CLIPS community. 


ANALYSIS OF THE CURRENT SITUATION 

What kinds of software developed by one CLIPS programmer may be useful to others? How can 
they apply it to their own needs? Who would use a library, and who would support it? How 
hard is it to maintain and distribute software for a wide ranging user group, and what resources 
are available? Answers to these kinds of questions define the functional and operational 
requirements for a library facility. 

Library Participants 

NASA’s open sharing of CLIPS with the public seems to have attracted interest primarily from 
university researchers, industry (IR&D) researchers, and small government-funded projects. 
There may also be a substantial number of PC and Macintosh users who have tinkered with 
CLIPS but are not really expert system developers. Together, these four overlapping groups are 
the "customers" or potential users of the software library; most of the good ideas and resources 
will come from them. There are several CLIPS-based products now available 1 or in prototype 
form, but commercially oriented developers are not likely to participate in a not-for-profit 
software library effort. 



Resources 


CLIPS users, NASA/JSC’s Software Technology Branch (STB, the CLIPS development team), 
and expert systems research interests constitute the resources available to implement a software 
library. 

The motivation for a CLIPS software library is the belief that a number of CLIPS users are 
willing to share their code, which would provide a great resource to other expert system 
application developers. The 82 papers presented at the First CLIPS Conference 2 provide 
evidence that such code is available. A survey of these papers shows about two-thirds have some 
re-use potential, either in the form of generic CLIPS extensions, improved user/developer 
environments for a particular hardware platform, or user-friendly "smart" front ends for 
specialized software packages. Several of these were in fact designed as generic interfaces, using 
formal or de-facto standards such as SQL, dBase III, and HyperCard. Most authors appeared 
willing to share their developments; at least seven authors made their code available at the 
Conference and several sent out softcopies shortly afterward. 

If each author at the First CLIPS Conference represents ten others who did not contribute only 
for lack of time or money, then there are nearly a thousand potential contributors. This 
significant pool of talented people is the most important resource of the CLIPS software library. 
Creating a library could stimulate the CLIPS community to develop desirable re-usable functional 
extensions by encouraging them to consider generic requirements in designing and coding their 
applications. 

Volunteers to maintain and distribute the software are a crucial resource. With sufficient 
motivation, the CLIPS Users Group should be able to staff a simple software library. Those most 
interested in obtaining library software might be harnessed to do most of the work. CLIPS users 
should be invited to participate, and the Library should exploit existing resources to the maximum 
practical extent. 

Access to computers and data communications are key resources to implement a software library. 
Virtually all CLIPS users have access to computers of some kind, and usually there are few 
restrictions to using these computers after hours to support worthwhile activities. Access to data 
communications is less universal, but most users could at least find a PC with a modem so using 
electronic bulletin boards (BBSs) seems feasible. In addition to the existing JSC Software Support 
BBS, there may be other BBSs belonging to Group members. 

NASA is interested in supporting CLIPS applications, but in these times of severe funding 
constraints it is difficult for public agencies to rationalize support for a small special interest 
group. Hopefully STB is already doing everything possible to further develop the CLIPS shell, 
in addition to providing COSMIC funding and sponsoring user conferences. COSMIC, in turn, 
has published the CLIPS newsletter for its first year to help foster an active users group. 
Although NASA and COSMIC participation is highly desirable, neither group should be expected 
to provide direct support beyond their current activities. 


345 



LIBRARY SPECIFICATION 


Software Requirements 

Ideally, the CLIPS software library would provide a programming resource packed with useful, 
portable C source code with concise but easily understood documentation. An excellent example 
is the blackboard extension BB_CLIPS developed by Orchard and Diaz 3 , supported by the 
National Research Council of Canada. They responded to user requests at last year’s Conference 
“by distributing (at no charge) their C source for BB_CLIPS with detailed, well organized 
documentation and test files to support user compilation. Included with BB_CLIPS were files 
and documentation for FZ_CLIPS, a CLIPS extension for fuzzy logic reasoning. Even just an 
improved CLIPS executable with brief application notes holds potential for PC users; Marsh’s 
graphical modeling shell ISA 4 provides an environment for graphically representing objects and 
linking to the CLIPS engine. 

The CLIPS developer/user community is best served by establishing some requirements for 
submitting and reviewing candidate software. One possible set of software authorship goals is: 

Reliable operation in the intended operating environment 

Generic functionality - ease of use/adaptation 

Thorough documentation of user features 

Architecture discussion for other developers 

No license/restrictions imposed by author 

Of course, submittals would not have to excel in every category to be useful to others and worth 
cataloguing. All submitted software should be reviewed, tested as appropriate, objectively 
assessed, and then posted for dissemination to the CLIPS community. 

Software Assessment 

Software assessment should include operational testing and evaluation of the software’s potential 
for re-use or adaptation to new applications. Operational testing involves executing test cases, 
such as example knowledge bases or script files of new commands, to ensure the software 
performs as defined by the author. If the program code is supposed to be portable, test it on 
several common hardware platforms such as a PC, a UNIX workstation, and a VAX. If it 
provides a graphical user interface for a particular platform, test it on several different machines. 
For PCs, the normal variations in memory size, monitor, keyboard, and mouse interface can lead 
to unexpected problems. The assessment effort also should explore human factors, hardware and 
software limitations, and the range of potential applications or adaptation by other uses. 

Feedback from the user community is valuable to both the library user and the author, the 
software review process should be responsive to the needs of both. This is vital to establishing 
a conduit of common interest that will support sustained library operation. The author should 
be provided two avenues of feedback: confidential technical feedback from the library’s initial 


346 



technical review, and access to user comments after release. The reviewers should leave ample 
opportunity for the author to address their comments prior to software release, in respect to the 
author for his contribution. After release, the library should provide the users with a history of 
bug reports, work-arounds, and related developments. Authors should be provided names and 
addresses of people who have requested their software, unless the library takes responsibility for 
contacting people about support and revisions. 

Distribution 

Once CLIPS-related software has been received, reviewed, and posted for dissemination, there 
needs to be one or more mechanisms for distributing software. Requirements for distribution 
include: 

Direct costs not exceed available funding 
Controlled but easy access by the users 
Support user feedback and author revisions 

Containing costs is paramount. Many, if not most, CLIPS users seem to have considered low 
cost an important criteria in their initial selection of the CLIPS expen system shell. Later they 
probably found CLIPS’s functionality, excellent documentation, portability, and extensibility to 
be important in building and eventually delivering their application. Still, the costs of a library 
facility should be in line with the "almost shareware" price of the CLIPS expert system, a big 
factor in its popularity. Minimizing user costs to make the library operation self-supporting 
greatly increases the feasibility of continued operations. 

User should be able to access the library files easily, but this needs to be carefully controlled to 
prevent abuse and unauthorized use by non-members. Assigning a unique number or password 
for each user would provide a reasonable level of security, and is compatible with manual and 
electronic distribution methods. Some security provisions are also necessary to ensure the library 
facility can control and coordinate user comments, feedback to the authors, and dissemination of 
revisions to the right people. There would be little incentive for members to pay a usage fee for 
a software package if they knew subsequent revisions would be freely available. 

User feedback is a most important benefits to the authors. Some mechanism should be 
established to collect comments which is simple and easy to use to encourage feedback. 
Distribution channels should be designed for two-way communication, whether on paper or in 
electronic form. If an author chooses to revise the software, the distribution system should 
support re-distribution with little additional effort on the part of the author. 


347 



PROPOSED CLIPS SOFTWARE LIBRARY 
Strawman Approach 

The proposed software library Strawman concept would create a self-supporting facility to collect, 
classify, and distribute CLIPS-related code for re-use by other expert system developers. 
However, the analysis and ideas presented in this paper are tentative at best. This "strawman" 
approach is intended to stimulate discussion and voluntary action within the CLIPS user 
community, especially members of the newly-formed CLIPS Users Group. 

Organization 

The CLIPS software library would be supported by four overlapping groups: a managing body, 
a team of technical reviewers, the general membership, and contributing authors. The managing 
body could be a standing CLIPS committee staffed by a few dedicated volunteers. Library 
Committee volunteers would do most of the work required to organize the overall effort; establish 
and maintain Library policies; solicit contributions and interface with authors; regulate the review 
process; and organize, store, and distribute the software. 

Reporting to the Library Committee would be a pool of technical reviewers, experts with access 
to various computer systems. Hardware expertise should include Pcs, Macintoshes, workstations, 
VAXes, and possibly mainframes and supercomputers. Operating systems should include DOS 
(with and without Windows), Finder, UNIX, and VMS. Areas of functional expertise should 
include software design and testing, C language programming, human factors analysis, technical 
support and documentation, and of course expert system development. Initially, only some of 
the desired expertise will be volunteered; the Library Committee should strive to assemble a well- 
rounded pool of experts. 

Since the Library Committee would be a part of the CLIPS Users Group, the baseline approach 
is to consider everyone in the CLIPS Users Group as a member of the Library. This provides 
a added benefit for being a member of the CLIPS Users Group, although it may discourage a few 
"free spirits" who don’t join organizations as a matter of principle. Authorship should have no 
Library-imposed restrictions; there is already pressure from some employers to avoid complete 
disclosure of ideas. A positive incentive of one year free membership in the CLIPS Users Group 
could be offered to make authors’ efforts worthwhile. 

Operations and Coordination 

To minimize costs for Library users, the costs of daily operations should exploit existing 
resources as much as possible, including telephones, existing networks, and dial-in PC/Mac-based 
BBSs. 

Since the CLIPS Users Group is geographically scattered and financially limited, the Library 
Committee must employ electronic communications to organize and implement their objectives. 
Teleconferencing and facsimile transmission can provide the necessary interaction to coordinate 


348 



even complicated interactions. The Library Committee should use telephone conference calls, 
perhaps bi-monthly, to coordinate their efforts. A baseline approach is to use the NASA/JSC 
Software Support BBS as the backbone network for author uploads, reviewer interaction, and user 
downloads, under special access control per Library Committee policy. By assigning each CLIPS 
Users Group member a control number, their access privileges can be easily managed to meet 
Library guidelines. A NASA/STB representative should be actively involved in this process to 
ensure NASA consent in the use of this public-funded BBS. 

Library listings should be available by mail or by modem from BBSs. A primary source would 
be the NASA/JSC board but other potential sources include boards/networks supported by CLIPS 
Users Group members. Access to Library software could be as simple as dialing the nearest 
BBS, providing a membership identification number, and downloading released source code and 
documentation. Privately supported BBSs should be persuaded to enforce Library policies. 

Access to the software library is likely to increase the paid membership of the CLIPS Users 
Group, so perhaps some of the membership fees could be allocated to support Library Committee 
activities. However, the CLIPS Users Group is a fledgling organization that needs resources to 
grow; all direct costs should be factored into a usage fee charged for each Library software 
package. 

Software Solicitation and Review 

The Library Committee should exploit whatever opportunities are available to solicit material and 
membership. The CLIPS Users Group newsletter, newsCLIPS 5 , is one avenue to reach potential 
authors. newsCLIPS may also be willing to publish information or short articles on new releases. 
Some professional trade magazines accept informational announcements and may prove otherwise 
helpful in reaching a wider audience (including those thousands of others who have "tinkered" 
with CLIPS). 

When an author contacts the Library Committee, the Chair should assign one Committee member 
as the author’s agent. The responsible agent would collect the material from the author and 
determine how it should be assessed. The Chair would assign one or more technical reviewers 
per the agent’s recommendations. The review time should be as short as possible, and the agent 
would be responsible to coordinate among the technical reviewers and expedite the review 
process. 

This software review process will benefit both the library user and the author. The rights of the 
authors are considered foremost-they should review all test findings, revise their submission if 
desired, and have the right to make a final decision on releasing the software. This means that 
during the review process the software must be handled in confidence. The author should be told 
who will test his software and the test team should be obligated to keep the software and its test 
results private. One means to implement this would be special BBS/network access privileges. 

The agent should ensure that the author has reviewed the test results and any additional findings 
of the test and evaluation effort, then get the author’s final consent on a standard form. The 
standard form should consent to a legal position on ownership and distribution rights, and 


349 



minimize liabilities. Finally, the agent should submit the material to the library for storage anc 
distribution. 


Ownership and Osage Rights 

The degree to which the library owns the donated software should be thoroughly discussed wit! 
potential authors and the CLIPS community at large. One position would request the author tc 
sign over his copyright to the Library. Some research supported by corporate or govemmem 
sponsorship may stipulate certain kinds of restrictions on how the software is used (e.g. non- 
commercial use only). Library members could be asked to sign a limited distribution agreemeni 
to prevent secondary distribution. However, authors should act on the principal that the software 
is a donation to the CLIPS community, intended to empower others to freely exploit and further 
develop their code. The library effort would be improperly burdened to support any profit- 
oriented venture. 

The Library Committee should establish the extent to which ownership and usage restrictions are 
acceptable. As one of its first duties, the Library Committee should draft a formal ownership 
document that spells out the rights of the author and library members; there may need to be 
several versions to meet the needs of individual, university, government, and corporate 
participants. 

Direct Costs 

If software media are provided by user and labor is provided by volunteers, the only remaining 
necessary distribution direct costs are reproduction and postage. For relatively small changes to 
the standard CLIPS syntax, user documentation could be furnished in ASCII soft copy (tape or 
floppy disk), which reduces reproduction costs to almost nothing. A distribution volume of 
perhaps two requests per user per year could require 20-100 copies per month, produced by 
perhaps 10-20 hours effort. 

If the requestor supplies the required media (per the COSMIC model), distribution direct costs 
should be on the order of $1 per disk/Mbyte and 5-10 cents per page of paper documentation (if 
necessary for complex programs). These estimates include mailing a tape or several floppy disks 
(postage, mailer, and labels) and paper documentation (copier, additional postage, paper and 
envelopes). Distribution direct costs should be borne by the requestor. 

Other Library Committee Tasks 

The library should additionally be chartered to promote CLIPS and its applications in any aspect 
that seems feasible. As an adjunct to its primary tasks of review and distribution, the CLIPS 
software library should seek leverage from existing interest in CLIPS, expert systems, and general 
IR&D to promote the library concept and solicit new inputs. Exploiting opportunities to promote 
CLIPS will serve the common interest. 


350 


CONCLUSIONS 


The analysis and discussions presented in this paper support the following conclusions: 

A significant pool of realisable software could be made available to CLIPS 
expert system developers at low cost. The software is out there, as demonstrated 
at the First CLIPS Conference. The new CLIPS Users Group might be willing to 
support a basic library facility. 

Cooperative synergy between authors and users provide rewards to both. 

Feedback from the evaluation process and end users provides a valuable Beta-test 
to the author, and provides CLIPS developers/users with a source of documented 
and tested code. 

Minimal additional support is required to implement a library facility. 

Modest usage fees, access to several existing BBS/networks, and a few active 
volunteers may be all that is needed to implement a software library. 


RECOMMENDATIONS 

The following recommendations are based on the presented analysis and conclusions: 

The CLIPS Users Group should actively support a library facility. They 
should elect or appoint a Library Committee Chair and solicit volunteer from the 
membership. Issues such as library membership and software ownership should 
be resolved as soon as possible. 

The library should minimize costs. The CLIPS user community is cost- 
sensitive. The library staff should minimize costs and leverage on existing interest 
in CLIPS, expert systems, and AI. 

Those interested in participating in a software library should complete the 
form at the end of this paper. The survey results will be presented to the CLIPS 
Users Group if strong support is indicated. 


351 


REFERENCES 


1. ECLIPSE, distributed by The Haley Enterprise, 413 Orchard St., Sewickley PA 15143. (412) 741-6420 

2. Proceedings of the First CLIPS Users Conference . Vol. I and II, held at Johnson Space Center, Houston, Texas 
August 13-15, 1990. Published by COSMIC, Univ. of GA, 382 E. Broad St., Athens, GA 30602. NASA Conference 
Publication 10049. 

3. Orchard. R. A., and A. C. Diaz, "BB_CLIPS: Blackboard Extensions to CLIPS”, First CLIPS Conference 
Proceedings (Vol. II), pp. 581-591. Contact Orchard at Knowledge Systems Lab, Building M50, Montreal Rd., 
Ottawa, Ontario (Canada) K1A 0R6, orchard@ai.iit.nrc.ca 

4. C.A. Marsh," A PC Based Fault Diagnosis Expert System". First CLIPS Conference Proceedings (Vol. II), pp. 442- 
458. 

5. newsCLIPS is the newsletter of the CLIPS Users Group, published by Dr. Linda K. Cook, Lockheed AI Center, 
PO Box 7732, Menlo Park CA 94026-7732; cook@netcom.com 


352 


CLIPS Software Library Response Form 


This (arm is intended to solicit ideas, opinions, and voluntary support to create A CUPS soitware library. Please indicate your degree ol interest 
by answering the following questions. 


Do you favor the creation of a CLIPS software library? 

Yes No 

Do you think some portion of the CLIPS Users Group membership fees 
should be allocated to support a software library, and if so, how much? 
Yes, % No 

Do you feel library membership should include people who are not 
members of the CLIPS Users Group? 

Yes No 

Would you participate in a library as a member, with privileges including 
low-cost access to software? 

Definitely would Might Would not 

Would you participate as a contributing author, including donating your 
software and documentation? 

Definitely would Might Would not 

Would you volunteer some time as either a Library Committee member or 
technical reviewer? 

Definitely would Might Would not 

If interested in performing technical reviews, what operating systems and 
hardware platforms do you understand well and have access to? 


Do you own/operate a network or electronic bulletin board service which 
may be used to support library efforts? Yes No 

Other comments: 


Name, address, and phone number (voluntary): 


353 


