IDA DOCUMENT D-1484 


CCTT/CATT SAFOR PANEL DISCUSSIONS 
27-29 OCTOBER 1993 


Philip Anton 
Peter Brooks 
Paul Gorman 
John Laird 
Duncan Miller 
Robert Richbourg 
J. D. Fletcher 



OTIC 

EI..ECTE 

APR 211994 

B 



February 1994 



Prepared for 

Advanced Research Projects Agency 


AppraaaP far pebllc ralaasa; iWrlbntlon anllmltab. 



94 4 20 168 


Series B 

IDA Log No. HQ 94-45111 








DEFINITIONS 

IDA publishes I ha tallowing documents to report the results ol its work. 

Reports 

Reports are the most authoritative and most carefully considered products IOA publishes. 
They normally embody results ol major projects which (a) have a direct bearing on 
decisions affecting major programs, (b) address issues ot significant concern to the 
Executive Branch, the Congress and/or the public, or (c) address issues that have 
significant economic implications. IOA Reports are reviewed by outside panels of experts 
to ensure their high quality and relevance to the problems studied, and they are released 
by the President ol IOA. 

Gr oup Reports 

Group Reports record the findings and results ol IOA established working groups and 
panels composed of senior individuals addressing major issues which otherwise would be 
the subject ol an IDA Report. IDA Group Reports are reviewed by the senior individuals 
responsible for the project and others as selected by IDA to ensure the* high quality and 
relevance to the problems studied, and are released by the President of ,^A. 

Pape rs 

Papers, also authoritative and carefully considered products ol IDA, address studies that 
are narrower in scope than those covered in Reports. IDA Papers are reviewed to ensure 
that they meet the high standards expected ol refereed papers in professional journals or 
formal Agency reports. 


Documents 

IDA Documents are used for the convenience ol the sponsors or the analysts (a) to record 
substantive work dona in quick reaction studies, (b) to record the proceedings ol 
conferences and meetings, (c) to make available preliminary and tentative results of 
analyses, (d) to record data developed in the course of an investigation, or |e) to forward 
information that is essentially unanalyzed and unevaluated. The review ot IDA Documents 
is suited to their content and intended use. 


The work reported in this document was conducted under contract MDA 903 89 C 0003 lor 
the Department ol Defense. The publication ol this IDA document does not indicate 
endorsement by the Department of Defense, nor should the contents be construed as 
reflecting the officiel position of that Agency. 

















DISCLAIM!! NOTICE 



THIS DOCUMENT IS BEST 
QUALITY AVAILABLE. THE COPY 
FURNISHED TO DTIC CONTAINED 
A SIGNIFICANT NUMBER OF 
PAGES WHICH DO NOT 
REPRODUCE LEGIBLY. 











REPORT DOCUMENTATION PAGE 

Form Approved 

OMB No. 0704-0183 

Ruble reporting bidden to* t*o ooHeckn ot in forms Son « MkrraUd to ivtngt 1 hour per reeponee. indudmg toe lime tor reviewing n»trvc*on». eeeiching exretrvg date aourcee. getoering and msintoinfog toe tob needed, and 
oompleing and retoeeeng toe coleclon of ink>m>a»on. Sand comment* regarding tore burden eedmale or any otoer aapeel ot tots coderton Ot mtormsson. mdudtog suggestion* tor reduang tote burden, to Warfiington 
Hea dpi arte re Sanaoaa. Dwertorato ter Information Oporabons and Reports, 1215 JeNereon Dsw* Highway. Suite 1204. Arlington. VA 22202-4302, and to toe Ottos ot Management and Budget. Paperwork Reduction Protect 

1. AGENCY USE ONLY (Utn blank) Z REPORT DATE 

February 1994 

3. REPORT TYPE AND DATES COVERED 

Final-27-29 October 1993 

4. TITLE AND SUBTITLE 

CCTT/CATT SAFOR Panel Discussions 27-29 October 1993 

5. FUNDING NUMBERS 

C - MDA 903 89 C 0003 

T- ARP A Assignment A-132 

6. AUTHOR(S) 

Philip Anton, Peter Brooks, Paul Gorman, John Laird, 

Duncan Miller, Robert Richbourg, J.D. Fletcher 

7. PERFORMING ORGANIZATION NAME(S) AND ADDRESSES) 

Institute for Defense Analyses 

1801 N. Beauregard St. 

Alexandria. VA 22311-1772 

8. PERFORMING ORGANIZATION 

REPORT NUMBER 

IDA Document D-1484 

9. SPONSORING/MONITORING AGENCY NAME(S) AND ADDRESSES) 

Advanced Research Projects Agency 

3701 N. Fairfax Drive 

Arlington, VA 22203-1714 

10. SPONSORINGMONITORING 

AGENCY REPORT NUMBER 

11. SUPPLEMENTARY NOTES 

12a. DISTRIBUTION/AVAILABILITY STATEMENT 

Approved for public release; distribution unlimited. 

12b. DISTRIBUTION CODE 

13. abstract (Maximum iso words) Semi-Automated Forces (SAFOR) are a key component of the Distributed 
Interactive Simulation (DIS) environment. A SAFOR capability is being developed for the Close Combat 
Tactical Trainer (CCTT) production program, which is part of the larger Combined Arms Tactical Trainer 
(CATT) effort. Panel discussions were held 27-29 October 1993 on the development of CCTT/CATT 
SAFOR and its ability to exchange ideas and products with all DIS programs. The panel concluded that 
the widest possible community should develop and share ownership in a CCTT/CATT SAFOR product. 

More specifically: (1) The same SAFOR products can and should be used to support both the research 
and development and the user community; (2) Two computationally separate SAFOR lines of 
development, one based on an Ada environment and one based on a C environment, would inevitably 
develop discrepancies, become insufficiently coordinated, and should not be pursued; (3) The research 
and development community and other interested communities are unlikely to have either the resources 
or inclination to migrate to an Ada programming environment; (4) Products from CCTT/CATT SAFOR 
development should be made as accessible and adaptable as possible-higher priority should be given to 
accessibility and adaptability than to life-cycle maintainability; (5) CCTT/CATT SAFOR development 
should be pursued using a C and/or C++ programming environment. 

14. SUBJECT TERMS 

Semi-Automated Forces (SAFOR); Close Combat Tactical Trainer (CCTT); 
Combined Arms Tactical Trainer (CATT); Distributed Interactive Simulation (DIS) 

15. NUMBER OF PAGES 

434 

16. PRICE CODE 

17. SECURITY CLASSIFICATION 
OF REPORT 

UNCLASSIFIED 

18. SECURITY CLASSIFICATION 

OF THIS PAGE 

UNCLASSIFIED 

19. SECURITY CLASSIFICATION 
OF ABSTRACT 

UNCLASSIFIED 

20. LIMITATION OF ABSTRACT 

SAR 


NSN 7540-01-280-5500 


T>7;T 


»—l-L» iS 


Standard Form 298 (Rev. 2-89) 

Pmaibfd by ANSI Sti. 239- (9 

296-102 
























IDA DOCUMENT D-1484 


CCTT/CATT SAFOR PANEL DISCUSSIONS 
27-29 OCTOBER 1993 


Philip Anton 
The Mitre Corporation 

Peter Brooks 

Institute for Defense Analyses 

Paul Gorman 
Cardinal Point, Inc. 

John Laird 

University of Michigan 

Duncan Miller 
MIT Lincoln Laboratory 

Robert Richbourg 
U.S. Military Academy, West Point 

J. D. Fletcher 

Institute for Defense Analyses 


February 1994 


Appramd lor potillc nleaso; dlrtribotlon onllmHtd. 



INSTITUTE FOR DEFENSE ANALYSES 

Contract MDA 903 89 C 0003 
ARJPA Assignment A-132 







ABSTRACT 


Semi-Automated Forces (SAFOR) are a key component of the Distributed 
Interactive Simulation (DIS) virtual environment A SAFOR capability is being developed 
for the Gose Combat Tactical Trainer (COT) production program, which is pan of the 
larger Combined Arms Tactical Trainer (CATT) effort. Panel discussions were held 
27-29 October 1993 on the development of CCTT/CATT SAFOR and its ability to 
exchange ideas and products with all DIS programs. The panel concluded that the widest 
possible community should develop and share owneiship in a CCTT/CATT SAFOR 
product More specifically: (1) The same SAFOR products can and should be used to 
support both the research and development and the user community; (2) Two 
computationally separate SAFOR lines of development one based on an Ada environment 
and one based on a C environment would inevitably develop discrepancies, become 
insufficiently coordinated, and should not be pursued; (3) The research and development 
community and other interested communities are unlikely to have either the resources or 
inclination to migrate to an Ada programming environment; (4) Products from CCTT/ 
CATT SAFOR development should be made as accessible and adaptable as possible— 
higher priority should be given to accessibility and adaptability than to life-cycle 
maintainability; (5) CCTT/CATT SAFOR development should be pursued using a C and/or 
C++ programming environment 


iooftsslon For 

ms GRA&I 
DTIC TAB 
Unann o an c e d 
Jmstifteat ion 


By--- 

Distribution/ ^ 


Availability Codas 



Avail aod/or 

DtSt 

Special 



□ 

□ 





CONTENTS 




> 


I 


» 


§ 


> 


► 


► 


Abstract.iii 

Abbreviations and Acrcmyms.vii 

OVERVIEW.1 

A. Background.1 

B. Findings.4 

1. Immaturity of SAFOR Technology.5 

2. Coordination with Research and Development.5 

3. Breadth of the SAFOR Requirement.6 

4. Re-engineering of ModSAF.7 

5. Quality of Software Engineering.7 

6. Commercial Tools.7 

7. National Guard Requirements.7 

8. C and C++Programming Environments.8 

C. Recommendations.8 

D. Conclusions.9 

Appendix A- Panel Members' Comments.A-l 

Appendix B~ Biographical Sketches of Panel Members.B-l 

Appendix C- Survey of Semi-Automated Forces Briefing (MITRE Corporation).C-1 

Appendix D- ModSAF: An Overview Briefing (Loral Corporation).D-l 

Appendix E- Computer Generated Forces (Institute for Simulation and Training).E-l 

Appendix F-- Automated Forces Technology Program Briefing 

(Advanced Research Projects Agency).F-l 

Appendix G- SAF Concurrent Engineering Team Briefing (IBM Corporation).G-l 




► 


v 




























ABBREVIATIONS AND ACRONYMS 


M 

Artificial Intelligence 

ARPA 

Advance Research Projects Agency 

ASRMO 

Army Software Reuse Management Office 

BDS-D 

Battlefield Distributed Simulation-Developmental 

21CLW 

21st Century Land Warrior 

CAD 

Computer-Aided Design 

CAM 

Computer-Aided Manufacturing 

CATT 

Combined Arms Tactical Trainer 

CCSIL 

Command and Control Simulation Inter 

CCTT 

dose Combat Tactical Trainer 

CGF 

Computer Generated Forces 

CIS 

Combat Instruction Set 

CLIPS 

C Language Integrated Production System 

COO. 

CLIPS Object-Oriented Language 

COTS 

Commercial Off-The-Shelf 

CSCI 

Computer Software Configuration Items 

CTC 

Combat Training Center 

DDR&E 

Director of Defense Research and Engineering 

DI 

Dismounted Infantry 

DIS 

Distributed Interactive Simulation 

DISC4 

Director of Information Systems for Command, Control, 
Communications, and Computers 


DMSO 


Defense Modeling and Simulation Office 




DoD 

FDDI 

GOTS 

IDA 

IDD 

IDS 

IDT 

IFOR 

I-PORT 

IR 

1ST 

LADS 

MCC 

MIL-STD-2167A 

ModSAF 

NASA 

NATO 

OQA 

OOD 

OPFOR 

OSA 

PIDS 

PDU 

PM 

POP 

R&D 


Department of Defense 
Fiber-Optic Data Distribution Interface 
Government Off-The-Shelf 
Institute for Defense Analyses 
Interface Definition Document 
Interface Design Specification 
Integrated Development Team 
Intelligent Forces 

Individual Portal (into Distributed Interactive Simulation) 

Infrared 

Institute for Simulation and Training (University of Central Florida) 
Loral Advanced Distributed Simulation 
Microelectronics and Computer Technology Corporation 
DoD Standard 2167A, "Defense System Software Development" 
Modular SAFOR 

National Aeronautics and Space Administration 

North Atlantic Treaty Organization 

Object Oriented Analysis 

Object Oriented Design 

Opposing Forces 

Office of the Secretary of the Army 
Prime Item Development Specification 
Protocol Data Unit 
Program Manager 
Persistent Object Protocol 
Research and Development 


« 


4 


4 


4 


i 


viii 








S&T 

Science and Technology 

SAC 

Senate Appropriations Committee 

SAFOR 

Semi-Automated Fames 

SAIC 

Science Applications International Corporation 

SEOD 

SAFOR Entity Object Database 

SIMNET 

Simulator Networking 

SLOC 

Separate Lines of Code 

SRS 

Software Requirements Specification 

STRICOM 

Simulation, Training, and Instrumentation Command 

STOW 

Synthetic Theater of War 

SUMEX 

Summer Exercise 

T&E 

Test and Evaluation 

UCI 

User-Computer Interface 

USATRADOC 

Army Training and Doctrine Command 

WA 

Verification, Validation, and Accreditation 

WARSIM 

Warfighter's Simulation 

WISSARD 

Whal-If Simulation System for Advanced Research and Development 


IX 








OVERVIEW 


A. BACKGROUND 

Sam-automated forces (SAFOR) are a key component of the Distributed Interactive 
Simulation (DIS) virtual environment As the use of DIS has increased, so also has the 
number of programs requiring high quality SAFOR. Program officers and research and 
development sponsors have responded to this demand by funding independent SAFOR 
developments, each based on their separate assessments of needs and perceptions of the 
electronic battlefield. The DoD environment that evolved during the Cold War era allowed 
for, and even encouraged, these independent developments. However, the post Cold War 
environment of declining budgets requires different strategies. The exchange of ideas and 
products to promote efficient development, lower costs, and transfer of knowledge among 
interdependent programs is now at a premium. 

Two major SAFOR development programs are ModSAF and Close Combat 
Tactical Trainer (COT) SAFOR. ModSAF provides an open, modular architecture that 
allows users to develop their own SAFOR entities and exchange them with developers and 
users in other programs. ModSAF is proving to be an excellent product, but it was 
intended more for a research and development environment than for production 
environment COT SAFOR is being developed as a product under the COT' production 
program, which is part of the larger Combined Arms Tactical Trainer (CATT) effort 
COT SAFOR is intended to be the core SAFOR for follow-on CATT development and a 
source of transportable modules that can be ported to other programs so that they can take 
advantage erf the CATT investment 

Development of SAFOR is not limited to the ModSAF and COT programs, nor is 
it limited to training applications. Both SAFOR and DIS are expected to serve many 
communities, including those that support acquisition, test and evaluation, tactical doctrine 
development and various user communities. The exchange of ideas and products among 
these programs is a core issue for all concerned with the development and application of 
DIS. 


1 






To address this issue and help ensure coordination and cooperation among ail lines 
of SAPOR development, the Program Manager, CATT, convened a panel to consider the 
following questions: 

1 Can the same SAFOR products (including specifications, functional 
description, and software) support both the research and development 
community and the user community (including the education, training, 
doctrine, analysis, test and evaluation, production, and logistics communities)? 

If yes, what are the products, what attributes should they possess, and how 
should they be exchanged among users? 

If no, are there sub-products car components that can be used by both the R&D 
and user communities? If there are, what are these components and/or their 
characteristics? 

2. What software approach (language, system, shells, tools, etc.) should be used 
for CCTT SAFOR considering the needs of both the research and development 
community (flexibility, ease of use, etc.) and user communities (controlled 
configuration, life cycle maintainability, reliability, etc.)? 

3. What products are available from other programs, such as ModSAF and the 
Institute for Simulation and Training's Computer Generated Forces (1ST 
CGF), that can be used directly or in some re-engineered form to aid in the 
development of the CCTT SAFOR? 

4. What strategy or specific steps should the Program Manager, CATT, take to 
build community consensus and to produce a product that will support CATT 
programs other than CCTT? 

5. Taking into consideration all the above, what strategy or specific steps should 
the Program Manager, CATT, take to implement the CCTT SAFOR? 

The panel was asked to address these questions specifically, but its discussions 
were not limited to them. Basically, the discussions were intended to provide candid, 
technical interchange among groups concerned with development of SAFOR capabilities 
for CCTT and CATT. 

The discussions were held 27-29 October 1993, in Orlando, Florida, in accord with 
the following agenda: 




€ 


2 








Wednesday, 27 October 

0800-1000 Introduction and Discussions with PM CATT 
1000-1030 Break 

1030-1200 Discussion of DMSO SAFOR Survey (Organized by MITRE Corporation) 
1200-1300 Lunch 

1300-1500 Discussion of ModSAF (Organized by Loral Corporation) 

1500-1530 Break 

1530-1730 Computer Generated Forces and C to Ada conversions (Organized by the 
Institute for Simulation and Training, University of Central Florida) 

Thursday, 28 October 

0800-0900 Plans for future SAFOR capabilities and development (Presented by ARPA) 

0900-1200 Current CC1T status and plans (Organized by IBM Corporation) 

1200-1300 Lunch 

1300-1530 Continued discussions of CCT1 status and plans 

1530-1730 Discussions among panel members and clarifications of information 
presented earlier 

Friday, 29 October 

0800-1100 Discussions among panel members and preparation of recommendations 

1100-1200 Debrief to Program Manager, CATT 

The discussions were open during the information briefings (i.e., from 1030 on 
Wednesday to 1530 on Thursday). Other times were reserved for the panel. Hard copies 
of the slides used for the presentations are included as Appendices to this document. 

The six members of the panel were: 

Dr. Ph ilip Anton 
MITRE Corporation 

Dr. Peter Brooks 
Institute for Defense Analyses 

General Paul Gorman (USA, Ret.) 

Cardinal Point, Inc. 









Dr. John Laird 
University of Michigan 

Dr. Duncan Miller 
MIT Lincoln Laboratory 

LTC Robert Richbourg, USA 
U.S. Military Academy, West Point 

Prior to the meeting, the panel members received a read-ahead package that 
contained: 

• Brooks, R.A., Buchanan, B.G., Lenat, D.B., McKeown, D.M., and 
Fletcher, JD. Panel Review of the Semi-Automated Forces (IDA Document 
D-661). Alexandria, VA: Institute for Defense Analyses, September 1989— 
Summary Only- 

• Booker, L., Brooks, P., Garrett, R., Giddings, V., Salisbury, M., and 
Worley, R. 1993 DMSO Survey of Semi-Automated Forces. Washington, 
DC: Department of Defense Modeling and Simulation Office, 30 July 1993. 

• Report of the Defense Science Board Task Force on Simulation, Readiness, 
and Prototyping. Washington, DC: Office of the Under Secretary of Defense 
for Acquisition, January 1993. 

• SAFOR Trade Study Results. Orlando, FL: Project Manager Combined Arms 
Tactical Trainer, U.S. Army Simulation, Training, and Instrumentation 
Command, 15 March 1993. 

• A Modular Solution for Semi-Automated Forces: ModSAF, An Overview. 
Cambridge, MA: Loral Advanced Distributed Simulation (Undated)— Briefing 
(Paper Copy of Overhead Transparencies). 

• PIDS Revision A: Requirements Allocated to All or SAF Computer Software 
Configuration Items (CSCI ). Orlando, FL: Project Manager Combined Arms 
Tactical Trainer, U.S. Army Simulation, Training, and Instrumentation 
Command, 26 August 1993. 

Members of the panel were requested to document their impressions, suggestions, 
and recommendations. Their comments are included as Appendix A: A summary of their 
comments follows. It is divided into three sections: Findings, Recommendations, and 
Conclusions. 

B. FINDINGS 

Presently the CCTT SAFOR has been designed as a re-engineered version of 
ModSAF to be developed using an Ada programming environment. ModSAF itself and 


4 












m 


nearly all SAFOR applications have been developed using C programming environments. 
A major decision for PM CATT is whether to pursue an Ada-based CCTT SAFOR or to 
require more compatibility with the existing C-based development of ModSAF. This 
decision impacts die development of SAFOR capabilities across all applications and 
concerns all questions raised by PM CATT for this panel 

The following discussion summarizes die foldings of the panel: 

1. Immaturity of SAFOR Technology 

All of die panelists emphasized that SAFOR is rapidly changing and evolving—that 
it is not a mature technology ready for "type classification" and fielding. CCTT SAFOR 
will remain a dynamic area for several years to come, and ModSAF itself needs continued 
development. Even if designs and approaches for SAFOR were more settled and 
understood, die new post-Cold War threat environment, which is equivalently dynamic and 
rapidly evolving, will demand quick and occasionally urgent representation of new 
opponents, allies, terrain, and situations in SAFOR. These representations may become 
available from other programs entirely separate from SAFOR and DIS. The degree to 
which CCTT and CATT SAFOR developments remain flexible and capable of easily 
incorporating—without major re-engineering or re-design—useful products and ideas from 
all these rapidly evolving sources will substantially impact the quality, relevance, and utility 
of their products. 

2. Coordination with Research and Development 

All of the panelists discussed the specific need to coordinate research and 
development products with those produced for CATT SAFOR. They raised the following 
points: 

(a) CATT SAFOR development will help focus research priorities, frame research 
questions, and provide a meaningful baseline with which to compare new 
research results. However, CCTT SAFOR is an engineering development 
program that needs an externally provided science and technology base. The 
flow of products and ideas from research and development to CATT, as 
discussed above, is important. Also important is the flow of ideas and 
products in the opposite direction, from CATT to research and development 
efforts. These efforts will need access to genuine, user-produced SAFOR 
modules. Employment of CATT products for this purpose will substantially 
improve the quality and relevance of products from research and development 
efforts, and it will improve the efficiency with which they are produced. 


5 









( 


(b) It is unlikely that CCTT and CATT modules will be used as directly 
substitutable "black-boxes" by researchers. Even if standardized interfaces can 
be designed, constructed, and enforced to meet SAFOR needs for product 
exchange, researchers will still need to make modifications within modules to 
accommodate their objectives. A mixed bag of modules in various languages 
will discourage these modifications and their potential for promoting reuse and 
coordination even if the interface specifications are well defined. These 
modifications will be practicable for researchers only if they can be 
accomplished using software tools, architectures, and approaches with which 
they are familiar. 

(c) The panelists noted specifically that die planned development of 1200 Combat 
Instruction Sets (CIS) will be "the largest representation of intelligent human 
behavior ever undertaken" and a major step forward in representing military 
behavior. No other program will have the resources in the foreseeable future 
needed to create or re-create this body of knowledge. It is therefore essential 
for the CIS modules to be easily available not only to all members of the 
research and development community, but to all developers concerned with 
DIS and otherwise. Few of these developers and fewer researchers will be 
able to find the resources needed to adopt CIS modules from one programming 
architecture and environment to another. 

(d) Without coordination between these communities, discrepancies between their 
products, functionalities, approaches, and designs will inevitably arise, testing 
and calibration, which is difficult enough in the SAFOR environment, will 
become more complicated, and products from the technology base will be 
harder to produce, less relevant, and more difficult to incorporate. If this 
coordination is achieved, shared software expertise and rapid exchange of 
products and ideas will increase the efficiency with which all lines of SAFOR 
development proceed, and it will increase the quality of their products. 

3. Breadth of the SAFOR Requirement 

Five panelists emphasized that the issues raised by CATT SAFOR development are 
broader than requirements for CATT alone—significant as that program is. The 
community of SAFOR users is larger and more diverse than that originally contemplated 
and it continues to grow. For instance, Lt. General Forster, the Deputy Acquisition 
Executive of the Army, has recently directed Army acquisition executives to use simulation 
for all Army acquisition programs, thereby further increasing the body of SAFOR 
developers and users. To be accepted in these communities, CATT SAFOR must provide 
validated data and models, operator suitability, a ready ability to test and calibrate the 
system, and use in applications beyond training. Success for CATT SAFOR development 


6 











may be measured as much by wide user acceptance and its support for the full community 
of SAFOR users as by its support for development within the CATT family of systems. 

4. Re-engineering of ModSAF 

Two panelists discussed their favorable impressions of both the ModSAF 
architecture and its re-engineering for CCTT. They suggested that the CCTT architecture is 
a commendable improvement. On the other hand, they pointed out that the re-engineered 
architecture is itself untested and unproved—certainly less so than ModSAF. The re¬ 
engineered COT SAFOR architecture should be as subject to careful scrutiny as any other 
SAFOR approach. 

5. Quality of Software Engineering 

Three panelists emphasized that it is the programmer more than the language that 
produces well-engineered software, allowing efficient maintenance and reducing life-cycle 
resource requirements. Most specifically, the software engineering discipline imposed by 
an Ada programming environment can be also be enforced by programmers using the C 
and/or C++ environments that are used for SAFOR developments elsewhere. 

6. Commercial Tools 

Four panelists noted that the accessibility of any software product will be enhanced 
by the use of tools that are available at reasonable cost and that operate on a variety of 
computing platforms. These observations arose directly from the proposed used of 
RTWorks in plans for CCTT SAFOR, but they generalize to the use of any tool for 
software development or operation. 

7. National Guard Requirements 

One panelist discussed the emerging and increased responsibilities of the National 
Guard in readiness and direct combat preparedness. These responsibilities suggest 
increased needs to enhance small unit performance and support mission rehearsal. 
Significant steps toward meeting these needs are provided by the editor * unctions in 
ModSAF and the production of modules that are compatible with these editors. The 
National Guard's need for behavioral detail at the small unit level should not be lost to the 
demands of active component commanders for greater levels of aggregation. 


7 







8. C and C++ Programming Environments 

Two panelists discussed the extent of resources available in C and C++ 
programming environments. Mane specifically they argued that C and C++ environments 
provide all the basics of good software engineering and practice such as systems, tools, 
compiler speed, object orientation, efficient code generation, concurrency support, 
hierarchical capabilities, abstraction, encapsulation, modularity, and even strong typing. 
They also argued that these resources are more readily available from C and C++ than from 
Ada environments, due in significant measure to the greater number of C programmers, 
systems, and tools, and lower costs in terms of time, budget, and computer resources. 

C. RECOMMENDATIONS 

1. All panel members recommended that CCTT/CATT SAFOR should be 
developed to facilitate and maximize interchange between its products and ideas 
and those of all other communities, but especially those of the R&D 
community. Development of parallel but computationally different SAFOR 
systems should not be pursued nor supported. 

2. All panel members concluded that CCTT SAFOR should not be developed in 
Ada. It should be developed in C or in C++. The costs—in terms of 
resources and time—of this recommendation were taken into consideration. 
All members of the panel concluded that benefits arising from this decision 
outweigh its cost 

3. Four panel members emphasized that products from the CATT SAFOR 
developments should be made as accessible as possible and that the use of 
elaborate commercial shells and tools should be avoided. 

4. Four panel members specifically recommended the use of the C Language 
Integrated Production System (CLIPS) in place of RTWorks. One member 
further recommended the use of CLIPS Object-Oriented Language (COOL). 

5. Two panel members specifically recommended the use of object-oriented 
analysis and design tools to provide traceability and design documentation. 

6. One panel member recommended appointment of an advisory panel with 
representatives from all concerned SAFOR communities to provide continued 
assistance to PM CATT. More generally, another member recommended that 
PM CATT continue to solicit review and feedback from the research and 
development community. 

7. Three panel members commended the use of people in addition to careful 
documentation and good software engineering practice to effect coordination 









between CCTT SAFOR production and other communities, and they 
recommended that this practice be continued. 

8. One panel member commended the emphasis on human computer interaction in 
CCTT SAFOR development and recommended that it receive continued 
emphasis. 

9. Three panel members commended the emphases on concurrent engineering and 
cyclic simulation feedback for CIS development and recommended that these 
approaches continue to receive emphasis. 

10. Five panel members recommended a strong insistence on good software 
engineering practices. PM CATT should not rely on the enforcement 
capabilities inherent in a programming language. Module interface design, 
documentation, data abstraction (with data separated from code), and 
standardized implementation via MIL-STD-2167A should all receive continued 
emphasis. 

11. Three panel members recommended that flexibility, accessibility, and 
adaptability be weighed more than life-cycle maintainability in the development 
of CATT SAFOR products. 

12. One panel member recommended that priority in SAFOR development be given 
to entity-level behavior and small unit performance. 

13. Two panel members specifically commended the Integrated Development 
Team's ModSAF re-engineering effort, and they recommended that further 
development build on this effort where possible. 

14. One panel member recommended that, if development continues in Ada, at 
least one additional round of SAFOR enhancements should be undertaken 
before the system is fielded. 

15. Two panel members recommended that the CATT development community 
should take a more active role in funding research—specifically it should pick 
up what ARPA may leave unaddressed or unfinished. 


D. CONCLUSIONS 

In brief, the panel concluded that the widest possible community should develop 
and share ownership in a CCTT SAFOR product that is produced using the best available 
notions for software engineering. More specifically: 

• The same SAFOR products can and should be used to support both the 
research and development and the user community; 


9 










Two computationally separate SAFOR lines of development, one based on an 
Ada environment and one based on a C environment, would inevitably develop 
discrepancies, become insufficiently coordinated, and should not be pursued; 

The research and development community and other interested communities are 
unlikely to have either the resources or inclination to migrate to an Ada 
programming environment; 

Products from CATT SAFOR development should be made as accessible and 
adaptable as possible—higher priority should be given to accessibility and 
adaptability than to life-cycle maintainability; 

CATT SAFOR development should be pursued using a C and/or C++ 
programming environment. 







COMMENTS BY PHILIP ANTON 


1. SAFOR PRODUCTS 

SAFOR is an immature field with rapidly evolving techniques, components, and 
requirements. As such, it is very difficult but not impossible to construct SAFOR products 
that meet some of the common needs of the R&D and User communities. Such products 
must, however, possess several properties, including flexibility, rigorously defined 
interfaces, and design with "shared" requirements in mind. 

As components become stabilized and approaches become common, those 
components can be reused by the SAFOR community at large. Note, however, that 
standardization does not imply restricted access to components. The R&D community has 
the task of continually investigating SAFOR architectures as a whole and will continue to 
need die flexibility to investigate modifications or alternative approaches of components. 
DIS PDU standards may be somewhat stable in their description of entity movement, but 
solutions to the problems of scalability and fault tolerance may require modifications not of 
the network itself but of the entire approach to SAFOR architectures to include entity and 
behavioral representations, PDU generation approaches, and database structures. The 
R&D community must have the ability to test out alternative solutions to such problems if 
the state of the art is to be advanced. 

If we are to reuse components of the architecture, then the interfaces between the 
components must be rigorously defined to meet common requirements. 

Common products that should be sharable today include: 

• A generic SAFOR architectural shell, including 

- DIS PDU interfaces 

- simulation support, including stochastic and deterministic options 

- dead reckoning algorithms 

- coordinate system transformation algorithms 

- libraries of behavioral processing engines, including task frames, rule- 

based inference engines, etc. 


A-3 





• Knowledge bases of entity behaviors (e.g.. Combat Instruction Sets, or CIS) 

• Databases of vehicular dynamic parameters. 

Components that should NOT be farced into a baseline SAFOR include: 

• Fropri e t ar y/COTS tools 

— cost barriers to use 

— inaccessibility for study and extension by the research community 

— dependence on the supplying company for all future developments. 

Government or research developed software may cost more initially to develop, but 
in the long run it can reduce costs and increase longevity if proper care to support reuse and 
common design is employed. 

Note that the knowledge bases and databases should be constructed in an 
architecture-independent fashion whenever possible. Knowledge bases implemented as 
data rather than in source code languages (e.g., Ada or C code) allow for continued 
development of die processors of the knowledge data. 

The degree to which the same SAFOR products can support different communities 
is a function of 

• the degree to which common requirements can be found 

• the stability of the design and implementation of components which can be 

reflected either in the formal establishment or the SAFOR community. 

Even within a single community, there will be a core of needs based on the types of 
processing that community does, but studies will often need to be performed beyond the 
current capabilities of the community's systems. Most people need a module that handles 
the standard DIS PDUs, but no one yet agrees on the approaches that should be used in 
behavioral representation. The OSA DISC4 ASRMO briefing distributed during the panel 
emphasized this stability requirement in the reuse of software. 

Standards, of course, are problematic in and of themselves. Design-by-committee is 
known to result in standards that at best meet some of the requirements across the 
communities and at worst do not meet anyone's requirements due to extensive 
compromise. The research community by its nature needs the flexibility to continue to 
study standardized components for improvement 

Functional interfaces to allow experimentation, replacement and remixing of 
modules hold the greatest immediate promise in establishing specifications that can be 


A-4 








reused. Care must be taken, however, to design these interfaces in a flexible and open 
architecture to maximize the ability to replace and upgrade modules as time goes on while 
providing a common environment 

There are a number of reasons why it is imperative today to coordinate SAFOR 
development in the R&D and User communities. First dwindling DoD funding implies 
that custom software development for each developed system can no longer continue. 
Reduced funding also implies that each system development project cannot afford its own 
Science and Technology (S&T) research programs to support its unique set of 
requirements. Reduced funding also means that less research dollars will be available and 
more research will have to be directed to meet the immediate needs of die user community. 
Thus, the R&D and User communities must establish ways to work together to meet 
common requirements in addition to meeting their own unique requirements. This will 
require coordinated efforts and discussions on technological approaches to problems as 
well as the establishment of methods to support the direct application of research results 
into development systems as well as the availability and use of validated user systems in 
research programs. Not only will die feedback of systems from the user community to the 
R&D community save development money of common modules, but research in the user’s 
environment will focus researchers on user problems rather than abstract technological 
problems. 

There is an unexploited opportunity in the SAFOR community to reuse not only 
SAFOR software but the architectures, specifications, and functional descriptions (e.g., 
component techniques, algorithms). If common requirements can be found between R&D 
and development programs, then the effort of the receiver of products and software should 
concentrate their effort not on re-engineering the received software but cm producing the 
2167A documentation of the existing software. For example, ARPA and CCTT have 
invested significant funds to develop ModSAF. Components that met the CCTT 
requirements (e.g., PDU handler) could have been used directly by reverse engineering 
appropriate IDS, IDD, and SRS documents to describe this module. These specifications 
and functional descriptions would then be available for other users of ModSAF, resulting 
in significant reuse and cost savings. If one program upgrades the PDU handler and 
associated documentation to the next version of the DIS standards, then other users 
(including the R&D community) could immediately upgrade to the new standard with little 
or no effort If, however, the PDU handler is re-engineered into a different language, then 
other users of ModSAF will not be able to use it Having a mixed bag of modules in 


A-5 












various languages will not promote reuse of the modules even if the interface specifications 
are well defined. 

If a developer needs to extend a module's capability to meet a specific program 
requirement, then that module could be customized to meet these new capabilities. The 
issue here is whether these extensions meet the needs of the broad SAFOR community or 
just the present program under development If consensus is reached in the community at 
large that the extensions are useful and should be incorporated in the baseline SAFOR, the 
module could readily be incorporated in everyone's SAFOR easily if the same 
implementation languages is used. If, however, the extensions are not needed or agreed 
upon by the community, then the module should not be forced upon the community. For 
example, if CCTT SAFOR is developed in Ada or is a complete re-engineering of ModSAF 
(as is currently planned) and the extensions that the IDT have included in the SAFOR 
architecture do not meet a consensus requirement by die community (e.g., if the SAF Entity 
Object Database - SEOD - extensions of die Persistent Object Protocol - PCX’ - are not what 
the SAFOR community at large needs), then providing CCTT SAFOR back to the R&D 
and user communities will "force" these non-consensus designs on the community or limit 
the reusability of CCTT as a baseline. Only if CCTT is developed in die common language 
of the SAFOR community and the extensions provided by individuals are discardable or 
usable by virtue of well-defined interfaces can the reuse of SAFOR products provide 
valuable growth of a baseline SAFOR environment 

Note that the CCTT design presented at the workshop is "not" a mere re¬ 
engineering and development of existing SAFOR ideas and research results. The CCTT 
SAFOR design itself is a new, unproven architecture and thus constitutes a research 
development effort Who is to say that die architecture is sufficient to meet the stated goals 
of CCTT and latter CATT? If ModSAF was insufficient, then a re-engineering of ModS AF 
(with small changes and the inclusion of a rule-based shell) may be insufficient also. But 
even then, ModSAF has yet to be delivered and demonstrated in a real, validated exercise. 

2. SOFTWARE APPROACHES 

In order to satisfy both the R&D and user communities, CCTT SAFOR should use 
a computer language that is efficient, standardized, in common use in both communities, 
allows good software engineering practices, and has compilers that are fast, readily 
available, and low cost The obvious candidates are Ada, C, and C++. 









Ada meets most of the requirements but its compilers are slow, expensive, and not 
commonly used in the R&D community. A good Ada compiler can provide reasonably 
efficient code and provides tight error checking in support of software development, but the 
lack of Ada availability in the R&D community would prevent die use of CCTT SAFOR as 
a research baseline for SAFOR studies. 

C and C++ are very efficient, standardized languages used extensively in both 
communities. GNU compilers for C and C++ (published by the Free Software 
Foundation) are free, readily available for common hardware platforms, and among the 
highest quality available, often surpassing the compilers delivered by hardware vendors. 
These compilers are heavily used by the R&D community as well as commercial software 
developers. While C (and to a lesser extent C++) do not provide as much software 
engineering support, the object-oriented analysis (OOA) and design (OOD) approaches 
already adopted by the CCTT IDT will provide significant software engineering support 
and traceability from specifications to code. In addition, the quality of the code developed 
ultimately depends on the quality of the programmer, not on the language chosen. Good 
programmers can produce well-designed, quality code in any language, and poor 
programmers can produce poor code in any language (including Ada). 

Judicious use of C++'s object-oriented features could provide flexible object 
implementations while minimizing inefficiencies inherent in object-oriented languages, but 
care must be taken. The ModSAF team made a deliberate (and allegedly informed) design 
decision to provide a custom object-based (not object-oriented) implementation of entity 
components for efficiency reasons. Creation of complex inheritance structures of objects 
combined with uninformed use of the language can result in unexpected inefficiencies. 
Nevertheless, C++ does provide fundamental object-oriented features that can facilitate 
flexible design in an efficient manna:. 

Note that question 2 poses that the R&D needs of flexibility ami ease-of-use are 
pitted against the user community needs of configuration control, life-cycle maintenance, 
and reliability issues. In the immature field of SAFOR, however, things are not this clear 
cut CCTT will need to continue to fold in new research results and approaches (e.g., 
C2 Simulation Interface Language—CCSIL, results in Behavioral Representation and 
Dynamic Terrain) from the research community as they are proven and become available. 
Thus, CCTT will not have a traditional life cycle of static requirements, implementation, 
and slow software maintenance. CCTT itself must remain flexible, open, and easy to use 
in order to take advantage of breakthroughs in SAFOR technology and remain useful. 


A-7 








< 


Thus, overemphasis on traditional life-cycle maintenance (for which Ada claims excellence) 
at the expense of flexibility does not match die CCTT (and CATT) role in Army training. 
CCTT and CATT has (or should have) the explicit requirement of including the needs of 
the R&D community since it is a critical part of the 'life-cycle" of die CATT program. 

As for the use of software shells, I would like to argue strongly against the use of 
commercial shells. The use of shells such as RTWorks may provide extensive support 
facilities for CCTT development, but the inclusion of such commercial products will greatly 
limit who will be able to use die CCTT SAFOR environment, including the very research 
organizations to whom CATT will turn for results to meet the CATT goals. Also, the 
SAFOR community is still struggling with what types of behavioral representations are 
appropriate for what types and levels of battlefield entities. A rule-based system may be 
useful for higher-level aggregate entities, but there has been no research on this point to 
date and certainly no data to demonstrate that the syntax provided in RTWorks is necessary 
and sufficient to express the behavioral rules for Army units. 

There are many well-engineered inference engine shells. CLIPS is a GOTS, 
C-based, real-time inference engine shell that supports rule-based, object-oriented, and 
procedural paradigms and comes with X-based development tools. It is highly 
recommended in the research community and commonly used. CLIPS is available from the 
Software Technology Branch of the NASA Johnson Space Center, is free to government 
agencies and contractors, and relatively inexpensive for others ($150-300 range). 

If CCTT must use RTWorks, then a requirement should be formally placed on the 
IDT to specify the interface between RTWorks and the rest of CCTT SAFOR to allow easy 
removal or replacement of the RTWorks inference engine for research studies and other 
SAFOR developments. Knowledge bases (i.e., CIS data) should employ the rule-based 
system in such as way to allow the rule-based engine to be functionally replaceable with a 
different behavioral system (e.g., a different knowledge-based system, SOAR, planner, 
probabilistic reasoning, etc.). 

Thus, I recommend that CCTT SAFOR be implemented in C or C++ (with 
preference to C++). Object-oriented analysis and design tools should continue to be 
employed for CCTT; these tools provide the critical requirements traceability and design 
documentation for CCTT development under 2167A while providing important 
documentation for other users of CCTT SAFOR code. 


A-8 











3. OTHER AVAILABLE PRODUCTS 

ModSAF ideas have already been re-engineered into the CCTT SAF, and I have no 
direct experience with 1ST CGF. I would have recommended a more direct use of 
ModSAF code with an associated effort to reverse engineer just the 2167A documents for 
the ModSAF architecture. Unfortunately, the re-engineering decision has already been 
made. 

As for other tools that could be used to aid the development of CCTT SAFOR, 
I would strongly recommend the use of the GOTS CLIPS inference system rather than 
RTWorks. If CLIPS were to be used, I would recommend reverse engineering of the 
2167A documents for CLIPS (if not already available) rather than a complete re¬ 
engineering effort This would allow other users to have easy access to the inference 
engine of CCTT at a negligible cost, save re-engineering costs for CCTT, and allow CCTT 
to give back to the R&D community the specifications for CLIPS so that other programs 
that need such an engine would be able to re-use these specifications. 

4. COMMUNITY CONSENSUS STEPS 

Consideration of R&D community requirements when making programmatic and 
design decisions is crucial to supporting CCTT and other CATT programs. If CATT is to 
succeed, then it must be flexible enough to include research results in SAFOR. Also, given 
the limited R&D funds, CATT must support the R&D community by promoting a SAFOR 
environment to focus research on user problems and provide a validated environment in 
which to perform the research. 

To promote consensus, PM-CATT should convene an advisory panel to include 
representatives from both the R&D and user communities (possibly including joint service 
representatives) to make continued recommendations on design decisions. Difficult 
questions need to be addressed and recommendations made as a result of the IDT decisions 
to date: 

(i) If CATT is developed in C or C++, how can the ongoing ModSAF 
development be integrated with the CATT delivery system? What parts of the CATT 
system can be used by a generic SAFOR and thus included in a re-merged ModSAF-CCTT 
system? 

(ii) Review and make recommendations on the interface specifications between the 
modules in the CATT architecture. Should an effort be started to define generic open- 


A-9 












architecture interface standards to facilitate SAFOR "Plug and play" of components? Can 
die WARSIM 2000 architecture be used for this? What progress has WARSEM made and 
can the CATT interfaces be specified within the WARSIM architecture to facilitate 
coordination with WARSIM in the future? 

(hi) Review and make recommendations on the behavioral representation design 
decisions in CATT, to include: 

• die interface between RTWorks and the rest of die system, 

• die design decisions regarding the implementation of the CIS database. 

For example, will QSs be implemented as source code (as in the ModSAF tasks) 
or can they be implemented as data (e.g., ASCI text) in a certain syntax to be operated on 
by processing engine(s) in the architecture, independent of the engine? 

(iv) How can the current ARPA research efforts (e.g., CCSIL) be designed and 
developed to facilitate direct use in CATT programs as needed without a re-engineering 
effort? Who should fund and develop EDS and SRS for such software modules? 

(v) If continued coordination is necessary between die R&D and user communities 
for SAFOR, what arrangements and structures can be established to facilitate this 
coordination? Should ARPA be the keeper of a baseline SAFOR environment? If not, then 
who? DMSO? The Army? 

(vi) Given the shrinking DoD funds for developing new systems, what advice can 
be given to future Program Managers on how to control contractor's natural tendency to 
want to build custom systems rather than reuse existing software whenever possible? 

(vii) If the Army becomes the repository of the baseline SAFOR, will other 
services be less inclined to reuse it than if the software came from a service-independent 
source (e.g., ARPA or DMSO)? How can such "rice bowl" issues be reduced in a joint 
environment? 

(viii) CCTT has demonstrated that personal interaction between software 
developers (e.g., LADS) and the software re-users (e.g., CCTT IDT) was very valuable in 
transferring an understanding of ModSAF. Unfortunately, this kind of personal interaction 
is not possible in all cases given availability and cost considerations. What types of 
documentation would facilitate software, architecture, and algorithm transfer between 
communities given the need to re-use designs? Should researchers (or someone following 
up on the research's work) spend the time to document the code using 2167A require- 


A-10 













meats? What other techniques could be employed? Note here that the emphasis should not 
be to manage by consensus or committee but to bring to light issues important to 
coordinated development and re-use of SAFOR products and to make recommendations to 
PM-CATT on how to meet the immediate CATT needs while considering the requirements 
of the SAFOR community as a whole. 


5. SPECIFIC STEPS TO IMPLEMENT CCTT SAFOR 

In summary, I recommend: 

• Implementation of CCTT in C++ (or C). 

• Continued use of OOA and OOD tools. 

• Emphasize good software engineering practices rather than reliance on a 
software language's inherent enforcement of certain practices (e.g.. Software 
Engineering Institute ratings). 

• Continue special attention to the UCI, which is critical if the system is to be 
successful. 

• Continued emphases on concurrent engineering and cyclic simulation feedback 
for CIS development 

• Consider the use of nonproprietary software in place of RTWorks (e.g., 
CUPS). 

• Consider die CIS implementation format and the inpact of this design decision 
<mi reusability of the CIS data (i.e., implement each CIS as data versus 
software code). Can a generic description of CIS components implemented as 
rules be reached independent of the syntax of the CCTT inference engine? 

• Pay special attention to explicit and rigorous interface design, documentation, 
and implementation for the CCTT architecture modules to facilitate re-use and 
individual replacement for research and development in other SAFOR systems. 

• Negotiate a plan for integrating CCTT with ModSAF, replacing parts of 
ModS AF with parts of CCTT, or some other approach to provide some kind of 
common SAFOR baseline environment that other SAFOR programs can build 


• Seek the advice of both the R&D and user communities in addressing the 
questions outlined above in section 4. 

The major design concerns identified are: 

• The impact of the use of the SEOD on scalability in CATT SAFOR (an open 
research issue). 


A-ll 









• The inclusion of proprietary software in the CCTT architecture and the degree 
to which this software is integral to the whole CCTT system. 

Lessons Learned: 

• Concurrent validation with knowledge engineering efforts should be promoted. 
Similarly, iterative simulation feedback should be employed in addition to 
extraction of textual description from Subject Matter Experts and doctrinal 
documents (ref. CIS and WISSARD). 

• Greater care must be paid to explicitly issuing related requirements during 
initial program studies if any other community's needs are a factor in 
programmatic decisions. For example, the requirement of flexibility in rapidly 
incorporating research results in CATT programs as well as the need to offer 
CCTT SAFOR to other programs for research and development purposes 
needed to be included as explicit criteria in the CCTT IDT SAFOR Trade 
Study. As the R&D and user communities need to rely on each other and 
leverage each other's work, this reliance needs to formally be recognized in 
program requirements. Note that developers and managers have a natural 
tendency to make design decisions to maximize the perceived risk to the 
explicit requirements even if these decisions are not the best compromise for 
the explicit and implicit requirements as a whole. 

• The use of independent panels such as ours (hopefully) helps to bring flesh 
perspectives to bear on programmatic issues as well as support cross fertilizing 
of information between communities regarding important programs that will 
impact them. 

• "Optimize for change, since change will surely come." (Gen. Paul Gorman) 


A-12 








COMMENTS BY PETER BROOKS 


SUMMARY 

The Program Manager, CATT, asked the Panel to consider CCTT SAFOR from 
two perspectives. First, is the current approach for CCTT SAFOR well-suited to the needs 
of other SAFOR development and user communities? Second, what products and 
strategies would enhance the development of CCTT SAFOR? 

Several key observations emerged during the briefings and subsequent discussion: 

• It is important for CCTT to demonstrate that a common development 
environment exists for DIS applications. 

• SAFOR technology will remain an active research and development area for 
several years. 

• CCTT is a 6.4 program, and thus needs an external science and technology 
base. 

• CCTT SAFORs will be successful only if it attains wide user acceptance. Key 
factors include validated data and models, operator suitability, a ready ability to 
test and calibrate the SAFOR system, and use in applications beyond training 
(e.g., acquisition support). 

Based on the discussions, two potential recommendations are: 

• PM CATT should establish programmatic ties and maintain commonality with 
die ARPA SAFOR research efforts. 

• PM CATT should ensure that the CCTT SAFOR is readily accessible to broad 
user and developer communities. 

There are several elements of the current development strategy worth noting. These 
include: 

• the high degree of user and proponent involvement 

• the structure of and process for developing the Combat Instruction Sets. 

• the relocation of personnel among the IDT and Loral sites. 

• the study of how ModSAF might be re-engineered. 

• the efforts to maintain traceability from requirements through development. 

A-13 


► 




The above observations argue for using software tools, techniques, and languages 
favored by die R&D community. 

THE BENEFITS OF A COMMON DEVELOPMENT ENVIRONMENT 

CtlT, as the first major program in Distributed Interactive Simulation (DIS) since 
the conclusion of SIMNET, represents a key test case for the development and use of DIS. 
The premise of DIS today is that each development program adds to the whole, that new 
capabilities are easily added into existing systems, and that DIS is generally useful for 
applications beyond training. 

CCTT must thus demonstrate that major software components and development 
techniques can be re-used. The benefits are clear in the context of the other CATT 
programs, and one would expect a high level of commonality from the start But the 
development also should contribute to a Joint DIS-based training system. In this vein, 
there seems to be too little consideration to how CCTT will operate chi a wide area network 
(CCTT has high bandwidth requirements; local net is FDDI), though this is identified as a 
preplanned product improvement 

For user communities beyond training (e.g., acquisition), there will be the need to 
add new capabilities or modules to CCTT SAFOR, and to exercise SAFOR in their own 
laboratories. These users must be able to replicate and easily work in the development 
environment established for CCTT SAFOR. 

The "entry cost" to CCTT SAFOR therefore must remain low, through the use of 
commonly used hardware and software (e.g., C or C++), and the lack of proprietary or 
expensive components (c.g., will RTWorks make CCTT SAFOR unaffordable to most 
researchers?). 

SAFOR TECHNOLOGY IS AN ACTIVE R&D AREA 

The ARPA research in SAFOR will continue for several more years, at a funding 
level several times that of CCTT SAFOR. CCTT should provide for the easy incorporation 
of new SAFOR technologies by ARPA. 

SAFOR will evolve for other reasons as well. New users will demand or develop 
added capabilities (cf. Gen. Forster directive to Army Acquisition Executives to use 
simulation for all systems acquisition programs). In other cases, new SAFOR capabilities 


A-14 









will be add e d due to pressing needs (e.g., SAFOR vehicles being given a newly developed 
vehicle mounted countermine system). 

These points argue for having the CCTT SAFOR system and the baseline research 
SAFOR system be largely interchangeable. 

CCTT REQUIRES AN EXTERNAL SCIENCE AND TECHNOLOGY BASE 

Because CCTT uses 6.4 funding, it relies on external programs for research and 
development work. Many organizations will contribute to improving SAFOR (e.g., terrain 
reasoning, command and control algorithms, new munitions effects, programs for the 
individual soldier, etc.). To incorporate these contributions may require more than well- 
defined interfaces that treat SAFOR as a black box. Such general interfaces may be too 
hard too construct, anyway. Instead, it may be necessary for the researchers to work with 
the code directly. 

If CCTT is relying on ARPA as the main source of research directed at SAFOR, 
then such advances should be incorporated into CCTT without extensive re-engineering of 
each added capability. A programmatic connection between CCTT and ARPA may help 
here. 

CCTT SAFORS SUCCESS BASED ON WIDE USER ACCEPTANCE 

CCTT SAFOR will be viewed as the official SAFOR, and therefore the system of 
choice, as it will contain Army-validated behaviors and data. To ensure its utility to user 
communities beyond training will require better performance in the user-computer interface 
(UCI) and in SAFOR testing than exist today. 

The human factors analyses of the usability of the UCI should consider how 
SAFOR is used in various applications. For example, does the IDA analyst want to finely 
control the movements of one or two helicopters? Does the AI researcher need real-time 
explanations of the internal decisions SAFOR is making? Will there be SUMEX-like test 
for other user groups? 

Testing and calibrating SAFOR behaviors will always be difficult, mainly because it 
runs only in real-time (even if the computer is powerful to speed up a given scenario, there 
is no guarantee that the approximations made in vehicle movements might not change the 
results). Techniques should be developed that assist the full-up system testing of SAFOR. 


A-15 







Also, one may need a regular program of manned simulator tests to provide a basis for 
calibrating die behaviors encoded in die CISs. 

POTENTIAL RECOMMENDATIONS 

PM CATT should establish programmatic ties and maintain commonality with the 
ARPA SAFOR research efforts. This implies developing a shared baseline system, using a 
common programming language, and establishing a program to educate the respective 
developers. Developing a good SAFOR system remains a learned art 

PM CATT should ensure that the CCTT SAFOR is readily accessible to broad user 
and developer communities. The key factor is hardware and software cost which can be 
reduced by minimizing the need for expensive compilers, commercial software, or 
programming expertise that would have to be specially hired. 

COMMENTS ON THE CURRENT DEVELOPMENT STRATEGY 

The most noteworthy elements of the development strategy are the efforts to involve 
proponents and users. Clearly, CCTT must end up with validated models and data. The 
program has involved the appropriate organizations early and fully. SUMEX '93 is a good 
way to educate the code developers. Such exercises should be held several times a year. 

The encoding of doctrine into the Combat Instruction Sets (CISs) represents 
perhaps the most profound element of the program. If successful, the CISs will become 
the representation of doctrine, and the means by which new doctrine will be developed. 
The risks are that the current approach will capture what experts say they would do, and are 
not based on experiments using manned simulators. Should the CISs reflect how people 
fight, or should they represent a standard to train against? 

The exchange of personnel among the IDT and Loral sites was clearly beneficial. It 
underlines the need for the CCTT program to have a close and continuing link to the 
various research efforts and expertise. 

The study of how ModSAF would be re-engineered is valuable for two reasons. 
First, it provided an independent assessment of the good ideas in ModSAF. Second, any 
such reexamination is likely to make for an improved product, no matter how much or little 
of ModSAF is reworked. 

Being able to maintain traceability from requirements through development is a 
good way to get outside people involved, and to manage expectations. The panel 


A-16 








discussions would have been enhanced by more detail of what are the CCTT SAFOR 
requirements. 

COMMENTS ON THE PRESENTATIONS 

The presentations were uniformly informative, and the presenters generally well- 
prepared. Much time was spent on areas with minor bearing on the key issues. The 1ST 
analysis of C to Ada conversion had too many caveats to be pertinent, for example. The 
IDT presentation discussed the Trade Study at length, only to later observe that it is now 
overtaken by events. Also, the IDT presentation on their re-engineered design of ModSAF 
could have discussed more the CCTT requirements which necessitated the redesign. In 
particular, how much of the redesign effort was due to an assumption that Ada would be 
used? 


» 


A-17 





COMMENTS BY PAUL GORMAN 


The panel was convened to inquire into the cogency of developing computer 
software written in the Ada computer language for the Semi-Automated Forces (SAFOR) 
within the U.S. Army training devices termed Close Combat Tactical Trainer (CCTT), a 
subset of Combined Arms Tactical Trainer (CATT). The following remarks urge that PM 
CATT reconsider use of Ada on the grounds that, at a time when change is the order of die 
day, Ada code may render CCTT SAFOR and other CATT components less accessible and 
mutable than C or C++. 

The Ada decision had been taken some time ago on the grounds that (a) Ada is 
mandated by the Department of Defense and the governing requirement document, (b) Ada 
is specifically indicated for re-engineering mature software ready for production, in that it is 
comparatively error-free or error-correcting, and (c) the life-time costs for maintaining Ada 
would be less than if written in any other language. However, that Ada decision had been 
conjoined with adopting some of the features of ModSAF, an ARPA-sponsored modular 
approach to SAFOR programming not written in Ada, so that the current CCTT program 
converts the best features of ModSAF to an essentially Ada architecture. CATT managers 
pointed out that CCTT is moving on a demanding schedule toward production and issue to 
the force; that they had invested a year's time and effort in production of the SAFOR 
software including Ada; and that scrapping Ada would entail at least six months delay in 
fielding CCTT. 

The names of CCTT and CATT reflect their original intent as training support 
mechanisms. But to manage these now exclusively for training could truncate their 
centrality for supporting research and development, test and evaluation, and operational 
rehearsal. Moreover, their Army origin and focus belies their importance for joint 
(multiservice) applications. Rhetoric of the Defense Science Board, and of a number of 
past and present officials of the Department of Defense, embraces such broader missions. 
Further, the recent report of the Senate Appropriations Committee on the 1994 Defense 
Appropriations makes it evident that the SAC considers intrinsically valuable the digital 
battlefield created for SIMNET, the predecessor of CATT, and intends to support extension 
of that environment beyond the funding requested by the Administration. Narrowly 


A-19 



i 


conceived requirements notwithstanding, PM CATT can realize optimal return on the 
CCn/CATT investment only by insuring that his system remains accessible, capable of 
being extended readily to embrace joint training, and to support communities of other users 
well beyond those originally contemplated. Ada appears to constrain rather than enhance 
accessibility. 

SAPOR will assuredly be important to the acceptability and usefulness of CCTT, 
and ultimately that of all components of CATT. However, times have changed since the 
requirements for CCTT/SAFOR wore written. Conceived to represent the canonical 
opponents in a NATO-Warsaw Pact war, SAFOR must now be mutable, able to represent 
with dispatch and facility any force that might confront U.S. forces. Moreover, since 
many SAFOR applications will represent U.S. units, SAFOR platforms must be readily 
changeable to reflect the continual upgrade in sensors, munitions, and other capabilities 
contemplated in current U.S. defense policy. In short, criteria for SAFOR software ought 
to accord higher value to accessibility and adaptability than to life-cycle maintainability. 

Last May, Lt General Forster, the Deputy Acquisition Executive of the Army, 
signed a directive requiring all Program Managers to submit a simulation plan that 
specifically considers all three forms of simulation (subsistent or real, virtual or apparently 
real, and constructive or modeled). Though the Army has stated requirements for a virtual 
simulation for Research, Development, Test and Evaluation (RDT&E) entitled Battlefield 
Distributed Simulation-Developmental (BDS-D), the sole virtual simulation presently 
available is SIMNET, and CCTT offers the main prospect for a generic synthetic combined 
arms environment to support future RDT&E. SIMNET has demonstrated that a virtual 
simulation such as CCTT, employed with SAFOR, can establish die context for RDT&E of 
a new item of materiel, from establishing its military worth early in the R&D cycle through 
testing its performance prior to production for the force. But Program Managers are not 
likely to command the funds or the programming skills required for Ada code to insert their 
materiel into such an environment. Again, accessibility and adaptability of the CCTT code 
appears to be a primary measure of its usefulness. 

A very current illustration of the foregoing set of issues is presented by one of the 
premier projects of DDR&E Thrust Panel 5, the 21st Century Land Warrior (21 CLW). 
21 CLW is a program under the aegis of the Army's Natick Research and Development 
Center that aims at fielding an integrated set of equipment for individual combatants: 
powerful new weapon(s), computer-aided command and control, and battle dress enhanced 
for survivability. The simulation plan for 21 CLW has thus far included only constructive 


A-20 








models yet to be validated. Even if these models were to prove reliable, it is not clear that 
they could reliably portray increases in effectiveness that would accrue through use of 
21 CLW, and it is virtually certain that they would shed no light cm the tough questions of 
man-machine interface inherent in equipment that combatants wear and personally cany, or 
evaluate prospects of mentally overloading the dismounted combatant SIMNET made no 
provision for individual combatants; CCTT presently treats dismounted infantry fire teams 
as a SAFOR entity, but not as individuals, and even that representation is not validated or 
verified. What is plainly needed is an individual portal into virtual simulation— 
conceivably, a new "system" for the CATT program—and instrumentation for individual 
participants in subsistent simulation that, taken together, will enable comprehensive 
simulation of 21 CLW to compare its military worth against current equipment, and to 
assess its implications fen- doctrine and fence structure. Further, since modem missions fen 
U.S. armed forces place heavy demands on dismounted troops, entity level SAFOR 
portrayal of dismounted combatants, friendly or enemy, would be strategically useful. 
I-Port does not now exist, and SAFOR for individual combatants requires research and 
development at the P6.1-P6.2 (Science and Technology) level. Developers of such tools 
will almost surely find onerous working with an Ada encoded CCTT. 

hi implementing CCTT SAFOR and indeed, in addressing other similarly important 
management issues, PM CATT must consider the intended primary users of his fielded 
system. CATT must enable training on a synthetic battlefield of heavy forces being readied 
for close combat. Most users of CATT will be National Guardsmen in company armories 
whose attention will center on minor tactics. For these, SAFOR can and should portray 
opposing forces (Red SAFOR) to establish uniform conditions and standards for tasks 
assigned during well-structured, criterion-referenced training within platoons. SAFOR 
ought also to enable "tethered" (Blue SAFOR) exercises in moving, shooting, and 
communicating by platoon leaders and company commanders. 

Whereas USATRADOC once held that all CCTT exercises would employ SAFOR, 
that command now contemplates using, for certain critical tasks, manned OPFOR vehicular 
simulators to provide appropriate portrayal of novel threats. Instructors of tactics will no 
doubt find that their personally controlling SAFOR puts them in a prime position to assure 
heuristic exercises and cogent After Action Reviews. Tools for increasing an instructor's 
control over SAFOR, either by selective manning of vehicles, or by software such as the 
"editor" features of ModSAF, seem inherently advantageous fen* teaching small unit tactics 
and techniques. To the degree that embedding ModSAF in Ada impairs that accessibility 








and adapta bi lity, to that degree the CCTT SAFOR software's usefulness for training will be 
degraded. 

The panel heard much about extending the automatical of SAFOR. Yet, one should 
not expect Reservists or their trainers often to make extensive use of SAFOR automated to 
battalion or above. CCTT seems to have been asked to pay too much attention to SAFOR 
requirements recently generated by Active Component users who seek reliable, highly 
autonomous performance by SAFOR to support high visibility exercises of brigades and 
even divisions. The research project (CCSIL) briefed by Commander McBride of ARPA 
probes more extensive SAFOR autonomy. Yet, extensively aggregated and autonomous 
SAFOR could slight the behavioral detail at die entity level important for SAFOR utility in 
the Reserve Components, the very sort of detail controlled by the modular editors of 
ModSAF. The panel was shown examples of graceful interfaces between SAFOR and 
large, constructive models of war, interfaces that permitted selective disaggregation of units 
within the model to the entity level, and interactive resolution of concurrent combat 
sequences. It seems sensible for PM CCTT to give priority in his SAFOR development to 
entity level behavior and small unit performance, relying on ARPA or constructive models 
to furnish higher echelon contexts for CCTT exercises. 

The panel did not hear about SAFOR connections between virtual or constructive 
simulation and subsistent simulation. At the Army's Combat Training Center in Europe, 
brigades now train with one subordinate unit in the subsistent or real mode of simulation at 
Hohenfels, while other subordinates participate via a constructive model or via SIMNET. 
It seems important for the participants afield to be able to observe friendly units operating 
(in constructive or virtual simulations) within line of sight or within sensor range on either 
flank, and to conduct reconnaissance of OPFOR threats along avenues of approach that 
traverse their unit's assigned boundaries. SAFOR could inject entity representations into 
sensors (e.g., radar or IR), thereby adding to the scope and fidelity of simulation at the 
CTC, and provisions should be made for such interfaces by PM CCTT. 

All the foregoing suggests that CCTT SAFOR, far from being a mature product 
ready for "type classification," production and fielding, is and should remain for the 
foreseeable future an evolving assembly of software tools that ought to be highly modular, 
very accessible, and easily changeable. I recommend that PM CATT reconsider using Ada, 
but press ahead with the ModSAF re-engineering presently under way. 


4 

J 


4 


4 


< 


4 


A-22 












COMMENTS BY JOHN LAIRD 


I 1. Can the same SAFOR products support both the R&D community and 

the user community? If yes, what are the products? 

Yes. It is critical to both of these communities for them to share products. 

k R&D products: 

Over die next four years, ARPA will be spending millions of dollars on advances in 
SAF technology including work on intelligent forces; communication, command, and 
control; wide-area simulation. It is important for the user community to have quick access 
I to this research. 

User community (CATTs for example) products: 

The development of CCTT SAFOR will lead to the creation of the following: 

| • A well-engineered SAFOR. This will include the simulation engine as well as 

the control logic for the SAF entities. Both of these will be valuable to the 
research community. The first as a platform for interfacing with the DIS 
environment The second as a base-line for behavior of platoon and company- 
level behavior. Other components, such as the terrain database and the inter- 
visibility calculation software will also provide useful base-lines for research in 
these areas. 

• A database of CISs and their associated audit trails. This information will 
greatly help anyone trying to do research in automated forces. 

The critical question is whether the sharing should occur at the level of individual 
components, or of complete software systems. I believe that maximal sharing is important 
(of as complete of software systems as possible). Thus, we want the research community 
to directly use the products of the user community. I do not expect the user community to 
be able to directly use the products of the research community, although it is important that 
pieces of products from the research community should be demonstratable within the user 
community software. 


i 


A-23 






I 


Rationale for maximal sharing: 

• If Ac research community is not using the products of the user community, the 
research community may address problems that are tangential to the concerns 
of the user community. 

• The amount of funding available for continued development of SAF 
environments will be limited. It will be difficult for the research community to 
have access to a well-engineered SAF system unless it comes from the user 
community. 

• The comparison of research results to a meaningful baseline will be difficult 
without the research community using die user community SAFOR. 

• There is the potential for results of the research community to be demonstrated 
within the context of the user community SAFOR. For example, if an 
alternative behavior control system is developed in the research community, it 
could be tested within the user community (training centers) on real data. In 
general, sharing a common environment will increase die research communities 
access to realistic data. If die development goes on in separate environments, 
there is too great a potential for minor incompatibilities to make integration very 
difficult. 

• The shared expertise in a single software environment will greatly increase the 
possibility for people to move between the two communities—greatly aiding 
technology transfer. 

• Finally, the SAFOR technology is immature. After the CCTT SAFOR is 
developed, it will have to be extended for the other CATT programs, as well as 
other services. Already, many of the requirements for CCTT push it into 
uncharted waters, making a continual infusion of results from the research 
community a critical component of its development. 

As pan of developing a single software environment that is shared between the user 
and the research community, that environment must have well documented components and 
interfaces so that the research community can easily modify the software. The current 
CCTT SAFOR development methodology is consistent with this need. 

2. What software approach should be used for CCTT SAFOR considering 
the needs of both the R&D community and the user communities? 

The software methodology, independent of the language, will determine the ability 
of CCTT SAFOR to meet the needs of the user community (life cycle maintainability, 
reliability). The selection of the language is clearly secondary. My impression is that the 
current software methodology is excellent and will lead to good maintainability and 


A-24 












reliability. Thus, we are able to look at other issues, the most important being usability and 
flexibility by the research community. Here, Ada is inferior to C: 

• There is an established base of C programmers in the research community. 
Most of the major engineering universities teach C in introductory 
programming courses. C has become the standard for engineering software— 
all large engineering software packages are being written in C (such as 
CAD/CAM systems). There is little if any research work done in Ada. 

• The entry cost of using a C-based system is much lower than Ada. There are 
even high-quality free C compilers available on most UNIX systems (GNU). 

• The software development cycle of recompiling is much less in C. This is 
critical in a research environment where software is developed incrementally. 
Thus, I recommend adopting C for the development of the COT SAFOR. 

What has to be considered is the life-cycle of the SAFOR project past the delivery 
of the CCTT SAFOR. Thus, the system must be designed for the infusion of results from 
the research. 

3. What products are available from other programs? 

There do not appear to be any other products that the CCTT SAFOR team has 
missed. 

4. What strategy of specific steps should the Program Manager, CATT, 
take to build community consensus and to produce a product that will 
support CATT programs other than CCTT? 

Nothing special recommended here. 

5. What strategy should the Program Manager, CATT, take to implement 
the CCTT SAFOR? 

• Stay the course on the methodology for software development, VVA, building 
the CIS database. 

• Adopt C as the language for implementing CCTT SAFOR. 

• Continue to have close ties with the research community such as the 
relationship between SAIC and LADS. 

• Expand the ties to include the work on behavior representation. 






6 . Other issues: 

ModSAF development must continue to be funded over the next 3-4 years to 
support the research community until CCTT SAFOR is available. 


A-26 





COMMENTS BY DUNCAN MILLER 

As the complexity of the SAF development issues became apparent during our 
discussions, the peer review panel paused to confront the issue of how broadly we should 
interpret the questions we had been asked to address. We decide to focus on how to 
maximize the chances of succeeding with SAF development in the long run, rather than on 
how to fulfill die immediate needs of die COT program. 

This is a crucial point, because SAF is by no means a mature technology. SAF 
technology is going to continue to evolve for at least the next several years, and the R&D 
community will need to be involved in this process for it to be successful. ARPA is 
already counting on some substantial extensions of SAF technology, especially in the area 
of representations of decision-making and command and control functions, for WISSARD 
IFOR and STOW, among other programs. War Breaker will almost certainly make use of 
these developments, as well. 

As SAF technology grows, it will become increasingly important that researchers 
build their extensions cm a solid, accepted base of code. We have already reached the point 
where it is prohibitively expensive for researchers to reinvent the large body of existing 
work, even for a program the size of CCTT. Increasingly, they must build on what is 
there, adding and modifying modules where necessary, but not recreating these modules 
where changes in functionality are not needed. 

In general, the panel was favorably impressed with the ModSAF architecture, with 
the degree to which the Integrated Development Team had accepted and adopted this 
architecture, and with the improvements they proposed to add for CCTT. If the approach 
we saw presented is executed well, CCTT SAF should become the new foundation for 
SAF development for the next few years. For this to occur, however, the code must be 
easily transportable, accessible, and affordable to the R&D community, the Combat 
Developments community, and the Test and Evaluation community. All of these 
communities share the need to access and modify certain modules within the code for 
various purposes. 

This brings us to the central question of the language in which CCTT SAF is to be 
written and the tools and support modules it requires. If CCTT SAF is implemented only 

A-27 







in an Ada environment, the number of organizations that can deal with, and modify, the 
base of code will be very limited. ARPA probably will not be able to use an Ada-based 
CCTT SAF in its programs, since very few of its contractors are equipped to deal with 
Ada. This is true from the standpoint of availability of experienced personnel and tools, as 
well as from a cost and schedule standpoint 

I believe, and it appeared that all erf the other panelists also believe, that it would be 
best if the CCTT SAF were developed and maintained in C, with appropriately rigorous 
levels of documentation and validation of the algorithms and the code. As new capabilities 
emerge from R&D programs, they will have to be adapted, tested, documented, and 
validated for incorporation into CCTT and subsequent CATT programs, but this is a 
process that must be carried out in any case for a production system. 

The other alternative we discussed was maintaining two parallel systems, an R&D 
version in C and a production version in Ada, trying to keep them as synchronized as 
possible. Such an approach would prove cumbersome and expensive, at best At any 
given point in time, there are bound to be discrepancies in the capabilities of the two 
systems and in the way particular algorithms are implemented. These discrepancies would 
make code verifications and performance comparisons difficult, and would make it very 
hard to interpret the results of tests conducted with differing versions of the software. 

If, after considering our recommendations, it is concluded that CCTT SAF 
development must be done in Ada, we suggest that STRICOM be prepared to undertake at 
least one additional round of SAF enhancement before CCTT is fielded. Over the next two 

to three years, we believe that ARPA programs will yield enough important new SAF 

♦ 

capabilities that such enhancements will be well warranted. 

Finally, it was noted that the development of the code to support some 1200 SAF 
entity behaviors, which require an average of 10 pages of English narrative to describe, is 
going to make CCTT SAF the largest representation of intelligent human behavior ever 
undertaken. This is a daunting prospect The sheer magnitude of the effort reinforces our 
point that no other programs in the foreseeable future are going to be able to afford to 
recreate this corpus of knowledge. They will have to build upon what the CCTT program 
has achieved. It is imperative that this weak be shareable across all of the communities that 
need access to DIS technology. We think this access will be possible only if the 
implementation is done in C, the closest thing we now have to a universal language in 
computer science, but with the Systems Engineering discipline and documentation 
embodied in MIL STD 2167A. 








The above comments focused primarily on the Ada language, programming 
environment, and tools as barriers that would inhibit or preclude the involvement of large 
segments of the R&D community in further development of SAF technology. While these 
are the primary barriers, they are not the only barriers. The injudicious selection of rule- 
based software could have a similar effect 

I urge that to the extent that rule-generation tools and a rule-processing engine 
become a key component of CCTT SAF, the selection of these tools should also be 
considered from the standpoint of other programs and other developers. For all die reasons 
cited above, these tools will become an integral part of the SAF environment on which 
others must build. Great care should be taken to ensure that they are available at reasonable 
cost for a variety of computing platforms. The government should consider acquiring the 
rights to use these tools in future extensions of SAF, both for R&D purposes and for 
production use, so that they can be furnished to future developers as part of the SAF 
software package. 


> 


> 


> 


I 


1 


A-29 








COMMENTS BY ROBERT RICHBOURG 


The basic framework I have used to try to answer the questions is that whatever 
decisions are reached, they must have a favorable impact on the success of the program, 
both in die long and short terms. Long-term success is the more important of the two and 
can be measured by the characteristics of the eventual SAFOR product It must be 
acceptable by the user community (in the widest sense), be applicable to other programs 
within the CATT family as well as contribute to basic research questions in the larger 
community, and be easily extensible as new results become available. While the long-term 
success is of paramount importance, the short-term results are also important; a short-term 
disappointment will greatly diminish the chances of a long-term success. The short-term 
indicators include a program that can be delivered on time, within budget, and, most 
importantly, can meet the stated needs of the program. Trying to put all these concerns into 
a few words, the program must be such that the widest community (both R&D and 
development) develops and feels a sense of ownership for a product that has been 
engineered using the best available notions from software engineering. 

1. Can the same SAFOR products support both the R&D and user 
communities? 

Without question, the deliverables from this program can be used by both 
communities, and they have wider applicability to commercial enterprise as well. The most 
important product to come from the CCTT SAFOR effort may well be the documented, 
electronic codification of behaviors at the various operational echelons (from individual 
platform through brigade). A credible functional description for military behaviors has 
been a stumbling block for many programs in the past and could still be one well into the 
future. The CIS specification should alleviate this problem. Moreover, the CIS will 
constitute an important source of behavioral description (under a wide set of conditions) 
that should be of great value in further explorations into understanding general human 
behaviors. Similarly, the architecture/methodology to utilize the behavioral specifications 
(the CIS) will have wide interest While such an architecture will not constitute a proof of 
the human reasoning process, it will constitute an existence proof of a method that does 
work (mixing low-level FS A mechanisms with high-level, rule-based techniques). Again, 


A-31 




the architecture as well as the CIS themselves should prove useful in any area that requires 
a model of human behavior. 

The actual software (source and executables) may have less widespread 
applicability than the CIS and CIS architecture. However, they should still prove useful to 
the R&D community as a testbed for die exercise of new ideas. Applicability to die military 
user communities will be more direct Military education could use SAFOR as the players 
who reenact past battles, as we have already seen in 73 Easting. The educational benefit 
could be enhanced by a SAFOR enabled "what-if* capability for history. SAFOR can be 
used for other educational purposes, such as trying to teach military students how to 
identify an OPFOR (the SAFOR) center of gravity. Clearly, the training community can 
benefit from continued use of the SAFOR. New doctrine and systems can be tested and 
refined based on SAFOR (both as OPFOR and friendly forces). The analysis community 
already relies on a form of (aggregated) SAFOR that will be improved by producing more 
capable computer-controlled force. The logistics community should rely on SAFOR to a 
large extent in the exercise of both support and mobility planning. As an example, exercise 
of a port clearing plan has little training value for human equipment operators but has high 
value for those who must devise and refine the plan. SAFOR could be used for such 
purposes. SAFOR can also prove helpful in the examination of operational and strategic 
questions, given a sufficiently high level CIS specification. As an example, suppose 
SAFOR are used to model an ally (on the friendly flank) who uses tactics typically 
associated with the OPFOR (the Syrians in Desert Storm). SAFOR could be used to 
answer many questions in such cases, including those that revolve around an ally who 
suddenly decides to change allegiance mid-battle. 

Given a modification in some of the CIS specifications, the SAFOR could also 
apply to commercial purposes. Airborne SAFOR could be used to train air traffic 
controllers. DI SAFOR could help train law enforcement personnel for riot, hostage, and 
other situations (Waco, Texas?). Vehicular SAFOR would be useful to city planners when 
designing transportation networks. 

In short, the CCTT SAFOR effort should find application in many areas. 

2. What software approach should be used for CCTT SAFOR, 
considering the needs of both the R&D and user communities? 

All communities will best be served by a software system that strictly adheres to the 
commonly accepted principles of "good" software engineering practice. There are several 


A-32 









programming styles that could be applied to this program including procedure-oriented, 
object-oriented, logic-oriented, rule-oriented, or constraint-oriented. The developers in the 
program are charged with producing a large (over 100K SLOC), "industrial-strength" 
program that will function in a complex domain. Without producing a text on software 
engineering, I simply state the commonly accepted view that the object-oriented style is best 
suited for such programs. Given that the object-oriented style will be used, there are 
several characteristics that should be required in the implementation language. These 
include provisions for abstraction, encapsulation, modularity, hierarchical capabilities, 
strong typing, concurrency support, and enabling persistence. While the implementation 
language need not support all of these, supporting most of them will be helpful in using die 
object-oriented style. 

Other constraints on the implementation language are more pragmatic. It must 
generate fast, efficient code. The goals for the number of entities to be "on the net” are 
very ambitious and cannot be met by an implementation language that makes too many 
sacrifices in execution speed. The language must have a wide base of support. The R&D 
community is concerned about the issues of additional cost, both in acquisition of new 
software and in training people to use new software. In summary, the perfect language for 
the CCTT SAFOR program would support software engineering principles (by reliance on 
the object-oriented paradigm), produce fast, efficient code, and be widely available in both 
the production and R&D communities. Both the R&D and the production communities 
must have access to the language. The product of the production effort must be accessible 
by the R&D community so that they can have a testbed to generate new results (which will 
be transferred back to the production environment). Actual software transfers from the 
production community to the R&D community while concepts and methodology transfer 
60 m the R&D community back into the production environment 

From the presentations at the peer review, it seems that the R&D community has a 
preference for C, a language that is not object-oriented, based primarily on the wide 
availability of both C environments and programmers. The IDT advocates use of Ada, an 
object-based but not object-oriented language, based on concern for software engineering 
issues. Remember that the dominating factor in the quality of code production is the 
skill/talent of the individual pro grammer. A talented software engineer will produced well- 
engineered code given any high-level language. The real software engineering issue here is 
deciding to what degree does the chosen language encourage the average programmer to 
produce a well-engineered product While use of Ada will not, by itself, guarantee a good 


A-33 









< 


software engineering effort, it was designed to encourage and enforce the use of good 
software engineering practice as it was understood in the late 1970's and early 1980’s. The 
same can not be said of C; use of good software engineering principles in this language is 
more a matter of management enforcement 

In an effort to recommend an implementation language, I have considered four 
alternatives; Ada, Ada 9X, C, and C++. Given any language choice, I assume that the IDT 
will continue to rely on the same set of tools to perform OOA and OOD, so that the degree 
to which any language "dovetails’’ with the OOA/OOD result is also an issue. 

a. Ada: 

Ada is object-based but not object-oriented (as it does not support inheritance) and it 
is not well established within the R&D community. Public domain Ada compilers are 
available (Gnu project) but these are not subject to the formal validation process. Thus, 
compiler acquisition costs are not large issues. However, training costs to produce Ada 
programmers in the R&D community will still have an impact (more time and effort than 
dollars). Ada code is generally slower than equivalent C code. An Ada implementation 
would fit well with the products from IDT OOA and OOD. Ada was designed to encourage 
programmer use of software engineering principles. 

b. Ada 9X: 

Ada 9X is the fully object-oriented improvement of Ada and should thus be more 
useful in the object-oriented style of program development. Public domain Ada 9X 
compilers should be available by 31 December 1993 (again from the Gnu program), but 
these will not be subject to formal validation. Programmer familiarity within the R&D 
community remains an issue. Further, Ada 9X is a new language that does not enjoy a 
wide support base in any community and has not yet been subject to public scrutiny to 
ensure an error-free compiler or environment I assume that Ada 9X execution speed is 
similar to that of Ada code. An Ada 9X implementation should fit exactly with the results 
of IDT OOA and OOD. Ada 9X should encourage a high degree of good software 
engineering practice. 

c. C: 

C is procedure-oriented, not object-oriented for many reasons. C is widely 
supported and available in both R&D and commercial communities. C code generally 
executes very fast As C is not object-oriented, it may not align well with the results of 


A-34 









IDT OOA and OOD. C was not designed with promotion of good software engineering 
principles in mind and, in many cases, the "shortcuts" available in C can actually encourage 
the programmer to eschew established software engineering practice, frustrate management 
attempts to enforce software engineering principles, and produce runtime errors that are 
very difficult to locate. 

d. C++: 

C++ is object-oriented and enjoys wide use and support in both the R&D and 
commercial communities. C++ code generally executes fast, but more slowly than 
conventional C code. As C++ is fully object-oriented (although it does not support 
persistence) is should fit well with the results from IDT OOA and OOD. While not 
designed with software engineering support in mind, C++ is object-oriented, which should 
aid in quality software production. Also, as C++ should be able to reasonably reflect the 
results of OOA and OOD, it should encourage good software engineering practice. 

Recommendation: Select C++ as the implementation language. 

A second issue of concern regarding the implementation involves the use of the 
COTS product RTWorks to implement the rule-based component of the software. Again, 
acquisition and training costs for the R&D community cause some problems. An 
alternative in this area is the C Language Integrated Production System (CLIPS), a GOTS 
product that was built at NASA to allow the implementation of Al-type systems (RBS and 
expert systems) on conventional hardware. A companion product is CLIPS Object- 
Oriented Language (COOL) which allows object-oriented concepts to be used with the 
CLIPS environment. These products are available free of cost to government agencies and 
at nominal cost to others (approximately $350). While a firm recommendation to use 
CLIPS cannot be made without specific knowledge of the IDT expected benefits from 
using RTWorks, it is an option that deserves some examination. 

3. What products are available from other programs that could also be 
useful in developing CCTT SAFOR? 

In general, the DMSO Survey of SAFOR and the IDT together seem to have 
covered this question well. One small addition to those systems already examined is 
CUPS, as discussed above. Also, encoding the CIS is a large project in constructing a 
knowledge base of rare size (very large), high complexity, and intended for wide and 
general use. Doug Lenat's Cyc project at MCC may offer some insight into the issues and 








methodology involved when constructing such a base of knowledge that should be 
generally useful. 

4. and 5. How should the PM CATT proceed to build community 
cons en sus and build a CCTT SAFOR that will be useful 
well into the fiiture? 

In general, the program seems to be progressing exceptionally well and most 
recommendations in this area involve continued or expanded use of practices that have 
already proven successful. 

a. Continue to use the spiral development technique. 

b. Using people rather than documentation to effect information exchange is a 
success. Continue the relationship between the IDT and LADS and consider 
opportunities to include personnel from the R&D community (visiting 
scholars) in the program. 

c. The SUMEX worked well and should be continued on a regular basis. Again, 
consider opportunities to involve selected researchers from the R&D 
community in the program. This could have wider impact than just for the 
CCTT SAFOR development 

d. Take a more active role in funding research. At some point, ARPA emphasis 
will be shifted to other areas and CCTT should have a mechanism in place to 
fill the void. 

e. Insist on tightly specified, well documented interfaces for the IDT software. 
Similarly, emphasize modularity to encourage "plug-in" use of the CCTT 
SAFOR products. 

f. Insist on strict standards for data abstraction; maintain all data separate from 
any code that uses it. Apply this to the knowledge base created as the CIS as 
well. Documentation is necessary. 

g. Continue soliciting review and feedback from the R&D community both to 
enhance their feeling of ownership for the program as well as to get their 
insights. 

h. Insist that architecture and methodology are as well documented as the code 
itself. These are major reusable products. 

i. Place a strong emphasis, including incremental user review, on the 
construction of system interfaces. A poor interface can ruin an otherwise 
exceptional product while a strong interface can support a marginal effort The 
interface deserves a lot of attention and effort 










j. Maintain the same high levels of effort and productivity and keep up the great 
work! 


A-37 








APPENDIX B 


BIOGRAPHICAL SKETCHES OF PANEL MEMBERS 


B-l 




BIOGRAPHICAL SKETCHES OF PANEL MEMBERS 



Dr. Philip S. Anton is a member of the technical staff at the MITRE Artificial 
Intelligence Technical Center. His research interests include behavioral 
representation, distributed simulation, computational neuroscience, and neural 
network modeling. Dr. Anton received his B.S. in Engineering from UCLA, and 
his M.S. and PhD. from the University of California at Irvine in Information and 
Computer Science, specializing in Artificial Intelligence and Computational 
Neuroscience. He is a member of IEEE, ACM, INNS, and CPSR. 

Peter Brooks is a member of the Strategy, Forces, and Resources Division of the 
Institute for Defense Analyses in Alexandria, Virginia. He received the A.B. 
degree in mathematics from Princeton University, and the M.S. and Ph.D. degrees 
in mathematics from Stanford University. Prior to joining IDA, he held a research 
position with the Department of Defense. His recent work includes contributions to 
the development of new analytic methods for use with SIMNET and DIS exercises, 
a workstation-based smart minefield simulator, and test procedures feu Semi- 
Automated Forces. 

Gen. Paul F. Gorman, U.S. Army (Retired), is Visiting Professor of Computer 
Science, University of Virginia, and a consultant on military training for the 
Institute for Defense Analyses, and for the Defense Science Board. He has 
contributed to the development of virtual tactical engagement simulation from its 
inception. 

John E. Laird received his B.S. from the University of Michigan in 1975 and his Ph.D. 
in Computer Science from Carnegie Mellon University in 1983. He is currently an 
Associate Professor in the Electrical Engineering and Computer Science Department 
of the University of Michigan and Director of the Artificial Intelligence Laboratory. 
His primary research interests are in the nature of the architecture underlying 
artificial and natural intelligence. His work is centered cm the development and use 
of Soar, a general cognitive architecture. Most recently he is the principal 
investigator on the Soar/IFOR component of WIS SARD/IFOR. The goal of this 
project is to develop intelligent forces within tactical air-to-air engagements. 


B-3 





Duncan C. Miller holds four degrees from MIT, including the Doctor of Science in 
Mechanical Engineering. His principal areas of study included control theory, 
human operator performance modeling, human factors, and perceptual psychology. 
At Bolt Beranek and Newman Inc. (Cambridge, MA, 1963-1993), Dr. Miller 
formed and managed the group that developed the protocols and software for 
SIMNET. He is a member of the Distributed Interactive Simulation Standards 
Steering Committee, which refined the SIMNET protocols into IEEE Standard 
1278-1993 (Standards for the Interoperability of Defense Simulations). He has 
served on a number of advisory committees, boards, and panels, including the 
Naval Research Advisory Committee Panel on the Impact of Advancing 
Technology on Exercise Reconstruction and Data Collection (1990-91), die Defense 
Science Board Task Force on Simulation, Readiness, and Prototyping (1992), the 
Congressional Office of Technology Assessment Defense Modeling and Simulation 
Project Advisory Panel (1993-94), and die Air Force Science Advisory Board Joint 
Modeling and Simulation Systems Review Panel (1994). Dr. Miller is currendy 
leading a small group of experts at MIT Lincoln Laboratory, facilitating cooperation 
and technical exchange across government programs in such areas as Distributed 
Interactive Simulation standards and architectural issues; data flow management in 
large interactive networks; information management for large, muldsite exercises; 
C 3 simulation protocols; and other issues involved in interfacing virtual, live, and 
constructive simulations. 

Robert Richbourg was commissioned as an officer in the Regular Army in 1976 after 
graduation as a Distinguished Military Graduate from the ROTC program at 
Wake Forest University. He has served on battalion staff sections in various 
positions and commanded a HAWK missile battery in the Federal Republic of 
Germany. His military schooling includes the Air Defense Artillery Officer's Basic 
and Advanced Courses as well as the Command and General Staff College. In 
1984, he earned a Computer Science Master's Degree as the top graduate in the 
Computer Science curriculum at the Naval Postgraduate School. He became the 
first Computer Science Ph.D. graduate of the Naval Postgraduate School in 1987. 
Lieutenant Colonel Richbourg is currently an Academy Professor at the 
United States Military Academy, West Point, where he has served as the Director 
of the Office of Artificial Intelligence Analysis and Evaluation since 1988. 


B-4 


( 





APPENDIX C 

SURVEY OF SEMI-AUTOMATED FORCES BRIEFING 
(MITRE CORPORATION) 










Surve 


I 



8 

a^B 

5: 

O 

e 

o 

aa^ 

s 

>» 1 
-o .s 

75 co 

2-0 
O c 

S to 
£ o> 

g c 

Q. s 

CO Q> 
“O 

o 


Q> 

(0 

I 

Q 


a* s 
So 

TJ o 

& m 

c c 
o> 5 
co g 

O) JC 
£ co 
0. co 


co 

o> 

o> 



> 


C-3 

k 




1MM3 3:14 PM I- Booktr, Th« MITRE Corporation, McLMfl, VA Suntf of SamMut 







Purpose of Survey 









Basic SAFOR Characteristics 



0) 

O 

CD £ 
O *- 

c £ 
.2 c 

f! 

O II 

CO g 

Q OC 


CO 

"O 

a) 

c 

c 

(0 

E 

C H- 

.2 ° 

S .2 

c > 

0) CO 
CO J= 
0) 0) 

af 

£ o 

"So 0) 

■g « 

E o) 

o o 

o fc 

1 « 
~ =5 

c £ 

uj O 




•mv-tuMs is xmiks va ‘u»ri»i(i 'ooii»»odjo3 atom mu 'i^itooa n ihh : s nmn 


<1 

(0 Ul 

i ° 
A < 


■g 55 

to I 

< £S 

o » Q 22 


8 JJ] 
3 -i 


Q 

I «? 


s o to to cc 

s < ui m < 

S iu oc m s 


►» 

Qi 

> 

Ui 

s 

CO 

o 

OJ 

a 

o 

w 

C /5 


« ® 

2 ° u. a 

*S*sf 

« to < O (5 
2 ° W 

IB O f- Q fe 

m S <2 ra « 


< g 

12 < 

t CO 

5 | 

o $ 







Survey Schedule 



Draft Available 
Final Rer 

















































Findings: General Impressions 


> 2 
E | 

< £ 

i i 


C -O 

© © e 
S s o 

Q. = 5 

2 g a 

r 5 

o cS o 

Q. •£ *' 

ago. 

3 ® 3 

10 CO 

w a> a> 

©So 
o a. .= 

'5 2 -c 
a> a> > 

CO O w 

I S. I 

1 5 I 

| 

5 © >* 
o > ■« 

CO > 2 
CO CO © 


?» 
© c 
a> o 

ol 

|8 

Ii5 

Q. (0 
>C CO 

0) o 

O s 

Z CO 


I I I I 



Findings: General Impressions 



c-io 





lOttS/W 3:14 PM L Book«r, Th» MITRE Capontlon, McLuo, VA Sumy at Swnt- 




C-ll 






tOOSM 1:14 Ml l_ Bootnr, Th» MflUE Corporation, McLMn, VA fcjrrty ot 


E o 

£ m 

& I 

«P o 
c ■& 

CO .£ 

Ii 

GC 5 

P O 

Irf ® 

< O) 

(0 CO 

E o 

2 « 

**" "O 

0) Q) 

-S 3 <d 

J 5 JQ o 

o S g 

•= (0 w 

c =5 5 

O . jj) o 

i £'■£ 3 

v> o n 

> »&“■ 
9 4> 3 1 

CO CL 0) 


CO 2* 

Q. •£ 
O o 
2 c 

^ CO 


> ■“ 
O •o 

O (Q 
0) O 
OC -I 

I I 


0) 

a 

E - 

o ® 

>1 

11 
o & 
m *k 

0 CO 

w a 
o o 

co "O 

0) 0) 

E 

jo •— 

o 

CO 3* 

c c 
.2 2 
g 3 

£ o 

€ i 

< 



u Book*. TtM MITBE CotpoHIW. McU*. V* <* W-Autom..* FofCW 


L. 



C-13 



Recommended SAFOR Research Areas 



1 C-15 

I 




Recommended SAFOR Research Areas 




C-16 




Recommended SAFOR Research Areas 





Notional View of Objective SAFOR System 



PIS Protocol (over local or DSI network' 












Features of Objective System 





C-19 






A Modular Solution 





< 


Pi 

o 

(Jh 

< o 

oo 

o 


C/D 

g 

o 

♦ 

CO 

a 

c/d a> 

a x 

«2 w 

w "5 t) 

C/D >* J-f 

2 CO G 

t 2 

£ 


p ,w-i S-K 

W %S 


&< 

K ‘c/3 


c 

o 


C/D 

<U 

”?L> w 

£. 8 §'S 

- 0*2 

3°1 
6 S'S 

O .. Tj 

PhH *rG 

cxpq o 


*G 

G 

ca 

G 

O 

• i—( 

c 3 

N 


00 

G 


2 00 

ja t 3 (S c/d 
fl rtfS A) 

O _g •> 

< 5 2 

cu 

T3 

G 

G 


D-3 













Distributed Interactive Simulation 



Data Analysis | p,an View Dis P la y Command Post Simulators 


































Semi-Automated 


i 



D-6 




SAF Applications 


o 03 

U 2 


vo od 


PQ 


O 

• • 

a \o 

T3 t3 

c g 

S H 

g W 

oZ 

uS 


u 

u 

> 


3 U 


03 

<0 


A, ^3 

rs •’—< 


'goo 

§ e 
o 

§«''§ 
O *JH 

o g; 

l* <3 

H *—• 

g>o 

•S-s 
.5 •§ 
2 B 

H <N 


03 

(N 

• • 

C 

0 > 

s 

0 < 00 
Q 
< 

< 

tu 

• • 

c 

.2 

as 


QJ 

> 

<U 

Q 

[3 

"C 

o> 

’3 


s -a 


TO 

fi 

CO 

03 

U 


co 

> 

H 

T 5 

C 

CO 


u 03 

CO 0> 

H H 


W) 

G 

• 



0 ^ gj 

* 7 ? S 


0 ) 


pO 
G 

TO 
C 
CO 

CZ3 

U —< 


co 

fl 

o> 

<w 




Link between Constructive and Virtual 
Simulations: BBS, AWSIM 





Sample SAF Entities 


2 a 
s s p 

H ICQ N 



u 

o 

> 

e« 

X 

oo « 


£ 

on S 

i i 
< < 
co 001 oo 


CO M §£2 

.2 SIS 


y co 

Q 

£ 


Q| 

oof 

m! 

«o 

s 


cn 3i t> 1 1 on 

*-< S i t— fool o 

SsIs SIS 


I’O 
i « 

I N 

fa 
jg LS 

g « 

e 2 fe 


j 1 Vi 

hd 

j I §1 >. 

\M*\ <3 

| cut cis 

! Stmt, 
Sco ISl<i 


Missiles Stinger Patriot Scud/MAZ-543 















ModSAF Objectives 


" oo 

< tx 

I»' 

1 u . 

~ CvS 

to o 


o > 

4> ^ 

fa 2 
® *o 

S < 


*o 

p 52 
S3 C 
^3 O 

03 *3 

ft ^ 
c 0 

CD C 


X 

0 

a co 
C 

p o 

o ’'jj 
g .52 

Z £ 

•g -a 

2 p 
O -*—> 

TJ 3 

T2 o 

o ~ 

i-2 

r\ -c 

ft ex 
2 o 

03 «« 

CX Q 
® £ 
13 —T 

a o 

3 u. 
T3 c 
£ O 
a o 


a > 2 

rr >>>n 


4> 

2 e 

*9 *o 

J2 *o 

•3 « 

u> O 

c t; 

o <5 

o 

co 

•O 03 
C 4) 
03 -4~» 
_, •*-• 

bM 

03 c3 

.9 a 

4—> 

«3 CO 

2 £ 

CX to 

o *S 
5/3 § 
4) JS 

ft ° 
O 0 


O -ft 
0 Co 

cx x: 


4) *o 

1 8 

•2 2 

8 S 

4) 4) 


-C < 
P 


cd 

3 ’ 

T3 • 


^ ^ 

S £ os u 



3 

© 


J3 

2 

CO 

G 

*3 

X3 

J3 

0 

3 

u 

JO 

X# 

3 

Q« 

3 

CO 

CX 

© 

G 

u 

3 

3 

p 

ej 

O 

P 

U 

p* 

C/3 

V 

Gi 

~p- 


~7- 

T 



•° *5 

68 «S 

£ a | 

5 p * 
O w w 


> > > 


D-9 


models, platforms, and weapons 

V Interface A block for other DIS simulations: generic physical, task, and 

mission interfaces 

V Protocols DIS, S1MNET 

V Hardware SGI, MIPS, Sun 




ModSAF 1.0 Objectives 



D-10 


Controllability W Data 


















ModSAF Network Architecture 











SOT 


ffci. 






0> 


»_ CO 

o .9? 
c *5 
c | ® 

O =U. 

•- B < 
2 co to 


CO 

LL 

< 

CO 


S 2 

= C 
£8 

= "° 
CO C§ 




D-12 


Preview 

provides perspective view 



ModSAF Software Architecture 




o 

£2 
sa 
£ a 


- 'O 
fi V 

4> Vi 

> 03 


a 1 s s "c sp 
I 5 2 9 -t 

$3 £ WD 08 8 


<U O 
Js! u 


m fiw QO 


T3 

0> 

CO S 

g -S 

5 C8 

P u 

< o 


(/) 3-i 1 

c ^ 

o W) 
y ao 

8 J 

a £ 

Ol In 

< pt, 

< ! 

in 


. ° 
I «3 

IS 
I £ 

I V. 

I 0 
w 


Public & Private Headers 
Test & Example Routine 
Documentation 











Shared Databases 





Persistent Obiects 


o 

4—> 

3 

O 

Ut 

u, 

O 

#* 

CO 

8 

CO 

<d 

c 


s 

3 

Vn 

O 


£ S> *3 


o 

o 

s* 

M-g 

3 

3 

o t 

o 

<D o 

*2 oo 
J2 c 
o ^3 
3 c 

• g 

.§S 

I"“ 

CO 


8 jS 

I 


<D 

43 

3 

3 

"O 


« L* > w 
C • -* 2 

-4 « Tl 2 


3 

£ 

Ut 

a 

T3 

3 

3 

13 


2 

3 

CU 


<D 

4—» 

3 

O 

D 

X 

0) 


c 

o 

fa 


a ^ 


o 

-3 


o 

4-4 

-2 

T3L 

a 

IB 

Z 

3 

O 

*co 

<D 

o 

3 

3 

CO 

CO 

44 

CO 

3 

*-> 

♦ 1 
£ 
3 

T3 

• *-4 

O 

Vt-4 

O 

4-4 

o 

> 

co 

4-4 

3 

3 

3 

3 

O 

O 

• 

U 

CD 

3 

O 

VD 

JO) 

D- 

’o 

o 

*o 

U 

£ 

o 

u 


3 

£ 

3 

O 

.22 <u 

*-* > 

•-H .1-4 

3 *■* 
a u 
• 3 3 
3 

■So 

J3 £ 

co **- 

o> M 

S co 
3 

CO -*-* 

»fc 0> 

■a § 

3 ^ 

4-4 3 
O O 

c* • ^ 

I a 1 

<+-* • K -4 

o ti 

s 3 

O g 

u S 


a> 

u 

3 

co 

3 

cu 


o 

u 

4-» 

3 

© 

u 


>*■» 

*3 «« 

JB 3 

P H 


CO 

© 

£ 

3 

U 

fa 

44 

CO 


44 

© 

3 

tz> 

a> 

£ 

3 

i- 

fa 

44 

CO 

3 

H 


D-15 


Missions Are represented by a network of task frames 

Overlays Organize persistent objects representing—orders of battle, 

intelligence information, missions 

H-Hour Used to synchronize mission execution by different units 





Persistent Object Relationships 












o 

U) 

(0 

U) 


QQ 

Q 

O 

Q. 


QJ 


CO 

CC 53 


42 S 


C a 

0) ^ 

|§ 

O T? 

U13 

MiS 

4» O 


>? « 

O o 


fl 

0> 

w 


CO 


CO 

0i 

CD 

C 

08 

x: 

U 


a 

u 

© 

o 


03 


fl 

© 


v e ^ 


S CC C3 

o> 

•s *.2 

ta <- ► 

•< ®H3 

» ® g 
'8 5 2 
c ^ a 

« s « 

S^eS 

.2 -d -a 
■3 o> a> 
5i m 

r w 3 B 
fe 0* CC 
< 0) X3 


S3 

C8 

XS 

u 


o> 


o 

s 


a> 


S3 

0) 

0> 

£ 


a> 

tt 


03 

0> 

a 

& 


X! 

<o 


3 

OX) 

C 


co 

s 

O 


T3 

© 

a> 

S3 


o 

S3 


co 


CO 

a> 

0X) 


7 : cc 

O* cj 

a o 


§ 


© 

pfi 


0) 


03 

U 


CO SL 

V OX) 
© c 
TJ cc 
q> X3 
u CJ 
as 7, 
^ 2 

$5 2 
o S 
c/5 3 

e <5 

.2 ns 

« c 

g « 


c 

3 

S 

s 

® 


S 2 S3 

s 

m cu — — 


03 

S 


In 

.O 


Cm 

S3 


u 


a 

o 


cc 

1 * 


pC 

OX) 

3 

2 

J5 


CO 

a> 

^ CO 
CO 50 
• 0) 
u 

o 
u 

.ftI 


t#2 

ta 

«5 

C/5 


OX) 


C3 

a> 


co ,a> 

c s*-* 

Is 

ffl ® 

2.g 


5x) is 

«S ® 

3 oT 

CO 

© ^ 
©* 
£ o 

« * 


CO 

CO 

a; 

w 

o 


0) 


* M 


a « 

>> 


<u 


B *3 

- « 


mrn V3 

b fa „3 
«4l s 
£ c» fc 




Persistent Object Database Operation 












o 

Q. 


CD 

© 

T3 


© 

OX) 

fi 

CO 


© 


© 

Cft 

© 


£ P 


a 


*\ 

© 

>*■» 

CO 
CD 

S* - 
rj *fi 

w CD 
u 


CD 

X 


fi 
CO 

=S 

O ^3 


co 

CD 


CO 

*►» 

J- 
CD 
© 


e« 

< - 

05 o> 

® § 
CD 


Cft 

C 

CD 
> 

a 

CO 

V n3 
no ^ 

CD % 

B% 

o ft 

Z ** 

^ © 

2 Ji 

— rQ 

C gL 

•Jj* g 

Si 

<ns 

xn © 

fe CO 

O CD 


a 

Q 

© 

© .. 

31 


CD 

CD 


gP 

°o 

© 

si 

eft O 

Is ® 

O eft 
V3 © 
CO >r! 

r ** 


■8 

♦f< 

’© 

© 

© 

P 

© 

© 

£ 

© _ 

zf 

ss © 

CO 'g 
© & 

•s> 
&22 
qS 


U 

© 

cu 

© 

U 


^ Cn5 

£ u Su 


re 

© 

© 


•n 

eft 


eft 
< 

t» _ 

£g 

w© 


0) 

s_ 

58 


M 
<* «2 

► g 

BO 


eft 

58 g 

J/5 J3 

S c/i 

■g 

C/l S 

ta •-> 

< g 

05 O 


OD _ 

5 « 

tS § 

e | 

u © 

© 2 
.« © 

S©< 

© 

05.2 

eft eft 

»§ 

oo 


D-19 


Persistent Object Protocol 


d> 

■*-* 

g 

•*-* 

(D 

O 

G 

CU, 

d> 

4—> 

C/5 G 

4-> +-> 

*^“3 

rO 

o ^ 

W d> 

cj co 

2 ^ 

G d> 

c o 

<u 

5 u& 

Dw 
3 


c/5 

4—> 
Ul 

O 


CO 


bfl 

g 

c 

d> 


o 

d> 

© 

o 

u 

cu 

+*> 

C/5 

g 

o 

T> 

G 

O 

S* 

PQ 


C/5 

aS i-—< 

•8S 

P'S 

C/5 

G 


V-< 

X) 

<L> 

P4 


PQ 


V 

£ 

o o 
cn co 


o 

d> 

C/5 


o 4-» 

‘S ft 

>r—s 

♦5* G 


I 


—CO 

j cr_ 

d> "O 

**g 

j~i 

o 

C/5 
<D 

Q 

I 


o ;> 

<D !> 

7?^ 

■S <0 

O co 


g 

d> 

C/5 

2 

&< 

V-t 

o 

4—> 

G 


i 


c/5 

D.i 

O co 

PU . 


4-» C/5 

G g 

5o « a 

gpo 
&o 3 
o a .a 

.S.JJ 6 
OQZ 


G 

O 


G 

d) 

C/3 

2 

a, 

I 

i 


3 c« co 


G 

3 

<D 


,G 
<L> 

> 

bi) 
G 

*C 

G 
X3 

bO 
G 

• 

O 
G 
G 

13 
PQ 

8,1 

s J 

0* . 


C/5 C 

o d> 

hr* ^ 

<3 g 

<D O 

£ ~ 
+-» G 

(U &H 

j3 bD 


c/5 

0/ 


C/5 ^ 

Jj ^ 

13 as 

* r-< • 

,G > 
d> 0 

K> O 

JL G 

O g 

G JJ 

2 o 

*gh 

2 4-» 

.SPg 

Si2 



D-20 


Times Out 



Persistent Object Database 


to 

c 

o 




Q. 

E 


_ s 

"O © 
«*-s 

©2 


^ T6 
^ S3 


^ CZ5 

fe’S 


o3 S 


^ cs 


o 

u 


u 

0> 


68 

o 

U 


08 

P 


"O 

c 

08 


.© 


c/> 


•© 

53 


S3 

2 W 

i 13 


o 

y 

£ 

O 


< £ 


6* 

C3 


C/5 

0> 

Pi 


68 

.2 


08 

s 

U 

c2 

c 


OX) 

68 

O 

S3 

W 


Cfl 

a> 

HO 


► 

O 

P- 

Ph 

C8 


c/5 

pS 

P< 


C3 

Q 


T3 

a/ 


s* 

JO 

»pN 

U 

C/5 

s 

Cfl 


68 

P 


Jm 

(V 

W) 

u 

C8 

P 


no 

68 

C0 

s 

s 

o 

U 


S3 

0J 

U 


c/3 


© 

WDr_ 

W)fe 

o< 

J m 


u 

o 


in 

S3 


£ C® 

r A 


CA 

l* 


O 

£ 


S3 

Q> 

a> 

£ 


a> 

« 


t* 

0) 

L* 

u 

jv 


C/3 

ta 

<3 


w) 

68 

C0 

U 

H 

a> 

pfi 


© c n 
o 

£ 2 

o< u 


S3 

C® 

U 


C/5 


O^ P 



Fault Tolerance and Vehicle Migration Between 
SAFsims 




Architecture Design Obj 


l w 


g S3 

•S c® 

w OD 

a © 

! 2 

</> "S 

S5 

X 'O 

© a 
cu a 

S I/) 

© 

o *3 

w s 

•c .a 

cd +3 
u S3 

is 

■Si'S 

^ s 
X a 

© Cd 
ft"?*. 
ft §? 


§ P S £ 

s* fi *■< 


CA 

c 
o 

33 © 

iS 'S 

"3 S 

S >> 


od §, 
e & 


73 

o 

© 

S3 

ft 

.© 


<Z5 © 
^ S3 

pfi *S 
© © 
TJ © 
cd 05 

£ C/5 

s 

^ C/5 - 

•73 © C/5 

rs *© 52 

■s e s 

ft W ** 
© © 
O >© © 

w .© c/5 

O ** © 

OD *3 
Cd £ ft 

2 > a) 


p£ 

u 

© 

£ 

© 

e 

cd 

In 

ft 


Cd 

U< 

© 

S3 

© 

O 


c/5 ft ft O ft 


► 

© 

s* 

ft 


o 

© 

a 


© 

p© 


7 ts\* £> 


© 

X 

© 

© 

s 

p 


2 73 2 


© 

8© 

© 


© 
£ ft 


£ 

© 


s* 

** cd 

S 1 
s « 

JS S3 
a> cd 

* 

Q 


© 

© 

.g 

Cm 

5m 

© 


C0 

•pm 

C/5 

2 

c 

◄ 


u 

S3 2 


© 


OD 

C 


^ OD 
P OD 

© 9 
fl ft 


U 
© 
ft 
ft 
© 
C/5 C/D 


s 

© 

2 


Possible for User Interface to Explain Curr 
Language Independence 




Architectural Framework 


C/3 


O 


u 


c3 

13 

Q 

G 

O 

• i-H 

cd 


s g as 

<D O 5/3 
<z> +-» 
^ p G 

<M & | 

S ►»•§ 

5 cd a 

3 =s e 

*T3 7* 

O ^ 

.a o 


Ui 

O 


v-t 

o 

S-H 

.2 

£ 

•s 

ffl 


o 

<D 


<D 


CL.'G 

*2 PQ 


44 £ 

CO *-> 

H . 


G (/i 


2 « 
'S3 «J 
~ P 

^ V 


,-H <D 

Sc* 


0> 

s 

03 

l* 

fa 

44 

C/3 

03 

H 


45 

u 

u 

G 

t- 

0> 

9 


c 

p 


44 

o* 

55 

O) 

£ 

CO 

S* 

fa 

44 

c/3 

C3 

H 


44 

c/3 9> 

co §f> 
fa G 

gD § 

£ S 


03 

C 

fa 


44 

C/3 

CO 

H 



D-23 

» 





MODSAF LOGICAL ARCHITECTURE 



D-24 


Architectural Support I Terrain, Network, Control, Utilities, Graphics 

























Task Frame 


i 


CO 

p* 

CO 

03 

H 

OX) 

# g 

s 

o 

a; 

X 


CM 

© 

© 

G 

© 


.G 

O 

• 

4 —> 

O 

2 

C/3 

a 

o 

U 

a 

o 

• 

CO 

co 


s 

E 

co CO 

‘gu 
a © 

sZ 

tj © 

ag 

o .5 

UsSS 


© 

.G 




<Z) 

g 

o 
■ 1-* 
co 
co 


© 

&0 CO 

G c 

5).2 
•3 § 

j2 « 

<3 Q 

o* 
~ x: 

M % 

H o 


Vh 

© 


G 

p© ^ 

**■* CO 

•3^ 

CQ . 


•a c/3 
C ^ 

Ed a 

C9 

> <L> 
V > 

’7 vG 

XS Q 
.£?§ 
Ke< 


V 


CO 

M 

CO 

G 

H 

13 

J-H 

G 


G 
U 

ta 

TJ 
G 
G 
O 

L* _ 

W)Xj 

■g £ 

tt . 


o 

© 


co 

CO 

G 

H 

T3 
G 

2 

s ^ 

© 

o 


G 

m 


© 

> 


as 


D-26 


olding Area for Assigned Tasks 






Task 


!. 



M 

C/3 

c3 

H 

<D 

-M 

o 

<D 

X 

W 

X5 

£ 

8 

a 


vm 

o 

co 

cm 

O 

>> 

U *S 
o> o 

-2 « 

2 ^ 

3 ^ 

^ Cm 

4 *Z5 

1 § 

O i—i 


3 

o 


P* 

03 

CS 

• »-4 

C/3 

03 

H 

03 

5-4 

«s 

£2 

<D 
■+—> 

<D 


2 
Ph 
S 5 W) 

4) -S C 

*a.2 

a m 

I &§ 
s oS 

Ph . 


O) 

5$ 


D-27 


- Used by Software Model at Runtime to Reflect 
Internal State 









Unit Hierarch 


o 

a 

as kj 

W. A ' 


S « o 
S bO m C 

2 fcj Cj s 
H Pu 

Q i i i 


su 

5 6 

•S3 

b w 

O j> 

w> a 

< 2 

4 h 

fl ^ 

6J (/} 

g5 

8 C 

W )"- 1 

19 

< .tS ' 

fl c 
© * 

*53 53 

5/3 o" 

§ . 


cu 

S <L> 

^ s s 

Bog 

3 <■>& 

«.tS j* 
8 c % 

oO B 


D-28 






sk Frame Stack 


<£5 co 


a 

© 


jg 



a 

g 

o 

fid 

© 


£ 

ft 


o 

o 


•<m 




In 


CO 

0> 


Cd 

CO 


H 

P 


>> 



pQ 

pQ 

CO 

T3 

TJ 

© 

pp 

0> 

a> 

s 

pC 

pCI 

fid 

co 

CO 

u 

S 

3 

ft 

ft 

ft 


OJ 



CO 

es 

o 


cd 

o 


c ^ 

O T3 
£3 O 
o 5 


a 

m a 


£'H 
0) c 

S3 

s 





Enabling Tasks 


v 5 

S-2 

« > 
J* D 

r“ M 

W Oh 

•£ a 

£ ^ 

pH on 

£ - 

O _ 

a> .2 
« o 

S 5 

s « 

O* 

C» M 

on 
C3 ctf 

C/3 *"* 

es SP 

§ M 

.2 *§ 

c/3 a 

.aw 


C/3 
ft <D 

.2 « 
u u 
C iO 

§ 13 

op s 
a o. 

t£3 '*—> 

9 § 

u a 

O Oh 

« a 

^ 

C/3 

H <■* 

. 5/3 

cb cd 

c/3 *"* 
C3 bp 

22 .S 

11 

J w 


2 . 2 . 


C/3 

p£ 

C/3 

C$ 

H a, 

bD fe 

a 3 
sg es 

PQ fc< 

c* 2 
fl Q* 

wo 


D-30 






Task Manager 


T3 

S3 

a 

u 

v 

s 

s 

z 

P 4> 

ns 

o 


S3 

a> 

o> 

£ 

15 

pO 


.2 

*3 

o 

<» 

c/3 

< 

5n *■< 

£ <S 
.2 £ 
W)4S 

QJ o 

«£ 


>> 

o 

S3 ^ 
0) 

c« 

s § 
« 2 
Q* S 

CD O 

M 

pC 

CJ 

C 

tS ■* 


Q 

I 

Sm 

0> 


C/3 

0> 


S3 

C3 


ttf) 


cd 


C/3 

<D 

6 T3 
g S3 

£ «* 
G O 

CTjZl 
CD O 

2 «s 

rO CD 

r5n * 4 " H 
C/D o 


m C/3 

H g 


C/3 

,_ <D 


a a 


o 

S3 


•aS 2 8 

— 1-3 2 

o 5p«j£ 

• i—l • < r, HH 

U «3n ^ 

>1.3 § 

1 ?l5 

OP G 
^ ^ m ^ 

03 ^ C/3 

OD o CD > 
1=3 CD <D £ 

O ^£3 ^3 2 
UUUH 


D-31 


Assemble List of Tasks to Execute 

- Sort Execution List 

- Compare List to Last Tick, Suspend Missing Tasks 

- Execute Tasks In-order 








ModSAF C2 Implementation 


cd 

u* 

_ <D 

8.C 

> o 

W a - 

2 

«-« W) 

S 

ao, 


C/3 *-< 

+2 <D 

s 


s co 

£ cs 

<D ctf 


HH 

3 U 

O HH 

C H 

© to r* 

S g.S 

>fi£ w 

ga^g 

C/5 hJS hH 


&<X> 

oo t; 


>> c3 
o +-> 
» 00 


(U ^ 
^T3T3 
55 O <0 

f2u ts 

u &B 
S 5 o 

^ P t 

*-> Vh P 

ooc 

I I I 


M 

C/3 

cS 

Hi? 

o 

+5 O 
v • ^ 

o S 

«s i 

s I 

G S3 

£ < 


D-32 


- Mutual, Context Free, Context Rich 

- Pull-based Information Flow 

User Interface in Terms of Tasks, Task Frames 

- Automated GUI Generation 





Mission Example 



-33 


ROUTE 












ModSAF Interfaces 
to Physical Models 




ns 

o 


X 

u 

G 

w 


co 

£ s 


fa 

Id 

a> 

aS 

s 

co 

CO 

fa 

a 

o 

Cm 

a> 

N 


SS G 


a; 

u 

co 


"d 

o 


CO 

o 


CO 

I 1 XX 

CO 


CO 

S3 

>> 

Q a> 
^ co 

TJ CO 
a> pQ 

SPeS 

S3 

co 5 

pd Q 

U co 

%"> 
^ a> 
S3 y 
CO eS 

y* o> 
0> S3 


« . 

s \ 

S 5 ? 

fa ^ 


Jg JS 12 5 


’g s 
<2 ° 
IS & 


ns 

o> 

0> 

C 

G 

O 

U 

•S3 o 
JO 

CJ C*-* 

S t- 
« o> 

pQ « 

o* 

^ cj 

fl *c 
oj g 

5/5 G 

*35.« 

t* 0 
« 

eu c« 
— a 

V •— 
"O ► 

.2 a 
^•2 

”« .2 

•- 3 

g?.S 

£ M 

X x 

u +* 
CO o 


co 

£ 5 

X 

s| 

i? 

fiX 

V o 

o 2 

(u-a 

€4 

w ,2 

<S S 

co ns 

fad 03 

3 y 


a> 


CO 

S|* 

G Sd 

S* 

G g 

fa ^ 

O 
a> -G 

5 *3 

wd Sf3 

3r o> 

.S a 

bcJ2 

g'C 

G 0> 
•G * 

u5 


D-34 


Runtime 

This Capability can be used to Support Variable 
Resolution Simulation 

















ModSAF Terrain Databases 



l 36 














ModSAF Component Terrain Usage 



D-37 


















Compact Terrain Database (ctdb) 


& 

* w> 

H.5 

jo ns 

C3 ^ 

Q 4> 

^ c/3 

c 5 

O pfi 

tc c« 
5 Is 


w.S 

CM CS 

® t 

.2 H 

C/J Cm 
C/3 O 
4) ® 
0> 
a ^ 

2 3 

o <s 

uz 


CQ 

u 

© 2 
h B 

.a & 


u 

© 

Ck 

a 

0 

C fl 
c/3 

c/3 

W) "S 
T3 

*C O 

« § 

«.s 

-T © 

& 

© H H 

cuU * 
s >» b 
v> « jS 

c.i tJ 

*2 c2 

fa 

HtfS 

"315* -S 

^ fl _H 
© S *2 

3 g g 

i-S g 

5 i « 

S«2 O 


C/3 

© 

| V 

a.i 

c 

.52 a 

Q« 


g. 

e 

D£ 

© : 

u 

ta 

© p 

.H f 
2 

'2 ? 


© : 

H3 
© 

C/3 

p : 

C/3 

© p 

p£S 
© 

w c 

3 ' 
© 

u • 
© 

& 1 

c/5 


D-38 


Jbitiicient search Algorithms tor Jbievation lookup 
Intervisibility Calculations 

Optimized for RISC Processors 










Compact Terrain Database 


no 

•pp 

u 

o 

c 

*3 

u 

u 

CZJ 

© 

•pm 

© 

1 

OX) 

ss 

& 

o 

• P«4 
2 

> 

0) 

u 


3 

s 

pa 

• 

• 

• 



D-39 


Canopy 

Linear (roads and rivers) 



Quadtree Database 






















Quadtree Feature Networks 



D-41 






Interfacing ModSAF 
with Other Systems 



D-42 


through PO Database 





ModSAF Versions 



0 

o 

• MB 
> 
co 

CD 

>, CD 
•= ID 


n 

co 

a 

CO 

O 

“D 

C 

3 

O 

5 

15 

mmm 

IS *o 

CO o> 

JBI 

c CL 
— Q) 

CO 

*c 

CD 

CD 

(J Q) 

ii ^ 

^ a: 

CD 

CO -Q 
"O £ 
O K 


CO 

Cl 

co 

O 


o 

0 

T3 

C 

co 


i? 

*o 
O co 

- CJ5 
T— .Q) 

11 CD 

^ CD 

CO 

"U£ 

o K 


CO 

0 

o 

0 

T= 

0 


0 

CO 

3 0 
“o .S> 

O .ti 
O = 

c -Q 
cxs g 

> 9 

~o 0 

<o 


CM 

LL 

< 

C/> 

*D 

O 


D-43 


IFOR Al Based SAFOR Built on ModSAF 

Capable of Learning and Adapting 






o 

o 


LL 

O 





o 

© 

.© 


s 


« s 

CD 

a 

CO 
CO 

o 

1^ 


in © 
CD -M" 

▼- in 
co co 

O CO 

co in 
co in 

fe 2 

CO 


CO 

o 


<0 

S 5 o 

c O 

CO CL 


1 8 

2 H 

Q- CO 


O 

O 

CL 

Q 

co 

DC 


© 

2 

u 

CD 

S i 

If B 

So© 
©, O o i= 
E DC c 
co G 2 
z| O CO 


CO 

O 

O 

a. 

</> 

o 

< 


© 


E 

o 


2 E s 
Eg© 

lil co 2 


1 & 

CO Q 

.2, E- 


E 

8 

© 

o 

co 

© 




o 

in 

r^- 

•M- 

3 

CM 

co 

o 

CM 

CO 


"M" 

CO 

CO 

co 

CD 

CO 

r^- 

r^- 

h*» 

N. 

co 

co 

CO 

00 


n! 

h-' 






CO 

CO 

in 

CO 


111 

CL 

© T- 

SI ® u_ 
5 "o < 

CO g -D 
©CD 

a o s 


N 

o 

O £ 

S gj 5 <2 

® 2 I « 
o « <g 2 

E TJ O t 

CO C Q o CCS 

Z < CC O ffl 





4 


4 


4 


4 


1 

i 

I 

c 


D-44 






ACRONYMS/DEFINITIONS 



E 

u_ 

o 

■4—« 

CO 

tr 

0 

in 

CD 

Q 

c 

CD 


CD 

C 

*0 

h- 

c 

o 

o 

■4—« 
0 

□l 

CO 

Q 

CO 

E 


CD 0 
O O 
C CO 
0 T= 

CD 0) 

= tS 0 


>s 

;> 

"■4—' 

o 

< 

0 

'in 

0 

< 

0 

E 

0 
-4—• 

0 

5k 

CO 


0 — 

C TO 
— 0 
O 


0 

C 

C 

_0 

Q_ 


0 

CO 


c 

o 

3 

E 

co 

_0 

0 

c co 
.2 c 
0 J 
3 ?q 
E 


0 

JO 

E 

o 

O 

v— 

< 

I 

O 


O) CO 
c c c 

rr cj 


0 © 
CQ O 


U) 


<n 

ffi £ 

co g 


0 

o 

3 

< 


0 

> 

TO 

< 


0 
tn 

V. 
0 
> 
TO 
< < 


0 .2 0 

CO CD 

U- 
0 


5k 

E 


0 

TO 

0 

CD 


g 

3 


c 

g 

’0 

o 

CL 

0 


•7= TO 
0 r- 


3 

0 


.5= ’El 0 0 0 V V 

< CQ CO CQ CO O O 


0 

TO 
C 

“O © 

§ I 

oT o 


O 

3 

k_ 

0 

_C 

-4—« 
0 
JO 

E 

o 


< < 


< 

< 

co 

S CL 

< < 


2 co 

5cD Z Cl 
< CQ CD CD 


O 

< 

H 

< 

> CM 2 O 

CQ O O O 


D-45 


Company 





ACRONYMS/DEFINITIONS 


•c 

CD T3 

52 c 
CO co 

o 

Q. 

-Q 

CO 

£ 

CL 

CB c 

13 

CO 

o 

“ o 

CD 

•= o 

O 

2 O 

£ 

w. — 
CD JO 

CD 

1— 

CD 

CO 

^ > 

t . 

o 

CO 

CO 

CO 

-O 

Q. JQ 

E 

E 

E 

o 

o 

o 


O O O 


<D 

^ £ 
c5 ^ 

c a 

— c 
TJ — 
(D CD T3 
C/> £ CD 

CO § *3 
QQ ° jo 

co E ^ 
*co AS .52 
Q Q Q 


CD 

■D .* 


A 

>S CO 

c c 
< HI 


Q> 

® *- 
O CD 

- -S 

< o 

co >* 
m c 


S £ 

? o> 

o 2 

LL LL 


£ co 

7" CD 

o 2 

t w o 

o = u- 

Q* CO c 

3 .2 0 ) 

«■§.-= 

CD CO CD 

il O I 


CO 

rn O >» Q o 

c/) q O *5 < o> _ £ 

w h > m - 2 ch< 2 c/) P 

OOOQQQlUIUIJ.ILU.Ot 


D-46 








and restart 

SAFsim SAF Simulator 








SNOIHNIdBQ/SIAIANOdC 


0 O 
c >* 


S2 0 
.= 0 
eg 'q 

o ® 
O o 



4 ^ 

O) 


O 

0 


0 



• ■■■• 

O 

o 


CL 

c 

o 

*0 

O) 

c 


0 

• <■■■■ 

O) 

0 

U_ 

o 

o 

o 

O 

CL 

x_ 

o 

£ 

h“ 

LU 

O) 

• «M 

o 

Z 

0 

_c 


0 

0 

o 

E 

O 

0 

0 

Lc 

0 

k_ 

Q. 

0 


o 

*♦— 

6 

c 

CO 

< 

CL 

E 

0 

■ 4 —* 

0 

o 

o 

cc 

0 

— 

< 


CO 

Q 

< 


o 0) 

c I 
.2 2 
o LL 

0 JC 
== 0 
o CO 

O f— 



0 






c 

o 

•M 

LL 





0 

E 

0OT 

0 

O 

1— 

0 


H 

LU 

rr 


0 

ul 

0 

LL 

< 

' c 

0 

o 

o 

z 

Mil 

< 

o 

0 

0 

0 

0 

CO 

CO 

CO 

CO 

CO 

H 

H 


D-48 






APPENDIX E 


COMPUTER GENERATED FORCES BRIEFING 
(INSTITUTE FOR SIMULATION 
AND TRAINING) 


E-l 








E-3 









IST's CGF Research Projects 


a 

Cfl bo 


W 13 

o is 

S-° 

"d % 

SO 

3o 

3 a 

52 
ffl a 

•w ^ 

a <^> 

53 5/3 
2V ^ 

.00 «h 

2 o 

0^ • **h 

</5 

5m 


$o 

o O 
o 

V H 


On g 

£ S 

S & 
Z oo 


St 

r?j 


■« sgR 

■g g92 

s|Uh 

■s £9 -. 

C«2®v n 

3m£ s 

a, 

wOZm 


Sco 

to0>—< 

& Q 

oto 

SO 


"m S)W 

es j>Z 

©&S 

60hh 

0*2. 

^>2 
O 'O - S 

« o es 

«s1 
»|1 
W 8-s 
■a ■ > 

3J Cd O 

18*3 

00‘rt o 

s-sa 

53 ^ 


go 

o U 

92 


o\ to 

£> ° 

2 § 

£ a. 
Z co 


E-4 


Standards, databases, and CGF software for Electronic Warfare. 
N61339-91-C-0091 (ECP to DIS Standards) 

Sponsor: STRICOM; COTR: Williams; PI: Wood 



Topic Presenter Duration 




o «r> m m uo 

hhh O *—i 


Jp 0) <D 
Ah Ph Oh 


H-* ^ 03 
Jp <D*-< 

PhPhU 


•S 

c3 

<L> 

co 

<D 

U 

Oh 

0 

U 

co 

H 

oo 

HH 

4 h 

O 

£ 

.a a 

*h hr 
<D Oh 

> <£ 
Oc/$ 


CO 

<D 

O 

»H 

O 

Oh 

T3 

<L> 

H~» 

cd 


CO 

Q 

CQ 

W) § 

W oo 

<p 


Oh 

00 


f? 


831 


«H-H 

O 

£ 

<D 


O 

co 

cd 

<D 

Vh 


a 

o 

• pH 

CO 

s 

c 

O 

o 

ctf 

T3 

< 

6 


> 

u 

<u 

> 


a 

a> 

c3 toX) 

toO^O O 

a> <D 

a a 


.Su 

2tu 

so 

HU 


E-5 

































/ST CGF Testbed Components 



Used by CGF Operator to command the CGF entities 
Mouse and keyboard input, plan view display output 
01 and Simulator communicate via main network 









1ST CGF Testbed Characteristics 







w - 

• 



• 

+■» 

c 

<0 


• 

c 

"O 


• 

A 

0) 

*-» 

c 

3 



o 

VO 

• 

E 

(0 

IH 

s 


Q 

1 1 

u 

A 

(0 

1 

m 


<D 

ON 


O 

1 



ON 

• 

O 

cn 


U- 

cn 

t-H 


■D 

vo 


0) 

+■* 

<0 


• 

E 

o 

+-• 


• 

• 

3 

< 

1 

am 

E 


• 

• 

• 

• 

CO 



E-9 







Real battlefields have dismounted infantry; SIMNET doesn't. 


CO 

• *—i 
> 
o 

Vh 

co 
►—< 

Q 

H 

ffl 

£ 


co 


<p 


o 

s 

C/3 

• i-H 

T3 


1 


fi 


H T* 




s «* 

.as 


<p 


5/3 

0) 


a <l> 

S <D~ 

g 

O ^ «5 


<D 

> 


O 

C/3 


^ 

<P O E 


. CO 

E 3 


« 


CO 

w ^3 CO 

.22 >* g 

o 

co rv 

s s ^ 

9 o <D 

2 

O P T3 


co co 


*8 

O X) 

o 3 8 

*= CTj.E 

^ CO o 

3 3 s 


<u D 
25 vh »h 

goo 
G *—i 


G 

< 


s 

O 

Q 


Z iS 

<2 ■ ■ 

E-10 


H 

H 

U 

U 

• s 

S?3 

a § 

<2*° 
G G 
o 

bp*G 

G 

• »H * "" < 

G G 


u* 


O 

s 

co 


C/3 

QJ 

T3 * ^ 

.9 > 


4^ <T3 

.9 2 

toD 9 

Mb 

a s 

*73 co 
G 1 

s 73 

*3 2 


cd g 
3 O 
!•* 


§ 

•§ 

G 

*-i 

a 

<D 


& 

<D 

*-( 

co 

G 

O 


co 

I 

■8 

G 

Wh 

G 

<D 


G G5 G 

p1 


H 

W 

Z 


co 


co 


2 1 

3 " 


I CD 

|s 

&<a 

o 4 <3 


rl ^ rt'k A3 “ r 1 - ^ 


CO 

G c 
o o 

CU CO 
O . CO 

^cu 


G 

to 

3 

> 


13 

G * 
<D £-H 

oo 

£U 


Because of scarcity and lack of realism, the Dismounted Infantry Module 
(DIM) does not meet these needs. 






c 

CO 


*o 

© 


o 

E 

(0 


CO 

© 

o 


TJ 

© 

© 

E 

o 

«-> 

3 

< 

I 

E 

© 

<o 


Cj 

1 

CL 

§ 

CO 

Q) 

€ 

O 

co 

2 

0) 

c: 

Ct3 

Cfc 

O 

CO 


a 

o 

3 

3 


CO 

1) 


a 

.2 

3 

3 

> 

<L> 

Vh 

<2 


gss 

So 

>> c3 

^ a 

p-t 

O b 

a 


g d'a 

<d -<-« .a 


3 

CO 

CO 

1 


*3 

<U 


O co 

ss 

co *n< 

jw i 
3 co 
PQ 
^CQ 

Ctf r. 

<L> m 

ag 

« 2s 

cd 00 

o 

O ■ 


CO .rj 

.as 


1§ 

&s 

fr.SS 

£*?p 

g.S 

<2 p 

•9.9 

S c 

3 <u 

O Vh 

e cu 

Cl 
co rr 

• w* rS 

T3 CU 

&. & 

O P 

3 

> .^3 

O 3 

Q« 


E-ll 


T"\ck1 1 A/f 1 !*?! T"\1 f 1 Q 

■ Basic SAFDI system (August 1993). 

■ Enhanced SAFDI system (February 1994). 







User evaluation of SAFDI 


c 

m 


■o 

© 

+* 

c 

3 

O 

E 

© 


m 

© 

o 

>» 

o 

u. 

■o 

© 


co 

<U 

co 

:§ 

2 


cd 

a 

o 

•IH 

•w 

cd 

3 

> 

<u 

t-i 

<u 

co 

3 

J-H 

£ 

3 

a 

s 

s 

<D 

4—» . 

£S 

co <D 

Tl <*> 
>» 
co 


<D 


3 S 

a - a 


cd 


cd 

Wh 


CO 

•rt CO 

M -tf 

P § 

£ « 
<1^ • rH 

D 4-» 

E— I JD 


Cd CO 


<D 


t-H 

O 

S 

3 

»-( 

o 

• 

0) 

H O- 
cd 

gH 
.2 0 
su 


oo 


£>3*0 
g 5 
fl > > 

(2 C! g 

.1 ° & 
i “ 1> g 

! .a -s 

! cd co A) 

; £*SS3 

; o j§ g 

! Q< 0) 

« o o ■«-* 

: T3 G co 

,2^ o a? 

1 s a ^ c.. s § 

t <u6q w 2 

^•oE.2 ; 3a 
1 1:3 < > <* * 

? t o o oo 3 o p 

2Po o 
~ b’S.9 o'.=S 

- § ° c 3 &a 

:2 S ° 2 "* § 

i §S* 

|| 5.3 SS 2 

! C/D co W cd P*“ Oh 


O co 

JJS 

CO o 

>*s 

is 

1| 

cd 

T3 3 

§i 

O CO 
O q,) 


E-12 


Effective evaluation of SAFDI will require its use in training-like exercises. 







SAFDi entities 


*2 

H.S 

o § 

S ° 


o-S 

■5 ca 


g o 


«o£o 

Q < 00 Ph 


X 00 

8‘3 

« S 


o qj 6 

•fl •« o 

« 

?>• C5 • r' 

op c i 

.a s& 

*3 m 53 

op<N CQ 

4-h . „ 

g?a> 

( cd ..^ 
,h PhO 

ih wrr 

Q 00 Ph 

< 

in u m 


oo *-• 

c £ 

* 3 

cd S 

£ O 

H <sl 


c /3 H • ~ 
^ <N 

5 £> r-- 
cd O „' 

^ h H 

u •- 

T3 rH •* 

|SS 

S-S 

IS* 

B §0 

HH Xh rr 

Qvi& 

PjPO 






Basic SAFDI capabilities 


c 

© 


*o 

© 

c 

3 

O 

£ 

CO 


CO 

© 

o 


■o 

© 


a 

o 

*—j c-* 

<D 
<L> 


CO 


c: 

Q) 

s 

o 


<L> 

3 

CO 

O 

CU 


„ a |M 

S.SOS 

O o - bp'*- 

§ gja.a g 

1 * JI * 

ft 2Q 52-13 

81 oj2 

c3 c 
~ O 


! 

V-c 


Vh 

O 


co 

<D 


O 

CS 


bO 


2 9 

<l> « 3 

a»&l 

_g >> ° 

-o *§ 

-1 


co 

T3 

O 

S 

aS 


2 S 

00 V-, 

W P 
u 
O 


<D 

'w' 

CO 

<L> 

bp 


43 

o 


<D 

bfl 


43 

o 

#v 

<L> 

> 

O 


a 

<D 

s 

<D 

> 

O 


ctf 


<D 


a 

Vh 

<d 

Dh 

o 

1 

•c—> 
<D 
CO 


cd 

»-l 
0) CO 

CL <L> 

Q g 

to 
° O 
P, 


<L> 

co 

co 

0> 


'd a 

33 a> a 
5 o «2 

04 oo Ph 


o 

• 1-M 

ctf 

a 

I 


CO 


<D 


.33 <D 


co 


cd 


ed fTl 


bQ 


a> 




Ph 

< 

00 ^ 

55-a 

a-3 

CQ > 

r- <D 
co 4=4 

W) 

Ml S 3 

&§ « 

o g -a 

.3*3 § 

ud o 

^ s s 


« s 

T\ *H 


goo 


CO 


o o 


co 


■S ^ 


<L> 


E-14 











Basic SAFD! capabilities: Combat 


§ 


d 

J8 

co ^ 

O *53 
• ^ o 
a> 

8 o« 

a> 

s § g? 

£>§ 2 
fi bD 2 
fl H 
,03 bfl’d d 
T3 d 3 Si 
•d 

g ° £> ?) 

S g.a.fcs 

<D d 

?-3 C*5 ■ ■ 


0) 

g? 

§ 2 

* ^ 

•5J T3 
*-< c3 

.2 § 

^ GO 
a) b _* 

£?*2 

s§| 

3 6p£j 

M-S >, 

• i-H ^ Q, 

-d u S 
Cl 23 
P (D co 

O I-T—$ (1) 

o ^ c 

>>3 s 

g S * 

o’Z3 y 

xs S a 

cd g 3 bp 

E21 g 

fa&S 

c * o 

rn <L> <D*d 

§• o d S 

gj2 O £ 

Js OT2 0) 
*7t _. **a co 

° a a <u 

+j o 3 t 
0) ac c 

Svm 
Jh <u c Ch 
cd ^ 5 o 

H *> < co 


■a 

2 ? 
•H U 
<4-1 1) 

>vd 

g 

is 

0) 

>>3 

45 Id 
T3 o) 

p d 


-S2 g 

S a 

^ <D 
CD .b 

W) <d 
rS d 

H *1-H 

§ 3 

»»-H 

Lh 0) > 

orj 

Ll3 co d 

dr O O 
^ »—< •rt 

S-al 

55S--g 

D '«—> 

■s as 

•S 82 

1 a ^ 
s-sg 

fe<s 

<d d £ 

2 CO 

" 2.3 
S3 § c« 
73 S S 
2p§ 
{.S3 
>n-< 


5,j» ° 
Be o £ 
M dfiifl 

D O C 

22*3 8 o 
d cd «5 

1) c3 H cn 

Vh o d (Li >n 

<d _ W)oo cd 

>,83.2 S 

S ^ o d d 

S g.s s a 

>, B ~ a a 
•S y »&£ 

^ ‘C2 >^T3 T3 
Q-> <L> <D 

% £Pcd co co 
S3 d •*-< co co 


^ un"*-* <D 0) 

CO CO CO 

SS d *55 CO CO 

2 '3 3 8 p 

o E ^ b b 

S** /—> Cl Cl 

o o cc 

rr rj d d 

w m d C/3 C/3 
<D 

PQ ■ ■ ■ ■ 


E-15 








C3 

o 

-t—> 

c3 


*8 

o 

• fH 

8 

CO 

"D-> 

<L> 

»bo 

C< 

c3 


<D 

d> 

co 


JD 

<£h 

4h’ £■< 
° 


OQ> 

8 


8 

C3 

a 

<D 

S? 

co 

co 

<L> 

e 


Td 

<u 


*d D ™ ,H 
Td ^ 


’S 


u 

o 


CO 


t-i 

• t O 

4-h 
XJ »H 


'O g 
* 

03 
U 
<D 


<D 


GO 


<D «m 

. n a 

"1° 
00 

2.2P§ 

CO P 


O 


8* 


S HH 


s 

• 

hJ* 

d 


S3 

o 

•1-H 

i 

e 

s 


£ « 
§"S) 

•r< 

> co 


to 

Vh 

<L> 

* ^ 

§ 

o 

o 


co 

<P 


o 

a 

<D 

Td 


d) 

Td 

o 

S 


CO 
-t—> 

n 

a> 

Vh 


Q 

Ph 
§ w 

i 2 

Ui 

o3 id 

Cm 0) 
Vi 

O 

a 
2 


CD 

'Td 

I 


8 

h-> 

Ui 

O 


<4-1 

o 

8 


W) bC b£> 

a c c 


co 

C? 




X3 XS X3 
bt) DO bfi bD 

• 

00 V) GO GO 


P4 


co 

<L> 


v-< 

2 

03 

Ui 

- *-i £v 

£2 2 & 

gg o 

*3 «~ 

3 Oh CO 

a" O bp 


2 u * a 

g.13 S‘s 

■f^-a 


C3 

<L> 


Vh r . co 
d> <2 _. 
X2 12 ^2 



£ C3 hO 

V-i d> O 
(D 0) O ft 

c3 o c3 Vh 
cj 

.S M CO CO 

2n ^ ^ 

c— CD *»H • —* 

P FT’ 4-> 4-* 
C3 tp *d2 'O 
P < c 

geo W W 


E-16 





Basic SAFDI capabilities 




K r Ot 




23 J-l *3 
a g> Cd 

ttf)45 ^ 
**-( txD CL 
co .cr 
co h <D 
M 
0*45 


kO cu k5 

2 a.S 
B w 2 

”•52 cd 

% % 5? 

3*8 

■H <L> _ 




45 a> 

o __> C3 

^3 fH as 

cd <D E O 

M ' ! 

D o co co 

2| §•& 

a> S o o 

43 O v-i j-h 

gooo 

J-l 

u ■ ■ ■ 


s 

e 2 |s 

O- g5 

CO 

« few 


S^D.g 

1h bi) a> co 
O a :Xi a> 

•s-S—s 
3 <u ^ s 

og S § 

SS fcp^JoQ 
S* E ^ cl* 

§•§« >< 

“ Q 


Q « 


OW 


CO -*_> „ 
2.. 2 
.§ 
s 

CL o 2 

tr »-H o 

i? o f i 


S p &- u .s 

£ &S >>j 
b^O-n'cH 
CJ 2*d 

Cd <L> <D C < 
o o j-h C > 


-^4 

a> ^ 
CL fe 
O ° 


s ?, 

„ x fli P-?* ^ 

2^ g 2 o 
3 c P <u 

2ooOoo 


E-17 







Group Commands 
Example: Mounting 



E-18 





































Attach and Follow 
DIM leads assault 



increases speed because of 
eater travel distance 









Basic SAFDI capabilities: Configuration files 


r 


c 

«3 


■o 

© 



"O 

<D 

CO 

O 

Q 

. CO 

co cd 

g-s 

S3 
£ ^ 
Ch S 

•w4 

aj ^3 
CD X 

is w 

cd -»-» 
co 

jg a 
•S3 cd 

«•§ 
•S > 

2ii 

§>•§ 

8 o 

H- 


E-21 


File format designed to be easy-to-modify by site support personnel 
Parameter values are completely documented in the SAFDI Support Manual 













Functionality testing 


c 

CO 


TJ 

0 

*-> 

c 

3 

O 

E 

<0 


CO 

© 

o 

k_ 

o 

U. 

TJ 

« 

© 

E 

o 


c/a 

(D 

2 

cs 

PL 

< 

00 

£ 

CQ 

PQ 

c/a 

> 

HH 

A 

PL 

< 

oo 

*a 

cd 


PL, 

< 

00 

c/a 

> 

HH 

A 

Ph 

< 

00 


c/a 
<D 
> 

.43 tj 
MbpSj 
« 7 
« .p 

4-i 


c/a 

4, 

O 

4, 

4, 

<L> 


2 

c/a 

c/a 

4, 

<2 

T3 

■S 

<7 

£ 

c/a 

4< 

0) 

> 

4-i 

<L> 

c/a 

O 


s*g 
° § 

8 « 2 p 


c/a 

<D 


4i 

7 

<D 

O 

00 


c/a 

4c 

S 

c/a 

<D 

H 


C/3 

D 

H 


c/a 

s 

4> 


<D 




c/a 




00 


E-23 






Examples of difficult functionality tests 



E-24 









E-25 






Network load capacity testing 


Q 

& 

< . 

C/5 

+-* 
fli ^ 

■s *-* 

i o 

°'S 

a a 

V3 fl) 

<D o 

£—I </3 


<a £ 

(U 

T3 o 
XJ *S 

a 

<L> > 

Su 

as 

•»-< Vh 

<N ° 
^ (in 
n£< 

o ^ Jz; 

'ggffl 

§1® 
83 « 
“t»g 

6p_ a> 

• SOS 
tgfc <u 

+ 

•o^o 

03 <N OO 
O 


*2 

C cq 
cd ^ 

a) 

£>,2 

S o 

t- . 
<D *CJ 

> bO 

O •«"“i 


P4 

O 

«Z3 P-l 

o 

• Sh b 
b3 d> 

VrG 

>■ 

T3 m 

SQ 

o£i 
b <! 
w oo 

<D /-s 

-b o 


a •a 

N S 


}_, ;-H 


<D C « 

>■ O *5J 
bi) *-i «3 

(D °<’3 

£ <L> r _ 
+* b*)2 

/-N Vi £ 

2 b O 


b j 

5 


o Q 

•»H f7^ 

b ^ 

n< 

Oj C/5 
O 

00 ■ 


*& b z a 

°*.S 3 3 

D w ob 

b *b fa ca 
o S *3 .5 

M i-l'CJ V3 
<L> 

■ Ph ■ ■ 


*-i i 

Vh ’ 

M X 


E-26 


Additional entities on other exercise IDs 

Non-SIMNET traffic on network (Internet or sendfile/getfile utilities) 









•2 g 

3.2 

+-» 

co eg 

HH 00 

Qm 

<Ph 
CO < 
^ CO 

• fh eg 
O C 
eg vh 
CL, CD 

cef £ 

O.S 

V, <N 

r-H 


H s 

£2.2 

-t—> 

^ a 

T3 ’So 

3- 

»-i a) 

o So 
Qh ^ 

CO co 

'S o 

s* 

13 a 

& o 

s 13 

o ss 

*-i eg 

Ph PQ 


eg 

• 0 
4-» 0> 

• *-H 

2 x 

a," 

eg O 

O VO 

li 

o eg 
eg a 

’O a> 

a> -s 

"S c 

eg •»—( 


<D 

g> 

eg eg 

M s 

bp 53 

a ts 

•J-X x 

£ « 
bOO 
•3<N 

- r-H 

co 

O 

l h lg 
W o 
m H 


Td 

<u H 
ui eg 

o o 

0 Cm 

•SP’S 

p.SP 

is CO 

eg 

0) 

JS3 £ 

D<2 

& O O 
co *03 eg 

t3 *C B< 
tg 9 m 
O i ° 

o Td 

J-H T3 

o-2 

> co *■* 

> T5 CO 

« o u 
fit fl 

1 

Sg'*'- 

" 5t3~ 

1^18 
§ E-j K 

* 2 oD 

Tj CO J-i /-\ 

g >,ftW 

^ CO o,Ph 

o ^cg 

^ U* _r* Cd 

•S S’! a, 
«3 ® S S 

2 

S £ § ° 
“txo bp S S 

iS.STd'S 
C in cti S 
3 o g 

1? Q I—1 e3 

04 

- ■ ■ 


_J iS 

1* 3 

r2 S 

^co 

J-i _, 

o*3 


CD M 

a O 

co 

<D 

S'S 

3 B 

(3 

.3 2’2 

•a a § 


’SS'S 

§ &> 
s|o 

S « a 

+-* X) o 
o o eg 

o^TJ o 

is 

£ § 8 
HH j^j 3 

q ^ cr 

ll, o '3 

< M 
3 « 8 

o> Iz; h 

rO 

H ■ ■ 






S/MNET problems related to SAFDI: Manned simulators 


p 

o 

& 

& ss 
a) ^ 
TS T3 

•—< (D 

3 fc 
1/8 
& p 

Vh 

o a. 


bO > 

a) ^ 

PT3 

l|i 

^ c5 
2 <l>:P 

’H-° g 

OQ rt 

O a >, 

o a? 

C< 03 P 
o o 

<D Vh 

> >» P 

c3 ^ 

^ S ° 

t/5 ,P <D <D 
^ Vh 

0.5 * cp 

1:8 15 § s a 


■aigas 

CJ rH <D &0.P 
C H H „ Cfl 

« |S.S 3 

X3 g a3 ^ 

§.i'S 2u 

|Q° ■. 

s ■ ■ 


>«-» ^ 
co ^ 

CO 

£22 ta 

e‘f | 

«J§ § 

u vC 

£ %<i 

■-a a 1 ® 

o 

■ ■ cu 


r * co 

go 

3a 
2 > 
.5 ^ 
03 <8 
2 q 

&2 

•i-H 

• 5 H ' _J 

X) 5 

S x 

2 1 ^ 
o 
o Q 

0 co 

Sjb 

_**- 

.2 a 

x 8 

03 «= 

0 SL 

<-> g? 

?P ^ 

‘BQ 

u< 

05 on 


§< 

<D 

Ui 

CO’S 

Ld <D 

a’g I 

2g“ 

P c O 

pub 

•S Q ^ 
6/3 3 

M ^ g 

•a 0 6 


S3 a* 

w CXd 
c* 5 H 

_5 

C/5 T3 
P *rt co 

°1 s 

i£i 

^§ 

0 a p 

v-t <D c 

«3 g a 

HH ^ ’S3 

5< *-* 5 

Mop 

^».s ts 

bo^ 3 
pop 
• S3 «i-H 

I’Sa 

§*:§ 


E-28 







SAFDI Delivery and Installation 


c 

© 


-a 

© 

*-> 

c 

3 

O 

E 

» 


m 

« 

o 

w 

o 

UL 


<D 


<D 

.O 


£ 

o. 

<u 

m 


o 

<D 

<D 

£ 


a 

o 




C/3 

<D 

rt O 
*-i cd J-h Q* 

^ 9^ & S 

>■ c3 Oh 

OUOw 


Mcn^-in 


a> 

Q 


E-29 





Evaluation Scenarios 









co 

O 


QJ 

C 

2e: 

TJ 

<D CO 

N 

tz 

OPQ 

OPQ 

ss: 

OCQ 

fe 

Ph * 

OS 


*3<< 

CO CO 

2 gz 

5 §« 

PQ 0) OQ 

.« s® 

- V-H IO 

<N iG <n 
A 

HCuo 


^ w 

<?< 

SSPh 

*5 CO 


X X X >< * 
VO <N CN C"l 


*-« «H 

o o 

4 -J 4 —< / «- N 

aj I—I 

ggp 

.5.5<* 

coco^ 

baagu 

S S 3 S3 (j 

SSS 

o S 5 *-' pS 

<j S S Q co 

£5 x x x >< 
oo A - oo <N 


c o 

O 5/3 
?3 o 


. <D 

cs b 

O t£ 


b 

3 J? 

rj < 4 —( 
’tS <D 

^ a 


a> — 

52 ’S 


32 

SP 


co *rt . 

jjI'S 


I * 

SJ1<5 

co d , S *r< 

eg §p$.52S 

* Io^ts 
s Ggn-o a 

s .2 a, a a 

otsoai 

‘ ,_l s 

® g S S o 
S “ o 8 K 


I—I 5/3 

S-S 


Z M « 23 -- 

^ CO CO Ph Q 

<csOOS 


E-31 







Q 

< oo 
00 w 


Pm - 

04 


hQS 


tJ- W 

<?< 
tiPU 
x$ oo 


X X X X 
-h <N <N 


J-H t-4 

o o 

4 -» H-> s — s 

cd cd t—i 

1111 

00 00 23 co 

g SfflU 
Sas«fflo 
g< <g « B 

SSS £2°^ 

o ww q3 i ^ 

ugs^ffiS 

«a< § § Q O co 

E5 x x x x x 

p 00 -si- OO (N <N 


Oh O 

°f 

91 


CO rj 

0> C 
Sa £ 
co 

cd TO 
Oh CO 
;>£! 
o 33 
t: >> 

cd X> 


> »-H 

O o 

r~| Oh 

MA CO 

£P O 
g cd 
O H 


CO H 

o cd 
oo P 

2 £ 


S'hh 

Sq 

&pu 

Sc 

O OO 
Uc* 
CD 


E-32 


dismounted assault; they clear the first pass of T-72s, BMPs, and OPFOR 
SAFDI fireteams. 






Scenario #3: Take Crash Hill 


c 

<0 


•o 

© 

c 

3 

o 

E 

CO 


to 

9 

o 


TJ 

ffi 


CO CO 

2®S 

x x 
O vo »o 


X X 
VO <N 





X X x X 
p 00 ^ 00 CN 


<D 


<u 


E-33 









E-34 








Evaluators' Comments (from a draft of the ^valuation Report) 

■ CAPT William Hessenius, CO A/1-29 

"... SAFDI greatly increased my unit's training. It expanded the 
SIMNET battlefield and allowed myself die unit commander to assess my 
unit in areas not realized before in SIMNET." (Emphasis added.) 












Enhanced SAFDI 


c 

(0 


TJ 

® 

C 

3 

O 

E 

(0 


» 

® 

o 


■o 

a 

E 

o 

*■» 

3 

< 


u* 
cd 

CO 


T3 

S 

cd 

> 

• I—< 

T3 

CD 

X) 


Q . 

Hx 

eg; 

cox; 

’S? >> 

<D Ui 
O 03 

a p 
2 £ 
■§•§ 
(3fc 


<d 


co 

c/a 

O 

(X 

S 

fi 

<d 

I 


a 

o 

’S 

p 

> 

<D 

<D 


X 

<D 


a 

CD 

'O 

CT) 

P 

O 

+-> 

o 

CD 

»-t 

J-x 

O 

o 

13 

P 

c/a 

<D 

P* 

pS 

u 


CO 

J-x 

<D 

> 

J-x 

<D 

CO 

X 

o 




CD 

o 

,cd co 
<H P 

J-x S 
0) © 
■S ° 
P 


S o w 

P •»-* *-H 
o P ?s 
•P j-x c2 

O & § 
<-x PxT^ 

|°--§ 

J-< 73 

£<2 «* 
g> TT <^x 
p jx ° 

o -P 
cd fl>P 
Jh P X) 
<U -P ->x 

73 2 

•as 2 

got 

u • ■ 


P 

£ 

J-x 

t£ 

13 

p 

p 

.2 

cd 

Vh 

s 

<D 

(DO 


2 

O 

r- 

i 

< 

co 

■a 

p 

u 

D 

cf 

+-* 

CO 


co 

P 

CD 


CO 

*p 

■3 


6 ‘*5 

<D P 


O 

P 

P 


CO 

p 

p 

P CD 

fe S 

CO 


CO 

<D 




«*x 

+-» 

o 

1) 

Vx 

13 


CD 

CO 

p 

,<D 

4-1 

*8 


P 

<D 

J-x 

J-x 

O 

P 


.fa a 

<cS 


p 

p 

co 

p 

O 

o 

p 

Vh 




E-36 


■ parameterized fireteam makeup 

■ consider fireteam exhaustion in Ph 
System stress warnings 







D 

i 

</) 

O 

m 

05 

<0 

LU 



<N 

O 

O 

o 

& 

I 

<N 

ON 

l 

ON 

m 

co 


vo 


E-37 










Demonstrate the feasibility of the interoperability of simulations 
supporting different entity granularities and different time scales. 


a 

<L> 

B 

* 


a< 

B 

o 

u 

o 

< 

& 

u 

<u 

a. 

in 


d a 
.° 

*5 

s|| 

^ S 2 

O "r* <u 
- ” ft 

gji o 

*§ 

52 HS X 


t* as O 

U 5 +3 

CO 

rt « 

H 


O, 

O 


« -s 


W) 

.s _ 

ttf fcp 


S ft 
*0 
oT U 

-* V V 


i -4 >» 

spa 

■M 

d 


u 

<M 

— o 
d ft 


,p 


a | 

co .2 


2 <u 

rt w 

"• 2 
V 

_ CS 
S3 « 


a S-o 


j3 «tf 

u ft 
V d 

6 o 

ctf U 

§H 
JS B 
£ 

53 w>rr 

Q S 3 


<U 

■M 

d 

s' 


—* I—( 

oo 


-d 

j> 

a 


W5 

a 


ci ^ 

a 3 


c 

bO 

o 


<u 

u 

a> 


H 

ft 

Z 


-d 
u 

ft 
■w 

CO 

<u 

H 

ft 

a 
u 

K H 

bp<4_ 
rt o 

ft 

^ u 
ft S 

JS o 
£ U 

o> rl 

-°-g 
2 • 

d 1 P 

O J V5 

•arid 

ci 

l^.s 

•5 PI 

JB o£ 
tcs^ 
d 2 *d 
o 
ft 
eti 

ft 


ft 

<u 

ft 


<4H 

o 


T8 

d 

o 


S3 

o 

■W 


Ch 

V 

ft 2 

O TO __ 

”53 Z ^ 

> «5 

o 

6 
d 


<u 

-d 


d 

s 


<2 

V 


s 

^ • «* 


H ft ^ 


CO 

d 


E-38 



■ J 


Integrated Eagle/BDS-D 






Eagle Simulation 

• Corps/division level combat model developed at TRAC. 

• Smallest units (maneuver units): battalion and company. 


J 2 u 
<u ^2 
° g § 

>S 

■a «-a 

Hi 

s 

£ U o 

£ u 

« • • 

co 


Ul 

• 

o a 
-§.2 

fc\a 

2 a 
.a cs 
33 

S S 


S -g 

2 § 

CO 

co T5 

3 (4 

.2 cj 
a *s 
-2 +* 

a 2 

• 3 t> 

«.s 

. 3 co 

4-> Ul 

u o 

§ s 

•i i 


-Q co 
3 O 

t§ a 


*•2 6 
o rt 

S B 2 

a Si 

g * a 

1 s S 

S I- o 

co C n 

i5 5 o 
o o 

a u a 
a rt —• 

111 


H 'St 

w .si; 

£ -3 ^3 

£ ll 

HH O .3 

<2J1 

of 

C/5 . 

Q 

CQ 


S g 

i » 
§.a 

«H C 

•r* ««3 

-• v cj 

3 *■< 


o e 

§ 

_ W) 

"3 • 

<u Ort 

w tXj 

gn’O 

ss s 

1 

^ (U g" 

s a a 

3 O -3 
CLii u 

•a w 

o «j pj 

y S5 

jb eu 

JD O «4-c 

t3s3» 

1 111 
S I i g 

<L> V co S 

H h • 

1 U4 ctf 3 

US 

U c/3 D 


Integrated Eagle/BDS-D 









Typical Eagle/BDS-D Scenario 



Integrated Eagle/BDS-D 



















riginal Proof of Concept Functionality 

- Disaggregation of aggregate units into vehicles in virtual world. 

- Reaggregation of virtual vehicles into aggregate unit. 


u 

O 


cd 

In 

U 

O. 

o 


V 

J3 


0) 


00 

O 

U 


0) 


60 


*S 

§ W 


3 ^3 


« .S 3 *- 


<H 

60 co | 


_ 60 
cd d qj 
60 ;d *73 

a T2 e 
S88.S 

S JU cd 

8 S?-s 

PQ -Q 


rt h > 

. PL) « 

S g> © a 

S.s g ts 

a =3 I ’> 

h ° E . 
u £ O S 

S § “-S 

2 ° -g-o 
0,2 3-a 
O-o S I 
■2 6 S JU 

S . 2 bD 
^ Cl« -25 cd 

2 0.5 « 

-8 6 

S d £ o 

o 3 © 


t a A 
o .5 d 
© 


ft, y co 

iT* • r* «»h 


a '^ :g 


sir 

S|<3 

5 .§ & 

g.s M 

<u 

vi « « 
g JS 


S 


y "5^ 


V, 

o 


d o 


co 


W # M 

•M Cm 


d 2 <u 

§ .S 


3 d v .— 
d g Cppp 

o 5 o 

S i-g g 

ssu Si 

Oh •« 


"d 

d 


cd co d 

« ‘d g 
Oh g d 

oo ja -g 

a & 
uw 2 


§>oo 

.S o 

J3 vJ 
60 


CO 


co 


"■* 

U 


d 

d 


-a 

<u 


C/D -© 

o > 


a 

o 


CO 

CS 

O 


S-ft’8 "2 

n :d co sS, 


cd 

60 

<u 

60 

SP 

co 


OO 


-d 

<u 

JO 


co 

5° s 
*""* a *2 
o 3 3 


cd • -rl 
60 CS 

<h .d O 
60 tj 
60 £L 
rt $>P 


CO 


J3 cd /-s 
•M In U 


CO 

0» 

H 

Oh 

a 

u 


2 
U I 
0,00 

OQ 
PQ 


d rt 

g .22 2 S 

3 - -d 60 cs 
"d 5 _ 60 o 

u .2 C rt ft. 

Z *u o .«? ir 


CS 

o 


<U 


d 

o 


cd 

60 

2 

60 

60 

cd 

co 


d JQ 

■ri StS 


CS 

o 


J3 «« *rj 
•H T 


I 


co 




•a 

CS 

o 


cs 

d 


CO 

ti 

O 

u 


u 

<0 


CS 

V 

<u 


d cd rv. 
„ O 5 r< 

cd o r\ £ 
60 y Q o 

W rt _ cj 
m "d CS 
bO 0,-3 <u 

Sf-ga-? 

.22 g o © 

>s^ 


-d 


CO 

u 

O 


<u 

-Q 




U 

CS 

d 

00 


60 

cd 

W 


u g 

d 

cd .. 

60^s> 


CO 


© I'l 

O 3 g 

g -d d 

81 E 

G 

d © " 
o J2 3 




d 

<u 

u 

c2 


"o 

rt 

u 

H 


25 If 8 
McS « 


60« 


<u 

v Q 

CO 


cd 


CQ 


cd 

S 

-d 
§ 

©^ 
a m 

cd 
CQ 




<u 

d 

5 

S 


E-42 


i 


I 

co 

Q 

OQ 


<u 


60 

cd 

OQ 


*T3 

<u 


cd 

& 













Summary 


c« _4 

d ^ 

o S 

*n d 

od 

• »■< 
d *1 
S *■» 


n w 

.3 dS 

co “ 

4-» 

d 

d 

<u 

<U <U 

.a-a 

4) 

8 

d 

I 

4> 

a .9 

8 

-n 

4-> CO 

co rj 

1 

CO 

4-» 

Ul 

d o 

<u 

O 

O *d 

8 3 

d 

0 

Oh 

O 

-d "3 

<U s 

• •H 

Jrt 

d 

Oh d 


o 


"3 

8 

• *H 

4-* 

rt 

S *3 

•* 

•—* 

CO 

d 

4-» 

<u 3 
d tS 

d 

<u 

CO 


*S > 

- d 

« 8 

J Y 

„ Y3 

§ « *J 

Ct '■' 

60 - § 

STJ g 

ggjS 1 

§ 

*T3 £ 
0*2 fi 

■hJ t; 

-a <u 
d > d 
Oh o 

*- -S *d 
-d *5 Jg 

a 

S « a 
S a s 

g 2 *<» 

Ss„ 

60 0.2 

d *-< t-f 
•d <u y 

bb d ^ 
Jro 
d w 

o s.s 


2 S 

£ rt 

GJ r\ 

-o 2 

s § 

—5 

.y d 

-d ”* 

a c« 

► U( 
_. <U 

.. « O 
"d co ( 4-4 
« ,ti O 

CO 2 

(0 C H 
u 3 5 
u , O 

-d ^ *d 
■d 0 «* 
* ♦- .8 
W)g s 

•gal' 

-° 1 s 

2 *2 o 

sSu 

D _ 


d £ 

« c 

a | 

g 8 

o d 

> 8 

d *£ 
<u g 


"S-S 

d ~ 

c 

«> •-< 
<u 

• -< jo 
W <u 

4 -» 4 -» 

d *J3 
« d 


J! § 
a-f 

8 "g Jo 
dog 
g u § 

E « y 

d jd <u 

y w ca 

> a ~ 

d " y 

ai • -« O 

d *""* 

So 


E-44 


Integrated Eagle/BDS-D 









Integrated Eagle/BDS-D Phase 2 

• Expanding the Interface 

(1) Add vehicle types: helicopters, aircraft, and ground vehicles. 
° (2) Track Eagle units within CGF Testbed. 


CO 

60 

.2 * 

-S O 
60 

» & 
60 

JS 2 

60 60 

2 8P 

*o "b 

v .2 

d 

.5 rt 


06 ^ 
Q .2 
« -e 


CJ g . 

o .2 2 
a 13 o 

.2 g jj 

■m rt "d 

u 3 

<u d 

S -O .£ 

•8 s w 

♦d -o 

*2 g 8 
s o S 
3 d 

60 *7? B 

W > -d 
« o -2 


.WO 
2 g b 

*s g 
£ is ^ 

■j’a-s 
g 3 -a 

css ju w 

u &0CO 
^ rrj "d 

B 2 

b4 Si 

*2 J2 o 


3 c wSu 


« S 

cti ut 
•-J o 

s'- 

el 

U 


8 
. cti 

s £ 

u 

8 

n * g 

5 o ^ 

j; 

£-2 J 

C-i <u 
y -B fcP 

•a SO 

S Eo 

drgviH 

S| o 

sic 

-d a, 

.2 w 
css J5 id 

’C "S 13 

<u ^ > 


d CO 

5 .22 
JS si 

gp-a a 

« s?s 
a «•§ 

S ^ S' 


—J CO 

O <L> 
2 v 


g 3 w-g 

g 

0/3 CO CU 

O *3 .2 co 

• J_k • . 


O *3 -S co 

"S C3 .ts h 
> « s-g 

S c 

■g u ^ti 

§ S u 8 

-8J || 

Im w 
« O 


C CO 

2.9 

co CQ 

2 
O —. 
3 o 
S u 

<3 S 

a § 


o 

rt « c±2 

0) »-i ^ 

?? ?r <u 


g X > 

<i> t—I s—( 
«5 <u 2 
D > co 


co <u 
<u Ph 3 

»S y CSS 

"3 « tj 
3 .2 <u 

d nd *-( 

<y B 


0 *TV 
60 rt 

U ai co 

w sg 

”2 *d —1 


60 

U 

he 

60 

60 

rt • 
co ?? 


>S 2 

ic 1> +-» — 

&4 4J U ~ 

« « ««*d 

cq tq eu <j 


^ *0 n oo9 


h cs cfi «'tin\oN»^o 

^ *"• '—I CL| k—I 1 —I 1—1 T—< »—I T-< OQ 

cq v ” ^ 


E -45 





(0 

0 ) 

o 

o 

u. 


a> 

+■» 

JU 

3 

E 

<73 

+-• 

c 

0) 

O) 

■ —I 

“55 

4- 

c 


*o 

xf 

o 

o 

I 

U 

i 

(N 

On 

i 

ON 

m 

cn 

NO 

£ 


E-47 















Polygonal terrain 


cd cd 

W g 
a a 
^•a 

4-< g 

O § 

<D - 
O X 
,cd <d 
4-h ££ 
Vh £ 

S o 

<D ° 

■5 QJ 

i8 

cd <D 

S S 

U Cfl / 

g a „ 
o o 
oo bo 
>>>*. 
o o, 

Oh CV 
<D a> ' 

C/3 C/3 

cd cd 

PQPQ 


O 

. a. 

2 s 8 
cd cd 
»-i JD 
CD 

£3 +-> 

cd a 
Gh u 

*-( 2 

T3 cd 

§‘-5* 

Er<^ 


•. cd ■*”* 
c« Cj i-i 
g O g 
O bO P 

w> >; h 

j^caXi' czi 
^ G o qG 
2 O Pi c« gs 
O'M - 

4 -h o ^=t 

° o*> s?° 

^ - o 5 

S o G^W) 

G S 

ss^i-o 

•a ► 

<d Q-;rs 'g CD 
*-i <D 1*5 ^ 
cd c/a A) 73 cd 
^ <D G a G 

5ft o ^ c 

li - ri • ^ 

H S w 


ITT rf\ 

>> ZJ (D ^ 

3=3 s Gw s « 

2 cd tfo Q > 

CL, X O .!_. 


r 4) o -5 <-> 

^ c/3 O . 


G •- 

C/3 

cd o 

fa s 
Sg 

'•“» <D 

rt3 Vh 


' • ^ 2? T3 

C/3 D C 
c« 

Q 2 *rd 

3 2 5 

Sa8 

(N CO 


E-50 






ffi 

o 

c 

<0 

m 

n 


c 
o 
o 
® 
oe 


05 

C 

c 

o 

(0 

a 

® 

cc 

c 

® 


S' 

si 

Q> 

a 

Si 


g 

£ 


C/3 

<D 

a) 

O 


E, 

<L> 


U 

a 

#V 

C3 

O 

1 * 

<u .9 

D Vh 

tf *-< 
d. <L> 
<U +-* 

*-< <L> 

g *S 

•i—i 

2 g> 

»h G 

3 > 

x* o 
1 ) > 
n a 

\£ .53 
O 

•i—. 

cd 03 

4-< o 
O W 

c/3 

• T» ■ H 

<£> cd 

r2 O 

CU .,—( 

a > 

aj ctf 

_, jcj 

IS 3 

22 

3 G 

< s 


c? 


a 

<D 

s 

<D 

S 

O 

O 

is 


<u 

S-4 

4-i 

4—. 

o 

C/3 

2 

13 

t— h 

4-i 


U 

<D 

a > 

2 ® N 

S*gra 

_ « J2 

q< 5 <u 

s 3 « 
g p3 00 

X . . 

W 


C/3 

<L> 


G* 


X 

03 


(N m 



E-51 






Reconnaissance planning 


« 

o 

c 

CO 

to 

to 

a 

c 

c 

o 

o 

9 

AC 


o> 

c 

c 

o 

to 

(0 

9 

DC 


cd 

u 

<D 


i 

4—i 

o 

I 

Vh 

<l) 

Q 


Cfl 

cz> 

* 

cd 


O 

o 

<D 

cd -2 

Q g 

^ CJ 
- -H 
cd ^ 
<D O 

Vh Vh 

«* <l> 

. 9*3 

b o 

* § 

§ «> 

> <D 

.55 

OH 


• h 


2j D 1) 

.H N N 



(N <r> 


E-52 






© 

o 

c 

10 

M 

» 


c 

o 

o 

© 

cc 


05 

c 

c 

o 

V) 

a 

© 

cc 

c 

© 


*3 

.5 

O 

*** 

si 

§ 

§, 

I 


CO 

as 

xi 

CO 


ctf 

u 

a 

I 

.9 

CZ) 

a 

•fH 

o 

Om 

13 

o 


<u 


co 

^ S 

03 *55 

O 

s ^ 

•I « g CO 

,P <D <D 

£ & Sg 

C d • *h TT 

£ W)15 

>h *0 <D 

o *r *■* 

O M -M W 

g • • • 

hh ^<N m 


o 

2 


CO 

o3 

-t—» 

CO 

O 

a 

13 

co 


cd 

Vh 
J-t 

a 

<4-H 

o 

<D 
O 
<D 

aS 
Vh 

<2 

CO 

a 

• fM 

o 

Ph 

a 

ctf 

4-» 

Vh 

o 

I 

HH 

4h 

o 

-*-* 
<D 
co 

I 

a 

o 

c? 

• 

N 

^■■' < 
cd 

a 

< 


E -53 


effective, and much easier, than analyzing the entire piece of terrain. 





Project summary 


© 

o 

c 

(0 

(0 

« 

a 

c 

c 

o 

o 

© 

DC 

h- 

o 

«*- 

03 

c 

c 

o 

« 

a 

« 

DC 

c 

© 





<4-1 

O 

a 

<D 

73 
• *—< 







73 

03 

> cd 
CL) 

QS 


<T) 



£ 

« . 

P c$ 

|a 

§! 
ja t; 
CL| o 

& pH 


73 

d sa 

*p 

73 £ 

a § 

W)73 

•l-H X 

s | 

Q JS 



i 



I 


( 


i 


E-54 






Overview of the All-Points algorithm 

1. Given a terrain test area, identify the set of Important Points fo 


> 


M 


<D . 

£ % 

03 

G ^ 

O 

• 1-x V 
£>•2 
<L> 


cd 


Oh 

s 

43 © 

3 5/5 

«13 

.1 a 

(3 


03 


§ 

•W 

Vh C/> 

&^D <D 

C 


<D (3 
<D *G 

03 2 

Cl, 


a 

u, 

Vx 

<D 


S '—JLJ ^ 

c2 S3 

M § o 

2 o _H 

£ +-» “ 

, O <D 
<w 43 

'XH 

<73 O 03 

X) CLh 43 
G^ G 

03 ^ 03 

«* 2 2 

-M «H -S 

O o 
JJ £.33 
o 3.^ 
oo h3 O 


<D 

03 


I 

•I 1 

4-> 

• 

C/5 

• 

> 

G 

•<H 

13 

> 

03 

£ 

<L> 

G 

03 

H—» 

<Z> 

• 

T3 

03 

•s 

O 

03 

<D 

O 

G ”33 
S <D 

a.a 
§f £ 
-•a 

G *2 
.2 £ 
cS .52 

*03 % 

*> C 
«* O 

H-x Q - 

O d 
0) G 

O § 

C/3 G 


Ph 

o 

u 

H 

oo 

HH 

<D 

•£ 


03 


03 

G 

•»H 

o 

& 

03 

£ 

03 

03 

03 

#S 

03 

G 

• 1-H 

O 

O. 

2 . 
G v-i 
O V 

u s 

•si 

o Oh 

§ ^ 

CT o 
<D £ 

03 

03 

<D - 

fi’S 

<«£ 
2 “ 
2 « 


<N 


cn 


E-55 




Identifying the Important Points 


3 







E-56 




I 


© 

u 

c 

eg 

CO 

« 

<o 

c 

c 

o 

o 

© 

oc 


03 

c 

c 

o 

w 

eg 

© 

oc 

c 

<g 


3 

.5 

£ 

a 

Q> 

0$ 

« 

.§? 
3 
—■<> 

<0 


TD 



Jp 

o 

3 

p 


p 

o 

cd 


C/3 

g 

o 

■ V 


0$ 

Crt 

•o 

o 

■1 

C/3 

3 

• *-x 

X 

3 

p 

C/3 

o 

3 

> 

p 

§ 

P> 

p 

• fH 

o 

3 


3 

Oh 

P 

3 w 

O 0) 

Vh 

CD 

> 

^ X 


2 O g 

bOcod, § 

■a p -a X) 

*5H m ^ , 


b© 


bp o eg ^ 

a * i f 

O § ^ 

« t3 J3 

® 8.9 » 

HhJ 


-i |*| 


Cd 


y c/3 

P 4> .. 

P o CO 
22 \p <D 

P Uh b© 
O <L> 

u> w 


2 

hi 

a 

s 

t-H 

I 

4-i 

o 

+•* 

<D 

C/3 

a 

C/3 

cd 

■g 

13 

C/3 


C/3 

O 

s 

I 

<L> 

a 

C/3 

a 

03 

O 

I 

Oh 

3 

o 

Oh 

3 

cd 
■•—» 
J—i 

o 

I 

HH 

3 

<D 

C/3 

O 

o 


■y VH 

P O 

• ^ t. . 

o _ 

Ph^ 

3 9 

P - 

sa 

4> 


J 

O 


*X3 Ox 

■sj 

■s 5 

8*S 

* P 

✓—N C/3 
C/3 

<u o 

bJQ^ 
T3 
<D 


f 

00 

1 

e 

2 

4-i 

T3 

<L> 
> 
O 

3 

a> 

lx 

p 

<D 

a- 0 

_ & 

4> ^ 
bp co 

T3 &> 

<d 3 

4> cd 

i’| 

(D 3 


<D ^ 

C/3 *3 

§ 

O 


P* 

BP 

P 

o 

4-» 

c/3 

O 


' ‘ 9>^ 
D 

C/3 


J-i 

1) 

> 


a 

cd 


J-H 

<d 

> 

D 


Oh 


Vx • 

O 4) 

bp C/3 

cd 4> 

. S-H 
T 3 r 2 

8 8 

»-h 4) 

-2 

. — *> 

00 Cs CO 

► i > # • • • 

*—> c/3 <N (N <N 

<N 


P ^ 
cd 

o 01 


cd 

<D 

P< 


i h t: m 

-P P O S <D 

UofcSp^ 


E-57 





CO 


On c« 

SU '*—* 

•5 —< 

£ 

a 
o 

& 

Cj 

§ 

% 


CD 


.s 3 

*-i 

V, 

O 

T3 

O 

O 

bO 

y < 

X) 


o 

co 

cd 

2 

cd 

! 

T3 

<D 

co 

S3 

CO 


I 

Vh 

Uh 

<D 


CD 


CD 

i 

CO 


D 

a* 

V-i 

CD 

£ 

§> 

•f< 

13 

CD 

O 

co 

<D 

T3 

>% 

X 

co 

s 

•yH 

O 

ou 

I 

i-H 

<D 

X 


I 


c? 
■»—< 
-t_> 

S-l 

CD 


S CO 

cd 

2) 

<u a 

a 5 

is 

aT £3 

n ca 


I 


I 

CO 
<D 
co 
cd 
cd 


u 

•8 

u 

O 


X 

a 

• H ' 
4-i 

V-4 

cd 

-to* 

co • 

T3 

8 


V-i 

O 

CO 


cd 

■s 


5.5 

- o 

s & 

M 


o 

<D 


S3 cd 


CO 


cd 

■s 

£ 


Ui 

O 

c/3 


c *-. 

x cd 
o -*-> 

xc/3 


S3 

O 

*-l 

X 

o 

cd 

a> 

T3 

< 


<D 

8 

0) 

Sh 

cr 

D 

co 

J8 


(N <n 
E-58 


a 

I 

1 


CO 

J-l 

jH 

<4—1 


CO 

Vh 

<D 


S3 

O 

I 

co 

CD 

O 

cd 

S3 

<D 

> 

W) 

<D 

8 . 
D co 

§«.! 

*8. 

CD 

’S 13 

X CD 

•i—I 4-> 

CO § 

tt X 

.S O 

O d 

Xj;g 

‘S-S 

<D CO 

C/D y-H 

G ;*—! 






Reconnaissance planning experiment 


r 

g <3 

5a .H 
aS 

S SI 

cdi* 

<L> 

H ■ 


.S 2 
fc 

- o 

c3 o 

£ 

* • 'n is 

Sjs .3 
| a S 

ed <l> w 

<u£ W 

1 

rt 7 yi 
« C J 

C/5 *5J *> 

*3 O _h 
2 cl, pq 

I 3 S 

o < co 

<D 

P4 m m 


§>W 
*o -o 

<D 0) 
X X 

«f—< 

ss 

•s r 

W »-< 
cd cd 
<L> <L> 

«uu 

§ c a 
o o o 

<N 

"■ H <u <u 

D C/3 03 

> q a 

TS d d 
C <U <U 

<SQQ 

Q ■ ■ 





Terrain database: 
Location: 

Size: 

Contour interval: 
Approximate scale: 


SIMNET Ft. Knox 
FS055665 
3 km x 3 km 
5 meters 
1:18000 


Figure 19. Clear terrain test area. 











Terrain database: SIMNET Ft. Knox 

Location: ES845950 

Size: 3 Km x 3 km 

Contour interval: 10 meters 


Approximate scale: 1:18000 


Figure 20. Mixed terrain test area 

















Subject Matter Experts 


&§*! 

Sfa'a 

« eJa 

a §< 

CO.; 

c«<jOO 

^ T3 ^ 


to «. -*-» 

fcfc 3 
35^5 

D d3 C/3 

& J « 

O 

7* O O 
u> o 

g 2 * 

S^s« 

hq,h 

X 


c?<_, 

•gS o 

•as 13 

*-< S teO 

H*a *c 

73 iJ tt 

{H Js^ 

.2 c -m 

CC o £ 

z sS-g'a 

au?,^ 

£ T3 3 ^ 15 

g o D Cd 0 ) N 

£ B<a*a 
o d ^ a 

^ ^rj T £ T o 
o cn <J vJ ,*a <d 

’SE^'fl^SS' 

•g*- 1 £ § S -a 
PO O jSojo 

g>* -s ’S "1® 

•1 ■a s &<_> 


T3 

•5-oc 
C a cd 

•a * s 

*-H *"< 5 
Hoc 
, T3 O 
ft cd rj 
O D v - / 

i->& 

sss 

M O q. 

-2 S 

<7 & § 


CS c*5 *0 

« , r—I 5—1 

Sog 

T3 r-H O 

ca .CO 

<D >, r 

■Jffu 

e Sffi 


IM *5 
2< 
•2-S 

> oo 

< VO 
3 u 


d Cl 

I-S? 


uisr; a 
f 3 B 

S >*<7 <** 

§•««! 
O'H^ o 
r5 Cr«n 


i f—5 ^ ^ <=r w 

WChUmWUQU 


E-63 







Terrain Reasoning for Reconnaissance 



E-64 









All-Points' route on the Mixed terrain area 










E-66 




Experimental data and analysis 


.J3 

03 *"* 

•rj bo 
£ g co 

111 1 

g^g -a 

*C oT2!3 bO 

5 a «j a g 
73 a ’3 

3 % g.sP’S) 

£>•=2 o ^ 

ugS« B 

^ S <l> a> <d 

O 8a £?£? 

° (U O c3 rt 
rtWMhh 


Mcn^t 


£ .52 

o C 

■oSo, 

8.1 I 

S w o 

cm > _h 
M \£ o3 
0> cd O 

Qji—H 

.52 5 .52 

g* 3 cd 
G 

<d* _: 


E-67 





Reconnaissance planning times 


© 

o 

c 

(0 

« 

w 

co 

c 

c 

o 

o 

© 

ce 


o 


03 

c 

c 

o 

m 


a 3 

4J 

O 

Eh 


£1 

<d ^ 
V O 

-U 

SS 

a s 

-H 

ciS 

U 

£ * 
H (u 


a 


o o o 
o o ^ 

00 CO VO 

> o in 

i—i 


o o o 
O O 00 
vo in oo 
m cm 


o o o 
o o oo 

00 VO CN 
HfO(N 


o o o 
o o co 
^ r- ^1* 

CN (N 


# 


s 

J3 

4J 


-H 



cd 


M 

4-J 


c 


u 


•H 

<u 


0 

c 


til 

c 

rH 

OJ 1 

<d 

u 

W rH 

H 

£ 

2 rH 

Ou 

co 

co <C 


E-68 









Route completion times 







Targets sighted 





CLEAR Test Area: Defensive Layout II 





o 



JO JsqujnN 


E-71 


250 500 750 1000 1250 1500 1750 






Base cumulative time 


© 

o 

c 

a 

as 

09 

« 

c 

c 

o 

o 

© 

cc 


o 


at 

c 


o 

to 

© 

© 

cc 

c 

© 



T3 

<P 


T3 

<D 


Sr 2 


C8 5 

a 2 

Ph< 


03 




c/j 

a> Oh 

S 52 


0>> 4-» 

.Si g 

cs-c 

= •3 

a g 

9 5 

r s 

CS CD 

+£ c/3 

O c3 

HPQ 


«s 

4J 

o 

E-« 



fC 

<D 

U 

ftJ 


-P 

CO r£j 
<1) Qj 

^ X 
G S 

•H 


nS 

U 

U 

<1) 

E-h 


CM 



<U 

CQ 

g 

a) 

tp 

<u 

Q 



o 

<n 

r 

m 

CM 

o 


o 

rH 

VO 

<n 

00 

VO 

VO 

VO 

VO 

CM 

n 

CM 

VO 

«H 

in 

CM 

rH 

00 

<n 

rH 


rH 

in 

<a< 

rH 

rH 

CO 

cn 

rH 

rH 

cn 

CO 

VO 


CM 

rH 

rH 

00 

r- 

CM 

00 

rH 

O 

VO 

r- 


CM 

cn 

cn 

rH 



in 

CM 

cn 

rH 


VO 

00 

cn 

00 

00 

m 

VO 



in 

CM 

VO 


cn 

VO 

VO 


r- 

rH 

rH 

rH 

rH 

VO 


O 

CTi 

in 

VO 

m 


in 

o 

00 

VO 

rH 




e 

x: 

4J 

•H 

U 

O 

tn 


cd 


CQ 

■U 


Jh 

0) 

G 

G H CM 

os ca ca 
rlSE 
GP CO CO 


G 

*H 

o 

04 

I 



E-72 







Statistical comparison 

Populations: overall performance of the reconnaissance planners. 



i 


E-73 




Statistical comparison (continued) 




gw 

•S 2 

•< ”S 

H 4-* 

Tj3 a> 

*-t ^ 

& T3 

£3 (L> 

<U g 

fO g 

T3 <o 

st: 
s s 

G Cu 

<2 £2 
»h g 

S-S 

Oh O 

03^ 

Ss 

• • • • 

r#- 

VO 


VI Al 
NN 


e co 

e3 « 

<4 <U 

*S o 

r <-> 

s s 

a> o 
■O - 

*H § 

° o 

O c« 

s-c 

<D 5 

1 S 

H O 
ctJ o 

H <£> 

o2 

° <D 

U £ 

> <L> 

2 £ 
+-> 

CXJ u_ 

^ O 

'p g 
<L> o 

g o 

<L> 

t2 > 

^ <D 

a> 50 
cuO 


5 w 

•Is 

O C/D 

ctf j-h 
co 2 
O'OJ 

.5 *p 
o 6 • 
Oh,Z^ 

I ^So 
J, a m 

<2'S 

an 



E-74 









Reconnaissance planning times: 


2 g-S 

► ^4 .22 «^4 

1—1 i_, 


.2 73 

•4mi 

£ 

E c 

S '3 

O *-i< 

©< 

S <u 

© j= 

P*H 


V C/3 

2 S 

.SPo 

CO Oh 

© < +2 

eu^ <3 

gag * 

H H S 


8S 
S o 

•£ ^bp 
OD ^ 

0 C/3 

•0 

+2 0 
P0 *0 

DfiP 

• pM Ph 

<zj l 

■+H £0 

© <! 

W)^ 

4> 

H H 


E-75 





Summary of results (continued) 




.a % 

<l>5 
3 a 
•§ > 
J> co 


5 CO 
•rj *-< 

g g 

jap o 
55 «* 

fl CO O 

•1 as 

•w *f—< 

a> ° o 

> Px 
•5* I <D 

2 Jj o 

i a & 

cS ^ 
WH > 


o g 

.S ^ 

o eg 

Cl XS 

I W 

__L »H 

<§ 

■S.S2 

£?-§ 
H • F*H 
•l-H 

O '-j 

fe s 

♦■H **~K 
•l-i -*-> 

-- 5/3 
CO . I"H 

Ch 

O 3 

co co 

• »H 

H U 

a o 

ex 

ss§ 

8 £ 


Cl TT 

O P 

«5 > 

'C g> 

g ^ 

p* -*-> 

a o 


c3 0 

.a « 

+2 <u 
co > 
!S <D 


ctf 

1? •» 

nM 


<2co 

*h <n 

&S 




E-76 












The All-Points algorithm performed reconnaissance p lanning at a level 






CGF C TO Ada Conversion 


The task 


Implement a CGF Simulator, written in Ada, functionally 
equivalent to the 1ST CGF Testbed Simulator version 6.400. 


Goals 


Determine whether it is practical to write CGF systems in Ada. 

Determine the effects of Ada, relative to C, on software 
engineering quality in a CGF system. 


Determine the effects of Ada, relative to C, on execution 
speed in a CGF system. 


E-79 



CGF Testbed as of January 1993 


CGF has evolved to a reasonably well designed product. 


Functions are hidden (static) as far as practical. 


No data is exported (data is on the stack or static). 


Modules are recognized and binding of all types is minimized. 


Since the C mechanism for data hiding is "all or nothing" 
(being file based) artificial means of enforcing weak bindings 
are used. 


The CGF Simulator consists of approximately 58,000 lines of code 
(including blanks and comments); it is ANSI c compiled with using 
a C++ compiler. 


E-80 








January 27, 1993 


Ada Conversion Strategy 


One extreme approach is to do a C to Ada translation. The 
other extreme is a complete redesign, needed because Ada offers a 
whole new approach to software engineering. 


Position going into this project: 


A direct translation is of no use. 

The Ada conversion project will produce an Ada product. 
There is no intent of producing C written in Ada. 


A re-design is not necessary. 

Ada supports the best of the 1980's software engineering 
techniques. All of the artificial techniques used to 
enforce cohesion, data hiding, weak binding, etc. can be 
replaced with direct Ada support. 


The C version of the Simulator is playing the role of the Ada 
product's design document. It is natural to think it would also 
serve as pseudo-code, and to an extent this is true, but the Ada 
team is not doing a simple translation, we are building an Ada 
product. 






January 27, 1993 


Risks 


No project with such great scope is without risk. While an 
outright failure is not expected, many problems are possible: 


If the Ada team attempts to over-refine the Simulator during 
the conversion, the project will take too long. 


The assumption that Ada tasks can replace the Simulator 
executive may not be valid. The Simulator executive was built 
to fill its role exactly, replacing it with Ada's general 
tasking support may cause a variety of problems (the most 
obvious being performance degradation). 


The Simulator uses some facilities which may prove difficult 
to adapt: 


• High memory support for terrain information (this should 
be unnecessary with the Ada version). 


• Graphics support. 


LAN card interfaces. 



April 27, 1993 


Expectations versus Reality 

The quotes are from the slides shown in January. 


"The Ada conversion is a natural continuation of the C6F 
development." 

The conversion is more revolutionary than evolutionary. 
More fundamental changes are being made than had been 
anticipated. 


"The Ada conversion project will produce an Ada product. 
There is no intent of producing C written in Ada." 

This is the golden rule for the Ada team. There is 
nothing that would give away this project's C origins. 


"A re-design is not necessary. ... All of the artificial 
techniques used [in the C version] to enforce cohesion, data 
hiding, weak binding, etc. can be replaced with direct Ada 
support." 

The latter statement is true without reservation. The 
former is more troublesome. Significant parts of the 
system have been re-designed. 


"The use of Ada tasking should make it possible to eliminate 
the Simulator's built in executive." 

Ada tasking has become the centerpiece of the new 
simulator. 


"The Ada design and run time checks will eliminate the need 
for many of the facilities hand coded in C...." 

This is largely true. 


"If the Ada team attempts to over-refine the Simulator during 
the conversion, the project will take too long." 

We are making tremendous changes in the system, but our 
progress is excellent. 


E-83 





April 27, 1993 

Performance Issues 


Are Ada executables inherently slow? 

Even Ada team members are concerned about the Ada version's 
performance. Nonetheless, we do not second guess the compiler 
by choosing an implementation technique based on what we 
believe will produce tighter code. 


Micro versus Macro Efficiency 

- The C simulator does low level optimizations which are not 
practical in Ada. 

• Micro-efficiency is less important than macro efficiency. 


• The same algorithms are used so we should have roughly 
the same macro-efficiency and the better Ada organization 
may increase efficiency. 

• Worries about constraint checks (as unnecessary code) are 
probably overblown. 

- The Protocol code may pay a heavy price in efficiency. 

• The C version was designed to avoid data copying by 
contaminating the simulator with some protocol design 
attributes. 

• The Ada simulator makes no compromises and so it will 
have a much more complex application protocol layer. 

• Lower protocol layers may have to do data copies. 


Faster hardware can mitigate efficiency problems. 

• Everything about the Ada environment is designed to make 
it easier for people to design, implement, test, 
maintain, and enhance software. 


• Costs for faster hardware (if necessary) must be balanced 
against the cost of maintaining and upgrading code 
written in a more primitive language. 


E-84 








July 12, 1993 


Ada Conversion Project Status 


Timetable Changes 


The Ada conversion team expended all of the time originally 
estimated for the conversion as of, approximately, July 1, 
1993. 

The new estimated completion date for conversion is 
December 31, 1993. 

Development Problems 

Protected Mode/Real Mode Interface 
Memory Shortage 
Library Sizes 


E-85 





July 12, 1993 

Code Quality 


The Ada "team makes a conscious effort, to use the Ada 
facilities most likely to lead to the highest code quality. We 
continue to improve code quality wherever practical. Examples: 


In spite of our efforts, we had used inappropriately broad 
types for some quantities. There was only one speed type, 
which was used for both DI and missiles (!) . We now have 
types appropriate for the individual entities, eliminating the 
Mach 1 DI. 


In looking into the last item, we recognized a whole class of 
data and types which were over-generalized. As part of 
changing the speed-type, other overly general structures were 
eliminated. 


The Ada-CGF code uses generics wherever appropriate to share 
code. In spite of the break up of encompassing data 
structures, the behavior and dynamics code remains flexible 
because it is instantiated appropriately for the entity in 
question. 



It may be worth noting that changes, such as noted in these 
examples, have often lead to the subjective, but comforting, "ah- 
ha" response. 4 

Consider dynamics: 

Parts of dynamics code unique to a vehicle is written in 
the package for the vehicle. 

4 

Parts to be shared but which are dependent on the 
vehicle's associated data types is generic. 

- The remaining code consists of procedures which interact 
with vehicle instances through parameters. The code does 
not need to accept overly general data structures, nor 4 

does it have to ask what is being processed ("am I a 
DI?") by examining its own data. 


4 


E-86 











July 12, 1993 


Lessons Learned 


Using Ada on Personal Computers 


Insure your PC is up to the task. 

We expected to do all the development on 386 33 Mhz. PCs with 
less than 4 megabytes of memory. This would have been 
impossible; by adding memory the task would not be impossible, 
but would have been impractical. Whether a task is practical 
on a given machine depends, of course, on the task; For our 
task 486 machines running at 66 Mhz with 4 megabytes are 
inadequate; with additional memory we should be able to 
complete the project. 


E-87 











July 12, 1993 


Using Ada for CGF 


The Ada CGF Software is of higher quality then the C rendition 

- The language encourages good software practices. 

- The enforcement of software discipline is much more 
powerful than most people realize. 

It is difficult to imagine anyone seriously disputing the 
Ada team’s claim that the Ada code is of much higher 
quality than the C version. 

Ada Facilities are well suited for simulations 

- Ada tasking eliminates the need to build custom 
executives. 

At least one member of the Ada team believes the 
tasking capability alone is sufficient reason to 
make Ada the language of choice for CGF. 

- Generics are powerful tools for customizing tasks for 
various entities. 

A significant amount of code can be shared by DIs 
and tanks in spite of their obvious differences. 
Thanks to generics, the code takes on the 
appropriate characteristics for the entity. 

• 

- Ada support code (such as constraint checks) finds errors 
that would otherwise be missed. 

The Ada team has found places in the C code where 
uninitialized memory is used for floating point 
values. In most cases the nature of the arithmetic 
done with this memory allows the simulation to 
continue, but this is a time bomb. Ada trapped the 
error immediately. 


E-88 











October 13, 1993 


Intelligent Simulated Forces 
C6F Ada Conversion Experiment Status 


Over 58,000 lines of tested Ada code have been 
written. 

This is up from 35,000 lines at the last quarterly review. To 
completely represent the 6.4 C version will probably take 
about 70,000 lines of code. 


External data and events (files and keyboard) are 
correctly used in almost all cases. 


Most of the protocol code is complete. 


About a month ago our consultant was able to solve the 
protected/real mode problem. After some rapid perturbations 
a usable, though limited, version of a packet driver interface 
was delivered, and has been in use ever since. 

Our consultant has recently developed a more robust and 
complete version of the driver support which has yet to be 
integrated. 

Most of the higher layer protocol support is in place. 


Vehicle dynamics are complete. 

The bulk of the behavior code has been developed. 




E-89 




October 13, 1993 


The FSM Architecture 

The FSM design is fundamental to intelligent behavior, and yet 
the FSM implementation is radically different in the Ada and C 
versions of the Testbed. Many key questions raised in discussing 
conversions to Ada were addressed when designing the FSM support. 

Here are some of the key features required by t> ^SM 
implementation and how they are handled by the two systems 


FSMs are tasks 

FSMs must be able to receive messages and act on them. For 
example, an FSM may need to be awakened when another FSM 
completes or when a timer expires. 

C: All tasking is done through a custom executive. 

"Ordinary" (non-FSM) tasks have control blocks (for their 
data). FSMs, and their associated data, are accessed 
through the control block of their parent. Messages for 
FSMs are delivered by locating the parent task and then 
locating the FSM. 

Ada: FSMs are subtasks of the entity which invoked them. 
Messages for FSMs are delivered to the parent which then 
delivers the message to the FSM. 

In many ways there is a good parallel between the two versions 
in this mechanism. The key difference is that the Ada version 
uses the Ada features to maintain the tasks. 

FSMs modify the data of their parent task 

For example, when a vehicle uses an FSM to turn, the FSM must 
periodically adjust the vehicle's yaw so the vehicle will turn 
gradually. 

C: The FSM is given a pointer to the parent task's control 

block. This is practical since tasks in the C system all 
have control blocks. Because the FSM can directly access 
the vehicle's control block it has access to all of the 
vehicle's data. 

Ada: There are no control blocks in the Ada implementation. 
The vehicles (ACTORs) are tasks which have ordinary local 
data. FSMs are generic and are instantiated with OUT 
parameters for data which the FSM must modify. The FSM 
is given access only to data which it needs. 


E-90 









October 13, 1993 


FSMs retain state information from event to event 

State machines run through a sequence of states; events are 
interpreted in the context of the FSM's active state. 

C; An FSM's state is represented by a function. When an FSM 
is activated to process an event its current state is 
called with an indication of the event as well as a data 
structure which serves as a control block for the FSM 
(its data area). 

Ada; FSMs are implemented as tasks. Since they are tasks they 
retain their local data without special mechanisms. A 
local enumeration is used to track the current state. A 
switch on the current-state variable yields the proper 
context. 

FSMs must be able to report results to other 
entities 

If a vehicle wishes to fire a weapon, the FSMs used to do this 
will ultimately activate an FSM to aim the weapon before it is 
fired. When the aiming is complete the parent needs to be 
informed so firing can commence. 

C; a general purpose FSM reply mechanism is implemented. 
The list of possible replies is set out as an enumerated 
type used by all FSMs. Along with "SUCCESS," replies 
exist to cover various anticipated scenarios (e.g., 
"IMPOSSIBLE" and "EXTENDED JROUTE_NEEDED"). 

Ada; A general reply mechanism is defined. The FSMs, as 
ordinary tasks, define replies just as ordinary ACTORs 
do. The possible replies are defined by the task sending 
the reply (in its specification). This way, only replies 
that make sense for the task under consideration are 
defined, and as much data as makes sense can be 
associated with the reply. Hypothetically, AIM could 
tell its parent it is aimed and the direction of the 
target or, in case of failure, exactly why it failed 
(perhaps the target was no longer visible). 


E-91 








October 13, 1993 


FSM re-use may require associated FSMs to be 
terminated 

If a vehicle is told to route to a point it will invoke a 
series of FSMs to carry out this behavior. These FSMs may 
invoke an FSM to cause it to face the appropriate direction. 
Should some other behavior request the vehicle to face another 
direction, there is a clash between the requests. This is 
resolved by giving the new request priority, which forces the 
route to be abandoned. In so doing, the various routing FSMs 
are all shut down. 

C: a series of functions is used to recursively kill FSMs by 

removing them from the list of active FSMs for an entity. 
The mechanics of this implementation prevents 2 copies of 
an FSM from running at the same time (a vehicle with two 
weapons cannot aim them at the same time if they share 
any FSM to accomplish aiming; vehicles cannot launch two 
missiles at the same time because missiles rely on FSMs) . 

Ada: Entities which use FSMs have a subordinate task which 
tracks which FSMs are active and who started them. 
Associated data determines how many copies of an FSM can 
run at once. Starting new FSMs will, when appropriate, 
bring down the necessary FSM subtree. 

Recovery of dynamically allocated memory has made FSM 
shutdown complex in the Ada version which, in turn, has 
complicated the FSM hierarchy control. 


E-92 








October 13, 1993 


Miscellaneous 


Compilation Time 


System compilation time is about 2 hours for a full build 
(58,000 lines, 229 files) . Large disk caches are used (on the 
order of 16 Megabytes) during compilation; this is essential 
to keep compilation time down. 


Library Sizes 


Our system is configured across 4 libraries, ranging in size 
from 21 Megabytes (the main development library) down to 1/2 
Megabyte (for the protocol library); the total size is about 
27 Megabytes. 










October 13, 1993 


Cone!us ions 


The Ada CGF Testbed has developed to the point that some 
preliminary conclusions can be made. These conclusions have not 
been quantified but are opinions. 


CGF systems can be written in Ada 

The Ada CGF Testbed is already sufficient to demonstrate this. 


Ada's software engineering features can be used 
to produce higher quality code. 

- strong type checks not only catch errors, they encourage 
proper typing (our tanks are not capable of speeds as great as 
a missile's) and can simplify code. 

- Packages encourage strong encapsulation and localization. 
By being careful the Ada team has kept the complexity of 
package specifications to a minimum, avoiding unnecessary 
binding. Ada makes people think about these issues. 

- Generics encourage code re-use and, simultaneously, 
customization. 


E-94 







October 13, 1993 


> 


> 

Future production CGF systems should be done in 
Ada 


Production products should be given the benefit of Ada's 
maintainabi1ity. 


i Converting an existing system from C to Ada 

should be approached as a redesign, not a 
"translation" 


ft Without this approach the benefits of Ada will not be 

realized. Attempts to preserve aspects of the C CGF Testbed 
proved counterproductive. 


Should Ada be used for research? 


There is a big difference between exploratory programming and 
production programming. Most people we have asked will agree 
that Ada is the right choice for production programs. Whether 
Ada is the right choice for research has yet to be answered. 


E-95 



! | 


t 

L 



October 25, 1993 

Intelligent Simulated Forces 
CGF Ada Conversion Experiment 


Preliminary Performance Evaluation 
October 25, 1993 


Part of the Ada team's resources were redirected to carry out 
a performance evaluation of the existing Ada CGF Testbed. This was 
done on October 20, 21, and 22. 


The Evaluation Parameters 

Three dimensions of the CGF Simulator's performance were 
considered for evaluation. 

• The number of vehicles that can operate locally (i.e. on 
a single copy of the Simulator). 

• The number of remote vehicles which can be serviced. 

• Robustness under internal computational load. 

The third item refers to observation of the Simulator 
performance as the number of internal computations is varied. 
This was accomplished by varying the frequency of Line Of 
Sight (LOS) computations, an expensive process. 


Recognition of Simulator Stress 

A Simulator under stress may fail in a number of ways, 
including: 

• A breakdown in behavior. 

• A system crash. 

• The loss of incoming traffic (dropped packets). 


E-96 












October 25, 1993 


Custom Testing Tools 

To gain maximum control over the variables in the tests, and 
to simplify the effort, a program was built which transmits a 
valid appearance packet at a user selected rate (up to 425 
packets a second). 

Increasing the rate of transmission effectively loads the 
system under test with network traffic, but this is not the 
same as increasing the number of vehicles because the packets 
all represent the same vehicle at the same location. 

For the purposes of discussion, each 5 packets per second is 
said to represent a "pseudo-vehicle." Idle remote vehicles 
produce a packet every 5 seconds, moving vehicles produce less 
than 7 packets a second. 


Preliminary Test Adjustments 

All tests were run with 12 vehicles: 

• This decision came about for several reasons, the key 
being that the rated capacity of the C Simulator is 12. 
This decision also simplified the testing and the 
presentation of results. 

The error threshold must have at least two dimensions: 

• It was discovered that the Ada Simulator dropped packets 
even under mild stress and so our tolerance threshold had 
to have a "dropped packet" dimension. 

• The C Simulator was never seen to drop packets, so a 
visual threshold was established. If a routing vehicle 
missed points the Simulator was viewed as past the 
tolerance threshold. The Ada Simulator also shows this 
form of stress. 

Test Summary 

A script was run which generated 11 turning vehicles and 
another vehicle following a reasonable complex route. A LOS rate 
was established and the packet load was varied to locate the 
threshold for each Simulator. The results are summarized in the 
following tables and then graphically. 



Evaluation Results for the C Simulator 



LOS 

packets/sec 
(ps-vehicles) 

% discarded 

visual 

degradation 


120 

225 (45) 

0% 

no 

• 

ISO 

225 (45) 

0% 

yes 


150 

160(32) 

0% 

no 

• 

171 

225 (45) 

0% 

yes 


171 

160 (32) 

0% 

no 

• 

200 

225 (45) 

0% 

yes 


200 

160 (32) 

0% 

no 


240 

225 (45) 

0% 

yes 

• 

240 

160(32) 

0 % 

yes 


240 

131 (28) 

0% 

no 


300 

160(32) 

0% 

yes 

• 

300 

131(28) 

0% 

yes 


300 

97 (19) 

0% 

no 


400 

160(32) 

0% 

yes 

• 

400 

131(28) 

0% 

yes 


400 

97(19) 

0% 

no 


500 

36(7) 

5% 

yes 

• 

500 

38 (7) 

5% 

yes 


500 

40(8) 

5% 

no 


LOS: Number of LOS computations done per minute, 

packets/ sec: Number of packets received per second. 

The parenthetical number indicates the number of pseudo¬ 
vehicles. 

Visual Deg.: Was visual degradation noticed? 


E-98 







I 


I 


► 


» 


I 




§ 


Evaluation Results for the Ada Simulator 



LOS 

packets/sec 
(ps-vehicles) 

% discarded 

visual 

degradation 


60 

160(32) 

>50% 

no 

• 

60 

131(28) 

- 10% 

no 


60 

97 (19) 

< 10% 

no 


67 

131(28) 

> 10% 

no 

• 

67 

97 (19) 

- 10% 

no 


67 

82 (16) 

< 10% 

no 


75 

131(28) 

> 10% 

no 

• 

75 

97 (19) 

~ 10% 

no 


75 

82(16) 

< 10% 

no 


86 

97(19) 

> 10% 

no 

• 

86 

82(16) 

~ 10% 

no 


86 

74(15) 

< 10% 

no 


100 

66 (13) 

>10% 

no 

• 

100 

51 (10) 

~ 10% 

no 


100 

46(9) 

< 10% 

no 


120 

66(13) 

>10% 

no 

• 

120 

51 (10) 

~ 10% 

no 


120 

46(9) 

< 10% 

no 


150 

24(5) 

> 10 % 

no 

• 

150 

22(4) 

~ 10% 

no 


150 

20(4) 

< 10% 

no 


LOS: Number of LOS computations done per minute, 

packets/ sec: Number of packets received per second. 

The parenthetical number indicates the number of pseudo¬ 
vehicles. 

Visual Deg.: Was visual degradation noticed? 




E-99 






C and Ada Performance Thresholds 



LOS Checks per minute (Internal Load) 











October 25, 1993 

Conclusions 


The Ada version is slower. 

Possible Reasons for the slower execution 
include: 

The Ada version is a new product. The C version is a 
mature product and has undergone continuous improvement often 
aimed at enhanced efficiency. 

- The Ada packet support is in the form of a TSR standing 
between the Ada Simulator and a packet driver. This code is 
very new and may contain serious problems. Architectural 
problems on the PC may be causing us problems. 

This cannot be the complete problem, however, since the Ada 
Simulator can be stressed without any traffic (and as few as 
4 vehicles). 

- The Ada team has made no compromises for efficiency. All 
checking is on (except in one checksum routine where integers 
are intended to overflow), tasks are used to protect critical 
sections, and there are no mixed language sections (the TSR, 
which is written in C, is not bound with the Ada program; it 
is simply a gateway to the packet driver). 

System profiles may uncover some expensive areas. 

- The Alsys compiler, and PC-Ada compilers in general, are 
not as mature as C compilers. 


Can the Ada Simulator be improved? 

Of course. It is an open question as to how much it can be 
improved. If it turns out the TSR is causing problems, we can 
hope for major gains without compromising the design. 

It would be a mistake to optimize the Ada Simulator by 
compromising the software engineering quality of the product. 









APPENDIX F 


AUTOMATED FORCES TECHNOLOGY PROGRAM BRIEFING 
(ADVANCED RESEARCH PROJECTS AGENCY) 


F-l 






Advanced Research Projects Agency 













Advanced Research Projects Agency 















F-5 


















Advanced Research Projects Agency 



o 


u. 

a 

< 

a 


to 


E © 
© > 


w 

SeS 

111 
o ql-2 
£ £ § 


•- S 

= f 

e s 
" e 

O CD 

c-o 
© c 
© © 
© E 

S E 
c o 
© o 


T3 <2 

«|i 

&§! 
§> ® ® 
o O C 

g <& 8 

8 If 

+5 .Q 


- £ 
®-S 

C)C 
*s © 

= i 
* 8 

Is 

•2 <D 

© JZ 

38 


g£ 

a c 

. 3 
■£>= 

2 c 
$ § 
'■6 o 

11 

~S 2 

as 

Si 


E 

2 

s 

V < 



I 

! 

'o' 

c 




Technology Today • Selected Vehicles and platform entities 

• This program will address 
the technology to fill this gap 
















Advanced Research Projects Agency 



B cc 
o 

1L 
< 


c ? 

s % 

9> .a 

lit 

o o § 

>«r C 

o)5~ 

£ on 

o _-o 

c-o w 
JC C 0) 

o g c 
| £ o 

® i *5 

£ g o c 
« ° E o 

9-C 3'J= 

O O rffl 

« © | 3 
> £ C C 
® O O .£ 
Q 4) O CO 


CB 

3 

t C 

> 4 ) 
h- CO 

o © 

>> Q. 

4> 

<0 *- 
o5 o 

^ ® 2 
■D 'O fe 
c ® 2 

a £ E 


e 8 c§ 

■M W V 

CO := CD "O 

O S'^c 

w (B'-O « 

CO Q.C 5^ 


aS >. 

« ® <o 

° 0 'S 

® > o 

£ a> ~ 

a> i ? 

« £ o 

® O JQ 

£ 3= p 

o cb 5 

±0.0 







Advanced Research Projects Agency 



3) ,2 

| 0)1 

2 o 3 

E o E 
gl’ 5 > 
: g ■ 

3 -S 3 


0 ) > 

w j? 
co.E in 
s> 

2 o-- 

<B « g 
£ C g> 

O 

” 0 ) © 
^ tt £ 

5 o>~ 
> § o 


w -o 

o a 

j3 c 

C 3 

o o 
O E 
-o .2 

S £ 

73 O 

c c 

E S 

E 3 

o c 
O © 

§ i 

o 5 ) 
o 

UJ o 


CO 

O 

2 

o 

£ 

0 

0 

DC 


0 > 
a ^ 

3§ 

8< 

o 


c 
& o 


0 w 0 .2 


'■sS* 2 


(0 o 


.2> a> 


h- ao o I ir. . 


c o> 
0 0 

c c 


F-8 


Systems (Air Force) 

Representation of systems of systems and 
EW in DIS (Navy) 













Advanced Research Projects Agency - 

imensions of Higher Echelon 
ommand AFOR 



F-9 














Advanced Research Projects Agency 



arrojjdda'y puoiAaqag paztnba\j 



F-10 


Command Echelon 










Advanced Research Projects Agency 











F-12 






























































































































Advanced Research Projects Agency 



Q a 

n o 

IL 

. < 


© 2 
© © 


S S 
s S 

? S 

© -s 

S2 o 
a o> 

CO (0 
■D 3 
© t: 

c > 
© +- 
m c 
© © 

a $ 

£ Q. 

S £ 
- (0 

i ^ 

8 ?S. 


© S £ CO 

C £ "o © 


y_ J> © C 

O s © • 


C TJ T3 

£ i § 

■g E E 

See 

POO 

I o o 

O I ( 

o 


© © 
c ® 
o as 

© c 
£ © 

*? 

J. | © 

ill 


0) © 
o 3 

I E 

5 w 

I o 
* 2 

1 c 
S ° 

oO 

Z TJ 

g C 

*• 

3 

© C 

© r* 
* E = 

5P 


■o 

c 

© 

E 

E 

o 

« » 
o> © 

C O) 

o c 
E 5 

© Q 

© K 
C © 
O <d 


O © 

§ E 

T*t c 
© ft 
©2 

*- © 

© o 

£ © 
— TJ 

O *o 

1 a 
§E 

*E 
E o 


C -I 
g. S 

© E 

I? 8 

~ a> • 

Sl s 

« O £ 
* O) 9 

a> « ®» 

■S? 3 

O a -o 

e S ® 
2 £ £ 
III 

J 2 ® 3 S 

« ® r 

|?I 

£ CO ^ 

o sz « 
«*- o ® 

111 


= 8> S « SR 


35 o = 

O E « 
O m £ 


8 * 
s © 

® 8 

= E 


■a ® 
4 oi 

JC O) 

a ~ 

OB ** 
- C 

£m 

JS +* 
t- ® 

o 3 

CC 0B 


O 

£ 

S 3 

0B C 

> I 

0B 
O 09 

a> a> 
S* ® 

t 0 ) 
O OB 


F-13 














- Advanced Research Projects Agency - 

Extension of SIMNET/DIS Paradigm 



Q & 
£ 

. < 


o 8 

1 1 

JZ CO 

® -o 

CD g 

o) 2 
£ E 

Jd p 

II 

0) (0 

o £ 
0 ) £1 
Q g 

p CO 


O || 

c ^ jjj 

5 i? 

§ E 2 
E © J5 
I oE 
o i 

o 


j> I 

+5 O 
C 5= 
Q) c 

"O O 
C 55 
(8 (8 

E E 

i| 

o£ 


f d) 

« 3 

O C 8 

® Q 

3 p 
CD 4 = 


5 SP 

6 2 

S§ 

l| 

• & 

X? ^ 

C Q CO 

<s.y 5 

E c o 

E 

8s § 

II I 

£|j O 
Stj c 


c 

O CO 

go > 
El s 

O 8 3 

£E 8 

j 1 2 

CD | a 
O o * 

o 8 


» Subject to battlefield effects 

- Approach will extend DIS broadcast and throw away paradigm 






Advanced Research Projects Agency 



F-15 













Advanced Research Projects Agency 



r 



n GC 
2 

. < 


I -2 

g M 

■ M 


g a 
E m 
a> o 

I. § 


*£ CO 
C o 

E I 

f 8 

§ a 
3 o 
O a 5 

Q. ® 

go® 

Z • ■ C 
C d) MB 

o > a. to 

O ^ 0 ) 

O *0 

o £|3 

_ J3 g O 

S O a £ 

«> i i 


&• 
a © 

■o o* 

C £* 

3 O 

2 f 

r * 

1 © 
d c 
8 8 
o 3 

>i © 

2 § 

o >. ^ 

a £ ® 
a c | 
° c i 

* I & 

® £ ■§ 
o -2 

o C £ 

•i • 8 
i|S 

O a S' 

o o> ® 

2 | § 
£L £ O 


CO 

c 

O 

E 

f -g 

£ 2 

2 8 

o a 

^ * 

^ o 

O o 

2 ? 
r a> 

Q. CO 

a> 3 

8 o- 

o .2 
a g 
4 8 

§ i% 

Mg 
_ 0 ) j= 

_ S' o 

® OS 

o» i 


v 

o • 

° « 

8 a 

12 
o g 
S a 

i 


F-16 


Continued... 














F-17 






Advanced Research Projects Agency - 

Level 0 Concept Development and 
Integration: FY94 



Q DC 

S 

_ < 


M O 
C = 

O g 

£ £ 

as 

O c 

s § 


3 CO 

P CL 


O 

o d 
co co 
3 O 

S 9 


CO 

§ E 

f i 

© is 

*D CO 

O co 
c Q. 
CM 2 

O © 

s © 

£ Q 


© ■= 
ap 8 
■of c 
So -5= 


-o 

© 

CO 

I CO 
.© JO 
’> 

Q> Q. 

nr © 
U- o 
>» C 
O) O 
O O 


^ O ° 


Q. 

© SR 
© .© 

> £ 
© c 
O 0 


© C 7= 

to 2 

o « S 
©£ O 


73 © C 
> © © 
i 2 i-: 2 


o. ^ 


—* kA> .. 

5 flt ♦!? 


o'« 

|S 

© c 
Q 0 


o 0 

£ e 

5 g 

§■ i 

c £ 
o .E 

2 t 5 

O 3 


g i i 


i i 


"D 0 
C C 

o o 

O O 


LL 

< 

CO 

Qflc 

|o 

^ LL 
CO < 

© 

SR'S 

co c 

< © 


CO o 

E o 
o o 

‘£5 is 
Q. 2 
©□: 

0 o 
0 © 
0 

0 5 

<o 
















- Advanced Research Projects Agency - 

Level 0 Concept Development and 
Integration: FY94 
















Advanced Research Projects Agency 



Task IV: Implement Proof-of-Principle 
prototype 




















- Advanced Research Projects Agency - 

Level 0 Proof-of-Principle Configuration 





J 


entities 












Advanced Research Projects Agency 














■ Advanced Research Projects Agency - 

Level 1 Proof-of-Concept Development 
Ground Operations: FY94-97 







>»C0 ® 

2jg Q) 3 


S sg 


e 3 

CM >. 

O £ 

2 *5 
S -o 

| 1 S 

§ O 5 * 
cr j2 tj 
m S (B 

E • o 
f* n 
c Z c 
* o o 
— c 2 

Hi 

511 

«B 8 I 

O 0 ■O 

2 I co 

CO 01 I 
» CD CM 


ft ft 


ft IO 

o> 

> 

LL 


II 

il 

e £ 

o £* 
o = 

JD 

|! 

|ft 

1 If 

*5 O ® 

g 8 « 

2 2 8 
£ go 
CD ro 

■o II 

£ ■S-o 

Q. 1 .S 

O Sll 

1 io 

S ■ 


$ 

. £ 

o> co 

5 CO 


> CO 

> CO 

1 1 

I I 


3 O io 

II i 

= 1 o 

SI I 
Si l 
g 8 * 
5 *0 c 

J.S 2 

go I 

°® s 
f 

s j? t> 


F-23 


Continued... 






















- Advanced Research Projects Agency 



£ ~ 
2 § 
3 E 

If 

$ ® 

It 


5-0 
<0 c 

S| 

O E 

TO § 

fl 

E « 
o j2 

3 S 

© c 
© 0 ) 

o © 

■£ 3 

? (A 

T3 © 
co jg 
£§ 

-g| 

gi 

1 | 

E E .. 
goo 

o OTJ 

so2 
c CO o 
3T}£ 
= ® o> 

2 m ®> 

"E I fi 

03 C £ 


c 5 
2 *o 
2 8 
< c 


s s 

” to ® 

c « O 
t s 1 

© JC f 

c 2 > 

:?t 

! j a 
I s §• 

o S to 


2 2 2 


So i 

3 0 3 

t E - 

go £ 

i:£ « 

S'S g 

O g < 

© co £2 

© C o 

co ~ 

gE c 
•Q © © 

5 2 © 

8« S 

So ® 
|s5 « 

ffl © g © 

Ijl r © SS 
- r S 
T3 © C -55 


®l 

11 
*g 

II 

5 © 

^ © 
£ — 

© g 

o © 

cc - 

<TJ 
0) g 
03 « 

§ O 

0 2 - 

2 © 
C 3 
© O’ 

© 2 
*5 © 

3.0) 


3 © 

© i 
£ 5 

±2 C 


lif 
© © © 
£ a> 
© x © 

H © X3 


O to 

-sS 

© s 

« 3 

3 © 


C g 
1 X 

I® 

I g 1 

© o 

•u c 

a o 
© £ 
o ~ 
c © 
o ^ 
8 g 

O £ 

o t 

O (0 

be 

8 £ 

£ 3 

O) « 

i I 

Jc © 
«- a 


F-25 


it must begin early in process 










- Advanced Research Projects Agency - 

Transition to STOW 97 Demonstration 



Q oc 

n§ 


ss> 

15 

c o 
Oh 
±-C/> 

S S 

2 J= 

S| 

= m 
*i o) 

>*£ 
o>c 
° — 

o o 
c *- 

o O 

# o 

O c 

LL O 

<o 


f? 

c c 

5’5 

'S'D 

IS 

0)0 

li 

II 


St 

11 

ig. 

f 8 

oO 

2S 

S 5 
Se 

C (0 

§ o> 

II 

£* O 

(0 © 
© C 


o> * 
>- ° 
U. © 

O | 

1 • 
III 


§ o 
x £ 


Is 

c 

O CD = 

33 C -O 
SO® 

J5 O O 
« o jc 

o « c 

i § ® 

■8 Eg© 

4-» O fl)"> 

c S-c § 
o 8 8 8 

2 . o as 
o o 3 o> 

o o = g 
o 4 30 

C O^h 

Q- ot:o5 
« Q-g.’g 

5= >>a» 
10 ?go 
a S ® ft 
>- o o g 

Z IS a 

O O a a 

C (rs O 

w §S & 

i t © 3 

< a © 



Advanced Research Projects Agency 
















APPENDIX G 


SAF CONCURRENT ENGINEERING TEAM BRIEFING 

(IBM CORPORATION) 


G-l 










SAF Peer Review 



G-3 







G-4 


28,1993 







Close Combat Tactical Trainer 



October 28,1993 




PROGRAMS 






















JMtMVI/ArilVMT • • • • 

Integrated Development Team CIOSG Combst TaCtiCfll TrsiflGf 



G-7 


CONTROL 














































w 

I 

5 


G-9 










0 

01 


s< 

Sco 


>o 

Err 

sh£ 


< C 
CO « 


■f 

£l 

«s 

gUI 

E 

0 ) 


r» 05 52 

See 

« s 3 

© w « 

■n >, > 

o CO CO 

IE CD co 

^ CO CM 


•— I 

m 3 


O £ 


■5 Cl O 
? 3 LL 
® J DL 

| 6S O 

= • • 


« 1 § 

m < 

co 
co B 

10 _* 

I co 
x> 

JO 

O 0 - 
CO -o 


0 

•M o 
o ^ 

1 I 

8 DC 

H o 
0 ^ 
© -I 

E m 

•3 • 


4 r ® 

O F 


0 

W 2 

O § 

Q) ^ 
Q. < 
W © 

< O 
C CO 

.2 00 

IS 


agi 1 

8 

S liJ a 
LU _ o 

©go 

O) .2 

© to 0 

E -52 a? 
nj 4 * 

CO o © 
O JO 


• • 


G-10 


Command From Simulator 





Requirements | CCTT SAF 

CODE 










1 ° 

I* 

s 

.© 


X 

o> 

CB 

„3 

< 


• 

CO 

0 ) 

o 

ffl k 

O 4 ? © 

© I ^ 

2T " cb 

o ES 


go o » 

flgjc g 

© 10 m P 


« . *g £So ®fS®E 1X1 

^o 2 ®-*# t-Q iS^I® © 

S Z O r O r O r © Q. <i> > •— t; 

c 3 8 ~§ *g « .SL Q gf ola 2 

2 8 off Eo O 8 a.E£ §22 


E M 

m ,i * 

■= S -o 

g| 8 * 

o 

>° jo 

= © q 
*■» o g 
C m -O 
© ft w 

_ 5 CO LU 


© 

c 

© 

© E 

12 

^ §■ 
o © 
co a: 


T3 

^ c 
2 © w 
fl£ri 
© S-lS 

© CO o g.s J= 


s c loco 

CO (0 Ox) 3 O 


© 

© 

E 


3 

3 

© 

O 

o 

O 

>» 

o 

o 

o 

© 

UL 

F 

a 


G-12 


28,1993 








28,1993 



























28,1993 






UJ (0 

sE 
3 2 


§2 

aso. 

St 


a o 

to *“ 

<D © 


> CO 
2 c 
a ® 

M X 


c 

m 

©ll 

©< 

Q.C0 

© t 

ES 

o c 

"D ? 

g>J 2 

■° 6 
O)**- 

© > 
-°S 

— O) 

< c 


c © 

O) o 

W 

3 « 

js s 

^ ~ > 

o® s 

c o a. 


>% o 

.ts c 

15*2 

:© ^ 
> © 
© c: 

S° 

Q.C 

0.0 

3 ‘-5 
© © 


c >* 

3 := 

T3 ^ 
© © 
© © 
© o 
-Q © 

if 

*n 3 

^ N 


© O p N 

roo.S = 


§ 3 

?.= 

iS-o 

® = 
k_ © 


© O 

"E § 

o- 

© 0 


C 0 £= 

£ 8 . 

O §- 

o © 


$ 8 Q.r 

|§ g 5 

© c 0 
111.1 
el SS 

b® Ss 

B 75 ” <2 

■— i-* © C 

-{=:-= .±: © 
£> o c © 

<£ il E 


p o © 

n © *ts 

O -*=5 © 


© © 

© >» 
fj ■*—• © 

111 

5 B. i 2 

^ o = 

© © 9 
_c > © 

© 

w ■© © 

Ell 3 
S< £ 
«co f 

© h- 0 

>h % 

00 3 

©O T3 
O) c 
_© © CO 

■of 

« 0 c .9 

f.i 

a. © o s 
.£■5 ©o 


2% 

<3 


si 
2 ® 

.9 E 

■*— k_ 

© o 

©T> 

S-© 
o w 

ol 

O x 
O © 
<< »- 


w O) 
© c 

© *c 

5 « 
f ^ 

■0 « 

S ® 

W TJ 

© c 

s« 

O >s 
© 

c 5 


0 S < 


o 

jo ° 

Q_ O) 

s| 

o 3 

75 ® 

80 

§* 

• «Mb 

o 5 

2 © 

CL 

© © 
c o 

Z> © 

© c 

-9 '© 

£Z +-* 

o 2 
o — 

©.a 0 
fc © o 

o §s 

o ~ 

^ © T3 
-£*> C 

©~ © 
C 3 Q_ 

’E ©o 

o ©rn 
o *0 
"O = *2 

O ®3 

9 Jl 

® o 2 

© O 

yrt rn u. 


£661*82 












G-16 


CCTT SAF Provides the R&D Community with a stable Object Oriented Design 
and Engineered Code baseline using Accredited Tactics and Models 








G-17 


October 28,1993 








ri 

?I 


<o 

Ij 

UL C 

i: o 
11 
Jf 

5 - 

£u. 

■gw 

3 t 

«5 

on 

■o w 

(Q 


O o 

0 £ 
® E 


© 

© c 

Q = 
> © 
*^S © 

© © 

E « 

© 


C LL 
© < 
X CO 
LLI T5 

53 

< 1 
CO C 
"O © 
O * 

IE UJ 

© © 
© © 
3 3 
© © 
DC DC 


c 

< E 

CO © 

*S 3 

o CO 

IE « 

■f 0 

© 2 
© M- 

c O 

5 > w 
c © 

0 - c 
© o 
DC D> 
© 


_© 

3 

T 3 

© *- 
_C © 

o o 

CO O 


t= 

o § 

0 o 

© 5 
2 £ 

o e 

M § 

_Q © 

< j| 

0 O 
O CO 

I 2 
i § 

€ Tjj 

a. 1 


i 

g» § 

k. ’-S 3 

CL © 


t 10 

I— 0 

£ -g < b 
3 ro “ 4 c 

O T5 3 ^ 
© C O *o 

t; © £ c 

| 55 g> ® 
< ?2| 
2 'Sj h ffl 

g ® >.2 

§ .9 = ro 
o o) 5 > 

2 iS S2 c 

E 0 © -9 

g 0 x © 
§ > LLI .9 
2 "c 

r co 1 > 


28,1993 












fl 

k 


i i 


T 3 X 
Cy VI 

|4 ~ 


CO 

■Q 

E 
• o 

o 


•o 


o 

CO 

UJ(0 

■a 'Z 

3 0> 
coS 
30 

>2 

LU g 

>»> 
*o ® 
DW 

5 ) 0 ) 

<0.E 
*2 co 
2 o) 


b* 

Pm 


c 
0 O 


— _ u 

sS; 

— o ® 
0 C (0 
0 CL 3 

0 CL 0 

co< cc 


G-19 


0 < 
It 

so 

LU O 


“O *o 
0 £ 

"O 0 

12 

x . 

LU U- </> 

8§1 

0 O ^ 

cr See 


_ « 
T5 CU 
C r-\ 
0 LJ 

*29 

cM 

?|6 
0^0 
(D O 4= 

cess 


October 28,1993 

















U t 

1:8 i 


2 

.1 

o 


•o 


c 

o 

£ 3 

H o 

T 3 ® 
CP Q 


^ a 

2 

3 *C 
O o 

^ a 

2 3 

o co 


< jO 
U- ~ 


o C 

— o> 
® '55 


7*r C/5 d) 

$2 iS Q 

GQ 


f="l2 

o f I 

v— — 'C 

O 3? O 

*♦- o ^ 

fss 

*|3 

CD O © 
n *n 
3 CT 

ts 8 § 

<d a £ 

.t=: J= Q_ 


• • 


3 

•M 

CO o 


■§ w o 


E S -D E g 

£ 55 « 5 a 


S CO 

a e 

CO ^ 

-I 

c o> 


O iS - O 3 ~ O 

_ o) oj ^ o) £ c a 

■| < Q ■% < 05 co il < 
t ^ «0 

iSS • • £ • • i® • 


G-21 


By Building On A Legacy Foundation We Avoid Reinventing the Wheel and Potential False Starts 




o 

c 

Z c 

^ (8 

u.E 

< e 

(0 g 

■o c 

O C 


o § 

CO g> 

OIL 
>< 
•55 co 

et= 

coO 

So 

® 

E 

q> 


£ S 

3 0 

o -g 
q iS 
-ts co 

o Q 

< C 

ll 

< ^ 

CO O 

h= 

L_ JD 

o O 

o z 

o 5 

® co M 

u- » e 
<00 
CO CO o. 
"O 

€ • • 


0 

0 

i_ 0 

0 -Q 

g> £ 

{5 0 

5 Q 


2 

0 fc 
0 0 
F F 


• • 


CO F 
■o 


CO F 
~o 


G-22 


28,1993 









m 

o 


o 

•jg 


.q 

i»l 

o 


$ 

o 


E 

tf 

i£ 


c 

<D 

E 

Q. 

O 

t 

a> 

Q 


1 


2 

a> 

m 


© 

CL 

O 


2 

c 


c- Ji 

5 •§ 

■o 5 

o ^ 

5 o> 


■o 

© 


(0 

T5 


CO 


O 

a. 

*o 

mmmm 

Q. 

CO 

DC 

o 

OS 

CC 


T3 

CD 

CD 


0 } 

QC 


j§ 


© 


w* 

3 

© 

QC 


w =2 
i CD C 
_ 0 

2 E 

*a © 

m .is 

© 3 

3 5 cr 
"» cr© 
« © CC 
o CC 


<0 

>» > 

1 E 

© © 


o 

c 


_ CD 
3 >* 
o CO 
O) 


o 

c 


LL 
©< 
CD CO 

It 

OO 

5 o 


£ 

< 

_CD 

CD 

T3 

O 


C 

*c 

il 


c 

o 


O -C 
0= £ 
UJ q 
«- O 


g2 

S Q. 
c E 
.2*0 
COO 


2 

cc 

Q 

Li. 

< 

CO 

“O 

o 


o 

3 

T 5 

O 


CL 

CO 

CD 


o 

o 


Q 

CL 


c 

o 


O 


CO 


"D 

c 

CO 


© 

E 


t= 

o 

o 


a 

o 

O 


co © 

O © 

CD CD 
CO QC 
£ O 


CD 

0 

a 


o 

co 


8 

Tl 

2 

c 


a 

3= 

a 

CD 


CD © 

O) o 
•E £ 

■Q ^ 


CD 

*s 

co 

*o 

c 

© 

4-» 

CO 


CD 


< 

CO 


• am 

o 

0 

E 

o> 

Q. 

c 

© 

O 

c 

3 

o> 

§ 

0 

c 

0 

• mm* 

2 

o 

5 

o 

LU 

£ 

© 

'cS 

“D 

CO 

< 

% W 

| 

< 

O 

m 

• 

• 


c 

© 

E 

Q. 

O 


§ 

© 

a 


■o 

0 


cr 

0 

DC 


0 

GQ 


CO 
O) £ 


cO 

.go 

0 V- 

0 o 
OIL 

< = 

o LU 
2 T 3 

H- C 

o © 


2~ 

is 

o o 
COO 


.2 0 
© E 

> 3 
C O 
0 O 
QQ 


I 



G-23 


28.1993 










The Hybrid Approach is the Lowest Risk Alternative for CCTT SAF Development 













CO 

II 

Ml © 
(0 

s* 

Is 

ai 

2E o 

.£ o 

£ §) 


Cl 


2 

I . 


js £ 
» o 
£E CO 

0 >» 
_c O 
•*-» 0 

CO g> 
0 0 ) 
O —I 

3 C 

® I 

oc 1 

O) Q_ 
§ 0 

S o 

C CL 


0 ) 

CE # 


"D o 

s £ 

0 

© CO 

*§)| 

0 

CE _g 

_>* O 
© C 

■i= O 

o ,© 

_© I— 

© J= 

CO © 

0 0 

£ ® 

0 0 

0 © 

■c CE 

£ O 

c © 

© 0 

© 0 
& £ C 

>* © E 

(511 

o *> 

# 0 c 

# LL Hi 


fl. ? 

0 *c 

O 3 


© 

© 

CE 

LL 

< 

CO © 
© 

h“ © 

2 

O 2 

OCL 


c 75 O 

-§ © •*= 
cS T) 

© Q. © 

Q. Q_ .E 

©< 0 
T3 4- 

C LL ^ 
T< O 
d>co £ 

ip 

Ha 

©:£ © 

~Z c £ 
©o w 

0 0 © 

© 0 N , A 

3 S e a 
s £• « ® 

£ J 5 a 


O)© 

c E 
•E © 


CEO. 


Reengineering Provides a Production Quaifty SAF Meeting CCTT Needs 
and Facilitates Future Reuse of Research Innovations for CCTT 
















ig Indicates Completed Activities 





















28,1993 









E 

£ T5 


a £ 


o 

£ 

0) 

c 

0) 


O 

QL 


. 0 
CO >* 
0 C/3 


9- it 


CO 
CO 

s 

£ 

o 03 
CO T3 

o 0 

v 4-4 

CL C 
qI CD 

CO E 

C ® 

.2 Q.^ 
0 Eq 

£ -ag 

< o CO 
CO £='“*' 
T, C<D 

2 o <0 

o CO 
*2-8 


< 

CO 

T 5 


O 

© 

• MM— 

-Q 

O 

c 

0 

*♦—> 

*0 

0 

CL 

0 

•* 

LL 

< 

CO 

ID 

O 


0 


E 

0 coco 

LL T3° 

< £ o 
CO « 0 

LL | S' 
8 ° 


on» 

2 Rw 

« 2u_ 
0 *-=C0 

0 OL m 
0 X ® 

D LU£ 


c 

o 

"0 

c 

0 

4—> 

X 

0 

0 O 

0 c 
— o 
Q « 
O 0 

S 8 

CO .Q 

0 5 

J= 0 

H*0 


550 

0 O 

*js 0 
o c 

0 O 

!i 

o « 

i* 

O 0 
0 C 
0 O 
0*J= 
*“ 0 

.2 to 

O -r^ 

JO o 

E 2 

Wjo 

B « 
o E 


0 

O 

O 


E 

0 

|2 

LLi 

O 

0 

C 

o 

• 

4-1 

0 

4 -» 

J2 

k_ 

o 

5 


0 

0 


0‘S 

0 X 
c .Q- 

0 j c 
x «2 
0 0 

£ ^ 
H o 


Q. ® -= 

.. — 4-> 


0 
4—> 

c 

0 

E 

0 


o- 

0 


w.2 

0£ 

JO 0 

0 > 

C «- 

0 0 
4-4 

C C 

• 5»(3 

0 L-/ 

0 0 

T3 C 

0.2 

rr 4- 

5 0 


0 

C 

0 


0 


«o 

® o 

JO JO 

3 0 
■D T> 
O O 

2 E 


c 

0 

> 

■ Mi 

k_ 

7 

0 

to 

T3 

J>s 

a 

4-4 

c 

0 

0 
• MM 

c 

o 

44 

*0 

o 

Q. 

E 

8 
0 
o 


0 

•M 

0 LL 

£G 

ro 

O v_ 

o 

>»**“ 

0 
0 k_ 

0 0 
0 > 
0 L. 

O 0 
0 0 
C T3 

0 52 

m 0 
§ o 

Js 

o ® 
0 « 
0 o 
c 


0 

c 

o 

• •^B 

4-4 

0 

4-4 

0 

LL 

< 

CO 

0 

E 

o 

o 

0 

JD 


C 

0 


= £ ® 

~ZZ “ 4-4 


2-0-2 


£ 


0 0 
0 0 

■§5 

c^ 

R 05 

o (J) 

Eg 

0 C 
0 ® 
>>LL 

£o 

£0 

S-O 

11 
JS-S 
o = 
0 E 

LLI 0 


c 

3 

O 

E 

jo 

O 0 
*D C 

E ® 

0 C 

£ a 

a e 

c o 
0 o 

•5 


0 
0 
C 

03 
C 
0 

0 
o 

0 .2 ■£ 
k_ 4-4 U 

0 0 0 
4— k- k_ 

c 0 0 
0-3= 

o O ~o 


04 


G-29 


The CGF Architecture provides a modular, reusable baseline 
supporting horizontal and vertical extensibility. 








G-30 























o 

# iS 


0 

£ 

>g 

© E 

^ © 
0 "5 

?co 


■gs 

(0 O) 

Si 


Oui 


0 

E . 

0 CO 

V- 

0) CO 

2 "D 
CL 0 

si 

■a i 

2 CO 
o CO 

S E 

<1 

isOL 

12 
CO 0 
C JQ 

2 E 

X 3 

LU c 


O o 

O o 

3 2 

0 Q. 

|8 
O 111 
•g CO 

o o 

or 


o §> 

*«—■ J 

0 2 


0.2 

0 E 

Jg 0 

II 

O.ti 

.E 0 

O -O 

c 

0 0 
0 JC 

_Q ♦- 

-o j2> 
0 .E 
o.e 

o 2 


CO .2 
_ w 

S3 

££ 
(0 ® 
ST "O 
UL (1) 
.. 0 

i| 

0 0 


0-*= 3.E 3 


— T5 

Si 

SI 

o-g 


0 

3*0 

L. j- 
<2 0 

h 

,9 o 

O o 


c w 

E p 
o c 

3 0 

9 0 

* S 

8>S 

§8 
C tZ 

0 k_ 

0 0 
A 3 

*o 0- 

0 E 

Q O 
-J o 


w o 
2 0 

O 0 


2 CO 

0 E 

C 0 

o 0 

■§“ 

«® 

3 3: 
E.2 

•2 x 

0 Q} 

|® 

l. 

2 c 

■S ® 
0 <d 


2 -2 ® Q- S o 


0 JO 

> o 

0 

° E 
c _ 
o E 

?! 

fl 

2 JD 


«* r* 

O 

E "0 
0 0 
k_ -*—< 

0 3 

o5 


c . 

O 0 
*= 0 
0 ’4= 

E --= 
-0 
o 0 

c 0 - 
— 0 

CM 0 

o® 

LL 0 
< £ 
<0-o 

o£ 

g» 

*c c 
0 -g 

CO o 

.. D. 


to © Q 
3d 0 0 

0 m 0 JT 

ik £ cco 


G-31 


This provides scalability of the number of simulated entitles per site, reduced single point 
failures, and flexibility In allocation of computer resources to exercises. 














o> 

*0 

0 

Q 


>» 

JD 


E 

© 


co 

LL 

< , 

CO LL 

^■g 

£2 


iS 

0 

a 

£ 

o 


0 

>* 


co 

t 


LL 

< 

CO 

x> 

o 


o 

o 

O) 


*D 0 
0 4= 


§ § 

<n -c 

® 0 
cl a 
0 0 
CE 2 


o 

■o 

c 

0 


w J2 
0 o 
~ o 
0 H- 

3 O) 


1= O 

O £ 

e © 

-- E 

t IL (C 

© < ii 

9- co 


a .E 


0 

■Si 0 


0 
2 S 

< c 

LL LU 

^ 0 

co 8 

■n k. 


LU 

LL 

< 

CO 

TJ 

O 


Si 

£ « 
O 5 
O -S 


© 


1 s 

2 0 

(d cr 


2 "o 

Ji 0 a 

.t; O DL 

5-^0 


0 g- 


0 

£ • 


Q # 


“O 

0 

0 

0 

0 


0 

0 


0 

t 

0 

CL 


0 


3 

O 


■Q 

5 


0 


0 


!© 


o> 

*0 

0 

D 


0 

C 

o 


*o 

c 

0 


fe <» 


© £ 


0 

0 

0 

CD 


3 E 0 
0 CO 3 

E CL o 

O o o 

O ■§ LL 


_ 0 
0 fl} 
O) Q_ 

*12 

o 2 

C CL 


LL 

CO © 
T5? 
O ™ 
2 O 
_ 0 
oS* 

0 O 

« *5 


0 


0 

E 

0 

CL 

E 


© £ 
0 0 

0 C 

LLJ £ 
C.i= 


0 

5 


__T 0 

°S 


^ o - 
0 0 
oca: 


0 

0 

O 

0 


0 


0 

■Q 

O 


O 


’£5 0 -= 


*; O 


0 

c 

0 

o> O 

O) 

c 

© T3 

2 
O 


0 


CL -E 


0 x> 


0 


0 3 

C O 
O 3 


2 OT 

® t£ 


0 © 
CO c 


0 

.ic 


© .E 5 


c 2 

§ i 

LU O 


Q. 0 
X® 
LU O 


G-34 



modular, reusable components. 












© 

O)^, 

c Si 


*- CO 

co 

§5 

ill —* 
coll 
©< 
>(/) 

o-g 

«s 

«2 

gs 

?s 

i ® 

m3 

o ® 

g c 

O co 

SE 

ii 

Q 0> 


03 CO 

3 3 

O ^ 
CD CO 

co in 


O 

Q_ _ 


<D ^ 

G> CO 
m t— 
+2 0 

JE =5 


C 0) 

s g 

2 O 

© 

O • 


c 5 

§ i3 

LU CO 


ii li 

| a: 1 E 

i5 2 1. | 

CO S O « 
CO 
© 

• • • 


© O 

O) 

© ^ 

E ° 
© © 

2 £ 

© 

§ £ 

LU □ 


• • 


o 

CD 

d CL 
.S2 | 

I = 

< 3 

O H- 
•*- ■*- 

O c 
w © 

1-3 

4= to 

o 2 

o e- 
© © 
UL £ 

© — 
O JC 

c o 

E I 

o <5 

© *t: o 
© © £ 
_>* Q- — 1 


G-35 


28,1993 







o c 

e| 

®o 




~ o 

»CL 

I® 
£ c 

Q © 

op 

eg 

g£ 

Sh 

5 £ 

~ « 

§*■ 
8 © 
C <D 

0) E 

Si= 

geo 

E« 

© O 
3 E 

3 < 

© 


CO CO 
D 3 

O O 

m 
• ■ 

CM t~ 

CO CO 

CM 


C CO 

£ -g 
2 < 
© 

Q. A 

O • 


fc co 

© — 

© to 

CO [£ 

o *g ~ 

so a § 

DC g E 

o ^ *4= © 

8 e O 3 


© o 
< © 
r E 

8 S5 

o □ 


o 

<o *t: 

w © 
>» Q- 

© 


o c 
-o a) .2 
§ E o. 
> F O 


G-36 


October 28,1993 




u. 

Ik* 

H 

»g 

© % 
© S' 


CO o 

£ b 

*- CO 

© f 

b. 0$ 

3 0> 

TS* 

ss 

25 1 

<* 
0 ) c 
c o 

“5 E 

m E 

CO o 
CDq 

® CO 
X) © 
©2 


2 o 

S* 

Q C 
-« 

a £ 

£ c 

l- « 

oi 

£•5 

H o* 
CO i 

©cc 

£ 


o> 

c 

© 

© 

.12 DC 

>s w 

© g 

C *S 

< E 

LL X 

<r © 

T3 

i • 


.55 2 
> © 
© 

Q O) “ 

s-i g 

© © c 

I2.E -g 

8 g* i® 
<® « 

f £ | 

c ^ © 

©•■£ .-ts 
>£ = 
© IE 2 

n c ii 


© O 
O 4^ 

a. c 

E ~o *o 
o © a. 

|S | 

43 © © 

go 55 

“ P TO 

■is 8 

« ‘S| 8 

D O 2 S 
~ © D> > 

© © .55 2 

.t; (OQ DL 
o 

< • • 


~ c 
Q. O) 

E *© 
— © 

© Q 

■g i-O 

Egg 

© 5= © 
© LUGQ 

131 

-i <5 
© 

5 • 


G-37 


28.1993 



















Li. 

co 2 


i s W# 

t « i 


O © 

o S 

.£ -8 
eg © 

<3 Q 
Q c 

"O CO 


CO 

CO p 

E £ 

r 

•MM • BW 

■H k_ 

‘E ° 

fi 

■M k. 

co 5 - 

3 i 2 

T3 r- 
C c 
o 

2 iQ 

2 c 

c © 
o E 
O g> 

■© *5 

§ §■ 

CD 0C 

CO >» 

q. :t= 

E c 
o © 
O 2 


© I— c 

•St— © 
w5 E 
cO © 

S.E & 

— 

o 

^§3 

■§5 2 

©— ijj 
O 0 ) “ 

Q.g © 

n O £ 

to - 

C © N 
® CD ® 

Q_<-< 4. 

o S 2 

® 2 a 

> co co 

© 3 -C 

oo o 



G-40 


28,1993 










0 


c 

o 

*■§ CO 

£< 

0 O 

p*- 

— 1 0 

0 C 

0 O 
3 © 

c © 
°6 
ol 


0 0 
0 £ 
“S 

E 0 
0 0 

OIL 

6? 
w 0 
•S © 
5 E 

i5S*F 


0 

o 

c 

0 

E 


£5: 

.go E 

iiS't 

J= £ a! 


0 si 

5 o 

_ CD 


o o 


0 


E 

0 

I 

0 

0 

0 

JQ 


0 

® O § 

sq§ ^ 


2 i- 
•» 

0 
D> 

O 

^ m c 

.E g 

2 c 

u o 

t© .E 

r- > 


© LU 
O) O) 

.E jg 

0 o 
0 o 
© -2 

O CD 

I 5 

Q- o 


E 

o 

TJ 

C 

0 

dc 

CO 

•% 

0 

"O 

0 


T3 

C 

0 


0 

|2 

■§ 


1£ <S 

|2 -g « 

*g “o 
0^0 

0 © © 

© -E 5 

^00 

0 § 

• £ o • 


CM 

• • 

0 
C 

o 

• MM 

0 

c 

0 

0 0 

0 N 

Q.C0 

© C 

DC- 

0 E 
0* 
«<M 

« K m 

« 5 £ -® 

Oi£ 


0 

E 

0 

a 

J0 

CL 

E 

o 

T3 

C 

0 

DC 

CO 

©~ 

"O 

0 


■o 

c 

0 


'■C 0 


0 

O 

<D 


O 

0 

LU 


0 

C 

o 

• ^M» 
0 

0 

0 

£ 

Q. 

0 

DC 

0 

< 

“O 

C 

0 


_0 

0 

C 

I 

0 

5 

•*. 

C 

o 

£ 

:> 

O 
• • 

E 


0 o 
0 w 

jl o J? 


o 

O) 


0 

CQ 

0 

C 

o 


o 

0 


0 
£ 

•£ “• 0 


0 


0 

a. 

E 

o 


o O 

0 SZ 

£ “O 
^ 0 


CM 


0 

_0 

O 


O ^ 

in cm in — 


-9 

'0 

‘E 

0 

C 


0 

O 

c 

o 

O 


0 

(2 

0 

E 

• MW 

T 

c 

D 

DC 

0 

E 

o 

v_ 

0 

E 

F 

c 

o 


^ *♦= 


0 

N 

“0 


Z "O 

O © 

<2 • O 

C 0 c 
OX) J= 
•r: 0 

2Z: cc 

0 X) __ 

> © 0 
N q> 

©•= |© 

*= 0 

£ a. c 

tO =g 

r= -a 0 
3 c 0 
DO 0 CO 


p^ 

CT 


G-41 


28,1993 










CO 

fa. ® 

Og 

■gS « 

•s CO 

O Q. 

Q. co 
oP 
c O) 
t = 

S 2 

juft CO 

CO 0 > 

c o 

=a 

8 = 

>< CO 

Ul £ 

c£> 

co*“ 

Cflt 

®< 

S(0 

It 

J8 

s's 

2 c 
0.0 


1 ® 

3 ® 

y 

Vx> GO 

<•% o 


■I ® 

ri 

■■ 5 

© 

© 
o 


< Q. 
U. £ 

< O 
CO > 
n2> 
O G* 

S o 


*0 *D — 
P <DC 

2 -° = 
♦3 CO g\ 

g.S2 o 

§ 5 -* c 

5o (0 

°® <0 
C/3 CD 
.20 -o 

•5= ® > 
® p o 

“Y CL 
CO c O 
c 3 2 

our i- 


co 

_ c 
c (d 

0 (D Q- 

o §* 8 

9§>§ 
«S* i 


« 0 ) t 

O-C ® 

u ^ n C 
(OO ,.C 

c — « 32 

2*0 co o 
■B CD T3 0 


°-r QiS 


= 0 ) 


E *-* W *3 T-i k- 

T5 «Q ^ ® 

*= ® -p a> 3 E 
■c .n < x: pf 0 

| §> E >;0 g .§ 

o <o.g| gg- 

8 i° st m* 

a 2 S o c O lx. 
a fe-? i ?3 h< 

< qo: oco 


o <Q-o S 
0 cO .2-B 

§ 22 S' 


G-42 


f/j/s approach supports extensibility and inclusion of additional 
algorithms from ModSAF research. 





28,1993 






Integrated Development Team CIOS© COWlbBt TflCtiCfll TraiflOf 



0 


CO 


8 


O 


CO 

3 

C 

CQ 


£ 

o 

2 

CO 

I 

0 

cc 

o 

o 


O 

a> 

o> 

co 

3 

O) 

c 

CO 


c 

3 ^ 

E O 

E °, 

o 

o CO 

JC -X 

P o 
CO o 
a) T “ 

C/3 V 
£ - 

O ~ 
. p 

0 ) .® 
•2 2 
o a. 

if ^ 

P E 

= C/3 
0 * 

8*5 

Is 

5 <§ 


0 


CO 


C/3 

«*-* 

C/3 

O 

P 

03 

P 

S' 

0 


0 

0 

C 

0 

Gl 

X 

0 


O « 

§ II 

3^-0 
O 0 0 
0 > v “ 

0^0 
u VJ 4^ 

:: — 0 

| ■§ 8 

ill 

•£ ° I 
0^*0 
S > 0 
•5 0 > 

200 

Q- X O 


0 

O 


E 

E 

8 to 

go 8 

1 05 
8 

o v, 0 

So" 

® ® (B 
"D C 
A § 

O ? 

ffliS c 

■52 p •“ 
co 0 - 

■a 03 
c P 


0 

E 


c 

3- I 

® S 
£ g 03 

s JS *3 

0 = _Q 

-Q 

3 0 

o> P .-t; 

"Be 


0 

£ 

P 

0 

0 

0 

>* < 
*= 0 
■2 0 

-8 £ 
c 12 
£ -- 
0 0 

0 P 

"D c /3 

3 0 

0 0 
© ^ 
O H 

® e £ 
g. |r 

O — to 
® £ ,£ 
•= 3 
O E 
P 3 .2 
Q) h m 
2 » 8 
Q. o its 
^ CO 0 
O GL 3 

r e o 

C O _ 
0 P 0 

p X E 


0 


0 

0 

2 


O Z3 


5= O 

0 7 
«*-* 

0 

O • 


o 

LL 


0 
P 
C 
0 

E 

o 
T= 
0 
a. 

c 
0 

03 

P 

O 
0 

P 

w 

o 

k_ 

0 0 
■§ -s 

P 0 

» I 

C ■*- 

0 "D 
SZ 0 

u 0 

o *c 
fc o 

© 0 


G'44 







El. 


0 3 

0 & 
'- J 


— 03 

<D CD 
0)3 

-i © 


© © 

82 

°g> 
O Q. 


.9 -o 

E 5 


0 

O) 

© 

3 

O) 

c 

© c 

o 


© CO 

2 ? 
“ i 

© E 
-g © E 
© o> o 

2=2 
Q. O) V ~ 
QC £ 

© © co 

gji t 2 

■5 ^ LLl 

iS O Q 


S © 
© © 

0)T3 

£ © 

Q£ 


Q) © LL 

FS < 

CD CO CO 


0.(0 © 

IS fE 


© 

© c 
.© © 


;> o 
o c 

« i 

fc o 

o © 

U- 3 

u © 
c © 

CO 13 
© 

•* 


o’ w 
°-2 

•Q g 1 

11 

2 o 

Q. © 


© , 

| t 

© o 


a 8 


© o 

c > 


•— 03 


© .= 
-© £ 
c O 


.= _Q 

g >, C 
- 3-5 
§ 8 | 
-o © 

g> o 

8 ?T3 


< © 
c 

co c 


CM 


is 


B © 


© 03 

o ' -w 

«T3 


£ W 

E © 


o g> 

*6 5 


© © 

cl 
© © 
E E 


•— © 5 
© X) ** 


.9 > 


© 3 
Q- o 


o © 

*t D 
© -t; 
Q_ w 2 


ts 

Si 

© 


E.-^ 


w ^ UJ 

< O “O 


• • 


g © 

t ® 

H © 

1 = 8 . 

o §■ 

O © 




G-45 


The use of Ada directly promotes present and future reusability, 
controlled configurations, and life cycle maintainability. 











G-47 


October 28.1993 




as © 
□ c 
«r 

! 8 

c° 

oo 

§© 


0.0 

© & 

|8 

CO co 

Oo 

m © 

o? 

55 « 

Ig 

15.8 


c ^2 

•8 q-52 

•8 ©t, 

o *- c 

© © E 

■o © ^ 

<D E-g 

S’ ts « 

3 ,® M 

®-o ® 
J « c 

sz \z 'o> 
co O c 
:= — © 

c .§•£ 

8 g| 

'4— O 

S © © 
c m w 
® £ fc 

« 3. 

£ t 3 c 

Q-ga 

DC CO © 


• • 


■c O 
© 

Q_ ^ 

X 

© 2 
v. ' 

■jj JQ 
© __ 

E ? 

ts © 

© 32 

S' 15 

!» 

is 

|2 

© CD 
■D 

45 I 


B § 

© $ 

g) -o 

£ © 

T © 

O CO 

< o 

° I 

>» © 

xt -c 

Z: © 

T 3 X) 

© if 

© © 

T3 .2 

IS ^ 

© S 

> B 

<o c 

O s 

£ 5 

2 «-g 
t o ° 

O^o 


U O O 

0 .M 0 

4—< -4—> 


© 

© 

© 

_Q T 5 
© © 

© C 
-O © 
_ CO 

O £ 
DC CL 
c 2 

■O ^ 
0 .t£ 
kl o 
O •-= 

4— O 

© X 
0 © 

© © 
© © 
GO co 

o 

*o 2 

© B 

P ra 

o. £ 
CL £ 
© •— 

■o 2 s 
c .E 
© © 

Si 
^ ° 
© T 3 
> C 
* © 

© CO 


© T 5 

"O © 
:= O 
JO © 


45 5 
> DQ 


G-48 


Validated CISs Provide Source Documentation for Implemented SAF Behaviors and 

Serve as Their Design Specifications 












CO 

CO 

s 


3 

c 

2 . 

CO 

c 0 
m o 

6 2 


II 


co £ 
o< 

U-—' 

< g 

co E 

o 


o£ 
© 
a 
o 


» 


c 

CD 

E 

a. 

jo 

§ 

0 

O 


E 

0 


0 

E 


o 

o 

i2 

0 

J2 

0 

aj 

0 



0 

•*-» 

0 

*—» 

o 

> 

♦5 

§ 

T _ 

o 

"•55 


0 

3 

o 

0 

0 

o 

a: 

8 

£ 

2 

cc 

O 

c 


LL 

o 


0. 

TJ 

CD 

o 

0 

0 

O 

o 

0 

O 

o 

JO 

r^» 

to 

0 

>» 

>» 

C C 

0 

© 

0 .9 

0 

0 

E w 

E 

E 

0 .o 

m mmm 

X 

‘x 

3 o 

s 

o 

L. 

CT0 

Q. 

Q. 

© Q. 

a 

Q. 

a: co 

< 

< 


G-50 







G-5 










C/3 

<53 ^ 

~ o 

o _ 


cl 

!! 

j -g 


O •* 

■*-* c 


c o 

■g £ « 

O CO CM 
= ^ CM 

i • • 


«2 3 
t” +-> 

o § 

*§ g 

c © 
® DC 


O • 


© (0 
O 0 

11 

<o o 

00 -g £ 

o l-g 

= Si= 

S • 

S o E 

« — as 

CL S'S 

^ | c c 

CQ -g S o 

cm e| S 

in => § aj 

*5 c © CL 

0 -Q v_ 

SP c c © 
w fc w t 


0.-2 
"D o W 

£ IS 

2 5? 

0 0 3 


c c 
o o 
o o 

to iS 
cl a. 

g ® 

© 

ii 4 

D) 
C C 
O LU 

I * 

CO jQ 

O E 

< © 

£ o 


I— Q 
CO LU 
^ CO 

0 t] 

!© CL 
o O 

O U. 

s I 

CL E 

< g 

O c 

< < 


I I I I 


G-52 


October 28,1993 







Sf 


.1 

» c 

■ © 

■ E 

■ o 


: s 

i s 

D) 

© 

C 


© -S 

CO pr- 

XJ CL 

2 •£ 

■Q if5 

<D r— 
O 

=2 CM 


Q- # 


8 2 

12 

Q_ 0 

0 ^ 
•- CO 
CC $ 

__ CO 

Id g 

■a | 

§ 8 

o ® 

2 CC 

CO CO 
CM CM 


■g O 
CO O 

-5 4- 

a- JS 

co cl 

c c 

CO CO 

^ 4-< 

• Mi 

-♦—> -*—« 

c c 

< < 

CO O) 


© © 

CO tr 

CM 5 


° C 
CO © 




T3 

© 

CO 

© S 

_o © 

■“ D) 2 k 

c c c 
o © © 

0£ CL 

© ° E 

CL© O 

^ E ° 
c * -* 

5P § 

E © -g 

5c o 

o © £ 

2 | c 

si ? 

cro m 


o • 


G-53 


October 28,1993 







G-54 


Close Mapping Between English Language CISs and Code Facilitates 
Strong Software Development Practices 











m 

»- 

co 

o 

o 

‘■2 

IS 

.Q 

.i 

o 

fl> 

0) 

o 

>o 


E 

■ £ 

S c 
■ © 
m E 

_ CL 
O 

I 

© 

a 


E 


!E 

“ B 


I 


8 


"O 

c 

CO 


CO 

o 

s 

£ 

© 

TJ 

O 

O 

u. 

< 

CO 

c 

CO 


0 

0) 

DC 


£ 

o 

CO 

C/3 

E 

B 

>» 

0 

o0 

•t 

03 

4^ 


03 

C 

CO 

E 

c 

o 

‘55 

o 

CD 

tj 

1 

CD 


22 3 JD 

*“ * ! 

4-) 


03 

J0 

O 

§ 

LL 

< 

CO 

CD 

c 


c 

3 


CD “ 


Q. 

CO 

o 

03 

0 


■8 8 ■g 

o| e 

*0 O 

0 0 *> 

o) x: S 
o 03 ^ 

~ CO 

o 

• ■w 

o 

CO 


0 3 

S'E 

Or 

tj" 


0 

0 

0 

k_ 

O 

’co 


TJ 

_0 

JQ 

E 

0 

0 

0 

0 

>» 0 
.5.52 
x ^ 


H •- 

P £ 


£ 

o 

E 


tj 

0 

03 

c 

0 


0 0 
*5= X 

® 0 
-Q O 

C S 
0 O 

O 0 
Q. 


0 

0 


0 



0 
D 

0 0 0 
0 C 
0 m O 
<0 rsss 
^ X ,0 

O 0 H 


0 

0 

§ 

o 

_0 

QL 

0 


§ 

o 

JQ 

0 


3 « 

■go 

E S2 
0 o 

0 ^ 
•> 0 

55 0 

0-a 

0 

= jd 

P E 
c o 
CO o 


o 

X 

0Q 
0 ofi 

•oq: 

C u. 
0 O 

° 0 
©03 
^ >* 
8 <5 

<2 0 

° *= 
*5T O 
^ »*— 

j^TJ 

® 2 

•° ‘3 
03 O' 
C 0 

'i ® 

SE 

-o ° 

0 X 
s= 0 

fcfl- 

£i 

CO o 


O 

o 


TJ 

0 

c 

*5 © 

■o^ 

§.i 
0 0 
-5:8 

0 Cl 
5k °- 

c 0 
0 0 
0 
0 "o 


0 

X 

0 


TJ 
0 
TJ 
-Q 
0 0 

©£ 

•Q c 

0 E 

o © 

£5 

.2 03 
> c 

JStj 

®2 
o O 


c >» 

o JD 

0 < 

Z CO 


0 

0 

o 

0 

X 

0 

c 

0 

E 


TJ 

0 

£ 03 

o 0 

U 0 

0 0 
-Q o 

>» 2 
0 Q_ 

E 0 

0 £ 
0 J2 

-=: TJ 
■a 0 
O 8 

E ® 

0 O 

.9-8 

i3£ 

"0 -2 

JD V_ 
0 

85 

Bg 

0 C 
o_0 

■Se 

X * 
LLJ .C 


2 

0 

0 

-S 0 

3 k_ 

TJ 3 

I ® 

f’o 

1 * 


0 
C 

o 
o 

4 —< 

■§ 10 
a. 0 

nX 03 
°0 (0 

0 C 

E <2 

O I 

■M 5 - 

0 O 
. cl 

0 03 
x: 0 


.0 C JD 

Q_ 0 

^ Q. 

£ O 

B c 
0 0 
sr C 

• MM • «■■ 

5 0 

CO 
. 2 >> 
$j3 

TJ 0 
0-0 

2 -- 
0 c 

t: 3 

0 r- 

■M 

c .t; 

TJ ^ 

0 0 

• _ 4-* 

•*t= 0 
O O 

8.1 

Ti 

1 E 

> o 

> o 


S 8 


1 1 

i I 

t= o 
0 is 

i s 

■§2 
*Z 0 
o ^ 

■O .2 

8 c 
-E 03 

0 *0 

TJ 0 

0 

0 0 
O O 
0 0 
T= t: 
0 0 

c c 


o 

(O 


G-55 


CCTT SAF Open Architecture Provides Flexibility in Assembling Code Modules 

to Fit the Needs of An Exercise or Application 




SAF Behaviors Code Captures the Nature of Tactical 
Reasoning Above the Platform Level 

SAF software developed from CISs exhibits doctrinally correct tactical 
behavior that is: 

• Traceable to US and OPFOR doctrinal literature 


JD 

3 

•8 

E 

6 

I 

CD 

JD 

03 

> 

8 

• IM* 

o 

CO 


CO 

CD 


T3 

C 

(0 

cc 

O 

Li. 


CD 

£ 

CD 

C 

o 


05 

c 

• MB 

>» 

% e 

O O 

! i 

o 

O) 

c 

"O 

*o 
CO 


JD 


0 

.Q 

15 

o 

•f= 0 

3 £ 




CO 

C/5 


o 

0 

O 

0 

05 

C 

o 

E 

0 

■o 

c 

0 


05 

0 


O 

C 0 

E 05 

0 JO 

T3 05 

0 c 

c © 

-Q ~ 

ii 

O 05 

2 iS 

© <D 

JD £ 

O tr 

O O 


05 

0 

D 0 
*“ *0 
O O 

* s 

2 -O 

O l 

© > 
"M __ 

0 X5 
*—• C 

g 0 

2 £ 
*5 0 

O ’> 
0 

05 k “ 

0 2 


0 


= ^ u u r 

r- ^ •— 4^ •— 


I 1 
0 C 


0.2 — r o 

^ -O O " 7 \ .O .P 


■go 

0 .t£ 

u. ■*-> 

o 55 

r= JD 
,0 3 
P" 0 


r9 O 

g > 

X © 
LLI JD 


Q- >» 

S’ © 

0 W 

O 

S "0 

§ Q. 

CL C 

Q. c 

< W 

• (E 


0 

LU 


05 

0 CO 


0 0 

*0 *0 
0 0 
LU LU 


i 

s 


m 


G-56 


SAF Behaviors Code Maps Closely to Tactical Knowledge, Facilitating 
Knowledge Transfer from SMEs to Software Developers 




3 

Lu 

^ M 


o 

£2 
£ o 
o“ 

II 

<3.3 

sl 

1® 


C0 73 
O © 

® g 

8< 

« g 

|c 
> o 
S to 

© o 

CODE 

U. 

< 

CD 


?8 

1 co 

CO *- 
CO >. 

s ® 

g ® 

© 

o •*= 

2 §■ 

>* o 
o 8 

C © 

0 £ 
O) Q. 

■E 00 


CO 

CD 3 
E O 

a s 

co o 
c j= 

c o 
— c 
o 2 k 
= CO 
O CO 

-g -O 
E c 

S' « 

08 ® 

.2 g 

to *P 

3 C 
0 © 

0 © 
.3 0 

a 

» 2 

■Q TD 
C r 
0) 0 


8 .s a © 

T © O) W 


~ *D 
3 © 

E cl 

£ 2 
a t? 

Q. CD 
0 0 
O C 

2k CO 
== 0 

»— CO 
3 C 


1 9 
CO CO 

V ° 

1 a 

C T3 
’w *© 

o a 

0 o 
*D CO 

CO "J3 


.22 O 

g E t3 

CO LU ^ O 
0 


CO 

§ 

9 >* 

.E i 

co o 

C0 4= 

CD co 

il 

|l 

co 0 

Is 

to c 

a co 

(75 .E 


• • 


co 

CO o> 


0 O 
x: co 
■*- cO 

C C © 
O — 

•a JO Jr 

2 1-2 
5** 

a £ i 

CO o o 
O ~ 

•♦= *o o 

CO 0 
IE NT3 

Q. ~ 0 

o a .a 
0 ) ® = 
^ r O 

S 8 

rn 05 W 
0©,. 
CL £3 O 

|§? 
3 O C 
CC WO 
0 CO 
3 CO 

• c £ 


■o 
^ 0 
0 +- 
jD g 

SB 

ST 

0 C 
-C O 
4^ **5 

O ® 
C 3 

0*0 

~«8 
0 -*-> 


*- 0 
CO > 

o ® 

§ £ 

0 0 


_ 0 

to = 
o ° 

E © 
.9 a 

.■ts © 

£ a 

£ ® 


c £ 0 
> jc*o 

® 8*3 

£ ®® 


.II 

0 

0 O 

£ © 
c c 
0 o 

CO *= 

£ 2 

Q.® 

0 CL 

C o 
O © 

73^ 

0 C 
0 — 
=3“D 

0 0 
c c 

0 C 

w a 

0 Q_ 

3 0 
CC Q. 


0*2 

Eto 

0 k- 
•- © 
E Q. 

0 <3 

O 0 
0 > 

F © 
_fj "D 

O CD 


O C 

o| 
o *- 

£ 3 
•F O 

0 £ 
©•■E 
0 $ 

=> T 

LL © 
< 0 

£■& 
t 2 

O §; 
O co 


G-57 


S^F Code can be Generalized for Reuse of Common Behaviors or 
Specialized to Achieve Systems-Speclflc Behaviors 





Si 

ll 

CO 


■■ o 

x> 


o ^ 
•2 © 
o r 
© o 

Q- 
W CL 
© 3 

“O w 
© © 
© -Q 

i ^ 

■iz w 

§ E 

£ E 
CC § 

® "o 
.£= ® 

? ! 

? § 

© ♦= 

g s 

£ S 

® *= 

c ® 

•== © 

CO Q. 
h* 2 
O 3 
O 2 


c O 
.2 CL 

4-rf _ 

1 i 
8 •§> 
© 3 

O) o 

S Jc 
■0 — 
© *o 

O) © 

© © 

g- 03 

.12 © 


© 

0) 03 

.i I 

■o E 

° I 
£ © 
So 

-> © 

>*o 

s« 

3£ 

© o 

X © 
© —* 

•g'O 

E ° 

o c 
© 2 
© o 

-§£ 

cc © 


c o 
c — o 

2 $■§ 

r 8| 

© o 

?t— k. *Q 

3 Q-© 

w ©.E 

© 2 © 
O) fc-O 

C Q_ >s 

O © = 
(0 3 

ft *♦— 


C CO 2 
co © © 

ja — o 
© © - 
© c £ 

3 

*“ © E 

E o c 

2 c © 

J_ © 

© © 2 
© *4= © 

DC JE E 


© 

E © 

©CO 

20 

•- 'o 
"O — 
© © 
Q. W 

2 © 

03© 

© 03 

10 >, 

sg © 

i2 © 

3 O 

DC o 


i§ 

I 

Is 

•Sff 

^ a* 

5 S 

I* 

Sg 

9-0 

5 5 

5 * 

gg 

If 

Is 

s° 

if 

■5 ■§ 

si 


G-58 










k 


*3 

I 

«5 


si 


El l 

81 


CD o 

u. p 

o i= 

*•- © 


0 C 
CO o 

co ’> 
CO jS 

O CD 

0-° 

o>-* 

CO «g 
3 ® 

?g 

JC ° 

mJJ 

™8 

® m 

CO co 
3 0 . 


8 g« 

§ E 8 
8 ® o 

i ii 


I c 
x 12 
® 1 o 
0 F 


co .9 

© « 
x: o 
~ © 
O 13 


>* t 3 

3 £ 

■§ § 

>; « 
• 4 —« 

O CL 
o C 
Q. ° 

W "8 
S 2 co 

O 3 

^ o 

in o 

CVI LL 


• • 


£ 

58 8 

«'2 S 
“ ® § 
8 ® g 

"5 C Q. 
TJ® C 

o o> ■— 

E g <53 

Oi o 
0 -2 *S 

£ C ^ 
©*“ C 
-QT> 0 
— 0 C 
0*2 O 

.9 *E 9* 
t- c c 
o o £ 

8 

S-o 8 

*D © ® 

0 O) 3 

5 g ! 

I® S 

3 O 
£ X 10 

© ® 0 
©9 .2 

5*1 

3 O ^ 

tr E © 

■O 

• £ 


Q_ 0 
3 0 


B o 
c o. .t -o 

2 jg O) © 

O co 

1 O 

3 = 

*k_ 

CO -0 

m ® 

TO 53 

■o © 

_0 .Q 
0 1- 
"O 0 
O O) 

F 05 

c *C 
0 ■ H- 

c ‘co' 

§ CO 

0 ^ 

— <2 
S o- 

J fc 

It © 


.9>.£ * 


3\o 

o °- 
° tT 

3 a 

O 0 
sz © 

1 c 
> 0 

»— 0 
■S -o 

C 0 
O "O 

0 C 
C 0 

2 sz 

2 o 
© *o 
Q- c 
o © 

c p> 
0 .£ 


3- o 
E o 

© © 

c . 2 - 


CO - 7 = 

>* g 

-0 .2 

-g 0 

O 3 
0 •- 
R CO 


• • • • 


G-59 


The CIS Development and Implementation Process has Allowed SMEs 
to Effectively Transfer Tactical Knowledge to Software Engineers 











*© 

© 

© 

05 

O) 


© 

CO 

o 

o 

§ 

© 


© 


cr -2 

8 g 

©15 
© o 

*2 
P o 
o © 

§! 

.2 © 
©3 

v_ XZ 
© © 
a. - 
o © 

c £ 
o 3 
o © 

03 
© (5 

Q-E 

"c o 
£ o 


£ 

* 5 . 

© 

£ 

w 

■ wmm 

© © 
CO ” 

a 2 

CO “O 

_L c 
© . 9 * 

fc_ © 

o ® 

H- “O 

xz c 
== © 
-Q c 
© £ 

8 -i 

o -5 

© c 

T 3 © 
v= D) 

£ .E 

§ & 

•g 1 

© o 
E CL 

I CO 
O a . 


"D O 
© o 

o E o 

■M •— *-* 

o ^ 
i- >» 

CL X) 


"O *o © 

© © E 

Q- O.Q. 

O g* 
o © o 

2 !$ 

0 . 0*0 


CO 

a 

© 

O) 

© 

k. 

c ® 

o Q- 
■•5 °> 
© c 

© "rS 

C iS 

© 3 

O) £ 

.9 © 

1 

S -g 

o Q- 
w c 

© -E 

® 3 

o 

TJ © 

E X 

© © 

© Jr 

•g "S 

® 2 
© Q. 

8 ° 

* ° 
© CD 
•5= C 

>* "5 

© 1 
LU > 


C 

o cc 

is 

11 

O) © 
c 

1 o 

3 O 

§ I 

aT o 

© JZ 
© © 

© -Q 

c CO 

© E 

® I 

2 8 

.9 c 

I § 

Jj -4-* 

© JS 
jd et 

o o 

O) O) t* 

.E £ o 
% > a. 

© © Q- 

> > <0 


G-60 


S 

$ 


CCTT SAF Behaviors Design Facltitates Integration of Operations Orders , 

Ad Hoc Command Overrides, and Reactions to Situational Interrupts In a Natural Way 









la 

® w 


o? 

o2 

£ CO 

o 


3i 


■fc _ 

*5 U- 
Q)< 
:t=C 0 

o « — 

•I _l« 

I8i 

S • 

co. 
o > >* 

£ ® 15 
iS DC q_ 

•S’ 

? £ 2 . 
© , w 

— r - O) 

o o.g> 


c o 

0 T 3 
£ 1 
S I 


O ® 

;g Q. 

© 8 : 

to e 

“O § 
T3 -O 
® © 
© Q_ 


-W 

13 

2 - 

*5 © 

• O 


O X 
© Q. 


E 3-g S 

m 2 °G 


CO c 
CO o 
0 .2 
c +x 
o> © 

S c 

Q. © 

c i 


£ < 


% 2 

11 
o F 
c E 

® g 

o 

© *o 
® © 

© 1 = © 

E 45 © 

T 5 c/i 
O C © 
•C © © 

8 *§ 

© ,s 3 

5 •op 
c o -fc 
" © c 

O L. O 

E £ c 
o o>.2 
t .£{2 
© © 0 

Q- 3 > 


G-61 



Lessons Learned from the SAF Behaviors Prototype will Drive the 
Design of Tactical Behaviors Code 






$ © 

IS 

OU. 


ECO 

?! 
** Q> 
C-J 

is 


L E 

pm m 

mm? 

21 

Cl 

^ Q 


03 

S£ 

as 

01 c 

6 S 

gS 

jS 3 
0(0 
m to 
LLg 

<s 

(0< 

•§1 

|s 

<! 

Ml Oi 


o 

CO O 

° 3! 

O X) 
_c c 
O CO 

§ ® 

< E 

>• 3 

o 

4 » 

li 

s 1 

« >* 

I < 

o p 


5 CO 
> — 
CD -S 
“o CO 


o ^ CO — 

—r m 


.2 5 

^5 g 1 3 

S 8 E u. 

<8 2 o < 

> I- u. » 


o 

o 

*o 

0 C 
^ 05 

p '55 

is 

c = 

5 J 5 

6 2 =J 

O C/5 O 

^ © " - 
JC' ■*— 0 

co .>» 5 

| | 2 
o E 2 
O o g 
Q LL h 


co c 
5^ CL 

®|f 

I 10 o 

C 3 CL 

& 2 ci 

s * Q 

>*•:= c 

co 5 p 

r CO T 

a S ? 

1 « g 

« V* Lb 

■O O Q. 
C -Q C 
« ® ° 

> 55 S’ 

S 2 T> 
.2 .E p 
row 
pco 

> UU CD 




G-62 


CCTT SAF Behaviors Code Provides a C2 Tactical Umbrella for SAF Platforms Code Resulting 
from a Rigorous, Repeatable Knowledge Capture, Transfer and Translation Process 

October 28,1993 












G-63 


October 28,1993 



I 

mm n(0 

CO 

£ 2 ® 

£ 08 

(5 gf 

•O gS? 

E &“* 

o ®2? 

O >-o 

8 °1 

J2 oil' 


C w 

i e 

8 E £ 

si Q. W 
p o >* 

. © “ 
r- > 3 k 

Q © o 

— X> © 

|8L$ 

||co 

© *o J? 
S'5. -- 

r 10 co © 

■8 "o © © 

M -p r C 
CD £ CO 

| 2|« 
E £ § t» 

2 2£ I 

*- © ~ E 

C Q~^ 

2 0 2 5 


C © 

c II _Q 

5 <=o 

> r/5 CD 
n ^ m 


o ^ 

Q ^ 


e|t 

o © 


I'S 

I? 

Si. 


0 

- © 
E § 
10 Z. 

t— © 

or 

3 O 
li- <2 
^ eo 


O 

“O 

© 

© 

© 

.Q 

© 

’Z © 
■c ® 

s c 

-St 

•50 

(50 
o ° 

f'S 

P E 
ts 

O § 
O o 

0-0 
** c 
© © 

c ® 

§s 

"O 3 
oO 

8-2 
© -CS* 
C CO 


© *= 
W _Q 


’§3 
2 © 


.<2 •== r: ll © 

_ ~P '■*= C/5 © 

O go 00 

O)^ © £ 

< ©CO Q. 

co o O o » 


© 

© A 

3 • 

j£ ® 
1— 

® 

i— • 

Use 

Tooli 

♦ 

♦ 

♦ 

♦ 



G-64 



§D 

o>o 

© © 
of E 

-Q 3k 

<sjo 
o “© 

Q. © 

■c 
^ o 

O S’ 

5- LU 
^_r"D 

•B c 
o © 

2-o 

P 

c •- 
© "D 

O © 

CL .» 

I C >. 

8-S-S 

©Co 

vw © is 

.12 Q. w 

=j-s§ 

3=F 


© 

© 

o © 

3 o 
■O © 
pt 

« c 

§■; 
is © 

u. © 

©3 

■o z: 
.-= © 
3 sz 

tnz 

D° 

OE 

^ © 

0 E 

© Q. 
© O 

= ■§ 
© > 
jC © 

I— *0 


The SAF User Interface facilitates the preparation of military overlays and 
the creation of exercise scenario libraries thereby allowing exercise 
conditions to be replicated and analyzed 






© 

o 

JD 

E 

>» 

CO 


X 

0) 


D 

GC ^ 
O w 

CL ® 

O IT 

g <5 S 

I? « 

g- O to 

& § § 

gsa 

£ 0) g 
$0 Q- E 
o O ® 

Q. c ■* - 
O CO © 

>» © CO 
CO > 


z <s 

o = 


CO 

CD 

>J © 

o 1 5 

Jq ® 
E § 

w >> 

£ °> 

O 2 

LL #A 
CL 

o 5 

-O E 

CD >, 

O © 

© C 

© o 

00 « 


E 

o 


© ^ 
o o 
c 0) 
© **— 
3 O 
0*T5 


CD © m 

g 8 § 

5 a s 

g £ » 

c5 w E 
■o -E © 
S -o t* 

CO = ^ 

2 jg .2 

2 « i 

g. 8 5 

•= 'a ° 
© © © 
> X © 

O UJ D 


8 


G-65 


28,1993 







G-66 


October 28,1993 









o '<* 







































































mEy 


M 


' 0 ' 






















G-69 








?J 

(0 o 

Sc 

ll 

© © 

21 
a g 

05 


(0 c 

M © 

ig 

<21 

fi 

S-S 

Si 

is 

g2 

iSfi 

£ 5* 

© o 

s © 
s« 

5« 

IIJ c 

S 3 

3 © 

It 3 
< © 
(0 e 

©“ 


*D 

*5 >* 
-Q c 
- © 
« -Q 

“C 

5 © 

3 Ol 

© 2 
N T3 

c £ 

E>o 

°'§ 

% ® 
o w 

•P 0 
k. 03 

8? 
3 a> 

® g 
■*■* ® 
s « 

5 © 

75 b 

03 T3 

k. r 

2 <5 
1 « 
© © t: 

> -5- © 

S WO 


© 03 

© C 

co b 

J5 5 

~ © 

© 

© .o' 

§ -o 

Q. © 

E 2 

8 © 

© © 

W CD 

*2 >* 

8 8 
© © 

*D © 

mmmm V# 

3 © 

© 

o o 

• m^m 

© co 
© ^ 

| 8J2 

3 © C 

© © © 

2 .52 o c 

25 E ©- g 

o © E -E 

< UJ 8 ■" 

© 

mm © 


“O 

© =. 

‘■6 © 
o 5 

E 8 

■“ k. 
^ *© 

© £ 
© m 
® N 
© *F 

-Q S 
c 2 

s s 

© « 
© o 

*© © 
> © 
i_ 3 

& © 
© -£ 

il 

CL < 


• • 


E E 
c © 

7o£ 
c *o 
-2 © 

5"° 
© 2 

o g 

© b 
.c © 

-*-* Q_ 

C X 

o © 

"O © 
© ” 
© *— 

© © 
■O o 

w.E 

|c 

© g 

§2 
© 
o -* 

U-5 


CD 

© V- 
>* 2 
55 f 

I 5 

© 


« <0 
$ g 


o <s 

© O 


o © 

~ -O © 

£ © t- 

© © © 
CO © © 

•U CD 3 
c 

2 • • 


G-70 





28.1993 



k 


LL 

^ C 
CO 0 

II 

tr 5 

< § 
0 0 

5 Q 

•*- 0 
° > 

® t5 

0 3 

55 E 
0 £ 

.>» 

"l O) 

OL X 
W D) 

c .£ 
© .b= 
C 3 

£ Z 

a CC 

S'-! 

CC -Q 
LL ® 

« « 
t t; 

O £ 
O CO 


0 

0 

0 ® 
o 0 

o ® 

”1 

+3 O 

8 o 

0 C 
0 O 

0 N *-53 
0 O 
0 E C 
O *F 3 
O | Q. 

CL ^ *3 
§>1 | 
15 f 

£-J © 

0^0 

> So 

t3 0- c 

£ 5 3 

W w & 

O 


October 28,1993 















E 

© 

>> 

© 

© 


© 

CO 

o 

o 

© 


© 


o 

I © 

E £ 

O _F 
O S 

.E o 

© J2> g 

^ ro 
© ”D ■§ 
|« 8 
E ® c 
8 5 .2 

1*8 

°§ 

« I E 
« 2 E 

£ £ O 

8 • • 


© 

© 

o 

© 


© 


© E 

c w 

.= © 

/A © 

co © 
Q 
T3 


© 


© 

O) 


© 

< 

cr © _ 

Q D Q. 


© 

o 


E 

© 

© 

© 


© 

© 

2 

o 

© 

JO 

© 

■D 

O 

E 


© 

c 

o 

E 

E 

o 

c ^ 
© CO 

E 


| a Je 
© 
CD 


© 

© 

i= 

o 

o 


*o 

c 

© 

O 

o 


© 

£ 

3 

© 

C 

111 


■ 

a 

o 

>* 

-Q 

© 

C 

© 

E 

© 


cr 

© 

cr 

“O 

c 

© 

•» 

W 

c 

O) 

© © 
© © 
3 O 
T3 - 
O © 

2 c6 

■o g 
© zz 
c o 
C CO 
© — 

2 § 

■O E 

SI 

£8 

CO o 


*o 

© 

~Q N 

© ‘E 
N 

11 

£ § 
.52 w 
© .2 
© — 
■D g 
O t3 
2 < 

*o 
c 


© 


© 


a o. 

© o 
Q © 

4- > 

O © 

c O 
.2 © 
5 g 

© -M 

t CL 
O 3 

o a 


© ■*- 
© 55 


8 


G-73 


28,1993 














G-74 


Ail model and data usage is traced back to source of input for 
consistency 










October 28,1993 










c 

c *= 

E © 

Q. c 

•g ® 

s * 

© § 

Q c 

"D w 
g CD 
CO CO 


CO ”= 
Q CO 

Q Q 

UL CD 
< > 
CO •«§ 

8 • 


O C 
VS O) 

jS *55 
c © 
0} O 

E u. 


o! 

CO 03 _J 
* C *- 

SO. *c co 
« 0 ) £ 
> ® f 

to - 

c 6> E 

< C © 

i*2 

£ o « 

cr © S 
tr SR z 

_ CD m 


© 

E 

£ & 

2. © 

cr co 

© LL 

cc t: 

i- .a 

U co 

5 2 

O <o 
"O CO 

s © 

© o 


a 8 8 a 
tig,® 
5 S cc = 
o -p .c £ 
•*■§!>« 


O CD 

o t 

o "5 

S 2 
© © 

> £ 
TS ° 
2 *2 
m 3 


O) .$2 

11 


CO 

Q. co 

!l 

Q Id 


2 Z 

■O T5 
© © 
Q. CL 
O _o 

© © 

£ £ 

© © 

Q Q 


• • 


© >» 

© .E 
co = 

03 £3 

cc © 

C s 

o CO 

a ©i« 

3 O LL 
W t< 

o ©co 

g- MO 

® « s 

§ c" 

Q S ® 
*c > 

• © CO 

I © 


© x: 
JE co 

<2 w t? 
c O 

« « $ 
E © s 

© Q. == 

.= n o 

crjr a 

© o CO 

acr o 

LL O LL. 

< a < 

CO §• CO 

t w 1= 

o? o 

0(3 O 


G-76 


28,1993 











I 


0 1 
0 t 


8 


EJ2 

IS 

O).0) 


< 

o 

*<555 

<§<* 

c © 
o T3 
> C 


CO O 
>«C0 
CO O — 

< Cl t *- 

©< £§ 
>*0 U- c 

& §> 
gx |§ 
o c E c 

— 0 — 

CO O) .is »- 

»- r~ *>i fli 


CD •= 
2? 

§§ 

3* 

© c 

o.9> 
>> © 
O <D 

fl) Q 
S=T> 
—I C 
• • CO 

.® © 
.Q tz 

co 2 

•- § 
co 2 

C 1c 

I - 
s< 


3 © 

cr co 
©3 

"1 

LL C 
.. O 

£ ^ 

a-g 

$ « 
O lT 
CO O 

.Im ••• 


© © 
2m 

.SlL 
© < 
CC CO 


c.S ~ 

E 5 Q 

2tS 
?0)® 
®.s © 

r\j*~ 

7 ~ co £ 

Li. % CD 

< I E 

CO c © 

f- o 

S=-*2 3 

s§ y 

CQ = 

E *tr Cl 
O O 

J g» it 

>'p. « 

c.fc 1 " 

U 1 ■*-« 

© .tr ‘-g 

w.9 5 

a< 

2 uj © 

.q „ 3 

5 o> co 

§-s s 

©8 2 

CDF F 


O 

co 

3 E 

^i® 

.ii 

LL g 
»- Q) 

$ © 
5cc 
• • ^ 

®2 
ja CO 
co.ts 
■OS 


CO 

I© 

F co 

■o-S 
Co 
© .CO 
«*-T‘ 

© o 

c **” 

c © 

© o 

j> c 

8-8 

•El 

®o 

CO v -> 

3-0 

JO © 

© >> 

11- 

22 o 

-rj LL 

«£ « 

IcUJ 

>:> e 

«OS 
j? .to 
•*-©>» 
£ ©CO 


© c 
52- 

«® 
C 3 

30C 


2 0§e 


jjx: o. 

o>o 

•® 3 © 

■c 2 > 

d)£ © 

>FQ 


G-77 


October 28,1993 



CCTT SAF Openness and Traceability Provides the 
Basis for Future Research and Development 


i 

© 

>» 

CO 

u. 

< 

CO 


o 

o 

© 


o 

© 

J2 o 
©Hi 

<D .X 

Z 3 


cf 
© 0 
p > 

is 
*= 3 

T" © 

w o 

CO Q. 

£ a 

|co 

m _ r 
.ts O 
JZ o 

£2 
< S 

j© 0. 

SO 

><o 

— LU 

o © 

© £ 
w >* 

3 _Q 

®lg 

=St5 

© m 

© §u- 

* O0 
LU O O 


3 

CD 

2 

o 


c 

o 

E 

k_ 

o 

1 

CL 

■o 

© 

© 

.© 


1 * 

j© © 

© c 
<81 
m 2 


o 

cm .y 
O S 

TJ I 
■*2 © 
2 

2 *> 
i= o 

5^ 
o> % 

12 
Q. ^ 

i § 

O © 
© 

T> O 

© © 
4^ T" 

X) -JS 


© £ 

-s 

< 


■© 

€ 

o 

Q. 

CL 

3 

CO 

< 

© ® 

« « 
i= © 

© o 

cr co 


- E 
q E 

© 2 

g ra 

J £ 

< o 

81 

LU © 

CO 0 


© 

8 

© 

• W 

Q. 

O 
CO 

© 

© 

It 

n"-° 
0- © 

© © 

*5)0 
c — 
ui« 

® t= 

s| 
© > 

S ®o 

— O) 

2 o 
© © 
CL © 
© © 
cocc 


G-78 


Customizable: Offline CIS Editor, Edit CIS Parameters, UCI Customization 

Portable: POSIX, Standardized Ada, X / Motif, no Hardware 
Customizations 












G-79 

















CO 

■u 
0 

3 
O 
0 
X 

© © 

C/3 0 

8 -8 

O C 

s. s 
© *0 
.E 5 

S © 

© W 

© g 

8 ic 
0) 0.0 
0 W_ *^S 

1 i-5 

« of 

£ “« 

C « 0) 
— w _c 
TJ — 
© 0 03 

E Sc 

o £ c5 

*£ © 
0 ©9= 

Q. *- 0 
fp 

« C3 
03 03? 


A 

*0 

© 

E 

3 

© 


$ *- 


8 

co _ 

18 

C © 

.£ JC j “ 

© O > 

>=; •?= .Q 


= ©*s >.y 


o © 5 

wo© 
© c 0 
© © S 

-= © © 

81i 

2 _r* w 
I— H © 


© 


€ 

&g 

w ^ 

A W 

o>o 


w 


"O > 
c c 
© o 

»*3 
0 © 
O p 

© E 

TZ O 

Be 
.El 
*- © 
©9= 
C 3 

©^ 

£ © 
LU^ 

0 “ w 
o © 

is 

■E S 


o © w 
p o w 


© 

w 


© 

o 

o 


' CL 

*2T 4-> “* 


o 

Q 

LL 

0 


©•= 
w © 
£ E 

CL © 
EZ 0 -C 


® 8 

E © 

o 0 
tl 3 
© 03 

Q- c 
w _© 

= s> 
0-0 

*■•=*0 
© 0 
3 -e 
P o 
.E Q. 

W Q. 

© o 
© 

— >s 
O)*- 
C o 

•§l 

*0 T3 
c © 

.2 8 

1-glo 

is g 

E'r,® 

C C'TJ 

8 i I. 

< e- 


£ 

w 

• MM 

c 

• MM 

2 

© 

c 

*03 

C 

© 

© 

o 

c 

£ 

© 

H— 

c 

■ MB 
© 


■0 

c 

© 

CL 

0 

"O 


© 

o 

c 

£ 

© 

c 

• MM 
© 


© 

© 


© 

A 

© 

© 

O 

• Mi 

c 

3 

E 

E u) 
p w 
o © 

o £ 

a o 


■§ 


w .*= 

3 © 

.© E 
E jc 

03*= 
A A 

m © 
Q_ W 

~~ w 
p © 

Si 

A CL 
O © 

©.E 

r> 03 

■6 FS < « 


© 

© 

o 

■o 

w 

w 

© 

o 

s 

Q. © 

If 

© o 


1 

s 



. 


G-82 


This approach allows any method of tactical reasoning providing an open 
design for multiple vendor solutions ora home-grown solution 










G-83 







r 



LU 

« s 

® o 

I 35 

Sg 

|x 

Oc 

t. o 
0 > 
D)UI 

cS 

CBCB 

=1 
2 8 
8 S. 

Q- 


Cl 


“ <D 

>. Q. 

u 

CO r- 

.§ C 
«= 0 
a. > 
-— 52 lu 

S2 ® c 
o^o o 

§1 ■§ 

CD C (§ 
CD cd 1X1 
z. > £ 
cLU C 
0 0 ) 

111 g UJ 

a>**~ w 
© ^ CD 

OL® D 
3 S 5 X) 
R C S 

o as q 

Q. 


C 

si 

CD f— 
CD c 

0)3 
C OC 

’o.*e 
n co 

CO “O 
2® 

81 

•g 0 

g ® 

LU Q 


O §5 


• • 


CD J— 

.© ~ 

o $ 

“5 

T> ^ 

C ^ 

CO _ 

© -o E 

C © CO 

.2 3 o> 
w -a 9 
« So. 

TS m 

a. ||2 

g, o g 

O) k. CO 
CO CL A 

“T H 

O _® LJ 

£ !■rt 

E u 

CO CO fQ 
*D X -H 
< UJ J 


• • 


G-84 











G-85 


28,1993 









© 

E 

c © 

© © 
= 3 


E c 

(SO 

®5 

iS 

of 

®Q. 

2 — 

o ' 8 
£ « 
co 3 


® 

0 

CO 

© 

0 &. 

E S 2 
p q 

c 0 

3 £ 
CC co 


0 

CO © 
0 Q. 
Q. .>» 

t C 

c 0 

S LU 
UJ 

1« 
J ■§ 


Q • 


0 

0 

£2 

^ 0 

i2=o 

E — c 

© 


® *c 

15 

c « 

3 ^ 

CC -Q 

t- "O 

© 0 
0 .£ 

o Q 

n“ © 

*= 

4- © 

© 0 

1 ^ 

| £ 

S. I 

0 > 

■S LLI 
© 

&< 

© CO w 

Eta 

< ol 


+•* 'V# 

© Q. 0 

o si 0 

Q. 

S <4m0 

£ C r" 
0 *-» 
> £r 
&UJ ® 

^ O LLI 

Sg c 

i_ F 

§<s s 

051 

® 5 c 

5 © ® 

© S E 

c © c 

LUO £ 


© 

T? 0 

£ ©> 
0 © 

E 3 

c o> 

£ c 
o 0 

o _J 

Q>zl 

CC o 


G-86 


October 28,1993 







& 


0 

^ 0 


A 

E 

•o 

o 

S 

o 

•o 


5 

x fi 

SI 

P | 

1.1 

si 


is 

56 
£ ® 
£°- 

«& 

>§ 

(5 co 

CJ 

.5>c 
10 o 
a>-js 
Q co 

©c 
a o> 

■o £ 

j= £ 

CD — 

25 

© ~ 

t 5 — 


03 $ 

® i 3 

.£ O) 
o c 
0 - > 

c g 
o E 
**= 0 
2 tr 


C T3 

10 5 

T CO 


0 C 

> 9 ? 

ID > 

Z. LU 

O y_ 

5 < 

.9 CD 


& <o 
0 *“ 
N 0 

o CO 


CO m 
0 CO 

Q £ 

CD m & 

« 8 ■§ 
£h> 
©■g o 

■g § r 

| a.! 

I , 1 CL 

E 

0 <D CD 

S > o 

LU H co 

u_ 0 .9 0 
<g)U = 

w“ g g 

t 8 wo. 

o°- , 
o.e 1 


0 

T3 

C 

0) 0 
U_ -T" 

0 - 1 - 
■£* ♦-* 
C C 

o 5 

n- i 2 

o 0 

£- *= "(5 

§ C 

•p — 0 ) 

0 .? '55 
•U 0 

c 0 Q 
0 0 .. 
E =5 0 

C •• *0 

I O < 

O 

0 | ■ 
GC 1 1 


G-87 


October 28,1993 





advance / error stop simulation advance 



























k 


E 

Os 

£2 

+* CO 

Ct 
O o 


O fc. 


o 

• .CO 


£X 

.1 

o 


E o 

o c 

+* CO 

SE 

l€ 

8 { 

O c> 


5 g 
Oh 
CQ w 

0-0 
CO O 

3° 


(A 

3 o 

8 3 
® ® 
03 > 


•— Q. 


® E P 
S® °- 
•c O £ 

O C/3 8 o 
c Sb 2 

_ TOO 

fl) tSiE g 

a SI'S 

5 If 5 

£ « « E 

W HK ® 
O B 05 Q. 
OL O (0 p 
-*r 03 > -= 

° S’ - « 

c $C -O 

.2 iS .2 < 

3 S 3 
5k *0 O 3 
£ W COW W 
•=c 03 "O 03 03 

-8 oc <cc tr 


^® £ 
o E D - 
OF.2 


• • 


o CO 
03 © 

-^CC 

Q 

®0 
■8 s 

g w 

■So 

CO © 

§® 

c W 

8 ® § 
C Q-*= 
CO p 

e - § 

5 on 

t: 

£ • 


5 ? 

(0 

*d 

«w 

§ 03 

6 E 

-H p 
4J ^ 

m 03 

<D © 

0)(r 

l-i 

c 5 

3 03 
LLCE 


,3 « 

H -2 

to 03 C 

*2 E O 
fir V 
Q) r- © 

, _ 

bS § 

Utt E 
® ® ® 
Si g- 

■go I 

«j§ 4S 
°T< 3 

•g « .. 

J? C s 

5 c/3 

•g © 03 

£9qc it 


G-89 


October 28,1993 




© c 

oc ® 

5 s 

5 e 

© o 

£o 

© o 

■ss 

Sg 


o © 

iSJ 

©65 

g>« 

n _ 

c o 

i £ 

cofi 

5g 

gE 

£§■ 

o © 


c 

LU ^ 

-o £ 

Op 
0 o c 

W (D 0) 

o era: 

p. 


CO 

T5 ® 

£ •- 

*o c 
C Lii 
© ■— 

55 s 
52 5 

? £ 

&38 

?Q2 

*= Q- O 

P © 

O © -S; 

^ -S’F 

O ©■§ 
© Tr\ P 
CC ^ < 

•o .-e E 

8 S3 

Q UJ W 

E e w 

1 It 
I £8 


b 52 

O Q 
© 

22 to 
Q © 
o> § 

1 0 

o £ 

c “ 
•= © 

2 

•2 C 

© 111 
4-i 

© * 
® o 

lii 5 

© u 

•e o 
© *♦— 

8 

2 1 

Q. iS 

r> T- 
< £ 
> © £ 
© © 

£5 

© E 

0 CL 


c 2 

D) O 


X 

© 

*2 c 
-= .2 
© o 
S c 
© 3 
FU- 


^ © 
k- <♦£ 

O C 

si 

© o 

Z E 

CO § 

QO 


G-90 


DIS Manager may Become a CCTT Reusable Component 








G-91 


28,1993 








gl 

■■ J2 

is 

w. O 


8 

co 

SB 
0-8 
IL fc. 

<S 

it 

So. 

So 

OIL 

o< 

Sco 

CO > 

5* 

S3 

0) CO 

0)0 
CO TJ 

il 

§1 
ItI 
CO 


g£Q 

cO 
3 >* 
E-Q 

ET3 

o S 

O-W 

© CO 

25 "2 

S Si 

O Li! CO 


i i 


LL It 
< ^ 
CO CO 

o 2 
2 % 

P 

^ « 

« o 

c = 
§ -2 

.. E to 
g|8 
g.o < 

Q. 

£ I I 


E CO 

_ © 
CJ) CO 

'o g 

co JS 

« O 
0. t3 

"O © 
© 25* 

C O 

© z 

'= o 


19 ® ^ 


c © 
O) O 


.sk o cb 
E -® -J 

© _Q 0) 
CL O C 

u. >, o 

|I 8 

l! s 

E 3 ° 
e cr ts 

■o >, Jr 

. 11 ° 

© E , 

Q HI 1 


^ © 
4J CD 

8 g 

g *| 
o © 

gl 

o © 
W co 
© < 


© 

© 

Q • • 


G-92 


28,1993 










Location I Organic lb 

Alignment ] 












o 


T3 

© 


O) 

*0 

0 

1 


3 

cr 

0 

CL 


0 

.Q 


0 


__ >» 
o JS 


i 

£ 

CL 

O) 


0 «* 

^ 0 
>* c 


0 

> 

o 

> 

111 


0 .2 
9-.2 

fn E o 
2 o o 
2 O 0 
.9 w 0 

•9 c ^ 
<2 o -= 
2 o « 



0 


E 


0 

0 

LU 

■O 

o 

2 

0 

JD 

o 

0 

5 


z 

O 

5 


II S.H 


0 

O) 


0 

“O 

O 


0 

6 


o 

0 

S' 

O 

O 

o 

111 

co 


o 

0 

0 

£ 

< 

.>» 

0 


c fl o 
o FT *= 

3 0 

o £ 

0 ? T3 
i2dS 
© 


£ 3 s 

S* s»i 


$ o 

Q. C 

E o 

o o 
O 5E 
0 


"£ 0 
S- v- Q. 

>03 

O < (^ 


^ I 


i s 
0 
C 
0 

0 


0 

£ 

Q 

o 

111 

CO 


T> fz 
0 < 


0 


111 


0 


a 

0 

CO 


0 

0 


§ O 


% Q 

0 o 

E g 

0 

CL O 
0 ~ 
Q o 

a 

• E 


o 

0 

S' 

O 

Q 

o 

LU 

CO 


0 

0 


O 4J 
— C 
0 0 

£ E 

o © 

2 § 
CL JC 
Q. C 
< LU 


0 

CL 


0 

0 

“O 

Q. 


0 ^0 

.E -Q 


0 0 
0 0 
0 O 
CD 0. 


_0 

-Q 

0 

o 

_© 

© 

CO 


I 


G-94 








CD 

?CD 

I w 

CL|S 

.2 O) 

0 c 

5 g 

Q C 

is a> 
wq 


So 

co£ 
m a> 
os 


O w 
o c 
.£ © 

? § 

.5= CL 

m E 
o o 
go 

25 
>* >. 
O _q 

W -D 
t! © 

8,1 

8-i 

coo. 


^j2 

0) m 

o S 

£ o 

S 9- 

j= o 

"S^ 

CO o 
"2 co 

>» iS jo 

a s co 0 

2 « o ® a 

o o f s s 

5 ® 


0 

~0 CO 
O 0) 

29; 

o I— 

C O 

cd In 
O © 
o zi 

c° 
0 CD 
J2 O) 


« > co 
jo >nr 


CD rn 
y Qj 

CO 12 

£5 


CD 

£ CD 

— *o 

%'m 
s * 

o 0 


O) ll. 


October 28,1993 






































ffl 

£: m 

-® 

is 

c (0 

wg- 

»o 

§| 

3 3 

< +* 

o = 


0 

c 

o © 
0.0- 

c§ 

ill 

.2 o j 5 

2° i 
® 0.0 1 
•6 O c ® 

c ® T3 

m « E o 
o - ifi 2 
IS# o 

C JJ ■*—• "r~ 

s <co s 


0 

0 

03 

0 

O 

0 

CL .. 
0 O 

S'- 

< 0 

0 o 
*55 ■— 

0 *- 
OL 0 

0 CL 

So 


>* . 

Q # 


0 ~ 

a • 


■O 

_ 0 
0 0 
> 0 
0 CQ 
-i J, 

0 o 
•F 0 

H- jfi 

o 2 

C to 

.9 0 

o ® 

O q 


o — 
0 o 


03 £ 

C js. 

15 Sh 

- .£ (§0 

*- O CD u O 
0 0 — w 

= fc c: c .9 ^ 

3 3 3 0 F >*9 

x £ O co | ^ ^ 

Co© 

1 1 1 1 o' 5 8 

0 Q. 

• g* 


October 28,1993 





G-99 


October 28,1993 









</) 

E 


o 

O) 

CO 

o> 

c 

•^5 

<o 

X 

© 

o 

>» 

© 

£ 

3 

CO 

CO 

E 

o 

t: 

© 

CL 


© 

© 

© 

_Q 

CO 

CO 

T3 

C 

'© 

u- 

© 

CO © 

‘© .n 

© o 
c ^ 

© co 

£ g 

W E 
E ® 

— 3- 

o © 

u> *- 

© Q- 

® § 
© © 
CO Q 


© 

E 


o 

o> 

© 


© 

o 

c 

© 

E c 

5 1 

'tz & 

CL O 

C 5 s 

O © 
CO ® 

*© is 

^ H- 

© o 

5 c 
© o 

c ’© 

« © 

E > 

o O 


o 

CO 

1 ® 

■tsi © 

l. r 
O *= 

5B 

03 c 
© o 
5 ■© 

o § 
o -o 


s $ © 

■a o © .a -5 


© 

Q. 


© E <g 
c *^= © 

© cl 

o © 

© © 

3 3 tr 
<. c o 

Q. 

© 

• • tr 


i 

i 

i 

1 

i 


G-100 


28.1993 








EL 

o 1 
o \ 


>LL 

gCO 

Ei. 

x;E 

So 

So 

2>o 


CD 
c Q 


5o 


0.2 

3 g- 

oo- 

0)< 

2‘5 


© »- 
CD O 

■o 11 - 
.2*0 
S ® 

«5 N 

c >» 
®75 
2 c 

>.< 

o 


o) _ 
CO CO 
£ O 
>* < 
0 -5 


03 $ 
0) CL 

=6 O 

2 >* 

co fe 

si 


03 o 

c 8 

0 X3 

E c 

03 0 

© 

2- N 

§f w 

CO u u 

Eil o 

& < 03 

■c co r 
an ® 
■S t” £ 

0 o m 

® O 3 

— O O" 

**r 03 

O C C 

>% O © 
O V* 03 

C 0 (0 
.2 2 -§ 
0*0.0 
it a 0 

03 0 *0 
03 0 0 


*0 “O T3 
03 0 0 

• mhb •mmm 

*0*0*0 


0 

a <§ 

E 0 


wmJ —J —J 4-( w 

A A 4^ *-> 4-* —- CD 

• • CO CO CO 3*0 


G-101 


28,1993 






CO 

55 


CO 

c 

< 


CD 


E 

F 

o> 


o 

o 

Q. 


s 

.© 


* 

O 


■c 

o 


a> 


0) 

0) 

E 


CD 

O 


0 O 
Q. D 

& E 

B * 


S O 


CO 

CO 

$ 


o £ 


§ s 


© *4= :5 

«* - - _ 


c 2 & 


o 

Q 


co 

E 


o 


0 

0 

0 


0 0 
£ a- 


Q. 

0 


•o ^ 

tn 


2 < 
0 


9 - 0 


13 
0 
0 
0 4 S 
x> 3 

2 c 
E 0 


o “o 

0 ^3 
o 0 0 
c £=.a 
0 CO 0 

E §“ 
o l 13 

•C ® «Q 
® -o-g 
<0 ® 

0 O JC 
T3 u O 
< 0 0 

75 !| 

§ c c 

O IT 2 


E o 
E £ 
0 0 


a) D 

^ 0 
co *“ 
c 0 
O -Q 


0 5 

N CO 

i 0 


- £ 
ql E 
O £ 


0 >r 

"D O 
O O) 

O < 



G-102 



