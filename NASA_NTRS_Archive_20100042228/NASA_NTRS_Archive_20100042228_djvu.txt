signed to circumvent bandwidth limita- 
tions of typical H EC file systems by ex- 
ploiting the faster inter-processor band- 
width to move output data from 
compute nodes to designated 1/ 0 nodes 
as quickly as possible, thereby minimiz- 
ing the I/O wait time. This utility has 
successfully demonstrated a significant 
performance improvement within a 
major NASA weather application. 

T his work was done by T homas Clune of 
Goddard Space Flight Center and Shujia 
Zhou of Northrop Grumman. For further in- 
formation, contact the Goddard Innovative 
Partnerships Officeat (301) 286-5810. GSC- 
15751-1 


Planetary I mage G eometry 
Library 

The PlanetarylmageGeometry(PIG) 
library isa multi-mission library used for 
projecting images (EDRs, or Experi- 
ment Data Records) and managing 
their geometry for in-situ missions. A 
collection of models describes cameras 
and their articulation, allowing applica- 
tion programs such as mosaickers, ter- 
rain generators, and pointing correc- 


tion tools to be written in a multi-mis- 
sion manner, without any knowledge of 
parameters specific to the supported 
missions. 

Camera model objects allow transfor- 
mation of image coordinates to and 
from view vectors in XYZ space. Point- 
ing models, specific to each mission, de- 
scribe how to orient the camera models 
based on telemetry or other informa- 
tion. Surface models describe the sur- 
face in general terms. Coordinate sys- 
tem objects manage the various 
coordinate systems involved in most 
missions. File objects manage access to 
metadata (labels, including telemetry 
information) in the input EDRs and 
RDRs (Reduced Data Records). Label 
models manage metadata information 
in output files. Site objects keep track of 
different locations where the spacecraft 
might be at a given time. Radiometry 
models allow correction of radiometry 
for an image. Mission objects contain 
basic mission parameters. Pointing ad- 
justment ("nav") files allow pointing to 
be corrected. 

The object-oriented structure (C++) 
makes it easy to subclass just the pieces 


of the library that are truly mission-spe- 
cific. Typically, this involves just the 
pointing model and coordinate systems, 
and parts of the file model. Once the li- 
brary was developed (initially for Mars 
Polar Lander, MPL), adding new mis- 
sions ranged from two days to a few 
months, resulting in significant cost sav- 
ings as compared to rewriting all the ap- 
plication programs for each mission. 
Currently supported missions include 
Mars Pathfinder (MPF), MPL, Mars Ex- 
ploration Rover (MER), Phoenix, and 
Mars Science Lab (MSL). Applications 
based on this library create the majority 
of operational image RDRs for those 
missions. A Java wrapper around the li- 
brary allows parts of it to be used from 
Java code (via a nativeJNI interface). Fu- 
ture conversions of all or part of the li- 
brary to Java are contemplated. 

T his work was done by Robert G . Deen and 
Oleg Pariser of Caltech for NASA's Jet Propul- 
sion Laboratory. 

The software used in this innovation is 
available for commercial licensing. Please con- 
tact Daniel Broderick of the California Insti- 
tute of Technology at danidb@caitech.edu. 
Refer to NPO-46658. 


16 


NASA Tech Briefs, December 2010 


