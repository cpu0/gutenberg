UNCLASSIFIED 


Registration No. 

23321 




-Technical Report- 


GNU C/C++ AND FORTRAN LANGUAGE 
INTEROPERABILITY WITH FUNCTION 

USAGE: PART II 


***** 

Disclaimer: Reference herein to any specific commercial company, product, process, or service by trade 
name, trademark, manufacturer, or otherwise, does not necessarily constitute or imply its endorsement, 
recommendation, or favoring by the United States Government or the Department of the Army (DoA). The 
opinions of the authors expressed herein do not necessarily state or reflect those of the United States 

Government or the DoA, and shall not be used for advertising or product endorsement purposes. 

***** 


UNCLASSIFIED: Distribution Statement A, 

Approved for public release; distribution is unlimited. 


September 2012 


U.S. Army Tank Automotive Research, 
Development, and Engineering Center 
Detroit Arsenal 

Warren, Michigan 48397-5000 


UNCLASSIFIED 








TARDEC Technical Report No. 23321 

September 2012 


GNU C/C++ AND FORTRAN LANGUAGE 
INTEROPERABILITY WITH FUNCTION USAGE: PART II 


W. Bylsma 

Dynamics and Structures 

U.S. Army Research, Development and Engineering Command (RDECOM) 
U.S. Army Tank-automotive and Armaments Research, Development and Engineering Center (TARDEC) 

Detroit Arsenal 


ATTN: RDTA-RS/MS157 
6501 East 11 Mile Road 


Warren, Michigan 48397-5000 


***** 

Disclaimer: Reference herein to any specific commercial company, product, process, or service by trade 
name, trademark, manufacturer, or otherwise, does not necessarily constitute or imply its endorsement, 
recommendation, or favoring by the United States Government or the Department of the Army (DoA). 
The opinions of the authors expressed herein do not necessarily state or reflect those of the United 
States Government or the DoA, and shall not be used for advertising or product endorsement purposes. 

***** 


UNCLASSIFIED: Distribution Statement A. Approved for public release; distribution is unlimited. 



REPORT DOCUMENTATION PAGE 


Form Approved 
OMB No. 0704-0188 


Public reporting burden for this collection of information is estimated to average 1 hour per response, including the time for reviewing instructions, searching existing data sources, gathering and maintaining the 
data needed, and completing and reviewing this collection of information. Send comments regarding this burden estimate or any other aspect of this collection of information, including suggestions for reducing 
this burden to Department of Defense, Washington Headquarters Services, Directorate for Information Operations and Reports (0704-0188), 1215 Jefferson Davis Highway, Suite 1204, Arlington, VA 22202- 
4302. Respondents should be aware that notwithstanding any other provision of law, no person shall be subject to any penalty for failing to comply with a collection of information if it does not display a currently 
valid OMB control number. PLEASE DO NOT RETURN YOUR FORM TO THE ABOVE ADDRESS. 


1. REPORT DATE (DD-MM-YYYY) 2. REPORT TYPE 3. DATES COVERED (From - To) 

09-17-2012 TECHNICAL 2012 


GNU C/C++ AND FORTRAN LANGUAGE INTEROPERABILITY WITH FUNCTION 
USAGE: PART II 


6. AUTHOR(S) 

WESLEY BYLSMA 


5a. CONTRACT NUMBER 


5b. GRANT NUMBER 


5c. PROGRAM ELEMENT NUMBER 


5d. PROJECT NUMBER 


5e. TASK NUMBER 


5f. WORK UNIT NUMBER 


7. PERFORMING ORGANIZATION NAME(S) AND ADDRESS(ES) 

DYNAMICS AND STRUCTURES-US ARMY RDECOM/TARDEC 
ATTN: RDTA-RS/MS157 

6501 E 11 MILE RD 
WARREN, MI 48397-5000 


8. PERFORMING ORGANIZATION REPORT 
NUMBER 

23321 


9. SPONSORING / MONITORING AGENCY NAME(S) AND ADDRESS(ES) 


10. SPONSOR/MONITOR’S ACRONYM(S) 


11. SPONSOR/MONITOR’S REPORT 
NUMBER(S) 


12. DISTRIBUTION / AVAILABILITY STATEMENT 

Distribution Statement A: Approved for public release; distribution is unlimited. 



14. ABSTRACT 

This report is a continuation of Technical Report (TR) 22646 and documents GNU and Intel 
Fortran/C++ compiler options for interoperability between C/C++ and FORTRAN. The actions 
addressed are manipulation of Fortran COMMON BLOCKS with C++ Structures and the usage of 
multiple definitions. 


15. SUBJECT TERMS 

GNU GCC, C/C++, FORTRAN, language interoperability, common block, structures, multiple 
definitions 


16. SECURITY CLASSIFICATION OF: 


a. REPORT 

Unclassified 


b. ABSTRACT c. THIS PAGE 

Unclassified Unclassified 


17. LIMITATION 

18. NUMBER 

OF ABSTRACT 

OF PAGES 

Unclassified 

10 


19a. NAME OF RESPONSIBLE PERSON 

Wesley Bylsma 


19b. TELEPHONE NUMBER (include area 
code) 

586-282-4104 


Standard Form 298 (Rev. 8-98) 

Prescribed by ANSI Std. Z39.18 



































Contents (by Title) 

PART II.1 

4.4 FORTRAN COMMON BLOCK MANIPULATION USING C++ STRUCTURES.1 

4.4.1 GNU.1 

4.4.2 INTEL.3 

4.5 MULTIPLE DEFINITIONS.3 

4.5.1 GNU.3 

4.5.2 INTEL.7 

REFERENCES.10 











GNU C/C++ AND FORTRAN LANGUAGE 
INTEROPERABILITY WITH FUNCTION USAGE: PART II 


TARDEC Technical Report No. 23321 

September 2012 


PART II 

This report is a continuation of Technical Report (TR) 22646 and documents GNU and Intel Fortran/C++ 
compiler options for interoperability between C/C++ and FORTRAN. The actions addressed are 
manipulation of Fortran COMMON BLOCKS with C++ Structures and the usage of multiple definitions. 

All examples were run on SUSE Linux Enterprise Server 11 (x86_64) using the GNU utilities as in TR 
22646—with the addition of 

• xild (GNU Id (GNU Binutils; SUSE Linux Enterprise 11) 2.20.0.20100122-0.7.9) 

• ifort 10.1 20080312 

• icc 10.1 20080312 

References cited are [8] (from TR 22646) and [17] (new for TR 23321). 


4.4 FORTRAN COMMON BLOCK MANIPULATION USING C++ STRUCTURES 

This example shows how to call C++ from FORTRAN and the usage of the C++ structures to manipulate 
FORTRAN COMMON blocks (see [8]). 

4.4.1 GNU 

The GNU Fortran/C++ compiler is used here. 


echo "-GNU-" 

rm main.o 

gfortran -m32 -c main.f -lgfortran 
rm cpps.o 

gcc -m32 -c cpps.cpp -lstdc++ 
rm pstu.e 

gfortran -m32 main.o cpps.o -o pstu.e -lstdc++ 
pstu. e 


i 




cpps.cpp 


#include <iostream> 

#include <cstring> 


using namespace 

std; 


extern "C" { 



extern struct 

{ 


double x 
int a,b. 

c; 


char slO 

[10] ; 


} abc ; 



void cpps () 

{ 


cout « 

"cpps: begin" « endl; 


abc ,x = 

78.9998; 


abc .a = 

abc ,b*abc .c; 


abc ,b = 

101; 


abc .c = 

-54; 


strncpy(abc .s10,"CHANGE ALL",10); 


cout « 

" x:" << abc .x << endl; 


cout « 

" a,b,c:" << abc .a << "," << abc .b << ", 

" << abc .c << endl; 

cout « 

" slO:" << abc .slO << endl; 


cout « 

} 

} 

"cpps: end" « endl; 



main.f 


PROGRAM main 
DOUBLE PRECISION X 
INTEGER A,B,C 
CHARACTER*10 S10 
COMMON /ABC/X,A,B,C,S10 
print *,'main: begin' 

X = 55.39 
A = 1 
B = 2 
C = 5 

S10 = 'HOW_ARE_U?' 
print *,'X:',X 
print *,'A,B,C:',A,B,C 
print *, 'S10: S10, 1 ] 

CALL cpps() 
print *,'X: 1 ,X 
print *,'A,B,C:',A,B,C 
print *, 1 S10: ' [ ■ ,S10, '] 

print *,'main: end' 

END 


OUTPUT: 


-GNU- 

main: begin 

X: 55.389999389648438 

A,B,C: 125 

S10:[HOW_ARE_U?] 
cpps: begin 
x:7 8.9998 
a,b,c:10,101,-54 
slO:CHANGE_ALL 
cpps: end 

X: 78.999799999999993 

A,B,C: 10 101 -54 

SlO:[CHANGE_ALL] 
main: end 


2 








4.4.2 INTEL 


The Intel Fortran/C++ compiler is used here. The cpps.cpp and main.f files are the same as in 
Section 4.4.1. 

#!/usr/bin/tcsh 
# Intel Compiler 

source /apps/intel/fc/10.1.015/bin/ifortvars.csh 
source /apps/intel/cc/10.1.015/bin/iccvars.csh 

echo "-INTEL-" 

rm main.o 

ifort -m32 -c main.f 
rm cpps.o 

icc -m32 -c cpps.cpp -L/usr/lib -lstdc+t 
rm pstu.e 

ifort -m32 main.o cpps.o -o pstu.e -L/usr/lib -lstdc+t 
pstu. e 


OUTPUT: _ 

-INTEL- 

main: begin 
X: 55.3899993896484 

A,B,C: 125 

S10:[HOW_ARE_U?] 
cpps: begin 
x:7 8.9998 
a,b,c:10,101,-54 
slO:CHANGE_ALL 
cpps: end 

X: 78.9998000000000 

A,B,C: 10 101 -54 

S10:[CHANGE_ALL] 
main: end 


The differences between the GNU and Intel floating point numbers should be noted. 


4.5 MULTIPLE DEFINITIONS 

This example shows how to use multiple definitions to modify already compiled object files. The 
cpps. cpp and main. f files are the same as in Section 4.4.1. 


4.5.1 GNU 

The GNU Fortran/C++ compiler is used here. Referencing [17], there are 3 file descriptors, stdin, stdout 
and stderr (std=standard). The number 1 'represents' stdout and 2 stderr. An example would be 

cat file 2 >& 1 

Proper output order when redirecting is maintained by setting 

setenv GFORTRAN_UNBUFFERED_ALL Y 

Using “gfortran -help” comma-separated options are passed to the linker as “-wi,<options>". 
Using “Id -help” the linker option “-z muldef s” allows multiple defintions. 


3 




#!/usr/bin/tcsh 

setenv GFORTRAN_UNBUFFERED_ALL Y 
echo "-GNU-" 

# make original 
rm main.o 

gfortran -m32 -c ../../struct/gnu/main.f -lgfortran 
rm cpps.o 

gcc -m32 -c ../../struct/gnu/cpps.cpp -lstdc++ 
rm pstu.e 

Id -V -m elf_i386 -r main.o cpps.o -o pstu.o 
gfortran -m32 pstu.o -o pstu.e -lstdc++ 

echo "-main with cpps" 

pstu. e 

# make update 
rm mainl.o 

gfortran -m32 -c mainl.f -lgfortran 
rm cppsl.o 

gcc -m32 -c cppsl.cpp -lstdc++ 

# replace main with mainl 

echo "-replace main with mainl" 

gfortran -m32 mainl.o pstu.o -o pstul.e -lstdc++ 

echo "-replace main with mainl" 

rm pstul.e 

gfortran -m32 mainl.o pstu.o -o pstul.e -lstdc++ -Wl,-z,muldefs 
pstul.e 

# replace cpps with cppsl 

echo "-replace cpps with cppsl" 

gfortran -m32 cppsl.o pstu.o -o pstu2.e -lstdc++ 

echo "-replace cpps with cppsl" 

rm pstu2.e 

gfortran -m32 cppsl.o pstu.o -o pstu2.e -lstdc++ -Wl,-z,muldefs 
pstu2 . e 

# replace main and cpps 

echo "-replace main/cpps with mainl/cppsl" 

gfortran -m32 mainl.o cppsl.o pstu.o -o pstu3.e -lstdc++ 

echo "-replace main/cpps with mainl/cppsl" 

rm pstu3.e 

gfortran -m32 mainl.o cppsl.o pstu.o -o pstu3.e -lstdc++ -Wl,-z,muldefs 
pstu3.e 


4 



cppsl.cpp _ 

#include <iostream> 

#include <cstring> 
using namespace std; 

extern "C" { 

extern struct { 
double x; 
int a,b,c; 
char slO[10]; 

} abc_; 

void cpps_() { 

cout << "cppsl: begin" << endl; 

abc_.x = 90023.876; 

abc_.a = 23.97; 

abc_.b = 1.0004; 

abc_.c = -999.9; 

strncpy(abc_.slO,"ALLCHANGED",10); 
cout << " x;" << abc_.x << endl; 

cout << " a,b,c:" << abc_.a << << abc_.b << << abc_.c << endl; 

cout << " slO:" << abc_.sl0 << endl; 
cout << "cppsl: end" << endl; 

} 

} 


mainl.f _ 

PROGRAM main 
DOUBLE PRECISION X 
INTEGER A,B,C 
CHARACTER*10 SlO 
COMMON /ABC/X,A,B f C f SlO 
print *,'mainl: begin' 

X = 888.2954 
A = -4.307 
B = 2.3571 
C = 67.9 

SlO = 'U_ARE_FINE' 
print *,'X:',X 
print *,'A,B,C:',A,B,C 
print *, 'S10:', ' [ ' ,S10, '] 
CALL cpps() 
print *,'X:',X 
print *,'A,B,C:',A,B,C 
print *, 'S10:', ' [ ' ,S10, '] 
print *,'mainl: end' 

END 


5 









OUTPUT: 


-GNU- 

GNU Id (GNU Binutils; SUSE Linux Enterprise 11) 2.20.0.20100122-0.7.9 
Supported emulations: 
elf_x86_64 
e1f_i386 
i3861inux 
elf_llom 

-main with cpps 

main: begin 

X: 55.389999389648438 

A,B,C: 125 

S10:[HOW_ARE_U?] 
cpps: begin 
x:7 8.9998 
a,b,c:10,101,-54 
slO:CHANGE_ALL 
cpps: end 

X: 78.999799999999993 

A,B,C: 10 101 -54 

SlO:[CHANGE_ALL] 
main: end 

-replace main with mainl 

pstu.o: In function 'MAIN_’: 

(.text+0x0): multiple definition of 'MAIN_ 1 

mainl.o:mainl.f:(.text+OxO): first defined here 
collect2: Id returned 1 exit status 
-replace main with mainl 

rm: cannot remove 'pstul.e 1 : No such file or directory 
mainl: begin 
X: 888.29541015625000 

A,B,C: -4 2 67 

SlO:[U_ARE_FINE] 
cpps: begin 
x:7 8.9998 
a,b,c:134,101,-54 
slO:CHANGE_ALL 
cpps: end 

X: 78.999799999999993 

A,B,C: 134 101 -54 

SlO:[CHANGE_ALL] 
mainl: end 

-replace cpps with cppsl 

pstu.o: In function 'cpps_': 

(.text+0x57c): multiple definition of 'cpps_' 
cppsl.o:cppsl.cpp:(.text+0x5c): first defined here 
collect2: Id returned 1 exit status 
-replace cpps with cppsl 

rm: cannot remove 'pstu2.e': No such file or directory 
main: begin 

X: 55.389999389648438 

A,B,C: 125 

SlO:[HOW_ARE_U?] 
cppsl: begin 
x: 90023.9 
a,b,c:23,1,-999 
slO:ALLCHANGED 
cppsl: end 

X: 90023.876000000004 

A,B,C: 23 1 -999 

SlO:[ALLCHANGED] 
main: end 


6 




-replace main/cpps with mainl/cppsl 

pstu.o: In function 'cpps_': 

(.text+0x57c): multiple definition of 'cpps_' 
cppsl.o:cppsl.cpp:(.text+0x5c): first defined here 
pstu.o: In function 'MAIN_ 

(.text+OxO): multiple definition of 'MAIN_ 1 

mainl.o:mainl.f:(.text+OxO): first defined here 
collect2: id returned 1 exit status 
-replace main/cpps with mainl/cppsl 

rm: cannot remove 'pstu3.e': No such file or directory 
mainl: begin 
X: 888.29541015625000 

A, B, C: -4 2 67 

S10:[U_ARE_FINE] 
cppsl: begin 
x:90023.9 
a,b,c:23,1,-999 
slO:ALLCHANGED 
cppsl: end 

X: 90023.876000000004 

A,B,C: 23 1 -999 

SlO:[ALLCHANGED] 
mainl: end 
serviceO 328% 


4.5.2 INTEL 

The Intel Fortran/C++ compiler is used here. The files are the same as in Section 4.5.1. Using “ifort - 
help” comma-separated options are passed to the linker as “-W1, <ol> [, <o2>, ...]". Using “xild 
-help” the linker option “-z muldef s” allows multiple defintions. 


#!/usr/bin/tcsh 

# Intel Compiler 

source /apps/intel/fc/10.1.015/bin/ifortvars.csh 
source /apps/intel/cc/10.1.015/bin/iccvars.csh 

echo "-INTEL-" 

# make original 
rm main.o 

ifort -m32 -c ../../struct/intel/main.f 
rm cpps.o 

icc -m32 -c . . /../struct/intel/cpps.cpp 
rm pstu.e 

xild -V -m elf_i386 -r main.o cpps.o -o pstu.o 
ifort -m32 pstu.o -o pstu.e -L/usr/lib -lstdc++ 

echo "-main with cpps" 

pstu.e 

# make update 
rm mainl.o 

ifort -m32 -c mainl.f 
rm cppsl.o 

icc -m32 -c cppsl.cpp 

# replace main with mainl 

echo "-replace main with mainl" 

ifort -m32 mainl.o pstu.o -o pstul.e -L/usr/lib -lstdc++ 

echo "-replace main with mainl" 

rm pstul.e 

ifort -m32 mainl.o pstu.o -o pstul.e -L/usr/lib -lstdc++ -Wl,-z,muldefs 
pstul.e 

# replace cpps with cppsl 


7 




echo "-replace cpps with cppsl" 

ifort -m32 cppsl.o pstu.o -o pstu2.e -L/usr/lib -lstdc++ 

echo "-replace cpps with cppsl" 

rm pstu2.e 

ifort -m32 cppsl.o pstu.o -o pstu2.e -L/usr/lib -lstdc+t -Wl,-z,muldefs 
pstu2 . e 

# replace main and cpps 

echo "-replace main/cpps with mainl/cppsl" 

ifort -m32 mainl.o cppsl.o pstu.o -o pstu3.e -L/usr/lib -lstdc+t 

echo "-replace main/cpps with mainl/cppsl" 

rm pstu3.e 

ifort -m32 mainl.o cppsl.o pstu.o -o pstu3.e -L/usr/lib -lstdc+t -Wl,-z,muldefs 
pstu3.e 


OUTPUT: _ 

-INTEL- 

xild: warning empty_IPO_object_list: empty multi-file optimizations object list 
xild: executing 'id' 

GNU id (GNU Binutils; SUSE Linux Enterprise 11) 2.20.0.20100122-0.7.9 
Supported emulations: 
elf_x86_64 
elf_i386 
i3861inux 
elf_llom 

-main with cpps 

main: begin 
X: 55.3899993896484 

A,B,C: 125 

S10:[HOW_ARE_U?] 
cpps: begin 
x:7 8.9998 
a,b,c:10,101,-54 
slO:CHANGE_ALL 
cpps: end 

X: 78.9998000000000 

A,B,C: 10 101 -54 

SlO:[CHANGE_ALL] 
main: end 

-replace main with mainl 

pstu.o: In function 'MAIN_’: 

(.text+0x0): multiple definition of 'MAIN_ 1 

mainl.o:mainl.f:(.text+OxO): first defined here 
-replace main with mainl 

rm: cannot remove 'pstul.e 1 : No such file or directory 
mainl: begin 
X: 888.295410156250 

A, B, C: -4 2 67 

SlO:[U_ARE_FINE] 
cpps: begin 
x:7 8.9998 
a,b,c:134,101,-54 
s10:CHANGE_ALL 
cpps: end 

X: 78.9998000000000 

A,B,C: 134 101 -54 

SlO:[CHANGE_ALL] 
mainl: end 




-replace cpps with cppsl 

pstu.o: In function 'cpps_': 

(.text+0x45a): multiple definition of 'cpps_' 
cppsl.o:cppsl.cpp:(.text+0x22): first defined here 
-replace cpps with cppsl 

rm: cannot remove 'pstu2.e': No such file or directory 
main: begin 
X: 55.3899993896484 

A,B,C: 125 

S10:[HOW_ARE_U?] 
cppsl: begin 
x: 90023.9 
a,b,c:23,1,-999 
slO:ALLCHANGED 
cppsl: end 

X: 90023.8760000000 

A,B,C: 23 1 -999 

SlO:[ALLCHANGED] 
main: end 

-replace main/cpps with mainl/cppsl 

pstu.o: In function 'cpps_': 

(.text+0x45a): multiple definition of 'cpps_' 
cppsl.o:cppsl.cpp:(.text+0x22): first defined here 

pstu.o: In function 'MAIN_': 

(.text+OxO): multiple definition of 'MAIN_ 1 

mainl.o:mainl.f:(.text+OxO): first defined here 
-replace main/cpps with mainl/cppsl 

rm: cannot remove 'pstu3.e': No such file or directory 
mainl: begin 
X: 888.295410156250 

A,B,C: -4 2 67 

SlO:[U_ARE_FINE] 
cppsl: begin 
x: 90023.9 
a,b,c:23,1,-999 
s10:ALLCHANGED 
cppsl: end 

X: 90023.8760000000 

A,B,C: 23 1 -999 

SlO:[ALLCHANGED] 
mainl: end 


9 




REFERENCES 

[8] http://www.volinux.com/TUTORIALS/LinuxTutorialMixinqFortranAndC.html 

[17] http://tldp.org/HOWTO/Bash-Prog-lntro-HOWTO-3.html 


10 



