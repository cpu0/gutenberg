Software 


@ Wallops Ship Surveillance 
System 

Approved as a Wallops control center 
backup system, the Wallops Ship Surveil- 
lance Software is a day-of-launch risk 
analysis tool for spaceport activities. The 
system calculates impact probabilities 
and displays ship locations relative to 
boundary lines. It enables rapid analysis 
of possible flight paths to preclude the 
need to cancel launches and allow execu- 
tion of launches in a timely manner. Its 
design is based on low-cost, large-cus- 
tomer-base elements including personal 
computers, the Windows operating sys- 
tem, C/C++ object-oriented software, 
and network interfaces. In conformance 
with the NASA software safety standard, 
the system is designed to ensure that it 
does not falsely report a safe-for-launch 
condition. To improve the current ship 
surveillance method, the system is de- 
signed to prevent delay of launch under 
a safe-for-launch condition. 

A single workstation is designated the 
controller of the official ship information 
and the official risk analysis. Copies of this 
information are shared with other net- 
worked workstations. The program de- 
sign is divided into five subsystems areas: 

1. Communication Link - threads that 
control the networking of workstations; 

2. Contact List - a thread that controls a 
list of protected item (ocean vessel) 
information; 

3. Hazard List - threads that control a 
list of hazardous item (debris) infor- 
mation and associated risk calculation 
information; 

4. Display - threads that control operator 
inputs and screen display outputs; and 

5. Archive - a thread that controls 
archive file read and write access. 
Currently, most of the hazard list 

thread and parts of other threads are 
being reused as part of a new ship surveil- 
lance system, under the SureTrak project. 

This tuork was done by Donna C. Smith of 
Goddard Space Flight Center. Further informa- 
tion is contained in a TSP ( seepage 1 ). GSC- 
15623-1 


Source Lines Counter 
(SLiC) Version 4.0 

Source Lines Counter (SLiC) is a soft- 
ware utility designed to measure soft- 
ware source code size using logical 


source statements and other common 
measures for 22 of the programming 
languages commonly used at NASA and 
the aerospace industry. Such metrics 
can be used in a wide variety of applica- 
tions, from parametric cost estimation 
to software defect analysis. SLiC has a 
variety of unique features such as auto- 
matic code search, automatic file detec- 
tion, hierarchical directory totals, and 
spreadsheet-compatible output. SLiC 
was written for extensibility; new pro- 
gramming language support can be 
added with minimal effort in a short 
amount of time. SLiC runs on a variety 
of platforms including UNIX, Windows, 
and Mac OSX. Its straightforward com- 
mand-line interface allows for cus- 
tomization and incorporation into the 
software build process for tracking de- 
velopment metrics. 

This work was done by Erik W. Monson, 
Kevin A. Smith, Brian J. Newport, Roli D. 
Gostelow, Jairus M. Hihn, and Ronald K. 
Kandt of Caltech for NASA’s Jet Propulsion 
Laboratory. For more information, contact 
iaoffice@jpl. nasa.gov. 

This software is available for commercial li- 
censing. Please contact Daniel Broderick of 
the California Institute of Technology at 
danielb@caltech.edu. Refer to NPO-45962. 


/ Guidance, Navigation, and 
Control Program 

The Rendezvous and Proximity Oper- 
ations Program (RPOP) is real-time 
guidance, navigation, and control 
(GN&C) domain piloting-aid software 
that provides 3D Orbiter graphics and 
runs on the Space Shuttle’s Criticality-3 
Payload and General Support Computer 
(PGSC) in the crew cockpit. This soft- 
ware provides the crew with “Situational 
Awareness” during the rendezvous and 
proximity operations phases of flight. 
RPOP can be configured from flight to 
flight, accounting for mission-specific 
flight scenarios and target vehicles, via 
initialization load (I-load) data files. The 
software provides real-time, automated, 
closed-loop guidance recommendations 
and the capability to integrate the crew’s 
manual backup techniques. 

The software can bring all relative nav- 
igation sensor data, including the Or- 
biter’s GPC (general purpose com- 
puter) data, into one central application 
to provide comprehensive situational 


awareness of the rendezvous and prox- 
imity operations trajectory. 

RPOP also can separately maintain tra- 
jectory estimates (past, current, and pre- 
dicted) based on certain data types and 
co-plot them, in order to show how the 
various navigation solutions compare. 
RPOP’s best estimate of the relative trajec- 
tory is determined by a relative Kalman fil- 
ter processing data provided by the sensor 
suite’s most accurate sensor, the trajectory 
control sensor (TCS) . Integrated with the 
Kalman filter is an algorithm that identi- 
fies the reflector that the TCS is tracking. 

Because RPOP runs on PC laptop 
computers, the development and certifi- 
cation lifecycles are more agile, flexible, 
and cheaper than those that govern the 
Orbiter FSW (flight software) that runs 
in the GPC. New releases of RPOP can 
be turned around on a 3- to 6-month 
template, from new Change Request 
(CR) to certification, depending on the 
complexity of the changes. 

This work was done by Heather Hinkel, Scott 
Tamblyn, and William. L. Jackson of NASA’s 
Johnson Space Center; Chris Foster of Jacobs 
Engineering (ESCG);Jack Brazzel and Thomas 
R Manning of McDonnell Douglas Space Sys- 
tems; and Fred Clark, Pete Spehar; Jim. D. Bar- 
rett, and Zoran Milenkovic of Lockheed Mar- 
tin. Further information is contained in a 
TSP (see page 1). MSC-24473-1 


fs Single-Frame Terrain Map- 
ping Software for Robotic 
Vehicles 

This software is a component in an 
unmanned ground vehicle (UGV) per- 
ception system that builds compact, 
single-frame terrain maps for distribu- 
tion to other systems, such as a world 
model or an operator control unit, 
over a local area network (LAN) . Each 
cell in the map encodes an elevation 
value, terrain classification, object clas- 
sification, terrain traversability, terrain 
roughness, and a confidence value into 
four bytes of memory. The input to this 
software component is a range image 
(from a lidar or stereo vision system), 
and optionally a terrain classification 
image and an object classification 
image, both registered to the range 
image. The single-frame terrain map 
generates estimates of the support sur- 
face elevation, ground cover elevation, 
and minimum canopy elevation; gener- 


NASA Tech Briefs, March 201 1 


9 



