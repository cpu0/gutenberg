AD-A256 726 


o 





NAVAL POSTGRADUATE SCHOOL 
Monterey, California 

1 


a 



A Tool for Automated Validation of 
Network Protocols 


by 

Matthew James Rothlisberger 
24 September 1992 


Thesis Advisor; 


Dr. G. M. Lundy 


Approved for public release 
distribution unlimited. 



92-28850 




a I iiiiii iiifi 









UNCLASSIFIED 

SECURITY CLASSIFICATION Of THIS PAGE 




REPORT DOCUMENTATION PAGE 


UNCLASSIFIED 





6c. ADDRESS (City, StBto, and ZIP Code) 

Monterey, CA 93943-5000 




Approved for public release; 
distribution is unlimited 





Naval Postgraduate School 


7b. ADDRESS (City, State, and ZIP Code) 

Monterey, CA 93943-5000 






ORGANIZATION 

(if applicable) 

8c. ADDRESS (City, State, and ZIP Code) 




■d:r«TcT:OiTB 


ELEMENT NO. I NO. 


II1 ii 1 


NO. 

NO. 


11. TITLE (Include Secunty Classification) 

A Tool for Automated Validation of Network Protocols 



ii ^ M v-if 11 s r«T: rtski 


llt»n>tf'ia:tai a;iaaal;i 


atthew James Rothlisberger 


14. DATE OF REPORT (Year, Month. Day) 

1992, September 24 


in-1iVJc!:X«alll»| 


ir:»iiiiau«aaia^irj:rj;MrjitaiiMff 


e views expressed in this thesis are those ot the author an 
policy or position of the Department of Defense or the United States Government 


252 


o not reflect the ottici 


COSAh CODES 


GROUP SUB-GROUP 


18. SU BJECT TERMS (Continue on reverse it necessary and identity by block number) 

Communicating Finite State Machines, System of Communicating Ma¬ 
chines JData Link Protocols, ADA, Go_Back_N, Selective Repeat, 


19. ABSTRACT (Continue on reverse if necessary and identify by bfock number) 

This thesis introduces a program that analyzes network protocols using the Communicating Finite State Machines 
(CFSM) model and the System of Communicating Machines (SCM) model. A simple two machine implementation 
of CFSM model is initially explored. A number of simple protocols are demonstrated as a means to validate the au¬ 
tomated tool (program). The second model implemented is that of SCM model. The SCM tool uses many of the same 
data structures designed in the CFSM program . The SCM program is validated with an analysis of widely used data 
link protocols. Both programs were done in the Ada language environment. 


13 

■slMlIlUllllWCffAVJIWilHltfgeia 



[ 

3 UNCLASSIFIED/UNLIMITED Q 

1 SAME AS RPT Q OTIC USERS 

UNCLASSIFIED 


unay 


00 FORM 1473, S4 MAR 




83 APR edit)on may be used unbi exhausted 
All other editions are obsolete 


SECURITY CLASSIFICATION OF THIS PAGE 

UNCLASSIFIED 


































Approved for public release; distribution is unlimited 
A Tool for Automated Validation of Network Protocols 

by 

Matthew James Rothlisberger 
Captain, United States Army 

B. S. Business Administration, Clarion State College , 1982 

Submitted in partial fulfillment of the 
requirements for the degree of 

MASTER OF SCIENCE IN COMPUTER SCIENCE 

from the 

NAVAL POSTGRADUATE SCHOOL 
6 August 1992 

Author; 


Approved By: 



Robert B. McGhee, Chairman, 
Department of Computer Science 



II 






ABSTRACT 


This thesis introduces a program that analyzes network protocols using the 
Communicating Finite State Machines (CFSM) model and the System of Commumcating 
Machines (SCM) model. A simple, two machine implementation of CFSM model is 
initially explored. A number of simple protocols are demonstrated as a means to validate 
the automated tool (program). 

The second model implemented is that of the SCM model. The SCM tool uses many 
of the same data stmetures designed in the CFSM program. The SCM program is validated 
with an analysis of widely used data link protocols. 

Both programs were done in the Ada language environment 



I>TrC QUALITY lUSPSCTEL 4 





TABLE OF CONTENTS 


1. INTRODUCTION.1 

n. BACKGROUND OF MODELS.5 

A. GENERAL.5 

B. COMMUNICATING FINITE STATE MACHINES. 7 

C SYSTEM OF COMMUNICATING MACHINES.12 

D. LANGUAGE CONSIDERATIONS.18 

in. A PROGRAM FOR GENERATING A CFSM REACHABILITY 

ANALYSIS.21 

A. PROGRAM STRUCTURE.21 

B. INPUT.24 

C. REACHABD .ITY ANALYSIS.27 

D. OUTPUT.31 

rv. AN AUTOMATED TOOL FOR SCM REACHABILITY ANALYSIS.34 

A. PROGRAM STRUCTURE.35 

B. INPUT.39 

1. Protocol Variable Definitions.40 

2. Predicate-Action Table Representation.42 

3. Finite State Machines.45 

C. REACHABn-ITY ANALYSIS....47 

1. Global State Analysis....47 

2. System State Analysis.52 

D. OUTPUT.56 

V. AN AUTOMATED ANALYSIS OF SELECTED DATA LINK 

PROTOCOLS.59 

A. CFSM MODEL.59 

1. Alternating Bit Protocol.59 

2. A More Complex Example: The Sliding Window Protocol.61 

B. SCM MODEL.64 

1. Go Back N. 64 

2. Selective Repeat.74 

VI. CONCLUSIONS AND RECOMMENDATIONS.82 

APPENDDC A CFSM CODE.84 

APPENDIX B SCM CODE.129 

APPENDDC C (CFSM) ALTERNATING BIT.172 

INPUT (FSM) .172 

OUTPUT.173 

APPENDIX D (CFSM) SLIDING WINDOW.174 

INPUT(FSM) .174 

OUTPUT.175 

APPENDIX E (SCM) GO_BACK_N, W=1. 176 

INPUT (FSM) .176 


IV 











































VARIABLE DEFINITIONS. 

PREDICATE-ACTION . 

OUTPUT FORMAT . 

OUTPUT. 

APPENDK F (SCM) GO_BACK_N, W=2. 

INPUT (FSM) . 

VARIABLE DEFINITIONS. 

PREDICATE-ACTION . 

OUTPUT FORMAT . 

OUTPUT. 

APPENDDC G (SCM) GO_BACK_N, W=3. 

INPUT (FSM) . 

VARIABLE DEFINITIONS. 

PREDICATE-ACTION . 

OUTPUT FORMAT .. 

OUTPUT. 

APPENDK H (SCM) GO_BACK_N, W=4. 

INPUT (FSM) . 

VARIABLE DEFINITIONS. 

PREDICATE-ACTION . 

OUTPUT FORMAT . 

OUTPUT... 

APPENDK I (SCM) SELECTIVE REPEAT, W=1 


VARIABLE DEFINITIONS. 

PREDICATE-ACTION . 

OUTPUT FORMAT . 

OUTPUT. 

APPENDK J (SCM) SELECTIVE REPEAT, W=2 

INPUT (FSM) .-. 

VARIABLE DEFINITIONS. 

PREDICATE-ACTION . 

OUTPUT FORMAT . 

OUTPUT. 

referenc:es. 

INITIAL DISTRIBUTION LIST. 







































LIST OF FIGURES 


Figure 1, CFSM, two machine behavior representation.7 

Figure 2, CFSM model representation.9 

Figure 3, CFSM specification for stop-and-wait. .10 

Figure 4, CFSM, global reachability analysis, stop-and-waiv . 11 

Figure 5, SCM, two machine behavior representation.14 

Figure 6, SCM, general model representation.15 

Figure 7, SCM specification for stop-and-wcUt, finite state machines and variable defini- 

tionr.16 

Figure 8, SCM, global reachability analysis, stop-and-waii. .17 

Figure 9, SCM, system reachability analysis, stop-and-waiL . 17 

Figure 10, CFSM run time behr.vior.22 

Figure 11, CFSM compilation units.23 

Figure 12, Finite State Machine representation, stop and_wait .27 

Figure 13, CFSM internal reachability graph, stop_and_wait . 29 

Figure 14, CFSM, analysis output, stop and wait .32 

Figure 15, CFSM, analysis output, deadlock/unspecified reception/unexecuted transition 

example.33 

Figure 16, SCM, specification for stop jindjvait. .35 

Figure 17, SCM run time behavior.36 

Figure 18, SCM compilation units.38 

Figure 19, SCM, drfinitions package template.41 

Figiue 20, SCM, definitions package, stop_and_wait. .42 

Figure 21, SCM, AnalyzeJPredicate function template.43 

Figure 22, SCM, Action procedure template.44 

Figure 23, SCM, analyze_predicate.a, stop andjvait .45 

Figure 24, Input File definitions.46 

Figure 25, SCM, Input File, stop and wait .46 

Figure 26, SCM, global definitions.49 

Figure 27, SCM internal global reachability graph, stop and wait . 51 

Figure 28, SCM, system ^finitions.53 

Figure 29, SCM internal system reachability gnph, stop and wait. .55 

Figure 30, SCM, output_Gtuple procedure template . 56 

Figure 31, SCM, output format, stop and wait .57 

Figure 32, SCM, analysis output, stop and wait. .58 

Figure 33, CFSM specification, Alternating Bit. .60 

Figure 34, CFSM specification, sliding window (w^3) .62 

Figure 35, SCM specification. Go Back N, window size of l..w.66 

Figure 36, SCM, system state analysis. Go Back N, w=l.71 








































Figure 37, SCM, system state analysis. Go BackN, w=2.72 

Figure 38, SCM specification. Selective Repeat, window size of l..w.75 

Figure 39, SCM, system state analysis. Selective Repeat, w=l.80 

Figure 40, SCM, system state analysis. Selective Repeat, w=2.80 


Vll 











LIST OF TABLES 


Table 1, SCM, two machine predicate-action table format.14 

Table 2, SCM specification fat stop_and_wait, predicate action table.16 

Table 3, GFSM compilation units.21 

Table 4, SCM compilation units.36 

Table 5, SCM, predicate action table, selective repeat. .66 

Table 6, SCM, predicate action table, gojxickji .75 


Vlll 










L INTRODUCTION 


“ simulations are set up to answer the question, what if...” 

-Hamming, R. W., Future Engineering Practice 
Course Notes, 11 May 92. 


A. BACKGROUND 

The past ten years have seen an substantial increase in the need to communicate 
quickly and reliably over long distances using a wide range of architecmres. We, the users, 
live in a ‘come as you are’ digital society. Access to some sort of network is needed to move 
information from user to user. This movement of information takes place on many 
networks (voice, message, data) and at many levels (physical, data link, network, and 
higher). The networks in use today tend to be a heterogeneous mix of equipment and 
protocols. We, the network designers/engineers, must allow the user access to the available 
resources at the lowest cost. To do this a firm understanding of how machines ‘handsh'ake’ 
and talk to one another must be realized. This is accomplish by applying protocol design 
principles. These principles can be applied to protocols and studied using a wide range of 
Formal Description Techniques (FDT’s). Examples of existing FDT’s will be reviewed and 
the need for an automated set of tools will also be explored. 

The need for machines to be able to communicate is inherent in any heterogenous 
environment. Machines do this through the use of standardized protocols. A protocol is a 
set of rules that govern the interaction of concurrent processes in distributed systems. 
Another widely used definition of a protocol is, a set of rules used for communication 
between two or more processes connected by a communication network. Hand in hand, 
protocol design and analysis is an important consideration in operating systems, computer 
networks, and data communications. For a protocol designer/architect to build an 
appropriate specification, he must use one of a number of modeling techniques. 


1 



Mcxlels or FDT’s cf protocols are used for many purposes. They are used to describe 
the protocol unambiguously so that the exact operation is understood by both the protocol 
designer, implementor and user. A model is also used to provide a formal framework for a 
rigorous analysis of the protocol specification. With the advent of internetworking and the 
birth of Integrated Services Digital Network (ISDN), computer protocols have become 
more and more complex. The designer must now develop large sets of rules for information 
exchange that is logically consistent and efficiently implemented. To design a new protocol 
or to implement an existing one into a computing environment gives rise to a need for such 
a tool. 

There are many formal models available to protocol architects. Some of the more 
common models include Petri Nets, Communicating Processes, Communicating Finite 
State Machines (CFSM), System of Communicating Machines (SCM), the Language of 
Temporal Ordering Specifications (LOTOS), Specification and Description Language 
(SDL), and Extended State Transition Model Language (ESTELLP). LOTOS and 
ESTELLE are formal description techniques developed by the International Organization 
for Standardization (ISO) working laterally with the International Telephone and 
Telephone Consultative Committee (CCITT). 

The ISO is a standards publishing body including the American National Standards 
Institute (ANSI). In 1980, the ISO saw the advantages of standardizing a hierarchy of 
protocol services as a reference model for protocol designers. The model includes seven 
layers; physical, data link, network, transfwrt, session, presentation, and application. The 
layer/class of protocols that will be analyzed in this thesis are the data link layer protocols. 

Each of the models that will be discussed have a means to amplify design principles 
of communications systems[BART 87]. The first principle is for a model to reflect the 
behavior of the protocol. Behavior is modeled using conformance models, an example 
found in [RAND 92]. Secondly, the model must allow refinement by the user. Safety and 
lively properties should be proven true. And the last principles that must be supported are 


2 








those of concurrency and nondeterminism. A good overview is found in King’s 
article[KING 91]. 

The need for a variety of models is apparent wiien it is considered that the interaction 
between machines occurs at different levels in the OSI structure and that behavior can be 
quite different among levels and machines. The models listed above will be reviewed in the 
following section. Most of the models have a means to informally follow the design 
principles. Upon close inspection of each FDT it is apparent that no one is perfect for all 
applications. As such, an automated tool will be presented that will make the use oi two 
models (CFSM and SCM). The intuitive feel of each protocols coupled with the power of 
automating such a such models will enable the user to fully enjoy the important design 
principle of refinement. 

B. OBJECTIVES 

The objective of this thesis is to present a means of automating two powerful models 
of protocol validation and analysis. The first that was to be automated is the CFSM model. 
The data structures and program entities were developed and verified. The second tool 
automated is the SCM model. Although the SCM used many of the underlying data 
structures and logic of the CFSM, the SCM model is much more elegant and much more 
complex. The output information is provided to the user in an intuitive format. Once the 
two models were fully functional, test cases were input to the models to verify the 
functionality. Finally, a select number of existing protocols were input and the analysis 
compared to previous research using a manual method. 

C. SCOPE 

This thesis presents automated implementation of both the CFSM and SCM models. 
The implementation of each model was limited to two machine protocols. The 
specifications covered in this thesis lend themselves very well to the simulation or 
automated analysis. 


3 




The unboundedness properties of CFSM channels are obviously limited to the 
hardware that the tool is run on. A channel can have a bound the size of the largest machine 
register, in the case of the test runs, a SUN SPARC station, the upper bound was that of the 
largest integer(4.294967 x lo’ items). 

An analysis of select data link protocols are included to illustrate the use of the CFSM 
and SCM automated models. The specifications will only address procedural rules, not 
formatting of messages. 

D. ORGANIZATION 

This thesis is organized into three sections. The first section includes Chapters IT and 
in. Chapters n and ni give background information of pertinent models and language 
considerations. The next section. Chapters FV and V, give a detailed description of how the 
code was implemented to reflect the behavior of the two models. The final section. Chapter 
VI, describes the specifications of Alternating Bit, Go_Back_N, and Selective Repeat 
network protocols. It also describes how the user inputs the information into and receives 
output from the tool. A means for validating each automated model is discussed in this 
chapter. Finally, Chapter VII includes conclusions made based on the thesis work and 
recommendations for futiuo work in the area. 


4 




n. BACKGROUND OF MODELS 


A. GENERAL 

This section contains an overview of some existing FDT’s. Each model is a different 
way to represent a protocol design or reflect network behavior. Each has its own inherent 
advantages and disadvantages, of which must be considered before application. Two 
models listed (ESTELLE and LOTOS) are automated. 

The first method of description is Petri Nets. Petri Nets are a graphical representation 
of a systems’s states and state changes. The possible states are captured using places which 
can hold tokens. A particular state is represented by a movement of tokens to states. State 
changes are described using transitions. This can be visualized as being similar to a directed 
graph. The input and output arcs associated with each transition determine how token 
placement changes. The behavior of a system can be determined by examining token 
movement within the net. Deadlock and freedom of livelock are examined in this model. 
The complexity of Petri Net representation increases with the size of the protocol being 
modeled. A major consideration for using this model is the intuitive feel of a protocol is lo'st 
on the complex cases. 

Another class of FDT are models is called “communicating processes.” The following 
description is more closely examined in Lundy’s article[LUND 92b]. The elimination of a 
set of global states is done through the use of invariants. Rather than generating the set of 
all possible states, and inspecting them to be sure no undesirable state exists, an assertion 
is made. The assertion states the desired property. It is proven that the protocol always 
satisfies the assertion, this must be proven without having to compute all the possible states 
which might be reached. The communication between processes takes place between 
unbounded FIFO queues. Processes are emulated by use of variables and statements. The 
execution of an action is an atomic event and no two actions may occur simultaneously. 
Since communication between processes can only occur using FIFO queues, actions may 


5 




only follow a given sequence. The SCM model demonstrates how this is characteristic is 
overcome. 

Extended State Transition Model Language (ESTELLE) can describe a system in 
terms of a set of communicating extended finite state machines through use of FIFO 
channels, similar the to definition of CFSM. This model describes the protocols as a 
collection of modules, each module is an extended FSM having memory-the difference 
between an CFSM and Estelle model is that the CFSM model has no memory. Modules of 
an entity can communicate through FIFO channels[SARI 91]. Messages are exchanged 
between entities as parameters to the modules. Estelle is bajcd on Pascal and the extension 
of the language is a feature available to the programmer/user. The models automated in this 
thesis are similar to Estelle, however, data representation is implemented differendy and 
the power of the hmguage implemented (ADA) is udlizedESTELLE also allows dynamic 
module creation/destruction and transidon priorides. A model implementadon 
consideration is ESTELLE cannot adequately represent broadcast channels, a shortcoming 
that the SCM model has shown very well suited for, such as CMSA/CD analysis [LUND 
91a]. 

Specificadon and Description Language was designed and implemented by groups 
SGXI and SGX of the CCITT. It was meant as a tool for the design and specification of 
telephone switches and their underlying protocols. Currendy there are two versions of 
SDL; a graphical tool and a text program tool. Processes are represented by flowcharts, 
which could be concurrent to other processes. The eight traditional flowchart symbols 
represent atomic actions such as internal events, input and output, boolean expressions, 
wait conditions, statements, transitions, and connectors Each flowchan- has an associated 
channel (queue) used to process messages.The Holzman text [HOLZ 91] includes a more 
specific definition of SDL with some examples. One advantage to this approach is the user 
gets a feel, graphically, of the behavior of the protocol. The process execution is somewhat 
restricted to the properties that a FIFO queue has. 


6 




The ISO language of Temporal Ordering Specifications (LOTOS) is means of 
representation using hierarchically structured processes. As with ESTELLE, LOTOS was 
also developed by the ISO. A hierarchy of processes can correspond to one entity[SIST 91]; 
a concept that is reflected in object-oriented design environments. Systems represented 
using this model are organized using a set of interacting processes which exchange 
information with each other and with the external systems environment through gates. 
LOTOS is a superset language consisting of an abstract data type language and an algebraic 
notation language, both of which uphold good design principles covered earlier. Interaction 
is synchronous through gates that have a one-to-one mapping to interaction points. 

The tool implemented in this thesis uses the technique of representing portions of 
machine behavior as abstract data types, as demonstrated using. A technique of interpreting 
machine behavior through use of finite state machine representation, as with ESTELLE, 
will also be integrated into the design. Plans for future upgrade of this tool include a 
graphical interface similar to that of SDL. 

B. COMMUNICATING FINITE STATE MACHINES 

One of the first manual tools used for analyzing communication protocol behavior was 
the communicating finite state machine(CFSM) model. This modeled each machine in the 
network as a finite automaton, or finite state machine, with communication channels 
between pairs of machines modeled as one-way, infinite length FIFO queues. There has 
been a great deal of work in this area, a few include [PENG 91], [VUON 83] and [RUDI 
83]. The model is defined for an arbitrary number of machines; however for simplicity sake 
will be presented as a two machine model as shown in Figure 1. 



Figure 1: CFSM, two machine behavior representation 


7 








In this section the CFSM model will be defined [GOUD 83]followed by a simple 
protocol analysis to illustrate the model. 

A communicating machine Af is a finite, directed labeled graph with two types of 
edges, sending edges and receiving edges. A sending (receiving) edge is labeled ‘-g’ (‘+g’) 
for some message g, taken from a finite set G of messages. One of the nodes in M is 
identitied as the initial node, and each node is reachable from the initial node by some 
directed path. A node in M whose outgoing edges are all sending (receiving) edges is a 
sending (receiving) node; otherwise the node is mixed node. If the outgoing edges of each 
node in M have distinct labels then M is determimstic, otherwise M is nondeterministic. The 
nodes of Af are often referred to as states', the two terms are used interchangeably. 

Let M and N be two communicating machines having the same set G of messages; the 
pair (A/.A0 is a network. A global state of this network is a four-tuple where m 

and n are nodes (states) from M and N, and c„ and are strings from the set G of messages. 
Intuitively, the global state [m.c„, 0 ^. 11 ] means that the machines M and N have reached 
states m and n, and the communication channels contain the strings c^ and c^ of messages. 
Channel c„ contains the messages sent from M and N, and channel c„ the messages sent 
from N to M. The string c, will be referred to as channel c,. 

The initial global state of (A/,A0 is [m(,,E.E,nf,], where an are the initial states of 
M and N, and E is the empty string. 

The network progresses as transitions are taken in either M or N. Each transition 
consists of a state change in one of the machines, and either the addition of a message to 
the end of one channel (sending transition) or the deletion of a message from the front of 
one channel (receiving transition). 

A sending transition in M(N) adds a message to the end of channel c„iCn); a receiving 
transition in M(N) removes a message from the front of channel c„(c„). 

If si=[m,Ci,Cj,n] is a global state of (Af jV), and state S 2 follows si if there is a transition 
(in Af or AO which can be executed in sj, such that the resulting state is S 2 . A state S 2 is 


8 







reachable from state sj if there is a sequence of states such that si follows Sj, 

Si+i follows Si, and so on, and S 2 follows 5,+^. A state s is reachable if it is reachable from 
the initial state. 

The communication of a network (M/i) is bounded if, for every reachable state 
[m,c„,c„,n] there is a nonnegative integer k such that |cj s k and |cj s *, where id denotes 

the number of messages in channel c. 

/ 

A reachability graph of a network is a directed graph in which the nodes 

correspond to the reachable global states of (A/,A/), and the edges represent the follows 
function, such that there is an edge from state Si to state Sj, if and only if, Sj follows j,. The 
edges are labeled with the transition which they represent The reachability graph can be 
generated by starting with the initial state, and adding the states which follow it, connecting 
them to it with edges; and repeating for each new state generated.An overview of the 
functional units of the CFSM model is shown in Figure 1. 


Machine 1 



Figure 2: CFSM model representation. 

A global state [nt,c„,c„,n] is a deadlock state if both m and n are receiving nodes, and 
c„=Cn=E, where E denotes the empty string. 

A global state [m,c„,c„,n] is an unspecified reception state if one of the following two 
conditions are true; 


9 









(1) m is a receiving state, the message at the head of channel is g, and none of MS 
outgoing transitions is labeled ‘-»-g.’ 

(2) /I is a receiving state, the message at the head of channel c„ is g,'and none of n’s 
outgoing transitions is labeled ‘+g.‘ 

A simplified version of the stop-and-wait data link protocol will be analyzed as an 
example of analysis with the CFSM model. The interfaces between layer 6 (user)and layer 
2 (data link) of the Open Systems Interconnection (OSI) model is transparent in all the 
examples addressed in this thesis. An assumption is made that the higher layer has passed 
the information/frames without error. The frames at each layer have accomplished the 
appropriate concatenation of header and address information. So, at layer 2, this protocol 
consists of two distinct entities, a sender and a receiver. Machine one serves as the sender 
and machine 2 serves as the receiver as shown in Figure 3. The sender places a frame on 
the channel to the receiver. The receiver senses a frame on the incoming channel and 
accepts the message from the channel, removing the message from the incoming channel. 
The receiver then sends an acknowledgment packet to the sender. The sender senses the 
acknowledgment packet and is clear to send another frame of information to the receiver. 

I 

Machine 2 

+D 



Machine 1 



Figure 3: CFSM specification for stop-and-wait. 

The finite state machines in Figure 3 represent the behavior of the definition of the 
stop-and-wait protocol. The -D represents sending data, +D, receiving data, -A, send 


10 




acknowledgment, and +/4, receive acknowledge. As per the definition of the CFSM model, 
there is two channels, one from machine 1 to machine 2 and one hrom machine 2 to machine 
1. The notch on state 1 of both machines represents the initial/starting state. 

The global reachability analysis graph shown in Figtire 4 is free from deadlock, 
unspecified receptions, and unexecuted transitions. 

(—► [0,E,E,0] 

[1,D E,0] 

.0 

[l.E E,l] 

I* 

[1.E,A,0] 

I +A 


Figure 4; CFSM, global reachability analysis, stop-and-wait. 

This model has many desirable features as well as some disadvantages that are 
improved in the SCM model. The one glaring disadvantage is that the analysis might not 
terminate if the queue length is unbounded. The number of global states in Figure 4 is 
trivial, but for complex specifications the number of states will lead to a combinatorial state 
explosion. This is even true when the queue length is very restrictive. As pointed out in 
[LUND 91b), the specification of a practical protocol can be so complex, containing 
hundreds of states and transitions, that the user can not be sure of the intended specification 
or grasp the intuitive feel for what the protocol is intended to do. This model has the 
advantage of simplicity and a method of analysis that can be easily automated. 


II 



C. SYSTEM OF COMMUNICATING MACHINES 


In this section the model used to specify and analyze protocols is briefly described. A 
more detailed description appears in [LUND 91a]. Following the definition of the model 
will be an analysis of a simple protocol to illustrate the model. 

A system of communicating machines is an ordered pair C = (My), where 

Af={m/,m2,...^„) 

is a finite set of machines, and 

V=(V;,V2....V„} 

is a finite set of shared variables, with two designated subsets and specified for each 
Machine m,-. The subset /?, of V is called the set of read access variables for Machine m,, 
and the subset Wi the set of write access variables for m,. 

Each Machine m, £ Mis defined by a tuple (Si,SQjLiJ^i,Xi), where 

(1) 5,- is a finite set of states; 

(2) sq £ 5, is a designated state called the initial state of m,-; 

(3) L, is a finite set of local variables; 

(4) N, is a finite set of names, each of which is associated with a unique pair ip,a), 
where p is a predicate on the variables of Li vj Ri and a is an action on the variables of 

Li vj Ri vj Wi 

(5) T,; Si X Ni -* Si is a transition function, which is a partial function fiom the states 
and names of m, to the states of m,. 

Machines model the entities, which in a protocol system are processes and channels. 
The shared variables are the means of communication between the machines. Intuitively, 
/?, and Wj are the subsets of V to which m, has read and write access, respectively. A 
machine is allowed to make a transition from one state to another when the predicate 
associated with the name for that transition is true. Upon taking the transition, the action 
associated with that name is executed. 


12 





The set L, of local variables specifies a name and a range for each. The range must be 
a finite or countable set of values. 

A system state tuple is a tuple of all machine states. That is, if {M,V) is a system of n 
communicating machines, and 5,, for l ^ ^ n, is the state of Machine mi, then the n-tuple 
isi,S 2 f...j^ is the system state tuple of (A/,V). 

A system state is a system state tuple together with its enabled outgoing transitions. 
Two system states are equivalent if every machine is in the same state, and the same 
outgoing transitions are enabled. 

The initial system state is the system state such that every machine is in its initial state, 
and the enabled outgoing transitions are the same as in the initial global state. 

The global state of a system consists of the system state, plus the values of all 
variables, both local and shared. The initial global state is the initial system state, with the 
additional requirement that all variables have their initial values. A global state 
corresponds to a system state if every machine is in the same state and the same outgoing 
transitions are enabled. 

Let T(j/,n) = S2 ^ * transition which is defined on Machine m,. Transition X is 
enabled if the enabling predicate p, associated with name n, is true. Transition X may be 
executed whenever m, is in state sj and the predicate p is true (enabled). The execution of 

X is an atomic action, in which both the state change and the action a associated with n 
occur simultaneously. The format for the associated predicate-action table is shown in 
Table 1. 


13 






GLOBAL.VARIABLE 



Figure 5: SCM, two machine behavior representation. 
TABLE 1; SCM, two machine predicate-action table format. 


Transition 

Enabling Predicate 

Action 

Transitions 
for Machine I 

Values of variables that must 
hold true for the transition to be 
enabled. 

The heal and GLOBAL variable 
behavior when the transition is 
taken. 

Transitions 
for Machine 2 

Same as above. 

Same as above. 


Note that if the values of all variables are restricted to some finite range, then the 
model can be reduced to a simple finite state machine. Otherwise an infinite number of 
global states are possible. However, even if the number of global states is infinite, the 
number of system states is finite, because of the finiteness of each machine. This may allow 
a reachability analysis on the system states, when a reachability analysis on the global states 


14 




















is infinite. General behavior of the SCM model is shown in Figure 1 and the general SCM 
model representation is found in Figure 1. 



Figure 6: SCM, general model representation 

The stop-and~wait protocol will also be used to demonstrate the analysis using the 
SCM model. The stop-and-wait protocol specification is the same as defined in the previous 
section. The specification as represented by the SCM model is shown as a set of finite state 
machines and a predicate-action table. 

The finite state machine representation for the SCM model is similar to the CFSM 
example. Again this protocol is only demonstrated with two machines. The FSM’s are 
shown in Figure 3. Also shown are the local and global variables. The local variables in 
Machine 1 and 2 can have the values of D(data), A (acknowledgment), and E(empty). The 


15 








initial value for outJbuff is D and the initial values for all other variables is E. The system 
global variable, CHAN can have the same values as the local variables. 

Machine 1 Machine 2 




Figure 7: SCM specification for stop-and-wait, finite state machines and variable 

definitions. 

The predicate-action table is shown in Table 2. For this example the assumption is 
made that data is always made available to the CHAN from outjyuff. 

TABLE 2: SCM specification for stopjtndjvait, predicate action table. 


Transition 

Enabling Predicate 

Action 

-D 

CHAN = £ A 
out_bi4f>= E 

CHAN ;= outjft^ 

+A. • 

RET^A 

RET . = £ 

CHAN ;= £ 

+D 

CHAN /= £ 

in_bi^:- CHAN 

1 

> 

true 

RET := A 
in_buff :- e; 


16 


























The global state reachability and system state reachability graphs are found in Figure 
4 and Figure 4. The format for the global state tuple of the stop-and-wait protocol is: 

[ Machine l_state, out_buff, CHAN, RET, in_buff, Machine2_state ] 


-►[0,d,E,E,e,0] 

h” 

[ 1 ,d,D,E,e,u] 

j.. 

[l,d,D,E,d,l] 

[l,d,D,A,d,0] 

l+A 


Figure 8: SCM, global reachability analysis, stop-and-wait. 

The format for a system state tuple for all cases of analysis is: 

[ Machine l_state, Machine2_state ] 

0 ] 

-D 

0 ] 

+D 

11 

-A 

0 ] 

+A 


Figure 9: SCM, system reachability analysis, stop-and-wait. 



\7 







The SCM model has desirable properties found in the CFSM model as well as 
overcoming some of the inherent disadvantages of the CFSM model. In the SCM model the 
behavior of the protocol can be clearly and quite adequately represented, maintaining an 
intuitive feel of the specification. The SCM model can ameliorate the combinatorial state 
explosion through the use of system state analysis, greatly reducing the generated states. 
Instead of implicit queues, shared variables are used for communications between 
processes. This allows communications between machines in non sequential manner, 
unlike a FIFO queue representation in the CFSM model. 

The final advantage is the nature of the SCM’s representation of a protocol gives it 
the feel of a programming language. Although more complex to program than a CFSM 
model, the actions associated with *Jie FSM and the predicate-action table lend themselves 
to automated implementation. 

D. LANGUAGE CONSIDERATIONS 

Which language should the CFSM and SCM models would be implemented in? 
Before all the available languages were researched, a list of desirable properties that the 
language must have (specific to the models), was developed. After a close inspection of the 
definition and nuances of the CFSM model, SCM model, and the reachability analysis 
generated, there were a number of language properties that were found desirable to this 
project. 

The language properties should support hardware and software design issues. The 
code must be portable from one architecture to another. The language should have a means 
to create different class instances from a base class. An intuitive means to provide 
meaningful output of the analysis and progi’amming error messages to the user enhances 
the program’s utility. Since the program must simulate network specifications there is an 
inherent need to be able to do multiprocessing or multitasking in the programming 
environment. The language of choice should enforce the rules of strong typing, that is not 


18 








allowing mixing of types and subtypes. The final property of the language should be its ease 
of use and understandibility. 

The language of choice should be portable between different machines. It cannot be 
assumed that the user has access to a mainframe computer or workstation. The language 
should be compilable on a machine as small as a personal computer. 

Implementation of the models should help the user to avoid and detect mistakes. The 
environment should prompt the user when a syntactical or semantic error is made. The error 
messages should be meaningful. Inherent to this requirement, the language should enforce 
strict definitions of atomic structures, such as data structures. 

Dynamic list creation /deletion are necessary in reachability graph construction. This 
allows flexible and ultimately limitless (hardware specific) analyses to be done. Linked list 
creation and traversal should make use of reusable programming units. The logic for 
creating new nodes should allow the program to ‘remember’ where the last node was built. 
This^should be done automatically, without user intervention after compile time. 

An important property, although subject to vaiying opinion, is ease of use. The project 
is developed in one language, but the human interface to the underlying code must be 
understandable and intuitive. Hand in hand with ease of use, is ease of maintainability. 
There should be enough on-line and off-line help to allow the user to navigate the the user 
interface. An understandable debugger was also a factor in the choice. 

Ada was chosen because it supports the above mentioned properties. It is a language 
that is portable between different architectures. It supports generic class creation and 
instantiation. Through the use of predetined input and output packages, the user is allowed 
to build a suitable interface environment. With the use of exception handling meaningful 
error messages can be created and employed. Ada also has the ability to multitask, 
simulating parallel processing. Finally, Ada is easy to use. The code can be read by a novice 
and understand what is meant to happen. 

The language of CyC++ was not chosen due to a few limitations. At the time of this 
writing it could not support multitasking needed to simulate concurrency or broadcast 


19 



networks. It was also difficult to do generic-like coding. The object orientation of the 
design lent itself very nicely to the structures used in the CFSM and SCM model as covered 
in [RUMB 91]. It became apparent that there was reused code that would have been more 
efficiendy implemented with generic data structures. Although it could have been done 
with the use of macro-like instructions, generic packages made the project more compact 
and efficient Generic package creation and instantiation was not supported by the current 
version of the C/C++ compiler. The C programming environment does not support 
exception handling; programming error detection messages were vague and could not be 
developed by the user. A good means of automatic implementation of error messages in the 
C++ environment was not available at the time of this publishing. Ada could do this 
through use of exception handling. 


20 




in. A PROGRAM FOR GENERATING A CFSM REACHABILITY 

ANALYSIS 


In this chapter the organization of the CFSM program will be describedThe mean^ for 
input, output, and reachability analysis will be highlighted. Excerpts of the underlying code 
will be accompanied by a brief explanation. The formal definition of the CFSM model 
found in Chapter 11 is the basis for constructing the program. 

A. PROGRAM STRUCTURE 

The structure of the CFSM program is based on functional units (objects) of the 
general CFSM model. The data structures of the basic objects must represent 
communication channels, machine states, transitions, and a means for capturing global 
tuple (state) values. In addition to constructing the fundai ntal data structures, there must 
be an intuitive input mechanism for the FSM’s and an understandable display of the 
analysis. 

Implementation details should be hidden from the user. Operations such as loading the 
CFSM into memory, performing a reachability analysis, constructing the global 
reachability graph, and traversing the graph during searches/output are independent of the 
specific protocol to be analyzed. 

The program consists of input related procedures, a reachability analysis, and output 
procedures. To help manage such a complex and large programming project, separate 
compilation units were used. The compilation units were physically grouped by file 
according to the function it performed as shown below: 

TABLE 3: CFSM compilation units. 


Compilation Unit 

Description 

File 

read_in_filc 

parse text input file 

input.a 

load_machine_aiTay 

builds machine adjacency 
lists from parsed file 

input.a 


21 















Compilation Unit 

Description 

FUe 

build_Gstate_graph 

builds global reachability 
analysis graph 

reachability.a 

clear_pointers 

clears values for another 
input file 

reachability.a 

search_for_tuple 

performs BFS search of 
graph 

search.a 

IsEqual 

compares global records 
for equality (similar to =) 

search.a 

output_Gstate_node 

format for node output 

output.a 

output_Gstate_transition 

format for transition output 

output a 

output_Gstates 

traverses graph and outputs 
nodes and transitions 

outputa 

output_machine_arrays 

format output of contents 
of adjacency lists 

output a 

create_output_file 

creates file for analysis out¬ 
put 

outputa 


This use of separate subprograms(compilation units) facilitated the development of the 


SCM program from existing CFSM code. 

The behavior at run time is shown in Figure 10 and associated files of the CFSM 
program are shown in Figure 11. 


Reachability 

Text File (FSM’s) Analysis 



Figure 10: CFSM run time behavior 


22 





















































main procedure 


Generic Packages I Stacks 



During the design phase of the program it became apparent that some software 
components and structures were used more than once. For instance, when doing a 
reachability analysis many types of stacks and queues were used. Although the underlying 
data types were different, the algorithm for each structure was exactly the same. To increase 
efficiency, generic packages were used. Generic units are defined as a reusable software 
module or a program unit template [GONZ 91]. 

The implementation of stacks and queues is accomplished using generics. For 
instance, within the program there is a need for a queue of characters representing the flow 
of information on the channels between two machines. To assist in the construction of the 
reachability graph there needs to be a queue of pointers to graph nodes (see Section C). 
Each type of queue has some common procedures and functions. Each needs procedures to 
clear the queue, enqueue, and dequeue. Each must also have functions that return the value 


23 













of the first item of the queue, determine if the queue is empty and determine if the contents 
of two queues are equal. If these common functions and procedures had to be rewritten with 
a different underlying data type, the number of compilation units as well as the object code 
would increase; thus the user would be saddled with more ‘waiting’ time. 

The protocol environment can be modified by using generic parameters. The generic 
package, queues, has two parameters to the object- the item type and the maximum size of 
the queue. This allows the user to define what type of items are contained in the 
channel(queue) and how big the channel(queue) can be. Two instantiations of queues in the 
program are: 

package queue_pack is new queues(character, MAX*>3); 

package Gpointer_queue_pack is new cjueues(Glink_type,MAX»>10); 

The queue jack package deHnes a queue of characters. A ceiling or bound can be placed 
on the amount of messages on a channel. If an unbounded channel is to be simulated the 
maximum allowable integer can be given. The pointer queue Gpointer_queue jack gives 
the user a means to determine the maximum size of a reachability graph. Although, in the 
general case, a large number is preferred to allow all tuples (states) to be generated in a 
protocol reachability graph. The generic package stacks was implemented in a similar 
fashion. 

B. INPUT 

An important step in designing the CFSM and SCM programs is developing a 
meaningful method of inputting the finite state machines. The graphical representation of 
a simple FSM conveys a behavior associated with a protocol specification. A means to 
transfer this graph into a data structure that can be used in the reachability analysis was 
developed. 

The FSM’s were input as a text file. This file is built by the user with a set of language 
rules similar to Backus-Naur Form (BNF). The input file is parsed one line at a time. Each 
line is read into a line buffer and tokens formed according to the rules defined below. From 


24 





the tokens, an internal data structure is generated to represent the set of finite state 
machines. The list of valid instructions for finite state machine input is: 


start 

machine <natural> 

state <natural> 

initial state <natural> <natural> 

trans <-1+> <aIbI...1 2 IAIB|...|Z> <natural> 

finish 

The tokens are cast into either enumerated types (instructions) or integers (integer 
variables). The integer variables have been formally defined within the main procedure in 
Appendix A. 

The meaning of the instructions are: 


start Serves as a beginning flag for the file, 

machine Defines the current machine, 

state Defines the current state. 

initial_state The intitial/start state for 

machines one and two. 

trans Transition type, transition 

message, and next state. 

finish This token serves as an ending flag for 

the file. 

Representation of a finite state machine using the above convention has some inherent 
constraints. Since an input token, such as the transition -D, cannot be directly caste into an 
enumeration token (no special characters at the beginning of a token), the (-,+) must be 
converted separately to (sndjev) tokens. The use of alphabetic characters to represent 
messages in a channel, limits messages to 52 distinct types (a..z,A..Z). The input file for 
stop_and_wait is: 


start 
machine 1 
state 0 
trans -D 1 
state 1 
trans +A 0 
machine 2 
state 0 
trans +D 1 
state 1 
trans -A 0 
initial_state 0 0 
finish ~ 


25 







The data structure representing the CFSM is then used to construct a reachability 
analysis graph. The two data structures that support directed graphs (or finite state 
machines) are adjacency lists and adjacency matrices. Since the use of adjacency matrices 
to construct directed graphs can lead to wasted hardware memory, adjacency lists (one 
dimensional array of linked lists) were implemented. 

The data structure to build the adjacency list and the constraints are: 


type machine_array_recordl_type; 

type Mlin)c_type ia access machine_array_record_type; 
type c£sm_transition_type is (snd, rev,unused); 
type executed_type is (yes,no); 
type machine_array_record_type is 
record 


transition 

message 

next_state 

executed 

Mlink 

end record; 


: cfsm_transition_type; 
: character; 

: natural; 

: executed_type; 

: Mlink_type 


type machine__array_type is array (positive rangeO) 
of Mlin)c_type; 

type system_array_type is array(1..2) 
of machine_array_eype; 


Some data structures shown above are peculiar to Ada. Access types are data types that 
provide an access (“pointer”) to an object of another type or subtype. It resei-ves storage 
locations during the execution of a program dynamically by use of a memory allocator. A 
record type is simply a collection of elements where each element is referred to by its name. 


26 




The anay of linked lists is defined as an unconstrained array; whereas, at compile time, the 
number of machines is set at two. To illustrate the finite state machine data structure the 
CFSM stopjind wait protocol is shown in Rgure 12. 

Machine 1 


w 

C/5 



Machine 2 


w 

cd 

C/3 



Rgure 12: Finite State Machine representation, stop and wait 
C. REACHABILITY ANALYSIS 

In order to determine if all states in a network arc reachable a graph is constructeds 
After the textual representation of the CFSM is input, the adjacency lists are constructed as 
described in the previous section. The initial states for each machine indicate the starting 


27 























position of each list. From the lists a directed graph is constructed. It is from this directed 
graph that deadlocks and unspecified receptions are sensed and the appropriate output 
message is displayed. 

The algorithm to construct the global reachability graph is: 


loop 

formachitul array index in l..rowsize loop 

if machinel {array Jndex).transition^snd or 
machinel(array_index)jrussage~top_qf.queue21 then 
make temp Gstate record 
search list for Gstate record 

f found then link current to found state 
else make new node and link into Gstate jgraph 
and push ptmter onto pointer stack 
else none Jound 
end loop 

for machine2 arrayJndex in l..rowsize loop 

if machine2 (array_index).transition=snd or 
machine2(array_index)jnessage=top_of.queuel2 then 
make temp Gstate record 
search list for Gstate record 

ffound then link current to found state 
else make new node and link into Gstate_graph 
and push pointer onto pointer stack 
else none Jound 
end loop 

if stack is empty then 

raise STACK EMPTY 
else 

pop last Gstate 

end loop 


The initial global state tuple (node) is created from the starting state of each machine’s 
adjacency list From the top node, tuples (global states) are added to the graph using the 
reachability algorithm. The algorithm shows the graph being constructed with stack based 
implementation, allowing a breadth first construct. The option is given to the user ro 
construct the graph depth first. A case statement is used to toggle between stack or queue 
procedures/functions (this is not shown in the algorithm above.) Figure 13 shows the 
internal representation of the global reachability graph for the stop and wait protocol 


28 







Figure 13: CFSM internal reachability graph, stop and wait 































Note that when a tuple is generated a data structure representing a transition and a node are 
separately added. The field new node was included in the transition structure to allow 
prope* traversal of the graph. The current version of the program allows for four transitions 
from each tuple. This can be expanded upward if needed. 

Exception handlers were used to maintain control in the reachability graph 
construction. Whenever a queue or stack is empty the control is handed to the exception 
handler to continue program execution. The exception handlers allow definition of specific 
error conditions to be sensed and appropriate action taken. 

During graph construction, global state tuples are identified that satisfy the deadlock 
and unspecified reception properties. If a global state node has only receiving transitions 
from it and both the queues are empty, a deadlock message is displayed to output. If the 
global state node has outgoing receive transitions and the head of the respective queue does 
not match the receive transition (assuming the queue(s) are not empty) then an unspecified 
reception message is displayed to output. When the construction of the graph is complete 
the adjacency lists arc checked for any unexecuted transitions. The contents of the lists are 
displayed after the output of the graph is done. Unexecuted transitions arc identified by the 
execution field, with a no entry. For an example see Figure 15 

Upon completion of the reachability graph construction, a pointer to the top global 
state node is passed to the output procedure. 

When constructing a reachability graph there are two factors that need to be 
considered- run time and the size of the graph generated. As noted earlier, a ceiling can be 
placed on the size of the graph by the user prior to compilation. Ideally, a specification can 
be input to the program and an analysis could run for as long as needed (perhaps days); 
however, most computer systems are limited by storage. The question of storage capacity 
is left to the user of the program. A determination must be made as to how large a graph to 
anticipate (worst case is the largest integer represented on the register) and how much 
storage space can the underlying system provide. 


30 





The design of the program addresses the issue of running time. The running time, or 
complexity, of the reachability analysis is dominated by the algorithm that governs the 
directed graph traversal. All traversals are done in both models (CFSM and SCM) in a 
recursive, depth first manner. The complexity, or big O notation, for traversals of a directed 
graph can easily be defined. Consider a reachability graph G-iVyE) consisting of a set V of 
vertices(nodes), and a set E of edges(transitions). Each edge correspond.' to a pair of 
distinct vertices in the directed graph. Tuc running time or complexity of such a graph 
traversal is proven by induction to be (9(IV1 + l£l). A rigorous proof of the complexity 
appears in [MANB 89]. 

D. OUTPUT 

The output procedure for the CFSM tool displays the reachability graph and 
associated messages to both a text file and the default output device. 'P'e output procedure 
has as a parameter a pointer to the top global state (node). From the top node the graph is 
traversed in a depth first manner and saved to an output medium. The contents of the 
adjacency list arc also displayed to output providing a means to cross check the CFSM 
construction and identify unexecuted transitions as shown ioxsiopj 2 nd_wait in Figure 14. 


31 







REPOMfilLITY ANALYSIS of : stop_and.Mit 

1 

C 

0 , E . E , 0 1 

-D 

[ 1 , D , E , 0 ] 

2 

C 

1 , D . E . 0 ] 

♦D 

C 1 , E . E , 1 ] 

3 

[ 

1 , E . E . 1 ] 

-A 

t 1 , E , A , 0 ] 

4 

C 

1 . E , A , 0 I 

♦A 

t 0 . E , E , 0 ] 


1 Hachine 1 Array Contents 1 

1 FroM 

1 To 1 

Transition 1 

Executed 1 

1 0 

1 1 1 

snd 0 1 

yes 1 

1 1 

1 0 1 

row A 1 

yes 1 


1 Hachine 2 Array Contents 1 

1 FroM 

1 To 1 

1 Transition 1 

Executed 1 

1 0 

1 1 1 

1 rev D 1 

yes 1 

1 1 

1 0 1 

1 snd A 1 

yes 1 


• The nodes generated by the analysis 
were done in a breadth first Manner 


Figure 14: CFSM, analysis output, stop_and_wait 

To illustrate the formatting of the model’s output an example is presented. Assume 
that a CFSM exists reflected by the following specification: 


Machine 1 



The input file is: 


Machine 2 

+X 



32 










start 
machine 1 
state 1 
trans -D 2 
state 2 
trans ♦fl 1 
machine 2 
state 1 
trans +0 2 
state 2 
trans -A 1 
initial.state 1 1 
finish 


The output file reflecting deadlock, unspecified receptions, and unexeci ted transitions 
is shown in Figure 15. 


REAOMIILITY MMLYSIS of : dMdlock.exanpla 


1 

2 

7 

3 

4 

5 

6 


C 1 . E . 

C 2 . X . 

C 2 , E , 
C 1 , E . 
C 2 , X , 
C 2 , E . 
C 2 , E , 


E , 1 ] 

-X 

t 2 . X , E , 1 ] 

2 


-B 

t 1 , E , B . 3 ] 

3 

E . 1 ] 

-B 

C 2 , X , B . 3 ] 

4 


♦X 

[ 2 , E , E , 2 ] 

7 

E . 2 ] 

— «« 

mwx llEfin.0a< Condition nrwiniiiiiiii 

B , 3 ] 

-X 

[ 2 , X , B , 3 ] 

4 

B , 3 1 

♦X 

C 2 , E . B . 1 ] 

5 

B , 1 ] 

-B 

t 2 , E , BB , 3 ] 

6 

BB , 3 ] 

«* 

•»*ee Unspecified Reception mmmm 


1 Hachine 1 Array Contents 1 

1 Free 

1 To 

Transition 1 

Executed 1 

1 1 

1 2 

snd X 1 

yes 1 

1 2 

1 1 

rev A 1 

no 1 


1 Machine 2 Array Contents 1 

i From 

1 To 

Transition 1 

Executed 1 

1 1 

1 3 

snd B 1 

yes 1 

1 1 

1 2 

rev X 1 

yes 1 

1 2 

1 1 

rev B 1 

no 1 

1 3 

1 1 

rev X 1 

yes 1 


« The nodes generated by the analysis 
were done in a depth first namer 


Figure 15; CFSM, analysis output, deadlock/unspecified reception/unexecuted transition 

example. 


33 





rv. AN AUTOMATED TOOL FOR SCM REACHABILITY 

ANALYSIS 


In this chapter, a program is introduced that automates the SCM piodel. It provides 
an intuitive environment to input a protocol specification and receive the analysis in an 
understandable format. Since the model only uses variables and finite state machines to 
describe a protocol’s behavior, it is considered an approximate model. There are certain 
details of protocol design, such as message and header format, that are abstract from the 
analysis. The succincmess of a protocol representation helps analyze the logic and structure 
without getting lost in a myriad of detail. 

The organization of this program is similar to that of the CFSM program. A means for 
input, output, global reachability analysis, and system reachability analysis are highlighted. 
Excerpts of the code are accompanied by a brief explanation of structure and 
application.The formal definition of the SCM model found in Chapter II is the basis for 
constructing the program. 


34 







The protocol specification and analysis of the stop andjvait data link protocol will 
be used throughout this chapter to demonstrate the interface of the program to the user. The 


specification for the sample protocol is shown in Figure 16. 

Machine I Machine 2 




Transition 

Enabling Predicate 

Action 

xmtjdata 

CHAN = £ A 

CHAN ;= outJ)uff 

rcvjjck 

RET = A 

RET .= £ 

CHAN . - £ 

rcvjkua 

CHAN l=E 

injjuff:^ CHAN 

xmtjxck 

true 

RET ;* A 
injbuff := e; 


Figure 16: SCM, specification for stop and wait. 

A. PROGRAM STRUCTURE 

The structure of the SCM program is similar to the CFSM implementation. There must 
be a means for input, output, and reachability analysis. The input is more complex because 
not only must the FSM’s must be entered, but also variable definitions and the associated 
predicate-action table as shown in Figure 16. The input can be viewed as hierarchical. The 
global and system reachability analysis are performed using different algorithms and are 


35 


























described in later sections. The code for producing output is identical to the CFSM program 
with some addition to allow the user to tailor variable output 

Text File (FSM’s) 



Figure 17: SCM run time behavior. 

The program, written in Ada, consists of packages, procedureSr^nd functions that 
make up the basic structure mentioned above. A package specifies a group of logically 
related entities, such as types, and objects of those types as defined in [GONZ 91] and 
[SKAN 88]. The procedures and function that were subject to change/updates were also 
treated as separate compilation units. To give a ‘feel’ for the different components of the 
program, the separate compilation units and the files that contain them are shown in Table 
4. 


TABLE 4: SCM compilation units. 


Compilation Unit 

Description 

File 

read_in_file 

parses text input hie 

input.a 

load_machine_array 

builds machine adjacency 
lists form parsed file 

input.a 

build_Gstate_graph 

builds global reachability 
analysis graph 

globai_reachability.a 


36 





























Compilation Unit 


Description 


File 


clear_pointers 

clears the values for 
another input file 

global_eachability.a 

search_for_Gtuple 

performs BFS search of 
global reachabililty graph 

global_search.a 

IsEqual 

compares global records 
and associated transitions 
for equality 

global_seaich.a 

build_S state_graph 

builds system reachability 
analysis graph 

system_reachability.a 

search_for_StupIe 

perfoms BFS search of 
graph 

system_search.a 

IsSysStateEqual 

compares system records 
and associated transitions 
for equality 

system_search.a 

output_Gstate_node 

format for node output 

global_output.a 

output_Gstate_transition 

format for transition output 

global_output.a 

output_Gstates 

traverses graph and outputs 
nodes and transitions 

global_output.a 

output_machine_arTays 

format output of contents 
of adjacency lists 

global_output.a 

output_S state_nocle 

format for node output 

system_output.a 

output_Sstate_transition 

format for transition output 

system_output.a 

output_S states 

traverses graph and outputs 
nodes and transitions 

system_output.a 

output_Gtuple 

format global record for 
output 

user_output.a 

variable_definitions 

user defined protocol vari¬ 
ables 

user_definitions.a 

Analyze_Predicates 

performs analysis of predi¬ 
cates and determines which 
transitions are enabled 

predicate_ac tion. a 


37 
























































Compiladon Unit 

Oescripdon 

File 

Acdon 

changes the global and 
local variables based on the 
transidon executed 

predicate.acdon.a 


The user has access to the last three files shown in Table 4. The variable definition package. 
Predicate_Anatysis function, and Action procedure contained in these files are modified by 
the user to reflect the specific protocol to be analyzed. Formats for each unit will be 
oudined in Sections B, C, and D. The other files and procedures will remain hidden from 
the user because they are Independent of any protocol to be analyzed. Figure 18 shows the 
files and generic units used at compilation dme. 



»nain procedure 





input.a 


predicate _action.a 


user_definitions.a 


Separate 

Compiladon 

Units 


globai_ 

outputa 


system_ 

outputa 



global^ 

searrh.a 


system_ 

search.a 


global_ 

reachability.a 


system. 

reachabillity.a 


Figure 18: SCM compilation units. 


38 
















































B. INPUT 


An intuitive and understandable means to input a specificadon is helpful in any 
protocol analysis program. A protocol specificadon is divided into shared and local 
variable deflnidons, predicate-acdon table representadon, and finite state machine storage 
structure. 

The different parts to each specificadon to be analyzed must be input in a certain order. 
The definition package. Analyze_Predicate funcdon, and Action procedure must be 
constructed and compiled before the program is executed. When the program is executed 
the user then inputs the FSM text file and obtains the reachability analysis. Since the 
compiladon of the program depends on the variables in the definition package, this package 
is written and compiled first. This is a technique to verify variable definidon correctness in 
the Ada environment. Once the definitions package is compiled the Analyze Predicate 
funcdon and Action procedure can then be compiled This step-wise refinement facilitates 
error free specificadon representadon. 

At any point in execudon of the program the status of all variables is kept in the global 

t 

state record. Each node in the global reachability graph has a copy of this record. Within 
the main procedure a global state record is declared as 


type G3tate_record_type is 
record 

machinel_3tate : machinel_3tate_type; 
inachine2_3tate : raachine2_3tate_type; 
global_variable3 : global_variable_type; 
end record; 

Having the machine and global types defined in a separate package ensures that only select 
pieces of code can be modified by the user. The definitions package contains the 
machine 1 jstatejype, machine! state type, and global_variable_type declaradons; thus 
this package must be compiled first. 

The order that each input category is covered in this chapter reflects order that the 
protocol specification should be constructed and compiled. 


39 





1. Protocol Variable Deflnitions 


The user defines the protocol environment variables in the defirUtions package. 

Variables can either be local to a specific machine or global to the system. The global 

variables are considered shared and allow communication between the machines in the 

system. The local variables are only visible to the machine that they are defined for. A 

discrete variable can be one of the many Ada defined types such as: 

integer natural character 

array digit boolean 

record access 

These types variables, or their subtypes, can be used to define protocol 
environment 

A template for the definitions package is illustrated in Figure 19. The shaded 
areas of the figure are where the variables of the protocol are inserted. All other code should 
remain unchanged. Additional type declarations should be placed before the machine type 


40 






declarations. The state number of each machine is initialized to one even though this 

maybe different based on the FSM text file is input (the initial state is explicitly given.) 

^ FSM transitioa labels 

package definitions is 
type scm_transition_type is ( 



) ; 


.{protocol dependent types 


type machinel_state_type is 
record 

state number : natural 


end record; 

type machine2_state_type is 
record 

state number : natural 


1 ; 


lachine 1 local variables 



end record; 


type global_variable_type is 
record — 


end record; 
end definitions; 


lachine 2 local variables 


global (shared) variables 


Figure 19: SCM, definitions package template. 

The variable declarations for the stop_and_wait protocol arershown in Figure 


20 . 


package definitions is 

type 3cm_transition_type is 


type buf£er_typa is (d,«,a); 

type machinel_3tate_type is 
record 

3tate_number 

out_bu££ 

end record; 

type machine2_3tate_type is 
record 

3tate_number 

in_bu££ 

end record; 


(snd_data, ccv_data, 
and ack, rev ack); 


: natural :=• 1; 

: buf£er_typ« := d; 


: natural :=• 1; 

: bu££ar_type := •; 


41 






type global_variable_type is 
record 

CHAN : bu£fer_typ« K; 

ACT : bu£fer_typ« :« ■; 

end record; 
end definitions; 

Rgure 20: SCM, definitions package, stop_and_wait. 

The transitions are represented as xmt_data, xmt ack, rcv_data, and rcvjjck 
instead of -D, -/4, +D, and +A. Machine one has a local variable that serves as an out-bound 
buffer ifiutjyuff). It is initialized with data present in the buffer, represented by 'd\ The 
only machine that sees the variable contents is Machine one. Machine two is similar in that 
it has a buffer for receiving {injjuff) data from the channel. The global variables are the 
shared variables channel (CHAN) and a return link (RET). Both variables are initialized 
empty and can be accessed by each machine. The values that CHAN, RET, in buff, and 
outjbiff can have are defined as a bufferjype. The buffer type variables can have the 
values^ (empty), d (data), or a (acknowledgement). The stop_and_wait protocol example 
shows how easily variables can be represented. All the text in bold lettering are user defined 
variables and types. 

2. Predicate-Action Table Representation 

The predicate-action table serves as the engine to the analysis. The enabling 
predicate defines the logic that must hold true for the transition to be taken (refer to Table 
1). Local and global variables must meet these conditions. A number of transitions could 
be enabled, but, for a transition to be executed the state of the machine must be considered. 
The action column of the predicate-action table identifies the variable changes that must 
take place when the transition is executed. The program captures the essence of the 
predicate-action table by breaking the components of the table into subprograms. A 
subprogram in the Ada environment is a function, procedure, or package. Since the user 
must have access to a number of the subprograms they are represented as separate 
compilation units. 


42 





The first subprogram is the Analyze PrecUcate function. A function is a 
subprogram that returns a value to the location in which it was invoked. It can only have 
input parameters.The function is handed the machine local variables and the system global 
variables as input parameters. Since more than one transition could be enabled, a stack is 
used to place all transitions that are enabled. A transition is pushed onto the stack if it is 
enabled and the function returns the entire transition stack. From the transition stack 
values and a pointer to the current state in machine adjacency matrix, a determination is 
made on which transition can actually be executed. There are a number of 
Analyze_Predicate functions, one for each machine. The template for the 
Analyze_Pre(Ucate function is shown in Figure 21. 

separate (main) 

function Analyze_Predicate3_Machinel(local : machinel_3tate_type; 

GLOBAL: global_variable_type) 
return tran3ition_3tack_package.stack is 

begin 


MakeEmpty(tr an3ition_3tack); 
if ( 


_ ) then 

Push(tran3ition_stack, 
end if; ~ 

return tran3ition_3tack; 
end Analyze_Predicate3_Machinel; 



enabling condition 

) ; 

enabled transition 


Figure 21: SCM, Analyze Predicate function template. 

Once a transition is executed, changes must be made to some or all the variables. 
A procedure using a case statement was the simplest way to make the changes to the global 
state record. The Action procedure has three parameters: the transition that is executed and 
the current global state record are in parameters, and the updated global state record is the 
out parameter. The transition is passed into the procedure and a case statement determines 
which series of instructions are to be executed. These instructions make the appropriate 
changes to the prottxol environment variables. The out system state is handed out of the 


43 




procedure containing the changed protocol variables. The template for the Action 


procedure is shown in Figure 22. 


separate (main) 
procedure Action( 


begin 


in_3ystem_3tate 

in_tran3ition 

out_3y3tem_3tate 


case (in_tran3ition) is 
when ( 


in Gstate_record_type; 
in 3cm_transition_type; 
out G3tate_record_type) is 


enabled transition 


when 

end case; 
end Action; 



action taken 


others -> 

put_line("Error in the Action procedure"); 


Figure 22: SCM, Action procedure template 

The three subprograms that reflect the logic of the predicate-action table are 
grouped together in one file (predicate_action.a). The file for the stop and wait protocol 
is: 


separate (main) 

function Analyze_Predicates_Machinel(local ; machinel_state_type; 

GLOBAL: global_variable_type) 
return transition_3tack_jpacJcage.stac)c is 

begin 

MalceEmpty(transition stack); 

if ( (local.out__bu£f 7* e) and ((HOBAL.CHAN » K)) then 
Push (tran3ition_3tack, aait_data) ; 
end if; 

if (GLOBAL.RET a A) then 

Push (transition_stack, rc 7 __ack) ; 
end if; ” 

return transition_stack; 
end Analyze_Predicates_Machinel; 

separate (main) 

function Analyze_Predicates_Machine2(local : machine2_state_type; 

GLOBAL: global_variable_type) 
return transition_stack_package.stack is 

begin 

MakeEmpty(transition_stack); 

if ( (GLOBAL.CHAN /> E) and (local.inJOuff » e) ) then 
Push(transition_3tack, rcy_data) ; 
end if; 

Push (tran3ition_3tack,3nBt_ack) ; 
return tran3ition_3tack; 
end Analyze_Predicate3_Machine2,separate (main) 

separate (main) 


44 





procedure Action(in 3y3tein_3tate : in G3tate_record_type; 

Tn_tran3ition : in 3cm_tran3ition_type; 

out_3y3tem_3tate : out G3tate_record_type) ia 

begin 

case (in_tran3ition) ia 
when (xmt data) »> 

out~system_state.GLOBAL_VARIABLES.CHAN :» 
in_3yatam_atate .inachinel_3tata . outjbuff ; 
when (rcT ack) •> 

out^ayatem atate.6L0BAL_VARIABLBS.RET :»£; 
out_ayateBratata.GLOBAli_VARIABLES.C:HAN :aB; 
out~ayatam_atate.marhina2_atata.in_buf£ 
when (aint_ack) => 

out_ayatam_atata.GLOBAL_VARXABLBS.RET A; 
when (rcv^data) »> 

out^ayatem atata.marhina2_atata.in_buff := 
in_ayatam_at ate. GLOBAL_VARIABLES. CH2^ ; 
when othera •> 

put_line(“Error in the Action procedure"); 

end caae; 
end Action; 


Figiire 23; SCM, analyze_pre(licate.a, stop_and_wait. 

The bold text in the code indicates what the user provided as input to define the 
specification shown in the stop jind_wait predicate-action table (See Figure 16.) 

3. Finite State Machines 

The FSM’s are input as a text file during program execution. This file is built by 
the user with a set of language rules similar to the Backus-Naur Form (BNF) shown in 
Chapter in. The only change to the fonnat of the input is the transition (trans) lines. In the 
GFSM model only send and receive transitions were allowed; whereas in the SCM model 
a transition can have any label that follows the enumeration rules. The lines of the text file 
are buffered and parsed. From the parsed line groups of strings called tokens are 
manipulated as described in Chapter HI. The list of valid instructions for finite state 
machine input is: 


3tart 

machine 

3tate 

initial_^3tate 
trana 
finiah 


<natural> 

<natural> 

<natural> <natural> 

<enuraeration litetal> <natural> 


45 




The tokens are cast into either enumerated types (instructions) or integers (integer 
variables). The integer variables have been formally defined within the main procedure in 
Appendix B. The meaning of the instructions are found in Figure 24. * 


start 

machine 

state 

initial_atace 

trans 

finish 


Serves as a beginning flag for the file. 
Defines the current machine. 

Defines the current state. 

The intitial/start state for 
machines one and two. 

Transition type and next state. 

This token serves as an ending flag for 
the file. 


Figure 24: Input File definitions. 


Representation of a finite state machine using the above convention has some 

inherent constraints. Rules for constructing enumeration literals must be followed. For 

instance, the list of values in an enumeration literal can only be character literals and cannot 

contain a digit in the first position. The input file for stop andjivait is shown in Figure 25: 

start 
machine 1 
state 0 

trans xmt_data 1 
state 1 

trans rcv_ack 0 
machine 2 
state 0 

trans rcv_data 1 
state 1 

trans xmt_ack 0 
initial_state 0 0 
finish 

Figure 25: SCM, Input File, stop and wait. 

A data structure that contributes to the reachability analysis is the FSM adjacency 
list. The adjacency list was chosen as the structure to represent the directed graph of the 
finite state machines. 

The actual data structure to build the adjacency list and the defined constraints 


are: 


type machine_array_record_type; 

type Mlink__type is access machine_array_record_type; 
type executed_type is (yes,no); 
type machine_array_record_type is 
record 

transition : 3cm_transition_type; 


46 




next_state : natural; 

executed : executed_type; 

Mlinlc : Mlinlc_type 

end record; 

type inachine_array_type is array (positive rangeo) 
of Mlink_type; 

type systein_array_type is array(1..2) 
of machine array_type; 

The internal representation of the FSM adjacency lists are the same as Figtue 12 
except the SCM adjacency lists do not have a message field 

C. REACHABILITY ANALYSIS 

The process of generating the set of all states reachable from the initial state is called 
state reachability analysis. During the reachability analysis a check for deadlock, 
unspecified reception, and unexecuted transitions are done. The reachability analysis of a 
specific protocol is done in two phases. 

The first is to generate a global state reachability graph. This analysis cons&ucts a 
graph, whose nodes are the reachable global states, and whose arcs indicate the transitions 
leading from each global state to another. The global state (node) contains the state of each 
machine and the values of all the variables. 

The second phase of the analysis is to generate an separate system state reachability 
graph from the global state reachability graph. The system reachability graph contains 
nodes with just the state information of each machine. The rules for the generation of new 
states will be discussed in Section 2. 

1. Global State Analysis 

The process of generating the set of all global states reachable from the initial 
global state is called global state analysis. This analysis produces a graph, whose nodes are 
the reachable global states, and whose arcs indicate the transitions leading from each global 
state to another. The global state of a system consists of the system state tuple, plus the 
values of all variables, both local and shared. The algorithm as it appears in [LUND 91 a] is: 


47 





(1) Set each machine to its initial state, and ail variables to their initial 
values. The initial set of reachable global states consists of the initial system 
state and the value of all variables; the initial graph is a single node 
representing this state. 

(2) From the current global state vector and variable values, determine 
which transitions are enabled. For each of these transitions, determine the 
global state which results ^m its execution. If this state (with the same 
enabled transitions) has already been generated, then draw an arc from the 
current state to it, labeling the arc with the transition name. Otherwise, add 
the new global state to the graph, draw an arc from the current state to it, and 
label the arc with the name of the transition. 

(3) For each new state generated in step 2, repeat step 2. Continue until 
step 2 has been repeated for each global state thus generated, and no more 
new states are generated. 


The algorithm above was modified to make use of the existing data structures 
introduced in the CFSM program. A psuedo-code algorithm to construct the global 
reachability graph is: 


create topjjstate pointer and initial node in Gstate graph 
main loop~ 

for machine index in I. .number jjfjnachines loop 

tran^tionjtackAnalyzej>redicate(machineJndex.current_Gstate) 
while transition_stack is not empty loop 

while current row of machine(machine Jndex) is not null loop 
if currentjGstate.transition = top of transition stack then 

perform Action procedure on current Gstate and place 
results in a temp Gstate 
search Gstate graph for temp Gstate 
if temp Gstate found then 

Insert temp Gstate in Gstate_graph 

Enqueue pointer to location in Gstate jwinter queue 

else 

link current Gstate to found Gstate 
set new node flag to false 

else 

traverse current row of machine(machine Jndex) 
end loop —machine row traversal loop 
Pop a transition from the transition stack 
end loop -transition loop 
if the Gstate jwinter jqueue is not empty then 
Dequeue a pointer 

go to the appropriate row of maclunei machine Jndex) 

else 

exit loop 

end loop -machine loop 
exception 

when Gstate jwinter queue is empty then 
exit main loop~ 


48 




when Gstcue j>oinur_queuie is full then 
print error meJsage 
exit main loop 

end mainjoop 


The data structures that are used in the program are defined in the specification 

of the mean procedure and the definitions package. The machine states and variables along 

with the global variables are defined in the definitions package. The remaining data 

structures which are hidden from the user are:shown in Figure 26 

—data structures for the global state tuple(node) 
type global_state_type; 

type Glink_type is access global_state_type; 

—transition structure 
type Gstate_transition_type is 
record 

Gtransition : scm_tran3ition_type; 
new_node : boolean true; 

Glink : Glink_type; 

executed : boolean :» false; 

end record; 


—global tuple structure 
type Gstate_record_type is 
record " 

machinel_state : machinel_state_type; 

machine2_state : raachine2_state_type; 

global_variable3 : global_variable_type; 

end record; 


—Global state node, contains transition, state, and link information 
—needed for building the global state graph 
type global_3tate_type is 
record 


node_number 

Gtuple 

linkl 

link2 

link3 

link4 

end record; 


natural :• 0; 

G3tate_record_type; 

G3tate_transition_type; 

G3tate_tran3ition_type; 

Gstate_tran3ition_type; 

G3tate_transition_type; 


Figure 26: SCM, global definitions. 

The data structure of the global node {global_state_type)enczpsul3itcs the 
information contained in the global state record. The global transition record has the type 
of transition and information about the node it is pointing to. If the node it is pointing to is 
a newly created node the new field is set to false, otherwise it maintains its initialized value 
of true. It also has a visited field, used during the construction of the system state 


49 





reachability graph. The internal representation of the graph generated by the algorithm for 
stop_and_wait protocol highlights all the data strucnue used (see Figure 27). 


50 






Figure 27: SCM internal global reachability graph, stop_and wait. 


51 




































2. System State Analysis 


System state analysis is similar to global state analysis. The number of states 
generated by the system state analysis is less than or equal to the number of states in the 
CFSM model or the global analysis of the SCM model. Only the states of the machines and 
the transitions from those states are considered when generating a new state. The formal 
steps in constructing a system state graph as it appears in [LUND 91a] is: 


(1) Set each machine to its initial state, and all variables to their initial 
values. The initial set of reach^le system stales consists of only the initial 
system state; the initial graph is a single node representing this state. 

(2) From the current system state vector and variable values, determine 
which transitions are enabled. For each of these transitions, determine the 
system state which results from its execution. If this state (with the same 
enabled transitions) has already been generated, then draw an arc from the 
current state to it, labeling the arc with the transition name. Otherwise, add 
the new system state to the graph, draw an arc from the current state to it, and 
label the arc with the name of the transition. 

(3) For each new state generated in step 2, repeat step 2. Continue until 
step 2 has been repeated for each system state thus generated, and no more 
new states are generated. 

The portion of the program that builds the system state graph makes use of the 
information already available in the global state graph. In the current version of the 
program the global reachability graph is constructed followed by the system reachability 
graph. Future versions would allow the user to select which analysis to perform but 
currently both are constructed and output The pointer to the initial global state is provided 
as an input parameter to the build_Sstate_graph procedure. The global state graph is 
traversed in a breadth first manner, as the nodes are visited the system state graph is 
constructed. If the system state graph were being constructed independently of the global 
state graph the algorithm would be very similar to the one in the previous section. Since the 
system state graph is being constructed based on only the global reachability graph the 
machine matrices are not used. The psuedo-code algorithm for this approach is: 


52 







create topJSstate pointer and build initialJSstate node; 
main toop~ 

while( current GstateJink not null and not visited) loop 
visit a (Jstatejgraph node using BFS traversal 
mark the link taken as visited 
create a temp_Sstate with values of currentJGstate 
search Sstatejraph for tempJSstate 
^temp Sstate found then 

Insert temp_Sstate in Sstate jgraph 
else 

link current Sstate to found Sstate 
set new_no3e flag to false 

end loop 
end main loop 


The data structures for the system state graph construction, except for the 
transition labels, are completely hidden from the user. The system related data structures as 
they appear in the main procedure are shown in Figure 28. 


type ay3tem_atate_type; 

type Syalink_type ia acceaa ayatem_3tate_type; 

—tranaition atructure for ayatem atate 
type Setate_tran3ition_type ia 
record 

Stranaition 
new_node 
SyaTink 

end record; 

type S3tate_record_type ia 
record 

machinel_3tate 
machine2_state 

end record; 


: 3cm_tran3ition_type; 
: booTean :« true; 

: Syslink_type; 


: natural :» 0; 
: natural :« 0; 


—ayatem atate atructure 
type 3y3tem_3tate_type ia 
record 

node_number 

Stuple 

linkl 

link2 

link3 

link4 

end record; 


: natural := 0; 

: S3tate_record_type; 

: S3tate_tran3ition_type; 
: S3tate_tran3ition_type; 
: S3tate__tr’'’oition_type; 
: S3tate_tran3ition_type; 


Figure 28: SCM, system definitions. 


To follow through with the stop_and_wait analysis example, an internal 
representation of the system state graph is shown in Figure 29. Although this example does 
give a graphical picture of how the data structures are used it does not show the advantages 


53 




of a system state analysis over global state analysis. Examples covered in Chapter V 
illustrate how much smaller system state graphs can be when compared to the global 
analysis graphs. 


54 








Figure 29: SCM internal system reachability graph, stop and wait. 


55 



























D. OUTPUT 


Output of the analysis is provided to a text file and to a default device(workstation 
display). Figure 32 shows a captured image of default output to a workstation screen for 
stop and wait. There are features available to allow the user to step through the output one 
screen at a time. Output messages are provided to the user when a deadlock, unexecuted 
transition, or an unspecified reception occur. A message is also displayed when the length 
of the graph exceeds the bounds defined by the user (capacity of the channel is exceeded.) 
The contents of the machine adjacency lists are also output. 

The user may format output for the global state graph. This is done through the file 
user_ouput.a. The procedure, output_Gtuple, contained in the file allows the user to format 
the variables for default output.The template for output procedures are found in Figure 30. 


separate (main) 

procedure output_Gtuple(tuple : in out G3tate_record_type) is 
begin 

put('* [" & integer'image (tuple .machinel_state.state_nuinber) & " , ") ; 



user defined format of variables using text_IO 


puti” ," 4 integer'image(tuple.machine2_3tate.state_number) & " ] "); 
end output_Gtuple; 


separate (main) 

procedure output_Gtuple_to_file(tuple : in out G3tate_record_type) is 
begin 


put(reach," (" & integer'image(tuple.machinel_3tate.3tate_number)); 



user defined format of variables using text_IO 


put(reach," & integer'image(tuple.machineZ_state.state_number) & 

" ] ") ; 

end output_Gtuple_to_file; 


Figure 30; SCM, output Gtuple prtxedure template. 


An example of how a user could format output is given for the stop_and_wait protocol 
is given in Figure 31 
separate (main) 

procedure output_Gtuple(tuple : in out G3tate_record_type) is 
begin 

put(" [" 4 integer'image(tuple.machinel_state.3tate_number) 

4 “ , ") ; 

put(tuple.machinel_state.out_buff, set »> lower_case); 


56 






putC* , '); 

put(tupla.GLOBAL VARIABLES.CBAM, set »> upper_ca8e); 
putC" ,*); 

put (tuple. GLOBAL^VARIABLBS.RXT, set »> upper_ca8e) ; 
put(’* , *); "■ 

put (tuple.atecblne2_state.in_bu££, set •> lower_case); 

put(” 4 integerHjnage (tuple-machine2_3tate.State number) 

4 " ] 

end output_Gtuple; 
separate (main) 

procedure output_Gtuple_to_file(tuple : in out G3tate_record_type) is 
begin 


put(reach," (" 4 

integer'image(tuple.machinel_3tate.3tate_number) 4 ” , "); 

put (reach, tuple .machlnel_state.out_bu££, set *> loi«er_case) ; 
put(reach," ,*); 

put (reach, tuple.GLOBAL_VARZABLBS.CHAM, set «> upper_case) ; 
put(reach," , •); 

put(reach,tuple.GLOBAL_VARIABLKS.RET, set a> upper_case); 
put(reach," , *); 

put(reach,tuple.aachlne2_state.ln_bu££, set 3 b> lower_case); 
put(reach," , " 4 

integer'image(tuple.machine2_3tate,3tate_number) 4 " ] ") ; 
end output_Gtuple_to_file; 

Figure 31: S(3M, output format, stop_and_wait. 

a 

Consistent with previous examples the boldface code is that which the user 
provides. The user does not provide any parameters for system state output. The output 
shown in Figure 32 was formatted according to the procedures u^ed above. 


57 


REfOttBILITY MWLYSIS of : stop.and.Mit 
Global SUte Gim 


0 tO,d,E,E,a,0] xnt.data 

1 [l,d,D,E,8,0] rcw.data 

2 [l,d,D,E.d,l] xnt_adc 

3 [l,d,D^A,d,0] rcv.ack 


1 

2 

3 

0 


Systaa State GI»PH 


0 

C 0 

. 0 ] 

xnt.data 

[1,01 

1 

1 

C 1 

. 0 ] 

rcv.data 

[1,11 

2 

2 

1 1 

, 1 ] 

xnt.ack 

t 1 , 0 1 

3 

3 

(1 

. 0 ] 

rcv.ack 

[0,0] 

0 


Machine 1 Array Contents 


I froa I To I Transition I Executed I 


I 0 I 1 I xnt.data I yes I 

I 1 1 0 I rcv.ack I yes I 


I Machine 2 Array Contents I 


I Fron I To I Transition I Executed I 


I 1 I rcv.data I yes I 

I 0 I xnt.ack I yes I 


Figure 32; SCM, analysis output, stop and wait. 


58 















V. AN AUTOMATED ANALYSIS OF SELECTED DATA LINK 

PROTOCOLS 


In this section the programs that were developed in the last two chapters will be 
demonstrated. Some well known data link protocols will be analyzed using the CFSM and 
SCM programs. The OSM program will be used to analyze the alternating bit and the 
sliding window protocols. The SCM program will be used to analyze go_back_n and 
selective repeat protocols. In each analysis the specification will be described; the program 
input and results are in the Appendices of this publication. 

A. CFSM MODEL 

The examples used as input show the advantages of the CFSM program. The 
alternating bit protocol analysis was chosen as a simple class of protocols. The sliding 
window with a window size of three shows how a graphically complex protocol can be 
analyzed quite easily. 

1. Alternating Bit Protocol 

The specification of the alternating bit protocol will be used as the first example 
for the CFSM program. The protocol consists of two machines. Machine one serves as a 
sender and Machine two as the receiver. The sender sends a message(-X) to the receiver. 
The receiver then accepts the message (+X) and sends an acknowledgment (-A). The 
acknowledgment at the machine level is done with the toggling of a bit, wherein the name 


alternating bit is derived. The sender is clear to send another message when the 
acknowledgment is received. 


Machine I Machine 2 



Figure 33: CFSM specification. Alternating Bit. 

The input file for the specification is 

start 
Machine 1 
state 1 
trans -X 2 
state 2 
trans ♦fi 3 
state 3 
trans -Y 4 
state 4 
trans *8 I 
machine 2 
state 1 
trans *X 2 
state 2 
trans -A 3 
state 3 
trans ♦Y 4 
state 4 
trans -B 1 
initial.state 1 1 
finish 


The analysis of the alternating bit specification is; 


60 





REACHABILITY ANALYSIS of 


output.alt.bit 



1 

[ 1 , E , E , 1 ] 

-X 

I 2 , X , E , 1 ] 

2 


2 

C 2 . X , E , 1 ] 

♦X 

[ 2 , E , E , 2 I 

3 


3 

C 2 , E , E , 2 ] 

-A 

[ 2 , E , A , 3 ] 

4 


4 

[ 2 , E , A , 3 ] 

♦A 

I 3 , E , E , 3 ] 

5 


5 

C 3 , E , E , 3 I 

-Y 

I 4 , Y , E , 3 ] 

6 


6 

C 4 , Y , E , 3 1 

♦Y 

I 4 , E , E , 4 ] 

7 

% 

7 

C 4 . E , E , 4 I 

-B 

C 4 , E , B , 1 I 

8 


8 

C 4 , E . B , 1 ] 

♦B 

I 1 , E , E , 1 I 

1 


1 Hachine 1 Array Contents 1 

1 Froa 

1 To 

Transition 1 

Executed 1 

1 1 

1 2 

snd X 1 

yes 1 

1 2 

1 3 

rev A 1 

yes 1 

1 3 

1 4 

snd Y 1 

yes 1 

1 4 

1 1 

row B 1 

yes t 


1 Machine 2 Array Contents 1 

1 Froa 

1 To 

Transition 1 

ixecuted 1 

1 1 

1 2 

rev X 1 

yes 1 

1 2 

1 3 

snd A 1 

yes 1 

1 3 

1 4 

rev Y 1 

yes 1 

1 4 

1 1 

snd B 1 

yes 1 


« The nodes generated bg the analysis 
were done in a breadth first i»anner 


2. A More Complex Example: The Sliding Window Protocol. 

The analysis of a sliding window protocol is a more complex example. To 
represent the protocol as a set of graphical finite state machines can be quite tedious. The 
essence of the protocol must be captured with the use of transitions, oftentimes this can lead 
to an intricate diagram as in this example. 

The sliding window protocol can also be represented as a two machine CFSM. 
As in the previous example. Machine one is the sender and Machine two is the receiver. At 
any instant of time the sender maintains a list of consecutive sequence numbers 
corresponding to frames it is permitted to send[TANE 81] These frames are said i- fall 


61 











within the sending window. The receiver also maintains a receiving window corresponding 
to frames it is permitted to accept The sending window and the receiving window need not 
have the same lower and upper limits, or even have the same size. 

A window size of three is used in the specification given in Figure 34. The 
messages or packets are shown as transitions labeled X, Y, and Z and the acknowledgments 
are A, B, and C. 

Machine I Machine 2 



Figure 34: CFSM specification, sliding window (w=3). 


62 









The text file of the specification is: 


start 
Mchina 1 
state 1 
trsns -X 2 
state 2 
trans +8 7 
trsns -Y 3 
state 3 
trim *8 9 
trsns *C 4 
state 4 
trsns -Z 5 
state 5 
trsns -X 6 
trans ^ 1 
state 6 
trsns *9 2 
trsns *8 7 
state 7 
trsns -Y 8 
state 8 
trsns -2 9 
state 9 
trsns *C S 
trsns *9 1 


Mchlns 2 
state 1 
trm *X 2 
state 2 
trans ‘Y 3 
state 3 
trsns -C 4 
state 4 
trans <2 5 
state S 
trans ‘X 6 
state 6 
trans -I 7 
stats 7 
trans *Y 8 
state 8 
trans *Z 9 
state 9 
trsns -9 1 
inltlal.state 1 1 
finish 


The analysis of the specification as contained in the output text file 

WOMILITY rwLnts or : auouc.siidms 



C 1 

a E a C a 

1 ) 


C 2 

X . c . 11 

2 

2 

C 2 

a X a C a 

1 } 

•Y 

( 3 

wr, E . 1 ] 

3 





«K 

C 2 

E . E , 2 ] 

4 

S 

( 3 

a XY a E 

a 1 ) 

«X 

I 3 

t , E . 2 1 

S 


C 2 

a E a E a 

2 ) 

•Y 

C 3 

Y , E . 2 1 

5 

s 

C 3 

a t a E a 

2 1 

*V 

1 3 

E . E . 3 ) 

$ 

s 

C 3 

a E a € a 

3 ] 

< 

( 3 

€.C.4] 

7 

7 

C 3 

a E a C a 

4 ) 

< 

( 4 

E . E , 4 1 

a 

i 

C 4 

a E a E a 

4 1 


C S 

2 . E , 4 ) 

9 

9 

C 9 

a 2 a E a 

4 ) 

-X 

( E 

2X , E , 4 1 

10 





*Z 

C 9 

E . E , » 1 

u 

10 

C 6 

a a a E 

a 4 ) 

*z 

( S 

X . E . 9 ) 

12 

u 

C 9 

a E a E a 

S ) 

-X 

I S 

X , E . S ] 

12 

u 

c c 

a X a E a 

9 ) 

«x 

1 9 

E . E . C 1 

13 

u 

c« 

a E a E a 

S 3 

-• 

( « 

E . 1 . r 1 

14 

u 

C € 

a E a 1 a 

7 1 

<1 

1 7 

E , E , r I 

15 

19 

C 7 

a E a E a 

7 3 

-Y 

I • 

T , E , 2 ) 

15 

IS 

( 9 

a T a £ a 

7 I 

•Z 

C 9 

W , E . 7 1 

17 





♦Y 

1 9 

E . E . • I 

IS 

17 

C 9 

a Y2 a E 

a 7 1 

♦Y 

C 9 

2 . E , 1 ] 

19 

IS 

( S 

a E a e a 

9 3 


( 9 

2 , E , i 1 

19 

U 

C 9 

a 2 . E a 

9 3 

♦2 

( 9 

E . E . S 1 

20 

20 

C 9 

a £ a E a 

9 3 


( 9 

E , a . t I 

21 

21 

C 9 

a E a 0 a 

1 3 


I i 

E . E . t I 

1 


1 NKhlm X Arra^ Cont«nt« 1 

1 

froi 

1 

To 

Transition 1 

Exacutad 



1 

1 

2 

wtd 

X 1 




2 

1 

7 

rev 

1 1 

no 



2 

1 

3 

3nd 

r 1 

yw 



3 

1 

8 

rev 

> 1 

no 



3 

1 

4 

rev 

C 1 




4 

1 

5 

snd 

Z 1 




5 

1 

S 

snd 

X 1 




S 

1 

1 

rev 

8 i 

no 



S 

1 

2 

rev 

8 t 

no 



s 

1 

7 

rev 

1 1 




7 

1 

a 

»«d 

Y 1 




8 

1 

9 

«id 

2 1 

\iaa 



8 

1 

S 

rev 

C 1 

no 



9 

I 

1 

rev 

8 1 

y" 



1 Xachina 2 (O^a^ Contanta 1 

1 Pnai 


To 

1 Trvisitlan 

Exicutad 1 

1 1 


2 

1 rev 

X 

yat 1 

1 2 


3 

1 rev 

Y 

YSS’ 1 

1 3 


4 

1 «id 

C 

■yaa 1 

1 4 


5 

1 rev 

2 

yas 1 

1 5 


6 

1 rev 

X 

yas 1 

1 6 


7 

1 snd 

I 

1 

1 7 


8 

1 rev 

Y 

yaa l 

1 8 


9 

1 rev 

Z 

yaa 1 

1 9 


1 

1 snd 

8 

yat 1 


63 













The unexecuted transitions account for error control. Error control refers to 
mechanisms to detect and/or correct errors that occur in the transmission of information. So 
the unexecuted transitions identiEed in Machine 2’s array are transitions that would have 
been executed if a loss of a message had occurred. Error and time-out transitions are not 
shown in the CFSM. 

B. SCM MODEL 

The examples used as input validate the use of the SCM program as a tool to verify 
protocols. The goJ)ack_n protocol was analyzed first due to the availability of prior 
modelling done using SCM. The output of the program were compared to the manual SCM 
modelling results of this protocol. The selective repeat specification provided additional 
evidence as to the programs validity as well as demonstrating how it can be used to improve 
a specification. In both examples it must be shown that the use of the analysis should help 
the designer or reviewer to gain a greater understanding of the protocol, as well as in 
detecting errors. 

The analysis of any protocol using this program contains varying information. A 
global reachability graph and system reachability graph are provided. Following the graph 
is a description of the contents of each machine array upon termination of the graph 
construction. Error messages (deadlock, unspecified reception, and unexecuted transitions) 
are placed at the point in the analysis where they occur. The system state graph will be used 
in this section to provide a means to validate output results. The system state graph can be 
viewed as a three dimensional object whose tuple values provide a vector to 3 dimensional 
space. 

1. Go Back N 

The first protocol which was chosen to model is a go_back_n protocol with a 
variable window size, which is a subset of the High-level Data Link Control (HDLC) class 
of protocols. There are two machines in the system, a sender(m;) and a receiver (m 2 ). The 
sender sends data blocks to the receiver, which are numbered sequentially, 0,1,..., w, 0,1,... 


64 








for a window size of w. The maximum number of data blocks which can be sent without 
receiving an acknowledgment is w, the window size.The receiver, m 2 , receives the data 
blocks and acknowledges them by sending the sequence number of the next block expected 
(which is stored in local variable exp). The shared variables DATA and SEQ are used to 
pass messages from sender to receiver, and the shared variable ACK is used to pass 
acknowledgments back to the sender. The receiver may acknowledge any number of blocks 
received up to the window size. Upon receiving the acknowledgment, the sender must be 
able to deduce how many data blocks are being acknowledged. This is done by observing 


65 






the difference between the values of the received acknowledgment and the sequence 


number of the last data block sent. 


machine 1 





seq : (0,1 ,, w ) 
i: ( 1,2 ,, w ) 


machine 2 



Rdata: I I 

exp : (0,1,..., w ) 
j: ( 1,2.w ) 


Transition 

Enabling Predicate 

Action 

-D 

DATA(i)=E A SEQ(i)=E 

DATA(i ). * Sdataii) 

SEQ(i) . = seq 
inc(ijeq) 

(QSk<w) 

ACK9k = seq A 

ACK*E 
(next state : k) 

ACK . = E 

+D 

DATA (j) *E A SEQ(j)-exp 

Rdata DATA(j) 

DATA(j). SEQij) . = £ 
inc(j.exp) 

■A 

DATA(j)=E 

ACK exp 


Figure 35: SCM specification, Go BackN, window size of l..w. 


66 























The general specification of the protocol is given in Figure 35. Included in this 
figure are the state machine diagrams, variables and the predicate action table. Initially, 
both sender and receiver are in state 0, arrays DATA and SEQ are empty, and ACK is 
empty. The domains of DATA, Rdata and Sdata are not specified; these are used to hold 
user data blocks. Sdata and Rdata are the interface or access points of the higher layer (user) 
protocol. The local variables for the sender are Sdata, used to store data blocks, seq, used 
to store the sequence number of the next data block to be sent out, and i, used as an index 
into the DATA and SEQ arrays. Initially seq is set to 0, and i is set to 1. The local variables 
of the receiver are Rdata, exp, and j. Rdata is used to receive and store incoming data 
blocks, exp to hold the expected sequence number of the next incoming data block, and j is 
an index into the shared arrays DATA and SEQ. 

There are four basic types of transitions described in the predicate action table. 
In the sender the -D transition transmits a data block by placing it into the shared variable 
“ DATA(i), and the sequence number into SEQ(i). The send is enabled whenever those 
variables are empty. The receive transition in the receiver, m 2 , is enabled whenever a data 
block of the appropriate sequence number is in the jth element of DATA and SEQ. An 
acknowledgment may be sent by m2 in any state except 0, in which case no 
unacknowledged data blocks have been received. The +4 is a receive transition. If mj is in 
state u, 1 s u ^ w, and there is a nonempty value in shared variable ACK, then exactly one 
of the transitions -^Aq, +-4;,..., +<4^/-; ^ enabled; it will be that Aj^ such that the 

predicate ACK®k = seq is true, and the next state is k. In the state diagram, all of the 
transition +Ai^aie shown using the same vertical line. 

a. Input of variable definitions. 

A sample interacuon using the program for Uie analysis of go_back_n, w=l,consists of input 
files and an output file. The variable definitions contained in the user specification file are: 
package definitions is 

type scm_transition_type is (snd_data, rcv_data, 

snd ack, rev ackO, unused); 


67 






type buffer_type is (d,e,a); 

type buffer_array_type is array(l..l) of buffer_type; 
type seq_ari^ay_type is array(l..l) of integer range 

type machinel_3tate_type is 
record 

state_number : natural 1; 

Sdata : buffer__array_type (other3“>d) ; 

seq : integer range C..1 0; 

i : integer range 1..1 1; 

end record; 

type machine2_3tate_type is 
record 

3 tate_number : natural :• 1; 

Rdata : buffer_type e; 
exp : integer range 0..1 0; 

j : integer range 1..1 :» 1; 

end record; 

type global_variable_type is 
record 

DATA : buffer_array_type (other3”>e); 

SEQ : 3eq_array_type (others->-l); 

ACK : integer range -1..1 -1; 

end record; 

end definitions; 

b. Input of predicate analysis. 

The analyze piedicaie functions e contained in the predicate.action.a file are; 

function Analyze_Predicate3_Machinel(local : machinel_3tate_type 

GLOBAL: global_variable_type) 
return tran3ition_stack_package.stack is 
tempi : integer :• GLOBAL.ACK + 0; 

begin 

MakeEmpty(tran3ition_3tack); 

if ((GLOBAL.DATA(local.i) - E) 

and (GLOBAL.SEQ(local.i) = -1)) then 

Push(tran3ition_3tack,3nd_data); 
end if; 

if ((tempi » local.seq) and (GLOBAL.ACK /= -1)) then 
Push(tran3ition_3tack,rcv_ack0); 
end if; 

return tran3ition_3tack; 
end Analyze_Predicate3_Machinel; 

function Analyze_Predicate3_Machine2(local : machine2_state_type 

GLOBAL: global_variabie_type) 
return tran3ition_3tack_package.stack is 
begin 

MakeEmpty(tran3ition_stack); 
if ((GLOBAL.DATA(local.j)/-E) 
and (GLOBAL.SEQ(local.j) = local.exp)) then 
Push(tran3ition_3tack,rcv_data); 
end if; 

if (GLOBAL.DATA(local.j)-E) then 

Push (tran3ition_3tack, 3 nd_ack) ; 


68 


end if; 

return transition_3tac)c; 
end Analyze_Predicate3_Machine2; 


c. Input of aftion table. 

The action procedure is also a separate compilation unit contained in the piedicate_action.a 


fde: 


procedure Action(in_3y3tem_3tate : in out G3tate_record_type; 

in_tran3ition : in out 3cm_transition_type; 
out_3y3teni_3tate : in out G3tate_record_type) is 

tenp : integer :» 0; 

begin 

case (in_transition) is 
when (3nd_data) -> 

out_3y3tem_state.GLOBAL_VARIABLES. 

DATA(in_sy3tem_3tate.machinel_3tate.i) 

'n_3ystem_3tate.machinel_state. 

Sdata(in_sy3tem_3tate.machinel_3tate,i); 
out_3y3tem_3tate.GLOBAL_VARIABLES. 

SEQ(in_sy3tem_3tate.machinel_3tate.i) :» 
in_system_3tate.machinel_state,seq; 
out_3ystem_3tate. machinel__state. i : - 

~ {((in_3ystem_stare.machinel_3tate.i) + 

Dmod 1) + 1; 

out_3ystem_3tate.machinel_state.seq :* 

(((in_sy3tem_state.machinel_3tate.seq) 

+ 1)mod 2); 
when (tcv_ack0) -> 

out_3y3tem_3tate.GL0BAL_VARIABLES.ACK :• -1; 
when (3nd_ack) -> 

out_3y3tem_3tate.GLOBAL_VARIABLES .ACK :=» 
in_3y3tem_3tate.machine2_3tate.exp; 
out_3y3tem_3tate.machine2_3tate.Rdata := e; 
when (rcv_data) => 

out_3y3tem_3tate.machine2_state.Rdata := 

in_3y3tem_state.GLOBAL_VARIABLES.DATA 
(in_3ystem_3tate.machine2_3tate.j); 
out_3y3tem_3tate.GLOBAL_VARIABLES.DATA 

(in_3y3tem_3tate.machine2_3tate.j) := E; 
out_3y3tem_state.GLOBAL_VARIABLES.SEQ 

(in_3y3tem_state.machine2_3tate.j) := -1; 

out_3y3tem_3tate.machine2_state.j :- 

(((in_3ystem_3tate.machine2_state.j) 

+ -Dmod 1) +1; 

out_3y3tem_3tate.machine2_3tate.exp :* 

(((in_3ystem_3tate.machine2_state.exp) 

+• 1) mod 2) ; 

.when others -> 

put_iine("There is an error in the 
Action procedure"); 

end case; 
end Action; 


69 



d. Input of finite state machines. 

And, finally, the input file for the finite state machines is: 

start 

• machine 1 

state 0 

trans 3nd_data 1 
state 1 

trans rcv_ac)cO 0 
machine 2 
state 0 

trans rcv_data 1 
state 1 

trans snd_ack 0 
initial_state 0 0 
finish 


e. Output of analysis. 

The output of the analysis is: 


REflOMBILlTY MM.YSIS of : go.bacfc^.ul 
Global State OWPH 


0 

t 0 , 0 

, 0 . 

1 


0 


1 

0 

r. -1 


-1 ] 

snd.d*ta 

1 

1 

t 1 , 0 

. 1 . 

1 


0 

» 

1 

0 

D . 0 


-1 ] 

rcv.data 

2 

2 

C 1 . 1 

. 1 . 

1 


1 


1 


E . -1 


-1 1 

snd.ack 

3 

3 

C 1 . 0 

. 1 , 

1 


1 

0 

1 

0 

E . -1 

0 

1 1 

rcv.ackO 

4 

4 

1 0 . 0 

. 1 , 

1 


1 


1 


£ , -1 

0 

-1 1 

snd.data 

5 

5 

t 1 . 0 

, 0 . 

1 


1 

0 

1 


0 . 1 

0 

-1 1 

rcv.data 

5 

6 

t 1 . 1 

, 0 , 

1 


0 

0 

1 

0 

E . -1 

, 

-1 1 

3nd.ack 

7 

7 

t 1 . 0 

. 0 , 

1 


0 

0 

1 

0 

E . -1 

0 

0 1 

rcv.ackO 

0 


Systee State GRRPH 


0 

t 0 . 0 

1 

snd.data 

C 1 , 0 1 

1 

1 

C 1 , 0 

1 

rcv.data 

C 1 , 1 1 

2 

2 

C 1 , 1 

] 

snd.ack 

[1,0] 

3 

3 

t 1 , 0 

1 

rcv.ackO 

[0,0] 

0 


Hadiine 1 (VraH Content* 


Fron I To I Transition I Executed I 


0 111 sncLdata I iies I 

1101 rcv.ackO I ye* i 


Machine 2 flpray Contents I 


Froa I To I Transition I Executed I 


0111 rcv.data I yes I 
1101 snd.ack I yes I 


70 





The output indicates that no enors were encountered. The format for the variables are user 
dependent and, for brevity sake, the code for formatting the ouqjut was not included. 

/. System state analysis. 

System state analysis is similar to the reachability analysis used with the pure finite state 
m^hine model, but the total number of states which must be generated with system state analysis is 
significantly smaller. 

The system state analysis for a window size of 1 is shown in Figure 36.The subscripts are 
used so that distinct system states having the same tuple may easily be distinguished. The convention is that 
the subscript is initially 0, and is iiKreased whenever a “-A” transition is taken, by the number of messages 
which are being acknowledged. 



Figure 36: SCM, system state analysis. Go BackN, w=l. 

The analysis for ws2 is shown in Figure 37. The initial states and variable values are the 
same as for the wsl, however there are clearly more states in the analysis. 

In a comparison between window sizes of 1 and 2, it is noted that the smaller graph is a 
subgraph of the larger, either can be obtained from the other. If the subscripts are taken as the third coordinate 


71 









in a 3-dimensional cartesian coordinate system, with the states of each machine as the first two coordinates. 
The graph then is the shape of a tetrahedron, with edges which are directed and labeled. 



The graphs contained in Figure 36 and Figure 37 are defined with respect to a window size 
tv. The graphs, DTl(w) for a nonnegative integer w is a labeled, directed graph, defined by the tuple 
{N, E,L,^), where N = { (;t, >, r) | (0 s z < w, r s jt s *», 0 s y S x - z)} is a finite set of nodes, where each 

node is specified by an ordered triple; L={-D, +D, -A, +Ai .'S a finite set of label; the set E 

of edges is a set of ordered pairs ((x/, y/, z/), (x/, yj, zj)) of nodes from N, and is the union of the following 
four sets: 

» {«x. y. z). (x+1. y, z))l(x,y. z)eN, x<w) 

^2 = {((^' y- y,z)€N. y<x-z) 

Ej = {((x, y, z). (x, 0. y+z))l(x, y. z) ^N, (y = x-z).x>z) 

£4 = {((X, y, z). (x-z, y. 0))/(x. y.z) eN. z>0) 

and the mapping <»(L*~E) is defined as follows: 


72 







V(x,y,z) <: £j,< 6 (x,y,z) = -D 

V(x.y,z) € £ 2 .<&(x.y,z) = +0 

V(xy.z) e £ 3 ,<I>(ac,y,z) = -A 

V (X, y, z) 6 £^, (X, y, z) = + , where A:=x-z 

Each node of the graph can be thought of as a point in 3-diniensional space, with nonnegative, 
integral coordinates (x,y,z). The structure of the graph is a sequence of w+1 triangles, one on top of the other, 
with the largest triangle at the bottom and the smallest is a single point at the top level. 

One of the nice features of the geometric structure of this graph is that the state of the system 
can be easily inferred from the x, y, z coordinates. For example, in Rgure 37, point (2,1,0), or system state 
[ 2 , 1 ] 0 , the sender has transmitted 2 data blocks for which no acknowledgment has yet been received, the 
receiver has received 3 of these, but acknowledged non. 

Let f(w) be the amount of nodes in a system state graph and g(w) be the amount of nodes in 
the global reachability graph. The equations for g(w) rnd f(w), and the lemmas that support them, for the 
go_back_n protocol are found in [LUND 91a]. For instance, the graph DTl(w) has 

/(w) = 1 . The size of the graphs according to window size are: 


w 

f(w) 

g(w) 

0 

1 

1 

i 

4 

8 

2 

10 

60 

3 

20 

240 

4 

35 

700 

5 

56 

1680 

5 

84 

3528 

7 

120 

6720 


The output of the progre for this protocol was compared to values for f(w) and g(w). Test 
runs were done for window sizes of 0 thru 5 and the amount of nodes in each graph were consistent with the 
table above. The specification input files and the output is in Appendices E through H. 


73 




2. Selective Repeat 

The next analysis is the selective repeat protocol.The specification defined in 
[BENV 9l]and [STAL 91] has been modified as follows. There are two machines in the 
system, a sendei^m/) and a receiver (m 2 )- The senders (ntj) initial state is 0. Two 
assumptions were made for the analysis. First, all the packets transmitted were received 
without error and second, no packets were lost or reordered during the transmission. 

The specification for the sender is found in Figure 38. As the buffer manager 
places data in the next available sequence number, the sender places the packet on the 
channel and increments the index for the next packet to be transmitted. As long as the next 
packet is not empty, the sender will continue this process until the bottom state on the finite 
state machine is reached, indicating the transmission of a full window. Acknowledgments 
(ACK) are passed to the transmitter as they are received- If an ACK is received then the 
transmitter must determine if the window may be opened and if so, how far. If the ACK is 
not for the first packet in the window then the flag ack_rec is set, indicating that the packet 
was received correctly. The window is not advanced because packets that were transmitted 
earlier are still outstanding. The sequence number within each ACK represents the actual 
sequence number of the packet received and not the sequence number of the next expected 
packet, as is common in many protocols. 

When an ACKs for the first packet in the window is received the machine clears 
its buffer, advances the window, and looks at the next sequence number. If the packet has 
not been received, then that becomes the beginning of the window. If it has been received 
then the next sequence number is examined until the earliest outstanding packet is found or 


74 








the window is fully opened. ACKs that do not correspond to any of the sequence numbers 


within the current window are ignored. 


machine 1 




out_buff: 
ack_rec: 
i: 

current; (0, 1,, w) 
hold: (t,f) 


12_w 


(0,1,..., w) 


machine 2 



in_buff: 
pkt_rec: 

j: 

current: (0,1 ,..., w) 


12 


w 


T 


(0,1.w) 


Transition 

Enabling Predicate 

Action 

-D 

out bufferii) /= £ A 
hold =/ 

DATA(i) :=out_buffer(i} 
inc(i) 

hold . = t 

+/4 

ackrecd) =/ A 

CONTROL=A(i) 

ack rec(i) := t 

CONTROLd ). - E 

(0Sfc< w) 

true 

ackj-edi) •=/ 
hold :=f 

-A 

CONTROL(j)=E A 
pkt_rec(j)=t 

CONTROL(j) ;= A(j) 
pktjecij) :-f 
injjuffd) :=e. inc(j) 

+D 

pktjec(j)=f 

in bufffj) := DATA(j) 

DATA(j ). = E 
pkt_rec(j) :=t 


Figure 38: SCM specification. Selective Repeat, window size of l..w. 


75 





























The receiver as shown in Figure 38 follows the specification given in the 
predicate actiofi table. The initial state of the receiving machine is 0. Any packets that are 
received with sequence numbers outside of the window are dropped. If a valid data packet 
is received then the +D is taken, based upon whether the sequence number of the received 
packet is equal to ij. If the sequence number is not then the flag pkt_rsc is set to t and the 
packet is stored. If it is equal to then the pkt rec is set, the packet is released to buffer, 
and ijis incremented until a sequence number with pkt_rec=f is found. 

A sample interaction using the program for the analysis of selective repeat, 
w=l,consists of input files and an output file. The variable definitions contained in the user 


specification file are; 


package definitions is 

type scin_transition_type is (snd_data, rcv_data, 

snd_ack, rcv_ack, 
adv_vrinl, unused) ; 
type buffer_type is (dl,e,al ); 
type boolean_type is (t,f); 

subtype ack__buffer_type is buffer_type range e..al; 
subtype data_buffer_type is buffer_type range dl..e; 

type ack_array_type is array<l..l) of ack_buffer_type; 
type data_array_type is array(l..l) of data_buffer_type; 

type boolean_array_type is array(l..l) of boolean_type; 


type machinel_state 
record 

state_number 
out_buffer 
ack_rec 
current 
hold 

end record; 


type is 

; natural 
: data_array_type 
: boolean_array_type 
: integer range 1. . 1 
: boolean_type 


0 ; 

(dl) ; 

=• (others=>f) ; 
1 ; 


f; 


type machine2_state_type is 
record 

state_number : natural 

in_buffer : data_array_type 

pkt_rec : boolean_array_type 

end record; 


= 0 ; 

= (other3=>e) ; 
= (others=>f); 


type global_variable_type is 
record 

DATA : data_array_type := (others=>e); 

CONTROL : ack_array_type ;= (others=>e); 

end record; 


end definitions; 


76 








a. Input of predicate analysis. 

The analyze predicate functions contained in the predicate_action.a file are: 

function Analy2e_Predicate3_Machinel{local : machinel_3tate_type; 

GLOBAL: global_variable_type) 

return tran3ition_3tack_package.3tack i3 
begin 

MakeEmpty(tran3ition_3tack); 
if (local.out_buffer(1) /= E) then 
Push(tran3ition_3tack,3nd_datal); 
end if; 

if ((local.ack_rec(1)-f) and GLOBAL.DATA-Al) then 
Push(tran3ition_3tack,rcv_ackl); 
end if; 

Push(tran3ition_3tack,adv_winl); 
return tran3itio^n_3tack; 
end Analyze_Predicate3_Machinel; 

function Analyze_Predicate3_Machine2(local : machine2_3tate_type; 

GLOBAL: global_variable_type) return 

tranaition_3tack_package.stack is 
begin 

MakeEmpty(transition_3tack); 

if ((GLOBAL.DATA - Dl) and (local.pkt_rec (1)-f) ) then 
Push(tran3ition_3tack,rcv_datal); 
end if; 

if (Ic^al .pkt_rec (1)-t) then 

Push{tran3ition_stack,snd_ackl); 
end if; 

return tran3ition_3tack; 
end Analyze_Predicate3_Machine2; 


b. Input of action table. 

The action procedure is also a separate compilation unit contained in the predicate.action.a 


file: 

procedure Action(in_3y3tem_3tate : in out Gstate_record_type; 

in_tran3ition : in out 3cm__tran3ition_type; 
out_sy3tem_3tate : in out Gstate_record_type) is 

temp : integer := 0; 

begin 

case (in_tran3ition) is 
when (snd_datal) => 

out_3y3tem_3tate.GLOBAL_VARIABLES.DATA := 

in_3y3tem_3tate.machinel_state.out_buffer (1); 
when (rcv_ackl) -> 

out_3ystem_3tate.machinel_3tate.ack_rec (1) ;= t; 

out_system_3tate .GLOBAL_VAKIABLES.DATA e; 
out_3y3tem_3tate.machinel_3tate.current := 1; 
when (rcv_datal) =»> 

out 3ystem_3tate.machine2_3tate.in_buffer(1) := 

rn_3y3tem_3tate .GLOBAL_VARIABLES.DATA; 
out_3y3tem_3tate .GLOBAL_VARIABLES.DATA := e; 


77 


out_3y3tem_3tate.machine2_3tate.pkt_rec (1) t; 
when ( 3 nd_ackl) -> 

out sy 3 tein_ 3 tate • GLOBAIi_VARIABLES .DATA al; 
out~3y3tem_3tate.machine2_3tate.pkt_rec (1) f; 

out_3y3tem_3tate.machine2_3tate.in_buffer(1) e; 

when (adv_winl) -> 

out_ 3 y 3 tem_ 3 tate.machinel_3tate.ack_rec 

(in_3y3tem_3tate.machinel_3tate.current) :« f; 
when othera -> 

put_line("There is an error in the Action procedure")/ 
end case; 
end Action; 

c. Input of finite state machines. 

And, finally, the input file for the finite state machines is: 

start 
machine 1 
state 0 

trana 3nd_datal 1 
state 1 

trans rcv_ackl 2 
state 2 

trans adv_winl-0 
machine 2 
state 0 

trans rcv_datal 1 
state 1 

trans 3nd_ackl 0 
initial_3tate 0 0 
finish 


d. Output of analysis. 

The output of the analysis is: 


78 






REACHABILITY ANALYSIS of : Ml.rop.ul 
Global Stata GRAPH 


0 

t 0 , 0 , U , F 

. E , F . 

E ] 

and.dstal 

1 

1 

t 1 . 0 . U . F 

. E . F . 

U ] 

rev.datal 

2 

2 

[ 1 . 1 . M. , F 

, Dl , T 

, E 1 

snd.acfcl 

3 

3 

C 1 . 0 . nt , F 

. E . F , 

A1 ] 

rov.ockl 

4 

4 

C 2 . 0 , m , T 

. E . F . 

E 1 

adv.Mlnl 

9 


SystM SUto GRAPH 




0 C 0 , 0 1 

3nd.dat«l 

t 1 . 

0 1 1 



1 C 1 , 0 1 

rcw.datal 

t 1 . 

1 1 2 



2 t 1 , 1 I 

snd_ocfcl 

t 1 . 

0 ] 3 



3 C 1 , 0 1 

reu.ockl 

t 2 . 

0 1 4 



4 t 2 , 0 1 

aikf.Hinl 

I 0 , 

0 1 0 



1 Haehine 1 frrai| Conttnts 1 

1 Froa 

1 To 1 

1 Tromition 1 

Executed 1 

1 0 

1 1 1 

1 snd_dBtal 1 

yes 1 

1 1 

1 2 1 

1 rev.ockl 1 

yes 1 

1 2 

1 0 1 

1 4du.«lnl 1 

yes 1 


I Hachina 2 Arraij Contenta I 


1 Fm 1 

1 To 1 

1 Trmition 

1 Executed 1 

1 0 1 

1 1 1 

1 rew.dMal 

1 yes 1 

1 1 1 

1 0 1 

1 snd.scfcl 

1 yes 1 


e. System state analysis. 

The system state analysis for a window size of 1 is shown in Figure 39.The subscripts are 
used so that distinct system states having the same tuple may easily be distinguished. The convention is that 
the subscript is initially 0, and is increased whenever a -A transition is laken, by the number of messages 
which are being acknovvledged The analysis for w=2 is shown in Figure 40. As previously pointed out initial 
states and variable values are the same as for the w=l, however there are clearly more states in the analysis. 


79 












Figure 39: SCM, system state analysis. Selective Repeat, w=l. 



Figure 40: SCM, system state analysis. Selective Repeat, w=2. 

The graphs contained in Figure 39 and Figure 40 are the basis to the definition of a window 
size of w. The graphs, SRl(w) for a nonnegative integer w is a labeled, directed graph, defined by the tuple 
(iV, £,L,<t>). where { (x,y, 2 )l (0Sr< w.zsjs2w,0<ysx-z) } is a finite set of nodes, where 

each node is specified by an ordered triple: L={-D. +D. -A, +A. Rq ./?w./7 is a finite set of label; the set E 

of edges is a set of ordered pairs ((x/, y/, Z/). (x/, y^, z^)) of nodes from N, and is the union of the following 
four sets: 


80 







El » {((x, y. z). (x+w, y. z))l(x. y.z)GN,x< w) 

^2 * {((x-y- *>. (x, 1.0))l(x. y. z)eN,y + z<x) 

Ey ■ {((x,y. z). (x. y-1, z+I))/(x.y,z)eN,x> z) 

£4 » {«x. y. z). (x+I. y. z))l(x. y,z)eN.y + z<x) 

E 5 ® {«x,y, z), (x-(w+k),y. z))l(x.y,z)eN,x-(y + z)ik) 

and the mapping <t> (L 4 - £) is defined as follows: 

^(x,y,z) € £,,<h(jE,y,z) = -D 
V(x,y.z) e E^<»(x,y.z) = +D 
V(x.y,z) € £y<P(Ay.z) =-A 
yf(x,y.z)€E^,^(x,y,z)= +A 
'^(x,y,z) e Ej.<l>(x,y,z) = E^,k = |w-j:| 

As with the go.back.n analysis, each node of the graph can be thought of as a point in 3- 
dimensional space, with nonnegative, integral coordinates (x,y,z). The structure of the graph is a sequence of 
w+J triangles, one on top of the other, with the. largest triangle at the bottom and the smallest is a single point 
at the top level 

Let f(w) be the amount of nodes in a system state graph. The lemmas that support it, for the 

2 2 

selective repeat protocol are found in [JENS 92]. The graph SRl(w) has /(w) = w + (w + 1) . The size 
of the graphs according to window size are: 


w 

f(w) 

0 

1 

1 

5 

2 

13 

3 

25 

4 

41 


Test runs were done for and the amount of nodes in each graph were consistent with the table 
above. The specification input files and the ouqnit is in Appendices I and J. 


81 









VI. CONCLUSIONS AND RECOMMENDATIONS 


In this thesis, a program was introduced that analyzed network protocols using the 
CFSM and SCM models. The program was successfully developed in an Ada environment. 
The Ada tools that made implementing the models easier were encapsulation, information 
hiding, generic programming units. 

In Ada, network protocol specifications can be represented in an intuitive manner. The 
finite state machines and the associated predicate action tables were converted to Ada 
language parameters for the analysis. The language environment enforces the rules of the 
protocol as well as the allowable behavior of all the variables. Dynamic construction of 
reachability graphs allowed the user to determine how large or small an analysis should be. 
The protocol designer or engineer that uses this program can quickly become familiar with 
the behavior of the protocol by simply constructing the Ada specification. It is interesting 
to note that due to the autom_ated_specification analysis some previous work using the SCM 
model has since been modified. The analysis provides information on occurrences of 
deadlock, unspecified reception, unexecuted transition, and message flow exceeding 
channel capacity. 

The programming environment provided an adequate platform to develop the 
program. The ability to use encapsulation, information hiding, tasking, and generic code 
allowed the program to be developed in a step-wise, compartmented fashion. The 
availability of a powerful debugger (DBX) enhanced the transition from developing to 
testing the program. To allow for a more transportable product this program might be 
convened to C or C+-t-, so that others may benefit from its use. 

The program was validated with previous work done on widely used protocols. In 
Lundy’s papers [LUND 88], [LUND 91a], [LUND 91b], [LUND 92a] and [LUND 92b] a 
num'ber of protocols were manually analyzed using the SCM model. A subset of those 
analysis were performed using the program, achieving identical results.lt is interesting to 
note that due to the automated analysis of previous work using the SCM model, some 


82 








specifications have had to be modified. In must also be noted that example analysis were 
only done on two machine specifications. 

There are several questions and areas open for further work which remain. An 
important step would be to expand the program to allow for more than two machines. 
Although most protocols can be modelled with two machines, it is a realistic requirement 
to model three or more. The program could be made more interactive with the user, 
allowing the user to change the specification real time when an error occurs. The program 
was developed for use on a workstation, future work could concentrate on PC versions of 
Ada or C/C++. A picture is worth a thousand words; what is done textually can sometimes 
be represented better graphically. A graphical user interface would enhance the users 
ability to specify a protocol and understand the analysis. 

It is important to say that developing this program was FUN. One of the features of 
this automated tool is its understandability. By developing an automated tool it became 
apparent that the user needs to feel comfortable with the language used as well asTiow a 
specification looks and feels when input for analysis. The results provided by the many runs 
of this program focused attention to where it needed to be- the protocol behavior, not the 
programming language anomalies. 


83 








APPENDIX A CFSM CODE 


The program listing begins on the following page. 


84 






>1 X 

O 4J U 

S -H «« 

4J ^ « 

I 

«X >«-i N 

4 O N 

X ^ N 

o O n H 

<« < C H 

C « O It 

o U il 

-H O w H 

CL • II 

cq ^ ^ <n H 

U U 4) H 

^ • (f| ^ N 

'M U 4J 4) N 

<-4 X O 'M u 

U -H 4} 'N.. II 

O 9 4J < «l H 

ax fn u n 

« 4« 4J H 

« C H 


II 





O U 'Q 

C 3 

N 



« 























X <« C 

3 

N 



V) 























■u <q 


H 



g 























«l 

g g 

II 



Vi 























M .u c 4j Vi 

u 



g 























n 4) 

<q iq 

u 



Vi 























41 

u 

M 



« 























Vi U 

iq y 

II 



1 























u 

a O 

u 



>«V4 























X > 01 

g VI 

II 



g 0 




•V 



















iJ <J 

VI « 

II 



U 1 




•V .A 



















C 0 

g 

II 



U Vi 




-4 g 



















« « X 

V) 

II 



g g 




g a 



















»-< o 

<q g 

11 



X 




a >« 














H 





<q u 

X 

(1 



g £ 




>« Vi 












g 







»V4 4-> 3 *0 *J 

II 



Vi 3 




w 












a 







'Q a 41 

H 



g c 




IC 












>4 








<•4 

t1 



Vi 




C 0 












vi 







X 3 

•44 «V4 

H 



V) * 




0 -• 












1 







4) 4) 0 

a 0 

II 



g 




.«4 tJ 












X 







Vi C 

6 

II 



-4 C 




w y *4 

• v 











C 







^ *0 

0 u 

II 



.q -4 




-* 3 aiV 

0 











—4 


II 





•«x c 

y g 

H 



X X 




«9 W ^ 












■-V 

• « 

II 





g iq 

*3 

II 



0 y 




c Vi 4V. a 

1 











U) 

g 

II 





«4 <q 

<q 

II 



— g 




g 91 V >» 

u 












a 

II 



> 


« E e 

c g 

II 



CT E 




u c avi 

g 











W 

> 

II 



E 


*0 0 

X 

It 







Vi -4 X 1 

O' 











0 

vi 






-M 


n 



'Vi * 




1 Ivi X 

g 












1 




< 


> c u *0 g 

II 



0 V) 




EE ly 

Vi 











A 

>. 






Q <ti <q 

g X 

II 



g 




91 91 Vi W 

C 











0 

g 

1} 



• 


k4 y 

Vi Vi 

II 



X c 




<44 *Vi MNt iq 

—4 


1 *« 




• v 





1—4 

u 

II 



(/I 


a*o -4 

«« 

II 



Vi 




y y g g 

1 


I 4 ^ 




-0 






Va 






g «v4 

g c 

n 



O'X 




— 1 V) 

b 


1 m 


• V 


g 





• 

g 




• 


w n 

k« 

H 



c y 




O O > 

91 




g 


91 






1 






guy 

y 

M 



g g 




1-4 V4 . O ^ 

*44 


1 A 


a 


3 






g 






01 g 

•o 

H 



£ 


*v 


1 10**-*^ 

y 


1 It 


>4 


c 





rM 

c 




« 


3 a 0. 

g c 

4 



1 1 




C C »-4 1 y 





vi 


3 






^H 




C 


n 

U 3 

II 



1 V4 


T1 


o o IC O' 



1 X 


1 







g 

X 




-4 


g n 

g 0 

II 



0 


g 


^ ^ c o g 

0 


' £ 


■0 







O' 

y 






X -• g 

3 'vt 

II 



1 


91 


Vi Vi o *«4 Vi 

•*4 


1 z 


Li 







c 

g 




w 


H C 


II 



u 


3 


g g -4 Vi c 

1 




0 







g 

£ 




a 


g «-• 

VI g 

II 



g 


C 


u u Vi iq — 4 

F 


t % 


y 


g 





u 





»« 


-4 X 

g X 

II 



X 


3 


g g g u —' 

3 


i Vi 


g 


a 






*V4 




o 


. ^ y 

V) 

II 



E 




•• e E u g O 

C 

1 91 

i g 


u 


>> 

• 4 


—4 


g 

0 






g «M iq 

3 C 

II 



3 



• « 

— 3 3 g E 

g 

1 >• 

1 vi 


1 


vi 

- 


•* p-4 


> 





« 


U fi 

<« 

II 



C 


> 

A 

91 c C E 3 

1 

1 g 

1 y 


>4 





0 3 


•—4 





w 


3 Vi 

c u 

II 





y 

0 

'V4 Cal U 3 c w 

vi 

1 Vi 

1 g 


g 


C 

** 

0 

C C 


u 

CN 




V 


o *0 X g 

•<4 

II 



« 


u 

c X • • c u g 

91 

1 u 

1 u 


Vi 


y 





•pH 





CT ■ 


_• g g X 

.q g 

II 



u 




O O tu _• O* > 

1 g 

1 g 


Vi 





II 11 


91 

































V 


0 

3 

II 



g 


rj 

91 

91 1 lO *-4 Vi 

.. 

1 g 

• y 


1 


••4 





a 





X 


c u g c 

g ”0 

11 



Vi 


c 

g 

V4 4i Vi VM { c 

0 

• c 

1 ■*“' 


g 9) 


9) 



g g 



1-4 




n 


o ax o X g 

II 



V> 


91 

>4-0 XX |4J V4 

—4 

1 -4 

1 9) 


c -4 


C 

Va 


a a 


>4 





••>4 

c 

-4 H 

Vi U 

II 





'■» 


g g o X 


1 X 

1 g 


• V 


q 

g 


> > 


g 

>4 




^ <N 

o 

V) c g 

0 

II 







e- e- X g 3 

fi 

1 y 

1 3 


g X g 


Vi 

vi 

—4 

U vJ 


Va 

g 




X O' 

•«4 

U -i c 

Vi u 

II 



91 


91 

91 

91 g e- g 

3 

1 g 

1 g 


a y a 


ij 

y 

g 

1 


Vi 

u 




iJ O' 


g iq . O 

a 

II 



—« 


—4 

—4 

-4 3 3 t- c 

C 

1 £ 

1 3 


> g >4 


g 

Va 

U X 


g 

Va 




o 

-« > E TJ X 

» 



• • 




g g 3 

g 


1 O' 


vi E vi 


E 

V4 

3 

•-4 c 



g 




ac 

u 

g 

Vi *0 

II 

• « 


o g 




c c 3 g M 

1 

1 g 



1 1 


91 

g 

u 

91 —i 


9) 





> 

n 

• g -0 m 

c 

II 

V) 


^ a 


g 


g c -4 

u 

1 X 

I 3 


■0 91 T3 


*44 X 

g 

--4 *-4 


• pH 

91 




< u 


«C £ 0 -1 

VI -q 

II 

M 


> 


a 


91 91 C 

vi 

1 vi 

1 g 


Vi 91 Vi 


y 

y 

c 

> Irt 







<q 

Vi 

O 4J E 

g 

II 

U 


If Vi 


>4 


••4 --- 9) o 

91 


1 c 


0 g 0 







g 

































3 u 

3B 

VI g --4 

3 O 

II 

Vi 


C 


■ 


0 0-4 


1 0 

I <n 


g y g 







> 

a 




V X 


X -4 C VI -4 

II 

« 


-* 0 


c 


— --4 O U 


1 *44 

1 •■4 


Vi g Vi 







u 

> 




X 4) 


-4 -4 >, g «J 

H 



<q .4 


o 


1 lo -v* g 





I 







I 

vi 


C 

c 

4J Cia 


*0 VI X —• 

o y 

II 

« 


Vi U 


•*4 


E E -4 10*0 

1 91 

1 X 


> 91 > 







> 

1 


•*4 

•*4 

iJ 

C 

u -4 y .q 

o c 

H 

V) 


3 O 


Vi 


3 3 IE g 

—4 

1 g 

1 y 


g -4 iq 




g 



g 

>4 




•q o 

3 

g X ^ c 

U 3 

II 

g 


Vi 3 


—4 


g c c E 3 Vi 

1 

1 Vi 

1 g 


U Vi 


C 


*j 



u 

g 


6 

E Z -• 

(/) > H E <q 

a*44 

II 

3 


g Vi 


91 

g 

a g g 3 c c 

fi 

1 3 

1 ax 

Vi g Vi 


0 


g 



Vi 

Va 








II 

g 

V) 

C Vi 


c 

a >• 1 I c g 

3 

! vi 

1 

u 

gag 


.-4 


u 



g 

Vi 




































i| 

O’ 


•• c 


w 

Vi 

IC Vi IX E 

g 

1 3 

1 3 

a g vi g 


—4 

OiZ 

g 


g 

1 






c 


II 


C 

••4 


vj 


X g 91 Vi y 91 

1 

1 Vi 

1 g 

IC tc 


91 

g 

Iw X 

•« 

c 

F 






0 


II 

«•« 

••4 

X 


Vi 

y u c 91 u '*4 

91 

1 Vi 

1 3 

g 

X -4 


c 

91 

vJ 

-4 c 73 

—4 

g 








II 

o o 


Vi E 


s 

—4 

V» *J -4 > y 

C 

1 91 

1 0" 3 X C X *0 

g 

9) 

X 

9) -4 

Vj 

X 

vi 






u u 


II 


£ 

O' 91 

A 

91 

91 

g 

g 


1 

g 

U -H U 

Va 

Va 

g 

g 

—4 —4 

0 

0 

91 




■0 


g a 


II 

1 ; 


c 'Vi £ Vm 

—4 

g g g g g g 

w 

I g 

i g 

3 

q — 1 q 

0 

.J 

£ 

c 

> cn 

y 

g 

>4 




u 41 

£ 

1-4 --4 


11 

u u 

g 

g y 

91 

y 

> 

91 O* O' O' O' O' vi 

1 vi 

1 O' O' E W £ 

y 





g 

E 

91 


V 


0 VI 

4) 

-4 Vl 


K 

X X 

Vi 

—4 

-4 



41 4 I ^ 41 m 


1 g 

t g 



g 





Va 





« X » •-* 

u 

a y 


i| 

g g 

3 

1 g 

c 

g 

g 

g .X 


1 -0 

1 X 


g g g 

Vi 






g 

g 


4J 

■-4 

w w > 

VI 

E <f> 


It 

e* H 

T3 

X a 

^4 

a 

a a y y y y y 

g 


i y 

g 

a a a 






Tl 

a 

a 


OiH 

•*4 

3 <q M 

>* O 41 


II 


g 

g >*44 

>*>»>»ggggg 

91 

1 1 

i g 

n 

>• > > 






c 

> 

> 


^ Cb < o oc (/) 

u o 


i| 

X 

y 

£ u 


Vi 

Vi 

Vi a a a a a 3 

i 1 

1 a 3 

vi vi vi 






g 

vi 

aJ 


85 


-data structures for the global state tuple(node) 












>9 

O 


V o 

a o 

> 

u 

I «1 


V 

U A 


^ -mc 
^ c 

O --• 


V V 

a cu 
> > 
«j «j 


• % 

«l 91 « 

-t C U Q. 

<« « >• 
V 4 J C W 

a a o >9 I 
> I V ^ 
u E w ^ C 

I (II o •— 

c ' 4-1 £ o —• 

O U U J3 O 


91 

c 

U 


« c 

C Q 

U 4J V 41 

w CT''0 

I 91 -4 O 

41 C 9) C ->< •« 

U ‘tl 91 I C T? 

jj wi u g 41 -- O 

91 O O O C C U 

O U « 

4) w 


41 u 







1 C 







1 O 







1 







1 w 







f 







1 E 






91 

1 w 






W 

1 0 






4J 

1 *4^ 






w 

• c 






g 







<11 







w 

1 M 







> c 






£ 

1 






O 

1 






vw 

‘ -0 






0 

1 c 







1 <11 






>• 

1 













w 

1 (U 






u 

< kj 






9 

1 <9 






1 

1 «sl X 






1 

I «) a 







1 <0 







1 «. u 






• « «« 

1 C O' 






<U V 

» o 






3 3 

• - 4; 






4) 4) 

i 4^ tJ 






3 3 

1 






O O O O 

1 91 u 







< C 9) 






>1 (I ^ 

1 TJ 






.. .. y y 

1 U —« 






9 

1 o •« 






-H a Q. 

• X 






II 

1 91 o 






k4 u 41 41 

1 C — • 






3 3 3 3 

1 M a* 




VI 


*J <J 41 41 

• 9 






'9-^3 3 

1 u 4) 

1 9) 


<u 



C C O* O* 

• C X 

1 


u 

V 



1 o u 



3 

a 



• u 

1 V 



>• 



1 O' 

1 a 


U 

w 


41 4) 

• « c 

> >• 


3 

1 


w *J 

1 « -4 

1 tj 


U 

-0 


9 9 

1 V TJ 

1 1 


iJ 

w 


«J 4J 

1 o -• 

t V 


in 

0 


91 91 

1 c - 

1 u 



u 


1 1 

• 3 

1 9 


V 

V 


-- CM CM ^ 

1 41 X 

1 U 



u 


4» 4) •— <N 

> w 

1 9) 


a 

1 


C C It 

1 w 

1 1 


3 

41 


— 4> 4> 

1 w O 

1 —4 


4J 

u 


JC j: 3 3 -3 

1 91 '4-4 

» -0 



<9 ~0 

y y 4j 4» w 

1 

« X *0 


u 

u 

'fl -a 3 3 o 

1 — *0 

1 0 

w 


91 

0 

E £ O* O' O 

1 ^ 4> 

1 —4 

a 

Xi 

o 

u 

<u 

» X -0 

1 cr 

y 

o 


V 

w 

1 o V 

1 

V 


V 

kj 


» —. 4; 

1 (V 

w 

O' 

a 


T3 

1 o c 

1 a 


1 

> 


c 

1 1 1 

1 > 



«j 


41 

1 1 1 

1 u 



91 






c 








0 








-4 



o o u 





u 








9 



a 





(J 



A A 1 








» •• » 01 




< 91 

c 



-1 3 




i ^ 

3 



X 41 X 41 




1 41 

g 



< a< 3 





h 



r 0 * 




1 C 

0 



4J ! 




> —4 

(J 



» 1 % u 




1 O 




41 41 41 41 




1 a. >4 



a4j ax 




1 

9 



>, 9 >* c 




1 w 

S 



fcl X X -4 




1 0 




1 91 lO 




1 

o 



X LX a 




1 91 

X 



c -t c o 




i 41 




.-4 -4 




1 3 




— X -• ^ 




t V 

V 



o o o X 




1 3 

u 



-r y 




1 O* 'fl 



91 O' 91 TJ 




1 

—* 



X 41 a 




1 “0 

3 



y « 3 1 


... ... ... 

>» 

t C 

E 



TJ X 01 X 


4> V 41 

V 

1 TJ 

•-4 



4J U 3 (J 


a a Q. a 

1 

V) 



91 TJ O* TJ 


>4 > > 

> 

1 9) 




X X 

9 

•> 4.1 iJ 4-» 

U 

1 U 

0 



3 9) 3 9) 

u 

V 1 1 

1 

1 41 

u 



41 41 ! 

3 

a k: c c 

c 

1 4J 




C 3 C 41 

1.1 

> o o o 

0 

1 c 




41 X 





V 



91 C 91 <0 

C 



t O 

O' 



-4 -4 *.1 


-o 

..4 

1 Q. 9 



9) 9) 

.. 

U 9) 9) 91 

91 

1 

9) 



X -44 X O 


0 c c c 

c 

1 'k4 

91 



0 u 




1 0 

41 



Tl X 3 


V u u u 

u 

1 

E 



a u ax 

0 

U 4J 4J 4J 

U 

1 91 




lO 

c 

1 > 

1 

1 M 

'w 



X a 41 ^ 

3 

4) 4> 41 V 

41 

1 O 

O 



y ! 3 a 


hJ ^ u u 

4.1 

1 9 




9 M 9) 1 



9 

1 u 

91 



X U 3 X 

4) 

^ ^ 4J X 

tJ 

1 91 

41 

91 


91 TJ O' U 


9) 91 91 91 

91 

1 

3 

41 


IX 1 <3 

<B <J O O (3 

o 

1 

41 

C 


U 91 k-i iJ 




1 0 

3 

—4 


0) 1 41 91 



*• 


D*X 


u 41 X 1 




1 c 


u 


C X C 

E 



1 o 

X 

9 


TJ -4 01 


1-^ 4-4 f*1 

^ •» 

1 "4 

4J 

b 


O X O X 


0..^ *0 

i u 

—4 



a 91 a c 

9) 

3 C C C 

C W 

1 9 

3 

C 


o o O 


-4 O 

t M 


01 


0 


-4 y 

1 9 

O' 

4) 


41 01 41 a 



41 

1 -H 

c 



O' O' O'O 



u 

1 y 

o 

. i 


TJ 3 3 




1 01 


41 


XXX 



T3 

1 -0 

9 X 


u o y 41 



C 

1 1 




<9 TJ TJ 91 



4) 

1 1 




a a a 3 


86 




















4) 


£ 

U 

E 


>« 4) . 
<A C 




4) 



<4 

a 

<4 

a 



ja 



a 

41 

a 

4) 






4) 

0) 

4) 

0) 



o 



0) 


01 




u 




01 


01 






01 

•-4 

01 




V 



•t-l 






4) 









4J 


M 







Q 



c 

<4 

c 

<4 





£ 

<4 

U 

«4 

Li 



u 



4) 

3 

4) 

3 



U 


01 


u 


iJ 



01 


W 

0 

<4 

O 

■4 




0) 

■o 

0 

C 

(> 

C 



3 

4) 


£ 


£ 




0) 

C 

0) 


4J 


iJ 




•w4 

•*4 

jj 

3 

4J 

3 



4) 


0) 

3 

O •* 

3 

O •» 

A 


ia 


> 

O 

4) 

U 

4) 

«J 






C w 


C iJ 

01 


c 

<N 

'4 

c 

..^ ifl 

c 

-H ^ 

u 




C 


Li 

•-4 

Li 



u 

C 

<4 


.. IQ 


.. iq 

«4.4 



<4 


• • 

a 

• • 

•« a 



0) 

X 

**4 O' 


0) c; D 


4) 01 4) 

£ 


4) 

4J 

o c 

C7* 4J ft. 

0^ iJ 0) 0) 

4J 


C 



<4 

<4 *0 

<4 

4 *0 

*0 


01 -H 

u 

4) U 


Li o 01 

•■4 

L4 O 0) 

4 


4) ^ 

4) 

a..ij 

>*4 

<4 C -• 

>*4 

•4 C 

4) 


<“• O 

O' 

>• 0) 

lO. 1 

la t 

U 


0. 

C 

jj 

u 

4) **4 A 

Li 

4) W 

£ 


3 £ 

O 

<4 

O 

01 O 4) 

o 

01 O 4) 


4) 

4J 

w 

4) 

Lt 

IQ. 

u 

la 

0) 

3 

4) 


£ «4^ 

U 

01 Li >. 

U 

V) L4 >4 

<4>4 

4) 


«*4 

u O 

i b) 

4) u •«. 

u 

•-4 4) iJ 

ia 

3 

O 



1 

£ 14) 


>Q 1 


CP 

'*4 


0) 

1 4) 

-^ £ >44J 

*4 

^ E >4 

-0 



O' 

T3 4-1 

1 4) 

4) 3 <4 >4 

4) 

4) 3 4 


£ -^4) 

C 4) O'- 

4) 4 

C 

^ O' 


0. 4) X Li 

4 X C 

O X 

—4 

o c 


<4 ^ O Li 

*J 

4 W 


X 4) 


U « lJ <4 3 

u 

-<■< 


0^ 


O'Li E U 

L4 40 

a 0 

0 

40 


C C 

01 0 M 

0) 

u 

4 01 


—i g -.14 Li 4» 

Li 

O' 

o 

X -0 

u 

<4 i 4) X 

X4 O. 01 

C 0) 

01 

40 

w 4) 

ia 4) « a^i 

'M O Li 

> 


0 

4) 40 

O lJ 4) 

40 4) 

*0 4 

E 

(TX 

40 C 

'-•'4C01'*- 

£ 40 

Li 

O 

c 

C — 

O'W -H 4) 0 

40 4) 0 

C w 

Li 

40 

0 

01 X LJ 

ax 4 

X 4 

'M 

U 4 

0 a 

C U 4 4) 

4) 40 U 



40 X 

a 

-H 4) 4 *0 *0 

*0 4 


40 

01 40 

4) 

01 E 01 4 

>*- «44 £ 

W 0 *0 

3 

/ 

4) -* 

4) 4 W 

tfi (J 

4 4) 

a 

1 01 


^ 0 *4^ 01 

V4- 0 

w >..• 


4) 

•-« •*- 


a 0 0 
sc u 
u u u c 
« o o 


<v < 

CP 


O -fl >*- 
CL w 
£ w ^ 
O ^ C 
i. 4) 

c -o 




a' 

o 


u o 
3 a 
a. w 

c '■ 


a Q. c 

u >« >« 

<Q ^ ^ 

a I 

V ^ ■ 

M C 


0 ) ^ 
-* o 


4> 3 
3 0 
0) 

3 C 
O- 


a a c 

Ui <« >* >^ u 

. <1S CL.U ^ (Q 

10) 10) 114) I 

^ as a.£ 

C >< 0) C C 1) 

^ I tn I w 

O ^ O O 
C tn ^ C tf) 
^ 0)ww — 

3 3 3 -• 4J 

0) 0 O O 3 

3 

C» c 


3 -• . 

0 0 3 

O 

C W 
— 3 C 
O —' . 


o 

C W 

— sc 

o -< 


y 

a 4) 


c 

u -M 

4) 


C 

-i 4) 


£, w U ' 

• 14) 4) 

4) 4^ w 
' 3 C C 
4) •-. -I 



1 40 

01 

3 

3 3 



4 

4) 

Li 





4 

'ft 




40 A A 

A 

> 



ii 

0 

1 y y 4) 

0 

0 

y 

4 

3 

0 

0 


4 y 

1 y 





3 

C 

C U 



> 

E 

4 










(ft II 






1 

) 4 4 3 

a 

a 4 


0 * a a 

4 

1 4 

1 'v 

4 

4 


i t 

1 


1 ( 



» 

i 







) 1 




1 


1 




J 

) Li Li 0* 


Jy 

0) 



L0 

ft) u 

1 C 

C 

C 


1 1 

1 

1 

1 1 



1 

1 







1 t 

•« 

•« 


1 01 (ft 

(ft 






1 4 4 

0) 

4) 

01 

C 

c 

if 

4) 

01 

C 4 

1 




















0) 


Li Vi 

y 






1 a a c 

ij 

y 

O 

•y 

y 

y 

y 

O 

•y a 

1 y 

y 

y 

















y 

3 


0) V 

4) 






1 4) 4, — 

4 

4 

IX 


4 

4 

IX 4) 

1 3 

3 

3 

















4 

4) 


XXX 






t Ift 01 

y 

y 

a y 


y 

y 

a y 01 

1 O 

0 

0 

















40 

3 


40 40 

40 







01 

0) 

O 

4 


01 

0) 

o 

4 

1 





4) 





• « 









01 

O* 


o ^ 

O 






1 01 (ft o o 

O 

y 

6 00 

o 

ij 

£ 01 

1 c 

c 

c 



a 







































> 





a 







V 



JtC 









1 







4) 



1 

















* 




n 






























































c 







4) 

4) 




>• a 

a a 









J 









4) 

1 


4) 



0 





c 


3 

3 




40 

> 











1 









-y 

1 


y 



-i 





0 


4) 

4) 




!40 

0< 

4) 


o o 

o 






1 







O 



1 


4 



u o 

o o o o 

40 ■« 


O O o O O 

Li 

>. 

4 

4) O 


















y 


0) 

TJ 

1 *» 

3 





.-i ftj 







0 

4 

40 

3 









y 


c 




•y 

c 



y 4) 

4) 


4) 

( 4) 

Li 


II ll 



01 Q. 

•• 






y 

Li 

01 

O' 

'1 

II • • 





*7 


3 


o 





o 


y 

3 X 

y 










































1 >« 

in 





4 40 

0 

4 

4 




Li 

4 

Li 

Li 


^ «-i 

—i 

• « 

• « 

• 4 

a a 

4J 


y 


01 


O 

y 

-y 

01 

C 3 

y 

4> 


1 40 

c 


—4 



Li 

40 

a a 


—« 

—• 



4) 

4) 

—* 

« •— —i 


Li 

y 

y 

>. > 

3 


— 


>. 


y 

•y 

•y 

> 

•y C 

01 

:z 

4 


—H 

4 

4 4 

4 

4 

40 X 

y 



4 

4 

4 

y 

£ 

40 

10 

4 

4 fT ri' rr* i> 

V 

4) 

y 

y 

O 


01 


4 



01 

(y 

4 

1 




> 


Li 

Ll Li 

Li 

Li 

y 

4 

V 

00 

Li 

Li 

Li 

40 

4) 

C 

C 

Li 

Li c c 

c 

O' O' o* 


1 

1 

V 

c 


y 

V 

V 

c 

1 y 4) 

■ >. 




1 c 

E 

3 

3 3 

3 

3 

E Li 

Li 

3 

3 

3 

3 

3 

4 

40 



3 

3 -• -i 

—4 

4) 

4) 

4) 

if 

4) 

1 

Tf 

4 


y 

— 

TJ 

4 

O 

y —• 

1 4 



.-4 

1 —^ 

01 

40 

40 40 

40 

40 

(ft 4 

4 

4) 

4) 

40 

40 

40 

40 

01 



40 

40 u y 

y 

40 

y 

y 

—4 

— 

1 4) 

y 

y 


4 

•y 

0 

L 

y 

-ft -y 




C 

1 --i 

*44 

4 

4 4 

4 

4 

(4d ft1 

X 

3 

3 

4 

4 

4 

(ft 

> 

y. 

.4, 

4 

4 40 40 

40 

c 

C 

C 

—i 

—i 

1 01 

c 

40 



(y 

c 

y 


IL-i 




•-i 

) O 

U 

C 

C C 

C 

C 

y 01 

y 

0* O* 

C 

C 

C 

o 

01 

O O 

C 

C 0) 01 

01 

—i 

.-i 



V4i 

1 3 



01 

if 




0) 

4) ! 

1 4 





























* ? 

4) 

4) 

0) 

C 

0 

0) 

4) 

4) 

c y 

' 










































W 


























1 3 1 

4 

4 

4 

X 


4 

4 

4 

X a 

1 C 



4 

1 4) 

























1 V 

y 

y 

y 

y 

4) 

y 

y 

iJ 

y y 

1 -y 




1 u 

























1 y 4) 3 

01 

01 

01 

4 

3 

01 

01 

01 

7 3 

1 X 



0) 

t 4 






c 



















I 3 y 0) 

O 

o 

o 

b 

4) 

O 

O 

O 

E O 

1 y 



4) 

1 40 






o 












40 







1 o a 3 





3 




1 1 

1 4 




1 01 

c 





-0 












C 







1 1 E O y 

y 

y 

y 

O y 

y 

y 

y 4) 

1 £ 



0 

1 

0 




4) 

40 

4) <N 

f-0 








(ft 

3 







1 0) O u 

3 

3 

3 

3 

y 

3 

3 

3 

3 y 

1 




1 —4 


01 



C 

—0 

O' 


<N 







4) 

0) 

o 







1 01 Li c 

a a a a 

C 

a a a a 4 

1 7? 



•«i 

1 4 

40 

0) 

4) 


—0 

(ft 

4 

4) 

0) 


(>J 

m 


> 

y 

3 -0 

y 0 ) 







1 3 Q.— 

y 

y 

y 

y 

-y 

y 

y 

y 

y 4) 

1 4 



Li 

1 £ 

(J 

c 

0) iJ 


X 

c 

(ft 

3 

3 





4 

4 

4) 

4 

1 E 



c 

c 



1 4 C Ll 

3 

3 

3 

3 

y 

3 

3 

3 

3 Li 

f O 



4 

1 a 

3 


4) 4 


u 

4 

(ft 

4) 

0) 

4) 

4) 

4) 

4) 

Li 

40 

■J 

y 

4) 4 


c 

0) 

4) 



t a 3 Oi 

O 

U 

0 

y 

Oi 

O 

0 

O 

o y 




> 


Li 

c 

40 40 

4) 

4 

Li 

4) 

3 


40 

40 

40 

40 

u 

01 

rr 


c c 


4) 





1 










1 




1 O' 40 

o 

4 0) 

40 

£ 

4.’ 

b 

CT 0* 

4 

4 

4 

4 

4 



Ui 

— ^ 







1 4) 4) 4) 

4) 

4) 

0) 

4) 

4) 

4) 

if 

4) 

if if 

1 4) 




1 

01 

4 

4J 

4 






40 

40 

40 

4i 

1 

y 

Li 

O 

— 6ft, 

0) 


4) 

01 



1 y y y 

y 

y 

y 

y 

y 

y 

y 

y 

y y 

1 y 



4 

( —• 

C 

E 

01 40 

u 

40 

40 

40 

40 

40 

0) 

01 

'01 

01 

V 

4) 

4) 


1 4 — 

— 

1) 

b 

—• 



13 3 3 

3 

3 

3 

3 

3 

3 

3 

3 

3 3 

1 3 



£ 

t 4 

-•H 


c 

(ft 

c 

C £ 

c 

c 

c 




o 

c 

40 

.0 

Li 

.0 C -• 

01 

b 

4 

01 



1 -0 T3 -O *0 

T5 

■o 

■D 

73 

73 

73 

■0 

73 73 

t 73 



O 

} -* 



4) 


4) 

4) y 

4) 

4) 

4) 

40 

.0 

40 


•— 

c 

C 

4) 

3 r*- 


4 

C 

>. 


X 

1 y 4) 4) 

4) 

4) 

4) 

4) 

if 

4) 

4> 

if 

4) if 

1 ft) 




1 u 

P 

4 

4 Li 

40 

u 

Li U 

Li 

Li 

Li 

Li 

Li 

w 

ax 

—i 

—i 

U 

a y 

— 

C 


— 

E 

y 

« y y y 

y 

y 

y 

y 

y 

y 

y 

u 

u y 

1 y 



O' 

1 

01 

40 

^ Li 

X 

Li 

Li 4 

Li 

Li 

Li 

4 

4 

4 

E 

y 

o 

0 

t- 

40 —« 40 

4 


u 

4 

01 

4 

• O 0 0 

o 

Cl 

o 

o 

o 

0 

o 

o 

0 o 

1 0 




1 C 

■4i 

0 

O 3 

4) 

3 

3 4) 

3 

3 

3 



4. 

4) 

4 

a 

_L 


3 -* 3 

C 

C 

3 

C 

•4i 

4) 

, y y y 

y 

y 

y 

y 

y 

y 

y 

y 

y y 

1 y 




1 -4 

u 

40 

40 O 

C 

(J 

’ ' 01 

y 

y 

U 

01 

01 

01 

40 

E 

o o 

c 

O o 

4 

— 

O 

4 

y 

L* 

1 a a a a 

a a a 

a a a 

a 

a a 

1 a 




87 

























V 

1 V 

1 3 

1 

V 

> V 1 

•* 

u 


1 —• 

1 u 

1 

u 

U 1 


V 


1 a 

1 1 

1 


C i 


0» 


1 3 

1 u 

1 

u 

C -4 1 

U 

3 

1 

t u 

1 0 

1 

M 

0 1 

V) <M —. 


c 


1 

1 

o 

la t 

til *—o 

V 


1 

1 1 

1 

1 

u t [ 

•• » » ^ 

X 

I 

1 <« 

1 jC 

1 

■0 

3 u 1 

w *■«» 

u 

TJ 

i 3 

1 (J 

1 


O. i 

a, M 4; ^ 

c 


1 cr 

1 U 

1 

••H 

U V 4 

0 o c c 

> -• 

V 

t u 

I <v 

1 

3 

3 *-• 1 

O -4 

u 

u 

1 0) 

1 V 

1 

£i 

o y 1 


V V 


1 ^ 

1 0f 

1 


t 

! w 1 1 

3 ax 

V 

1 

1 

1 

V 

V V 4 

E 4/ 4J 3 

cr 0 

u 

4 C 

t c 

1 

u 

W U 1 

«fl 3 3V 

\ o 

3 

1 0 

1 o 

1 

3 

3 3 1 

•*4 o. o. o. c 

1 

T3 

1 

1 

t 

T3 

■0 T3 1 

u o 


V 

1 u 

1 u 

J 

V 

V V ' 

»o 


O 

1 u 

1 u 

J 

y 

y y < 

c —• 


0 

1 c 

t c 

1 

0 

O 0 < 

••4 


u 

1 3 

i 3 

1 

u 

u U 1 

C V 


0. 

1 'w 

t >44 

1 

a 

a a 1 

"4 £ 



c c > 

1 

{ a 

1 


01 

1 

O’ 


aJ 4. 

c 


-4 -H 4i 

1 1 

1 > 

1 


V 

1 

c 


V C 


u 

1 

<9 *0 

1 *j 

1 >4-1 OJ 

*0 

j 

44 


y V 

* 

0 

•• •• V 

u 

1 i 

V V 


o 

«% •• 1 

u 

V 

—4 <-4 

V 

c 

^4 

> 0 

1 

• IM V 

V 

c 

V V t 

V 

•4 

>4- 1C 



c 

u y 

1 c 

>4 U U 

u 

V 

4J aJ 1 

u 

—4 

-4 V V 

••M 

V) 

Q iM 

■44 4i 

1 44 

4J 


u '*•* 

<n 1 

<ti 

vu 

y E X . 


V 

•M 

>44 k4 

1 >44 

-4 

ij 

V a 

k4 U 1 

a 


V V aJ 


o 

4J V .U 

44 1 

o 

44 g VI 

vt 

u 

V 1 

o 

u 

a c 

c 

•0 

O' 3 

X V 


44 C 


01 U 

a a 1 


3 

0t Iwi-. •« 

•*4 


0( V 0 

<Q aJ 

X c 

X 44 aJ 

w o V 

V V t 

o 

a 

c » a 


v 

C 0) 

X 

O 44 

V X U 

ki 

IX 

01 V) 1 

tj 

c 

E -• o» o 

A 


0 ) c 

y *j 

u 

X y V 


a E 

1 


—4 

v> '0 

II 


U V 

v 0) 

V .4 

y v 4j 


O 3 

VI V) 1 



» 44 


w 

H Z 

V o 

V 

V E » 


J c 



V 

y V u 1 

V 

A 



0) a 

V 



1 


X 

E £ 

*0 

II u 


1 c 

1 0 

W X 



r 

y 

aJ 

4m ^ 0) 

0 

V 

e 

1 44 

1 4J 

1 a 



1 

1 


0 C W 

E 

K X 


q> V < 
.. e 6 c 

^ ^ .-4 

O C C 

^ V I e 
^ 0) 

-. -4 C -* 4-> 
O Cp 

o » -t X 

I-' I— V 

4^ 4J 4^ 


« cc, r 

E 02 

m u v 

'M I c 

y CJ -M 

^ 3: -« 

c >4 <1 

V <4-« C Z 4J 
□.--4 •» O 3 

VO u -H c a 

01 *0 'M 4J V 


cvov**^ -4 cx a.j= 

--• 0) a. (7i-«^ V V V V 9 


88 


--query the user for the way that the global analysis graph Is to 
--be built. A slack based construction will lead to a breadth first 













queue based construction will lead to a depth 


AJ » II 
M «) «« ' 

^ tf) 

.M M ^ 'M • 
Ct« 

—* tf) 

••X II ' 

A «J C (A •* 
O TJ ■« >* 

^ X 

^ u c c ^ ' 

o ai -.H 

y « ^ ^ 5) V 

I— « . 

U U AJ 

C « 3 4 > •*- 

•o^ tf) 0« O'**^ 

CP 

II 

ax 

o 


SA. SM (A •<» { 

I o -* VI « 

aJ VI •« V4 va 
3 4> y c 

a— —» — X tj 

aj ^ 6 y c c 

•• 3 C V> »9 -A .. 

a o ! 'fc- 41 o ' 
* o 1 C lu u a f 
J o 4) kJ \ 

: U I 3 41 4) W ( 

) <D *0 a VI VI >11 < 

-o 41 •-> O O V < 

c u 41 3-«-«-»- 
41 U o y y y 


89 









90 












91 











clear token; 



92 


get(token, total machines, convlengt 








JZ 

V 

3 


V •* c 
c 3) 

JZ II o 
u II •• w 
<n •• 

e X c 
I X 4) V 
-t V 7J ^ 
in v c o 

u C 

O -• II 
u 1C u 

4 ) 41 

C Jitf 4) 
3 - 10 *-' 

u o 


a 

o 

o 


X 

« 

V 

c 


3 


4) 

« 

<Q C 

g «q 

1 

u ^ 

« 

3 

O ^ 

^ ■*• 
A O’ 

If C X 
« 4> 
*j *-< *0 
V I c 

tfl 41 ^ 

C I 

• V 

c c 

o 


a 

o 

o 


4) 

V 

c 


3 

Xi 

« — 
C X 
4> 

-* *3 

C 

S'-! 

^ 4» 
4 J C 

“3 

C 

•q u 


a 

o 

o 


41 

*0 


3 


C 

V 


a 

o 

o 


3 

jQ 

I- 

4) 

C X 

— g 

-4 -O 

c 
c - 
V I 
jC 4> 
4J C 


CL 

O 

o 


X 

4> 

■o 

c 


3 


a 

o 

o 


X 

4) 

*0 

c 


3 

i3 

I •<* 
0) ^ 
C X 

-• “O 
c 
c • 


V 


I 


> 3 

.X 
«j 4) 
O* C 
c •-* 
V 

III 


U X 
3 4) 
k4 73 
*J C 


ro 


^ c 
o -* « 

f<N 1C 

w g ^ 

^ tf) —« 4) 
O'*- C 
0 0 4)-’ 

I—^ 
U -- 

4) 3 X 

X a 3 


-H X 
4) 

V *0 
C 
X 
4) 

•o C 
C 4) 

10 
4) u 
• C ^ 

I a— c 

O —' 4) 
O 

— 4) O 

-o — 

C X 
4) 3 


I 

X ♦ 
4) 

*0 X 
C 4) 
-* *0 
• c 
c -• 

4) I 
J< 4) 
O C 


I 

X 

41 X 
73 4) 

C “0 
•H C 

•» 

c la 

4) 4) O 

jt ^ c o 


4) 

I •«. 
> — 
C r«j 
O 

O A 


tf) X 
4) *J 
*0 

4J 3 

<n — 

I . •% c 

-H «n «»-- 4 » 

4» ^ -X 

W W HO 

O n •• *J 

*J fcj «• 

V) X C 
* I X 4) 4) 
C -« 41 *0 -X 
41 *0 C O 

*j C u 

O O -* I 
u ^ I C 

w —. 4 , 4 ) ^ 

*j 4J C ^ 4) 
4» 3 O —' 
CT iJ O 


4) 


X 

4) 




w *0 

*o —• 

u 

m *0 

73 ^ 



C 

C 

O' 

^ c 

C 


X 

O 

*9 »- 

c 

0 

u 


u 

1 

4) 

4) 

1 

4) 


O' 

u ^ 



U 1-- 

r-l <4^ 


c 

4) 


l*^ 

V 

IM 

•— 

4) 

3 

♦ 3 

> — 

3 

- 3 

■•k 


O ^ 

X ■* -1 

C tN 

0 ^ 

X 

♦ ^ 

1 

— X 

X i 

O 

—1 X 

X 

1 

> 

4> ♦ 

w 4) X ♦ 

O A 

4J •* 

U 4) 

X •► 

C 

A O' 

O' C 4) 

II 

A O' 

o* c 

4) 

o 

<1 C X 

C — "0 X 


II C X 

c — 

T3 X 

0 

4) 4) 

O -« C 4) 

4) X 

4) 4) 

4) ^ 

C 4) 


fcj — *0 

— - TJ 

C t-i 

U -1 *0 

—4 

- T3 

•k 

4) 1C 

I II IC 

-I -0 

4) 1 C 

1 II 

1 C 

4) 

V) 4) -- 

o - c - 

X -* 

vt 4) 

o 

C -I 

fcJ 

C I 

C 4) 1 

0 3 

C 1 

c 

4) 1 



A •» 

I) ^ 
O 
4) <N 
C —' 


O X II 
3 4) •• 
*- "O 
C X 
<n O 
c ro 

- 4) c 
ic — 

e -I I 

V) —• 4; 

— C 
0 4)-' 


— 4) 

—• X O C 
4) u —• 
V “O — 
C <1 

X -- •• II 
I 


3 X 
a 3 


V 
73 

C 4> O X 

— -O 4) 

lo c *0 

4) C 

•«. C I-- •* 

a -i c c I a 

O —• 4) 4) 4) o 

o JX c o 

— 4) o o — — 

-- *j «J —• 

■o -• 73 

C X c 

4) 3 4) 


4J C ^ 

c c 

ox *«0 

U O *— -X 

u 'll It O 
3 e 


4) 


I •• 

W X C 

C X 4) 4) 

4) 4) *0 ^ 

U -o C O 

_ U C - *J 

O 3 -• II 

u O IC u 

w w g g ^ 

hj C JX 4) 

O 3 -I O —* 

O’ Q.— O 


• JX 

c -H C -I X o c 

o 4) U •- 

V —* V "O ^ 

U C II 

y X II X II 

3 4)- 4) I •• 

u 73 “OCX 

4J C X C 4) 3) X 

• » OT 4 ) jX TJ lU 

c m 1 o c TJ 

AO-‘4)C 4)U—iC 

II <N i C -I C M 

6 — I a— c c 1 

4)^(n—•OO'— 4)4)4) 

UO'*-' CO JX^C 

flooa)-^— 4 ) 00 - 


lA U U ■ 


41 


3 X 
a 3 


73 - 
C X 
4) 3 


TJ 

C 


41 

O' 


93 





94 


line in3ex := line index 







a 



a 



0 


a 

o 



0 


o 

0 





0 

^■4 









• 



« 



• 



• 



II 



N 



■Ns 


N 

•Ns 



— 






X 


X 

X 



3 


o 

V 



'O 


-9 

tJ 



c 


C 

c 





1 

*^1 



1 

V 


1 

« 

0 



c 


c 

c 



•«4 


















u 


u 

u 



V 


V 

V 





w 

<44 






'W 



3 


3 

3 



ia 


X 

X 



i*« 


1 

1 •% 



V ^ 


V 

V -N 



C X 


c 

C X 






•M 41 



— -o 



*9 



c 



C 



c 


c 

c -• 



V 1 


« 

V 1 



.c V 


X 

X « 



w c 


.u 

U C 




• « 




•« 

■9 '-• 


*9 

*9 «“* 



C 

X 

c 

C ^ 


X 

u 

u 

<« 

<9 u 


u 

V 

0» 


V 


O' 

^ *M •« 

c 


•-4 VM 


c 

Vw i-t 

V 



••H 

V 

♦ 3 •* 


«« 

> 3 

«« 


X > 

1 •% 

■■4 

X 

•4 <>4 

!•« 

X 1 

> -» 

X 

X 1 

1 

> -*. 

aJ V X > 

C oi 

«J > 

w 4) 

X + 

C <N 

9% C V 

o 

O' 

O' C 

V 

0 

C -9 X 

O A 

C X 

C 

T3 X 

y A 

V -« C V 

II 

V V 

4) — 

C V 

II 

-« --t -9 

« 

*9 


9 

* 

IN 1C 

X 

1C 

1 11 

1C 

<N X 

V .. c -H 

lu 

(}) 

V •• 

c -• 

Iw 

C V 

1 V *9 

C 1 

c 

« 

1 V 9 

V 

iJ -< 

-< V 

■«4 M 

M V 

*J --4 

-• X o c 

^ 3 

-« c 

—• X 

0 c 

3 

9 4J SH 

4J 


V 

iJ 

u 

V ^9 

VI * 

V -« 

V -9 

««4 

tf) • 

C II 

1^ 

• * 

c 

II 

NN 

X --• •• II 

u 1 

h-4 X II 

X ->4 

•♦ H 

W 1 


^ iJ II -1 
I 4J , 

I « iJ ■ 

I <n X 

* IV ' 

• >% C *9 I 

I a V ^ c - 

» o -»< ^ - 

: o a u I 

»^u<nc 

“OUUM- 
C V 3 O . 
V O' Q. w 


TJ C X 
C V V X 

> -• J< *9 V 

I I O C “O 

V *J c 

• ••. C M 

I a--* c c 

> O V V V 

: o ^ M c 

• ^ ^ o O ’■» 

• ^ 

-9 -. 

C £ 

V 3 


• « C ^ V 

a V ^ TJ < 

O -x >9 C ■ 
o Q u •* 

—• w VI ‘ ' 

'9 C . 

C V 3 — 
a» O' a.'-* 


VI V c Q. 

u C o 

V *J o 
X -* X 3 -* 

u ' a 

O a-* *0 

3 0 C 

C Q.^ V 

V 


95 

















procedure Enqueue(Q : in out Queue; 
beqin 

it Q.tail = MAX then 
raise QueueFull; 



97 


return true; 
end IsEqual; 








98 










pcocedute Push(S : in out Stack; E : In Item) Is 
beqin 

if S.latest - MAX then 
raise StackFull; 


< u CO a 
irt -go 

—' c a. 

V V 

*0 


•-« .» 

V) M l; Q. 

tfi -O O 


w c — 

'J - 1) 

C T 
3 V 


99 









Author : Matthew J. Rothltsberqer. Captain, U. S. Army 

Date : 10 February 1992 

Revised : 

System : Sun 4 Workstation 


I 


n 

H 


JZ u 

li 

H 


u * 

tt 

W 

«» 

«« ^ 

II 

M 


£ CM 

H 

II 


1 

II 

• II 

c 

«N 41 

N 

II 


41 3 

H 

« H 

4) 

.-4 4) 

11 

<n n 


a 3 

M 

>-* H 

O 

3 0* 

II 

II 

O 

u • 

M 

<4.1 H 


<N 

n 

••v It 


11 41 

II 

4) II 

c 

•-N 

It 

Z II 

u 

41 a 

II 

U II 

3 

U 3 

II 

aJ II 

4J 


II 

11 

41 

aJ 

II 

C II 

u 

M It 


4 11 


1 

M 

41 It 


CM ^ 

H 

w II 

41 

4) -a 


0 II 

a. 

c <q 

II 

0 M 

> 

^ aJ 

II 

^ II 

aJ 

X • 

H 

It 

1 

U »-4 

II 

II 

-0 


II 

II 

U 

E 1 

II 

(rt ii 

Q 

. ^ 

H 

c n 

U 

a 

II 

U II 

41 

41 41 

II 

3 M 

ka 

3 

II 

*j n 

i 

a cr 

n 

41 II 

41 

3 • 

:} 

aC II 

u 

aJ »■* 


II 

• « 

l-H 

II 

41 


II 

a 

41 

II 

> 

C aJ 

II 

4.1 

—a • 

II 

1 

-C <N C 

II 

■0 

y ^ 41 

11 

u 

1 £ 

H 

0 

E 41 C aJ 

II 

0 

• 3 41 

II 

41 

<N 41 £ — 

II 

u 

4) 3 u O 

II 

1 

O’ 

II 

41 

a • II 

:i 

aJ 

3 <N O 

II 


aJ 41 ^ 

II 

aJ 


II 

tn 

II a. 

II 

o 

3 — aJ 

II 


41 w -« • 

II 

c 


II 


II w fN 

[| 


* 1 

II 

• • 

Vt —a <N 41 

II 


1—* — a •« 

'1 


'll 1 41 41 

II 

41 

41 w 41 3 3 

II 


C •30’^ 

II 

a 

<N 41 • k.1 

i| 

3 

£ ^ 3 ^ 

II 


U lO* 41 C 

<1 


•Tj 41 • —• u 

II 


6 3 ^ a 3 

!» 


• 41 41 3 kJ 

il 

3 

^ 3 -4 aJ 4) 

II 

O’ 

41 0* a—' ^ 

II 

Ul 

-* 3 

II 

<n 

a»- aJ <M 

II 


3 41 w-a 

II 


aJ 

i| 

c 

a-*- 

II 

o 

—’ 3 -« 

II 



1 

aJ 

c <*- — 

1 

U 

-.a —« 

i| 

C 

O' 

1 

3 

41 

1 


Xi 


a 

•z V 

V ^ z 

z -n 
O’ 3 C 
. O’ W 
^ UJ z 

V V} w 

— *-l 

a'-' u 4; 


w u u 

in *0 ^ 

>*- -* c • 

I V a 


100 

















g 






«i 


X 

Li ^ 






g 


0 

3 X « 






> 3 

Li 

g 

0 g M 






u ^ 

C 

g 

> id X g 


1 




4 g g 

g 

B 

c g Li u *0 

1 

II 




u 3 > 

u 

g Li g o 

H 

11 

6 


• 

0 g 

M 'O 

u 0 

c 3 > c 

n 

N 

g 


g 

a 3 g 

3 c 

g M 

<L4 dH 

a 

II 

4J 


u 

B (TE 

u g 

Li ^ 

0 0 3 > 'Ld 

It 


M 


g 

g g 


c 

0. O M O 

a 

a 

>% 


u 

w g M 

g rs 

^ g 

iJ i M 

a 

a 

M 

M 

M 

X 

X g 

o c 

3 g O' g w 

>1 

a 


.dd 


< 9 

Li dJ 

a 0 

ox eg 

II 


X 


id 

JZ 

g 

-0 

Li C T3 X 

ii 

1 

u 

g 

g 

*0 u 

E g 

g 

M g g £ 

II 

a 

g 

U X 

• C 

o u X 

C U u *0 3 

II 


U iJ o o 


c c 


o c 


Qd 3 4J *0 4 
'0 0 4 ) 

C 

MO O M 'O O 

OUO^4JO<«0*3«^Cj=U3C 

ca^jOM'OE'Oo ««uo> o 
-< o 0 ‘ 0 'fl^'^ aiu* 

XMMOWCMC'O 


I o « 
I 'o a.ja 
o <0 c 


41 

■V 


o c 

jC O 


ij c 

M M 

u 

<S U 

9 9 
c 

^ E 
X O 
U u 

M •M 

E 

4) 

*0 3 
C 

<« M 
> 

T 5 
4} g 
C C £ 

id U 

^ 3 w 
U <TI 

%•«.*»<« 4) O 

4 «-^ oj £ U M 
I I I 


U C ^ C 
^XO'dO'^ 9 9 

E4j« 4 id^^ mu 

«i u <« c 'O 


M U 


o a H 
o It 


4) 

a 


o u c 

3 -d 

c 

g g X 

.H 

3 

II 


>« 



•L 

*L 

3 0^0 

a 

3 g 

id g g 


g g 

il 


Li ^ 

4—d 




^ iLd C 

c 

O *0 

g g c X 

g 

3 X 

II 


1 g 

g 

g 



g Li 

M .Ld g iLd 0 

3 0 


tr L» 

il 


M U 

u 

w 



w E lx 

g M 

c 

g g X g 

0 


u 

• l 

C 3 

3 

3 

3 

3 

0 X Li «l 

c u * 


3 u u g 

Li 

g Ud 

R 

g 

■dd Li 

Li 

Li 

Li 

Li 

^ Li C 

•dd g M 

0 Tl 

O' g g u 


C 0 

H 

0. 


g 

g 

g 

g 

-<'d g X X g 

c g 

^ X E 

*0 


U 


o c 

c 

e 

c 

c 

X id id 

0 g o 

'O Li z 

g X -o 

n 

Li 






CL 0 <-« Li 

g *0 

« Tg 

O X <0 

g 

g g 

II 

1 

♦• *• 

•• 

♦• 

•• 



E L 


g id g Cl. 

3 

g g 

II 

> 






w. ^ > g 

X Li 


Li g g o 

•o 

E X 

» 

g 

•« M U 






41 

1 a 

) >* 

) u 

I 

TJ 

•% •» O 
4> 4t U 
Ou Q. 4t 
>< >« u ^ 
u u ) b 
t i4) 

M *J 9 
C C 

-4 mH *j O 

-H -d M o 
10 t/) O 


> X 
u -• 0 


a > <0 
E 


> 4t 
4) 


II 


>. 



> g 0 g g id <«. 

g 3 g 

C id *0 

Li 

m X 


II 


E 



4 i X g g O'*- 

Li g X 

g 0 g 

c 

g Li 


II 


u 



-d H g 

C Li 

X 'Ld ^ 

—d 

Li 


11 


< 



—1 *0 id "d- g • 


3 g 


g O 


ti 





-d o 0 X VI 

X g E 

g w 

V) 

U Li 


II 


• 



J 3 • Jft -d 4 J Li 

Li X 0 

VI dd Li 


(A 


ti 


V) 



g V) g o-d M M 

Li U 

g g M 


u 


a 





X c g g g 

U W 

Li Li C 

g 

g g 


II 


« 



g o X 3 0 X 

0 0 

g (0 O 

N 

C Li 


II 





g --d g *0 -d g 

•Ld *J *0 

C E 

••■d 

•d C 







g u egg 

g 

--d -d 0 

M X -• 







id -d M g > c >»x id ? 

6 g tJ 


g o 




C 



M o "O 

g g g 

U .-d 


g a It 






EC *0 g *3 g 

Li Li 

g Li g 

g 

E 




g 



g g g g X g 

g c M 

Li c X 

g 

g 

II 



Li 



Li id Li ^ Li M id 

E -d *j 


Li 

g X 




a. 



M Li g g ^ 

a g 

g c 

V) 

U Li 




g 



> Li g *0 g 

g a w 

id g g 

>N. 

g 

II 



o 



« ^ g X X 


3 X g 

g 

-0 







g 0 gLi'LdM! M'OLi 

3 

g c 







g 0 g X u •-« 

Ld -.d 

g V) 

g 

u g 




id 



X Li c g g 

• 

g id < 

3 

3 




g 


o 

u .«d id 0 g 'Ld 

• X id 

o o 

O'-O - 




O' 



ax g Li M -d 

gag 

u 


g X 




id 


sg 

M 3 g 

•o g *i 

a % « 

Ld 

g a 




g 



*0 g VI *0 VI g 

O id c 

<0 > g 

o g 




X 


c 

.-H g E c g Cl g 

C O’ — 

VI g Li 


L. L. 



X 

M 


o *«d > o Li O V) 

o 

-d Li a 

c 

a O' 



a 


c 


3 g X -* g 

T> g ax g e 

—d 




g 

—♦ <N 

o 

MXxgLi 3(00 

C X 

H Li g 

o 

VI g 



id 

X O' 

•«d 

id 

g "d u Cl u 

3 U ^ 

M 

a 

£ 



cr 

g Li O' 

Li 

g 

g c bj <0 Li CD 

0 

. (0 


x: Li 

II 



. O -d 

g > 

Id g cm g 

^ 0 

> >•-« 

X 

Li 

II 


9 -m 9 
d & 4 J 

1 } ^ d» c 


1 o 
^ w a 

C 3 t 


>. <Tt ■* 

M C C ( 

4J 4J 4J 

3 3 3 
O O O 

C C C C 


a 

3 

W 


3 3 
O O 


I 


a 
E 
c o 
-* u 


^ I I 

id g g 

M «J 4J 


M U 

g <« 
"O u 

O M 

c o 


g 


I 1 

» w *0 

o c 


3 U 


C < 

id O 


-d .id 

--d n <11 

« -d 3 
O J 3 S 
l<q g ^ 
-o .c ^ g 
-t O U Cl, 

-«d 4 J 

3 g o 
12 U z ^ 


M 

^ < g g M 
u Q u -o J 
0<000'0WM 


a g c ^ 

3 JZ 


(fl iTJ 


■0 w 


c 

E >-• II 
0^11 
■fl < >. It 

TJ — II 


[u ^ 

9 m m u 

C i J V) U ^ 4 d 

»j ij o g 

X i« id * 

U 13 Q. £ g 

w U O 3 4-1 

£ M M w C 


£ 

a 

-0 


c-^c-'iwo.ogioggin .g*.* 
XCL >-dg CEwlj'^CC'^.viwC 
dr-w govtggg ug-'d..dg*oa.g 

'-44j4jgg3X£3cgid 
cid-«d<4 ^ac *o<oguug3Uid 
3g£4-»M—‘30C0C3't<n30O3 

co>td«'fl<tfwo— c-*crEEcr.Q 


m 









II 

O 


u m 

g 




.. 

.. 

• • 

•• •• 


n 

1 

g 

9 1 

eg Li 









a 

*0 

u 

Li «N 

Ld Ld g 








c 

a 


g 

c z 

g g u 








0 



Li 

3 g 

■o 73 VI 









a 

3 

<0 

o 1 -d fN % U 

o 










X 

O 

g 1 1 g g 

o o 


g 





V 

9 a 

>1 



1 g 0 d .1 

X X -d 






Ld 


6 -• -d 

II 

9 

Li 

g c c g VI 

[ 1 g 

3 



g 


0 

m 

0 --d Li 

•1 

Id 

c 

Id .-d -d Li 1 

0 41 -d 

9 




g 

X 

9 —• 

Li a g 

II 

3 

g 

g X X VI Li 

g g Li 

C 


ti 

u 


Li 

Li > 

MEM 


*o 

u 

Li g g IX 

,0 --d 






g 


>d o g 

II 

g 

g 

M g g '-d g 

—• ^ c 




H 

Cl. 

< 

o oe 

vj U Q 

II 

g 

ao E E z: c 

a a-^ 


a 







II 

o 





g 





1 1 

1 1 1 1 1 1 1 1 1 1 

I 1 1 1 1 1 1 1 

Ld 





m 





1 1 

1 1 I 1 1 1 1 1 1 1 

t 1 1 1 1 1 1 1 

a 






101 













Title : LinkGstate 

File : reachability.a 

Author : Matthew J. Rothllsberger, Captain, U. S. Army 

Date : 10 February 1992 


II 

N 

It 

n 

H 

M 

II 

N 

N 

II 

II 

I 

9 

I 

II 

M 

n 

H 

R 

n 

» 

It 

II 

II 

H 

II 

tt 

II 

tl 

II 

R 

R 

II 

II 

U 

U 

II 


O 4 J aJ 
O O C 
U C 3 

o 

9 U 
*0 « U 
O «l <« 
C >9 
U O 

« 

■U « 

4J X o 

•I AJ 

c 

w -o 
.0 O 
O € 

09 C 41 
9 J3 
3 « 

« u c 
c o 
n u 

9 9 


R 

II 

II 

II 

R 

II 

R 

II 

n 

H 

H 

I 

I 
R 
R 

a 

R 

R 

n 

II 
II 
II 
R 
R 
U 
II 
H 


C aJ 3 

-O 

^0 4) 
aJ U 
O O 


kJ Aj ka 

R 

•* a 


3 a 

1 

41 > 


u a 

H 

Qa AJ 


4 ) k<i ^ 

H 

> 1 


aJ 3 C 

H 

AJ C 


G 0 9 

n 

10 


•k 4 ka 

n 

*0 — 


0 VI ka 

ii 

ka 


Oa-A 3 

H 

0 a« a« (rt 


0 

R 

o v» 4 » 4 > -A 


— 0 

R 

4 ) C ka O. O. 


— cr 41 

11 

ka <4 41 > 


3 9^ 

II 

1 ka aJ aJ aJ C 


C VI AJ 

II 

41 aJ 0 1 1 A 9 


1 VI 

II 

aJ 1 <4 JR JR 41 


e 41 ka 

II 

fi ka C C 


0 £ 0 

II 

W « <4 -A -a 0 


c 

R 

Vt Aka £ -a -a Q 


<« • 

N 

O U U O O .o 


aJ 41 

II 


C 

X * aJ 

II 

kJ 4 J «J kJ kJ *J 

9 

4 J -0 <4 

II 

3 3 3 3 3 3 

X 

C 41 -• 

H 

0 O O O O O 

aJ 

VI ka 

11 



« 3 a 

II 

C C C C C C 

,aa 

O £ Q 

U 

•aa ^ -aa -aa 

<-a 

• aJ 41 ka 

N 



V 0 U Q. 

R 


3 

VI <4 a 

H 


C 

C‘0 9 

II 

4 ) 


0 C VI 

II 

kJ 

II 

c -A -H c 41 

R 



0 VI IM 0 ka 

II 

aJ 41 

.X 

^ ka -a 0 * 

II 

Vt aJ 

c 

kJ 41 « kJ E VI 

U 

O 

•aa 

•4 > ka ^ JR 

H 

IaJ 


AJ 3 VI « C 

n 

aj <n 41 

o 

VI **3 C ^ 

II 

C O C 



M 9 9 -< 

w a u u >« 

o < O aJ *0 41 

a u e ka 

X o 

V -A -A 6 

“3 w 4> 

C u -OkA 

3 41 ^ O O 

V) > t- <-* E »*- 


VI 41 IO 

a C VI ka aJ 

e tfl u X 3 

41 ka V 3 V 41 

ij W £ U C C 


c 

o 

ka u 

V 4) a 

6 a-a ^ 

VI « I-* 

u a. u 

> VI £ VI 

41 > O 41 

<£ (/) u o 

I I I I I 

I I I I I 


3 

TJ 

41 


41 Awf 
09^ 


o o o 


V . . 

V V 

4j 

^ -4 -4 
tfl w *-> 
O VI VI 
lO O 


41 

“O 

O 

c 

I 

3 

41 

C 


c *-J t-f 

41 C C 
u 41 41 
ka ka w 
3 ka ka 

0 3 3 
—' y u 


VI 41 
C C U 
9 9 9 

£ •« ka 4.i 
aJ (0 . 


VI 


O 








c 

C 





• « 

• » 

4 > 

*4 




V) 

4 > 

9 

£ 

>k ka 


c 


C 

iJ 

V) 

aJ 

<0 *j 

•* 

9 


-tl. 

9 



to 

4 ) 

JZ 


ka 

U 

'4 

<a« 

41 (I 

M 

aJ 

to 

U 

to 

ika 

a^ 

E •• 



V) 


O 


—a 


<« 


V 

II 

1 

II 

3 

II C 

**a 


E 


u 

• • 

C 

•• o 


aM 



X 



•aA 

R 

3 

II 

c 

V 

V 

II 

9 AJ 


X 
C 4 ) 

o c 


H 41 n 

^ 41 VI 
C VI C JR 
-4 ift *4 C 
a-a 4; ka --a 
O £ aj 
•COO 


41 

V 
O 
c 

3* 

V 

c 


II 4 ) aJ II 
^ •• 

JR V) 

C VI C JR 

--a VI <4 C 

-a 41 ka -a 

O E kV -• '■ 

• O O O 

m . . • c 

m f*i m 4)- 
-A c C C kV 


TJ 

O 

c 

I 

3 

9 

C 


O c c 

I I 41 

4 ^ aJ ka 
C O W «k4 
« C 3 — 
ka — O 


c c c o 
V V V c 

ka ka U ^ 
ka ka U 
3 3 3 '•-a 
y y 0 -4 


ka «ka 
3 -A 
0 

V 

C 

9 


3 

0 3 3 3^ 
y U y • 


a-a 4) u 
O E kV 
• O O 
^ . . 
^ ^ ^ 
C JR JR 

-- c c 




X (N <N <N 

9 


a^ 





V 


aJ 

4> 

4) 


X 

C X X X X 

a-a 


a^ 




kJ 


9 

AJ 

jj 

C 

c 

-* c c c 

aJ 

• 

4> 




4) 

4 


aJ 

9 

4 

V 

•^ 



9 

aJ 

V 

9 

9 

C 

kJ 


to 

u 

AJ 

£ 


• ^ aa a^ 


aJ 

4 

aJ 

u 

u 

o 

Vt 


O 

to 

to 

. u 

• 

4^ . . . 

V 

9 

AJ 

4 

4 

4 


lO 



lO O 


41 

aj i; 0 41 

c 

u 

• vf 

aJ 

AJ 

aJ 

3 


1 

aJ 

1 

1 

1 


*4 aJ aJ W 

0 

to 

O 

Vt 

to 

to 

9 

aJ 


c 

aJ 

aJ 

4; 

9 

^ >4 4 


lO 


lO O O 

C 

C 


41 

c 

c 

c 

aa 

Vt .J iJ aJ 

3 

1 

kJ 

1 

1 

1 1 

1 

9 


u 

41 

9 

o 

V) 

O V) to Vt 

41 

kJ 

c 

aJ 

aJ 

aJ 

aJ 

ka 

• k 

ka 

ka 

u 


lO 

'O o o 

C 

c 

9 

c 

c 

c 

0 

ka 

IM 

3 

U 

ka 

' 2 

A.I 1 1 1 

1 

V 

u 

V 

4> 

41 

c 

3 

•aa 

O 

3 

3 

I 4) 

w 

C AJ AJ AJ 

kJ 

ka •* 

u 

ka 

ka 

u 


O 



O 

y 


O' 

41 

JQ 


102 








putline('All transition pointers used 


c 

‘O **■* 


a 

g ' 
VI a 

iM 0* 

3 

■a « 

V j: 


•« a 

4 ) >< 
a«j 
> f 

u c 

so 

*0 

u u 
O 

O «1 

o c 
u 


4j .ae 

u a. 
o >.-> 


V w U t'Q 
*J I ^ u 

g u c o 

*J V) *0 •-< . 

VI V«-l £ -H 

o y y o 

4J fcj W W W 

3 3 3 3 3 

o o o o o 

c c c c c 


0 

a 


0 

*0 

o 

c 

I 

Q. 

g 

O 


0 





(J 


3 






• 


c 4 ) 4 ) 






0 

u 


V) 



1 


1 C C 





La 

c 

4 ) 


w 

a« 


1 


4 ) .-a ^ 




c 

41 


X 


4 ) 

o 


1 


aJ X X 


VI 


0 

w 

N 

6 


E T 3 


1 


u y y 

a c 

VI 


C 


3 •• 



o 


1 


a^ <D TS 

g 

■D 

vs 

La 

3 




« 

c 


1 


<n E E 

V 

La 

0 

3 

0 

0 4 ) 

|g 


V) 

1 


I 



u 


g 

y 

u 

a a 

4 ) 4 ; 


C 

a 


t 


E 4 ) 0 







a^ aJ 


-D 

b 


1 


41 ^ 

0 





aJ a^ C C 

■D 


La 

41 


1 


aj a a 

aJ 





1 -D-D 

a^ <1 


W 

a_l 


1 


«n 3 3 

ID 





^ ^ V 4 ) 

V» •• 





1 


>• aJ aJ 

aJ 





C C — —• 

1 


« 

It 


1 


V) o O 

VS 





-a — o O 

g 4 > 


a 



1 








—. — o o 



E 



i 


U La La 

1 





O O X X 

a^ a 0 

0 

4 ) 

O 

1 

O 

4 ) V 4 ) 







v» 3 

3 

u 


aJ 

1 

u 

aJ aJ a-i 

La 






>a aJ 

w 



ID 

1 

C 

C C C 


•» o ^ 
o « 


^ «J 4J 

w v) (O 
*^0 0 



o 

1 

1 0 

1 


0 u 


O o tf) 

^ a-t 


1 L 4 C 

1 

V 

c a 3 

1 

C C 3 o 

C 1 - 

C ■'* 

Jit 

1 a-'* 

t 

La 

1 ; V 

u 

1 1 o 

1 4 ) 4 ) 

V 

c 

1 

1 

3 

a a c 

O 

a a c 

La in 

73 


1 tf) 41 

1 

T 3 

E g 

1 w 

EE iC 

w c 

C 

_] 

1 -• 73 

1 

4 ) 

41 41 vs 

La C 

4 ^ 4 ) VI -a 

3 ■-< 

V 


1 X 0 

1 

O 

aJ aJ --- 

CJ -a 

aJ •“* J 

y 


73 

1 H C 

1 

O 


O' 


73 


C 

t 1 t 

1 

La 


4 > 


C 


4 S 

t 1 1 

1 

a 


X 


V 


4 ) 

c ^ 

3 Q. 
O 3 
U U 

4 ) g 
^ 4 ) 
0 . 4 .> 


4 ) 

-C ^ 
IS 

4 ) u 
N 

^ c 
<« 

-4 -o 


C 3 

• » ^ 


CL 

O 


4 ) 

x: 


o 

cu 


4 ) 


a t 
> 


<ts u *» *» 

U 4 ) <N 
V) u II 

I C V V 

—« 3 aJ W 
^TJ O 'TS TS ' 
J3 U *J *J 
0 \m tn 
— a; 11 

^ aJ W aJ 
«Q U U 
3 ^ 

4 ; V) u aJ 
C O « W 


a 

3 


O 4 ) <M O 

a w I la 

I** 'a 4 ) 4 > I 

4) iV aJ a^ 4> 

-a a-* V) ifl <0 ^ 

CU 'O O aJ aJ a. 

3 aJ S « m 3 

aJ V) aJ I laJ 

lO C 4 > U I 
Q. 14; u u a 

g 0 . La *0 g 

4; O 'Q a.^ a^ 4) 

4^ aJ (X V) tn ^ 


tl <1 ' (I II II II II II II II 


4) 4) 
aJ aJ 
La <TS ID 
V aJ aJ 
^ V) (0 

g i I 

3 ' 


O O 

Q. a 

I I 

4 ) V 


<D ^ 


, ^ - tn 

^ v» o o •* 

aao.a'QO looi lo 

3333a-i laJaJaJ«^C 
aJaJaJa^VSa^C'D'D'D-'* 

I I I lO C 4) a-» aJ —• 

aaaa idiwaviviaj i 

gegga*-^ I I-- 5 

Va>4)4;0'Q3<'-«<NC4l 
aJUaJaJwaUZZ'^C 


o 

0 

■o 


X u 

ID 

a g 
— o 
-a o O 

JZ 

> a^ 

flS ^ 

U ^ C 
La --a 

<« 3 
I C 4 ) 

4 ) ^ 

C II <TS 
-a ''v aJ 

X w 

u ^ 

«a U aJ 

E 41 c 
TJ 0 


4 ) o O 
*o X 

-H aJ 

o a 

Xa 
0 
I o 


.. 4) 4) 

y -» 
a -D 

o -< X 

o a a 3 

-a o 

1 o 


103 


null value check for valid transitions. 












g T3 *8 

« ««<N ^ 4J 

O « <N « 
M X 4J V VO 

V l«q 3 3 I 


a ax 

V -u V V a 

w V 

3 3 w 

-4 0 «9 3 3 Q 

V 0 

*j *j 

0 <n lo* o’ij 

4J <4 

0 0 

X ^ <N 11 ^ 

c ^ 

. . -o 

lax w 4 J V 

3 a 

V V c 

V c c -« 

0 

* W 0 99 

*« u n H V V a 

0 4 


«I<4««««UU3C 

i u u n V uuijv 

IMM >*aov33 UC^ 

^ooc ijuyyuu 

1 I I C H * V V O 

>4JW**^««<NiJU)l II — 

ICCU k-ii 

> V V *0 V II -c 

:k4UtflV3'^<N<N^(J3 

)Uti4C4JVVV'^<NuC 

-33'«-+3CC I 
9 U U W «) V V V M 

L W-« IX^33V> 

nil •>«juuvv V 

|.. .«.^ • G >9 ^ 0 u 

• M^«EE0*a’»«V 

;)^<N'0V>^VVVVV«) 

J « V'^'O 3W4JW4J4JO 

8330-40«Q'«<«<4‘^ I 

j V V^ O'^iJWWUiJ'Q 
1)33 IXVcntntfitfinc 
a^o*® 13 00000-^ 

I I I o V V I I I I r*^ 

j u *j •n o 3 aa.CLa.T3'**'< 
:c3'-^<«3*666EC 
tf V « c V V V V ^ 

4 U U 

3 3 3**- 
j U U 


O 

a 

o 

on A A 
—4 l< ® II 

3 

X «) 1 ) <n 

g 3 

»4 X 0"0 

I ® c 

V c u c 

<n V V 
X X 

V 3 3 


O V 
a u c 
o V ••- 
X — 

X w I 
wi O w •» 
3 3 V 

a c a 

V ^ 


•3 —» 

^ 3 

(A ® 

O C 

I ( 

•« a. tf) 

V e — 

i/i ® 

• 

•M ® 4J 

w il 
II «« 

•• U Ifl 
ift O 
3 O I 

V ro 

c ^ c •« 

■: C — *« 


3 V W V 

c V TJ •• •* *8 •'»'0 

®a -4^ 

xo* 0 

I X4^VVO ‘^X 

w 1® 3 3 1 I 

-oc V4.>VVQ. ^v 

CV 009330 VO 

uw ® ICTCTu 4-itJ 

U -4 (N I I'-' C -* 

3 as: u u V 3 a 

o c c -• o 

^ II H V V a o • 

04W«I> .. .•L*U3C IV 

®nv UI44JVV4-I 

3>4> VV33 IX 4 JV 

'«UUOOUW'VaJ 

sail—>^*0 o 

a* •• -4 *j II II I*- —. irt o 
.in CM «) (rt •• •• !—• O I 

4^ *0 V I I X —' a 

CVV3’^fN0J^U3'l g’"* 
V0'wVVV-^<N»4C»«V'*‘ 

u<TJ--4 3CC I I'fl *-»‘4 

w»inino'-4-4®®®!i u'—’Vin 

SOT--* IXX33W 
OV>«^OOVV VW4jC 
'-'g •t'flV33ii*-'CV3X 
>* •-•®EEcrcr*''«3woo 

uOiAOW 

a.w®uivvvvv09oo ■'Q 

gV'03«JWU4.>«^O I IVV 
ui'O'-'O^’O'V'VV ivuiJin 
tfl l4 *0 

•-•OXV010l0^0>('IC<qV4-'V 
X i300000-^‘-»«‘'**'> 
u IVV IIIIN4V)C0'« 

ovooaaaa'O'-'O'-* o 

co'^u'ggeEc 

wi^.— 

w— a.a u u »j u 

a 


O 4* A 

a c II 

o -«• 

A '«» A O 
II V M a 

3 o 

w V «o 

3 '*4 X 

X cr -0 m 

c 3 

c u c a« c 

o V V 

XXX 
3 3 3 


others 






I 

3 « 
a. 


4J 


n 

u 

c 

« 

w 

u 

3 

u 


« 

O' 


« 

*0 


*0 

o 


—* 

U 3 
(ft V 
(J c 
I » 

> ou «> 

g ^ 

V 

u • 

W 4) 

V u 

<« *J 
U M 

<11 o 

O I 

ro 

^ c < 
c • 


I 

0) 

3 —. 

V 

3 

O’A 


O 

X 

I 

« 

u 

•fl 


•• X 
w *0 
4J 3 

u w 
<11 « 

-■i 

A -M 3 

n 3 C 

1 

m hJ 

3 ^ 

Lj W 
41 41 </1 
3 3 » 

41 41 g 

3 3 41 
O O’ w 
«/1 

u > 
O 4) <rt 
<q . 

a. c « 

1^ u 
4) 0 <9 
3 aw 
V «i 

3 4> O 
O’X ( 
If- w 


X 
4) W 

w *0 
w 3 


w w 

-■i 

— 3 

3 C 

V 


4; VI 
3 ( 

4) e 
3 4) 
O' W 

V) 

u > 

41 VI 


O 

aw 

<rt 
41 O 
X I 
e- w 
c 
4) 


O 

a 

o 


a 

e 

C&l 

41 



.. X 


1 

C 



A 

4) w 


4) - 

-* X 




w -O 


3 ^ 

w 



• « 



41 ^ 

>**0 



^ A 

w 3 


3 

w 



* U 

VI 


TTA 

•w 3 






tl 

U 



•• X 

w w 

A 

C 

<4 - 



4) w 

«Q 41 


-• X 

a w 



w *0 

X 

o 

w 

4 4) 




-- c 

•9 

^-o 

y 4 



w 3 

-• 5 

w 

w •-* 

E 



VI 

3 C 

VI 

-• 3 

•w 3 



« 

1 

1 

(J 

4) C 



W 

4) 

u 

<4 - 

C 1 



'O 41 

VI 

4) 

a w 

C 4) 

•- 


X 

-1 <9 

W 

•9 41 

4 ■ 



-* E 

w 

c 

U X 

X 4 

C 


A —• 3 

^ VI 


E 

U W 

-m 


II 3 C 

O 1 

o 

-* 3 

VI 

— 

•- 

"w t 

E 

a 

4) C 

V 



— 4) 

w 4) 

o 

C 1 

X E 


4) 

—f VI w 

VI 4J 


C 4) 

w 4) 


w 

3 --4 

Vi 

>• 

<4 W 

w 

u 

4 

a w 

u >» 


X *4 

tJ VI 

4) 


VI 

4) VI 

a 

O w 

4) >* 

■0 

VI 

o u t 

w • 

E 

VI 

73 VI 


1 

<11 -n E 

C 4) 

CJ 

A 4) 1 

4) • 

o 

fN 

w w 4) 

—• w 

4) 

•1 X E 

4) 4) 

X 

z 

VI VI W 

O <« 

JiC 

w 4) 

U w 

1 


• VI 

aw 

<11 

w 

X 4 

4) 



fN — 
•-• <S 
I I 
V V 
3 3 
4> 4> 
3 3 

cr 0 " 


a> 

o* 

<« 

VJ 

V) 

I 


4) 

“O 


fN 4> O 
w w X 
41 H I 
"O w 4) 
—< M u 
O I 
X ^ —• 

iz a 

4/ 


U 

> a 


o 4) V) 

<0 W * 

a c 41 

I- 


V 


c n 

4) 

w 

u 4) 

y 

O 4) 

Wi 

4) 41 -w X •* 

TJ 

c 

M c 

4 

4 C 

4) 4 

VI “0 "w 


••P* 

3 -* 

4) 

4) 

w £ 

^ C -w 

0 

0 « 

U —' 


ki4 

C 

4> 4) 

-X 

a — 

—’ 1 


1 

w 


^ O 'fl 

i*« u aw 

41 a <Q V) 

3 O w 4) O 
4) O <A X I 
3 '-• If- W 

cr c 

I C 41 41 


VI 
41 O 
X I 
^ w 
c 
3 


U £ 
3 O 
» O <9 

4,1 

« « w 

•% X X 

4) O U 41 

C u C <9 C 

-• 3 41 4) - 

OS u ^ w — 


■O »*- 

c 


u 

•o <« ••- 


3 3 

c a a 


3 

4) 3 3 

c a a 


ax 

41 3 


_ - , w 3 

41 a X 3 3 4) 

CO V c a a c 

4) 

X 

3 


w w 3 
3 3 4) 

a a c 


z — “O v> 

• 3 4) >• 

a *0 VI 
U 4) 4) > 

<« 3 4) 4) 

a 4) u w 

!♦% 3 X 

^ ao u w 

u o • w 

<« O -X o 

W — O I 

VI < w 

I c a c 

u 1 4> 

4) 'll V w 

w 6 3 <« 

c 1 ) $ a 

-* W 3 
o -• O* w w 
ax 3 3 

o 4) c a a 

4) 


C •«. II 

4) 

M X 

<4 U 

t a <« u 

4) 4) 

« « u *3 
'-XX'-'-* 

4) U U 4) O 

C <« C X 

- 41 4) -• I 

>-• L« u 4) 

i U w 

X u w 3 <9 

4) 3 3 4) — X 

c a a c a 4) 


a 
— o 
fN o 

>- 

<0 —. 


4) 4) C 

— — 4^ 

a ax 

3 3 w 
w w 

o o — 

• • *0 
4) 4) C 
>- w w VI 
4) <T) «n VI <0 '• •• 

w w w II 4) ^ 

<« VI VI >1 a 4) 4) 

w O O C w w 

VI I ion - 'll 
Oww-***'-*ww 
1 C C W fN VI VI 
W 4) 4) *0 4) I 

VI 4) 3 — fN 
C w 4) 4) 4) 
•0 -» 3 C C 
u VI cr 
4J -< IX X 

• > w (J 


3 3 


• fN 


C U <11 


a 
- o 
TJ o 


4) 


fN^O)*- 

C II 

4) 

—• fN *0 4) 

— •-.» 

w 

4) 4) P- -O 

X 

4 

3 3 0'- 

U fN 

w 

4) 4) X O ' 

4 u 

V) 

3 3 LC 

E 4) 

O 

cr cr 4) ' 

■0 


! 1 1 U 4) 


w 

W W 4 U 

•• O 

c 

C C —• 4 

X 

4) 

4) 4) Q.^ 

fN 1 

u 

w u ai 

41 

u 

l>4 U 

4) y 

C 3 

3 3 <*- 

"0 4 

- U 

y u - 


W4 <N 4) E £ 


3 a a 
Tee 
C 4) 4) 


O' 


• a o a 
> o X -- 
*0 O I 
c -t 41 41 
V u —• 
“O 

C —• X 

4 ) a 3 


ax 

o 

o 


105 




o 

o* 


u 

« 

*0 


o 

£ 


a 

c 

41 


4 


<N « 




I 


o. 

I o 


<N « 

« « o 

3 3 

V V 
3 3 
d* ^ _ 

I !>-' 

«J u 9 

C C '-< 

V V a. 

u u ^ c 

U 4J 

3 3 LC 
U U u 

o 

<1 tl A 


o 

• jC 


«l 

o 


I 


u « 
« U 
w 
C 

3 a 
o 

<j « 

i« 
V w 

<« u 


V 

3 

4) 

3 

O’ 


---WO 

C3 I 
jc -• a 
<N o 3 1 E 

<N w C •• 4) • 

1 

4) V V 
3 3^ 

V 4) 

3 3 M 

3* 3* •» 


C 'I t 


— 4) W A *•' A 


3 3 4) V) 

4-1 W O 

^ <V ^ I 
W W 4J 

(A tft (A c 

(J o o 


c ^ 

3 

O •! 
3 O 


i I 


9 *J *J 


C 

3 X 9> 
O 3'M 
U W ^ 

I *« 

« 4) C 
«k 4) 
^ X 
3 


4) 

3 

V 

3 

cr-0 

c 

t»} c 

4) 


X 

3 


4) 

£ 

3 




1 tft C o 


a a-o — ( 
EEC 

4) •*< 





44 



« 




9 



3 




44 



44 

* 



01 



3 

4) 



O 



44 

44 



1 



01 

9 



44 



o 

44 



c 



1 

M 



3 



44 

(J 



u 



c 

1 



u 



3 

44 

c 


3 


• 

ki 

c 

9 


3 



u 

4) 

X 





3 

w 

44 





3 

U 



3 




3 

*0 


O' 



« 

3 

c 


<« 



3 


«« 


VI 



O' 

« 



VI 



3 

41 

> 


3 



01 

3* 

3 


E 



0) 

•Q 

u 






0) 



<N 



1 

01 

H 


U 




$ 



9 



04 

E 

C 


*3 



U 

• 

0 





3 

<N 



O 



*3 

ki 

44 


X 




41 



1 



O 

*3 

01 


3 



X 


c 


3 



! 

0 

<4 


9 



3 

X 

w 





3 

\ 

44 

•« 

a 



3 

4) 







3 

<N 

3 3 




a 


W 

44 44 

c 





<u c 

<9 

0 



• 

a 

*3 4) 

44 44 




c 


^ X 

<0 01 

44 



o 

« 

O 4J 

X o 





e 

X 

t 1 

VI 

• 4 


44 

0 


*v a 

c 





41 ^ 

E 

9 

3 


01 

u 

3 

3 3 

W 

44 

*4 

c 


'n ^ 

C 44 

44 

3 

A 

3 

01 

—< OJ 

• 

• 

44 

3 

W 

C 

a^ * 

<N % 

(N 

01 

44 

44 


— 41 

W 3 

u 

o 

9 

« 


3 

3 44 

3 

1 

44 

04 

44 

C « 

*3 3 

♦4-0 

44 

0) 

. w 

« 

4) 3 

«4«-4 <N ^ 44 


c 

o 

3 

<S 

X O' 

3 O — <M VI 

0 

3 

1 

■3 

U 

44 1 

w X 3 3 O 

X 

w 

44 


41 

44 

'll 13 3 1 

1 

u 

c 

0 

*3 

*3 C 

44 3 3 3 a 

w 3 

3 

3 

X 


C 4) 

VI 3 3 3 0 

3 3 

3 

u 

1 

0 

'4 W 

13 3* 0*u 

44 1) 


u 

3 

X 

w 

^ 11-^ 

C 

« 

3 

3 

1 

3 

X a44 tj 3 

3 a 

3 

3 

3 

41 

3 

c c -• 

o 

3 



3 

r-i 

II II 3 3 Q, 

3 4 

3 


a 


«>4 44 VI 

u u 3 C 

13 

3 




3 <0 3 

W U 44 3 

3 44 

cr 

3 *4 

« 

a 

3 W > 

3 3 3 3 \X 

44 9 

1 

3 —. 

3 


3 ^ »4 

44 44 3 3 W 

9 44 

u 

44 « 

44 • 

• 

3 a ■! .— 

•n -n o 

44 VI 

3 

01 W 

3 - 


u '* 

<4 —. 

U 3 

M 41 
O C 


I 


o iA 4) 

awe 

o 4> -* 

— £ -H 

X *J ) 
tf) O iJ *« 
3 3 V 

o* c a «i 


•« a VI 
4» e - 

V) V 


<4 4» 

'w « 


■3 

C 


\ H 


' (N 4^ il II *M 


■I W 
•• 4.1 VI 
V» o 

3 O I 

V ro 
c ^ c •« 
(C — 


“3 4) 
C V 4; 3 
4) a* 4j 41 
w --* 3 
»- VI V) 3* 

3 «n - 
3 4) > w 

— e • c 

>. • 04 4i 

04 kj W 

a w V w 

e «*3 3 

u] -3 -* 3 
V» -M o 
^ O X V 
X 13 
«J I V 41 
O 4) 3 3 
C 3 3* 

w <D 

— — aa 

a 


J t x-* 
<N* oi y 3 

3 4» ^ 04 w c 

C C \ •■>9 

— 9 9 y \t 

X X 3 3 VI 

3 3 V 4) 

'll 3 3 a «-i 

£ E cr 3* 


w (3 
O 5 

a 

« E . 
♦. 11 - 


4- ~ 4) 
3 3 44 


O 

a 

o 

VI. A A 


C ti ; 


4> 41 « 4) 3 VI 

44 44 W W 4.4 O 

"p *r 

44 44 u 44 44 ^ 

VI VI tfl <11 tfl c 

OOOOO- 
I I I I r<^ 

a a a a'3 

E E E E C 

4) 4> ® 

4J W 44 W 


C ^ 3 
3 44 0 
O VI 3 
3 O 


I 4) 44 44 

44 k« <T) 
« 44 

44 VI (A 

to C O 

(J ^ 


C U c I 

4) 


X 
3 9 


X 

3 


44 3 
VI 4> 

O. C 


I 


o to 

awe 

3 O 3 -* 

X VI 3 iO'-’£ — 

3 <*- 3 «« X 44 I 

w X 3**3 VI o *4 *4 


•4 a VI 

3 e 

to 3 

—*44 4 

— 3 

>44 3 *4 



3 3 

•• 44 <0 

C 

a VI 

V) o 

3 

3 

3 O 1 

X 

3 

3 ro 

3 


C C *4 


3 

1 C -• w- 


c 

01 -04 «44 


3 3 

•>4 ^ 


*3 **- 
C 
3 

■O w 

c •-» 


*3 

C 


106 





oo U 








<0 

1 









y ** 








w 

3 -i* 




•% 





y 




A 





3 




« H 




««« 

O’A 








<N 

II 



•« 

•• ^ 

•« 

•« 


1 

c 




« i-* 

A 



4) •* 

•- £ 




u -0 

4) 

Ji4 


3 -* 

w 




-- 

3 

y 


4j ^ 

>“0 



A 

w 3 

4> 

*4 


3 

w •— 



» H 

M 

3 

u 


CT A 

- 3 




« 

0* 

•1 


■1 

y 



•• £ 


1 

J 


C 

«» * 



4) tJ 


u 

u 


-• JZ 

a w 



w 73 

"9 

4) 

4) 


w 

'9 y 



•- 

-••g 

w 

u 


>.*0 

y ^ 



w 3 

— 3 

e 

C 


w 

E 



M 

3 C 

■<i4 



-• 3 

— 3 




1 

0 

0 


y 

y c 




« 

a 

a 


>9 * 

C 1 



•« « 

«) 

o 

o 


a u 

c y 

•* 


4 

HI4 




^ 4> 

>9 

JIC 



iJ 

>« 

>• 


y 4 

JZ >9 

c 


A —* 3 

4) VI 

«j 

«j 


E 

y w 


M 

use 

3 1 

a 

a 


-• 3 

to 


C 

1 

4) 6 

E 

E 


y c 

y 1 

(n 


^ « 

3 4) 

til 

U 


C 1 

jC e 



4J 

O' u 

V 

y 


c y 

w y 

CN 

(/) 

3 

VI 

M 



<4 W 

u 

u 


h* 4J 

k4 >. 

<9 



£ 

*0 VI 

y 

fN 

4J 3 to 

41 <0 

z 

z 


y w 

y >* 

■o 

u 

3 3 1 

w * 




(0 

*D to 


4) 

41 4) 6 

C V 

M 

Ji 


A 4^ t 

• y * 

o 

*0 

3 3 « 

JJ 

y 

y 

• * 

» JZ £ 

y y 

£ 


O D’w 

O -fl 



o. 

«j y 

y u 

1 

O 

• « 

aw 

a 

a 

< 

—• tJ 

X >9 

y 

£ 

k4 > 

(0 

1 

) 

ki 

— * *0 VI 

U w 

y 

1 

y V «) 

V o 

y 


0 

3 y > 

to 


4) 

<« w • 

£ 1 

3 

y 

u 

a D « 


—* 

U 

a c 4) 

H w 

y 


M 

y y • 


a 

>9 

1— u 

c 

3 

A 

y 

3 y y 

w 



V o m 

41 .* 

3* 

■0 i> 

t 

y y w 

o 

•* -1 


■o 


3 a*j fc- — I I 3 X ^ 

V «l WftflAUAUVIV Q.OUW 

34)0 3U"^iI4)II4)*mC O* </> 

«r-C I * U >9 W OjK o 

t6-**j 4»X«rtC«nC-C— --y 

k- C 1 \ <9 w 

4) 4»*»-C-C'-wi^OT500-^-ca C 

4)Oy4)'n a Ot 34)--* ' 4) 


W £ 

-fl y rs* 

s a. w 
V V 

^ • I- -3 

‘-£ -C — 
4» u y D o 


« .. 
y 4j 

..4 u 4) 
-• X 

a. 4> 4) » 

y 


c w c 

<« <« c 

y 

c O 

C O 

c a to 


y 

tM C 

*4 C -C 


.-4 3 ^ 

y y ~H 

to 

y 

y 

y '9 

E 

3 


y y - 1 


o * y 

u u —• 


£ 


£ y 


y « 

a-- 

k. M — y •* 


O,'--' 1 

1*^ —* 1 

y 

3 

3 

3 

u 

3 

1 

1 y w 


C O W w 3 

w w 3 

(0 



D 

—4 

O* w 

w 3 

kV 4j 3 -• 


O 3 3 y 

3 3 y 

^9 



C 

X 

3 

3 y 

3 3 y — X 

to 

-4 c a a c: 

a a c 

y 



y 

y 

c a 

a c 

a a c a y 





y V 


»* •* 
y y 



w w 


w u 



>9 19 


<« 



W 4.^ 


u w 



to (0 


to <0 

1 1 



»-4 (N 


f-t Oi 



y y 


y y 


»» 

c c 


c c 







y 

X X 


X X 


3 

y y 


y u 


y 

•9 >9 


• • 13 <Q 


3 

E E 


-.EE 


0* 

1 

V y 


y . . 

w y y 


u 



f9 ^ 0 ^ 

c 

y 

a a 

c 

w a a 

y 

w 

3 3 

V 

to 3 3 

X 

c 

w u 

X 

0 W w 

u 


0 0 

w 

10 0 


Q 



u • • 


a 

y V 


c y y 


o 

** W «■> 

A 

y w w 

y 


-* y y 


We 03 <13 

3 

w 

y w 

y 

«Q ej tJ 

y 

to 

3 to to 

t 

a VI <0 

3 

We 

y 0 0 

u 

0 0 

O’ 

•-4 

3 

to 

• 1 


u« 

0 * w 4J 


W 4^ 

u 


iC c 

u 

y c c 

V 

ll 

u y y 

y 

<« y V 

u 


y U We 

WJ 

WJ We M 

C 


4^ <13 <T) 

C 

to 03 <13 


y 

c a a 

•»4 

1 a a 

0 

w 

■iM 

0 

We 

a 

'll 

0 II II 

a 

y II It 

o 

tJ 

a *• *. 

0 

4^ .. .. 


VI 

0 


c 

>< 

O 

y y 

> 

y y 



y 4j ^ 

w 

0 4J w 

a 

w 

3 <« <« 

a 

a <Q 03 

E •* 

C 

y «j w 

A 6 •» 

0 w u 

u w 

y 

3 to VI 

•* II U u 

to to 


£ 

3 


a £ <n > 

•- o yw- 

*3 O t>4 i9 

C —• Q. S 

V O V c 

73 O tn V 

c — 

V 

*0 


u CP I I' 
<« 4) ^ - 

Q.O Z Z 


« »-• X 
4) 

T5 


a I 1^ 

O •-' CN 
4) Oi Z Z 
to “D 


4) 


4) 


4> 3 


4) 

£ 

3 


C -TJ 
V y 


y a 
o 

■DO** 
C -• U 
4) C 
*0 — 
C —• 
y I 


107 


n others => 

putline("error error error 




W. -O 

u w j ' 3 
3 3 3 V ^ 
c a a c 

•TJ 

c 

« 


108 










Tide : clear pointecs 

File : reachabl1 icy.a 

Author : Matthew J. Rothlisberger, Captain. U. S. Army 

Date : 10 February 1992 



It 




H 

H 

It 

N 

)l 

• M 
« If 
^ It 
It 

'w It 
It 

U It 
3 It 

a, II 
C II 
ti 


41 N 

jC It 
u II 
O II 
C II 
II 
II 

O II 


> II 

—• « 


O 

It 





tt 




\o o 

■1 


•a 



ii 


—a 


c 

II 




0 tf» 

II 


3 


c -« 1 - 

II 


C 


0 M 4) 

i| 




W W 

II 


• • II 


w 4t C 

H 


•• 



II 




aJ 0 

II 




V) « O. 

II 


C 


< 

'1 


a'- 


U Q ^ 

ll 


:l O 


O < -• 

II 


.» o — 


3 

II 

M 

—a —a 


X 

n 

ka 

4^ a 



11 

4) 

aJ 0 O > 



1 

w 

O <9 


C ka « 

II 

C 

aJ -a ba 


3 4» 

n 

-•« 

VI • ba 

• « 

VI > CJ 

N 

0 

KN • -tl 

VI 


II 

a 


ba 


II 



V 


ll 

ba 

£i • C •% 


c 

It 

'll 

o c -• a 

c 

0 

It 

4) 

-a -a .-a £ Q 

-•a 


■1 


U O '• 

O 

ba w 

II 

O 

1C u —< a Q. 

1 4) a 

II 


— .-a g O 


e - 

'1 

1) 

ba O 

w 

« -• ba 

!t 


-a -a O C —» 

'll 

w a u 

ll 

3 

W 41 

41 

«i E tf) 

H 

“0 

^ ba -0 

—a 

>< O 4> 

II 

V 

c c o c 

u 

V) o Q 

II 

u 

..a .a iba ^ 



II 

0 


TJ 

1 1 1 

1 

ba 

4» 

C 

1 1 1 

1 


41 


109 








110 
























» 













1 

1 


II 


1 

n 





1 

It 





• H 


N 




• 






M R 


W 





H 





9 R 


R 




41 

II 



1 


C U 


II 




c 

ii 





-R It 


fl 










'-R R 


R 





II 



N 




il 





H 





m R 


R 




in 




li 


Ol H 


R 




<N 

II 



1 


R 


R 








H 


•1 R 


R 




n 

n 





n 


N 










R 


H 





II 



N 


X u 


U 




X 

II 







II 




9 

II 





E R 


R 




E 

II 



l| 


R 


R 








N 


U II 


II 




4J 






^ u 


n 








N 


a u 


R 




3 

II 



N 


« R 


M 




9 




N 


U 


K 








N 


9 R 


H 




41 

ti 



It 


a R 


It 




O 




N 


It 


R 








N 


R 


tf 








II 


• R 


II 




• 

II 



N 


X R 


U 




X 




N 


<9 R 


R 




9 




It 


E It 


H 




E 

II 



It 


R 


R 





fl 



«t 


«1 II 


N 





II 



It 


9 R 


II 




41 

II 



II 


X II 


II 




X 

II 



It 


0 R 


n 




0 




II 


<9 R 

<* 

H 




9 




II 


4) II 

A 

II 




V 




II 

g 

U l| 

« 

H 


>• 


k4 




II 


II 

9 

II 


E 






II 

< 

C R 

3 

II 


u 


c 




II 


4; II 

C 

II 


< 


41 




II 


41 II 

■-4 

.1 




41 




II 


U II 

u 

II 








11 


U t| 

C 

II 


iA 


U 




It 


tf) II 

0 

II 




in 




It 


II 

u 

n 








It 


U II 


n 




w 




R 


3 II 

0 

n 




3 

II 



II 


a R 

u 

N 


V 


a 




It 

C 

U It 


u 


C 


w 




II 


O H 

as 

R 


•»4 


3 




R 

>9 

O It 

bJ 

n 


9 


O 

• 11 



II 


H 

f- 

II 


w 



£ Il 




a 

4J It 

Z 

H 


a 


w 

ill II 






u 

II 


9 



^ II 



II 

o 

3 R 


II 


O 


3 

Z II 



R 


<9 II 


n 




9 





* 

l| 


II 


« 


1*4 




R 

u 

4t II 


R 


k* 


41 

k4 II 




9 

O *0 II 


H 


4> 


O -0 

0 II 



II 

O* 

• II 


•1 


O' 






II 


VO C -11 


•1 


k< 


VO C 






9 It 


II 


V 


41 II 




ja 

C X II 


•1 


X 


C X 

41 R 



II 


0 3 n 


II 


in 


0 3 

U 11 







II 


—4 


C — 

0, II 





o w *0 11 


II 

4) 

-4 04 


0 « *0 

b II 



R 


•>4 W 4) II 


■1 

tn 

X O' 


"4 4> 

O II 







II 

3 

«-» O' 


u 41 —« 

U II 



II 

0 ^ 



II 

9 

o —• 


9 > -4 

a <1 



1 


w 9 II 

• « 

>1 

a 

C£ 


u 9 

II 




3 > 

M « (J 1 

A 

1 


>> 


<n V u 

4-1 U 



il 

a • w 


•« 

1 

“O 

• k* 


jt < 

0 I 



t| 


u O 41 If 

A 

1 

tt 

“> 9 


U Q 41 

C '♦ 

41 ^ 




O < w. t» 

tfl • c 

II 

^ 9 

3 


0 < k4 

ll 



R 

0*3^ 

X 3 || 

.-4 . 4J 

>1 

a • 

3 k4 


3 3 

V> II 

3 • 41 


R 

|4J tt X 

X -0 II 

— 

>1 

E ^ 

V X 


X T3 

-4 It 



R 

V 3 X V 

^ « II 

^ •• 

II 

O 3 

X 41 


^ -4 r; 

II 





'OUR 

3 ^ 

■1 

w ^ ^ La« 


“0 U 


1— — * 




C U 0 U 

0 . tr 9 -o 

N 

a 



C k* o 

41 II 

■0 O* 9 "0 4) 


R 


3 4) u R 

C W u •« 

R 

C 3 

9 O 


3 41 k4 

V) II 

41 C ki k4 vt 


R 

a 0 X 

(n > a« R 

3 -* 3 ^ ^ 

a 

3 0 X 


(/) > a« 3 U 

*4-4 3 9 3 




» 


R 





II 

CL k4 44 0 9 





IW 9 X U n w 

R 

«• «♦ 

•• «« 

•• 


II 

E w 9 X Q* • 





41 «1 C ><n 04 3 

H 





R 



^ R 


C II 

(A 4) (ij' a. 

H 




c 

II 

k4 41 *0 




O >1 

3 •• •• » jR • R kJ 

C M 




o 

1| 

0. •• •• JiR 41 






II 





11 

C — 44 




4J II 

41 41 41 1» o 

9 R 




k* u 

U 

3 *0 41 41 a 


E II 


V a R 

w C C C O C 1 

E R 



“0 

41 O 

II 

k4 C C E 


ii 


E —• II 

^ <Q ^ ^ ^ 

— n 


k« 

41 

E — 

II 

41 9 O 




4> -• u It 

u O —— 

41 '1 

41 

O 

V) 

4) -4 hi 

>1 

u 0 — —. ki 


U II 


w Q. U II 

3 X '11—13 

4J II 

-• 4> X 4) 


w a u 

II 

3 X 1 1 a 




E II 

*b><C 34j4j*^w9 

9 R 

4J -4 

U *J 

> 

VI E «t 

It 

•o >* C 3 U C 


u 1 

^ 3 -« « 

>• 0 4t II 

4)4t4tCD34t33a 

kj H 

—4 

3 9 

41 

> O 41 

II 

41 41 41 C 41 41 3 


•q li 

HCi.4£aa:(n(ja n 

yjR — - c atraa 

9 a 

H b« < O 

oc (/) (j o 

It 

Cl ^ • C O' 


a R 


II 

0 O' "O 

a. N 





i| 

0 O* “0 





u V c 

41 ( 

1 1 

1 1 


> 1 

1 1 



M t 

1 1 > 1 1 

1 i 1 1 

0. X 4> 

Vt 1 

1 1 

1 1 


1 1 

1 1 

a X 41 






111 















Title : PrlntQueue 

File : output.a 

Author : Matthew J. Rothilsberqet, Captain, U. S. Army 

Date : 10 February 1992 



112 








Title : output GsCatenode 

File : output.a 

Author : Matthew J. Roth 11sberqer, Captain, U. S. Army 

Date : 10 February 1992 


0 ) ^ 

4) O C £ 
C C O 


« O' 

g u C C 4J 

O O O 3 11 

-C C ^ O -I 

U -iJ 

<4-^0*^ 

1 ) o £ *1 c u 

u u C U 

0 >9 ^ 04 

O ^ u W M 

C C 4J H c 

4) 3 

*j fT' 4) 

'0 C C k4 c 

iJ 1» O -• 1) ■« 

Irt ^ a-4 O X 

U iJ O* W aJ 

w w ‘V 

C ^ tfl 3 X 

4> »-< C O w 4J 

u u a w 

3 • *J C *3 

o u c a 

« now 
•* 4 c w ^ 3 

> £ o 4j a 

^ 3 — 

— c w i» -a > 

a. u c 4J 

vt D £ D o a 

^ u X y fi 

o a 0 w V 

3 •*- c 

w C T3 O ^ 

• — C -N 0 

w-" itl *j C 

3 M a 

Q.^ C > D V 

u o «j y u 


V V ^ 

«J 4) ^ *3 V 

-a £ 4j 4j 4, 3 

3 aJ u 4> 

-0 ^ 3 

<a- -3 C -•O’ 

41 C «l y 

*3 41 4) V 

• u 3 ax 

O * 41 4) tJ 

iJ 41 V) 3 C 

3 3" 3 'w 

C 41 VV O 

O O 3 ••- 4) C 

. -a 3* 3> ia 

v0 3* 'tl a 

-fl X 'fl fcj X 

c £ y — w 3 U 

o w v*- 41 a - 

C 'H o 41 £ 4J V 

o tf) '•-t u 3 

->4UC^0X0'3 
*j 4) -a o W W> C 

't > u O C ^ 

*j 41 (A 4) X 4) 
ui , -3 aj X vi "3 

j<<OCC-^*jC4» 

UQClJ'fl'^ QWa 

O < aJ 4^ -3 

36 V? C — • *3 ^ y 

X-»0— wjO-U 
^--‘3y33C!flO 

*3 a c a c 

C^<j4) u4)'Q'^ 

34»3X«rt3X‘--fl 
C/»>OaJ -aOaJaJX 


-3 Da 
D 6 — - 
crt D -• ^ 
- u a y 
>«£'/» 
D >• O D 
oc C/1 (j Q 


^ a 

— O C 3 

« • -a aJ 

r\» -a O 
M O • 

— c » ^ 

•<ia •«• D 

( .kC 

• C C 


3 ka •% 
aJ o a^w 
3 C -• 
a— 3 
*-» -3 

3 ^ C 
O -• D 


rn D ^ D 

^ u — 3 
D 4> 

4J 3 

> O v» O 

• y O * 

-- C 

J iJ aJ aJ -a 
:D33'- 

» tf) a a a 


o « o c a 

• O • --a 3 

D D Cj; o 
r-a O' C • • 

C -CJ - u 

-* £ — V 

o - ♦ c: w 

a » Va - c 

W 4) — •* 

D D ' O 

^ O' c « acN 

4; -w^ D 
aJ W O D 

«n c a c — 

o - I'-a <0 o 

D o *-» y 

^ D «« 4.1 a vt I 

#3 lO •-» 

D 5 u D D 

••3 4. in 4^ m 

O (J 'fi 

S U * •— 4J la- 

C - 

u -* 4j O 

3 u 3 «*- — 

aOa a -a 


D 3 ka 

D v) a uj 


113 











ja 

o 


« 

A 


O II 

4J H 

• n 

M 4) II 
4} CT 11 
.kj II 
C M II 
(A 11 
O 41 II 

a £ ‘I 

-a II 
C II 
0) •« II 
W H 

o. « n 
4) a n 
o > n 

U U II 

< I) 

c It 
O II 


> 

£ 


3 •- 
O. 01 
w C 
3 

0 u 


—4 0) 

3 C 


O 

a. 

>« 


c 

o 


X 

u 

<« 

£ 

V 

Q. 

3 ^ 
*.» <N 

O -• 


X ^ 

O 


• It 
01 

^ X 

Q. 4J 

•% 3 *3 

^5 3 

<N • 


4) 

C 

X 

o 

<n 

£ 

01 

Q. 

3 

u 

O -• 

I 


0) 

c 

X ^ 
U V 

£ A 

* II 

01 

-• X 
a.ij 
•* 3 *0 

3 



CO 



II 

0 



-v 41 

4; C 

k. 



^ 41 

41 C U 





II 




C 3 

Z 

0> 



C 3 

3 --4 41 


• 

01 

4J 

II 

c 


c 

^ 4) 

41 — 

X 


C 

v 

41 '-4 X 



TJ 

C 

II 



41 

— 3 

3 O 

E 


41 

^ 3 

3 O E 




0 

II 



X 

o cr 

a* • 

3 


X 

o cr 

0* • 3 



O 

y 

II 

<< 





C 


w 

• • 

' og C 


C 

W 


H 




^ 4; 

11 ^ 




oi 41 

41 




.fcj 

II 

w 


A 

-4 

—• c 

41 


A 

—4 

-* C 01 



c 

3 

II 

41 


*0 

c a 

a-4 



-o 

C Q. 

Q**^ 4-1 


■U 

3 

a 

II 

u 

c 

c 

•-4 3 

3 -• 

<9 

C 

c 

3 

3 -4 

II 

a 

••H 

4J 

II 

C 

01 

01 

—4 *J 

4.^ * 

ij 

41 

01 

ij 

4J • 

It • 


w 

3 

II 


X 


• o 

(J U 

0) 

X 


• O 

o I-* 01 


01 

CP 


41 

X 


tl <n 


C 01 II 

<« X II 

O U H II 

* 4J II 
vA * II 

01 4J l> 

C 4J 3 II 

o a II 

C 4J C II 

O 01 01 --4 II 


o 

a 


01 

O' 


01 ^ 
w C 
C -4 

o o 

a • 


• 41 I 
J£ ^ £ 
C C 41 

^ 4J 

*-4 o 01 
O Q. >< 


41 M 
u C 

C -4 

O o 

Q. , 

KN 
41 ^ 
u C 


. 4^ i 

u £ 
C C 41 

—4 iJ 

•~4 o 01 
o a >4 
► 101 
CM 41 • 
^ u ^ 
C «Q C 

—4 

—4 01 ^ 



II 

U 

X O' 

-4 




II 



c 


o 


o 

01 • 


• o o 


C 


o 



O 

0} • 


• o c 


II 

1 


o> 


0) 

«~4 

01 

11 

W 


••t 





O ^4 


U • 


•»t 






O u 


k4 • 


II 

41 

o 


<« > 


>9 

II 

—t 


-t 


-t 


•—* 

— 4) 


41 41 




CN 



rsj 

w 4, 


01 01 <N 


II 

u 

a: 


4J 


X 


II 

01 


o 





41 4.4 


u O'-X 


o 






41 40 


40 O'.X 


II 

<9 


>< 

01 

« 

0 X 

II 

c 




c 


c 

o* c 


c 'n c 




C 



c 

O’ C 


c c 


II 

u 

• 

ki 


< 

~t 

a 

II 

'9 




•«t 


— 

^ t 


£ -- 


fN 


•«t 



-4 

^4 -4 


.-t E - 


II 

0) 


AJ 

u 

a 

O’ 


II 







—• 

£ O 


o - — 








E O 


o -« — • 


ii 

O 


3 

0 

< 



i| 

w 


c 





- Q. 


a* ♦ 


C 






-4 Q. 


a- • 


1 

1 

1 • 3 

u 

•s 


0) 

O' 

II 



--t 


u 


w 



1 k« w 


■«t 


44 



u 

• 1 


1 U tt 


II 

u 

4J 41 X 


X 

u 


<1 

41 


>t 


y 


01 

u 41 


01 41 41 


— 


41 



41 

Wi 41 


01 01 01 


11 

□ 

3 X 

41 


-g 

3 

41 

II 

u 




fc,- 


t_l 

41 u 


O' 40 




40 



u 

41 40 


40 O' 0-* 


II 

a a^j 

U« 


-a 

a w 

'1 

>9 


w 


c 


c 

O' 


<D 41 C 


k« 


c 



c 

O* *9 


<q 01 c 


Ii 

jj 

4J 4J 


c 

u 



<1 



41 


—« 


•— 

41 u 


w u -t 


41 


• -t 



••t 

01 40 


40 40 •*- 


)) 

3 

3 Ifl 

O 

3 

V 

■*» 


1 

0) 


u 


0 


3 

*J 01 


01 C O 


40 


o 



0 

40 (0 


01 C 0 


II 

O 

O X 


to 

> 

o 

01 

II 

o 


C 

• * 

a. •• 

• « 

a. 

c o 


o a 


c 

• 4 

a 

• 4 

»4 

a 

C O 


o -• a 


'• 








Ii 

t 


-4 

•f 

1— 

— 

_ 1 

—4 •»«' 

•* 

T * 



■p 

! 

—«• 

•-* 

1 

•44 • 

•* 

1 
































II 








II 

3 



U I 

♦ 

*j — 

N* 3 # 

3 *J 'H 


Q.V 

40 

1 

♦ 

U tt 

«« 3 > 

3 40 

A 

II 






c 


II 

a 




0 

* 

•3 0 

41 


41 * 0] 41 


1 


•9 

t 

* 

<9 » 

01 


41 « 'll 

C 

II 






o 


II 

u 


01 


U 

•* 


* 3 

« 

3 « 40 C 


41 



•"it 

*4 

40 

» 3 

4 

3 4 40 

'-4 

II 






mt 


'1 

3 


u 

0 

01 *J 

4J 

01 

— 'O 


O 01-4 


40 

0 

0) 

40 

u 

01 

— Cl 


o 01 


ii 





It 

u 


K 

Q 


-fl 

y 

(J 3 

3 -4 

o * 

S W 

f 

40 « o -- 


'll 

y o 

3 

3 — 

o * 

« k0 

« 

40 » O 

E 

H 



-0 


41 

a 


II 



w 


t'-’ a 0) 

a 


C 


C 1 

1 

40 



a 41 

CL 


C 


C « — 


II 


u 

11 

E 


’-t 


'( 

11 


Ul 


0) 

T1 

U i~> 

4^ 

4J 

40 40 3 '*t 

01 

40 


01 

■0 

40 40 

40 -t 

40 

—« 40 40 

41 

II 

41 

0 

01 

41 

•-4 

It 


1 



O 

01 

4*t -t 

c 

3 3 

3 It 

3 

W 3 3 31 

—t 

t3 

01 

>44 

•—1 

C 

3 3 

3 k4 

3 

W0 3 3 

u 

II 


41 X 

4) 

4J 

a y 


|| 

3 



01 

--t 4# 

41 

Q. Q. a.CL 

0.0. Q. a. c 



0) 

—4 


41 

a a. acL 

cLa4 a. CL 


« 


w 

*J > 

01 

e 

01 


II 

TJ 










TJ 










u 

II 


-4 3 

'9 41 

> 

o 

41 


fl 

y 

c 

VM 








C 










•9 

II 

H Cb < 

O (£ 

to 

u 

Q 


II 

y 

--4 









4) 

■w* 









a 

II 








II 

o 

O' 




















01 I I I I 1 I I 


114 











115 








Title : outputGstates 

File : output.a 

kuthoc : Matthew J. Rothllsberqer, Captain, U. S. Army 

Date : 10 February 1992 

Revised : 



N 

n 

1 


V i t I 
«) I I I 


I u 

u ^ * 

a a K 

0. I 

4j M a 

3 O' I 

O • 

« I 

I 

C I 

I 

e R 

«l R 

« R 

M n 

^ it N 
4J *0 tl 
«1 O It 

O C R 
I N 

W **4 II 
3 O H 
a It 

aJ U II 
3 4) II 

°-i II 

0 3 * It 

4) C ^ li 
1.1 H H 
3 ^O <K R 
*0 C O M 
4) 0 « 

O H 

O 4) 4J It 
W 4i 3 4 

a a R 

^ 3 It 
0 0 O H 

II 

-H u n 

0 0 ^ II 
U ^ 3 R 
O 0 R 

-* %- n 
• O' 4) II 
jC *0 II 

a a n 

0 O O II 
Wa 4J W II 

O* n 

O -O H 
>• w 4) 'I 
aJ W II 
•-< M y n 

—. 4) (| 

-■>« w w II 
^ C II 
0 -« *0 rt 
^ O II 
O U O. 0 II 

» 0 •>H l| 

4) 0 II 
U 4.1 4J II 

c a. 3 I) 

O 4) V a R 
c ^ O aJ H 
0 0 U 3 R 
>«4 kd aJ 4! O II 
awt 4) C II 

0 > 4) <11 

^ • 0 II 

0 • 4) 4) 4) II 


C W U a.1 
3 4) 3 0 


4 ) a 

6 — 

4) -- u 

w a cj 

0 E 0 
>0 4) 

(/) u o 


4) 

'O 

o 

c 


4) 

I 

3 

C 


4) 

a 


0 

4) <>.0 
u 4) I 
0 3 0. 
42 U O 
0 aJ 42 

o 

; II It 

a •• .. 

o 


4) 

*0 

O 

c 


4) 

E 


C 

4) ' 


4) O 


0 u ^ 


a 

o 


0 C 

42 O 

0 

O C 42 
; ^ - 
O.^ 0 
owe 

42 0 


4) • 

*0 V 
O aJ 
C 0 
laJ 
5 0 
4) O 
C i 

« a 

^ o 


4) 

■o 

O 

c 


c 

■ 4) • 

w C 


41 O 

3 • 

ha Cg 

42 

C 


4) • 
T5 4) 
O u 
C 0 

' 42 

5 0 
4) O 

a. 

<N O 


4) 

•o 

o 

c 


4) 

*0 

0 

c 


4) 

E 

3 


4) O 
3 • 


4) 

■o 


4) • 

■ 42 C 


4) » 
*0 4) 


O 42 0 42 

C 0 C 0 


3 0 3 0 

4) O DO 


a 

o 


a 

o 



a 




ha 

^ 42 

42 

JR 

42 

^ aJ 



0 > 



T 


c *■' 

c 

c 


C 



4) C 42 


■O 

0 


--a 0 

0 

■w 

0 



11 

42 0 t 

3 

o 

—a 

4) 

— 4) 

— 4) 


4) 

— 4) 


It 

0 4) 

C 

c 


«,a 

* 42 

• 42 

» 

42 

• 42 


II 

42 —• C 




0 

i/ 0 

it 0 

4) 

0 




0 O w 

il 


ha 

42 

42 42 

42 42 

42 


42 42 



o o -* 



o 

0 

0 

0 0 

0 

0 

0 0 

0 

R 

\J3 O 

4) 

0 

ha 

a 

42 O 

42 (J 

42 

O 

42 (3 

4) 





4a 


0 

0 




42 


3 •• •• 

0 

0 

•22 


O W 

O 42 

o 

•J 

O 42 

0 


a 


'3 


3 


• 3 


3 

1 3 

w2 



0 •« 


a 

a 0 . •' 

a 0 . •« 

a 

a... 

Ua Ua *. 

0 


3 0 

O c 

42 

0 

42 'a>a 

O w 

0 42 

0 

42 '42 

0 W >44 

O 


0 -< 

1 ha 

3 

C.3 -< 

42 3 - 

42 3 -* 

42 

3 -* 

42 3 - 

1 



a 3 

Qw 


O 

^ o 

— O 


o 

«— o 

* 4 aJ 

II 

it 1 c 

O 42 

42 


*0 

■o 

V 


T3 

T3 

'4a O 


ha ha A) 


3 

w 

c '«-• c 

'4a C 


C 

'44 C 

Q. 


3 0^ 

—• u 

4) O 

— 

4) 

-a. 4) 

3) 

•** 

4) 

•W OJ 

42 


*0 i>^ w 
it u 3 C'^ 

u CJ o -W .4. 

O O’ 


c o 

it 

■o 

c 

4) 


116 







il 



c 

•-4 U 

tl 

C 






— 






1 


41 




U U f 


9 



H 




£ <9 

II 

••4 












1 


4^ 




.* 41 41 


Cl 



H 




(J 

II 











TJ 


1 


9 




-^TJ 3 — 








u 

<9 « 

II 

«• 










4) 


1 


u 




—o 


b 






a. 

E C 

u 











w 


1 


V) 




^ 0 -• 


41 






•9 


II 

> 










3 


1 






41 JT 


3 






CJ 

JZ jC 

II 

^9 










tl 


1 


u 




bl lA « 


O 







U 0 

II 

U 










41 


t 


u 




9 41 11 


— 






« 

-9 <9 

II 

b 










X 


1 


3 

c 



b> tl <4 




C 




u 

<U E 

II 

9 










bJ 


1 


O 

41 



(/) 9 b* 


A 


-4 




V 

o 

II 

1 












1 



JC 



41 41 




-b 




a» 

• ^ oH 

II 

41 






i/J 




— 


1 


a 

u 



14 Q, (D CP 




(A 


tn 


w 

SO O <9 

II 

C 






u 






1 


— o 

• « 



b ■*-' /TJ 


4J 




> 


« 

C 

II 

••4 






C 






1 


^ o 




3 41 « VI 


41 


b 




Ji 

C «) 0 

II 

j: 






41 




C 


1 



o 



U 3* C M 


VI 


41 


u 


n 

0 hJ 

II 

u 






u 




o 


1 


>• 

* 



9 0 41 




TO 


u 



c c « 

II 

9 






C 






1 

a 9 

II 



01 E - E 






«9 


<N 

o m 41 c 

II 

£ 






o 




w 


1 

o 

b ^ 

u 



0>-4 4-1 • 


TO 


O 




£ 9% 

•H U 41 

II 







u 




•«4 


1 

o 

Ul >-4 

c 



-9 • b 


41 


£ 


V 


jj ^ 

bi 41 C E 

II 

vt 

• * 









«l 


1 

—4 

9 3 

3 O 



£ b <0 4> 


b 


1 

A 

C 


O ^ 

<9 > O 

II 

>. 

r- 





> 




c 


1 


:c 

O IN 



4) c TO 


—4 


4) 




X 

tJ U 

II 

9 •• 






9 




9 


1 

o 

41 

U 



« CP 9 —• 


V) 


Cl 


jC 


> 

tf) « 

II 

w 4^ 

*1 





u 




u 


1 


C '1 

TO 



b 4) b 0 


• -4 


9 


o 


< ki 

j< 4 V 41 

II 

u a 

• « 





b 






1 


-* 'V. 

41 0 



41 b bl ^ 


> 






n 'll 

Vi Q X 41 

II 

9 > 






< 






1 


£ 

C £ 



CP C • 




a 


E 

'fl 

3 

0 < 4J ^ 

II 

\U 

u 

• 










1 


U U 


«x 


4J b b 41 


b 





• 

3 u 

3B £ 

II 

41 

41 









— 


1 


9 41 

4-» 

4J 


b 41 Cl 


11 




4J 

iJ 

« ^ 

X b> «J 

II 

C ^ 

CP 











1 


E -O 

c 

3 


C TO 9 


TO 


•• 


3 

3 ^ V 

V 3 

II 

c 

41 





41 






1 



« 3 

a 


—*4 


—b 




0* 0*^ Cb 

'Q a '9 

II 

X -H 

u 





C 




O 


1 

c 

li 0 

•• O 

bi 


s o a 


0 


b 


tJ 

ij 

u 

C u u 

11 

fj ^ 

C 









H 


1 

••b 

•» £ 

u 

3 

A 



x; % 

41 


3 

3 

>9 O 

3 41 3 O 

n 

9 (A 

•«4 











t 



U 0 

O 

l«4 

•« 



TO 


o 

0 X ^ 

(A > O w 

II 

E 






o 






1 


u 41 

c 41 


rsi » — 41 


4) 

• ^ 







II 

1 •• 

•• 





9 




— 


1 

41 

41 U 

3 C 

41 


u « 

t 

O 

41 

O 



































II 

3 b 


• « 

• « 


*% 


• » 





1 

9 


U -• 

3 

0 



-b 

■•b 

1 





c 

II 

a 41 


A 

A 


A 





E 


1 


o a 



u 

« * a> 

s 

a* —* 

41 

tl 




o 

11 

w -0 

hJ 

fN O 


o 


O 


o 

o o 

1 


-C 

41 

a 






U 





■•^ 

11 

3 —• 

c 


IN 


IN 


<N 


IN 

w 

IN 

1 



C 

TJ 

w 

b b b b 

u 

b 

b 3 

9 





u «J 

11 

0 0 

3 

41 








Cb 


1 

M 

41 41 

<44 

C 

41 

3 3 3 3 

3 

3 

3 41 





-o 

4) a 

II 

jC 

O 

C 

—4 




— 


—4 


—4 

1 

W 

O —' 

■«4 

41 

v> 

aaaaaaac 

0. 




u 4> 

e — •- 

n 

41 

u 


O 


O 

— 

O 


o 

— 

o 

1 

3 

/TJ —. 










« Q. ^ 
I U O O 


i a-- I 
L O I 
“O O O I 
C —' O S 


b 

n 

41 £ 

41 -b u a. 0 

It 

3 U 41 


1 


I'-' 


I 

1 

!'«' 1 


a 3 

41 


|w. , 


9 

II 

b -4 4J 

b > VI £ tfl 

n 

TO 9 C 


3 


b 

b 

b b 

b b 

b b 

b 

b 

TO 

b 

b 3 

b 

b 

H 

^ -b 3 

9 41 >< O 41 

II 

a> b 

c 

41 

41 

3 

41 

3 4l 

3 41 

3 41 

3 

o 

C 

41 

3 41 

41 

9 

il 

H Cfti < 

o oc </) CJ Q 

II 

u a— 

-b 

C 

VI 

a 

VI 

Q, VI 

O. VI 

a. V) 

a 


41 

VI 

a C 

VI 

a 

H 



11 

o 

fP 














41 

1 

I I 1 

1 1 1 1 1 1 

1 

b 

4) 














VI 

1 

1 1 1 

1 1 1 1 I 1 

1 

a 
















117 
















118 















Title : PrlntQueue_to_f1le 


I 
R 

II 

il 

H 

9 

I 

N 

I 

n 


I 

II 
il 
tt 

ti 

II 

II 

N 

II 

% 



a. It 
V I 
M t 


U 9 

« H 
«) N 
3 R 
N 

« » 
JZ H 
4J R 

R 

> H 
M R 
n 

rj R 

I s 

H 

C U 

II 

« II 


c 

a 

•« 

o 


W H 

3 R 

a. n 

4J II 
3 « 
O II 


w 


H 

4) 





O 

O tJ 

II 

3 





O' 

• u 

II 

41 





Li 

so >9 

It 

3 





V 

Li 

II 

0* 






C 

II 






91 

0 

II 

c 






C H y 

11 






<N 

O «l 

W 







Li ^ 

II 



• • 



1 W O' 

4J 4t O 

II 







> 

II 

a 


o ^ 



OS 

It 

II 



o - 



' >« 

M » 3 

II 

V 


—4 



• u 

^ < 4» 

II 



41 



!-> ^ 

u O 3 

II 

■ M 


u 



3 

O < O* 

II 



•w 0 



• 3 L« 

3 

II 

\ 


<3 w 



u V ja 

X n 

II 

0 

c 

W V) 


•% 

3 £ V 

'T w 

II 

w 

4J «* 



41 


•o C 

II 

1 

X ^ 

a o 



4i 4J 

C u 

II 

41 

• 




3 O 

3 41 U 

II 

3 

U 

• « 



o z ^ 

(A > CU 

II 

41 


• js 


1 



II 

3 

o 

y 


0 



R 

O 

• 



u 



II 

4^ 

H £ 

41 




C 

n 

c 

y 

C Li 

a 

41 


o 

II 

■«4 


•*4 

0 

3 


•M 

11 

Li 

It 

u 

0 

41 


U 4J 

II 


•n u 

•-* 3 


3 

*0 

4) a 

II 


W 

a 


-o 


u 

41 


II 

41 

*J Ll 

0 

111 

4t -«4 u 

II 

L* O 

3 0 

41 j: 

9) •«* 

u a o 

II 

3 

a. 41 

^ u 

4.1 > 

V) E ffi 

II 

'0 

lA 

-• 3 

iO y 

>• 0 41 

11 

V c 


Cfti < 

O CC 

V) u o 

1? 

y -H 

41 

1 1 

1 1 

1 1 

1 1 

1 1 1 

1 1 1 

II 

» 

1 

0 O* 

L( 41 

a.o 



*0 '*>4 

c - c 

(V 

TJ »- 

c cu 

■a 

c 

V 


119 






Author : Matthew J. RothlIsberger, Captain, U. S. Army 

Date : 10 February 1992 

Revised : 


3 

a 



120 









.>« 

41 


4) 

4) 

C 

41 

C 

C 

•« 

C 

— •» 


X 


X 

jC 

O V 

X 

U V 

u 

<4 

u 

>9 


E A 

<« 

E A 

E 

• u 

E 

• M 


4> 


4) 

4) 

-• JS 

4) 

— X 


*« 0. w 

— 

»« 0. 4.J 

o..-^ 

-* 3 T3 

a.-» 

— 3-0 

3 <N 

^ U 

3 fS 


4J 

<N O 3 

W — 

<M O » 

O ' 

1 • 

O 1 

1 • 

* ® 

4) « 

. 4) 

9) M ^ 

3 

sew 

J< 3 

3 C u 

C « 

4) — W 

C 0) 

4) — 41 

•-. 3 

3—3 

-• 3 

3 — X 

— cr 

cro E 

-« cr 

CTO £ 

o • 

• • 3 

o • 

. . 3 

. 4) 

« — c 

. 4, 

41 <N C 


1 

<N — 

— 1 

Ic a 

0. C 41 

a 

0. C 41 


li 

C 

u 


•« X 

rl 



o 


41 

3 — 


— b — 




o 



41 

3 — 

^ b — 

-- 


O 


o 

4> 


out- 


•b 


-.4 


E 

b ' 


• v> — 


—4 


•«4 



E 

b • 

» 01 — 



—4 



O' 


• b 


■b 

3 

b 


O 

01 b 


b o O 


3 


b 



O 

0) b 

b O O 

3 


b 


hJ 

w 





C 




O 41 


4) , 


C 


•■4 




O 41 

41 ^ • 

C. 




•w 

41 


41 b 


0 


01 



b 


b 41 — 




VI 



<N 

b 

b 41 ^ 



01 


n 

X 


C b 3 


b 

<1 

C 



41 C 


C 0*j< 


il 


c 




41 C 

C O'.X 

It 


C 


c 

Vi 


0 3 0. 


1 

••s. 

3 


c 

O' -. 


— 3 C 


•V. 


3 



C 

D».b 

— 3 C 

■*>. 


3 


>9 


c 

— b C 


C 


b 


-•— 

3 O 


0 £ - 




b 



•-4 

3 O 

O E - 



b 


U 

<— CN 

o 

01 Vi mH 


o 


b 


— • 

E a 


a — — 


Jd 


b 



—4 

E a 

a— — 

Jd 


b 



X O' 

••H 

b 



C 

O 







C 


O 




1 

k • 

c 


o 



w 


41—01 


b 

'>4 



b 

' 41 


o b b 


—4 


♦ 



b 

41 

V b b 

—4 




9 

O ^ 



-.4 




41 

b b 


b 41 41 




<N 



41 

b b 

b 41 41 

— 




u 


4J 

X 


01 

o 



b 

41 3 


3 O' b 


o 


Jd 



b 

41 3 

3 O' b 

o 


Jd 



> 

«> 

* 0 X 


c 


C 



O* b 


b o C 




C 



c 

O' b 

b 01 C 



C 


u 

• b 

Jd, 

< — a 


3 





O VI 


VI b 


fN 


•"4 



■•* 

0 01 

01 b —• 

n-l 


•— 


n 

n 3 

b 

Q O' 3 


b 




o 

b O 


(J C 0 


Jd 


—• 



0 

b O 

O C 0 

Jd 


— 


O 

<« 3 

0 

< b 


b 

c •«. 

t .« 

• « 

a 

c — 


^ a 


C 

•* 


• « 

• » 

a 

C 

a 

c 

•% 




. 3 u 

3 

01 O' 


1 

.H M 

b .IB 


[ 

- 4) 

• » 

41 


—4 


b 

A 


1 

- 01 .» 

41 1 

-4 





u 41 X 


X b 


41 

— <N 

41 

« 

4) •• 



— ^4 41 



IN 

41 

4 

4 

0 

— ^ 

P-4 S4 01 

— 

<N 

01 


3 

3 X 41 

«r 

— 30 


b 


b 1 


b — 

%« 

» 

— b 

•% 



b 

1 


b — 

>4 — » 

— b •• 


3* 

b 


Q. 0. W Cu 


*0 a.b 


3 

b 

c 

f 

3 t 

'w 


% 3 

A 

b 


C 

t 

t 

3 C 

b4 

b4 k 3 — 

b 


C 


u 

hJ w 

C 

b b 3 


b 

41 « 



b 

0 


1 » b 

X 

41 

« 

•*4 



b 

t 1 « 

1 « b X 

01 

« 



3 

3 O 

3 

41 3 b 


01 

b X 

o • 

• 

01 

— 0 


0 VI 

y 

b X 

0 


•. 

tf) 

— o 

0 01 y 

b 

X 

o 


0 

OX — 

cn 

> O «rt 


O 

C fJ 

ax 

X 

o» 

* b 

9 

b > o 

3 

C 

y 

ax 

X 

O * 

f b < 

b 0 O 3 

C 

y 

a 







\ 

^ iq 

1 u 

o 




1 

41 

••— 

3 

1 y 

y 


1 

1 41 

-pH 

3 

1 




• <• 

.• <• 

11 

b 

o 41 

4) 3 

3 

« • 

. 41 


o - « 

b 

o 

41 

o 

3 

3 

« 

« 0) « 

01 « « b 

0 

41 

41 







3 

a u 

b V 

41 

X X X 3 X 

3 X X 


a u 

b 

41 

41 

X X X 3 X 

3 X X —’ 

a b 

b 





C 

tl 

O. 

1— 

3 b 

b 

y o 

U O 

y 

41 y y 

41 



3 

b 

u 

y y 

y 41 y 

41 y y 41 



3 


TJ 

u 41 

41 O n 

4» -C »-• 

u tJ > 

3 4> 

H (k« < O K < 


4> —• fcj 

*j a M w 

'O u O 3 

I'-' a 4) 

'/I VI 

o 41 ^ — 

■—’ Wl --• 41 


4) 4>4i04>0i4> 4>-- 

— I 

S'- 

333U3U334)' 
o. a. ao. 0 . 0 . a o. c 


4ja«nu ui*-i4)4>V04)04)4)-'^ iJOVl 
3mmuul.*ju*jul.'^ ‘TJUO 
► 4j i'-'a4»a —••-•-'C'—C'-''-' l•**J I'-' 

iVltJ (/) 

—• C333i-3w334)-04>'*- 

—'tfl-.4 4» 4>0.0.0.0i0.a.Q.Q.C 

I -O 


121 






V 

or* 



• » 





•« 


«■* 






•« 

i 




•« 

« 








t 





* 

















c 





« 

0 





g 








gi 

«« 














A 

« 




A 

41 

4» 

w 




« 

4.J 


<« 




w 

<0 

<« 

u 





u 

4J 

«l 




u 

M 

« 

1 




M 

1 

1 

<N 




1 



« 





41 

« 

c 




4) 

C 

c 

•«4 *« 




C 

•*4 


X ^ 





X ^ 

X 

o ^ 




X 

O V 

o 

<« 




u 



£ A 





€ A 

£ 

‘ II 




E 

• N 

« 

V 




• 

41 

• 

<-* X 




4) 

'-t X 

^ •« 

4i^ 




«>« •« 

*« C. u 


—. 3 “O 





3 *3 

3 Ol 

«-< *J •— 




3 <N 

«-< U -4 

u ^ 

<N O » 




u —• 

<N O 3 

C 1 

1 • 




O ( 

1 • 

• « 

4> ^ « 




. ^ 

41 ^ % 

^ 3 

3 C ki 




M 3 

3 C w 

C V 

4) ^ 




C 41 

4> ^ 4, 

3 

3 — 4 




-• 3 

3— X 

-* O' 

tro e 




— 3* 

<ro E 

o • 

• * 3 




O • 

• • 3 

. 4) 

41 c 




. 4, 

41 ^ C 

-M 

-• ^ 1 




■’T — 

— J0 

J4 a 

a c 41 




JK a 

a c 41 

C 3 

3 - w 




C 3 

3 - u 


4J — 


C 


■ «4 4J 

U 'O 

-• o 

O ' W 


4) 


— c 

o • U 

« • 

< U tf) 


X 



• W tf) 

W Ji4 

V 1 


•J 


w ^ 

M 41 1 

« c 

CUE 




4) C 

Cue 

u 

C V 


A 


w ••* 

-• C 41 

c ^ 

-4 «J 


V 

• « 

C -• 

—* Hi4 W 

^ o 

o o «i 

c 

c 

A 

— o 

O 0 •» 

o • 

• a > 

4) 

tfl 

4) 

0 • 

• O. >• 

Q.fn 

fn 1 *1 

X 


CT* 

Q,^ 

^ * «rt 

\J0 

J0 V ' 

u 

ll 


Lx 

-X 41 • 

V c 

C u ^ 




4) C 

C u ^ 


4J C 


£ 
y o 

« V x" X* X* 

w u U U U 

•% ‘fl ^ 
u u « V O 

3 3 u u u 

a 4 ) a w ^ w 


O 

«« u 

u o O 


O 41 

41 • 


u 

4l 41 

J4 

41 C 

C O'Jtf 

C 


-<-«■« C 

•«4 

^ 0 

0 e — 


E a 

a - -• 




U 

• 41 

41 w u 

4) 

W 41 

u 41 41 

u 

41 <0 

^ u 

C 


u 41 C 

■ M 

41 VI 

VI U -4 

0 

u O 

O c O 

a 

C ^ 

a. 

I 

-4 41 .• 

41 f 

41 


^ 41 


-U 1 


* 

<«i4 

'MV U . 

u 

» 1 <» 

1 • u . 

VI 

— 0 

0 VI 

O « 

g u « 

u « (J 


I I <v 

4) « 4) • « u 

3 X 3 X X ^ 

V O V O (J V 

3 3 U <« C 

O 4) O « V -• 

^ U 4J u u 

C '-' C I 

kJ u U U U 3 '- 

333U3U33V 

a a aoi aa« a a c 


T> 

C >*- 
V -• 


3 

u 


O 

in u 


u o o 


C 

■■r* 



o y 


y • 



V) 



•*-’ u 


u y ^ 

• » 

II 

c 


X 

y c 


c crx 

y 




C 

o*- 


c 



h< 


—4 

nj 0 


O E - 

••4 

X 




£ a 


0.-4 — 


C 

o 



•— 


K 

1 

-•^ 




* y 


41 w b 

o 

— H 



41 

w w 


w y y 


o 

X 


u 

y 'll 


<U 3* 4j 

< 


c 


C 

O' M 


u y c 

c 

V 



— 

y A 


«n *> — 

0 

X 

— 


0 

M o 


O c 0 

— 

c •* 

• •» 


a 

c 


W ,4 0. 

•J 


U A 



— 41 

• « 

y 1 

••4 

-- <N 

41 « 

t 

41 •» 



—• y 

VI 

• ^ 

U 1 

4> 

U A 

V* — 

* 

■•* ^ •» 

c 

w 

C 4 

s 

V 



>*- « <9 ^ 


41 * 

■f* 




i « 

1 % 4.1 X 

w 

u X 

0 • 

« 

in 

-- O 


o my 

u 

C U 

ax 

X 

O # 

t u 

C 

utO'0 

1 

^ •« 

/y 

0 




1 y 

y 

O 41 

41 ^ 


« » 

» y 

« 

41 . . u 

u 

a u 

u 41 

41 

X X X 3 X 

3 X X 

<« 

1'^ 

<11 M 

w 

u y 

y y 

y 

V y u V 

u 

« -• 

U ■*■* 

•• 

<fl 

3 

-fl 

3 <9 <« C 

tfl 

u 0 

VI 4l 

tj 'M 

41 4) 

y o 

41 o y y -• 

O 

y 

O 3 

3 --. 

u u 

U W 

w 

M U U 

1 

u 

1'-' a 41 

a 

w -»* 

C 


c ^ 1 •% 

u 

VI u 

VI 

■0 

u u 

*j —« 


*J J *M 

3 

O 41 


c 

3 3 

3 w 

3 

u 3 3 y •— 

a 

VI 

— 41 

41 

o, a, 0 . 0 . 

ao. a a c 

u 


122 

















124 


setcol(reach, 20); 

















» 


<n 




0 

A 

<« 

u 

n 

C 




w 



V) 

w 


Z 

•0 





4) 

S 


X 


>» 


% 

i3 

c o «« 

« 

A 

• 1—* 

V) 

* *o 





1 




1 



u u « 

<9 






1 


V 

• « 





















4, <u ® 

y 








u 

















*0 





— *03 — 









9 

9 
















V 


1 



-»—• o 

w. 























1 


u 


i 


• • 

fN 0 — 

V 








V 

9 














1 


3 


1 


A 

V X 

J 






1 


c 















1 


y 


t 


fN 

*J 1 A « 

o 






1 


V 

c 














1 


41 


1 


V 

<q 41 •< 







1 


O’ 

-»4 














1 


X 


1 


w 

4j y 







t 








• » 









1 


u 


1 



fn <9 u 

A 






1 


VI 

V 













tf) 







4J 

^-4 V V 









V 

c 



•* 


3 











— 




VI 

»4 CL VI O' 









•o 

o 



.M 


U 








C 







1 

U 

U 








o 

■o 



3 


V 








« 







u 

3 41 « VI 

V 


• « 






c 




14 


c 








u 



c 




u 

y O’ c VI 

VI 









V 



y 


c 








c 



o 




3 

w ^ Q 



c 






V 

u 



c 


n 








o 







y 

V £ -• E 

« 


-4 






X 

V 



c 


£ 








u 



4J 


1 



u • 

*0 


—4 




1 



3 



9 













•«4 




o. 

^ u 

V 


VJ 










£ 


u 








>< 



VI 




^ 0 

E k4 VI 41 

.J 








« 






V) 











c 




<N 0 

^ 41 C T? 

•«4 


u 










u 


k4 








u 







—4 

• ^ -M 

VI 


V 










VI 


•*.4 








u 



u 




>4 

u 41 k4 0 

—4 


T3 










w 










< 



H 



a 

^ — 

V *J 4J X 

> 


—4 










—4 







•« 









0 

u ^ 

O’ C • 1 



o 












X 





V 



<N 






0 

u 

41 -I u 41 

w 


X 












u 





-4 






— 



•— 

'« 3 

u « y 

V 












X 


*0 





—4 



1) 







1C 

C “O 

*0 


V 












9 








C 






o 

V 

..14 i-M <>4 


• « 

y 










a 


y 





1 



-«4 



o 




c «• 

« 0 a 

o 

A 

9 










y 


u 





0 



X 



e- 




■'4 

X 

X 

3 

— 










■n 


X 





4J 



y 







X o 

«« •« 


— 

a 










i 


f 





' 










y u <N 

» 41 ^ 

V 

• « 















3 



VI 



X 



— 




41 

0 9 9 

y 












« 


« 


u 



>. 









f-4 

£ *0 4 

9 


X 











X 


X 


0 



9 


•% 



*« 


t* 



—• X 



y 











y 


y 


u 






A 



s 

A 


c 

n 0 y > V a.« > 

as <3 




.... 


A 





9 


-o 


u 



u 


o 

o 


o 

0 o 


-»« 

•• £ <9 



V 

V 



o 


<N 





V 


V 

A 

V 



9 


rsj 

<N 


<N 

u 

fN 



IV 


« 

• u -n 



CM 







u 


u 


s 


•h 

1 






bi 



<N 

k4 4) M 

xxxxxxx— 

— 





« 

A 




•»* 







y 


» 





« 


41 

4) y 

y y y y y 

u 

y V 

0 



• 


X 

X 


VI 

A 

y 

A 

y 

VI 

y 


X 

c 


£ 

— X 


X 

— 

X 


u T3 'fl 

T* fn 'Ti ^ 'll 

<9 

9 C £ 



X 


y 

y 


—4 


c 


c 

u 

c 


y 

—4 

9 

0» 0 9 

y 9 

y 9 

<9 

-4^0 

Al Al 111 A1 01 

V 

41 


•• 


y * 

9 9 9 9 



—4 



V 

••4 



X 


>9 



<9 


<9 


u 

o a y 

U k4 k4 k4 W 

w 

u ^ 

V 

a 


9 


V 

V 


X 

VI 

-4 

VI 

.-4 

X 

.-4 


y 

y 

« 

V 

* « 

• 

« 

« 

« 

« 

VI 

X 



*»’ 

y 

0 


V 

« 

w 

« u 


y 

<44 

|144 


4J 



14 

9 

C 

k4 X U £ 

u X 

M X 


1 u 

W ^ «•> «J 

u 

4J 3 

9 

0 

• • 

u X 

•«-' 

X 

X 

14 T3 


X 

.J 

o 

4J 

>» 


b 

0 


y 

y 


y 


y 

u 

V 41 41 

3 3 3 3 3 

3 

3 V 

.-4 


a 


y 

V 

y V 

y 



3 


3 


3 

y 

y 

1 


—4 

n —• 



•9 



u 

y -4 VI 

aa.aaaa.ac 

a 


o 



c 

9 c 

9 

y 

c 

a c 

a c 

a VI 

c 

u 

« 

o 

4) O 

« 

o 

a 

o 

9> 

3 

^ -4 





T3 

y 

o 

V 

—4 

41 

V 

VI 

V 


y 


y 


-TJ 

•-4 

3 

u 

0 

W y 

u 

y 

u 

y 

u 

y 

—' X 





C 

—• 

y 

u 

.-4 

u ^ 



c 


X 


X 


y 

-4 

a 



— 







a 3 





V 







41 

3 


3 


3 




4J 


Ai,) 

W «J 

u 

ij 

4J 

4J 

hj 

V4 







TJ 



3 

«J 3 

w 

VI 







*n 

3 

3 

3 

41 

3 V 

3 

V 

3 

V 

3 

0 







C 

V 

3 

V 

3 V 

3 

'll 







c 

y 

0 

a 

(rt 

a. M 

a. VI 

CL VI 

Q.v«-i 







V 

VI 

a c 

a c 

a y 







y 

c 



TJ 

c 


125 













Title : createoutputfi le 

File : output.a 

Author : Matthew J. Rothlisberger, Captain, U. S. Army 

Date : 10 February 1992 


c 


-o 




a 

o 

u 

a 

a 


o 


*0 

c 

f) 

G 


tA 

>• 

-3 

< 

Z 


a 1 

I 


V) • 
3 49 




O -4 

)l 



>4.4 




< 





l< 







X 




u 

II 



u 




o 




u 

II 



3 




< 




w X 

II 



0 




ui 




41 

II 







X 




£ u 

II 



A 








tJ 

l.( 



•a '1 







O 

4) 

H 


•a 

a-> 








V £ 

II 



C 41 







'iO 

—• w 

II 


s 

41 E 









II 



— 







C 

II 



C 







o 

0 

II 


<n 







c 

-a4 

u 

H 









o 


3 O' 

II 


Hi 

41 







k« 

a c 

II 


> 

C — 







4) 

U -4 

II 



I'-* 







> 

3 C 

It 



U 






aJ 


0 C 

ri 


C 

3 






tfl 


'•4 

T| 

41 

ifl 

0 u 







< 

C O' 

II 

—a 


3 






Wa 

O 

^ 4) 

II 

•aa 

u 

a 0 






n 

< 


II 

**a 

3 

41 






3 


<A 

II 

1 

a 

h A 








41 41 

II 

aal 


^ If 








aJ ,£ 

II 

3 

3 

c 



•» 

•% 

41 


■o 

•n u 

II 

a 

0 

41 






c 

u 

41 

1 

U 


41 -0 



rv* 

fN 

■•a 

3 

41 

U aJ 

'1 

3 

>*4 

— 0 


»a 



■aia 

A 

> 

u 

II 

0 

o 

-4 E 

»• 



« 

1 




II 

41 




« 

£ 

£ 

hJ 




II 

aJ 

41 

•• 6 


cn 

s -b 

a 



C 

II 

'fl 


3 U CU 

aw 

41 

41 




0 

1) 

41 

o c 

0 


t 

u 

« ka 

3 




II 

b4 


41 

|aa 

•»’ 


£ 

O 


u 

u 

II 

u 


41 u 


41 

41 

U 41 



41 

a 

II 


—a .aa 

C —' 


C 

C 

-4 C 

41 

P 


■•a 

i< 

41 

0 a 

— 4) 

1/1 

—a 

•aa 

41 -< 

•_> 

41 


u 

K 

M 

u s 

—a ^ 

< 


— 

Va ^ 



a u 

> (A 6 V) 
V >• O 4> 

flc «n o Q 


t I I I I 
<1111 


3 
tJ 
V C V 

o 

O O' 
u ® 

a.o 


— ' ' 

U U V t-' I 
3 « W 3 3 a» 

a O' u a a c 


4 ^ 3 
3 V 

a c 


126 










£ 

a 


ja 

•9 

£ 

u 


o 


73 

o 

c 


<9 


> 

e 


a> II 

X • II 

w 1) II 

U l< 
3 II 
V 73 li 

0 V l> 

son 

*0 0 II 

0 U II 

wan 

a It 

£ II 
73 0 II 

c in M 

<tl 4) M 


X 

a. 

< 


a *« 

-ti —* 
U VI 
O 41 
V 

>• 0 
w C 

I 


II 



. 


VI 0 

n 




o 

•« 


IM 


II 



I/J 


> 

II 



ky 




-t 0 


II 





>9 w 

II 



•n 

>- 

V) 


ia 1 


n 





w 41 

n 



«j 


4) 


W 


II 



X 


w -0 

II 



V) 


73 


X 4^ 


n 





'fl <9 

II 





o 


U ^ 


ii 





4) 

II 




«—* 

C 


9 E 


i< 



c 


4) jC 

II 




X 

1 


41 3 


II 



-M 


C 

n 



1 

< 



CC C 


11 



^9 


4) 

II 



V 

X 

O 



•• 

II 





^ JZ 

II 




u 

1 


« 


|| 



a 


0 w 

II 



Ifl 

< 

k4 


4; 


ii 





"0 

II 



u 

CJ 

n 


u 


II 



u 


£ C 

II 



in 

cc 



9 

u 

II 





■•4 

!l 



1 


£ 


u 

u 

II 





41 

ll 



u 


3 


m 

9 

ii 



u 


-C *3 

II 



u 


C 


1 

1 

II 



V 


O w 41 

l| 


>« 

9 



•% 


V 

-1 



U* 



II 



u 


• 

A 


c 

II 



u 


VO V) M.4 

)l 


> 

VI 


n 

>. 


—4 

n 



4> 


T5 w 

n 


>9 



ij 

9 

o 

X 

n 



jQ 


C U 

II 


u 

• 


9 

u 


u 

ii 



tfl 


O v» 

II 


w 

> 



u 

fT*! 

'll 

II 




c 

-* 3 41 

H 


•9 

9 


<n 

9 


£ 

II 



—• fN 

o 

w -0 "U 

II 


< 

k4 


1 

1 



It 

« 


£ ^ 

■w4 


II 


V 

ky 


— * 

n 


n 

'1 




*J 

41 41 41 

II 


c 



9 

c 

— - 


n 

CD 


0 ^ 

>9 

> w u 

It 


-.-4 

1 


J3 




If 

>< 


X 

u 

3 ^ 

i| 



41 


O 

X 


'«y 

ii 



>. 

in 

• T5 

i| 

VI 

o 

C 


—4 

o 

C 

1 

•i 



• w 


< 1) V) 

'1 


7 

•-* 


T 


—4 

0 

1 

C 


n 

u 

CJ U >« 

1 


£ 




£ 



1 

>9 

>9 

3 

0 

< 0 11 

I 

V) 


u 


—. —• 


n 


n 

1 


3 w 

2 

w w 

II 


V) 




VI 

—• 

■/I 

'1 

U 


41 


Kan 

tf 

in 

> 

£ 


>1 

>. 

—4 

>. 

!| 

3 

3^4) 


6 

•1 

> 

9 




9 

•«. '«y 

9 

’1 

a a 



■a « 


—« 

M 

£ 


-* 

w< 


u 

1 


u 


c 

w M 

>1 

•9 

kd 

a 


^ C 


1^ J o 

w 

1 

3 

3 

■u o 

3 


!| 

C 


'll 


C — 

TJ 

w 

•* 3 

1 

O 

O 

X — 

U) 

> H a 

ll 

>9 

1 



3 


% <. 1 





O 

IJ ijf 


!> 'll 3 -C 3 


x; £ tf> -C 41 

'J O 01 u c >» 

. U 'll w -o — — 

- 01 o; 1} i> -C 'Q 


C 






0 


»j 


a 

y 

a -9 

af>< * 

C 4-> 

a u 

a<^ 

w 

k- 

L4 

o c 

>4 






-*y 


3 


ly 




•— irt 

w <9 

w 


— V) 


9 9 

-9 





b4 

w 


0 


3 

E 

3 tf» 

3 n n 41 

— O 

3 £ 

3 n 

<u 

V o 

V 

E 1 

£ 




Tt 

n 

a 




O 


o o 

o c c c 


O 

o c 

c 

c 

c 

kJ 



u 


41 

£ — 

-4 


4) 



kj 


•-»4 —4 —4 

»j hj 

1 kj 

■--4 

-4 

ki 

•-4 

kJ 3 

n I n 


O 


tf» 


V4 


V4 


V 

3 

n 73 

n, —. . 

3 3 

n 3 

V — 

-- 

-• 3 


3 a 

4_» '1 

« 

X 

n 

—y 

4j a 

u 


3 


m 

a 

V) -- 

!/» 

a a 

tf) a 

tf) 


a 


a 4-1 

'9 1 4J 

—y 

ij 

ij 

> 

tfi g 

tfj 


TJ 


3 


3 -- 

3 3 5 

W aJ 

3 w 

3 3 

3 

kj kj 

3 

kJ 3 

U 


3 

'll 

4) 

> 0 

n 


n 

c 

•tj 

■j 

'9 3 

'9 V 3 n 

3 3 

9 3 

■9 n 

n 

3 3 

4) 

3 O 

H H 

Ci. 

< 

a ac 

(A u 

Q 


u 

>4 

a 

0 

aj3 

a c a c 

O O 

a o 

a c 

c 

a 0 

C 

O 

a 








o 












73 

n 1 





1 1 

1 1 


u 

V 











C 

tf) 1 





I 1 

I I 


a.jz 











n 


127 













APPENDIX B SCM CODE 


The program listing begins on the following page. 


129 





M 

II 


It 


O 

>*0 

*> c _ 

c * 

« Jj 4) 
O ^ C u 
0 41 C <« 
C *-< 4) 3 
O O' W U 
•H O V O 
4J i< M u « 

<« <q «i 

u o u «a 

<M 4.> a.« 

•H •-« iJ 4) X 
U 3 •> -U 
« 3 a 
S.X 4J •! 

«l 3 ««*« 

o o o 
<1 u ‘O 
X « ^ 41 u 
4J C ^ 41 
•I 't) 
•I W 0. <« 
M C £ 41 
<»4 o O X 
^ o 
<« W 4) 
j: >. *0 X 

4J 0 U c W 
C *4 
« 41 C 

^ O *0 -H 
U 41 

VM *r^ 41 -u ^ 
'O A* ^ c 
4J 4 •! 4) 3 
H U 0 

41 41 41 O 'M 
u C C 

•H 41 41 
<4 X X ^ X 
O g 41 
« <4 «« S C 

V £ £ <4 

<rt O 

•H TJ « « 

. > e X VI g 
O >4 4J 3 
W 3 

a*d c c 73 
g o g 
u «i «4 g 
g u g E o 

VI <4 c u 

3 a. Q g a 


It 

c 

•o X 

(1 


II 

•«H 

g M 4j *0 

li 


II 

g 

X « c 

II 


II 

u 

4^ -H w <4 

II 


II 

a 

g g 

II 


n 

g 

<-4 <A X c 

It 


II 

u 

• •«4 •W ^ O 

II 


(1 


g tM «i 

II 


II 

« 

U > VI ^ 

II 

♦» 

II 

u 

3 ij g g 

II 

(A 

II 

g 

O *0 X <4 W c 

a 

C 

l« 

O' 

• g g c 3 3 

It 

o 

ll 

u 

VO g u g *0 *«-< 

II 


II 

g 

o g 

a 


II 

X 

c u g >< g X 

II 


It 

irt 

o ax w 0 g 

II 

c 

II 

..H 

C ^ u ^ 

II 


II 


one a g 

n 



u 

g g • X 

g > E <4 O 

*j g X < 

V) » g U V) 

^ < X o g • c 

u Q u E g g o' 

O < W — ^ • 





u \ 

•» 





«4 U 

^ g 





g 

g a 





g X 

a >« 





u £ 

>* w 





^4 3 

w I 





w C 

IC 




* 

VI 

C 0 


— 



% 

o -• 

•* 




^ g 

u •* 





<4 c 

w g ^ 

g 




X 

3 g 

a 




0 X 

V) w ^ a 

>* 




g 

c i.4 g >* 

u 




O' *4 

g VI a u 

1 




£ 

U C >m i 

c 





4J .«• U W 

4 




0 % 

1 1 1 g 

g 

«• 


mm 

<A 

£ E w W 


at «• 

«• 

mm 

X g 

g g •«« 4.* 

0 

«• «• 


mm 

u C 

tA in in 3 

o 

m m 


mm 

pv—* 

X 

X 

m m 

«• 

m 

C X 

O O > -' 


9m mm 

mm 

m 

g g 

-4 

.. o 

mm mm 

mm 

m 

—♦ <4 

1 lO «-• 


mm mm 

na 

mm 

1 E 

C C ^ 1 W 1 

«• 


mm 

t 1 

O O IC 

g c 

mm 


mm 

•m 

-4 C 0 

O' o 

mm 

-4 

mm 

O 

u u O 

g >«4 

mm tn 


mm 

1 

>4 4 4J 

4J U 

« C 

g 

mm 

u 

k4 ^ 4 

C 4 


g g <4 u u 

e £ w. g g 

3 3 g 6 O E 

c c E 3 >- 3 

UJ U 3 C I c 

. . c U W U) 

O O lii * g • 


II 

s g 

3 VI g 

••H ^ <*4 

(1 

W C 

II 

4 g u 

X ->4 C 

£ >4- a*^ 

II 


II 

* X 4 

mm -«4 

g -«4 4 

II 

•*4 

A 

C C iJ X 

73 VI X 

U hJ u u 

)i 

• ^ 


^ .-4 U 

C u -4 g 

VI X VI -H 

II 

«1 -4 


4 4 4 VO 

3 g X 4 

>« g g c 

II 

g c 


£ E Z ^ 

(/) > H £ 

VI O 3 

II 

3 -4 





II 

g 


• • * •• •• 



II 

3 g 





M 

0-0 



c 


II 




o 


II 




—4 


II 

o o 


|> T3 g Q. '> 

I u g £ —• --* 'I 

tl g O M g u II 

ii .» g X g -4 u a. g " 

'IW—«UU>V1£tf| <1 

ti 3 <4 g >. o g " 

iie^cw<aae(/)uo n 

II II 

I I I I I I I I I I I I I I I 

I I I I I I I I I I I I I I I 


• g 3 

mm 



u 



- ^ . o cro 





4 




mm 73 






VI 

lO ^ g 



g 










4 



^ U — |4J 1 

0 0 


c 




— 


«• g <-H 




w 


>t 

XX |4^ C 4.1 





C — 



a a 





tf) 



g g X >-• X 

1 


X 


•% -.4 


c 









{- H X g g 

E u 


g 


g X g 


4 

— 4J U 








g {- J e- 

3 g 


4 


a g a 




• u c 




«l 



S 3 H g 

C O' 


E 


> 4 >4 


4-1 

U 4J 




• » 

••4 



g g sex 

g g 




4J E u 


1 3 — C 

« a 



o 




c c 3 g g 

|4J 


g 


1 1 


b 






g 



g c VI c 

U c 


X 


73 VI -O 








Q. 



VI v» c 

**» .4 


*j 


V V) u 



C > V) 





>. 



— -4 « VI 

tfl 




0 g o 








u 



v> ..rt o 

C E 


u 


g g g 


•• 


« C 




, 



o 0 - 

..4 O 


O 


g g g 




«• -«4 




C 



- -4 o 10 

VI 


*«4 










o 



- i O -4 k4 --4 
















£ £ -^ 1 g 1 

0 « 


VI 









3 

u 



3 3 IE O' E •' 

^ o 


g 


4 "4 4 



g 




u 

g 



C C E 3 g 3 0 

1— 


u 





4.1 





3 



g g 3 c c ->4 

E 

1 

3 








tf) 

c 

w 


a 

1 1 c g c g 1 

3 E 


4.1 


4 a 4 


• .4 

4.> 







>» 

<A w g I—• IE 

C 3 


g 


1 1 


4J 





.. 

(A 



C N- 1—3 

g c 


3 

1 

g u g 


— 

X g 



C 


C 


I 

4 VI *44 £ 0 C 

1 g 


W 

1 

C IC 



14.1 ^ 

M ^ M 



X 



ij 

u c V) 3 g o g 

VI 

1 

4J 

1 

-.4 .4 











->-• > X VI X 1 

C '« 


tfl 


X C X ^ 





£ 


£ 

A 

in 

-4 

4 ‘44 




u -4 g 



4» -4 —1 

w 



c 

g 

JZ 


g g g g g g o 

u 3 


4 

1 



i4 


«■ » s 

a* 

g 

g 

in 

n 

> 

O* O' O' O' O' O' 0 

kJ X 


iJ 

1 





« * « 

mm 

w 





41 41 'n Tl rn 'll O 



4 



g 



« » « 

mm 

3 


g 

c 

g 

^ M ^ ^ Jt ^ 



O 

» 

g g g 




mm m mm 

mm 

T3 

X 

a 

>4 

a 

g g g g g g g 

g 



1 









><>4M 

>. 

4 4 4 4 4 4 VI 



1 


^ ^ 




mm ^ mm 

4* 

g 

£ 




a a a a a a 3 

3 


1 

1 

tJ w w 





130 












-dala structures for the global state tuple(node) 


> 



o 


«* 

4) 

a. 

>e 

U 

I 

>< 

u 

u 


I 


aJ b.« 



1 

1 

1 

1 

1 

1 

1 

I 





1 

1 

1 

1 

1 

1 

1 




1 

1 

1 

1 

1 

r 

1 c 








1 





1 




1 0 













1 












\ 





1 




t aJ 








1 









1 'll 








1 









1 E 








I 









1 ka 








1 





1 




1 0 













1 












1 





1 




1 C 








1 





1 




1 .-a 








t 





1 




1 ^ 








1 





1 




1 C 








♦ 





1 












j 





1 




1 -« 








1 





1 




1 T? 








\ 





I 




1 C 








1 




<« «« 

1 




1 'll 








1 




*0 •% V 

1 




1 








1 




4) 4) tf) 

1 












1 




« 3 ^ 

i 




1 41 








1 




3 w ^ 

1 



• « 

I aJ 






•k 


1 




C 4J 

1 



•k .k V 

1 >9 






y 

• « 

1 




3 

1 



41 « a. 

1 w j: 






a 

V 

1 




II II 

1 



a a >« 

1 VI a 






>4 

a 

1 




II .. 

1 



>• >*aJ 

1 






iJ 

> 

1 





1 



aJ aJ 1 

1 « ka 



• » 



i 

4J 

1 





1 



1 141 

1 C O' 



O 



y 

1 

1 




V 

1 



4> ® -a 

1 o 






aJ 

V 

1 




a 

1 



k.> W ^ 

1 41 




'» •« •« •» 


'll 


1 




>. 

• 




1 aJ aJ 



»• 

y y y y 


aJ 

•fl 

1 





1 



aJ *J -- 

1 - 9 




a a a a 


VI 

iJ 

1 




1 

t 



«/) tn ka 

1 V) 4J 



—• 

>>.>.>. 


t 

Irt 

r 




c 

1 



r 1 

1 C lA 



9 

'k 4-> a^ aJ aJ 


E 

1 

1 




0 

1 



(N > 

1 'll 



ka 

y 1 1 1 


y 


1 




--H 

1 



4) 41 ■ 

1 ka —a 



3 

a. c c c; c 


u 

'll 

1 




4J <« 

f 



C C — 

1 a^ 9 



aJ 

>-0000 


VI 


1 


M 


— 

1 



-a ^ 

1 ^ 




aj —a —a 


> 

o 

1 




V) ^ 

1 



£ X ^ 

1 V) 0 



C 

1 aJ aJ aJ a^ 


VI 

•>« 

1 




c > 

1 



y u o 

1 c — 




..4 ^ -i-a 



O' 

1 




C u C 

1 



•n <q —a 

1 - O' 



• • 

ka tf) (0 VI V) 


CA 


1 


a 


\>9 

1 

> tfl 


ego* 

• 'll 




0 C C 0 c 


VI 

t/i 

1 


> 


aJ 41 ^ 41 

1 

1 



1 aJ 41 

1 V) 


ka 

y 'll 'll '« 


y 

(rt 

1 


ij 


1—• c >-• 

I 4) 




1 C 

1 1-4 


y 

4) ka ka ka U 


y 

V 

1 


1 


e 0 0 

( ka 

1 41 



1 0 sJ 



14 

U U aJ iJ iJ 


•k u 

V O 

1 4) 


c 


U 0 -♦ 0 

» 3 

1 a 


w 

1 y 

> y 


e 

1 1 t 1 • 


y 'Q 

a. 0 

1 u 


0 


M ^ (J >0 

1 U 

1 >< 


41 

» O' 

1 a 


3 

fl) (U <11 lU (U 


a 

>««« 

1 3 





1 U 

1 aJ 


41 41 

1 « c 

i >a 


C 

4.4 U aJ aJ aJ 


> (A 

A.) 

1 u 


4J 



1 3 

t 


aJ ^ 

1 y -a 

1 U 



H Tl 'll H ifl 


*j «a 

(«» 

1 U 





1 ka 

1 -0 


an n an 

1 V V 

I 1 


y 

aJ aJ 4 .^ U kJ 



« -• 

1 3 


tn 


c 

1 W 

1 ka 


u u 

1 o -• 

1 V 


aJ 

in u) V) VI V) 


y y 

u 

1 u 


c 


o 

» 

1 O 


«) «a u 

I C -H 

1 u 


H O (3 C O O 


aJ 0. 

V 

1 u 


*4 



i 

« O 


I 

1 3 

I <9 


aJ 



9 >* 

4J Ou 

1 M 


u 


aJ 4) 

t 41 

1 V 


^ f >4 > 

1 41 J3 

1 *J 


Vt 



aJ a-» 

*1 > 

t 


w 


-f -0 *0 

1 —* 

i ka 


41 41 1 

1 aJ 

1 VI 





VI 1 

IsJ 

1 C 




«1 O 41 

1 a 

1 


C C — 

1 <9 ka 

1 1 


e 

V 


[M 

1 

1 o 


« 


C C ^ aJ <- 

t 3 

t V 


-o 

1 aJ O 

1 


y 

-a .-a <>j rn ^ 

• « 

E C 

>9 M 

1 




9 1 C -• *0 

< k^ 

> u 


£ £ ka 

1 M W 

1 <9 


aJ 

Q..X ^ *0 

4, 

^ C 

\ hJ 


'« *0 

ka 2 -e tft ka 

i 

» '9 “O 

y y o o 

1 

1 ^ “O 

V) 

3 C C C C 

ka 

aJ 

0 



4 .J 

u 

kJ 41 — 0 

1 ^ 

1 »j 

ka 

aq aQ —a u 

1 — *0 

1 0 

ka 

>, *j .-a —a 

0 

(A (A 


X «n 


<n 

o 

(j c o > y 

» '9 

1 tn 

O 

6 e O' 41 

1 'll 41 

X 

O 

VI O —• ' 

y 

>* >» 

CTO 

1 c 


O 

U 

41 

• a3 

I O 

O 

ka 

1 ^ "O 

» O' y 



y 

(A (/) 


1 <9 



V 

ka 

• O 

1 

41 


1 O 41 

1 

y 



u 


V V 

1 u 


V 

u 


1 

1 4; 

ka 

*0 

1 — 41 

I y 

u 




y y 

a a 

1 <J 


a 


-0 

1 O' 

1 a 


c 

1 O C 

1 a 




■0 

a a 

>< > 

1 1 


> 


c 

1 1 

1 >• 


41 

1 1 i 

1 >< 




c 

>. > 

u u 

1 1 


w 


4) 

1 1 

1 



1 1 1 

1 u 




y 

aJ W 


131 

















type Sstate_transltlon_type is 


■o •• 

O 9 

9 ;J 
□ w 
c *J 

3 


9 




a 


«% •» 


> 


O O 


u 




1 


n II 


c 


«• •• 


o •• 






^■4 


AJ IX 


«« 


-4 > 


ka ka 


A W 


3 3 


C t 


U kJ 


9 C M 


9 9 


U 9 C 

V) 

C C 


w 4) 

—4 



k-* —• 




£ O n 

4) 



U 0 >» 

a 



<n .0 VI 

> 





« 9 



1 

u u 



-0 

9 


c 

k4 

aJ U 


0 

0 

01 0) 


•«4 

y 

1 1 

1 

W 4) 

4) 

^ o* 


*0 ^ 

u 

4) 4) 


n o c 

1 

C C 

•* 

C C ‘k 

9 

-«4 **4 

*0 

<« M *0 

u 


ka 

U 3 M k4 

rq -g 

y y 

O 

4J 4) > o 

U k4 


0 

V) C (/) 0 

01 0 

E E 

4) 

4) 

t /1 y 


ka 

ki 

4) 




4) ka 


•n 

-0 

Q. 


c 

c 

> 


9 

4) 





? 

£ 

*0 

tft 

>• o 
« u 
V 

V ks 

a. 


I 

£ « 

^ ^ 04 m ^ •* 

«j CL^ *0 

« 3 C C C C k4 
> u - -• O 

y 
V 



1 

4) 4) 4) 


ID 01 4> 


1 

0. Q. 0. 


a c O' 


) 

» >« >» >4 


l<D ID 

01 

1 

4) U kJ kJ 

• k 

4) W ^ 

C 

1 

a t 1 -1- 

MP>' 

3 k^ U 

0 

) 

>4 c c c 

9 

4) O <« 


» 

k) 0 0 0 

a 

3 k 0. 

aJ 

I 

••4 -ka 

>4 

0* 4) t 

<« 

1 

C kJ kJ aJ 

k> 

■ O' 9 

y 

1 

0 -4 -M .-4 

k 1 

ka D 3 


(A C 
w 3 
V £ 
u £ 
C 0 
^ o 
o 

a > 

3 


C 

o £ «a 

-• w £ 

4J —4 

<Q 3 C 
u ^ 

a* 

— c 5 

U O 4J 
0) «-• « 
T3 -U i3 

I I I 
I I I 


o o o o o o 


AAAAAAAA 


xxxxxxx>c 

<<<<<<<< 

zzxzzzzz 


0) 

O' 

9 

u 

a 

I 

« 4) 

4) 3 
O' 4) 

<« 3 
M O* 
o (• 


4)4) 4)Jit4) 

uccc » »aw>%4J03 
«4)>*'^-‘C'fl0' 

MUk«W ^Q.4JiJ4J-^a. I 

CW4«>U »>*>* IMCO |U 
9 i ^ \U u u Jd 13 ajtf 4) 
U4)4)4)4) ) IC>-«0OU4J 

4J ij iJ U tTM M 9 O tl C 
l'fl‘«»04>CC—'-Q"^ •*J — 

£4^4»*U4J-<-«-«*n004)n0 
U M M M C -4 1 ^ 


CCCOCCC*J 

999C-^‘^-^9 


C U «J 


k4UUk4000s^3C-«*««n 


UU4.>4J4JCLQ.CL<A 
4j0Ut/)(/)00</)(J U O C 
Q. 9 

4)4)4>4)4)4)4>4)4)4)0'>* 
O'O'O'O'O'O'O'O'O'O' kJ' 

4) 

uuuuuyyuuuM 

aaaaaaaaaa 








1 o 


i 01 (3 O 

VI -4 o C3 V) O* 


3 

01 

V) 

1 

1 








1 o 


1 w w 

*■4 w 

«i»> kv 

ka 00 

c 


1 

1 








1 01 3 


1 01 01 01 

01 01 01 

n 0) 01 

9 

y 

3 

k 

1 

1 








1 4) 40 


1 4) 

9 9^ 

4) 4) 0< 

O' 3 

ka 

V 

1 

1 








1 3 


I y y 3 

3 3 y 

3 3 y 

9 

Q.a 0 

O' 

1 

1 








1 4) ^ 


I <D ID 4) 

4) 4) 3 

4) 4) 3 

40 

iO 

3 

1 

1 








1 3 U 


I aJ 40 3 

3 3 40 

3 3 >0 


k 

00 

1 

1 








1 O' -D 


1 01 01 O* O' 0* 01 

O' O' 0) 

-a4 

y 

40 

y 

1 

1 


O 








1 




3 

3 

3 

1 

1 








• "0 3 


13 3 3 

3 3 3 

3 3 3 

3 

a0 

0 

a 

1 

1 




4) 

4) 

4) 

4) 

1 -D •- 


1 c c c 

c c c 

c c c 

C 


~a4 

9 

1 

1 




a a a a 

1 01 


1 




9 


3 

1 

1 

• k 



> 

> 

> >4 

1 01 


1 01 01 01 

01 01 n 

01 0) 01 

01 

40 

40 

9 

1 

1 

9 

-D 


u 

40 

40 

40 

1 ka O 



—a -a4 —4 

•a4 —a 

>4 

3 

c 

3 

) *0 


a 

ka 

4) 




1 

1 9 40 


1 




40 

3 

O' 

1 9 

1 9 

> 

3 

O. C 

c: 

C 

c 

i 40 


1 9 




01 

0 

1 

1 M 

1 aaJ 

kJ 

> O 

o 

o 

o 

1 C 01 


1 O' 




o 

y 

0 


I >« 

! 

-D 

kJ 

••4 

—a 

••k 

•<H 

1 — 9 


1 9 

V 

4) V 



k 

c 


t 40 

00 

C 

lk> 

40 

40 

40 

* O O' 


I j< 

O' O' O' 


k 

9 

u 

1 3 

1 1C 


*0 

—a 

—4 

•H 

—4 

1 CL 9 


i y 4) 4) 

4) 3 

3 3 4) 


9 

O' 40 


I 00 

•■H 

• « 

ka 

01 

01 

01 

01 

1 01 


1 <D O' O' O' 4) ^ 

^ ^ O' 


O* 3 

c/) 

1 aJ 

1 c 

-4 


0 

c 

c 

c 

c 

1 Va 01 


1 0. <D D 

3 O' y 

y U 3 


3 ^ 

k 

1 

1 -4 

01 

ka 

y 

9 

■D 

'D 

•D 

I O V 


1 LJi< 

0< 3 3 

3 3 00 



y 

9 

1 C 

1 —4 

>. 

41 

4) 

ka 

4a 

ka 

ka 

• £ 


1 y y 

y a 

a 0 . y 


y 

3 

O' 


1 o 

t/1 

a 

w 

aJ 


40 

40 

1 01 


1 y 3 D 

3 y 

1 1 3 


3 

a, 

1 

1 


k 






1 0< Wa 


1 D a. 0. Q. D 

4) y 0. 


a 


00 

1 9 

1 •• 

•• 

3 

9 

9 

4) 

V 

V 

1 y o 


1 40 1 

i a. y 

3 3 



00 

y 

1 ka 

» 


c 

kJ 

40 

40 

40 

40 

1 9 


1 01 ^ 4) 

4) 13 

4) 4) 0i< 


00 

y 

3 

1 3 

1 9 

9 


9 

9 

D 

■D 

9 

1 40 01 


» ly 3 

3 4) 40 

3 3 y 

u 

y 

3 

a 

1 

1 40 

40 

41 

aJ 

kJ 

40 

40 

40 

1 01 9 

01 

1 C 3 4) 

4) 3 V) 

O' O' 3 

3 

3 

40 


1 01 

1 3 

3 

aJ 

01 

01 

01 

01 

01 

1 3 

9 

1 0 aJ 3 

3 4) 

1 Ik0 

C3 

40 

01 

9 

1 9 

1 40 

40 

-D 

V) 

(n 

V) 

V) 

V) 

1 Ska 9) 

C 

1 -• 01 0* O' 3 ka 

ka U 01 

C 

01 


3 

1 ^ 

1 U1 

01 

aJ 

01 

,, 

,, 

„ 

,, 


1 O 3 

1 O* 

jC 

i 40 1 

1 <-4 01 01 

ID* 9 
01 IkJ 

9 9 

40 40 9 


ka 

on 

9 

3 

1 Xi 

1 3 

1 

E 


_[ 
4) 

^ U 
O tf) 
>. 
O' « 


132 


top tuple in global graph 






















M 

O 

M 

3 




c 

<N 


1 





0 



1 





u 

C 


i 






4 


1 





N 

X 

O' 

1 

■ » 




• 

.u 

c 

1 

0 




C 




hi 




«1 

u 

w 

1 0 

0 


• 


41 X 

0 


1 0. 

u 


c 


-* O 

O' 


1 >» 

0 




a 0 

c 


i hi 

CL 


X 


3 E 

0 


t 1 

0 


8 U 

41 

u 



i “O 

•% M ^ 


4) <9 

3 

0 


<M 

1 u 

0 0 

0 

w E 

4) 

u X 


o 

i 0 

CL M 0. 

CL 

•) 

3 

O hi 



1 U 

>*-M > 

>* 

>« 4» 

cr 



X 

t 4) 

hi u 


ACC 


4J 

O' 

u 

1 u 

1^ 1 

1 

•H 41 

0 

4) <4 

c 

O' 

1 1 



• X k4 

X 

U X 


c 

I 0 

C 0 c 

C 

X o u 

4J 

<d 4J 


0 

1 •« 4J 

^ 0-^ 


4J 3 




'■4 

1 0 0 



E U 

M-l 

a 0 

o 


1 hi hi 

<4 0 M 

n 

c 

0 

<A 

k4 


1 0 •ft 

> 0 >* 

>« 

-4 M 4» 


Of* 

u 

TJ 

W I U (/) 

tn X (/) 

(A 


S.5 


«l <*4 

« o 


i M 

tt 4» 

u e 

u jC *J 
9t Q ^ 0 
<« U W 
O 8 «i •« 
«1 W 

«M «M f| 

U O 0 I 


a 

o 


« 


c tl 

-H > 
*0 

oM u 

O u 

>«^ 
W o 
•« 

u >. 
O 0 

a ^ 


3 

a. 


o 

jC 


<19 

X 


^ 4) 
8) W 
W C 
C 

-4 O 

o a 
& 

V 

0 -• 


3 •%'“* 

O ^ ^ X 

'd 


■«< V 4) 

0 


<d 


V 0 


V) 





3 a 

1 

hi 

-a O'*** *-* 

y hi 

VI 

hi 

X X 

ki 



•« 

hi 


a 

♦ * 

w 



CL w 

1 

4 

0 <4 0 4 

hi 4 

3 

4 

•o E e 

U 


M 

c 


0 


4 



C 3 

1 

w 

a-< a u 

4 W4 


U 

41 3 3 

3 


4^ 

u 

^ 44 •« «« 

** 

hi 

A A 

> 



— 0 

I 

4 

Ph* 1 <4 

hi 4 

aa 

4 

«l C C 

U 


E 

•d 

Jd 0 

41 

vt 

II II 

1 



1 1 

I 

ay ly a M a 

aa 

a 

3 1 1 

1 



hi 

1 1 y 3 •% 

3 

♦ 


i 



1 t 

1 

y y 

4j u «j y (/> y 

aa 

y y y 

1 1 1 

1 


1 


1 1 <4 41 41 

0 0 

1 

VI VI 





1 

^ VI 

«4 0 4 VI 

|VI 

aa 

-H VI 





• 

4J 3 3 41 0 

3 3 


u u 





1 

a 

U k4 4J 

a 

* 

a a 





«i 

« O' 41 3 *4 

41 O* 


y y 





t 

3 VI 

VI U VI VI 

0 VI 

aa 

3 VI 3 





O' 

• • 3 4» U 

3 • 


X X 





• 

u 

in u «i •-* 

hi 

aa 

U hi 





0 

4) 4) O' 3 M 

O' 4) 


hi hi 





1 




aa 

W 

•* 




Jd 

O' O' • O' • 

. O' 


0 0 


•h 



1 




aa 


4) 


*• 


U 

<4 <4 0 , 0 

y <4 




in 

<« 


1 




aa 


a 


0 


<d 

«* ^jtfO'OlO'O'^ 




m %n 


1 




aa 


>« 


a 


a 

« '• y y <4 O' <4 

<4 y 


(1 II 





1 




aa 


hi 


>« 


1 

0,0 «4<4j< 0 M ^ 0 


•• •• 


n 

M 


I 




aa 


1 


hi 


M 

> a a a y y 

y a 




•• 

• • 


1 




aa 


c 


1 


U 

w > 1 I'd y <4 

4 1 







I 




aa 


0 


c 


<4 

ikjjtfoia'dao.o 


0 0 


hi 

U 


1 




aa 


•» •• 


o 


^ «« •« 

T) 1 y 3 1 a 1 

1 13'* 

• « 

fN <N 


•% c 

c 


1 




aa 


t 

0 

0 

0 

0 

0 



n o o 

U > <4 41 41 lid 

y y 0 




00 3 

3 


i 




aa 


U 


hi 


1 

0 'd W 3 3 41 0 

3 3 




0 

0 


1 


c 


aa 


3 II 9 

H II U 


•• 

C It II 

y W 01 O' 41 3 4 

y or II 

li 



<1 y 

y 

• » •% 

1 


0 


aa 



o 

U C « -*4 

V) <0 ^ 

C'Q'V<V'V>Q^U‘-4'TI 

-«4wukiik4UW'Q(nu 

133333 |WC3 
EuwuwA^E'V'du 
U'd'O'Q’V'QUXUH 
MCCCCCMUu 


I 

l« U k4 


V 

W 

3 


I 141 « 
8 w . 

01 C C 


13 4) 
(T 3 


3 

O' I 


\0 0 
•% 4) 4> Q. a 

u kj > > >, > 
^ . 


I O' I 14)-* 

IVIVJfcj'fl'OO'CT’OJ 

cocccu»-cco'a'a»c7‘u*-» 

c 'd -1 3 3 -4 — 0» 4^ 4> 4> -*-• -• 4> 
tflOOktWUUQwiJWw^wui-iMiA-^'-* 

>«a.a.ijwtjija.'d‘T)ww>ccccoo-*^-*' 

C CO «00wi</)00'/» CC <n «n—.-.-.-I q. q.**- 



























1 VI 

a 

0 

4 

4 

y 

aa a 

a 


























1 3 

3 

hi 

hi 

hi 

VI 

aa 3 

3 


























• 4 

hi 

VI 

VI 

VI 

3 

aa hi 

hi 






c 




















1 ai/i 

CO 

(/I 

(O 

4 

aa 0 

0 






0 











hi 









I 1 

' 1 

1 

1 

1 

a 

aa 1 

i 








id 









C 









1 


hi 

hi 

hi 

1 

* u 

hi 

c 





0 hi 

y 

y 








y 

3 









1 -« 

3 

3 

3 

3 

u 

aa 3 

3 

0 

«l 




c 

O' 4 




M 

y 



y 

0 









1 0 

a 

a 

a 

a 

4 

aa a 

a 

•«>4 

y 


0 


•*a VI 

4 

hi 


Al 


> y 

3 



■0 

y 

y 








1 k4 

u 

4J 

AJ 

u 

y 

aa u 

*j 


c 

91 

hi 


X c 

VI 

VI 

1 

1 

1 

4 4 

y y -M 

y 


0 

1 

E 


c 

C 





1 y 

3 

3 

3 

3 


aa 3 

3 

y 


V 

0 


y 4 

VI 

1 

1 y 

y 

y 

U hi 

33 y 

3 


c 

y 

4 

C 

y 

V c 


hi 



1 VI 

0 

0 

0 

0 

y 

• 0 

0 

3 

X 

hi 

hi 

y 

4 M 

y 

c 

hi 

hi 

hi 

U VI 

0 * y y 4 

y 



tc 

c 

y 

—* 

—• y 

y 

y 



1 






aa 


u 

y 

0 

VI 

4J 

E hi 

E 

0 

4 

4 

4 

4 1 

1 3 3 w 

3 


M>4 

■M 4) 




1 k-* 

VI 

VI 



1 V 

y 

y 

y 

y 

y 

m 0 

y 

4J 

4 

hi 

1 

4 

1 1 

1 

l-a 

u 

hi 

hi 

1 k* 

u 0 * y VI 

O' 


0 

-* E 

y 


1 y 

VI 1 

1 1 

1 1 



1 u 

u 

kt 

u 

kt 

kt 

aa kt 

ki 

VI 

E 

VI 

hi 

hi 

hi hi 

u 

hi 

VI 

VI 

V) 

V y 

y 13 1 

1 



i 14 


y 

E 

—a tj 

c 

c 



1 3 

3 

3 

3 

3 

3 

aa 3 

3 

C 


1 1 

C 

VI 

C C 

c 

•w* 



10 

1 

C u 

VI O' VI 

VI 

y 

M 

u c 

--a 

b 

4 

VI 

£ 

E 



1 T3 *0 

“0 

T3 

*0 

■0 

aa -0 

T3 




0 


ly y 

y 

VI 

hi 

u 

1 -* c 

C C 1C 

c 

*j 

y 

3 

('wi 

4 

c 

>. VI 

3 

3 


X 

< V 

y 

y 

y 

y 

y 

aa y 

y 


I 4 

4 

k4 

hi 

bl u 

u 

c 

u 

u 

ax -• 

4 -a< 4 

4 

4 

X 

a y 


rc 


k-H C 




y 

1 y 

y 

y 

y 

y 

y 

aa y 

y 

E 

hi 

hi 

u 

X 

u u 

u 

4 

0 

4 

E 

y 0 

0 w C ki 

k# 

hi 

E 

hi —* 

w 


1 hi 

4 4 

0 

0 

£ 

4 

4 0 

0 

0 

0 

0 

0 

aa 0 

0 

y 

0 

0 

3 

0 

3 3 

3 

u 

u 

u 

y 

4 a a ij 

u 

VI 

3 

3 -a 

3 

c 

3 

C W 

y 

y 

y 

y 

1 kl 

u 

u 

kt 

k4 

u 

1 u 

u 

VI 

*J 

U 

y 

c 

y y 

y 

u 

VI 

VI 

4J 

6 0 0 VI -* 0 

0 

V) 

C 

0 

0 

—• 

0 

4 w 

<n 

0 

VI 

u 

1 a a 

a 

a 

a 

a 

1 a 

a 


4 4 

4 

4 

4 

4 

aa aa 

aa aa 

• • 

• 

* 

• 


aa 


hi hi 

ki 

ki 

hi 

hi 

aa 

4 4 

3 3 

3 

3 

3 

3 

aa 

• • 

aa 

a 

a 

a 

a 

aa 

ki 4J 

hi hi 

ki 

ki 

ki 

ki 


3 3 

3 3 

3 

3 

3 

3 

aa 

a a 

0 0 

0 

0 

0 

0 

aa 

ki hi 

1 1 

1 

1 

1 

1 

aa 

3 3 

^ E 

E 

E 

E 


aa 

0 0 

4 0 

« 

y 

y 

4 

m 

1 1 

X ki 

ki 

ki 

ki 

X 

aa 

ka U 

0 4 

V) 

4 

VI 

0 

aa 

y y 

> 

>« 

> 

>a 


aa 

4 4 

O' n 

4 

4 

n 

O' 

« 

3 3 


till 
I I I I I I I I t 




0 

CL*J 
0 3 
M O 

fft C 


iJ hi *J 

3 3 3 
0 0 0 


<d 

a 

4) 


«» 4> 
«» O* 
«• >« 


•• “O 

a* U 
«• O 

«• o 

aa 0 

m u 


m 3 

O 

-O 

4) C 
C ■'4 


0 

a 

>« 


4) 

hi 

4) C 


0 

■V 


133 










•9 

> 


a*« 
«« 

tfi« 


« 4 

0*4 
41 4 





44 



« 9 

9 

9 

m 

44 

44 








• 

• 

•• 

■>4 

•.■4 







«■ C 

c 

C 

4M 



9 

9 9 9 


•>4 

9 

9 

m O 

o 

O 

m 






X 

• 


*• 



m 

X 

X 

44 

4) 44 44 


9 

X 

X 


44 —. 

44 


9 

9 

3 

3 3 3 


X 

u 

u 

O 

a 9 

u 

a* 

X 

X 

0. 

ou 0. a 


o 

u 

u 

«• 9 

9 Q. 

9 

a* 

o 

o 

44 

44 44 44 


9 

9 

9 

« 1 

1 >» 

1 

a* 

9 

9 

3 

3 3 3 


9 

9 

9 

m 9 

9 44 

9 

a» 

9 

9 

0 

0 0 0 


k4 

9 

9 

4B 44 

44 1 

u 

m 

M 

U 

1 

1 1 1 

9 

9 1 

1 

1 

9 

9 9 

9 

aa 

1 

1 

4.4 

^ ^ ^ 


• E 


6 

«• U 

O -• 

U 

aa 


6 

9 

9 9 9 

44 

44 9 

9 

9 

«K 

X 

•*4 

aa 

9 

9 

X 

ia ua ua 

3 

3 44 

Si 

44 

• *0 

73 9 

73 

aa 

X 

44 

0 

0 0 o 

a 

a 9 

0 

9 

« 9 

9 

9 

aa 

o 

VI 

•-•4 


c 

c > 


> 

a* w 


u 

aa 


>« 

0* 

O* O' O' 


9 

o» 

n 

«• a 

a 9 

a 

• 

o* 

VI 


I I I I i I 


I I I I I 


4J 4J 

•«<«<« 

9 U 14 

9 a ai«» 
U 9 9 A 
9 « A & 

a >* 

9 9 il U 
9 -4 ^ I 
>« 

»%. tn ^ 

9 -*4 9 9 k4 
Q. 0. 0. t4 
>« > 9 
4J C 4J 4J I 
19 I 16 
^ 9 ^ ^ 9 
C w C C w 
^ O ^ ^ 9 

iph o ^ ^ 

0^009 


3 3 3 3 3 
O O O O O 


O 


9 

> 


9 

«ja 

4J 9 
3 X 

a u 

U 9 
3 9 
O M 

I i 

9 9 
Si Si 
O O 

CT O' 

i I I I I I I I 

I I I I I I I I 

•« 

9 

• » ^ 

9 9 


U U U 44 






aa 





aa 




9 

9 







•• 


.4 P 

aa 




U 

a 

9 




■A 




0 & 

aa 




9 

9 


9 



am 




• a >t 

aa 

*4 



a 

VI 

>« 

a 







a. >4 44 

aa 

9 



9 


44 

9 



am 




>«4J 1 

aa 

Q. 



n 

« 

1 

VI 







44 1*0 

aa 

> 




••a 

c 


9 


aa 




1C u 

aa 

>4 



ti) 


0 

VI 9 

a 


aa 

*« 9 ^ 

•« 


‘0 0 0 

aa 

, 



•.a 



a 

> 



9 a o 

9 

u 

U -a O 

aa 

>« 




9 

44 

> 

u 


as 

O. >« 9 


9 

O 44 9 

aa 

9 




•4 a 


>*. *j 

1 


« 

>»44 44 


44 

O -a U 

aa 

u 



9 

9 >* 

VI 

9 ** 1 

73 

• « 

aa 

44 |V1 


V) 

9 1 

aa 

u 



Q. Q. X 

c 

a 9 9 

u 

A 

aa 

19 * 

» 

U C 9 

aa 

9 

•4 

•4 

> >4 1 

9 

>* Q. 44 

.* 0 

9 


9 *-• 9 

9 3 

9 

19 44 

aa 




44 

44 M 

u 

44 >* 9 

9 U *« 

> 9 44 

aa 

44 X O' 

..tjd 

O' 

9^9 

aa 

£ 

9 

9 


1 C 

44 

|44 44 

O. 9 9 

44 O. 9 

aa 

9 9 9 

9 

•4 *4 44 44 

• 

9 

U 


M 


3 3 
W 4J 
9 9 
C C 

U 44 

3 3 
O 0 


9 19 > U W' f >> u 

l•«44 194^449 

C 6 9 19 wi C IQ. 

9444^44 9-<^ 9 9 

44 9 C 9 44 9 

4j99W'«^4J999 
3 >>«9<-4 9 9 >i4J 9 
O V) 9 0.0 O « 9 -w 
9 9 I 

CCC9CC-*CE9 


4* 44 .M! 9 44 

« 9 W O 44 9 
19 9 9 I 
73 > Q. u C4 

99 1199 

c C ^ Q. c 
-♦ -* 9 U 9 
£ Si 9 MX 
9 U O 44 U 
Q «-4 9 


Ji< 9 9 19 

U 44 44 E U 

9 9 9 U 

0. U O 9 44 

19 3 

4l< a. 44 U o 

U 9 3 3 

9 9 O O C 

44 

9 9 C C 


>4 3 


>4 9 
9 C 


3 3 
O O 


C ^ 9 9 

44 •.H 9 44 44 

-4 >,9 A 

C O O U) u 
9 9 

44 44 44 44 O. Q. 
3 3 3 3 9 9 

0 0 0 0 9 9 


m CCCCCC99 


-a4 ^ ^ 


—4 


•«4 -a 

■«a ••a 


9 a 


E 

O* 

h-* 

E 

I'M 

^ ..a 

»> 

aa 

•4* 

•pa *pa 

..4 

.•a •«« 






VI 

9 

44 >« 

4* 



c 


c 



aa 






«• 

• • «• 

•« 

*• «• 

^ «• «* 

a •• 

VI 44 

9 

• • 

•• 

0 

•• 

0 

»• •• 

9 

aa 

.» •» 

• * •• 

• • 

• • 







> 

> 1 

VI 





•«a 

9 

X 

aa 





k4 W 





C 

44 

VI ^ - 

S 



X 


X 

X 

9 

aa 





9 9 > 





9 

1 

C 







9 C 

X 

aa 


<N 



44 44 9 *4 



«4 


9 

41^ 

c - 

aa 



VI 


V) 

X 0 

VI 

»% * 

9 

1 1 



C C M 9 



9 



e 

•«a .«a 

aa 



C 


C 

VI 


1 9 m 

w 9 

9 



O'*** 9 W w 


9 C 

44 


O 

•>a 

VI 

aa 



9 


9 

tx 

E 

X aa 

4. 44 

X 9 

9 

9 




9 


0 


> 

• 



w 


4« 

£ 

9 

9 • 

9 9 

9 X 

X 

X 

a<-4 a 9 iw 


9 M 

U 


X 

o 

</l 

aa 



X 


44 

9 VI 

X 

44 aa 

IX 

X 9 

9 

9 

I'M 144 9 9 


44 44 

9 

44 



44 

aa 






X C 

VI 

9 • 

9 VI 

VI X 

X 

X 

9 19 9 c a W 


VI 

a 

c 

c 

c 

c c 

aa 


X 

c 


c 

VI 9 

>. Q.m 

C 1 

1 1 VI 

to 

VI 

44 U 44 o '*• 9 9 

9 

1 9 

9 

9 

u 9 

u 

9 u 

aa 


< 

w 


W 

>* U 

V) 

9 v» 

■M 44 

X O <3 t/) 

9 0 9 IX VI X 

44 

u C 

VI 

4. 

3 — 

3 

3 

aa 

9 01 

3 

9 

3 

VI X 

{ V) aa 

X U 

X 1 

1 1 

1 1 


44 W 44 O. u 6 

9 U «| O 9 9 3 

O Cd O 44 E C 


9 J< 
44 9 
9 Z I 


E 

* 9 U 

• 9 


Q. ^ 44 Q. O. 44 O. 

0 3 9 0 3 9 0 

4J (J U 44 44 W 44 


44 W 

3 9 
O u 


U O 44 

>0^9 
■ w O 


1 u 

C C 3 9 I 
^ 0 — • 


O 9 9 Q. Q. a 
9 44 ^ O O O 

E 9 9 44 44 44 - 


«• 








« 



aa 



1 


aa 








aa 



aa 



1 


aa 








aa 



aa 



1 


aa 








aa 



aa 



1 


aa 








aa 



aa 



1 


aa 








aa 



aa 



1 


aa 











aa 



1 


aa 











w 



1 


aa 








aa A 

<N 


aa 



1 


aa 








aa C 

9 


aa 



1 


aa 


c 






aa 

C 


aa 



1 


aa 


0 






aa X 

■X 


aa 



1 


aa 


•X 






aa o 

X 





1 


aa 


X 

VI 





aa 9 

u 


aa 



( 


aa 


•44 

> 





aa X 

9 


aa 



( 


aa 


VI 

9 





aa 

z 


aa 



1 


aa 

9 

C 

X 

> 




» VI 

t 


w 

X 

X 

1 


aa 

•o 

9 

X 

9 




« 9 

VI 


aa 

0. 

a 

1 



0 

X 

9 

X 


9 

9 

W X 

9 


aa 

9 

9 

1 



c 

X 

1 

4p 




aa 9 

X 


aa 

X 

X 

V) 1 


aa 

1 

1 VI 

9 

9 


a 

a 

aa y 

9 


aa 

O' 

O' 

•X VI 1 


aa 

9 

9 9 

C 

1 

9 

□ 

3 

aa 

U 


aa 


1 

VI X 1 


aa 

X 

X X 

-»a 

9 

9 3 

X 

X 

a» -O 

—* 


• 

9 

9 

> 9 1 


aa 

9 

9 9 X 

C 

— O' 

O 

</) 

aa (V 

■o 


• 

X 

X 

•X fcj 1 


aa 

X 

X X 

0 

•«4 

M CJ 

1 

1 

aa X 

9 


aa 

9 

9 

9 C 1 


• 

VI 

VI VI 

9 

X 

*44 A 

X 

X 

aa a. 

X m 


aa 

X 

X 

C » 


aa 

O 

O O 

E 

o 

IX 

O 

0 

m 

O. 


aa 

VI 

VI 

9 0 1 


aa 

1 

1 

1 

9 

C 9 

^44 

*44 

m A 




o 

CO 

la 1 


aa 

X 

X X 

X 

E 

-.4 4^ 

J 


m t>4 

9 

c 

aa 


1 

X 1 1 


aa 

3 

3 3 

3 

1 

,v» 

X 

X 

« >* 

f** 

o 

aa 

-0 

•0 

3 X 1 

•• 

aa 

a 

a a a 

-o 

*0 VI 

u 

u 

aa 

>t 

■X 

aa 

pX 

pX 

0. 9 1 


«i 

X 

X X 

X 

9 

9 > 

X 

X 

• 9 

—• 

X 

aa 

■p4 

•X 

X 9 < 

a 

m 

3 

3 3 

3 

0 

9 

9 

9 

• C 

9 

U 

aa 


3 

3 ^ 1 

0 

aa 

O 

O O 

O 

••4 

X VI 

9 

9 

« < 

C 

< 

Wt 


X 

O U 1 

o 

aa 





44 

VI 

VI 

aa 

< 


aa 



1 

-X 

aa 

9 

9 9 

9 

9 

9 



aa 


9 

aa 

9 

9 

9 9 1 


aa 

X 

X X 

X 

X 

X c 

C 

c 

aa C 


X 

aa 

X 

X 

X X 1 

e' 

aa 

3 

3 3 

3 

3 

3 0 

o 

3 

• 0 

o 

3 

s 

3 

3 

3 3 1 

u 

aa 

■0 

V V 

■0 

-0 

73 - 

— 


W "-4 

•X 

■0 

aa 

■0 

73 

73 73 1 

VI 

aa 

9 

9 9 

9 

9 

44 X 

X 


aa 4 ^ 

X 

9 

m 

9 

9 

9 9 • 



O 

O O 

O 

O 

'o y 

O 

U 

aa o 

V 

U 


U 

y 

y y ) 

c 

aa 

O 

o o 

O 

o 

o c 

c 

c 

aa c 

c 

0 

aa 

0 

O 

0 0 1 

-X 

1 

X 

X X 

X 


»- 3 


3 

1 3 

3 

X 

1 


X 

X X 1 

C 9 

1 

a 

a a a 

a 

a'M 

<44 



■M 

a 

1 

a 

a 

a a 1 

- 6 


O' 

9 

X 


134 








-query the user for the input file 








> 

E 


« 

tr 






(j 


fi 

9 

£ 


*0 • >« 
^ m 9 


u ^ 

lO 


4J U 


3 « > 
a •! 4 
C 3 ^ 
t w 
<« 

«l « 

•«* l« 
4) 'M C 

cr o 

«4 4» ■«•« 

•I X M 
M 4j C 

l>i 

M 

V V 
C V 
9 9 9 
C C 
c ■- o 
O E 
«« w « 

4J « *- 

w O' 
M 4) C 
c *0 -H 

^ 9 

w « 


U 


<« 

«l > 
4» «l X 
C 

O *0 


u W 


M <« 4) 


0 <N 
flC ^ 


^ «j & 

9 

> 9 ^ 

O U -< 

. c X o 

\0 4^ bi 

u n <« 

C 9 9 

o o •* 

c *0 a > 

O •! *4 <4 

•>4 u 41 te 

«J « « X w 

-4 > C H <4 


9 u 

C . ■ 


X 

g <4 J y 
i . 4) u 
liJ X <4 
T) 3 u X 
<4 a. u 

O C <4 O 
— X <N 


9 * X 
JK < O 

ki Q 
O < 6 *J X -• 
3 O 

X •» -• '4 *0 

^ -o ^ g 41 

*0 ^ 

C u 4) « C 

3 4) 3 X X -* 

U) > 00 u t- »- 


o 

« X « 


4; 

E— - 


9 ■ 


9 ‘I fci» ^ W 


<4 1 

a II 
9 I 


3 4 
H Ci« < O 


-H u a y 
> n E M 
4» >* O « 

oe (/) u o 


41 

CL 

> 


^ ^ ^ ^ 


9 

w w u u 

3 3 3 

w w ^ E 

4 4 4 0 
C C C M 


^ 41 
9 a 
w > 
4 

«J i 
4 *0 


W W 4J W 

3 3 3 3 
O O O O 


O 

— O 

u 4) 
4) u 
X ' 
E > 

3 4 
C 

u 
>. 4 


I 


V c 
U o 
4 — 


tJ tJ 


W <A ■ 


M II -» 


V 4) It/) 
X tJ ^ C 
E 4 X 4 
3 w 41 
C «rt 3 H 


X 
9 O 
C 4 

- E 

X 

o > 

4 V 

E C 


a 

o 

o •- 

-- j< 

c 




-- i/) 
3 • 
C u 


I w 


>1 il 


4 

: X c w 

I 4; « w 
. 2 X — 






a 

E 


41 41 

a a 

>. >- 


Il 


X 

u 


.. 4» 

« — X 
C w 3 E 
O 4 C 3 
- U C 
irt fl 

X >. 


— *D 
c 
• a> 




c ^ 


<4^ m 

O — 


w 41 > 
w C 


. >*- 9 


^ O C 


3 

TJ 

V 


la 

e 

9 C 


c c 
---ox 
— — c u 
’ ' 4» 4 

a a-' E 

E E 

4> 41 **- 


I I I I I I I 1 1 


O' 

41 

X 


w 41 


"O <« 

c »*- •• — 

4) o a—* 

— I O ! 

“3 O '« 

9 C — O 

— 4> }., 

-- *3 T7 

C C •-• 
V 9 

■3 
C 
V 


X 

I 3 


“3 

C 

9 


136 

































1 






C 
















II 






« •• 






















^ c 
















n 






0 o 
















H 






w 
















M 






4J 
















II 






•3 U 
















II 






C 3 






















<« U 



































c c 

II 








u « 













q 

II 


1 






« c 













X £ 

II 








-*4 













0 w 

II 


H 






IM 













4j q 

II 


II 






3 4) 













aJ 









ia c 













q q 






















X 3 



II 






« £, 



VI 











tt 


II 






c u 



C 



















-H <q 



0 q 










VI c 









-• 6 



^ c 

w 

3 








c q 

II 











VI •«4 


q 





O' 



q X 









•9 « 



3 k-aC 

aC3 





• C 


q 

X 0 

II 









4> ««-> 


4) 4) o 


«Q 





VI *44 

q 

c 

0 «-> 



II 






O aO 

j: 0 


VI > <« 


0 

VI 




q U aC 

0 

aJ 

II 











3 E 


C 3 



c w 



q 









C 3 

VI 


y 

q 


9 

c 

0 


-4 <« 


q 

q X 

ti 








-4 c 

•M C 


aJ q 

w 

q 

q 

9 

u 


aC W 3 

u 

^ H 

ll 








<9 

O 0 


0 £ jC 

u 


e 




y VI 

c 

q 

X 

II 








3 W 



C >9 U 

9 



q X 


9 

q 

4J 

q » 

II 








•« tfl 

Ol V) 


C 


0 

A 

c 



E q 


VI 

VI 3 

<1 








4) U 

c c 


VI >«u 

q 

W <N 

•ai4 

q 


a£ 

q 


3 q 

II 








M O 

^ 41 


— 3 '4 

c 



aC 

O' 


w w 

c 

VI 


K 








3 

C £ 


aC 


q X 

u 

-fl 


0 

0 

•a^ 

0 > 

II 








M C 

c — 


41 41 ^ . 

£ 


1 

9 

VI 





aJ 









3 

3 


^ W 3 

y 

q 


£ 

VI 


q 9 

q 

0 ♦ 

0 

li 









O* 


ua 0 > « 

9 


VI 


q 


w X 

u 

3 u 

3 w 

II 








41 C 

41 41 


^ 6 <s -0 

£ 

q 

c 

u 

E 


u 

q 

w q 

q 

ll 








C >9 

ia aC 



O' 'll 

C 



w 

4J 

w 

Aaf U 

II 





>. 




u 


u w u 0 

q 

'fl 

u 

q aC 


VI VI 

VI 

q q 

u q 

ll 





£ 




41 


0 'll —• 


VI 


u 

u 


C 


C E 

q V) 

II 








Z 

X 


> »*- 


VI 

V 

u 

•«4 


O' 9 

VI 

•M aaiil 

> 3 

ti 








£ 



4) 41 


q 


3 

3 


c q 


X 4-^ 

C 

II 








u > 

41 


VI 41 X .Q 'M 

E 

C 

0 



-t E 


0 q 

0 q u 

u 





• 



^9 >9 



•«4 VI w 

0 


0 


3 


u 

q 

q 3 

y X 

ll 








bl 6 



aC 3 0 


3 


q 

C 


U A 

c 

£ 

aJ 

II 


II 





o 


4J >« aj 

V 

C 

*J JC 

q 


-4 

0 

q 

VI 3 






« 



• C 

O' u 


0 w 

0 

9 

•aa4 

4J 

VI 


W 


Ui4 ^ 

u X 









4) ^ 

<« 


« 4j -4 q 

w 


VI 




VI »-4 

q 

0 -- 

0 

II 








6 ^ 

— 3 


q 4j u 


C 

c 

E 

9 



c 

'W 

'«a q 

II 


II 






O 

'M 4) 


> c c 

q 

0 

9 

0 



q q 


q 







c 




VI 

> q -• 41 

JZ 

—• 

u 

w 

VI 


aC 4 ^ X 

*v U 

q a-a q 










^ 3 

<9 ^ 3 VI 



w 


•a4 


4> q 

y 

q X 

aJ f- 











u 

<9 u C 


U 





u 

q 

ij q 

C£. V) 

II 








VI 41 

u 

-4 0 

tn 

3 


C 



VI VI 

E 

VI aJ 

q u 

II 





a 



4J 

-- 

<9 

VI -at 0 - 

q 

h4 


0 



q 

1 


X VI 












^ 3 aJ W 


iJ 

> 


£ 


-a< —< 


O*'*-’ 

I_» aJ 










3 >9 

V 

X) y 


VI 


tal* 

tJ 

0 # 

'*-1 

0 

c 0 

3 — 

ll 








4) c 

4) 

C 

q O' 3 

•-4 

c 

■•4 

••4 





.a- 

3 a 









C 

J W 

•«4 

g ^ ^ u 

«J 



VI 

q 

q 

W 4.^ 

q 

u 3 

C aJ >. 

It 










3 ^ U 

c 


c 

c 


u 

c -- 


ka C 

q 3 y 

II 










y 

VI ^ >*4 VI 

q 

q 

q 

q 


q 

q c 

q 

q q 

0 c 

II 





0* 



• 4> 

a 


C 3 aC 3 

u 

w 

u 

3 - 

«./ 


3 q 

II 





u 



NO 4> -C 


E 

a. ^ 



•"4 

u 

VI 

VI 

V 

VI 

VI q 

q aj y 

II 


II 



(V 



c u 



VI 










C -a q 

II 


W 



Q 



C 0 

*• 


q 
















M 



O E 

VI 


C 
















«4 



c •«H V o 

41 


•<H 










y q 

M 








O M krf 

4J 


£ 



















U •«< 

«« 


y 







•• 



3 q 

It 


II 



w 



u 4» *«>t 

u 


<9 







q 



V> c 



II 



O 



> 3 

VI 


E 







u 






1 

4) 


oe 



u 4J 4) 


1 

1 







q 



u X 







<N 


«l « 3 W 










ij 



q y 







<3' 


M < a. (j 

O 


0 







VI 



4J q 

II 








w Q c 


1 

1 q 







1 


•• 

- 3 E 

II 



1 



C 


0 < -1 u 

• • u 


Ini c 

a» 


•• 






X 

*a-4 Q, 

•1 


n 

c 

*« 

1 

u 


3 U 

W 41 


q -4 

q 


VI 




q 


VI 

u q 

II 


II 



d) 

U 


X VI X 

k4 ^ 


M aC 

aJ 


c 







q 3 X 



II 

lu ^ 



V 41 41 

<« E 


E y 

q 






u 


C 

X 0 4J 

ll 


>1 

*3 

3 


z 


3 VI 

u 3 


3 'fl 

ij 









4J 



'1 


0. »J 



C w u V 

VI C 


C E 

VI 


•J 







q 3 



II 

V 

c 

o 


3 4) in u 
















II 

II 

u 


X<N 


(/) > Oi <« 














!| 


ll 

11 






c 














'1 

>1 

c 

1 






0 
















II 





















-TI 

ll 






u 















E 

ll 





*3 

V a 
















ll 



u 


4) 

e — 















4) 

II 

4) 


0 


to 

4) u 















u 

ll 


41 

£. 

41 

-w 

u a y 
















1 

u 


iJ 


> 

VI E VI 















u 

II 


'iH 

3 

•fl 

4) 

> O 41 















-9 

ll 


b. 

< 

o oe 

1/1 u o 















a 

. M 





















4) 

1 

1 

1 

\ 

1 

1 

1 1 1 1 

1 1 1 

1 

1 1 1 1 

1 



1 


1 


t 




M 

1 

1 

1 

1 

1 

1 

1 1 1 1 

1 1 1 

1 


1 


• 










3 

0. 


O' 

c 


■o 


A A 
0) II li 

a 


I V V 
-* u u 


V V) 
-♦ « 
^ C 


> (N 
I I 
I I 


E 

(J ^ •» 

lA i-UUWiUU 

V CCD'O'O'O'CT'CT' 

q) q) ^ (t) ^ ^ 
UUUUUiJUU 
!«-• UuCCCCCC 

I w» jrt ..H --4 ^ 


3 

■3 

V 

y 

o 


3 

I C 
V 4) 
C ^ 
- O 


X j: j: -c 

(y X iJ w «j 

“3 O' <U O' O' C 

•c C -3 c C 3 

V C 4> 0) O 


C I I I I 

y a; 4) E > 

C C 3 C 

o --H c o • 

ij —. ^ 4> y . 


I 


137 


-clears the token used In parsing 









a 

o 

0 


4) 

*0 

c 


3 

n 


c 

£ 


O o 
o 


O' 

C ■ 


X 

4) 

•o 

c 


3 

i3 

4J 

C X 

... V 

— T3 
C 
c 

4) 

^ 4) 
«j C 


♦ 3 

u 4> X ■► 
O' C 4J 
- -O ' 


O' 

c 

4) 

I 

£ 

3 


V 

■o 


o 

< 

o 


s: 

< 

cc 

o 

o 


a* 

o 

o ' 



* 

4) 4) 

4) — 

C 4) 




ll 

u 

*0 

— 

*0 



c 


4) 

(C 

1 if 

fC 



0 

c 


- 

V •• 

c ••- 

c 

in 


3 a 


C I 

c 

4j -1 

4) 


tJ 

0 fN 

3 

-* 4) 


jiC 4) 



y ^ 

y 

ia 

—. c 

— X 

0 C 

0 

c 

3 


0. 

o 

o 


X 

4) 

TS 

C 


3 

ja 


4) 4) 0 

-.eg 


4; 
c 

-« XI 


4; 

V T3 

c 


O 

40 



Cb 


u D 

.~4 

4» •« 


4) 

1 

•« 


O' 

JX 

w 




1 


c n 


*0 


T3 

0 

X 


• ll 

o 

1 


—4 

«« 


II 

3 3 

« 

C X 


C 

4) 

4) X 


o •• 

w 

W4 

, 

'W 

c 

o 


O '0 

E 

-4 V 


-.4 

-X *0 D 






c 

4) 

1 


y 0. 

y 

1-0 


10 

C *0 


( X 

c 

V 


4) 


“0 

i.i 

1 1 

in 

4) C 


4) 

41.1 

-• c 


E 4) 

4) 




0 

•% c 

C 

9i ^ 

•W 

C -* 

• « 

C 




3 -0 


y 

c 

0 

CL *J 

^ Cli 

3 

C -• 

4) 

•«« 

1 a 

-.4 

c 

c 

a 

c c 

0 



u 

0 1 


0 

0 •- 

C 

— V 

o 


V 

4) 4) 

0 

V - 


4) 



1 o U 

■"' w 

y 

—4 u VM 

—4 

c 

0 



C 

o 



w 

■«4 

C 

-• ^ 

4) O 


W O -« 


it -4 

—4 

4) 

0 

o - 


1- c 

w 

3 



4) 

c c 

4) 

m 

1 



—4 




^ 4) 


TJ 

L4 


■0 ^ 


C 

*0 

iJ 

—4 

T3 

-.4 



“0 

m ^ 

4) 

4) 

c o 


c u 

—• 4) 

.»4 

c 

41 

-C 

C 




c 

c o 

**4 

y 

-4 VM 


« 

k-- 

.-4 

-4 4) 

O' 

3 

4) 

3 



4) 

-4 «J 

y 

0 

O' 


-0 

3 -I 












k4 

4) 


c 

C 4) X 












aja 


4) 

C 3 













w •% C ^ ^ ^ in 

4l^4;yA* <\>OC 

— 3 IJ 

u V V 

ij ut C C S 

tft I- o y 

c ^ u m 


i<n w 3 4j 
E 3 V v 
y c a. c: w> 

<n 4; • 


a 

o 

0 


X 

4) 

TJ 

C 


3 

I ♦•> 

4> 

C X 

.-4 ti) 
^ *0 
C 

c 

V I 

£ V 

tJ c 


4) “0 

V — 



X 

in 

C 

C 




-TJ 


<4 b 



O' 

y 


4) 



c 



f.4 

• ^ 


4) 

u 



—4 


4 

4) 


♦ 3 


• « 

1 •% 

3 

F-4 

X 


•.H 

> —. 

O 

X 

X 1 

1 


C CN 


4-1 ♦ 

4> 4; 

X 


0 


O' 

O' c 

4) 


y A 

A 

C X 

c -• 

■0 

X 

II 

II 

4) 4) 

4) -* 

C 

4) 



-• *o 

—4 

—4 

*0 

0) X 

U 

1C 

1 II 


1 C 

4) 4J 

4) 

4> -4 

4) •• 

c 

•.4 

c -0 

n 

C t 

c 

V 

1 

—4 —4 


4) 

—« 


4) 

X 3 


—• C 

—« X 

0 

C 

y 

c 

•"4 

4) 

u 

—4 

m * 

o 

V 

V -o 



E 0> 



c 

II 


1 4) 

4J 

X II 

X -• 

• • 

II 

-4 C 

y 

y •• 

a> 

1 


rQ -4 

3 

■0 

■0 c 

X 


«» X 

b 

C X 

C 4) 

4) 

X 

0 y 


^ 4) 

^ m ro 

o o c 4) c 

ics c 

U 1--^ 

« E 4> 

4 o y CO 

E y w 4) 4» 

3 -H -H -• 

C 4j u 'X3 

V 3 £ C JZ 

C in a 3 « 3 

V 


lO 
V <-) 
•% C 

a-* c 

0.-4) 


C TJ 

- c 

1-4 •% 

c la 

4) 4) O 


^ JX c o 


-o 

c 

4) 


•% c 

• % ^ 

-• ^ 

II o 

li •• _> 

u 

E X c 

« I X 4) 4) 

C 4) *0 ^ 

4> <a *0 c o 

U C 4J 

0 O •-' II 

u iCu 
4) a> (Tj 

iJ u C 4) 

4) 3 --• O ■— 

O' QU'- *J U 


V 3 


138 








139 








a 





a 

0 

£ 

0. 



0 

o 

*j 

a 



o 


O' 

o 





c 





• 

4) 











m 

1 




• 


E 

* 




N 

3 




K 

•>4 

C 

it 





4) 










X 

X 

« 

X 



4) 

« 

C 

4) 



*3 

*3 

0 

*3 



C 

c 

•»4 

C 



•** 

•«p4 

iJ 




1 

1 


1 



4) 

4) 

01 

11 



C 

C 

C 

c 



ti4 







mmK 

w 





•i# 





U 

u 

1 

w 



4) 

4) 

u 

4) 




•m 

c 

Vm 





4) 

tM 



3 

3 

w 

3 



JQ 

ia 

u 




1 

|•4 

3 

1 



4) 

4) 4.. 

U 

4) 



C 

C X 


C 



««4 

^ « 

« 




m4 

— *3 

A 

<-4 

1 



C 





G 

C -4 


c 



« 

V 1 

1 

4) 



£ 

X 4) 




•« 

w 

w C 

X 

w 

• • 




4) — 



4) 

*3 

*3 

*3 4) 

*3 

X 

(A 

C 

C ^ 

C v» 

c 

hJ 



<9 U 

-4 ^ 


3^ 

U 


4) 

1 0 


C 

1 

fM 


C 1 


4) 

U 


VM ->4 

4) u 



4) 

> •« 

♦ 3 

^ 4) 



a 

o 

o 


X 

Q 

T3 

C 


3 

t •* 

4^ — 
C X 

— T) 
C 

c -• 

V I 

X « 
w C 


& 

o 

o 


X 

0 ) 

T3 

c 


a 

o 

o 


X 

V 

*0 

c 


a 

o 

o 


X 

0 ) 

V 

c 


a 

o 

o 


X 

9i 

■V 

c 


3 


3 

I »* 
V ^ 
C X 

•-« a> 

-I *0 

c 


3 


3 

I •* 
V ^ 
C X 

-4 4, 

^ T5 
C 


I«« 

> 


O J 

o 


3 


CP 

c 

V 


w 

c 

c — 


C 

C --4 

c 

4) 

4) 1 


0 ) 

4) 1 

4) 

X 

£ 4) 


X 

i: 4) 

U 

•» w 

iJ C 


u 

c 

u 





—4 

3 

4) *3 

*3 — 


*3 

*3 -4 

0 

tf) C 

c ^ 

£ 

c 

C 



u 

u 


U 

« 

u 

4> 

O' 


4) 

4) 

ilp^ 

•>4 VM 

c 

p-< 

^ >4^ 

C 

u 


4) 


•C.1 


4> 

♦ 3 


♦ •» 

4* 3 

£ 

3 — 

^ ♦ r-. 



Xk 

y 

O -C 

^ 1 

> ^ 


£ 1 


C rs< 



4J 41 X •*• 

—t 

w 

4) 

X ♦* 


<9 

-M 

*J 4- 

u 4) 

0 


O' 

O' C 4) 

• A 

O' 

T C 

4) 

!•% 

E 


O' 

O' C 

O A 

A 

C X 

C -• *3 X 

• II 

C X 

C - 

*3 X 

> —. 

1 

A 

C X 

C -4 

11 

11 

4) 4) 

4) -* C 4) 

«J 

4) 4) 

V — 

C 4) 

C <N 


il 

4) 4) 

4) -4 

« 


-0 

*0 

-4 4) 

— *0 

—• 

- *3 

O 

c 


— -3 

-4 

4) JO 

•J 

1 c 

Ml 1C 

01 

IC 

! H 

iC 

y A 

4) 


1 C 

1 il 


4) 

O -4 

•41 C 

C « 


4) •• 

C -4 

II 

u 

4) 

4» — 

9f „ 

*9 *3 

VI 

C 1 

C 4) 1 

V C 

C 1 

C 

4) 1 

« 

u 

0 > 

C 1 

C 

U -4 


-4 il 

*•4 4) 

^ O 

-4 4) 

-4 ^ 

-X 4) 

4) £ 

3 


9) 

•*4 

v) 3 

• 

-4 C 

'<4 X 0 C 

o 

—* c 

— X 

O C 

U 

y 

» 

—• C 

-• X 


I 

aJ * 

c « c 

4) u 4) 

u ^ 
u U I| Q 

3 V) II •• u 

O !•• —’ 

u X C 

« C X 4> 4» 

C « 4) *0 ^ 

<U G O 

M ^ C -* u 

O 3 -« 11 

u u rc w 

4) 41 ^ 

u 4J C 4) 

4» 3 -* O — 

O' Cli'-4 u u 


V •• 

TS 

C X 

^ 4) 

ro 
o c 
•• c •- 


c o 
<« o 


1 » 

£ 

X 


1 ^ 

E * -4 

u 

*1 « 41 

U *J -4 

3 3 £ 
a CL 3 


« W 

V T3 
C II 

X -4 .• 

V I 
■3 C X 
C 4) V 
- 4^-0 

lO c 

4) 4j ^ 

c 

I a -*4 c c 

4) O -• « 
CO Jd 

V Q 

-4 ^ U 

*3 -• 

C ^ 

4) 3 


O «J * 

-4 I 

\tJ X 
E C 41 
•«. 3 41 “3 
la c " 


4 ) .. 

■3 

• C X 

.-. 4, 

1*3 
V c 
c -• 


V 

V *3 

c 

X — 

V 

*3 C 
C V 

-4 ^ 

t o 

4) «j 

- C 


W -4 "O 


X 

V X 
*3 9> 
C *3 


X 4} 
41 u 


U V 
□ “3 
u C 


•4. C 

I a. 4> 


V) 4; 
1*3 
C 


c 

X •«- 
V jC 


lO 
-• fN 


C V 
C • 
1 *^ 


4> 

ns 


: V 
* *3 


•>* ^ 4) 


V *0 

C " 
X -4 .. 

41 I 
*3 C X 
C 4^ 4> 
-4 j< -a 

I o c 

V *j 
4 C 

c 


C fN 

o 


^ jC 
« *3 


O' 
c : 
a> 4) 


ij 4} 

O' c 

C -4 
4; — 




4 14) 

•4 c *3 
la 4) 


4) 

c t 

4J 

-4 C 

iH 

V 

' X 'I 

4 , .. 

*3 

• C X 

4> 

ns 


4) 

V TS 
C 

X -4 
4) I 
*3 C 
C 4) 

-4 

I o 

4) »J 
C 

i a-4 c 


1 9i 

41 

o 

4) 

U >4 


4) 

o 


V 

4) 4) 

o 

^ X -4 

C -9 



E — 

4) 

Q 


4) 

4) 

4) 

0 

JC 



4) 

o 


4) 

: jf( 

C 

o 


1 3 

1 

C 

o 



C 

o 

O 4) 

1— E 


O 

y 

C 

U 


JC 

JC 

C 

o 

o 

4J 

1 

C 

o 



' O 



91 

y c 

4) 

•«« 


41 

0 

o - 


4J C C 

1 1 

-•4 

y 

01 4) 



4) 

0 

0 

—4 



01 C 

4) 

■<4 


4) 

0 

tJ 



C 

4) 









V 3 

c 

1 

>-4 

-4 




u 




w 9f 

'—f 



'“4 

4J 



■3 

■9 

y J>C 



TJ 

■— 



3 

»J U 

C -9 


4J 

4J -4 


3 

••4 




3 


U JC 

•«4 


3 

—4 




c 

u 

3 0 



c 

C 



c 

4) 3 O 

-4 O 


4) 

3 X 


C 

j: 




c 

4) 

3 0 

£ 


c 

J= 




4) 

u 

a w 

3 


4) 

M 



4) 

O' Q« 


c 

4) 

£ 

01 

a 3 


4) 

3 




41 

O' Q. w 

3 


4> 

3 



140 


I 












142 


procedure Enqueue{Q : in out Queue; 
beg i n 








procedure Dequeue(0 : in out Queue) Is 






o u c 

C -H « 2 

O 4J ^ S i 

o o e 'O ■ 

4J c 3 ^ H 

U 3 C C « I 

3 *«-i o (>4 N 

u -H < n 

*J *0 U M 

one a<«^ it * 
c « o • « N 

J< O « X H 

O U « O W (J N 

« X 4 ^ li 

u « ^ 4J a Z H 

«IX 3 H 

4J ^ M k4 > II 

•n 4> <« <« jQ (I 

C U X X II 

U O *11 

c M k4 O' <4 u 

1' a « n 

g ^ < II 

4) «q 4) 3 4J II 

^ X U C II 

a. o 4j « o ^ II 

6 4j X a u 

•«H M 4J Ou <n II 

AO 3 O H 

o kl « 01 k4 II 

4J O O 3 H 

4J C 41 4J If 

A C 4» X U II 

C 01 01 4J 3 II 

o O O W If 

OiX S4 U H 

4J U O o cn II 

O 3 II 

C O A O O II 

3 « 3 N 4i~n 

01 -N O**^ ^ 0 

X A a II 

*0 o <n A * 'I 
C ^ £ II 

<9 4J u 'M 3 « II 

A <9 O £ II 

A > -4 X II 

V > o X 0 II 

U —4 41 N «9 ij II 

3 C X -* £ * 

*0 O ^ A OH 

O O X II 

U O 4J X 4J II 

o U • 4J H 

U <9 X 3 £ H 

Oi O. *9 O O II 

O <9 'M u W H 

01 U U o H 

c V o'‘o a II 

->4 X 3 C II 

i9 ij > o on 

u «j X -X n 

c -4 e *9 H 

O O O U U H 

. g TJ -I 01 " 

«,o ox • O' O II 

O £ <9 O O' ^ II 

CO' X > *-• O II 
o <9 O O --4 X 3 II 
c X >9 4J tl 

QAUuOCLOAH 
—4 W >9 IM -H 3 C II 

4joa.c wooH 

<9 > O 3 ••H II 

U g *9 A O' 4-1 II 
A * X 0 g 11 

j^<u •O'OOCH 

uao£'-« X3>i 

O < C O O"*^ 4^ 'M II 

3 O 4J ^ II 

X OI*^ o O O' O H 

^ ^ X A C X II 
'O A o 4J ^ aJ II 

c k4 --4 a V M II 

3 O X u <9 H 

<n>c-*4JO<9£oii 


£ E 

•« O O 

C 4J 4J 
/9 «— *-H 

O 

—> C 4J 
•■*0-3 
— O O 
-X X •• 
g •• E 

<9 C U O 

w U aJ 
t /1 3 h- 

4J -X 

u o g -x c 

3 -9 g u 

O 9 3 

^ {A u u 
CM CO O 
-» y aj u 

9 3 g 


Ul iJ 

t 3 o a 

V g 

01 41 --4 w 

1 4j Qu g 

> > A £ A 

I 41 > O O 

i oe CO o o 




> 


A 


.. ^ 

o 

3 — 

•a ‘a 



*• 


o 


9 


—4 

u 

to 


O M 

c c 







w 



4i 

to 

c 

g 

O 0 



CO 


V 


u 


>• O' 

•• 


C 9 






aJ >1 


9 


•9 

4) 

>• 


--4 tJ 

4-* U 


A 

>4 


<9 •• 




U 

u 

4J CO 

•« 

to 

a a 


•*H 

aJ 


> 


A 


u 

C 

Q.W 



41 g 



a 

»A 





< 


g >>tn 

• A 

g g 


A 

£ 

o 

u 41 






OJ ^ 


to 

X X 


J€ 

Cd 


a O' 

A 

A0 


• • 

•• 

41 ax 

— to 

41 41 


g 

g 

II «A 

41 


A A 




X g 

A 

a--' 



9 

M 

•• > 

A Ai 


-p<4 —4 



AJ 

•9 bJ 

3 

o a 

•« ♦♦ 


tJ 

9 

4J 

-4 c 

A 



41 

01 .A 

X A 

a 

a o 



A 

X 

u a 





u 

41 -o 



H 

>4 




A g 

g 

g 

9 0^ 

O 

A0 V4 

4) 

g 

4) 

^ Ai 


>* 

g 

4) u 

41 C 

-9 

u <9 

U 

u 

<9 O 

w C 

u 

W4 C 

^ a 

•A 

■o 

u 

aj 41 

*J 

u 

C4 A^ 

o to 

— g 

3 O 

3 

3 O 

3 g 

A 

0 

3 

9 ji^ 

w4 

A 

< tA 

g 


11 

■o -• 

TJ 

“O -4 

a ui 

M 

X 

T3 

-4 /Q 




4) 


w 

4> 4J 

V 

41 aJ 

M M 

g 


g 

c: • X 

V 

41 

V 41 

w 



g g 

g 

g g 

g g 

9 

g 

g 

-4 (A 

ax 

O' 

a a 



•a 

o c 

o 

0 c 

9 9 

A^ 

O' 

o 

O' TJ 

>•<< 

<9 

>• >* 



c 

w 3 

w 

A4 3 

aJ aJ 

A 

9 

u 

g c 

aj r 

M 

aJ >> 



V 

a'^ 

a 

a'w 

CO CO 


.X 

/ \ 

ax g 


144 


procedure Push(S : in out Stack; 
begin 

if S.latest * MAX then 
raise StackFuIl; 
e 1 se 







S.latest - 0 then 
raise StackEmpty; 







146 









9) I 

t 

O *J U N 

Q O C « 

4J e 3 » 

<d o I 

O U H 

•o « o « 

O M H 

C H 

O O H 

O 4J H 

4J M <1 

« *3 I 

4J jC « N 

«) 4J M 

M 

^ e -*4 II 

*-4 » 

Ji O II 

O £ II 

• II 

(p C « II 

«ja M 

S 4) 11 

41 U C N 

C U •« N 

MU n 

M II 

4) « II 

Mjau It 

C 3 II 

•M *0 R 

O 41 N 

U R 

O O R 

4J W N 

3 a R 

M a R 

41 u u It 

4J 3 C II 

£0 4) U 


N 


0 

«1 


R 

oH 
















on 

R 

« 

a.-«« 

3 

R 

^ •« *« M 














♦ * •% 


ft 

R 

fA 



U 

H 

^ ® ® ^ 














M V 

♦ % 

»• 

R 



® 


H 

M 0. a 













c 

C 4J 

® 

n* 

II 

• 

Ob 

0» ® 

II 

c >« >b. 










•* 



® 

<4 ® 

C 

— • 

ff 


3 

M £ 

H 

^ w 4J C 










M 

V 

• % 

X 

tb W 

0 

*0 

It 


C 

in 

w 

R 

tb 1 1® 









c 

C 

w 

0 

4o> 

4J M 

1 

V 

A 

• 

1 

in 


H 

4J ^ ^ V 






• » 

«* 


V 

14 

14 

c 


o 

3 

M 

It 

C 

C 


u 

II 

ICC-* 






M 


• « 

£ 

tb 

W 

o 

on 

II 

® 

3 

M 

•¥* 

o 

i 

O 

II 

6 - O 





c 

C 


® 

o 

*J 

M 

1 

Ob 

•• hJ 

C 


H 


c 



R 

y ^ ^ 0 


• « 

«4 




<4 

c 



O 

3 

ob 

X 


M 

R 

W 



« 

R 

M O O ^ 


M 

« 

*• 

JC 

u 


o 




® 

3 

c ® 

R 

U 

H 

0. 

4J 


« 

R 


c 

C 

4J 

® 

u 

u 

M 

1 




c 

C 

o c 

• • 

® 

it 

•« 

X 



R 

U U hJ ^ 




c 



o 

3 



X 



■o4 


w 

II 

CJ 

® *0 

<9 

R 

3 3 3 3 

£ 


u 

o 



I® 

3 

C 

® 

II 

II 

W R 

V 

C 

R 

c 

® 

-«4 

H 

O 0 O O 

u 

*J 

M 

1 

Ob 

• • 

tJ 

C 

0 

o 

c 

• • 


lb •» 

•0 


R 



M 

u 

R 





3 

Ob 


X 



••b 




M 

o 

O 

R 

b4 

® 

3 

a 

It 

c c c c 

on 



V 

3 

c 

0 

II 

II 



V 

C 

C ^ 

c 

a 

II 

® 

a ^ 


0 

R 

*04 *04 

ob 

«• 

u 

c 

C 

U 

c 

•• 


•"4 

• • 

T3 

—o 

•4 C 

t 


R 

It 

o* 

M M 

* w 

VO 

V 

w 

u 

a 

fl 

II 


3 

C 

X 

® 

It 

II 

w 


V 

C 

v» 

C 

JX 

O 

C 

CJ 

U --4 
W -4 

3 

V 

on 


' o o c — 



C *0 


-4 

II 

V 



..b 


^ VI O 

^ lb ob 

3 

^ . p 



iJ M 

O C 

M 


II 



II 

v; n 

® 

C C c 

o 

® 

-X 


ob 

•oH ob 

C -4 ob 

C 

® 

II 

•4 



-b •• 

*0 

•04 C 1 

' O O 

c 

c ^ ^ 

.X 

V) 

ob ob 

O M tM 

0 

u 

II 

«J ® 



VI 

0 

b -o. 3 

n • • 


c c 

c 

C 

-• X 

•04 Ul 


0 • 

It 

VI u 


c 

C 

c 

O W -• ® 

rn n 

m 

ob —b —b 

•ob 

<4 


4J V ® 

u 

E M 

II 

(J 4 


•o4 

<4 C 

1 

• o o c 

C jic jx 


p ob ob 

ob 

u 

«4 0 Cv* 

*4 > U 



H 

)kJ 


ob 

Vb Mb 

3 

<s, , . , 

-b c c 

c 

V • • 


u 

X a; O' 

4J 3 

M 

® C 

II 

W M 

« 


W —4 

® 

<N <% CM 

ob •^ 

•O* 

4J V V 

V 


y 9t 

M **0 

C X -o4 

R 

c o 

C 


O O 

c 

C 

. —b 


>4 u tJ 

u 



tl 4J iQ • ^ 

II 41 n 
>1 u M ^ 

II M 13 U 

II O ^ 4) ^ 

1 \f9 £ ^ 

It M £ X 

R C O W 

ij ^ .« CP 

i| U O^X 


.X < ® 4 

-b 


M 

® 


0 

ob 





c 

c c 



. 


bJ 

4 

4 

4 


ob y 

w o y lb 

> 


c 

kb 

w 

1 


ob 

ob 

ob 


—b 

ob ob 

«J 


V 

V 

VI 

iJ 

U 

bJ 


< M 

0 •< O bi 

4 V 


4 

kb 

X 

3 

c 


JR 



-b 

ob ^ 

4 

bJ 

bJ 

bJ 

O 

VI 

V) 

VI 


9 3 

3 ^4 

g >4 


U 

3 

® 

V 

-ob 

c 

c 

C 

if 



tJ 

4 

4 

4 


o o o 


•oo «Q 

X a*-* 

o 


bJ 

U 

c 

c 


■•b 

ob 

ob 

u 


® « 

VI 

bJ 

bJ 

bJ 

w 





V a 

br -04 Ob 

ob g 


’■b 





-b 

ob 

ob 

4 

bJ 

bJ bJ 

o 

V) 

in 

VI 

C 

u 

u 

bJ 


c 

-O M 4 



® 




® 





4 

4 4 

'O 


O 


c 

c 

C 


•^ ^b 

C w ob 

■3 ^ 






nl 




<n 

u 

U bJ 

bJ 




kb 


V 

V 


^ ob 

3 ® X <*4 

0 0 


4 




4 

U 


nl 

O 

VI 

m M 

c 


bJ 

bj 

kb 

kb 

u 

lb 


lO 

tn > e4 Hb 

g »bb 






ni 

4 

4 

4 


O O O 

® 

c 

c 

c 

3 

kb 

lb 

u 


bJ U Mb 




VI 




in 

bj 

w 

u 

w 


1 1 

u 

® 

V 

V 

U 

3 

3 

3 


3 U -< 




O 




O 

in 

M 

M 

c 

u 

U bJ 

kb 

U 

lb 

u 


U 

U 

U 


0. M •« 









O O O 

V 

c 

c c 

4 

U 

kb 

kb 





M 

73 

c 







bj 



1 

kb 

® 

® V 

U 

3 

3 

3 





ob 

C -4 

o 



c 




c 

bJ 



kb 

kb 

kf u 


O 

U 

U 

® -b 




V 

® 


» -o 

It up 

It 4) O M 

R 4» -C ® -• 

It «j w u > 

'» -4 ^ 3 ® ® 

1 Cb < O 04 


b u 

® a 

e ^ - 

« ^ u 
bi a u 
M g M 

>< o ® 

V> CJ Q 


3 

*0 

® 

u 

o 


u u u b 

3 b b k4 

U 3 

w o 


3 3 ' 

U U ® 


3 3 
U U 


*0 w 
C 
® 

-O '*-• 
c 


0* 

V 




■o 

c 


147 



















fill 

^ 4J 


•• •« A V) 

4) « < X 


rg 

4) 

c 


X 

0 


4J 4J tH 1 







X 

u 

a 


•4 <4 flC 4J 



y •« 




y 

3 



W ^ < X 


«« 

w 




y 

i 

w 


«i M > y 



U u 

y 



E 


-4 0 


1 1 IC 


y 

4- y 

w 



O • 

• 

3 c 


W C4 X 4 



M W 

y 



y y 


c 


y y < ^ 


44 

O c 

u 



u <-* 

a 

C M 

X 

c cm u 


w •« 

1 3 




M O. 

3 

« 4) O 

a 

^ ^ o y 


<A 

^ O 

o 



3 

4J 

X X 

<4 

X X X 'O 


o y 

c y 

1 



C U 

o 

U 4J 4) 

U 

0 0 0 4-4 


1 —I 

y 1 

*0 



o o 


*0 

or* 

5 y 4 0 


Q. <4 

u 4) 

c 



• 

O 

•1 ^ 0 


E E y X 


E u 

w u 



rsi 

-* y 


« ^ C 

o 


1 4* 

y M 

3 *4 

<*- 



3 U 

•9 

X Jtf 

u 

V y a c 

y 

w O 

y w 



>« 

CL y 

u 

0 0 3 


---.4 3 0 

-) 

1 

«)) 


C 

y 

w 

n 

^ m a 

TJ 

a 0 . «j -4 

y 

« 0. 

• o 

y 

y 

kri 

0 n 


-4^ X 

-0 

3 3 O 4J 

-j 

C £ 

c 

u 

X 

u 

4J O 


u a 

^ o 

X ^ o 
lc/» —* 

tl Cd 4^ 
V U ^ 


>* 

u y 

y 

iJ 4J 4 


y 

0 y 


0 * 

y 


w 

y 


1 

-1 

1 y 


o o y 

y 


h-4 W 


-4 y 

w 





y w 

a 

u c 

*0 

4 4 U 

0 <N 

W 


w —< 

y 



y 


c c 

E 

^ 0 y 

c 

y y y 

ax 

—k • 


— a 

O 



c 


0 y 

y 

-H 

y 

WWW 



y y 


y 3 •% 

1 


y 

•1— 


-4 b 


*-4 W 


<« y y y 

II 

II 

C w 


C w 

w 


— 

X 


w u 

y 

-4 .H *J 

y 

-Ik w w O 

4. 

«« 

y y 


y o y 

c 

c 

O' 

y 


3 


w y 

*0 

c y y 1 

f 


U W 

• k 

W • w 

y 


O' 

y 


y y 


c c 

0 

0 O O w 

u 

w 

w y 


w y y 

b 


O ‘k 

£ 

• k 

c ^ 


3 y IM 

c 

i IC 

y 

y 

lO 


Iw w 

b 

V) 

w 


A 

y <N 

y 

U >44 


W W W 4) 

X 

X 

W 1 

♦ 

w y y 

3 

> 

c 

*«— 

y 

b y 

y 

>I4J 

X 3 

•4^ C C W 

6 

E 

c a 


c w o 

y 

— 

w 0 

0 

w 

w c 

u 

y y 

a y 

y 4) y ^ 

3 

3 

y 0 

u 

y y 1 


b 

0 •- 


y 

•4— 

y 

w a c 

y c 

C w wi 3 

C 

C 

k4 W 

y 

w o W 

% 

y 

C W 

3 

w 

X X 


w O 

w 

y w w y 


t 

1 U 


ic 

c 

■o 

«■» —k 

0 

y 

y y 

’ c 

y H E 

o y 

•• k- 3 3 

y 

y 

3 y 

c 

3 w y 

o 


y 

b 

I 

--* <4 

o 

a k4 


y w y y II 

w 

w 

o -< 

3 

yew 


0 

■0 c 


CN 

X X 


O « N « 

o c w • 
*4 C 41 
-C o -o . 


« ) 

fl 


^ Q, 

«J 4J « 3 

• (/I vt vy 4) W c 
OJ • . — o 4> 


O 

U 

I V 
4^ u 


lw> 
v\ u 

4; 4) ^ 

c ^ cn 


'll 

jy 

c 

y -4 c 


4. U 

y 

41 X 

y 

y a 

X 

w 

y y 


y 

-.4 

J< w 

u 

rv» 



y < 

0 M 

y 

y 

y fW -- y w C 

w 

b 

w 

w ffi 

w 

W 3 b 

w 

y 

W 

y 

b 

w 

y c 

3 




E y ^ 

•t- gt 

y 

b 

w b 4W E -w 4 ) —* 

y 

*0 3 

y 

y < 

y 

y w 0 


w 

y 4) 

3 

W 

—4 

y V 

U 

>4 



b --4 GC 

*0 5 

w 

w 

y V 3 y X 

—4 

y y 

w 

W *-4 

w 

w o 

-•» 

y 

O — 

y 

1 

y 

W b 


y 

4« 

• k 

o *0 < 

y > 

y 


w c 'fc- c w y 

X 

w 

y 

y oc 

y 

y • 


O 

1*.^ 

3 

w 

0 

y b 

c 

b 

rvi 

y 

w y > 

b 


4-^ 

y —4 0 y 

y 

—4 « 


K 


1 y X 



0.^ 

O’ 

C 

a 

1 3 

—4 

b 

b 

w 

y k4 

Oi X 

c 

y 

o o n u *0 y 


y 


<N > 

— 

rsi w y 

3 


E 


y 


c y 


y 

y 

y 

T« 04 X 


__LC'^Jwc- 

4iai--404J i 0'3<40 
N04-*^C3-4krf.^OEC 

-•0« HU4IW4> «« 

>9 ‘CW-fl 

CD-HjCan-tD^-^WO 
<^u*j «*0U0 -^“O 

a^j If xux4>'' 


II 3 ^ 13 13 

•• u >*^ U C U C 
Ow4-»4)00 

^ •acu*a-t4>-*> 

U4)£3'«->HtjXw 
'DUCU *J0-^*J*-<'fl 
(A 

<^^*-•00 IO«OC 
I «) O I C CL N a. 41 

C o ^ W O ^ X 


4> V 
*0 
V o 
*0 c 
o 

C V 


-«« U 41 V I 41 41 
><QCC>1CC4J 
, *j ^ ^ < .-I ^ tn 

•• w I o u o y y I 

4)4)C<«1>-J'^‘^«J 
3-OOEEOg£C 
iM 4J 

^OiJ4;4l4;4l4l'^ 

**CCw^*J4J«jU 

W4 o O O O O c 


O 10 
-* u C 4) 
u C '-.C 
•H 4) u 
«y u 4) 

C u ^ O 
^ 3 "O 
ui y X I 
w 3 > 


3 0^ 

y a 3 


-fl »*-« 

c •-< 


4J 4J fill O 

o'-^'^Q.a.o.a.o. — 'O' 

'Q^O*viCL£e£££ww 

0004l4livvvy-^' 

04WU a.flw*j tj tj u < ^ ■ 

«4 -aH 

I 1 


O w 
u w 4) 

'I u (*J 

41 y o c 

4I^4j—-- 

w c a. o 
'^3^30. 

*j r> <n ij ij 
y o o 

! I 14) 

4) u 3 
w u 3 4) 

4) O. 3 
u <A ^ O’ 

«rt C 3 C 
O — O UJ 4) 


V VI 

u o 

*j 13 

<n c 
O - 


• % u 

4> ki 

«rt 3 

—• y 

>9 

<4- 4) 
II <T> 


5 O 

4) I 
C 

C '41 
tfl >4 --• . 


4) 

■o 


O 

X 


1 

. _ 'V fl o« X 

ro ^ 

4) —* m *0 4) CU 
C O O c N o 

—•X \'9 > J 

X l4J -* O 

y c c «fl u • 
•D O 4) 4) c 4) 
e •-. ^ 

•-> 'T) X o. 

II a. iq II 3 


tfi 


“O - 
C X 

4) 4) 


o a-* 

Em 

<J Cd C 

-4 in tj 

(A ««4 •» >-4 
3-4 0. 4J 

O. O 4-* — 

-o o o a 
c -4 c o 

4) ^ a. 4) , 

“O « 

C'4- — 

4> 4) 


II u O 

.. ifl . 

> y 4) 

4) 'Q 4J 

I 


> ^ -H (A . 


O' •• 

O'* 


. a 'Q 

o 

I O T3 

: -• c 

I 

■n '*-* 


O <N 
X ^ 

I 4) 
C 13 
O —I 

- o 

U X 
•-• I 
M 3 
O O 

a 


«n CO 
O 4) C I 
1 N 4J 
4^ >44.> c 

c —4 —• y 

4) A} tf) y-i 
U c C U 
W IQ 3 
3 I u y 

y I 4^ 


149 







150 








151 












153 






>< 

B 


a. 

u 


V 

cr 

k4 

V 

M 


V 


K 
II 
It 
H 
II 
II 
II 
tl 
II 
II 

n 

II 
II 

U II 
U II 
m II 
11 

u il 
3 II 

a II 

W It 
3 II 
O II 


V 

o T3 


C £ 
0 3 
c -< 
o »» T3 

U « -I 


>* 

g 


C 

a 

-o 

u 


O' 


1) 


. « 
£ 

y 


3 

O • 

oc 

U U 
^ H 
3 Z 
hJ 


V 

O *0 o 


'o j: 


_ o 

4t 3 <X 


n 

tl 

NP C It 

y *0 M 
C ^ V tl 

O 3 u 11 

C CL II 

O OT *0 E It 

••4 V 0 II 

a> — ^ Il 

> -• a II 






A * U 

II 

_ 





ll 

A a 


A « y 


II 











II 



• « 



1 

3 ^ • 


< 

O 


•-4 



•* 




3 3 n <N 


u Q 4) 

II 



A 



•1 

A 3 *3 0| 


u o 4; 










O ^ 


0 < 

!| 

• 


c 



•1 

a o 


o < ^ 










a 13 


3 3 

'1 

A • 


41 



•1 

. 3 


3 3 


II 

■04 • 



01 




M It 


X -0 

II 



— < 



ll 

—• —• 4) ^ 


X V 

.04 


4) 







u X 4t 


A* -* 4) 

II 

^ •• 





.1 

—• X 4; 


^ ■0* Of 



•* 








“0 0 

It 

<0 < 





)l 

o X «-* a 


*0 y 






«• 






c u 0 

ll 

A cr ifl 


■0 



ll 

u o u 


C u 0 

V 


3 C7* '9 


*^3 




^ (H o 



II 

3 C ^ 





ll 

y — -g o 


3 4t ^ 



C 

u 






U O'X 


(/) > a< 

II 

■« -4 3 


<fl •• 



II 

A O'X ^ 


(/I > a 


II 

a-^ 

3 





II 


ll 

Q. U u 


Q ^ 

< 


tl 






\ u 

u 







** 


II 

MAC 


><</1 

04 4t 


II 





H 

^ A 

c 


>• 

A 





c 

ll 



4) Cl] 

— A 

A 

1l 



c 


II 

0 



4) 






0 

ll 

V .. .. 



t 3 

c 

ll 



0 




•• 











•« 


^ -fl 


l< 





4 

y 


•» 


a 






II 

U V 

4) 

41 ^ 

4t a 

A 

'1 





II 

A “0 


4; 

4t 


g 



■0 

4t a 

ll 

u 

C 

c c; 

C 1 

E 

.1 


V 

4t a 


II 

u 




-4 



u 


6 

II 

4) •n 

■ «4 

•04 {/} 



<1 

k« 

4) 

£ 00* ■•4 





••4 


^4 


i| 

« o 

A 

If -4 W 

ll 

u 0 


-4 < 

—• '9 

4) 

:( 

V o 

A 

4> u 


II 

w- 0 



—4 

o 



>-• 4) x: V 


u a. 0 

II 

3 ^ 


1'^ 

1 41 

w 

'1 

— 4t X « 

—4 

bi a y 



3 X 






-H 4J ^ 

> 


II 

•n > c 

3 

u u 

4J —* 

A 

•1 

U »J iJ 

> 

A £ A 


II 

TJ >• C 


bl 


Vi 


-• -* 3 A 


>1 O 4) 

il 

4) 4t 4) C 

4t 

4) 3 

3 U 

w 

;i 

3 

4> 

>< O 4t 


M 

V 4) 

4) C 

4) 

V 



II 

6-> Cb < o oe 

</) o o 

ll 

(J ^ 

C 

cr a a 


ll 

e- Cb < Q 

ac 

v> O o 


II 

y j< 

-4 "4 


O' 


0. 




II 

0 cr 



T3 

a 

.1 






o 




*0 





1 1 1 

1 

u 4> 



C 

4t 

1 

1 1 1 1 

1 

1 1 1 

1 

1 

u 

y 




A 

1 

1 1 1 1 

1 

1 1 1 

1 

a 



V 

A 

1 

1 1 1 1 

1 

t 1 1 

1 

1 

a 

X 



4) 


154 







il 1 
a II 
V I 


0 

a. 


a 

« 

u 

o 

< 


0) «l H 
>« U 
B 


W 4 It 


H 


X 

» 


II 


0 o 

H 


II 


U C 

N 





II 

$ 



4J £ 

II 

O. 



3 U 

U 

> 



a 

It 

4J 



W g 

II 

I 



3 

II 

> 



O 0 

H 

'0 



u 

11 

u 



c 

B 

w 



ft «1 

<1 

■n 


> 


II 

1 


€ 

0 0 

:l 

g 


<A 

3 


a 

u 


(V 

CT* 


C II «J 

>-4 II tft 

^ O II >4 

«>4 0.(11 (A 

W ll 


> 


I 'q .c 

I) • hj 
C u O 
-4 3 OC 

£ a 

O 4J • 

-tl 3 n 
go <T> 

1 I 3 
u —• 4» -Q 

3 ^ ^ 

W Cij 

4J o u 

3 -H O 

o -» 


T3 

u V 
1) O 

-• D £ 4> -• 

w u *.» > 

3 'fl 4» 
H Cfa < o oe 

I I I t I 


« -4 

4j a u 
M g tf) 
>00 
</> CJ o 


r 


>• II 
>9 II 


u 

II 

c 





— 






-C 

II 

—4 











o 

1 










■o 


^ 0 

II 

• 4 









o 


e c 

B 










u 


•w 

II 

> 









3 


£ JZ 

ti 

Ifl 









o 


o o 

II 

U 









o 



II 

kl 









X 


o g 

II 










lil 


o 

II 

1 











. ..M 

II 

o 





10 




— 


'« 0 'O 

ll 

c 











c 

:> 






c 






C V) 0 

11 

£, 





o 




c 


0 *J -4 

ll 

0 





hi 




o 


c - c « 

II 






c 




—4 


0 tfl 0 c 

II 

g 





o 




tJ 


--4 u w 0 

1 

*.4 





u 




-4 


4J O C g 

’1 

tft •« 









«o 


> 0 -• 

i| 

> r* 





>. 




c 


0 T3 

'1 

■U .* 









■H 


(0 « 

'1 

w 0 '1 





k. 






.H* < 0 O 

1 

u O. «• 





u 






M a x: o 

t 

-n > 





< 






0 < 4J w 

i( 

iW k> 











3 JZ 

ll 

0 10 









— 


X u *j 

1 

c ^ cr 











3 

(I 

^ C 0 





0 






■o a 

|| 

x: --4 (j 





c 




0 


C U 4J 

ll 

0 -• c 











3 0 3 0 

II 

cn -• 





JZ 






^>0 4-1 

II 

g 





o 







B 

l.. .. 









— 



ll 

hi 





X 







i| 

3 U 


• « 


.« 


r« 





c 


a o 









g — 


o 

n 

hi ^ hi 

rsi O 


o 


o 


o 

o o 



It 

3 —• C 


rs» 


<N 


OJ 


«N 

w fN 


u u 

!t 

0 0 3 

0 



— 







0 a 

1 

£, 0 

c 

—4 


—4 





—4 


E -• -4 

it 

O 1 o 

-4 

o 


o 

— 

o 


o 

— o 



•* o 
— “O 


a u 

—.O'* 

—• O . 

. o 


Q. ^ 

O w -4 

O »- — 
— “0 3 


II 

u 

C -* 
3 O 
O <N 
U 

‘■O 
O O 
C £ 


ki a. V) 

U —' 

3 0* 

o cn c 
TJ o 
o E - 
*-> 

-fl * - 

E u 10 
4, C 
* CT 'fl 
u 4) w 


T3 

O 


V 

T3 


o 

^ O 

g -0 CO 

hi o 

C *0 

0 

-0 

ll 

c 

—4 !l 3 w 
ll o '* o 3 

•* S 0 

0 .* 

u 

—4 

'♦ £ O U 

-.4 x: —.X —. 

0 


\hj la 

o 

lO » 1-4 

*0 


u 4) I 

3 0 0 
“O C 

4) 


O * O « O j 


-4 w 4> 

V O O 
«-» T3 U 

o a 
wt x: — 

! « 

41 4> 

w O —• - 

3 ^ - 


I 


4) vO *« 

O —— 


<N • — O 
3 C U U 

O O •* B 

O'-40'*-0— -*o—-o — 

I— -4^y»f a.O» 0.0* 

33303303 
0.0.0.11 CLO.(0 O. 


■O u 
C O 


O O 
C jC 

\ .* 
-* o a 
1 o o 

5 o 

4, 

c o. 

TJ 


3 u 
V o 




o a-4 -. c w 
O' 

o 

X3 


*.« w 
O 3 
. lO O. 


155 


end loop; 

























II 



•i-t H 

II 



4 II 

II 



^ H 

II 



0 11 

II 



w II 

II 



0* n 

H 



K 

H 



41 N 

H 



X H 

N 



ij a 

N 



II 

a 



0 u 

N 



U II 

fl 



* 11 

II 



41 II 

II 



4) O' 11 

II 



iJ 'Q II 

II 



C tf) II 

II 



tfl II 

II 



0 4) It 

II 



a £ II 

II 



II 

II 



*0 (1 

II 



C II 

II 



«) <4 n 

II 



jj It 

II 



a. 4) H 

11 



4) a. H 

II 



0 >1II 

II 



U i-l u 

II 



< II 

II 



C II 

II 



0 II 

It 



«II 

II 



iJ W II 

It 



3 -- II 

11 



a n n 

II 



U C II 

II 


> 

3 It 

II 


g 

0 M II 

II 



4J II 

II 


< 

jj II 

II 



•-H VI II 

II 


4 

3 C II 

II 


V) 

IS — II 

II 



VM tl 

II 



41 4J II 

II 



*0 C II 

II 



Q II 

II 


« 

0 U II 

11 


C 

U II 

II 



U II 

II 


<« 

C 3 II 

II 


u 

o a. II 

II 


a 

—* u 11 

II 


•4 

U 3 II 

l( 


U 

-• 0 11 

il 



VI II 

II 


« 

C 41 il 

II 

C 

k4 

<4 J= II 

II 

0 

4) 

0 6-> II 

II 


O* 

• U II 

II 

u 

M 

• II 

II 


<i> 

4) 11 

It 

Vi 

M 

C iJ 0 i) 

II 

c 

Vi 

0 fQ O, Il 

II 

«n 


C iJ C II 

II 

u 

.-4 

0 (A VI -H 11 

II 

u 

^ £ 

U II 

II 

1 

4 tJ 

U 4) V) II 

It 

9) 

iJ 0 fN 

<«>'«<« II 

i| 

u 

3 QC <»* 

4J J3 II 

II 

'A 

a ^ 

tf) * 0 ^ <1 

II 

iJ 

u • 

^ ^ CL )l 

II 

(0 

3 n 

w Q O' '0 1 

i| 

0 

0 j: 

0 < ^ '1 

It 


1 13 0 

3 tf) O' '1 


c 

V 

JZ 


u ■«» 

4} ^ 


c 


I « 

'i 


- E 
c « 
O u 


u 


tJ -H ^ 


w ^ <y ^ 
3 ^ 

a^ xj £ 


X 

V -H 3 4) II 
(1> ^ II 

U iJ 


C 

.-^ (U 


^ w 


<U <U 
I i_< w 
c c c 
E ■ 


« (i 

c 

V £ 
— w 
ro 

u •*^ 
--• 3 


iM lb 

u ^ 

£ 

A 3 
II C 

£ 41 


« £ 
C 41 
O W 


C 

c 


—« CO <N <N 
O ^ 

• C C 


C ^ • ' 

^ u w 

—I (n 4; 41 

• l4J «-l 

^ c: c c 

4> £ - -- 


c 

4) 

£ 


« H 

c 

41 ^ 


tf) 

C • 

rq U 
k< 4) 

£ 

A 3 
II C 

I 

X 4> 
w 
■3 ^ 


« £ 
C 41 
O u 


I — M 


4^ <q* 
(A 

A 

« H 

C 

41 JS 

4J 

ro 

4J •*>< 
•-* 3 


^ 41 

4J 4J 

-o <0 


* E 
C V 
O 4J 


c ^ 
<« c 


m ♦ -— -— 


c ^ 

- 4 ) 


w C C C 


O -X . 

• c 


c W • • 
41 U u 

>-4 M 4) 4) 
• I 4 J w 
u c C C 
E • 



II 




r* 


3 4 > 3 4 J 

ii 

tf) 


4 J 

3 

0 0 

kJ 

3 

00 

3 

0 0 


3 

0 0 




II 

0 

0 ) 2 : 



c/) > 0 tf) 

It 

0 

1 


c 


a a 

c 

p—< 

a. a. c 


0 . CL 

C 


a CL 


1 

4 ) 


11 







II 



0 

1 1 


0 

1 1 •-« 

0 


—H 

0 

1 1 






















4 ) 4 ) 

U «J •% 




|| 







II 

3 


0.0 

kJ kJ ‘4^ 

ao 

.J Ui •« 0.0 

U W •'p 

0.0 


3 








C 

i| 

a 




3 3 4 ) 


ipiM 

3 3 4 ) 


3 3 4 ) 


1 ’*' 

3 3 4 ) 


kJ 








0 




4 ) 

ppH 

kJ u C 

4 ) 


.J ..J C 4 ) 

••M 

«.» 4 J C 

4 ) 


«J C 














W 

0 

tf) tf) 

kj 

0 

tf) tf) w 

0 

tf) V) w 

w 

0 

V) tf) --M 


0 

<9 







u w 

II 

0 


3 

u 0 0 -• 

3 

'J 0 0 -« 3 

0 0 0 — 

3 

u 

0 0 


1 

£ 






*0 

4 ) CL, 

1 



u 

1 

1 •* 

u 

1 

1 *%^ 

1 

1'-’'*-’ !•* 

«J 

1 

I'M w 1 

1 •>» 

*J 


II 



u 


V 

E 

’I 

4 ) 


tf) 

.J 

u 4 J 3 '«-< 

tf) 

kJ 

u w 3 *«-* tf) 

u 

u kj 

tf) 

u 

4 J IJ 3 



4 ) 

II 

41 


0 


tf) 

4 ) u 

ii 

u 


0 

4 ) 

3 3 4 )-' 

0 

41 

3 3 4 ) 0 

4 ) 

3 3 4 ) 

0 

4 ) 

3 3 4 ) 


a 

kJ 



4 ) 

£. 

4 ) 


u a u 

n 

3 


’«» 

0) 

a a c 


V) 

a a c 

tf) 

o. a c 


tf) 

a 0. C 



>4 


kJ 



u 

> 

tf) E V) 

ti 

-0 




T3 



■0 


“O 




■0 


U 

II 


mp4 

3 

3 

4 ) 

>0 4 ) 

n 

4 ) 

c 



c 

Mm 


c 


C 



c; 

0 


1 

H 

(u 

< 

a a: 

(/) 0 Q 

tl 

0 


• •H 


4 ) 



4 ) — 


4 ) 




4 ) 


a. 








II 

0 

O' 














4 ) 


1 

1 

1 

1 

1 

1 1 1 1 

1 

w 

4 ) 













c 

0 ) 


1 

1 

1 

1 

1 

1 1 I 1 

1 

a.a 













4 ) 


157 






I 

u x: 

3 a 
a <9 
u u 
a O' 
o 

« 

*0 X 
C 4J 

4 

c 

iJ *0 

(A O 

o C 

I 

*J **- 

a o 

a 

4J u 

a 4) 


II 


> 

e 


(A a < 11 

« C ^ II 
U HU 

a *o fls II 

-O C O rt 
<i) II 

O N 

o 01 ^ II 
u u a II 
a a u 

u a » 

«) <A O It 


<1* <n -< 
u X a 
0 


^ «M II ^ 


a 

u 


0) 

O' 


01 

X 


II (A • U 

II V O <N 

ii w a OS ^ 

i| ■fl Q, ^ 

I\ u u • 

!i lA a r» 

'I (J o X 

I 1 I a u 

> w ot 

II a X 'ti 

'I ax 4j X 

i| o u 

■\ a —• <0 o 

II o o* 2 


O' V 
X TJ 

a a 

4 0 0 

U 4J «J 

O' 

o -o 

> 4J 0) 

aJ u 

•«4 u u 

41 0 ) 

fM ^ u 


*0 

o 

a <A 


X 

o o 

. 

V0 41 


41 

a 


JC 

c 


a a I 
V 0 a I 


o «A u a 

u *.» < O 

u 0) a 

4 > 41 

U • (A 

<A « 4; 4) 4^ 

Jrf^X'O-* 
'•« Q O X 

O < C 4 

3 (A I— 

X u 4) 

V a 4j 4 

-o a 4 > 

C u 4 ./ u 

a D a «A « 

> o o 4 


4» - O 
W 41 

4 a a 


V a 


(A u *pl 

o 

I H II 

a •• •• 

o 

w 41 

a 

m > 
4 ) c w 
4 ^ 4 I 

4 41 -X 
*J —' C 

(A o •- 

00 — 

IQ O 

4.1 

3 .. .. 

a 

^ O' 

a 4 
o — 


c 

V 

X 


a 

o 


4 c 

u O 

tfj -< 

O C *J 

I 4J -• 

ax (A 
0 ^ c 

u 


O' * 


lA •• 

y c 


0 

T3 
0—41 
C '«-< 4J 
I I 4 
4) w 4j 
4J O <A 
4 w O 
w ^ I 
<A Cl] 4J 

o a 
I u a ** 

W O 4J 

a c a - 
a— o 


c 

c •• 

c •% 

c •» 

4> 

41 

41 

4; ^ 

X 

X ^ 

X ^ 

X M 

U C 

C 

u C 

U C 



•«* 

••4 

A <-* 

A ^ 



41 0 

V 0 

41 0 

V ca 

a • 

a • 

a • 

a • 

k* 

U <N 

u m 

w ^ 

W 

4^ ^ 

■U 

JX 

c 

C 

c 

c 

II -• 

II ->4 

II --• 

H 





4> • 

4] • 

41 . 

4) . 

■0 0 

“O 4» 

■0 0 

■0 V 

0 u 

0 u 

0 tJ 

0 4^ 

C 4 

C 4 

C 4 

C 4 


1 w 

liJ 

lU 

a «A 

a «A 

a lA 

a lA 

41 0 

4] 0 

4) 0 

41 (a 

c i 

C I 

C i 

c 1 

. Q, 

• a 

' a 

• a 

— 0 

<N 0 

rO 0 

^ 0 

^ w 

ji 

^ W 


c —’ 

C 

C ^ 

c 

•M <A 

— tf» 

•— lA 

-- (A 

41 

-* V 

— 41 

-4 4] 

• w 

* u 

• 4J 

• u 

4» 4 

V 4 

4) 4 

V 4 

u u 

k.4 


U »J 

lA 

4 (A 

(A 

4 V> 

^ 0 

^ 0 

w ca 

u <a 

(A I 

Vf 1 

(A : 

lA 1 

ca w 

0 w 

ca *-> 

0 4J 

I a 

la 

1 a 

1 a 

a a •« 

a a •« 

a a 

a a 

0 w 

0 1^ 

0 w M-t 

0 4^ 

w a -• 

u a -• 

fcj a 

4J 3 •-* 

0 

0 

0 

0 


<W || 

u 


41 

6 — 

II 

V 


c 0 

w 


u 

■0 

"O 

■0 

■0 

T3 

'•■4 

a 

4] 1 

V 0 


(A 

4] kt 

It 

u 

M 

41 4J 

1) 


a 

c •*- 

c •*- 

C 

C V4-. 

C 


a 

*j 1 

-* 0 ; X 

V 

—4 

4-1 a u 

'/ 

a 

0 

ki 

IM 

01 

0 - 

4» 

4) -4 

4) — 

4) -4 

41 


u 

4 '» 

J —4 U 

4J 

> 

(A g <A 

II 

V 

W 

M 


VJ 







*0 

a 

W It 

.-4 3 

4 

4) 

>4 0 It 

)i 

V 

u 

3 C 'w 









c 

0 

4 il 

H a «£ 

0 

OS 

CA cj a 

■1 

0 

UJ 

0 -» -1 


41 







4) 


a II 





)i 

0 


O' 










T3 

V I 

1 1 



III! 

1 1 

u 


41 










C 

V) 1 

1 1 1 



1 1 1 1 

1 1 

a 


X 










4) 


158 





JZ 

a. 

•n 


V 

CP 


4) 


II 91 4 ^ 

II -.H • U fN 

II 91 U O ^ 

n >« D ae 

II —I a ^ 

II ^ 


-c -a 

O iJ 41 

< Xi 

VO 91 
*0, u 
c -< o 

O >«4 91 
^3 4 ) 
91 ja *0 


ij 4) 4) 
<9 > U 
*J 3 
91 **0 

■M < V 

' 1 a ■' 


II 


4 

R 

• « 





M 


X 

u 






M 


U 

N 

41 





It 


4 

R 






It 


« 

R 

4 





n 


u 

R 

U 





It 



H 

VI 





H 



R 

1 





H 


4 

R 






1 


X 

II 

4 





H 


0 

R 

X 





M 



n 

O 





N 


CP 

R 






It 



II 

CP 





It 


4t 

11 






It 


X > 

It 

<—< 





It 


4J 4t 

R 

4 





It 


ki 

II 


• * 




It 


91 3 

II 






II 


4t *0 

II 


tf 




It 


0 41 

II 

c 





II 


3 0 

II 






II 


'O 0 

II 






II 


0 k4 

II 





♦* 

It 


iM a H 

<N 

X 



A 

It 


a 

U 

( 

Or 



4) 

II 


X 

II 

4t 

< 



W 

If 

> 

73 U 

It 

u 

CL 



4 

II 

E 

C 4 

II 

4 

O 



49 

II 

w 

4 4t 

II 

u 


•4 


91 

It 

< 


II 

91 

4t 


•% 


It 


%<*-* 

H 

1 

49 

« 


E 

II 

« 

91 0 

II 

49 

4 

•• 

f 

41 

II 

VJ 

> 

II 

U 

49 

•• 


49 

II 


4 W 

II 

4 

</) 

•• 


9) 

it 

• 

u 4t 

II 

U 





II 


u 75 

R 

9) 


•• 


91 

II 


4 4 

II 


4 


X 

1 

II 


4t 

II 

« 

X 


a« 


N 

C 

41 X 

II 


o 

•• 

< 

4 

II 

•«< 

C 

II 

( 


•• 

K 


II 

4 

^ 41 

II 

41 

o 

Cil 

O 

49 

It 

w 

X X 

II 

49 


ac 



II 

a 

(5 4^ 

II 

4 


Cl] 

<u 

c 

11 

4 

4 

II 

4J 


X 

4J 


II 

u 

E C 

11 

9J 



4 


II 



It 

1 


< 




o 


4 

Xi 

o 


o 


ac. 

< 


Ci] 

3 


<o 


4) 

u 

4 .% 

4.; 

tf) V 

14.^ 
-« 4 
4 

J3 9> 
O I 
— g 
CP 4> 

|4J 

91 

4 > 


j: 

a •« 

4 ^ 

W 9) . 

O 4> 
tJ 
> O 
u C 
•-* ( 
w 
0 

ja I 

4 U 
jC 41 
o ja 

4 E 
4> 3 
CL C 


o 


>• 

4 






0 < 0 

41 

il 

91 



0 

















CN 

s 0 

U 




i 13 0 


2 u 

49 

II 



91 

4 





4 






C 4 



9t 




49 •« 







K a 31 

II 

91 


> 

E 




'1 





It 


’0^ 






4 

4 1^ 





3 4X4 



E 

II 

> 


4 






W 




•• 


u 



4 



X X 91 X 

1 

1 



ax 19 £ 


"3 91 

4 

II 




X 











X -• 



u 



O 

O 41 o 

41 







u 

II 

4 


U 

a 




49 

c 




49 


a c 



u 


*4 


4 *9 4 


•4 





3 41 X 

4 

II 

C 


4 

4 




c 





c 





4 


A 

01 

41 4 41 

—1 




O CPS -• 


in > e- 


II 

4 


1 

IM 




3 



•• 


3 


u 



1 


IN 

k9 








1 



CP 




o 

9) 




O 


O' 91 



41 



41» 

























1 41 

41 49 






0) 

c 

41 O 41 
C IC 









i| 

3 



•4 41 




1 49 

.* 






.4 


41 

C 

£ 








i| 

a 


£ 

41 49 

41 



41 

4 

41 

41 41 ^ 


41 


49 4 


41 X 

9) 

••4 

-"4 

•*4 


1 4 





o 


') 

49 


O 

91 4 

91 

<N 

f 


•9 

91 

C C CM * 


C 


4 49 


9) 

O 

3 

.-4 


3 

49 

C 







II 

3 



3 u 

3 


^ •» 


91 

3 

W -«> 

• 4 

— 


49 91 

•4 

3 

4 

4 


1 

1 la 









II 

O 


E 

i} 91 

4 

4) 

41 41 

—9 

o 

4 

^ • 41 V 

41 



91 cn 

41 

4 

b 

a 3 

3 

*9 u 3 

a 

1 

E 



“0 

41 a 


II 



1 ao 

a 

C 

C C 



1 a 

1 tec 

c 

1 

<4 

m 1 

1C 

a 

1 

1 

141 

41 

3 3 4) 

w 

u 



u 


e ^ 


i| 

41 



1 i 

i 

!<«N 


49 

49 


13 49 — 

—4 

49 

49 

|49 

—9 

)49 


C 

C 

a O C 






91 

41 U 


II 

u 


3 

»- *0 

u 

—« 

^ —* 

3 

3 


41 3 —• —• 

— 

3 

91 

■O 3 


4i 

3 





o 

a 



41 X 4) 




it 

3 


Q. ^ 

4 


1 1 

1 a a 4 

call 

1 

la 

41 

-H a 

14 

a o 





49 

4 

II 

. 1 ^ >.i 1 i 

> 

91 E 91 


II 

77 


49 

41 ^ 

4) 

3 

49 3 

49 

49 

at 

3 49 

3 

49 

49 

49 

3 

41 

ij 

k4 






w 


-^-<3 4 


>1 O 41 


R 

4) 

c 

3 

^ 3 

w-4 

41 

3 41 

3 

3 


1 1 41 3 

41 

3 

1 

3 3 

41 


3 

o 

t 


1 V » 



4 

R 

H Cu < O X 

in u Q 


II 

0 


0 

O X 

O 

C 

a c 

O 

O 

o 

i 1 c a c 

O 

1 

X O 

C 

O 

O 

91 

1 

1 

1 1 1 

1 


a 

II 




It 

o 

rp 






















75 

<p 

1 

1 1 1 1 

1 

1 1 1 

1 

1 

u 

41 























9) 

1 

ill) 

1 

1 1 1 

t 

1 

ax 






















41 


159 






e 


>1 ^ “O 


« 




u n ^ ^ fQ o 

4J^-«44J'a£C>CC 

.13 ■■ 


V 

0X4) 

COX 


4) 4J 


_ > M kj <*-• 

X0M3«a XEO_ 

o^ o xaoa4} 

<q^4fiM«iA.><«u6u 

u OX a»‘o ^**4 41 - 

**i4^4l4i«dO^ ^ ** n<- 

X««4> 4) 4}U<«CXT9 

• •IC4^4jU«^OW4l 4) C 
X«V<*« «iX4J^X'«4JOX«13 

a. C «qEu M->U34)0 

<QM0'H4)i«iJ 4)'Q0 'OX 

C ««T>4J 

^ <V*0*«4C ■HC'0_ 

• 6«X'*4E 3«j3 

>*U UU 0«MOtfl 

4J3«<«<«*Oi-)Cvt 

^•a^^e4»«i*-4 

w 4) CL n 
•^UO 4IUM OX 


X O X O X 0 <« 

«qh44qu4j>o <^4j 

X a^j •« X A M O' _ 

U «l 'QUiJ.U'W g 
<a«l «I4}4J 'OO 

4)^^4}^ CX4)Ck44) 

uX'QS'HM-n 4)3 


X 0) O 

4) U *0 C u 

“ C 3 

4) U 4) 0 

3 4) X 
cr > 4) X ij 

4) u 0 

4) C 3 3 


C O X 41 T3 CT . 


4) 

U 4) 
O X 


4) 

a 

> 


I •♦ •* 

c ^ 


>» 


*0 

4) 

c 


^ 3 3 •* I 


^ 4)>^ «'0 

XC'0>4)4) 

xoc tfiao^Q u > 

0H4-«4'0**4 fV'O 4) 4) <« 4) 
C. 


O*6C<«4)O'n^‘V0i'-* 

^ iq ^ <q ^ 4J 

4I4J 4)0.4) 0)E4) 

^-4X<^3^^4) 4)>m 

4J wa.0.4J <« 04^ >«w 
0<1I3 ij4)<«Utf)cn 
EO«M4J4)«)X«-<'a >**^ 
O'-^O' 

u <n 6 o M 

*M >4)^<«<44)0.*4) 

«AiJ4J«lX XfiXiJ 
XX-^M 0'0w4)CC 
kJ 

<q •.h«)4)0«<9'm 

k« X w 1-^4) 

Ot • <« 4)..«) 4) 4) X 4) 


4 

0 } 0 

4 

II 

'-i c c o c 

u 

C 


O 

H 

01 O 

1 ) 


X X 


H 

>• It 0 n •<'4 

u 

E 

4J O 

0 ) 01 

ii 

.. . 

1 

u 

4 X 01 

H 


*• 1 

4) 

• 4) 

a 4 ) 

II 

4) 01 

4) 


01 

4 C 

II 

3 a c 

a 


“0 fi 

Wi -0 

N 

O > 4) 4 

> 

4) 

u O 

O' 4) 

II 

u a u 

«j 

u 

0 »- 

-o 

II 

C t>» 4^ 


3 

3 

> C 

II 

M U 

M ^ 

'O 


u 3 

II 

C 14 4) 

C 4 


4) 

a •- •* 

>1 4) O ^ 

^ a 

l>« n u 

C iJ •• •• 

O } 

^ 4) 


U 4) 
O X 


C — O 
0 -• X 
— c 
‘ 3 


-4 C 


u u w X 
a o 

01 X 4) 

«) c c o W 

O ^ ^ ^ *4 

ax wi 4) c 


4) 

I 3 '“* 

I w 0 ) w O 
_ . J 01 >« <« O 

<qMC3 coto cx 


4) 01 • 


C 01 

<« )W u 
>>4 E 4) 4) 
u 4) cr O' 
0) 4) 
g 01 W 4J 

o >« c c 

n lA *..4 •«4 


01 

i/i 


£ II 


> 

6 


a 

u 


«XX>X'0 W U < ^_ 

>iCOW«l^^ * * 0 X£'-«« 

wo-fl xsoo-*') 

•H«44)0> WM4U a4)<«^4lM 

«NWU4Jt4 «01'«4 a<‘1}34)01 H 

«4>«4 4q<n^X 0»1U(T >0<i 

^0)-Mt)UC 4) •k44)Cr *O01*-'H 

'flC'fl4l004) oas 

X •«X c a-^>*w a'-' 4) c '^Z'o o 

O w O CP 6 4J a'O 04»|» 

<q4^«.i<.44)<.H3<qu ><q-H*3</iC)ii 

4) CP0l4^0)w4)0l4) U'v.4) 3 It 

0) C ^ X4)014)'i-'«*Oii 

q)<qiqiqV'**'Ot"X U"^*OOii 
EOX UaJ'^C 4 J-^'^ 014 )*-ii 
4)4J4.)4)UW'4 3 <q4j--««jU'i 

w ^4) w4lO*'OX0)>'QCi> 

<q>a'0»*J'MXr*O 


a 4) 
O iJ 
u c 


.% o 

4) a 

a I 

>• 4) 


la 

^ 3 
C 


-• a 

o £ 


01 a'w 
>• 3 


V 

cr 
<« w 
• 4) 
>X 
X W 01 

a*^ 

•q 


^ 01 c 


u 


o 

4) 

c 

4 


a o ^ E c w 


II 


4) 

01 

C 

-4 

E W 

4) 

4 X O' 4) 4) 0* 

01 

II 

c 

w 

4) 4) 

4) 

o 

4) 0) X 

M u 4) C 

—4 

U 


4 

u 3 

C 

O' 4J 

4J 

O' O 4) 01 X O 


H 


w 


3 


01 4) 


u £ >. E 

4) 

It 

•• 

01 



3 

>X 

0 

4) 01 01 4) 

N 

II 


V) 

01 > 


o 

01 4J 

«J 

X 01 's* 4 *0 

—4 

II 

4) 


• 




u 4) O' X 

01 

II 

4J 

*o 

<—4 

01 

4) 


4) 

3 C V V 


II 

4 

c 


C X 



O V >4 X X 

4) 

II 

U 

—4 

X 

o 


4 

4 

«j 3 01 c a 

3 

11 

01 

1*4 


o^x w 

!« O <N 
4) X CC O' 

u U O' 
.q iq . ^ 
*j 4) 

0) u X 
(/) I 3 U 
16 U u 
-O 4) X ^ 
^ u u X 

01 4J 

3 > q o 

X 01 X <N 


c 
o 

C ■*« 3 4) 4J a-^ 
O01X*O-^'V4J01 

^ u O C 

vl 4) 4) C -«< O' 01 

q > U C '-I 4) 

4J 3 4) 4) > 

q *‘OwX«Jk44) 
^4;^q4j-«4 4j3< 
tM Q 0 *j —♦ 

O<O01C-^O'0» 

3 ^ O X C ^ 

X a E '4 

^ -H 4) TJ X O *0 

*0 01 i>i 4) U O' 4) 

CU-«>«M0iq4J'O 
34)X>'44)3-0 
cn>H0Ifflfc-O'4 


E E E *0 O 


a* u q c 4) « 

4) O *4 3 n 

'« > a O' o o*« 
■ q 


a 4) 

O 


^ k. 

4) 4) ^ 

^ ^ 0) w 

II 

w q 


w 4) 

u V *-/ 

4 4 < 4) 

II 

^ w 


w 

01 C 01 

XX W 

II 

X 01 


< 4) 

>•-4 3 4) 

0 0 C 

II 

a(n 


*0 

01 ^ —' 


i| 

4 1 



IJ 

CP O'TJ 0 

II 

U w 


• 0 

.J 01 X X 

4) a 

•1 

O' c 


k4 4J 

C — *j 3 

4) N 

II 

14) 


4) 

4) 

X X >* X 

■1 

4) w 


C 4) 

k4 4) X 4) 

u U 4 

■1 

*J w 

C 

c -0 

u *o *-) C 

4 E 

II 

4 3 

o 

4 4 

3 0-40 

c c C 

:i 

0 

««4 

E E 

U C 3 -0 

.-4 q < 

:i 

01 



! 4) u 4) 


*0 W *4 ^ 


-4 I 

a li 

4) 


4) O 
4) X 4) 

4J u w 
^ -4 3 q 
H Cm < O 


u u 

V 4) a 

4) E 
n 4) 

4j a U 
> 0) E 0) 
4) >4 O 4) 
oe cA o o 


C “O 

q »- 

M 0 U 
u U C 
14) 3 
O 


■4 4-'- 

w 01 3 ^ t-f 4) 

3 01 O O C q 4J 
X (A lO —• ■4 

IW 0) — - - 

4)«./C4)U(/l 01 3 C Ul U O 
k*C4)<-« < I 14)4) 1 <C 

S^uqQ.Q.uC'^'O a^ 

‘OWU4JEEX iMo^OC 

4)q30i4)4)4>vi3OO*4 
O au</) 4J u C -* UX-*—• 
O 


I I 


I I I I I 


I I t t I 


I I I I I I I I I I 


I I I I I I 


160 













A 












9 


u 


a 


« 

1 

>• 


• X 

1 

4J 


0 -U 4J 

n 

1 


0 o c 

ti 

M 


ij C 3 

II 

C 


19 Q 

N 



V 0 

U 



T9 V 0 

II 

A 


0 M <« 

M 

>« 


C <« 

li 

</l 


U O 

II 



V 4J 

n 

W 


U A 

H 

3 


A T9 

1 

O 


iS V 

N 



A 4J -H 

II 

C 


^-« 

« 



*H C ^ 

M 



A 

N 

•• 


M O 

N 



O 6 

H 

V 

A 

^ • 

H 

4J 

3 

CJI c V 

H 

A 

0 

V 

U 

4J 


9 4) 

M 

A 

i > 

« M C 

H 

<n 

( « 

C 0 A 

n 

1 

1 kt 

A O 

II 

U 

1 a 

A 

H 

X 

1 

« V 

H 

9 

1 V 


II 

C 

1 £ 


C ^ 3 

-< O « 

4J O 

O 

iJ u 

3 a 

a 


II 

>« 

41 W w 

N 

0 



t C 

1 w w 

[i 

€ 

W3C 

u 

•M 



1 

1 M 

II 

u 

C 0 41 

II 

w 



1 9 

1 41 A 

It 

< 

U 

II 




r w 

1 W C A 

It 


0AM 

II 

A 



» A 

1 A A - 

11 

« 

GL-^ 3 


c 



I W 

1 W M 

M 

<A 

0 


A 



1 A 

1 A W ■«>>> 

11 


V 


u 



1 

1 1 IW 

II 

4 

-< 0* 0 


w 



I E 

1 E O 41 

II 

3 

3 A X 


1 



1 V 

1 V »* 

II 


CAW 


41 



1 w 

1 w A 4} 41 

It 

* 

1 A 


w 



t A 

1 A W W & 

II 

c 

C V k4 


A 



1 > 

1 >» A C > 

II 


O E O 


w 



1 A 

1 A (/) -M W 

II 

A 

c 

4 

A 



i 

1 t 

II 

iJ 

A * 


(A 



♦ -0 

1 w w 4J 41 

II 

a 

w V 





1 V 

1 3 3 3 w 

It 

A 

X • w 


w 



1 w 

1 O O O A 

It 

u 

4) *0 A 


3 


• » 

« A 

1 w 

II 


C « M 


0 


41 

I 41 

1 C C C A 

II 


A M 



c 

u 

( M 

1 - .-H -* 1 

11 

kri 

V 3 a 


c 

41 

A 

« o 

• E 

1 •• •• *• di 


c *0 
o 


a 

a 


I (/) 

</i I) 


tf) 


c c « 


jQ u 
'fl O (N 
£ o: <3^ 
VO 9^ 

ifl • 

■fl V n 
u u jC 

tn 19 0 
(/) 6 V u 
I V ^ 

^ u Z 
c 


o 

•«4 b4 O * 

w V V w E «n 

<« > -• ^ 

iJ 3 n V C 

« •'O C -fl -• 

< V *« -• 

u a o u >% 

o •< O *J >9 V 

X k4 E tM 

X o 

^ ^ — — E 

^ « <TJ V 


0 

a 


« c 
a o 


4^ 

T> 


A 


1 V 

1 

A 


A 




0 

1 

4J 

• • 

C 

— X A 

• C 

1 





>1 41 


•• 

1 

1 


M 

C C 

1 V 

1 



9 


Q.,-1 rg A* 

a 3 

1 

W 

V 

W 

t| 


1 



C 


M 3 

^ ^ ^ 

E M 

1 9 

A 

X 

l/J 


i *J 

i 

w 

M 



V w 

c c c c 

41 w 

1 w 

U 

£ 

1 


I 

• 

C 

9 

li 


X <A 


w 

1 A 

A 

3 

W 

M V 

1 A 

1 T3 

9 

u 

•• 


6 ♦ 


(1 

1 u 

) 


c 

C -X T3 

1 ^ 

1 

M 

C 



3 -O 

. ♦ • • 

II •• 

< A 

E 

41 1 

41 

-ICO 

( c 

1 O 

u 

3 

41 


C —• 

T3 *0 "O T3 

•• 

1 

41 


M 

—1 c 

1 

1 X 

3 

O 

a 


1 0 


41 

1 E 

w 

A W 

M 

A 1 

1 

1 (A 

O 

o 

>. 


V X 

0 0 0 0 jC T3 

1 41 

A 

W A 

3 

> A 3 

i 

1 



u 


W </} 

X X X X 

C O 

1 «J 


A u 

O 

(0 > 41 

1 > 

1 41 



1 


A 

(/){/) 1 /) to 

c 

1 A 





1 M 




c 

W II 



1 > 


a E 

41 

A • • 

C A A 

1 a 

1 E • 

1 A 

1 4J 



C 

A 

V 

A •• 

1 

>1 II II li 

A 3 
>* V 

1 A 

1 

3 

V 

O 4) 


> A O 

3 

41 X 'M 

0 0 

If 

A 


A 

c 

C 



1 - X 

1 

A 

— • — 

E V 

to 

c 


1 

c 

W 

w 


(/) 

> H 

£ >«-• 


w 


M 

A 

A 



I A 0. 

< 

OO 

A O 

V fN ^ 



• • 











A 




M 



1 A 

1 

1 

>. o 

w Q.JX ^ ^ ^ 

A 

A 

41 


il 



• • •• 

• • •• 

.. 

•• •• 



(/I 


</} 

w 

W 


1% 

1 4) w 

1 

w 

(/I X 

A 3 C C C C 

c 

c 

w 

1 w 

»• 

•• 








j 


I<n 

00 


41 

i M CJ* 

1 

M 


>, u — -4 

A 

A 

A 








c 





w 

1 

1 


•J 

1 3 

1 

V 

• < •• 

A to -H -4 ♦ 

u 

M 

ij 

1 c 

V 

V 

V 




0 



C 


C 

w 

w 


A 

1 TJ V 

1 

A 



u 

w 

A 


w 

w 

ij 









41 

c 

c 



1 9 X 

1 

C 

41 

V V 41 V 41 41 

lA 

<A 

(/> 

1 

A 









-] 



41 

41 


A 

4 O w 

t 

•— 

■o 

TJ -O -0 *0 T? T3 

1 

\ 

1 1 

1 V 

w 

u 

w 









w< 

M 

u 

• • 

00 

' O 

\ 


O 

Q O O O O O 



kJ 

1 X 

A 



M 

41 

£ 



11 

9 


3 


M 


1 

1 >X C 

1 

9 

C 3 

C C C C C C 

c 

c 

M 

1 w 

(A 

O 





-4 M 


ti 

u 


U 

3 

3 

• — 


i Q. - 

1 

u 

IV 

' 1 1 I 1 1V 

V. 

. V 

1 







a o 


11 

3 



'J 

O 


C 

1 

1 

3 

a c 

a a a a a a 


M 

A 

1 "0 

u 

u 

u 







T3 





-n 


1 A V 

f 

■o 

E 

£ E E E E E 

L4 

u 

C 

1 




-M 3 


>< O V 


i| 

V 

c 




c 


t “3 

I 

V 

VAC 

0> !t) (3J 3] 01 V 

3 

3 

*-i 

1 — * 

9 

9 

9 

Cm < 



u o 


ll 

O 

■ .x 




9 


1 X o 

1 

o 

— ■-< 

•J bt 4J tJ M 

o 

O 












0 

O' 





•n 

1 6- C 

1 

0 

O' 




T3 

1 X 

















1 1 1 

1 

M 

41 




C 

1 C 1 

3 

3 

3 

1 1 

« 1 

1 

1 1 1 

1 1 

1 

a 






41 

f 1 1 

1 

a 

X 




V 

1 1 

O 

O 

O 


0 

a 

> 


O' 

V 


161 













II 

3 3 
C C 
I 1 

• • 


4J W 

« fl 


^ <N 
« « 
C C 

x: jc 
o u 

-v 

E E 

o « 


jC 

a 

«« 


J3 

X 

0 


V 4» 

a 

3 3 
C C 
I I 
9 9 

Jj u 
9 9 


9 9 

a> *•> 

•^9 9 
fl.4j U 
3 tft n 


I I 

* <N 


a a » 

3 3 k. 

w w 

O O - 


V V *« 
c c c c 
^ ^ o 

JI -C -C —• 

u u u ^ 

*J <fl 

<« £ £ tn 

£ * > C 

0) 4) 

^ u 
a Q.^ 
>-330 
O W W * 
<M O O 
* • M 

JZ 9 9 C 
U U 4- 
U <« *8 — 
*0 . 


O 

og 

JC 

c 


o 

« 

D 



M 






* 







9 




9 

9 

9 

9 


41 


41 


01 

w 

w 

O 



C 




c 


c 





c 


3 




VI o O 

w 


u 


u 


u 


9 


e 




c 




C 



c 


•al 


O' 






i 

1 <« 


9 


9 


9 

4J 

u 

O' 

« 


aM 


9 




0 



« 


aa 




>« 


41 

*J 


111 


iJ 


4J 


w 

V) 

9 


X 


• 


X 


• 


X • 



X 


♦ 


u 


C 


X 

C 

c 

9 


9 


n 


VI 

O 

O 

« 

4J 


9 


w 


« 


4.1 4) 



w 


41 


C 


o 


u 

41 

41 O 


O 


O 


O 

1 

! 1 




*/ 




u 


*J 







9 


aa 



la 

u 

i 


1 


1 



w 

U 




•« 




«« 

«% 

aa 



A 


*4 

*« 

> 


1- 


c 

U 

u 

U 


»J 


tJ 


a> 

c 

C 


3 


u 


3 


w 

aa 

3 *J 


aa 

3 


*J 

aa 

9 


■al 


•a 

3 

3 

C 


C 


c 


C 

V 

41 

fc 



9 

«-4 

V 


VI 

<N 

4) VI 



V 


VI 




VI 



y 

y 

41 


9 


41 


41 

w 

Li 

L. 



o 

Jt 

9 


O 

Ji 

VI O 



VI 


O 

J£ 

9 


c 


3 



u 


u 


u 


u 

u 

Li 

ki 

3 


1 

c 

3 


1 

C 

3 1 


c 

3 



c 

X 


to 


41 

H 

It 

u 


Li 


u 


u 

3 

3 

VI 

C 



■al 

C 


»j 

-a* 

C w 


••a 

C 


*j 

•al 

u 


LI 


VI 

•• 

•• 

3 

• a 

3 

>a 

3 

• « 

3 

U 

y 


3 


c 

<—4 

3 


c 


3 C 



3 


C 

aa 



1- 

la 

3 



y 

41 

y 

41 

y 

41 

y 



tr 


• « 

« 



• « 

9 


41 

'« 



•» 

9 

♦ 

C 

• « 

o ^ 


41 

41 


3 


3 


3 


K 



1 

41 

w 

V 

il 

41 

Li 

9 

1 Li 

V 

4> 

•I 

V 

Li 

41 

-•a 

aa 


c 

y 

u 

u 

II 

Li 

II 

u 

>1 

Li 

ii 

• • 

•• 

C 

'N. 

3 

Li 

*J 

•>» 

3 

Li 


-“v, Li 

3 


■>* 

3 

Li 

«_l 


4; 


•a 

X 

9 

9 

•■ 

tJ 

•• 

tJ 

»• 

al 






Li 

3 

9 


Li 

3 

-8 

3 

L< 

•4 


Li 

3 


3 

3 

c 

aa 


u 

ai 








9 

9 


C 

W 

0 

«j 

C 

W 

0 

at 

C U 

w 

w 

C 

al 

y 


aa 

41 41 

-a 

o 

o 

VI 

VI 

c 

tl 

c 

II 

c 

II 

c 

w 

u 


O 


• * 

VI 

o 


• « 

VI 

o 

• « 

U1 

y 


•% 

VI 

41 

3 u 

aa 





! 0 


0 

• • 

o 

• « 

0 


9 



II 

H 

O 


it 

<1 aa 

O 

— ■! 

■\ -a 

O 


1 

>1 aa 

o 

X — 

O' 'TJ 

•* o 


-- 

fN 

— 






•- 


^ <N - 


« *3 C <« 
C 1) O 4J 


« -o 

C 9 


w w ->« 


C 

O w 


c 

V 


c -0 

O V 


•t *3 c 

V o . 


41 

41 

• a 


9 


a4 

VI 

ka 


9 

U 

aa 

VI 

Li 


•9 

aa 

Li 

VI Lt 


9 

Li 

■a« 

(0 

Ll 


C 

C 

41 T 


La 

aa 

lJ 

(0 

Ll 


Li 

ai 

Li 

CO| 

Li 


La 

Li 

aa 

CO Ll 


La 

aa 

Li 

CO 

U 


a< 


u ^ 


W 

n 

^a 

1 

3 


Li 

VI 

•a 


3 


Li 

aa 

VI 

i 3 


Li 

VI 

—a 

1 

3 


X X 

9 9 


O 

’aa 

VI 

«J •« 

y 


O 

aa 

CO 

Li 

•* y 


O 

VI 

^a 

Li •• y 


O 

•a 

to 

Li 'a 

y 


y 

y 

*J 3 


• 

> 

C 

c ^ 




> 

C 

c 

an 



C 

> 

c — 



> 

c 

C -a 



9 

9 

9 




9 

9 — 

« 


fN 



41 fN • 



9 


4) m . 


•9* 


9 

y ^ 

L 


£ 

fi CO .. 


M 

»-a 

w 

Li 

41 


J< <N 

Ll 

Ll 

y 



Li 

ro 

Ll 41 




Ll 

La 

y 




U. 


C 

ij 

Ll « 

3 


C Jic 

Li 

Li 

. 3 


c 

Li 


b a 3 


C ^ 

Li 

a L 

3 


41 

41 

U L 


aa 

C 

to 

3 41 

41 


■a 

C 

CO 

3 

41 y 


-a 

<o 

C 

3 y y 


•a 

C 

CO 

3 y 

y 


aa 


C 

M 

aa 

aa 


y 3 

3 


aa 

^a 


y 

3 3 


a « 


••a 

y 3 3 


^1 

aa 


y 3 

3 


a a o 'Ll 

aa 

• 

aa 

a— 

41 

cr 


• 

aa 

CN 


41 O' 



1^ 

an 

41 cr 



aa 


V 

O' 


3 

3 

u 0 

VI 

41 

• 

M 

• 3 

1 


41 



• 

3 1 


y ^ 


. 3 1 


y 

• 

J£ 

a 3 



w 

w 

L« 

>« w 

41 

c 

41 « 


Li 

41 

C 

41 

a* VI 


Li 

c 

y 

y T VI 


Li 

y 

c 

y tr VI 


to 

CO 

o 41 

aa 


w 

-a 

Li ) C 




-a 

Li 

1 c 


9 

•a 

Li 

Li C 


9 

Li 

•a 

Li 1 

c 




y 3 


ai 

'll 

aa 

'O ^ 

'll 


Li 


aa 

9 

JV '9 


Li 

aa 

9 

9 M 9 


Li 

9 

•aa 

9 .iC 

9 


41 

4) 

aa 

£ 

VI 

hj 


Li C 

Ll 


to 

Li 


Li 

C M 


10 


Li 

Li C w 


VI 

Li 


Li C 

Ll 


u 


4 

9 

O 

VI 

41 

VI aa 

Li 


O 

VI 

41 

(0 

a« bi 


O 

y 

VI 

VI -a ^ 


O 

(0 

y 

VI a 

Li 


9 

9 

•• > 



lO 

ij 

CO — 

o 



lO *i 

CO 

— O 



i Li 

O 

to O 



lO 


CO — 

CO 


tj 

*J 


u 

u 


1 9 

aa aa 

■a* 


Li 


! 9 


aa aa 


ni 

9 


|aa aa aa 


Li 


' 9 

aa aa 



9 

VI 

41 V 

41 

c 

w 

Li 

41 41 

41 


c 

Li 

Li 

41 

y y 


c 

4J 

Li 

V y y 


c 

Li 

Li 

y y 

y 


CO 

to 

u X 

4J 

41 

C 

VI 

3 3 

3 


41 

c 

VI 

3 

3 3 


y 

(0 

c 

3 3 3 


y 

c 

(0 

3 3 




1 9 w 


Ll 

41 

CO 

41 41 

41 


Ll 

41 to 

9 

y y 


Ll 

CO 

y 

41 y y 


Ll 

V 

to 

y V 

y 





aa 

Li 

u 


1 3 3 

3 


Ll 

La 


: 3 

3 3 

•« 

W 


. Li 


• » 

M 

Ll 


3 3 

3 


c 

C 

to 4) 


3 

u 

a T O' 

ty«L- 

3 

W 

0. 0* 

T T 

vli 

3 

O. 

Li 

0* 3* T 

<aa 

3 

Ll 

r*. 

0* or 


41 

41 CO > 

Li 

y 

3 

0 

C C 

c 

a 

y 

3 

o 

C 

3 C 

a 

y 

o 

3 

C C 3 

-• 

y 

3 

0 

3 C 

c 

— 

Li 

Li 

' 9 

O 


y 

Li 

Ckl CJ 

U1 


■*a 

y 


u 

u ui 


aa 

Li 

O 

ClI oJ tLi 


*a> 

y 

.j 

Ul Ui 

Ui 


Li 

Li 

0. 9 

<4a 






■0 






*0 





V 






V 

3 

3 

0 • 

1 

'aa 





c 

<La 





c 

'Ll 




c 






C 

y 

J 

ai 1 

1 

-* 





41 






y 

-• 




y 

-• 





y 


(A 9) 

C fA 
U 9 
C U 4- 
3 u tft 

0 O >- 

y '-r ^ 
|4- Cl4 

Qu M 

O u II 
O 

— Cl, 


>• H n w u 


c -3 _ , - _ 

a— u c c -<-• *3 

£ — O -• -* W O 

« o o x: ^ c c 
w t« u o < 

Q. u 'O <q u 3 

n E E £ u « 

• tn c 

uuvv. 

O ri 0 . CLjt Jt ^ ^ Jii ^ 

'^••033CCCCCCCC 

4j a, *j 4j ^ ^ 

9 Ewitn-^—— 

9 


> 9 u 9 9 

I “3 •- 73 -• *3 

I O 9) o (0 O 

c c c c c c 

\9 1 i9 

S U 3 u 3 

u V iJ V w 

: (/} c (n c </) c 


3* 

V 

X2 

• 

a I 

o 

o 


«- 


C C (A 
3 I 

0 — *J 

U O C 

I \9 

a a u 

O E U 

O a> 3 - 3 3 

—• -I y — u y 


C ^ 4- -3 *3 TJ *3 

u U U Li M 

LI 91 4; O O O O 

w O X U U U U 

4) V V 4> 


*3 *3 TJ “3 *3 -3 

U Li Li 114 U U 

O O O O O O 

3 U O O U U 

4> V V (U 


c c 3 (/)</) tn t/) 

V 8) 'Q III 

LI 0 3 3 3 3 


Li Li U U 


C w* U—I — —l-H — —I—1. 


</> to (/)(/> C/1 t/) 

I I ! i I I I 

3 3 3 3 3 3 


0 0 0 
X X X X 


O O 
X X X X X X 


O' 

V 

X 


162 










c 

0) 


4) 


« • 
N 4) 
>4^ 


■o 


4) 



«i 

«l 

m 

m 

—• 9 



VI 

VI 

VJ 

V) 



• « 





c m 





« 

« 

<q o 


*0 


<N 

<n 


1 



M •% 

•« 

•« 

<* 

c ^ 


^ Q 

C M 

C ^ 

c ^ 

c ^ 

D c 


a u 

C 

^ c 

-- c 

— c 

D D 


9 41 

<■4 «4 

••4 


M -aM 

^ w 


u u 


• ^ 

• *>4 

« laM 

w 


O'VI 

D m 

D m 

D m 

D m 

W 3 


1 

4J > 

w >> 

4J > 

w > 

0 U 

•% 

>-0 

<« v» 

m VI 

m V) 

9 VI 

C 

A 

*J -H 

< 

u • 

4J « 

«J • 


44 

-4 O 

m «-4 

«l <N 

V* m 


9 -O 


—* ^ 

V) 

V) 

V) ^ 

VI 

> C 

c 

xH 

IC 

IC 

IC 

IC 

9 9 

—4 

Xi * 

*J -4 

—< 

U 

u •«■< 

X 

-4 

«« 4) 

c «-* 

,c -* 

c ^ 

c -* 

A 

». • 

X w 

9 • 

9 « 

9 « 

D ' 


D V 

u <« 

u 9 

k4 D 

k4 « 

u D 

9 ^ 

3 


W 4J 


U «J 

k* w 

jC 3 

W D 

Dm 

3 m 

3 D 

3 *9 

3 m 

4J C 

u u 

U (/) 

U 4J 

U 4J 

U w 

O 4J 


w 

1 > 

«t 

n 

m 

m 

m It 

II (3 

E a 

« V) 

• VI 

* V) 

.VI 

C 

•• 1 


O 


*0 

c 


“D 

c 


Ji< 

c 


<0 

o 


V V 
3 u 


A H 


^ n H O -» 


-• 3 4J 
3 krf 
C 4J 4J 

« •% 

II ii O 


4) 0 


k4 

*0 1 

^ 1 

*0 1 

*0 

1 


O 



w 


u 




4.; 


u 


4J 


*J 

u U 


9 

k4 U 

U 4J 

u w 

u 

4J 

A 

-• -o 

C 


•q 

*0 

c 


9 

J< *0 

C 


9 

-o 

c 


9 

m — 


hJ 

o c- 

1 c 

0 c 

O 

c 

« 

w C D 

9 


4J 

C 9 

D 


u 

C V 

D 


u 

C D 

V 


u 

> D 


C 

U V 

i; 41 

U 9 

o 

D 

<.» 

*J 

k4 


«) 

^ 4J 

w 


(0 

U 

U 


10 


u 


V) 

m 


3 

D W 

D w 

9 u 

D 

u 

u 

(/» — -• 

u 


V) 


w 


V) 

-4 —4 

U 


to 

-4 44 

k4 


V) 

a 


Q 

u u 


u u 

u 

u 

0 

com 

3 



O m 

3 


\ 

O m 

3 


I 

O m 

3 



D 3 


0 ^ 

<n 3 

t/l 3 

to 3 

to 

3 

*0 

'O . - 

O 

•• 


. -.4 

O 

• » 

u 

. •p4 

y 

• . 

u 

• -.4 

y 

• . 

4J 

£ u 

c 

1 c 

1 u 

1 U 

1 U 


U 


W — > 


A 

c 

<N > 


A 

C 

m > 


A 

c 

^ > 


A 

c 

u in 

9 

D 

■O 

*0 

-0 

•0 


a 

W JlC • 

* 


D 

M • 

« 

<N 

D 

^ • 

« 

rO 

D 

^ • 

• 

V 

D 

IC 

4J -- 

—< II 

II 

—< 11 

-4 

il 

3 

c —• 

D 


u 

C fN 

D 


u 

C 

D 


u 

C 'T 

D 


U 

C u 

4J 


0 •• 

o •• 

0 •• 

0 



D - 

3 

« 

w 


3 


w 


3 

« 

u 

■'4 Ji 

3 

% 

u 

-H 0 


*; «J 

£ 

x: 

£ 

£ 


<n 

4J — C 

D 

D 

3 

— C 

D 

9 

3 

-• c 

D 

D 

3 

-* c 

D 

9 

3 


'*4 .4 

M 

y 

44 ^ 

44 4, 

44 ^ 

44 

9 


u 


•q 

. .. 

3 3 y 


A 

3 3 

y 


A 

3 3 

y 


A 

3 3 y 

V vl 

9 

D u 

9 u 

D W 

D 

w 


'q 

• * 

4J 

4, A 

O’ 9 

D 

A 

O’ 9 


D 

A 

O* D 


V 

A 

O’ 9 

—1 ^ ( 


u 

4J iq 

u D 

4j 'q 


-q 


xz 

D 

to 

4J • 

1 3 . 

|4> 


\ 3 


u 


13 

« 

U 


1 3 . 

a y 3 

II 

u 

■q 4j 


9 ^ 

-q 


A 

3 

lO 


q D 

to O’ D 

q 

V 

to O’ D 

9 

D 

to 0* 

V 

q 

V 

« O’ D 

3 U C 

• « 

O 

W to 

U (0 

4l 91 

w 

(0 

'1 

t 

3 

—• 

u U 

C iw 

4.> 


C 1 


u 

u 

C i4.> 

u 

u 

C liJ 

4> H 


y 

(0 V) 

(0 in 

10 in 

(0 

t/J 


x*" 

9 

q 

(0 q 

9 M 9 

(0 

9 

9 ^ 

q 

<0 

q 

q 

q 

(0 

q 

q -J< q 

9 u 

U 

(0 

V) t 

tn 1 

V) 1 

lO 


; «o 

D 

a. 


O w 

w C 

O 


^ C 


O 

w 

u c 

u 

o 

4.J 

U C 4-> 

D m 

9 

D .H 

\u 

|4J 

|4J 


'w 

u 

C 

1 

0 

1 to 

A M 


t to 

u *4 

to 


1 to 

u A 

to 


1 to 

4J to 

£ 9 

U £. 

A W C A 

W C A 

W C A 

u 

C 

9 




•J O O —• V» 


o o -• 

to 


o o — 

V) 

4J 

o 

o VI 


uilwiCiJOtl U4}I1 
•• <« 3 C 9 U 
u uOuM'^fOur-t 
ODMU'QC C3 
'4-uW) t 

9 l« Jtf -• « 41 

£ w T? O £i £ 
fj <n C <9 Q V 3 


u 41 H 
41 u 

w u <n 

C 3 

•-• O C * 
V 
Jl 

3 


V 

X 

3 


41 £ 
4) u 4j 

n u o 
C 3 

: ^ u c 


10 

w w '* 

3 O 4» 

a. </} </) 


O' c 

4) 


3 O 

O-^ 

C 




*j 9 9 

C 3 3 

41 41 4> 41 ^ 

w 3 3 3 3 

w o* CT KT^ O 

3 C C C 

U U U CU 


I—- x- — c 


l'“ 


4)V4I Vw4>V4> 

C333 1-C333 

w333 »%3U333 

O’ O* O’**"* y u CT O* O*"** O 

“ "CC-<—’3CCC**Hw 




<V 41 4) 41 

C 3 3 3 

U 4) 41 4) V 

3 U 3 3 3 •* 

- 14 CT O* O’**-* 

3 C C C 


"^uumcii —'cjcijciju "•'UCiiCijCij 


u 

to -*4 

U A 

to 

*0 

9 

■O 

■0 

■o 

■o 

q 


m 1 

9 

c 

1 '«4 

C '*4 

C '44 

C >*4 

c 

D 

“0 

to 1 

y 

9 

1 A 

4> A 

4) A 

O A 

D D 


163 





‘O 


*0 

4> O 




•% 



•« 











> 4J 




^ M 





A 

.at 



.M 





c 




41 C 


41 

c 


41 

C 


41 

C 





^ 41 




u 


w 



u 



kJ 






C ka 




^ — 


<« 



9 









9 W 




w «t 


ij 



u 

VI 


w 

VI 





3 




«l > 



> 


VI 

> 


VI 

> 





c y 

•« 



(/> (/) 


<A V) 


(/) 

VI 


VI 

VI 





y 

A 



1 • 


1 

1 • 


1 

1 ■ 


1 

1 • 





9 

.-a 



*0 ^ 


•n <N 


*0 


■0 ^ 





X *0 




c 


C .14 


C Jtf 


C .K 





c 

C 



c 


.*4 

c 



c 



c 





u 

.w 



-4 


sw 







.*4 





O 

-■4 









««4 



•w 





c -. •* 

« 



« ■ 


• 

• 


« 

• 



« 





-a 41 

41 

M 


aH « 


<N 

41 



41 



41 





41—3 

u 

C 





w 


M 

iJ 



w 





> 3 ka 

3 

•«4 


c •« 


G 



C 

<« 


c 

■3 





3 C aJ 

w 



•«4 W 


■«4 

w 



w 



u 





X 

VI 



-4 n 



VI 


.w 

VI 


aW 

VI 





II II 

O 

c 


• Wl 


• 

V) 



V) 



VI 





aJ 'x. «• 

1 

0 


41 1 


41 

1 


41 

1 


41 

1 





3 

aJ 



w w 


w 

w 


w 

w 


w 

u 


.i^ 



X Jt TJ 

c 

hJ 


>9 C 


•« 

C 


9 

C 


>n 

C 


« 



*J C 41 

y 



w 41 



41 


w 

41 


w 

41 


A« 



—a ^ 

ka 



»l u 


•1 

kj 


VI 

k4 


VI 

u 


y 



VI —« -.w 

ka 

c 


</) ki 


VI 

u 


<n 

kl 


V) 

u 


0 



C o VI 

3 



1 3 


1 3 



1 3 



1 3 


TJ 



O . -a 

y 

u 


u y 


w 

y 


w 

y 


aJ 

y 









C 


C 



C 



c 



a 



w ^ • 

«• 



41 U 


9 

4 


41 

« 


41 

14 


3 



-a C — 

41 

41 


w •• 


u 

• « 


u 

•• 


w 

• • 





VI •— Jt 

3 

w 


u 


w 



u 



kd 



VI 



c — c 

41 

•n 


3 41 


3 

41 


3 

41 


3 

41 


w 



. —1 

3 

•<p4 


y w 


y 

w 


y 

u 


y 

w 


3 

•« 


u 41 — 

O' 

1.1 





<« 


*«.» 






X 

V 


W *J * 

1 

0. 


41 u 


41 

w 


41 

u 


41 

w 

A 

X 

VI 


3 41 

VI 

0 


W M 


w 

« 


w 

01 


w 

VI 

■1 

V 

3 


— aJ *J 

c 

u 


cn 



V) 



VI 



VI 



3 


•fl VI 

3 . 

0. tf) 


w 1 


w 

1 


w 

1 


tJ 

1 VI 

41 

a 


X O w 

ka 

0.-4 


V) w 


V) 

w 


VI 

w 


01 

w 

ka 

C 

I 


O 1 VI 

U ' 


A 

U) C 

A 

cn 

C 

A 

W1 

C 

A 

V) 

c 

41 

•«4 



— w O O • 

o 

4 

1 41 

« 


1 41 

4 


1 41 

II 


1 41 X 




cn c 

1'*^ • 

41 C 


M U 



u 


J< 

u 



u 

»J 

1 o 


41 tJ 

41 

X 

.-a 

C U <N 

c 

u 


c 

u 


c 

u 

O 

w 

ka 

•• 

V ^ c 

3 

w C 


3 


•w 

3 


-w 

3 


•a4 

3 


3 

y 


3 ka 41 

41 

•<«< 

c .J y 

C 


y 

c u 

y 

c ^ 

y 

c 

a VI 

V) 

V 3 ka 

3 


41 


41 



41 



41 



41 




3 y ka 

tr 

c 

X 


X 



X 



c 



X 



y 

O'— 3 

c 

^ 4) 

s 


X 



X 



X 



J 




c — y ill 1 


^ c 

— V 


c 




c 




C 



41 




41 




41 



X 




X 




X 



u 




w 




aJ 











wv 














41 




41 




41 



VI 




VI 




n 


















9 




>« 







«*4 




1*4 



tl 




M 




K 



•o 




*o 




-o 



41 




9 




41 



aJ 




aJ 




w 











•44 



VI 




n 




VI 



•w 




•44 







> 




> 




> 



<M 



















Jit 



C 




c 




c 



•w 




•44 







— 




— 




4^ 



41 




41 




41 



aJ 




w 




w 



3 




u 




9 



aJ 




u 




iJ 



V) 




VI 




91 



0| 




o 




t3 

1 



W 




u 




1 

tJ 



C 




c 




G 



y 




y 




41 











u 



ka 




w 




ka 



3 




3 




3 



y 






•X 


y 





<N 








V 

T5 


JV 


*0 




■0 



c 


C 


c 


G 


c 


c 



.w 




■44 


<4 


•44 







—4 




4.4 

.i^ 


• 




• 




• 


41 

41 



y 

41 


4^ 

41 

9 

—4 

3 

w 



3 

w 


4^ 

3 

w 

3 

ka 

3 


3 

u 



3 

ka 

9 

C 

W 

u 


C 

a.> 

a.1 


C 

*J 

u 



VI 

•* 



VI 




VI 

ii 

II 

a 

.... 

rt 

tl 

O 


II 

It 

O 

xs. 

• • 

1 

41 

XV 

•• 

1 

41 


• • 

1 



u 

*j 



a.r 

a.> 



aJ 

Jt *0 

C 

<9 

Jt *0 

C 

•n 

Jt -0 

c 

c 

41 

V 

w 

c 

41 

9 

aJ 

c 

9 

9 




VI 

•••4 

w 

u 

VI 

•44 

u 

ka 


-.4 

ka 

VI 

.■M 

—a 

ka 

v> 

4^ 

-44 

U 

o 

VI 

3 

1 

•o 

VI 

3 

1- 

o 

VI 

3 


-.4 

y •* 

aJ 


-.4 

y •• 

aw* 


•44 

y 

Cm 

> 

A 

c 


> 


C 


> 




%(N 

V 

.it 


. m 

0 



«' 

C CH 

41 

ka 

C 

V 

ka 

C 'IT 

9 

— 


3 ^ 

ka 



3 * 

ka 

— 

Jt 

3 


*0 

9> 


c 

c 

9) 

0) 

v 

> 

X 

«■ 

X 


0 

a 


*0 

c 


—• C « « 3 
• - 3 3 y 
' 3* 4» 

w • I 3 % 

4> « CT V 
«J W C :4J 
«» -n •n j< 

O c w 

iW ^ w 

w o O —• </> 

« V « V 

W C 3 3 3 

w V V V 

► 3M 3 3 3 -. 

. y w O' O’ O*'*- 

•-^3CCC-'- 
y ui uj ui 
I *3 

:'« c ' 

I - V ■ 


-. c 4> 

• - 3 

V — a* 

ij • I 
V (A 
*.4 «.i C 
«n TJ 
O 

I (0 u 

WOO 
C t—’ 

V 4^ V 

u c 3 

U V v 

3 W 3 

y w o* 

— 3 C 

^ y ui 


V 3 
3 U 

V 

3 • 

O' W 

tw 


•>* C V 0) 3 

• -• 3 3 U 

4) -. cr a» 

w • 13 % 

«0 V M o* V 

U W C >4J 

tfl 

O «-• >>4 c 


— <A 

V V 
3 3 

V V 

3 3 •• 
O* IT'** 
C C -• 
U CU 

-o 


I V) . 




w O O V) 

C 1-^ 

Q; w V V V 

u C 3 3 3 

u 4) 4) V 4) 

3 u 3 3 3 •* 

y w o* O* 0*'« 

— 3 C C C -4 

^ y tu w til 

*0 

Vfc4 c 

4) 


X 

y 

£ 

O 


4) •* 

w 

ig 4; < 

u 3 - 
Vt 4) j 
3 : 

a O' 

o • 


4) .% 

3 

cr 41 


o t/> 

"> u 4> V 4) 

-w 41 3 “ “ 

^ 4) 

41 3 
■O *0 O' 

C I V 

41 t a 


3 3 •>* 
41 41 O. 
3 3 0 
O' O' O 

4j 4, — 

O O 


T3 

C 

aJ 41 

C 

y 

ax 

41 

X 

41 X 


X 

y 


1 

X 


1 

41 


164 


the queues are empty the main loop will raise the following exception handler 







A H 


^ o 

4 ) in 
3 < 
w »— 
u 

— o 
c -• 
<n u 
0) 
E 

O 3 
O C 

<« a. 

tf) iq 

c 

U 73 
3 4» 
u c 

4) -* 

*•§ 

O 


o 

o 

JQ 


4> 

a. 





It 




• y 

II 

> 





« 


ij 


>» 


>« 

II 

V) 


tn 



41 


It 


E 


w 4> 

II 






u 




u 


£ 

II 

C 





3 


It 


< 


— w 

Ii 



u 



•0 


ii 




15 

II 



4) 



4) 

«• 

ii 


* 


3 > 

It 

• • 


O' 



U 

X 

II 


tn 


ITX 

u 



4) 



0 

a 





4; 

It 



w 



U 


It 




*0 

II 

c 


C 



a 


It 


3 


w 4f 

II 

4) 


•»4 




o 

It 




0 c 

II 

u 





> 


II 




•<«» 

II 

u 


c 

•k 



4» 

It 


C 


E 

n 

3 


w 




4J 

II 




«1 u 

M 

U 


3 




<« 

It 




4) 4) 

II 



u 




u 

ii 


w 



II 

«« 


4) 

—4 


ja 

in 

II 


a 


a. 4) <n 

II 

V 


u 


A 

<« 


ii 


<n 


3 C 

II 

a 



o 

It 

X 

£ 

If 


u 


u O 

II 

> 



c 


u 

V 

It 




tf» -4 

II 

4J 


O' 

•'4 

>• 

<« 

u 

It 


« 


4) ^ 4J 

II 

1 


c 

u 

U 


<n 

II 


u 


u -< 

H 



•w 

iJ 

a 

u 

5^ •• 

It 


4) 

O 

VI V) 

•1 

c 


u 

tn 

E 


in ^ 

ii 


0" 


c c 

It 

—4 


w 

c 

b) 

€ 


K 


u 

V0 

v» O 'V 

It 



v» 


4) 

4) 

4> ♦ 

n 


. g 


•4 u 

Ii 

tf) 




3 

u 

X 



>X 

C 

£ 4j w 

II 

> 


C 

(0 

« 


iJ U 

ii 


«j <n 

o 

4, .-• 

II 

in 


'w4 

0 

3 

>« 

4) 



—H —4 

c -• 

iJ <A U 

:i 


• « 


a a 

o 

M 

C w 

If 



0 (rt 

VI C 3 

1 

c 


• • 

o * 



-< c 

<1 


— X 

w 

>'4 0 

II 

—* 

o 


O u 

V 

4) 

3 

ii 

■n X «j 

*j 4) 

<n u *44 

II 

•% «« 


O' 

-4 4> 

tr 

X 

n 0 


3 

*4 0 <N 

> 

u 

<1 

.. o o 


c 

U 

'tl 

W 

V u 

1 

O'X CC <T‘ 

u 

O — 

1 




41 0 


a 

3 


■o 

O V 
C w 


cu u 
a> 


^ <c 

. c. 


3 w — 
O 



a 





3 





1 

'Am X 

o < 

(ft >s« 

;| 



u u 

■W 

C 


Ll 

X 


41 


1 


Li 



i»i 





1 

•-> 13 y 

3 

0 w 0 

II 

— 

41 

11 41 

O 


O 

« 

y 


y 


4) 


o 


0 

V) 

• « 


• * 


1 

i/i e « >- 

X 

Li ^ 

■1 

3 

O O O c 



o 



y 

•« 

3 


Li •« 



in 



X 


11 

(ft 41 X 3 

—4 

3 —• 41 

II 

3 

41 

41 41 


41 

II 

c 



3 

41 

41 


U 41 


u 


Lt 


a 


1 

> *j *j X 

73 

a 3 3 

Ii 

O' 

U 

U 

u 

3 





y 

9) 

3 

A 

41 9f 


41 

H 

41 




It 

t/) (ft 4J 

C 

£ 3 — 

II 

CU 

C 

C C 

y 



Ll 




3 

0* 

n 

t 3 


X 

• • 

u 


u 


1 

(ft > 3 o 

3 41 

0 O* '4 

II 

41 

■ 0 ^ 

‘ 0 * 

(ft 


u 


y 


>1 


1 






C 


O 


I 

(ft X <N 

in > 

U CU > 

II 

u 




> 

41 

</) 

O 



a 

91 

tfi 

41 a 


3 

u 

3 


1 


rf 




•1 

•n 

•• 

.♦ 

•• 

1 

1 O 

c 

y 

4) 

41 

1 

c 

k 4 

C ,1 


2 

41 

O 

• « 

41 


i| 


•• 

• • 

N 

u 




£ 

41 


y 

3 



•n 

41 

-4 ^ 



4-1 

y 

41 

4-1 


'1 




It 

tn 


a 


3 

y 


tl 0 


a 

•« 

M •« 

X 




c 

1 

V) 


A 

il 



c 

It 

(ft 


£ 


C 

C 

c 

••ay 


3 

0 ^ 

*.» <-1 

u 

1 0 



3 

41 

3 

u 

C 

i| 



o 

II 

> 


41 


41 



0 

> 

y 

u ^ 

o ^ 

0 

iJ u 



O 

«j •« 

H 

(ft 

—4 

!l 




II 

<n 


4.J 





y 0 c 

1 

tn 

U 3 

3 


3 0 



y 

3 41 

at/) 


1 


Li 

u 

II 

(ft 

a 

1 


C 

• • 


O Li 

6 


M C 

c c 

c 

0. tf>> 



1 

l4J C 


1 t 

£ 

I 

*0 

41 

a 

•I 


£ 

w c 


u 



y 3 

3 

a 


41 

41 




41 

•n -4 

»-4 

73 


l| 

Lf 4) 

£ — 

.0^ 

II 


41 

C 41 


•M 

y 

u 

"0 y 

C 

o 


X 

c: 





tn —' 


•-H 

41 

l| 

41 0 (ft 

4j 

w 

11 

c 

4J 

4; —. 


y 

O C 

o 

C 41 

4) 

y 


3 

3 


• • 



•*-» 

lO 



■1 

— 41 X 41 

w a 

y 

tl 

o 

ILi 


y 



4) y 


*•• 





n 


u 


u 

3 

3 

l| 

*J 4J 4J > 

(ft F 

(ft 

II 

— 

a 

U Li 

k4 

y 

O 



•o 






c 

3 

91 

3 41 

u 

X 

u 

>1 

3 4) 

> O 

41 

:l 

4J 

y 

3 y 

y 

3 

41 



C 

C (L- 





41 

at/) 

a c 

tfl 


3 

1 

^ Ut < a ac. 

(/) O 

a 

.1 

u 

u 

y (ft 

tfi 


X 



41 

—^ -H 










■n 

a 

1 




ll 

c 









o 










c 

11 

1 

1 1 1 1 1 

1 1 

1 1 1 

1 

3 









41 










41 

!ft 

1 

1 1 1 1 1 

1 1 

1 1 1 

1 

■am 









X 


165 








166 



















E « H 

O jC tl 

W 4J II 

II 

>« C U 

« O H 

II 

0 41 II 

X 'H tl 

aJ a. N 

3 H 

O 4J I 


u JZ 
I * U 
4) u O CM 
U 3 QC O' 
Q. cr> 

*J U • 

«i 3 n 

(/) o x: 

I 13 0 

4J E 4) 

3 4> £ '<J 

CL*J u X 

u (ft *J 

3 O 

O «n X 


01 O 

4j £ 

u u u 

3 /fl 

^ Cju < O 


■3 4 > a 

3) g ^ -4 

tf) 41 u 

^ u a. o 

> tf) E (0 

4) >» O 01 
OC C/1 U Q 


>• 


1 

1 W 


1 

1 u 


1 

1 u 



1 

CO 


aJ 

•4. 01 


aJ 

.A 41 


a1 

•A 01 


aJ 

•a 










-‘4 



AA . 

aJ 


to 

41 £ 


to 

41 £ 


(0 

01 £ 


to 

01 

3 


c 

-4 3 


C 

—• 3 


c 

-4 3 


c 


0 


'V 

a c 


<4 

a c 


14 

Q. C 


4 

a 


c 

L4 

3 1 

c 

u 

3 1 

cf 

Li 

3 1 

c 

U 

3 

c 

41 

aJ 

aJ 41 

01 

aJ 

aJ 01 

41 

Lf 

AJ 41 

01 

AJ 

aJ 


X 


(0 u 

X 


C/l aJ 

X 


CO aJ 

X 


CO 


aJ 

A 

C • *4 

4J 

A 

C • <4 

aJ 

A 

C • <4 

aJ 

A 

c • 

<• 


II 

41 aJ 


II 

01 aJ 


II 

01 -X aJ 


II 

01 -X 




X C <0 

— 


X C <0 

— 


X c «n 

-*■ 


X c 


0) w I 

C u 3 II 

o a II 

C W C II 

O cn in II 

oH U II 

ij 41 E n II 

<« > 01 Tl II 

u U ’I 

tfi « m jc II 

< > a II 

u a lA II 

o < Wt i| 

3 WO' ii 

X 4J l| 

^ 3 41 *11 

*3 a. ^ It 

C k4 4J ^ C l| 
3 01 3 *J (I 

CO > O «n ii 


"O £ *j -* I 

41 E 

vj "3 <n 01 

3 to —< •— >. *j 

C 3 -4 «/) 71 

3 3 3 • > 

•« C <n 
1| 10 C • 

•N. o II C 

£ -I — c 


'V C *j 

w O • • 

to -4 I 


•J C 4-1 

I — 41 

4) —4 to 


41 <0 

'/I if 
3 — 'O 

-3 

0) C 4- 


C ♦ • (0 

-• 0) u ^ (/) c 

—• (0 4> 41 

• |*J 4-» 41 O 

u C C C — O. 

q) g --. -4 Q. I 

4J 3 O O 3 41 

c Q. a. «-t «j 

- o . ic/l 

O O 41 01 4J 

a.(/) w -j 4-1 to 

I-— *11 “0 3 C/) 

41 *-< Q. 

,J o to to U w • 

'^) CJ (/) C/> 3 3 — ' 

- w o a. 

4 to 4J "3 

* C/) 01 3 c 

.0 a - 4 ) 


£ u •-< I 
— £ 
■O —. to 01 

.-4 ^ >, *7 
3 —• CO lO 

3 • >• 

• C rn to 

c -X • 

O M C 


-4 to c ^ lO 

4J c 41 > 

-4 —4 *J C/) 

OT U « C • 

C >4-^ 

U •%(/) O'. O -X 

w ^ • > a c 

</) ^ ^ j< 41 

• C C 4J ■ 

m 4- -'4 rq k4 

^ —4 —4 u 41 

c 4j • • in 4-1 

-4 4; b4 I-I (/] c 

—t to 41 4) 

• lij U V O 

u c c c —• a 

u E a I 

u 3 3 O 3 41 

C —• a. Q.4J i-i 
C I IC/> <« 

O O 41 41 IW 

^ u 4-1 lO 

I'-' U '4 3 1/1 

41 4J aJ Q.'-’ ■ 

hJ O (0 to i.; 4-1 '• 

^4 (J t/l </) 3 3 ■ 

* u I'- o a 


“3 J= AJ -• 
41 4-1 —• 

to -0 — to 

3 .-4 —4 >, 

C 3 -4 (/) 
3 3 • 

» C ^ 

II C .X 

one 

C 4J —• 
O - -X • 

to c u 

4J C -* 41 
, OJ ^ *J 

to w to c 

C 4J >4-^ 

TJ ‘>4 t/1 C/i O 

u — . . a 

*J ^ ^ 
c/1 J< 4) 

• C C AJ 

^ -4 — rg 

-~4 —4 AJ 

C -J • ■ <0 

01 U Arf 01 

^ to 4> 4) 

• |4J AJ 01 

c- C C C —• 
41 E - a 

4J 3 O O 3 

c >>4 a a AJ 

•-H O 1 ICO 

O O 01 01 

Q. CO 4J I-I U 
41 i—' 03 3 

C 41 aJ AJ a 

-4 »j O to to aJ 

— OJ (J CO Vi 3 

i AJ I'- — O 

3 'A- to Ij 1 _> 

a> •— CO 4J 3 ^ 

c '—10 Q. r^ 

-3 


169 


put(Sstate pointer.1ink4.Sys1 ink.system state number, width 






end outputSstate transition; 






171 






APPENDIX C (CFSM) ALTERNATING BIT 


INPUT (FSM) 


5tart 

machina 1-MACHINE 1- 

acace 1 
trans -X 2 
acace 2 
crans +A 3 
atace 3 
crana -Y 4 
acace 4 
crana +B 1 

tcachine 2-MACHINE 2 

aCaCe 1 
crana -rX 2 
acaca 2 
crana -A 3 
acaca 3 
crana +Y 4 
acaca 4 
crana -B 1 
lnieial_acace 1 1 
finiah ~ 


172 










OUTPUT 


REACHABILITY ANALYSIS of : output.alt 





Reachability 

Graph 








1 

[ 1 . 

E 

. E . 

1 1 

-X t 

2 . 

X 

t 

E 


1 ] 

2 

2 

( 2 . 

X 

, E , 

1 ) 

+X [ 

2 . 

E 

§ 

E 


2 ] 

3 

3 

t 2 . 

E 

. E . 

2 ] 

-A t 

2 , 

E 

! 

A 


3 ] 

4 

4 

( 2 , 

E 

, A , 

3 1 

♦A [ 

3 , 

E 

0 

E 


3 ] 

5 

5 

( 3 , 

E 

, E , 

3 1 

-Y [ 

4 , 

Y 

0 

E 


3 J 

6 

6 

( 4 . 

Y 

, E , 

3 1 

+Y 1 

4 , 

E 

0 

E 


4 ) 

7 

7 

( 4 , 

E 

, E . 

4 1 

-B ( 

4 , 

E 

0 

B 


1 ) 

8 

8 

[ 4 , 

E 

, B , 

1 1 

+ B ( 

1 . 

E 

0 

E 


1 1 

1 


1 

Machine 

1 Array Contents 

1 

1 From 

1 To 

1 Transition 1 

Executed 1 

1 1 

1 2 

t snd 

X 1 

yes 1 

1 2 

1 3 

1 rev 

A 1 

yes 1 

1 3 

1 4 

1 snd 

Y 1 

yes 1 

1 4 

1 1 

1 rev 

B 1 

yes 1 


I Machine 2 Array Contents I 


1 From 

To 

1 Transition l 

Executed 1 

1 1 

2 

1 rev 

X 1 

yes 1 

1 2 

3 

1 snd 

A 1 

yes 1 

1 3 

4 

1 rev 

Y 1 

yes 1 

1 4 

1 

1 snd 

8 1 

yes 1 

• The 

nodes 

generated 

by the 

analysis 


were done in a breadth first manner 


173 













APPENDIX D (CFSM) SLIDING WINDOW 


INPUT(FSM) 

stare 
machine 1 
state 1 
trans -X 2 
state 2 
trans +B 7 
trans -Y 3 
state 3 
trans +B 8 
trans +C 4 
state 4 
trans -Z 5 
state S 
trans -X 6 
trans -t-A 1 
state 6 
trans i-A 2 
trans +B ^ 
state 7 
trans -y 8 
state 8 
trans -Z 9 
state 9 
trans *C 5 
trans +A 1 • 
machine 2 
state 1 
trans ♦X 2 
state 2 
trans *'( 3 
state 3 
trans -C 4 
state 4 
trans *Z 5 
state S 
trans +X 6 
state 6 
trans -B 7 
state 7 
trans. ♦Y 8 
state 3 
trans *Z 9 
state 9 
trans -A 1 
initial_3tate 1 I 
finish 


174 






OUTPUT 


REACHABILITY ANALYSIS of : slicling_winciow 

Reachability Graph 


1 

( 1 

# 

E , 

E , 1 ] 

-X 

( 

2 


X . E , 1 ] 

2 

2 

[ 2 


X . 

E , 1 1 

-Y 

[ 

3 


XY , E , 1 ] 

3 






+X 

[ 

2 


E . E , 2 ] 

4 

3 

[ 3 

# 

XY 

. E , 1 1 

+x 

[ 

3 


Y . E . 2 ] 

5 

5 

t 3 

f 

Y , 

E , 2 ] 

♦Y 

( 

3 


E . E , 3 ] 

6 

6 

1 3 

t 

E , 

E , 3 1 

-C 

1 

3 


E , C , 4 ] 

7 

7 

[ 3 


E . 

C , 4 1 

+c 

( 

4 


E . E , 4 ] 

8 

8 

( 4 


E , 

E , 4 ] 

-z 

( 

5 


Z , E , 4 1 

9 

9 

[ 5 

t 

2 . 

E , 4 1 

-x 

t 

6 


ZX , E , 4 ] 

10 






♦z 

( 

5 


E . E . 5 1 

11 

10 

t 6 

t 

ZX 

, E , 4 1 

+z 

( 

6 


X . E , 5 ] 

12 

12 

( 6 

0 

X , 

E . 5 ] 

+x 

( 

6 


E , E , 6 ] 

13 

13 

: 6 

0 

E , 

E , 6 ) 

-B 

( 

6 


E . B . 7 ] 

14 

14 

1 6 

0 

E , 

B , J 1 

+a 

t 

7 


E . E , 7 1 

15 

15 

1 7 

0 

E , 

E , 7 I 

-Y 

1 

8 


Y . E . 7 ] 

16 

18 

[ 8 


Y , 

E , 7 ] 

-z 

1 

9 


YZ , E , 7 ] 

17 






♦Y 

( 

8 


E , E , 8 1 

18 

17 

( 9 

0 

YZ 

, E , 7 1 

+ Y 

( 

9 


Z , E , 8 1 

19 

19 

f 9 

0 

Z , 

E , 8 1 

+Z 

( 

9 


E . E , 9 1 

20 

20 

( 9 

0 

E , 

E , 9 ] 

-A 

[ 

9 


E . A , 11 

21 

21 

: 9 

0 

E , 

A , 1 1 

♦A 

[ 

1 


E , E . 1 ) 

1 

18 

[ 8 

0 

E , 

E , 8 1 

-Z 

( 

9 


Z . E , 8 1 

19 

11 

( 5 

0 

E . 

E , 5 1 

-X 

( 

6 


X , E , 5 ] 

12 

4 

( 2 

0 

E , 

E , 2 ) 

-Y 

( 

3 


Y , E . 2 1 

5 


1 


Machine 

1 Array Contents 



1 

From 

1 To 

1 Transition l 

Executed 


1 

1 

1 2 

1 snd 

X 1 

yes 

1 

1 

2 

1 7 

1 rev 

B 1 

no 

1 

1 

2 

1 3 

1 snd 

Y 1 

yes 

1 

1 

3 

1 8 

1 rev 

B 1 

no 

1 

1 

3 

1 4 

1 rev 

C 1 

yes 


1 

4 

1 S 

1 snd 

Z 1 

yes 

1 

1 

5 

1 6 

1 snd 

X 1 

yes 


1 

5 

1 1 

1 rev 

A 1 

no 

1 

1 

6 

1 2 

1 rev 

A 1 

no 


1 

6 

1 7 

1 rev 

B t 

yes 

I 


7 

1 8 

1 snd 

Y 1 

yes 

1 

1 

8 

1 9 

snd 

Z 1 

yes 

1 


9 

1 5 

rev 

C I 

no 



9 

1 1 

' rev 

A 

yes 





Machine 

2 Array Contents 

( 


From 

To 

Transit 

ion : 

Executed 



1 

2 

rev 

X 

yes 

1 


2 

3 

rev 

Y 

yes 

1 


3 

i 4 

1 snd 

C 1 

yes 

1 


4 

5 

\ rev 

Z 

yes 

1 

1 

5 

6 

1 rev 

X 1 

yes 

1 

1 

6 

7 

r snd 

a 1 

yes 

j 

! 

7 

> 3 

1 rev 

Y 

yes 

1 

1 

3 

' 9 

1 rev 

Z 1 

yes 

1 


9 

1 

A 

snd 

A 

yes 



• The nodes generated oy the analysis 
were done in a breadth first manner 


175 















APPENDIX E (SCM) GO_BACKJ 

INPUT (FSM) 


scare 
machine 1 
scace 0 

crans snd_daca 1 
acace 1 ” 

crans rcv_ackO 0 
machine 2 
scace 0 

crans rcv_daca 1 
sCaCe 1 ” 

crans snd_ack 0 
inicial_scate 0 0 
finish ~ 


, W=1 


176 




VARIABLE DEHNUIONS 


package definitions Is 

type scm_transition_type is (snd_datal, rcv_datal, snd ackl, 

rcv_aelcl, adv_winl, unuseS) ; 
type buffer_type is (dl.e,al); 
type boolean_type is (t,f); 

type buffer_array_type is array(l..l) of buffer_type; 
type boolean_array_type is array(1..1) of boolean_type; 

type machlnel_atate_type is 
record ~ 

state_number : natural 0; 

out_buffer : buffer_array_type (others->dl) 

aclc~rec : boolean_array_type (others»>f) ; 

current : integer range 1..1 1; 

end record; 

type machine2_state_type is 
record ~ 

state number : natural 0; 

in_bu7far : buffar_array_type (others->e); 

pkt_rac ! boolean array_type ;« (others«>f); 

current : integer”range 1..1 1; 

end record; 

type global_variable_type is • 

record ” 

DATA : buffer type :« e; 

end record; 

end definitions; 


177 







PREDICATE-ACTION 


separate (main) 

function Analyze_Pre<ilcate3_Machlnol (local : machlnel_state type; 

~ GLOBAL: qlobal_varlabIe_type) return transition 

staclc_paclcaqe.staclc Is 
begin 

MaiceEmpty (transltion_stack) ; 
if (local.out_bufferTl) /- E) then 
Push (transltlon_stack, snel_datal) ; 
end If; 

If ((local.ack_rac(1)-f) and GLOBAL.OATA-Al) then 
Push(transltlon_stack,rcv_ackl); 
end if; ~ 

Push(transltlon_stack,adv_winl); 
return tranaltlon_stack; 
end Analyze_Predlcates_Machlnel; 

separate (main) 

function Analyze_Prodlcates_Machlne2 (local : inachine2_state type; 

~ GLOBAL: global_varla)3le_type) return transition 

stack_Fackage.stack Is ~ 

)9egln 

MakeEmpty(transition stack); 

if ((GLOBAL.DATA - dT) and (local.pkt_ree(1)-f)) then 
Push(transition_stack, rcv_datai); 
end if; ~ ~ 

if (local.pkt rec(l)-t) then 

Push(transTtlon_stack,snd^ackl); 
end if; ~ ~ 

return transltion_scack; 
end Analyze_Predicates_Machine2; 

separate (main) 

procedure Action(in_system_stat4 : in out Gstate_record_type; 

~in_transition : in out scm~transition_type; 
out_system_state : in out Gstate_record_type) is 

temp : integer :• 0; 

begin 

case (in_transition) is 
when“(snd_datal) •> 

out_system_stace.GLO0AL_VARTABLES.DATA :• 

~in_system_stace .mach”inel_stace .out_buf fer (1) ; 
when (rc\r_ackl) ~-> ~ 

out_3ystem_state.machinel_state.ack_rec(1) :• t; 

our_system_state.GLOBAL_VARIABLES.DATA e; 

ouc_system_state.machinel_state.current 1; 

when (rcv_datal) •> 

out_syscem_3tate.machine2_scace.in_buf fer(1) 
in_system_state.GLOBAL_VARIABLEsTOATA; 
out_system_state.GLOBAL_VABTABLES.DATA :• e; 
out_3ystem_stace.machine2_stace.pkt_rec(1):• t; 
when (snd_ackl) -> 

out_system_state.GLOBAL_VARTABLES.DATA al; 
out_systom~state.machine2 state.pkt_rec(1) f; 
out’_system_state.machine?_state. in_buf fer (1) :« e; 

when (adv_wlnl) -> 

out_system_3tate.ma- 

ohinel_state . ack_rec ( in_systein_state .:^achine Istate .current) f; 
when others -> 

put_line("There is an error in the Action proceoure"); 
end case; 
end Action; 


178 





OUTPUT FORMAT 


separate (main) 

procedure output_Gtuple(tuple : In out Gstate_record_type) Is 
)>egln ~ 

put (* [* t Integer'Image (tuple.machinel_scace.state_nuniber) > ; 

put(• k integer'image(tuple.machine2_state.3Cate_number)); 
putC , •); 

put(tuple.machinel_state.out_buffer(1), width •> 1); 
put(' , *) ; 

put(tuple.machinel_state.ack_rec(l),width->2); 
put('‘ ,•); 

put(tuple.machine2_state.in_buf£er(1), width •> 1); 
put(* , •); 

put(tuple.machlne2 state.pkt rec(1),width»>2); 
put(- .'); 

put (tuple. GLOBAL VARIABLES. OAT A, width »2); 
putC ]'); 
end output_Gtupie; 


separate (main) 

procedure output_Gtuple_co_file(tuple : in out Gstate_record_type; 

counter : in out integer) is 

begin 

put(reach,counter); 

put(reach,'’ [' ( integer'image (tuple .machinel_state. state_number) ) ; 
put(reach,'’ , ' c integer'image (tuple .machine2_state.scate_number) ) ; 
put (reach," , *); 

put(reach,tuple.machinel_state.out buffer(l), width -> 1); 
put(reach," , *); 

put (roach, tuple.machinel_state.acic_rec(l) ,width«>2) ; 
put(reach," ,"); 

put(reach,tuple.machine2 state.in ouffer(l), width -> 1); — 

put (reach,* , ’*); 

put (reach, tuple.fflachine2_state.pl(t rec (1), widtha>2) ; 
put(reach," , *) ; 

put(reach,tuple.GLOBAL VARIABLES.DATA, width «>2); 
put(reach," ]*); 
new_line(reach); 
end output_Gtuplo_to_£ile; 


separate (main) 

procedure oucput_Gstate_node(Gstate pointer ; in out Glink_type; 

Error_flag : in out boolean) is 

begin ~ 

output_line_count :• output line_count * 1; 
if ((output~line_count mod TO) ■ 0) then 
scroll_pause; 
and if; 

set_col(Gcolumn_set) ; 

putTGstate_pointer . 3y3tem_state_number, width =■> 3) ; 
autput_Gtuple(Gstate pointer.Gtuple); 

if ( (Gstate_pointet. Tinjil .Glink » null) and then (Gstate_pointer . Iink2 .Glink » null) 
and then ~ ~ 

(GstaCe_pointer. iink3 .Glink - null) and t.ien (Gstate_pointer. Iink4 .Glink » null)) 

then 

Error_flag :• true; 

else 

Error_flag false; 
end if; 

end output_Gstate_node; 


179 





OUTPUT 


REACHABILITY ANALYSIS of : go_bacic_n_wl 


Global State GRAPH 


0 , 

0 


Q , 

1 , 

Q , 

1 , 

E 


-1 


-1 1 

snd_ctata 

1 

1 , 

0 


1 , 

1 , 

0 , 

1 , 

0 


0 

» 

-1 ] 

rcv_data 

2 

1 , 

1 


1 , 

1 . 

1 , 

1 . 

E 


-1 


-1 ) 

snd_ack 

3 

1 , 

0 


1 . 

1 , 

1 , 

1 . 

£ 


-1 


1 J 

rcv~ack0 

4 

0 , 

0 


1 , 

1 , 

1 , 

1 , 

E 


-1 


-X 1 

snd~data 

5 

1 , 

0 


0 , 

1 , 

1 , 

1 , 

0 


1 

» 

-1 1 

rcv_data 

6 

1 . 

1 


0 . 

1 , 

0 , 

1 , 

E 


-1 


-1 1 

snd_ack 

7 

1 , 

0 


0 . 

1 . 

0 , 

1 , 

E 


-1 


0 1 

rcv_ack0 

0 




System 

state GRAPH 




0 

( 0 

. 0 1 

snd_data 

1 1 . 

0 1 

1 

1 

t 1 

. 0 1 

rcv~data 

[ 1 . 

1 1 

2 

2 

1 1 

. 1 1 

and~ack 

{ 1 . 

0 1 

3 

3 

( 1 

, 0 1 

fcv_ack0 

t 0 . 

0 1 

0 


1 

Machine 1 

Array Concents 

1 

1 From 

1 To 1 

Transition I 

Executed 1 

1 0 

1 1 1 

and data 1 

yes 1 

1 1 

1 0 1 

rcv_ack0 1 

yes 1 


1 

Machine 

2 Array Concents 1 

( From 

. To i 

Transition i 

Executed 1 

1 0 

1 1 

rev data i 

yes i 

1 1 

1 0 

snd_ack 1 

yes 1 


180 













APPENDIX F (SCM) GO BACK^N, W=2 


INPUT (FSM) 


sCart 
machine 1 
sCaCe 0 

trans sn<l_claca 1 
scate 1 

Crana sn<l_daca 2 
Ccans rcv_aclcO 0 
scate 2 ~ 

Crans ccv_ackO 0 
Ccans ccv_ackl 1 
machine 2 
sCaCe 0 

trans rcv_data 1 
state 1 ~ 

Crans rcv_data 2 
trans snd_ack 0 
state 2 ~ 

trans and_ack 0 
initial_state 0 0 
finish “ 


181 





VARIABLE DEFINITIONS 


package definitions Is 


type scin_transition type is (snd_data, rcv_data, 

~ sn5_ack, rcv_ackO, 

rcv_ackl, unused); 

type buffer_type is (dO,dl,e,a); 

type buffer_array_type is array(1..2) of buffer_type; 
type seg_array_type is array(1..2) of integer range -1..2 

type i«achincl_state_type is 
record 

state_number : natural :■ 0; 

Sdata : buffer_array_typo (dO,dl); 

seq : integer range 0..2 0; 

1 : Integer range 1..2 :« 1; 

end record; 

type tBachine2_st*te_type is 
record ~ 

state_number : natural :■ 0; 

Rdata : buffer_type 

exp : integer range 0..2 0; 

j : Integer range 1..2 :« 1; 

end record; 

type global_variable_type is 
record 

data : buffer_arraY_type :• (e,e); 

SEQ ! aeq_acray_type (-1,-1); 

ACK : integer range -1..2 -1; 

end record; 


end definitions; 






PREDICATE-ACTION 


separatee (main) 

funct-ion Analyze_Preclicates_Machinel (local : machinel_sCate type; 

GLOBAL: qlobal_variabre_type) return transition_- 
3tac)i_paclcage. stacli is ~ 

tempi : integer GLOBAL.ACK + 0; 
temp2 : integer (GLOBAL.ACK + Dmod 3; 

begin 

MalceEmpty (transition stack) ; 

if ((GLOBAL.DATA(local.i) - E) and (GLOBAL.SEQ(local.!) - -1)) then 
Push(transition_stack,3nd_data); 
end if; ~ 

if ((tempi - local.seg) and (GLOBAL.ACK /- -1)) then 
Push(transition_stack, rcv_ack0); 
end if; 

if ((temp2 - local.seg) and (GLOBAL.ACK /« -1)) then 
Push(transition_stack,rcv_ackl); 
end if; 

return transition_stack; 
end Analyze_Predicate3_Machinel; 


separate (main) 

function Analyze_Predicates_Machine2(local : machine2_state_type; 

GLOBAL: global_variable_type) return transition_- 
stack_package.stack is ~ 

begin 

MakeEmpty(transition_stack); 

if ((GLOBAL.DATA(local.j)/=E) and (GLOBAL.SEQ(local.j) - local.exp)) then 
Push(transition stack,rev data); 
end if; ~ ~ 

if (GLOBAL.DATAdocal. j)-E) then 
Push(transition_stack, snd_ack) ; 
end if; ~ 

return tran3ition_stack; 
end Analyze_Predicate3_Machine2; 

separate (main) 

procedure Act ion(in_system_state : in out Gstate_record_type; 

'’in_transition : in out scm'transition_type; 
out_3ystam_state : in out Gstate_record_cype) is 

temp : integer 0; 

begin 

case (in_transition) is 
when~(snd_data) •> 

out_system_state.GLOBAL_VAB TABLES.DATA(in_system_state.machinel_state.i) : = 
in_sy3tem_state.machinel_state.Sdata(in_system_state.machinel_state.i); 
out_system_state.GLOBAL_VAR TABLES.SEQ(in_system_state.machinel_state.i) : = 
in_sy3tem_state.machinel_state.seg; 
if (in_system_state.machinel_state.i - 1) then 
ouT system state.mach;ne 1 state.: := 2; 

• else 

out_system_state.machinel_state .1 1; 

end if; 

out_system_state.macninel_state.seg := (((in_system_state.machinel_state.- 
seg) * Dmod 3); 

when (rcv_ack0) -> 

out_system_state.GLOBAL_VARIABLES.ACK -1; 
when (rcv_ackl) =•> 

out_3y3tem_3tate .GLOBAL_VARIABLES . ACK : =■ -1; 
when (snd_ack) => 

out_system_scate. GLCiBAL_VAR TABLES .ACK :« in_system_stace.machine2_state.- 

exp; 

out_3ystem_state .machine2_state-Rdata :=■ e; 
when (rcv_data) => 

out_system_stace .machine2_sr,ate -Rdata ;= in_system_state .GLOBAL_VART- 
ABLES.DATA(in_system_state.machine2 state.j); 

out_system state.GLOBAL VARIABLES.DATA(in system state.machine2 state.j) := 

E; _ _ _ 

out_syscem state.GLOBAL VAR IABLES.SEQ (in system state.machine2 state.]) : = 

-1; _ _ _ 

if (in_system_state.machin92 state.] = 1) then 
out_3ystem_3tate.machinej_state. i 2; 


183 







else 

out_system_state.machine2_state.j :» 1; 
end if; 

ouc_system_state.machine2_state.exp 

(((injsystem_3tate.machine2_scate.exp) + Dmod 3) 
when others «> 

put_line('There is an error in the Action procedure*) 
end case; ~ 
end Action; 





OUTPUT FORMAT 


separate (main) 

procedure output_Gtuple(tuple : in out Gstatfc_record_type) is 
begin ~ 

put C* {* t integer'image (tuple ..■nachinel_state. state_number) i “ 
put(integer'image(tuple.machine2 state.atate_number))7 
put(- ,*); 

put(tuple.machinel_state.seq, width «> 1); 
put(* , *); 

put(tuple.machinel_state.i, width >> 1); 
put (* , *) ; 

put(tuple.machine2_state.exp, width -> 1); 
put(* , *); 

put(tuple.machine2_state.j, width -> 1); 
put(• , •); 

put(tuple.GLOBAL VARIABLES.DATA(1), width ->3); 
put(tuple.GLOBAL~VARIABLES.SEQ(l),width->2); 
putC* 

put(tuple.GLOBAL_VARIABLES.DATA(2) , width ->3); 
put(tuple.GLOBAL_VARIABLES.SEQ(2),width->2); 
putC 

put(tuple.GLOBAL_VARIABLES.ACK, width -> 3); 
put(- ]'); 
end output_Gtuple; 


separate (main) 

procedure output_Gtuple_to_file(tuple : in out Gstate_record_type; 

counter : in out integer) is 

begin 

put(reach,counter); 

put(reach,' (* t integer'image (tuple .machinel_state. state_number) & * 

' putTreach, integer' image (tuple..machine2_state. state_number)) 7 
put(reach," , "); ~ ~ 

put(reach,tuple.machinel_state.seq, width •> 1); 
put(reach," , *); 

put(reach,tuple.machinel_stace.i, width •> 1) ; 
put (reach," ,*); 

put(reach,tuple.machine2_state.exp, width -> 1); 
put(reach," , *) ; 

put(reach,tuple.machine2_state . j, width •> 1); 
put(reach," , *); ~ 

put (rer.ch, tuple.GLOBAL_VARIABLES. DATA (1) , width *>3); 
put(reach,tuple.GLOBAL_VARIABLES.SEQ(1),width->2>; 
put (roach," , ") ; ~ 

put(roach,tuple.GLOBAL_VARIABLES.DATA(2), width ->3); 
put(reach,tuple.GLOBAL_VARIABLES.SEQ(2) , width»>2) ; 
put (reach, " ,"); 

put(reach,tuple.GLOBAL_VARIABLES.ACK, width -> 3); 
put(reach," ]"); 
now_line(reach); 
end output_Gtuple_to_file; 

separate (main) 

procedure output_Gstate_node(G3tace_pointer : in out Glink_type; 

Error_fiag : in out boolean) is 

begin 

output_line_count :• output_line_count *• 1; ■ 
if ((output_line_count mod 10) = 0) then 
scroll_pause;~ 
end if; ~ 

set_col(Gcolumn_set); 

put(Gstate_pointer.3y3tem_3tate_numDer, width => 3); 
output_Gtuple(Gstate_pointer.Gtuple); 

if ( (Gstate_pointer . linkl .G1 ink =■ null) and then (Gstate_pointer . 1 ink2 .G1 ink “ null) 
and then 

(Gstate_pointer.1ink3 .G1 ink = null) and then (Gstate_pointer.1ink4.G1ink = null)) 

then 

Error_flaq :• true; 
else 

Error_flag :=• false; 
end if; 

end output_Gstate_node; 


185 





OUTPUT 


REACHABILITY ANALYSIS of : go_back_n_w2 
Global scats GRAPH 


0 

[ 0 


0 


0 


1 


0 


1 


E 

-1 


E 

-1 


-1 ] 

9nd_daCa 

1 

1 

( 1 


0 


1 


2 


0 


1 


00 

0 


E 

-1 


-1 ] 

3nd_daca 

2 





















rcv_data 

3 

2 

1 2 


0 


2 


1 


0 


1 


DO 

0 


D1 

1 


-1 ] 

rcv_data 

4 

4 

( 2 


1 


2 


1 


1 


2 


E 

-1 


D1 

1 


-1 ] 

rcv_daCa 

6 

6 

[ 2 


2 


2 


1 


2 


1 


E 

-1 


B 

-1 


-1 ) 

snd_aclc 

9 

9 

1 2 


0 


2 


1 


2 


1 


E 

-1 


B 

-1 


2 ] 

rcv~aclcO 

12 

12 

( 0 


0 


2 


1 


2 


1 


E 

-1 


E 

-1 


-1 ) 

snd_daca 

15 

15 

[ 1 


0 


0 


2 


2 


1 


DO 

2 


E 

-1 


-1 ] 

snd_data 

18 





















rcv_data 

19 

18 

( 2 


0 


1 


1 


2 


1 


DO 

2 


01 

0 


-1 ] 

rov_data 

22 

22 

[ 2 


1 


1 


1 


0 


2 


E 

-1 


D1 

0 


-1 ] 

rev data 

26 

26 

( 2 


2 


1 


1 


1 


1 


E 

-1 


E 

-1 


-1 1 

snd ack 

29 

29 

1 2 


0 


1 


1 


1 


1 


E 

-1 


E 

-1 


1 ] 

rev ackO 

32 

32 

[ 0 


0 


1 


1 


1 


1 


E 

-1 


E 

-1 


-1 1 

snd data 

35 

35 

[ 1 


0 


2 


2 


1 


1 


DO 

1 


E 

-1 


-1 J 

9nd_data 

38 





















rcv_data 

39 

38 

1 2 


0 


0 


1 


1 


1 


DO 

1 

t 

01 

2 


-1 1 

rcv_data 

42 

42 

[ 2 


1 


0 


1 


2 


2 


E 

-1 


01 

2 


-1 ] 

rcv_data 

46 

46 

[ 2 


2 


0 


1 


0 


1 


E 

-1 


E 

-1 


-1 ] 

snd_ack 

49 

49 

[ 2 


0 


0 


1 


0 


1 


E 

-1 


E 

-1 


0 1 

cev ackO 

0 

39 

( 1 


1 


2 


2 


2 


2 


E 

-1 


E 

-1 


-1 1 

snd_daca 

42 





















snd_ack 

43 

43 

[ 1 


0 


2 


2 


2 


2 


E 

-1 


E 

-1 


2 1 

rcv_a-ckO 

47 





















snd~daCa 

48 

47 

( 0 


0 


2 


2 


2 


2 


E 

-1 


E 

-1. 


-1 ) 

snd_data 

50 

50 

( 1 


0 


0 


1 


2 


2 


E 

-1 


01 

2 


-1 ! 

snd~data 

52 





















rcv~data 

53 

52 

( 2 


0 

A 

1 


2 


2 


2 


DO 

0 


01 

2 


-1 1 

rcv~data 

54 

54 

( 2 


1 


1 


2 


0 


1 


00 

0 


E 

-1 


-1 1 

tcv~data 

56 

56 

( 2 


2 


1 


2 


1 


2 


E 

-1 


E 

-1 


-1 1 

snd~ack 

58 

58 

1 2 


0 


1 


2 


1 


2 


E 

-1 


E 

-1 


1 ) 

rcv”ackO 

7 

53 

( 1 


1 


0 


1 


0 


1 


£ 

-1 


E 

-1 


-1 1 

snd_data 

5h 





















snd~ack 

55 

55 

( 1 


0 


0 


1 


0 


1 


E 

-1 


E 

-1 


0 1 

rov~ackO 

0 





















snd~data 

57 

57 

( 2 


0 


1 


2 


0 


1 


DO 

0 


E 

-1 


0 J 

rcv_ackl 

1 





















rev^data 

59 

59 

( 2 


1 


1 


2 


1 


2 


E 

-1 


E 

-1 


0 ) 

rcv_ackl 

3 





















snd^ack 

58 

48 

( 2 


0 


0 


1 


2 


2 


E 

-1 


01 

2 


2 1 

rcv~ackl 

50 





















rcv_data 

51 

51 

( 2 


1 


0 


1 


0 


1 


E 

-1 


E 

-1 


2 )• 

rcv~ackl 

53 





















snd_ack 

49 

19 

,( 1 


1 


0 


2 


0 


2 


E 

-1 


E 

-1 


-1 1 

snd data 

22 





















snd ack 

23 

23 

( 1 


0 


0 


2 


0 


2 


E 

- I 


E 

-1 


0 ) 

rev ackO 

27 





















snddata 

28 

27 

( 0 


0 


0 


2 


0 


2 


E 

-1 


E 

-1 


-1 1 

snd data 

30 

30 

( 1 


0 


1 


1 


0 


2 


E 

-1 


01 

0 


-1 1 

snd_data 

33 





















rcv_data 

34 

33 

t 2 


0 


2 


2 


0 


2 


00 

1 


01 

0 


-1 ; 

rev data 

36 

36 

( 2 


1 


2 


2 


1 


1 


00 

1 


E 

-1 


-1 ) 

rev data 

40 

40 

( 2 


2 

/ 

2 


2 


2 


2 


E 

-1 


E 

-1 


-1 1 

snd ack 

44 

44 

( 2 


0 


2 


2 


2 


2 


E 

-1 


E 

-1 


2 ] 

rev ackO 

47 

34 

: 1 


1 

t 

1 


1 


1 


1 


E 

_ 1 


E 

-1 


-1 1 

snd data 

36 





















snd ack 

37 

37 

( 1 


0 

$ 

1 


1 


1 


1 


E 

-1 


E 

-1 


1 1 

rev ackO 

32 





















snd data 

41 

41 

[ 2 


0 


2 


2 


1 


1 


00 

1 


E 

-1 


1 1 

rev ackl 

35 





















rev data 

45 

45 

( 2 


1 


2 


2 


2 


2 


E 

-1 


E 

-1 

* 

1 1 

rev ackl 

39 





















snd_ack 

44 

28 

( 2 


0 


1 


1 


0 


2 


£ 

-1 


01 

c 


0 1 

rcv_ack1 

30 





















rcv_data 

31 

31 

[ 2 


1 


1 


1 


i 


i 


E 

-1 


E 

1 

” 1 


0 ) 

rcv_ackl 

34 





















snd ack 

29 

3 

( 1 


1 


1 


2 


1 


2 


E 

-1 


E 

-1 


1 

snd data 

4 





















snd ack 

5 


186 










5 

1 1 

0 

0 

0 

1 

0 

2 

# 

1 , 

2 

. E 

-1. 

E 

-1 

0 

1 1 

1 

rcv_ack0 

7 



















3nd_data 

8 

7 

1 0 

0 

0 

0 

1 

0 

2 

« 

1 , 

2 

, E 

-1. 

E 

-1 

0 

-1 ] 

1 

snd_data 

10 

10 

( 1 

0 

0 

0 

2 

0 

1 

0 

1 , 

2 

, E 

-1. 

01 

1 

0 

-1 1 

1 

9nd_data 

13 



















rcv_data 

14 

13 

( 2 

0 

0 

0 

0 

0 

2 

0 

1 . 

2 

, DO 

2 . 

01 

1 

0 

-1 ] 

1 

rcv_data 

16 

16 

( 2 

0 

1 

0 

0 

0 

2 

0 

2 , 

1 

. 00 

2 . 

E 

-1 

0 

-1 ] 

1 

rcv_data 

20 

20 

[ 2 

0 

2 

0 

0 

0 

2 

0 

0 , 

2 

. E 

-1 . 

E 

-1 

0 

-1 ] 

1 

snd_ack 

24 

24 

[ 2 

0 

0 

0 

0 

0 

2 

0 

0 , 

2 

, E 

-1 . 

E 

-1 

0 

0 ] 

1 

rcv_ackO 

27 

14 

[ 1 

0 

1 

0 

2 

0 

1 

0 

2 , 

1 

. E 

-1 . 

E 

-1 

0 

-1 ] 

1 

snd_data 

16 



















snd_ack 

17 

17 

[ 1 

0 

0 

0 

2 

0 

1 

0 

2 . 

1 

. E 

-1 . 

E 

-1 

0 

2 ] 

1 

tcv_ackO 

12 



















snd_data 

21 

21 

[ 2 

0 

0 

0 

0 

0 

2 

0 

2 , 

1 

. DO 

2 . 

E 

-1 

0 

2 ] 

1 

rcv_ackl 

15 



















rcv_data 

25 

25 

[ 2 

0 

1 

0 

0 

0 

2 

0 

0 , 

2 

, E 

-1 . 

B 

-1 

0 

2 ] 

1 

rcv_ackl 

19 



















snd_ack 

24 

8 

[ 2 

0 

0 

0 

2 

0 

1 

0 

1 , 

2 

, E 

-1 , 

01 

1 

0 

1 ] 

rcv_ackl 

10 



















rcv_data 

11 

11 

( 2 

0 

1 

0 

2 

0 

1 

0 

2 , 

1 

, E 

-1 , 

E 

-1 

0 

1 1 


rcv_ackl 

14 



















snd_ack 

9 










Syscem Scace GRAPH 











0 


1 

0 


0 1 


snd 

data 


[ 1 

0 

0 ] 

1 







1 


( 

1 

0 

0 1 


snd 

data 


[ 2 

0 

0 1 

2 














rev 

^data 


[ 1 

0 

1 1 

3 







2 


( 

2 

0 

0 ] 


rev 

‘data 


[ 2 

0 

1 1 

4 







4 


[ 

2 


1 ] 


rev 

data 


[ 2 

0 

2 ] 

6 







6 


( 

2 

0 

2 1 


snd 

"ack 


[ 2 

0 

0 1 

8 







8 


( 

2 

0 

0 1 


rev* 

"ackO 


[ 0 

0 

0 ] 

0 







3 


( 

1 

0 

1 ] 


snd_daca 


[ 2 

0 

1 ) 

a 














snd^ack 


[ 1 

0 

0 1 

5 







5 


( 

1 


0 1 


rcv^ackO 


[ 0 

0 

0 1 

0 














snd 

data 


[ 2 

0 

0 ] 

7 







7 


( 

2 


0 ] 


rev* 

>ckl 


[ 1 

0 

0 ! 

1 














rev' 

'data 


[ 2 

0 

1 1 

9 







9 


( 

2 

0 

1 1 


rev] 

ackl 


[ 1 

0 

1 1 

3 














snd] 

>ck 


; 2 

0 

0 ] 

8 




1 Machine 1 Array Contents i 

1 From 

1 

To 

Transition 

1 Executed 1 

1 0 

1 

1 

snd data 

1 yes 1 

1 1 

1 

2 

snd data 

1 yes 1 

1 1 

1 

0 

rev ackO 

1 yes i 

1 2 

1 

0 

rev ackO 

1 yes 1 

1 2 

1 

1 

rcv_ackl 

1 yes 1 


1 

Machine 

2 Array Concents 

1 

1 From 

1 To 

Transition I 

Executed 1 

1 0 

1 1 

rev data 1 

yes 1 

i 1 

1 2 

rev data 

yes 1 

1 1 

0 

snd ack 

yes ! 

i 2 

0 

snd ack ' 

yes 1 


187 
















APPENDIX G (SCM) GO_BACK_N, W=3 


INPUT (FSM) 

sCart 
machine 1 
scace 0 

Crana 3nd_data 1 
atace 1 

tcana ccv_ac)cO 0 
Crana and_daCa 2 
acace 2 

crana rcv_ackO 0 
crana rcv~ackl 1 
Crana and_daCa 3 
acaCe 3 

Crana ccv_ackO 0 
Crana rcv_ackl 1 
crana rcv2ack2 2 
machine 2 
acace 0 

Crana rcv_daCa 1 
acace 1 

crana rcv_daca 2 
Crana snd_ack 0 
scace 2 

crana rcv_daca 3 
crana and_ack 0 
aCaCe 3 

crana and_ack 0 
Iniclal aCaCe 0 0 
finiah 


188 







VARIABLE DEFINITIONS 


package definitions is 


type scm_transition_type is (snd_data, rcv_data, 

snd_aclc, rcv_aclcO, 
rcv_aclcl, rcv_ack2, unused) ; 

type buffer_type is (dO,dl,d2,e,a); 

type buffeE~«rray_type is array(1..3) of buffer_type; 

type seg_array_type is array(1..3) of integer range -1..3; 

type inachinel_state_type is 
record ~ ~ 

state_nuinber : natural :« 0; 

Sdata : buffer_array_type :» (d0,dl,d2); 

seq : integer range 0..3 :• 0; 

i : integer range 1..3 1; 

end record; 

type inachine2_state_type is 
record 

state_nunvber : natural 0; 

Rdata : buffer_type :• e; 

exp : integer range 0..3 0; 

j : integer range 1..3 :» 1; 

end record; 

type global_variable_type is 
record ~ ~ 

DATA ; buffer_array_type :• (e,e,e); 

SEQ : seq_arEay_type :» (-1,-1,-1) 

ACK ; integer range -1..3 :» -1; 

end record; • 

end definitions; 


189 







PREDICATE-ACTION 


separate (main) 

function Analyze_Pre<licate3_Machinel (local : machinel_state type; 

~ GLOBAL: global_variabre_type) return transition_- 

staclc_package.stack Is 

tempi : integer :• GLOBAL.ACK + 0; 
temp2 : Integer :• (GLOBAL.ACK Dmod 4; 

temp3 : integer (GLOBAL.ACK - 2)mod 4; 

begin 

MakeEmpty(transitian_stack); 

if ((GLOBAL.DATA(local.!) - E) and (GLOBAL.SEQ(local.i) • -1)) then 
Push(transition_stack,snd_data); 
end if; ~ 

if ((tempi • local.seg) and (GLOBAL.ACK /- -1)) then 
Push(transition stack,rcv_ackO>; 
and if; ~ 

if ((temp2 - local.seg) and (GLOBAL.ACK /• -1)) then 
Push(transition_stack,rcv_ackl); 
end if; ~ 

if ((temp3 • local.seg) and (GLOBAL.ACK /» -1)) then 
Push(transltlon_stack,rcv_ack2); 
end if; 

return transitlon_stack; 
end Aralyza_Predicates_Machinel; 


separate (main) 

function Analyze_Predicates_Machlne2(local : machine2_stace type; 

~ ” GLOBAL: global_3variable_Cype) return transition 

stack_package.stack is - - 

begin 

MakeEmpty(transition stack); 

if ((GLOBAL.DATA(local.jI/-E) and (GLOBAL.SEQ(local.j) - local.exp)) then 
Push(transition stack,rcv_data); 
end if; ~ ~ 

if (GLOBAL.DATA(local.3)-E) then 
Push(transitlon_stack,snd_ack); 
end if; 

return transition_stack; 

end Analyze_Predicates_Machine2; — this returned value is then checked against the 
machine arrays ~ 

-- to determine if indeed this transition can be 

taken 


separate (main) 

procedure Action(in_system_state : in out Gstate_record_type; 

in_transition : in out scm_transition_type; 

out_system_3tate : in out Gstate_record_type) is 

temp : integer :■ 0; 

begin 

case (in_transition) is 
when (snd_data) -> 

out_system_state.GLOBAL VARIABLES.DATA(in_system_state.machinel_state.i) :• 
~ in_system_state .macTi inel_state .Sdata (in system_state .machinel_state .i); 
out_system_state .GLOBAL_VARIABLES .SEQ ( in_sy'5tem_state .machinel_state . i) :» 

in_system_state.machinel_state.seg; 
begin 

case (in system_3tate.machinel state.:) is 
when T »> 

out_system_state.mdchinel_state.i 2; 
when 2~“> 

out_system_3tate.machinel_state.i :• 3; 
when 3~»> 

out_system_state.machinel state.! 1; 
when others ~ 

null; 
end case; 
end; 

out_system_state.machinelstate.seg :• (((in_system_state.machinel_state.- 
seg) ♦ Dmod 4); 

when (rcv_ack0) *> 

out_system_state.GLOBAL_VARTABLES.ACK '1; 


190 









wh«n (rcv_ackl) -> 

out_systom_state.GLOBAL_VARIABLES.ACK -1; 

when (rcv_ac)c2) »> 

out_aystem_state.GLOBAL_VARIABLES.ACK :» -1; 
when (snd_ack) -> 

out_systom_state.GLOBAL_VARIABLES.ACK in_system_state.machine2_3tate 

exp; 


out_system_3tate.machine2_state.Rdata e; 
when (rcv_datar •> ~ 

out_systom_state.machine2_state.Rdata :« in_systom_state.GLOBAL_VARI- 
ABLES.DATA(ln_sy^tem_state.machlne2_state.j); 

out system state.GLOBAL~VARIABt.ES.DATA(ln_system_state.machine2_state.j) 
B; 


- 1 ; 


out_system_3tate.GL0BAL_VARIAaLES.SEQ {in_system_state.machine2_state.j) 


begin 

case (In system_state.machine2_3tate.j) Is 
when T «> ~ 

out_system_state.machine2_3tate.j 2; 

when 2~»> 

out_system_state.machine2_3tate.j 3; 

when 3 •> 

out_system_state.machlne2_state.j 1; 

when others 
null; 
and case; 
end; 

out_system_state.machine2_state.exp (((in_system_state.machine2_state. 
exp) + Drnod 4); 

when others >> 

put_line(•There Is an error in the Action procedure*); 
end case; ~ 
end Action; 


191 







OUTPUT FORMAT 


separate (main) 

procedure oucput_Stuple(tuple : In out Gstate_record_type) Is 
begin ~ 

put(* (* i Integer*Image(tuple.machinel_state.state_number) C * ,*); 
put(Integer*Image(tuple.machine2_scate.state_number))7 
put(• , *) ; 

put(tuple.machlnel state.seq, width -> 1); 
putC . •); 

put(tuple.machlnel state.1, width ■> 1); 
put(- . •); 

put(tuple.machlne2_stace.exp, width -> 1); 
putC* , *); 

put(tuple.machlne2 state.j. width -> 1); 
putC* . •); 

put(tuple.GLOBAL_VARIABL£S.OATA(l), width •>3); 
put(tuple.GLOBAL_VARIABLES.SEQ(l),width->2); 
put(* .*); 

put(tuple.GLOBAL_VARIABLES.DATA(2), width ->3); 
put(tuple.GLOBAL VARIABLES.SEQ(2),width->2); 
putC . 

put(tuple.GLOBAL VARIABLES.DATA(3), width •>3); 
put(tuple.GLOBAL~VARIABLES.SEQ(3),widCh->2); 
putC ,'); 

put(tuple.GLOBAL VARIABLES.ACK, width •> 3); 
putC ]**); 
end output_Gtuple; 

separate (main) 

procedure output_Gtuple_to_file(tuple : in out GstaCe_record_type; 

~ - - counter : in out Integer) is~ 

begin 

put(reach,counter); — - 

put(reach,* (* ( integer*image(tuple.machinel_stace.3tate_number) t * ,’); 

put(reach,integer*image(tuple.machine2_scate.stace_number))7 

put(reach,* , *); ~ 

put (reach, tuple.machinel_state. seq, width ’>> 1); 

put(reach,* ,'); 

put(teach,tuple.machinel_state.i, width •> 1); 
put(reach,* , •); ~ 

put(reach,tuple.machine2_state.exp, width •> 1); 
put(reach,* , *); 

put(reach,tuple.machine2_state.j, width >> 1); 
put(reach,” , *) ; 

put (reach, tuple.GLOBAL_VARIA8LES.OATA (1) , width =>>3); 
put(reach,tuple.GLOBAL_VARTABLES.SEQ(1),width->2); 
put (reach,* , '); 

put(reach,tuple.GLOBAL VAR IABLES.DATA(2), width ->3); 
put(reach,tuple.GLOBAL'VARlABLES.SEQ(2) , width->2) ; 
put(reach,* ,*); 

put(reach,tuple.GLOBAL_VARIABL£S.DATA(3), width ->3); 
put(reach,tuple.GLOBAL_VARIABLES.SEQ(3),width->2); 
put(reach,* ,*); 

put(reach, tuple.GLOBAL_VARIABLES.ACK, width -> 3); 
put(reach,* 1*); 
new_line(reach); 
and output_Gtuple_to_file; 

separate (main) 

procedure output_Gstate_node(Gstate pointer : in out Glink type; 

Error_riaq : in out boolean) is 

begin 

output_line_count output line_count * 1; 
if ((output_line_count mod TO) - 0) then 
scroll_pause;~ 
end if; ~ 

set_col(Gcolumn_set); 

put(Gstate_polnter.systemstatenumoer, width -> 3); 
output_Gtuple(Gstate pointer.Gtupie); 

if ((Gstate_pointer. Finxl.G1 ink - null) and then (Gstate_pointer.1ink2.Glink = null) 
and then 

(Gstate_pointer.1ink3.Giink - null) and then (Gscate_pointer.Iink4.Glink - null)) 

then 


192 




Error flag true; 

else 

Error_flag false 

end If; 

end output_GstaCe_node; 




OUTPUT 


REACHABILITY ANALYSIS of : go_bac)c_n_w3 


Global Scace GRAPH 


0 

( 0 


0 


0 


1 


0 


1 


E 

-1 


E -1 


E 

-1 


-1 

1 

1 

1 1 


0 


1 


2 


0 


1 


DO 

0 


E -1 


E 

-1 


-1 

1 

2 

[ 2 


0 


2 


3 


0 


1 


OO 

0 


01 1 


E 

-1 


-1 

] 

4 

[ 3 


0 


3 


1 


0 


1 


DO 

0 


D1 1 


D2 

2 


-1 

] 

7 

( 3 


1 


3 


1 


1 


2 


E 

-1 


D1 1 


D2 

2 


-1 

] 

11 

[ 3 


2 


3 


1 


2 


3 


E 

-1 


E -1 


D2 

2 


-1 

] 

16 

( 3 


3 


3 


1 


3 


1 


E 

-1 


E -1 


E 

-1 


-1 

! 

22 

( 3 


0 


3 


1 


3 


1 


£ 

-1 


E -1 


E 

-1 


3 

1 

29 

( 0 


0 


3 


1 


3 


1 


E 

-1 


E -1 


E 

-1 


-1 

1 

35 

[ 1 


0 


0 


2 


3 


1 


DO 

3 


E -1 


E 

-1 


-1 

1 

43 

: 2 


0 


1 


3 


3 


1 


DO 

3 


o 

o 


E 

-1 


-1 

1 

51 

( 3 


0 


2 


1 


3 


1 


DO 

3 


D1 0 


02 

1 


-1 

] 

61 

t 3 


1 


2 


1 


0 


2 


E 

-1 


01 0 


D2 

1 


-1 

1 

68 

( 3 


2 


2 


1 


1 


3 


E 

-1 


E -1 


02 

1 


-1 

] 

76 

( 3 


3 


2 


1 


2 


1 


E 

-1 


E -1 


E 

-1 


-1 

] 

82 

( 3 


0 


2 


1 


2 


1 


E 

-1 


E -1 


E 

-1 


2 

] 

89 

( 0 


0 


2 


1 


2 


1 


E 

-1 


E -1 


E 

-1 


-1 

] 

95 

[ 1 


0 


3 


2 


2 


1 


DO 

2 


E -1 


E 

-1 


-1 

] 

103 

[ 2 


0 


0 


3 


2 


1 


DO 

2 


01 3 


E 

-1 


-1 

1 

111 

( 3 


0 


1 


1 


2 


1 


DO 

2 


01 3 


D2 

0 


-1 

1 

121 

( 3 


1 


1 


1 


3 


2 


E 

-1 


01 3 


02 

0 


-1 

1 

128 

( 3 


2 


1 


1 


0 


3 


E 

-1 


E -1 


02 

0 


-1 

! 

136 

( 3- 




■ 1 

T 

1 


1 


1 


£ 

-1 


E -1 


p 

-1 


-1 

) 

142 

( 3 


0 


1 


1 


1 


1 


E 

-1 


E -1 


E 

-1 


1 

J 

149 

[ 0 


0 


1 


1 


1 


1 


E 

-1 


E -1 


E 

-1 


-1 

1 

155 

i 1 


0 


2 


2 


1 


1 


00 

1 


E -1 


s 

-1 


-1 

] 

163 

( 2 


0 


3 


3 


1 


1 


DO 

1 


01 2 


E 

-1 


-1 

) 

171 

1 3 


0 


0 


1 


1 


1 


00 

1 


01 2 


02 

3 


-1 

1 

181 

( 3 


1 


0 


1 


2 


2 


E 

-1 


D1 2 


02 

3 


-1 

1 

188 

( 3 


2 


0 


1 


3 


3 


E 

-1 


E -1 


02 

3 


-1 

] 

196 

( 3 


3 


0 


1 


0 


1 


E 

-1 


E -1 


E 

-1 


-1 

1 

202 

( 3 


0 


0 


1 


0 


1 


E 

-1 


E -1 


E 

-1 


0 

) 

172 

: 2 


1 


3 


3 


2 


2 


£ 

-1 


01 2 


E 

-1 


-1 

1 

182 

( 2 


2 


3 


3 


3 


3 


E 

-1 


E -1 


E 

-1 


-1 

1 

189 

( 2 


0 


3 


3 


3 


•3 


E 

-1 


E -1 


E 

-1 


3 

1 

197 

I 0 


0 


3 


3 


3 


3 


E 

-1 


E -1 


E 

-1 


-1 

] 

203 

: 1 


0 


0 


1 


3 


3 


E 

-1 


E -1 


02 

3 


-1 

1 

209 

[ 2 


0 


1 


2 


3 


3 


00 

0 


E -1 


02 

3 


-1 

1 

214 

( 3 


0 


2 


3 


3 


3 


00 

0 


01 1 


02 

3 


-1 

1 

221 

( 3 


1 


2 


3 


0 


1 


00 

0 


01 1 


E 

-1 


-1 

1 

227 

( 3 


2 


2 


3 


1 


2 


z 

-1 


01 1 


E 

-1 


-1 

1 

234 

( 3 


3 


2 


3 


2 


3 


E 

-1 


E -1 


E 

-1 


-1 

1 

237 

( 3 


0 


2 


3 


2 


3 


E 

-1 


E -1 


E 

-1 


2 

1 

215 

( 2 


1 


1 


2 


0 


1 


DO 

0 


E -1 


E 

-1 


-1 

1 

222 

[ 2 


2 


1 


2 


1 


2 


E 

-1 


E -1 


£ 

-1 


-1 

J 

228 

[ 2 


0 


1 


2 


1 


2 


E 

-1 


E -1 


E 

-1 


1 

1 

235 

[ 3 


u 


2 


3 


1 


2 


E 

-1 


01 1 


E 

-1 


1 

I 

238 

! 3 


I 


2 


3 


2 

# 

3 


E 

-1 


E -1 


E 

• 1 


1 

1 

210 

[ 1 


I 


0 


1 


0 


1 


E 

-1 


E -1 


E 

-1 


-1 

1 


snd_daca 1 
snd_daba 2 
rcv_data 3 
snd_data 4 
rcv~daCa 5 
rcv_data 7 
rcv_data 11 
rcv_data 16 
snd_ac)c 22 
rcv_aciiO 29 
snd_data 35 
snd_dal:a 43 
rov~data 44 
snd_data 51 
rcv_data 52 
rcv_data 61 
rcv_data 63 
rcv_data 76 
snd_ac)c 82 
rcv_ac)cO 89 
snd_data 95 
3nd_data 103 
rcv_data 104 
snd^data 111 
r(;v~data 112 
rcv“daca 121 
rcv~data 128 
rcv~dat.: 136 
snd_ack 142 
rcv~ack0 149 
snd~data 155 
snd~data 163 
rcv_daca 164 
snd'data 171 
rcv~data 172 
rcv_data 181 
rcv~data 188 
rov^data 196 
snd_ack 202 
rcv~ack0 0 
3nd_data 181 
rcv_data 182 
snd_data 188 
snd_ack 189 
rcv_ack0 197 
snd_data 198 
snd_data 203 
snd_daca 209 
rov_daCa 210 
snd_data 214 
rcv_data 215 
rcv_daca 221 
rcvdata 227 
rcv_data 234 
snd_ack 237 
rcv_ack0 17 
3nd_data 221 
rcv_data 222 
snd_daca 227 
snd_ack 228 
rcv_ack0 9 
snd_data 235 
rcv_ackl 13 
rcv_data 238 
rcv_ackl 20 
snd_ack 237 
snd_data 215 
snd ack 216 


194 






216 [ 1 , 0 , 0 , 1 , 0 , 1 , E -1 , 

223 [2,0,1,2,0,1, DO 0, 

229 [ 3 , 0 , 2 , 3 , 0 , 1 , DO 0 , 

236 ( 3 , 1 , 2 , 3 , 1 , 2 , E -1 , 

239 ( 3 , 2 . 2 , 3 , 2 , 3 , E -1 , 

230 ( 2 . 1 , 1 , 2 , 1 , 2 , E -1 , 

198 ( 3 , 0 , 0 , 1 , 3 , 3 , E -1 , 

204 ( 3 , 1 , 0 , 1 , 0 , 1 , E -1 , 

164 ( 1 , 1 , 2 , 2 , 2 , 2 , E -1 , 

173 [ 1 , 0 , 2 , 2 , 2 , 2 , E -1 , 

183 ( 0 , 0 , 2 . 2 , 2 , 2 , E -1 , 

190 [ 1 , 0 , 3 , 3 , 2 , 2 , E -1 , 

199 ( 2 , 0 , 0 , 1 , 2 , 2 , E -1 , 

205 [ 3 , 0 , 1 , 2 , 2 , 2 , DO 0 , 

211 { 3 , 1 , 1 , 2 , 3 , 3 , DO 0 , 

217 [ 3 , 2 , 1 , 2 , 0 , 1 , DO 0 , 

224 ( 3 , 3 , 1 , 2 , 1 , 2 , E -1 , 

231 i 3 , 0 , 1 , 2 , 1 , 2 , E -1 , 

206 ( 2 , 1 , 0 , 1 , 3 , 3 , E -1 , 

212 ( 2 , 2 , 0 , 1 , 0 , 1 , E -1 , 

218 ( 2 , 0 , 0 , 1 , 8 , 1 , E -1 , 

225 ( 3 , 0 , 1 , 2 , 0 , 1 , DO 0 , 

232 [ 3 , 1 , 1 , 2 , 1 , 2 , E -1 , 

200 [ 1 , 1 , 3 , 3 , 3 , 3 , E -I , 

207 : 1 , , 3 , 3 , 3 , 3 , E -1 , 

213 ( 2 , 0 , 0 , 1 , 3 , 3 , E -I , 

219 ( 3 , 0 , 1 , 2 , 3 , 3 , DO 0 , 

226 [ 3 , 1 , 1 , 2 , 0 , 1 , DO 0 . 

233 [ 3 , 2 , 1 , 2 , 1 , 2 , E -1 , 

220 [ 2 , 1 , 0 , 1 , 0 , 1 , E -L , 

184 ( 2 , 0 , 3 , 3 , 2 , 2 , E -1 , 

191 ( 3 , 0 , 0 , 1 , , 2 , E -1 , 

201 ( 3 , 1 , 0 , 1 , 3 , 3 , E -1 , 

208 ( 3 , 2 , 0 , 1 , 0 , 1 , E -1 , 

192 ! 2 , 1 , 3 , 3 , 3 , 3 , E -1 , 

112 ( 2 , 1 , 0 , 3 , 3 . 2 , E -1 , 

122 [ 2 , 2 , 0 , 3 , 0 , 3 , E -1 , 

129 ( 2 , 0 , 0 , 3 , 0 , 3 , E -1 , 


E 

-1 

/ 

E 

-1 


0 ! 

rcv_ackO 

0 








snd data 

223 

E 

-1 


E 

-1 


0 ) 

rcv_ackl 

1 








snd~daca 

229 








rcv_data 

230 

D1 

1 


E 

-1 


0 1 

rcv~ack2 

2 








rcv_data 

236 

01 


0 

E 

'-1 


0 1 

rcv_ack2 

5 








r jv_data 

239 

E 

-1 

0 

E 

-1 


0 1 

rcv_ack2 

8 








snd ack 

237 

E 

-1 

0 

E 

-1 


0 ] 

rcv_ackl 

3 








snd_data 

236 








snd_ack 

228 

E 

-1 

0 

D2 

3 


3 ] 

rcv_ackl 

203 








rcv_data 

204 

E 

-1 

0 

E 

-1 


3 ] 

rcv_ackl 

210 








snd_ack 

202 

E 

-1 

0 

E 

-1 


-1 1 

snd_data 

72 








snd_ack 

173 

E 

-1 

0 

E 

-1 


2 1 

rcv~ackO 

183 








snd_data 

184 

E 

-1 

0 

p 

-1 


-1 ] 

snd_data 

190 

01 

2 

0 

E 

-1 


-1 1 

snd_data 

199 








rcv_data 

200 

01 

2 

0 

D2 

3 


-1 1 

snd_data 

205 








rcv_data 

206 

01 

2 

0 

D2 

3 


-1 1 

rcv_data 

211 

E 

-1 

0 

02 

3 


-1 ] 

rcv_data 

217 

E 

-1 

0 

E 

-1 


-1 1, 

rcv~data 

224 

E 

-1 

0 

E 

-1 


-1 ) 

3nd~ack 

231 

E 

-1 

0 

E 

-1 


1 1 

rcv~ackO 

9 

E 

-1 

0 

02 

3 


-1 ) 

snd~data 

211 








rcv_data 

212 

E 

-1 

0 

E 

-1 


-1 1 

snd~data 

217 








snd_ack 

218 

£ 

-1 

0 

E 

-1 


0 1 

rcv~ackO 

0 








snd~data 

225 

E 

-1 

0 

E 

-1 


0 1 

rcv~ackl 

1 








rcv^data 

232 

E 

-1 

0 

E 

-1 


0 ] 

rcv_ackl 

3 








snd~ack 

231 

E 

-1 

0 

E 

-1 


-1 1 

snd'data 

206 








snd_ack 

207 

E 

-1 


E 

-1 


3 1 

rcv^ackO 

197 








snd_daCa 

213 

E 

-1 


02 

3 


3 1 

rev ackl 

203 








snd data 

219 








rcv_data 

220 

E 

-1 


02 

3 


3 1 

ccv_ack2 

209 








rev data 

226 

E 

-1 


E 

-1 


3 ; 

rev aek2 

215 








rcv_data 

233 

E 

-1 


E 

- i 


3 1 

rev aek2 

222 








snd aek 

231 

E 



E 

” 1. 


3 ! 

rev ackl 

210 








snd_d tea 

226 








snd ck 

218 

Dl 

2 


E 

-1 


2 1 

rcv_ackl 

190 








snd data 

191 








rev data 

192 

D1 

2 


02 

1 


2 ; . 

rev ack2 

199 








rcv_data 

201 

E 

-1 


D2 

3 


2 1 

rcv_ack2 

206 








rev data 

208 

E 

-1 


E 

_ 1 


2 1 

rev ack2 

212 








snd ack 

202 

E 

-1 


E 

-1 


2 1 

rov ackl 

200 








snd_data 

201 








snd_ack 

189 

D1 

3 


E 

-1 


-1 1 

snd data 

121 








rev data 

122 

E 

-1 


E 

-1 


-1 1 

snd data 

128 








snd ack 

129 

E 

- 


£ 

-1 


0 1 

rev ackO 

137 








snd data 

138 


195 





137 

( 0 

t 

0 


0 


3 , 

0 , 

3 


E 

-1 


E 

-1 


E 

-1 


-1 1 

3nd_daCa 

143 

143 

[ 1 

0 

0 


1 


1 , 

0 , 

3 


E 

-1 


E 

-1 


D2 

0 


-1 ) 

snd_dat.a 

rcv~data 

150 

151 

150 

[ 2 

0 

0 


2 


2 , 

0 , 

3 


DO 

1 


E 

-1 


D2 

0 


-1 1 

snd_data 

rcv_data 

156 

157 

156 

1 3 

0 

0 


3 


3 , 

0 , 

3 


DO 

1 


01 

2 


02 

0 


-1 J 

rcv~data 

165 

165 

( 3 

0 

1 


3 


3 , 

1 , 

1 


DO 

1 


D1 

2 


E 

-1 


-1 1 

rcv_daca 

174 

174 

( 3 

0 

2 


3 


3 , 

2 , 

2 


E 

-r 


D1 

2 


£ 

-1 


-1 1 

rcv_daca 

185 

185 

[ 3 

0 

3 


3 


3 , 

3 , 

3 


E 

-1 


E 

-1 


E 

-1 


-1 1 

snd~ack 

193 

193 

[ 3 

0 

0 


3 


3 , 

3 , 

3 


E 

-1 


E 

-1 


E 

-1 


3 ] 

rcv_acic0 

197 

157 

1 2 

0 

1 


2 


2 , 

1 , 

1 


DO 

1 


E 

-1 


E 

-1 


-1 ) 

snd_daCa 

rcv_data 

165 

166 

166 

[ 2 

0 

2 


2 


2 . 

2 , 

2 


E 

-1 


E 

-1 


E 

-1 


-1 ] 

snd_data 

3nd_ac]c 

174 

175 

175 

( 2 

0 

0 


2 


2 , 

2 , 

2 


E 

-1 


E 

-1 


E 

-1 


2 ) 

rcv_ackO 

snd_data 

183 

186 

186 

( 3 

0 

0 


3 


3 , 

2 , 

2 


E 

-1 


D1 

2 


E 

-1 


2 ) 

rcv_ackl 

rcv_data 

190 

194 

194 

( 3 

0 

1 


3 


3 , 

3 , 

3 


E 

-1 


E 

-1 


E 

-1 


2 1 

rcv_ackl 

snd_ack 

200 

193 

151 

t 1 

0 

1 


1 


* 0 

1 , 

1 


E 

-1 


E 

-1 


E 

-1 


-1 1 

snd_daCa 

snd_ack 

157 

158 

158 

( 1 

0 

0 


1 


1 , 

1 , 

1 


E 

-1 


E 

-1 


E 

-1 


1 1 

rcv_ackO 

snd_daCa 

149 

167 

167 

( 2 

0 

0 


2 


2 , 

1 , 

1 


DO 

1 


E 

-1 


E 

-1 


1 1 

rcv_ackl 

snd_data 

rcv_data 

155 

176 

177 

176 

( 3 

0 

0 


3 


3 , 

1 , 

1 


DO 

1 


D1 

2 


E 

-1 


1 1 

rev ack2 
rcv_data 

163 

187 

187 

( 3 

0 

1 


3 


3 , 

2 , 

2 


E 

-1 


D1 

2 


E 

-1 


1 ] 

ccv_ack2 
rev data 

172 

195 

195 

! 3 

0 

2 


3 


3 , 

3 , 

3 


E 

-1 


E 

-1 


E 

-1 


1 1 

rcv^ack2 
snd ack 

182 

193 

177 

( 2 

0 

1 


2 


2 , 

2 , 

2 


E 

-1 


E 

-1 


E 

-1 


1 1 

rcv_ackl 
snd data 
snd~ack 

164 

187 

175 

138 

( 3 

<• 

0 


1 


1 , 

0 , 

3 


E 

-1 


E 

-1 


D2 

0 


0 1 

rcv~ackl 

rcv~data 

143 

144 

144 

[ 3 

« 

1 


1 


1 , 

1 , 

1 


E 

-1 


E 

-1 


£ 

-1 


0 ) 

rcv^ackl 

snd~ack 

151 

142 

104 

I 1 

0 

1 


3 


2 , 

3 , 

2 


E 

-1 


£ 

-1 


E 

-1 


-1 1 

snd_data 

snd~ack 

112 

113 

113 

: 1 

0 

0 


3 


2 , 

3 , 

2 


E 

-1 


E 

-1 


E 

-1 


3 ] 

• rcv“ackO 
snd_data 

123 

124 

123 

( 0 

0 

0 


3 


2 , 

3 , 

2 


E 

-1 


E 

-1 


E 

-1 


-1 1 

snd~data 

130 

130 

[ 1 

0 

0 


0 


3 , 

3 , 

2 


E 

-1 


01 

3 


E 

-1 


-1 ) 

3nd~data 

rcv_data 

139 

140 

139 

( 2 

0 

0 


1 


1 , 

3 , 

2 


E 

-1 


Dl 

3 


02 

0 


-1 ) 

snd_data 
rev data 

145 

146 

145 

( 3 

0 

0 


2 


2 , 

3 , 

2 


DO 

1 


01 

3 


D2 

0 


-1 1 

rcv_daCa 

152 

152 

( 3 

0 

1 


2 


2 , 

0 , 

3 


DO 

1 


E 

-1 


D2 

0 


-1 1 

rev data 

159 

159 

( 3 


2 


2 


2 , 

1 , 

1 


DO 

1 


E 

-1 


E 

-1 


-1 1 

rev data 

168 

168 

( 3 


3 


2 


2 , 

2 , 

2 


E 

-1 


c 

-1 


E 

-1 


-1 J 

snd aek 

178 

178 

1 3 


0 


2 


2 , 

2 , 

2 


E 

-1 


E 

-1 


E 

-1 


2 1 

rcv_aekO 

183 

146 

( 2 


1 


1 


1 , 

0 , 

3 


E 

“ 1 


E 

-1 


D2 

0 


-1 1 

snd data 
rev data 

152 

153 

153 

i 2 


2 


1 


1 , 

1 , 

1 


E 

-1 


E 

-1 


E 

-1 


-1 I 

snd data 
snd ack 

159 

160 

160 

( 2 


0 


1 


1 , 

1 , 

1 


E 

-1 


E 

“' 


E 



1 1 

rcv_ackO 

snd_data 

149 

169 

169 

[ ■■ 

0 

0 


2 


2 , 

1 , 

1 


DO 

1 


E 

-1 


E 

-1 


1 1 

rcvackl 
rev data 

155 

179 

179 

1 3 

0 

1 


2 


2 , 

2 , 

2 


E 

-1 


E 

-1 


E 

-1 


1 1 

rcv_ackl 
snd ack 

164 

178 

140 

: 1 

0 

1 


0 


3 , 

0 , 

3 


E 

-1 


E 

-1 


E 

-1 


-1 1 

snd data 
snd ack 

146 

147 

147 

( 1 


0 


0 


3 , 

0 , 

3 


E 

-1 


E 

-1 


E 

-1 


0 1 

rev ackO 
snd_data 

137 

154 

154 

[ 2 


0 


1 


1 , 

0 , 

3 


£ 

-1 


E 

-1 


D2 

0 


^ 1 

rcv_ackl 
snd_data 
rev data 

143 

161 

162 

161 

[ 3 


0 


2 


2 , 

0 , 

3 


DO 

■ 


c 

-1 


D2 

0 


0 i 

rev ack2 
rev data 

150 

170 

170 

1 3 


1 


2 


2 , 

1 , 

1 


DO 

7 


E 

-1 


E 

-1 


0 1 

rev ack2 
rev data 

157 

180 

180 

[ 3 


2 


2 


2 , 

2 , 

2 


E 

-1 


E 

-1 


£ 

-1 


0 1 

rev ack2 

166 


196 





162 

( 2 


1 


1 


1 


1 


1 

0 

£ 

-1 


E 

-1 


E 

-1 


0 ] 

snd_ack 

rcv_ackl 

178 

151 

124 

( 2 


0 


0 


3 


3 


2 

0 

E 

-1 


01 

3 


E 

-1 


3 I 

snd_data 

snd^ack 

rcv_ackl 

170 

160 

130 

131 

( 3 


0 


1 


1 


3 

$ 

2 

0 

E 

-1 

0 

D1 

3 


02 

0 


3 ] 

snd_data 

rcv_data 

rcv_ac)c2 

131 

132 
139 

141 

( 3 


1 


1 


1 


0 

i 

3 

0 

E 

-1 

0 

E 

-1 


02 

0 


3 1 

rcv_data 

rcv_ack2 

141 

146 

146 

( 3 


2 


1 


1 


1 

$ 

1 

0 

E 

-1 

0 

E 

-1 


E 

-1 


3 ] 

rcv_daca 

rcv_ack2 

148 

153 

132 

( 2 


1 


0 


3 


0 

§ 

3 

0 

E 

-1 

0 

E 

-1 


E 

-1 


3 ] 

snd_ack 

rcv_ackl 

142 

140 

52 

( 2 


1 


1 


3 


0 

0 

2 

0 

E 

-1 

0 

D1 

0 


E 

-1 


-1 1 

snd_data 

snd_ack 

snd_data 

141 

129 

61 

62 

( 2 


2 


1 


3 


1 

0 

3 

0 

E 

-1 

0 

E 

-1 


E 

-1 


-1 1 

rcv_data 

snd_data 

62 

68 

69 

( 2 


0 


1 


3 


1 

0 

3 

0 

E 

-1 

0 

E 

-1 


E 

-1 


1 1 

snd_ack 

rcv_ackO 

69 

77 

77 

[ 0 


0 


1 


3 


1 

0 

3 

0 

E 

-1 

0 

E 

-1 


E 

-1 


-1 1 

snd_data 

snd_data 

78 

83 

83 

( 1 


0 


2 


1 


1 

0 

3 

0 

E 

-1 

0 

E 

-1 


02 

■ 1 


-1 j 

snd~data 

90 

90 

( 2 


0 


3 


2 


1 

0 

3 

0 

DO 

2 

0 

E 

-1 


02 

1 


-1 1 

rcv_data 
and data 

91 

96 

96 

( 3 


0 


0 


3 


1 

0 

3 

0 

DO 

2 

0 

D1 

3 


02 

1 


-1 ] 

rcv_data 

rcv_data 

97 

105 

105 

( 3 


1 


0 


3 


2 

0 

1 

0 

DO 

2 

0 

D1 

3 


E 

-1 


-1 1 

rcv~data 

114 

114 

( 3 


2 


0 


3 


3 

0 

2 

0 

E 

-1 

0 

01 

3 


E 

-1 


-1 1 

rcv~data 

125 

125 

( 3 


3 


0 


3 


0 

0 

3 

0 

E 

-1 

0 

E 

-1 


E 

-1 


-1 i 

snd_ack 

133 

133 

( 3 


0 


0 


3 


0 

0 

3 

0 

E 

-1 

0 

E 

-1 


E 

-1 


0 ! 

rcv~ackO 

137 

97 

( 2 


1 


3 


2 


2 

0 

1 

0 

DO 

2 

0 

E 

-1 


E 

-1 


-1 ] 

snd~daca 

105 

106 

.1 2 


2 


3 


2 


3 

0 

2 

0 

E 

-1 

0 

E 

-1 


E 

-1 


-1 ) 

rov~data 

snd_data 

106 

114 

115 

( 2 


0 


3 


2 


3 

0 

2 

0 

E 

-1 

0 

E 

-1 


E 

-1 


3 ) 

snd~ack 

rcv~ackO 

115 

123 

126 

1 3 


0 


0 


3 


3 

0 

2 

0 

£ 

-1 

0 

D1 

3 


E 

-1 


3 ! 

snd_data 

rcv^ackl 

126 

130 

134 

[ 3 


1 


0 


3 


0 

0 

3 

0 

E 

-1 

0 

E 

-1 


E 

-1 


3 ) 

rcv_data 

rcv_ackl 

134 

140 

91 

! 1 


1 


2 


1 


2 

0 

1 

0 

E 

-1 

0 

E 

-1 


E 

-1 


-1 ) 

snd~ack 

snd^data 

133 

97 

98 

[ 1 


0 


2 


1 


2 

0 

1 

0 

£ 

-1 

0 

E 

-1 


E 

-1 


2 1 

snd_ack 

rcv~ackO 

98 

89 

107 

[ 2 


0 


3 


2 


2 

0 

1 

0 

DO 

2 

0 

E 

-1 


E 

-1 


2 ] 

snd_data 

rcv_ackl 

107 

95 

116 

[ 3 


0 


0 


3 


2 

0 

1 

0 

DO 

2 

0 

D1 

3 


E 

-1 


2 1 

snd_data 
ccv data 
rcv_ack2 

116 

117 

103 

127 

[ 3 


1 


0 


3 


3 


2 


E 

-1 


01 

3 


E 

-1 


2 ) 

rcv_data 
rev ack2 

127 

112 

135 

( 3 


2 


0 


3 


0 

t 

3 


E 

-1 


E 

-1 


p 

-1 


2 1 

rcv_data 

rcv_ack2 

135 

122 

117 

[ 2 


1 


3 


2 


3 

0 

2 

0 

E 

-1 


E 

-1 


E 

-1 


2 1 

snd ack 
rcv_ackl 

133 

104 

78 

1 3 


0 


2 


1 


1 

0 

3 

0 

c 

-1 


E 

-1 


02 

1 


1 1 

snd data 

snd_ack 

rcv_ackl 

127 

115 

83 

84 

[ 3 


1 


2 


1 


2 


1 

0 

E 

-1 


p ■ 

-1 


E 

-1 


1 1 

rev data 
rev aekl 

84 

91 

44 

[ 1 


1 


0 


2 


0 

0 

2 


p 

-1 


E 

-1 


E 

-1 


-1 1 

snd aek 
snd_data 

82 

52 

53 

( 1 


0 


0 


2 


0 

0 

2 


E 

-1 


E 

-1 


E 

-1 


0 1 

snd_ack 
rev aekO 

53 

63 

63 

1 0 


0 


0 


2 


0 

0 

2 


E 

-1 


E 

-1 


E 

-1 


-1 1 

snd_data 

snd_data 

64 

70 

70 

( 1 


0 


1 


3 


0 


2 


£ 

-1 


01 

0 


E 

-1 


-1 1 

snd_data 

79 

79 

( 2 


0 


2 


1 


0 


2 


E 

- 1 


01 

0 


02 

1 


- 1 . i 

rev data 
snd data 

80 

85 

85 

( 3 


0 


3 


2 


0 


2 


DO 

2 


D1 

0 


02 

1 


-1 J 

rcv_data 
rev data 

86 

92 

92 

( 3 


1 


3 


2 


1 


3 


DO 

2 


E 

-1 


02 

1 


-1 ) 

rev_data 

99 

99 

1 3 


2 


3 


2 


2 


1 


DO 

2 


E 

-1 


E 

-1 


-1 1 

rev data 

108 

108 

( 3 


3 


3 


2 


3 


2 


E 

-1 


E 

-1 


E 

-1 


-1 ) 

snd aek 

118 

118 

( 3 


0 


3 


2 


3 


2 


E 

-1 


E 

-1 


E 

-1 


3 1 

rev aekO 

123 


197 



86 ( 2 , 1 , 2 . 1 , 1 . 3 , E -1 , £ -1 , D2 1,-1] 3nd_data 92 

rcv_daCa 93 

93 ( 2 , 2 , 2 , 1 , 2 , 1 , E -1 , E -1 . E -1,-1] snd_data 99 

snd_ac)c 100 

100 ( 2 , 0 , 2 . 1 , 2 , 1 , E -1 , E -1 , E -1 , 2 ] rcv_ac)c0 89 

3nd_daca 109 

109 ( 3 , 0 , 3 . 2 , 2 . 1 , DO 2 , E -1 , E -1 , 2 ] rcv_ackl 95 

rcv~data 119 

119 ( 3 , 1 , 3 , 2 , 3 , 2 , E -1 , E -1 , E -1 , 2 ] rcv_acltl 104 

3nd~ack 118 

80 [ 1 , 1 , 1 , 3 , 1 , 3 , E -1 , E -1 , E -1,-1] 3nd_data 86 

3nd_ac)c 87 

87 ( 1 , 0 , 1 . 3 , 1 . 3 , E -1 . E -1 , E -1 , 1 ] rcv_ack0 77 

3nd daCa 94 

94 [ 2 , 0 . 2 , 1 , 1 . 3 , E -1 , E -1 , 02 1 , 1 ] rcv_ackl 83 

3nd_daca 101 
rev data 102 

101 [ 3 , 0 , 3 , 2 , 1 , 3 , 00 2 , E -1 , 02 1 , 1 ] rcv_ack2 90 

rcv_data 110 

110 [ 3 , 1 , 3 . 2 , 2 , 1 , DO 2 , E -1 , E -1 , 1 ] rcv_ack2 97 

rcv_data 120 

120 ( ^ , 2 , 3 , 2 , 3 , 2 , E -1 , E -1 . E -1 . 1 ] tcv_ack2 106 

snd_ack 118 

102 : 2 , 1 , 2 . 1 , 2 , 1 , E -1,. E -1 , E -1 . 1 ] rcv_ackl 91 

3nd data 110 


64 

[ 2 

» 

0 . 

1 , 

3 , 

0 , 

2 


E 

-1 


D1 

0 


E 

-1 


0 ] 

snd_ack 

rcv_ackl 

100 

70 

71 

( 3 

* 

0 , 

2 . 

1 , 

0 , 

2 


E 

-1 


D1 

0 

t 

D2 

1 


0 ] 

snd_data 

rcv_data 

rcv_4ck2 

71 

72 
79 

81 

( 3 

0 

1 , 

2 , 

1 « 

1 , 

3 


E 

-1 


E 

-1 

0 

02 

1 


0 1 

rcv~data 

rcv_ack2 

81 

86 

88 

( 3 

0 

2 , 

2 , 

1 , 

2 , 

1 


E 

-1 


E 

-1 

0 

E 

-1 


0 ] 

rcv_data 

rcv3ack2 

88 

93 

72 

f 2 

0 

1 . 

1 , 

3 , 

1 , 

3 


E 

-1 


E 

-1 

0 

E 

-1 


0 ] 

snd~ack 

rcv_ackl 

82 

80 

5 

( 2 

« 

1 . 

2 , 

3 , 

1 , 

2 


E 

-1 


01 

1 

0 

E 

-1 


-1 1 

snd~data 

snd~ack 

snd_data 

81 

69 

7 

8 

( 2 

0 

2 , 

2 , 

3 , 

2 , 

3' 


£ 

-1 


E 

-1 

0 

E 

-1 


-1 1 

rcv_data 

snd~data 

8 

11 

12 

[ 2 

0 

0 , 

2 , 

3 , 

2 , 

3 


r 

-1 


E 

.1 

0 

c 

-1 


2 1 

snd~ack 

rcv_ackO 

12 

17 

17 

( 0 

0 

0 , 

2 , 

3 , 

2 , 

3 


E 

-1 


E 

-1 

0 

E 

-1 


-1 1 

snd_data 

snd^data 

18 

23 

23 

1 1 

0 

0 , 

3 , 

1 , 

2 , 

3 


E 

-1 


E 

-1 

0 

02 

2 


-1 ] 

snd~data 

30 

30 

( 2 

0 

0 , 

0 , 

2 , 

2 , 

3 


DO 

3 


E 

-1 

0 

02 

2 


-1 ] 

rcv_daca 

snd_data 

31 

36 

36 

[ 3 

0 

0 , 

1 , 

3 , 

2 , 

3 


DO 

3 


01 

0 

0 

02 

2 


-1 ] 

rcv~data 

rcv_daca 

37 

45 

45 

[ 3 

0 

1 , 

1 , 

3 , 

3 , 

1 


DO 

3 


01 

0 


E 

-1 


-1 ] 

rev data 

54 

54 

[ 3 


2 , 

1 , 

3 , 

0 , 

2 


E 

-1 


01 

0 


E 

-1 


-1 ] 

rev data 

65 

65 

[ 3 

0 

3 , 

1 , 

3 , 

1 , 

3 


E 

-1 


E 

-1 


E 

-1 


-1 ] 

snd_aek 

73 

73 

[ 3 

0 

0 , 

1 , 

3 , 

1 , 

3 


E 

-1 


E 

-1 


E 

-1 


1 1 

rcv_ackO 

77 

37 

( 2 

0 

1 , 

0 , 

2 , 

3 , 

1 


DO 

3 


E 

-1 

0 

E 

-1 


-1 1 

snd data 

45 

46 

( 2 


2 , 

0 , 

2 , 

0 , 

2 


E 

-1 


E 

-1 

0 

E 

-1 


-1 ] 

rcv_data 

snd_data 

46 

54 

55 

( 2 


0 , 

0 , 

2 , 

0 , 

2 


E 

-1 


E 

-1 

0 

E 

-1 


0 ] 

snd aek 
rev_aekO 

55 

63 

66 

( 3 

0 

0 , 

1 , 

3 , 

0 , 

2- 


£ 

- i 


Dl 

0 

0 

E 



0 1 

snd data 
rcv_ack1 

66 

70 

74 

! 3 

0 

1 , 

1 , 

3 , 

1 , 

3 


E 

-1 


E 

-1 

0 

E 

-1 


0 1 

rcv_data 

rcv_ackl 

74 

80 

31 

! 1 

0 

1 , 

3 , 

1 , 

3 , 

1 


E 

-1 


E 

-1 

0 

E 

-1 


-1 1 

snd~ack 
snd data 

73 

37 

38 

( 1 

0 

0 , 

3 , 

1 , 

3 , 

1 


E 

-1 


E 

-1 


E 

-1 


3 ] 

snd aek 
rev aekO 

38 

29 

47 

1 2 

0 

0 , 

0 , 

2 , 

3 , 

1 


00 

3 


E 

-1 


E 

-1 


3 ] 

snd_data 

rcv_ackl 

47 

35 

56 

! 3 

0 

0 , 

1 , 

3 , 

3 , 

1 


DO 

3 


Dl 

0 


E 

-1 


3 1 

snd_data 
rcv_data 
rev ack2 

56 

57 
43 

67 

1 3 

0 

1 , 

1 , 

3 , 

0 , 

2 


E 

-1 


01 

0 


E 

-1 


3 1 

rcv_data 
rev ack2 

67 

52 

75 

( 3 


2 , 

1 , 

3 , 


3 


E 

-1 


E 

-1 


E 

-1 


3 1 

rev data 
rev aek2 

75 

62 


198 





snd_acic 73 

57 ( 2 , 1 , 0 , 2 , 0 , 2 , E -1 , E -1 , E -1 , 3 ] rcv_aclcl 44 

snd_data 67 
snd_aclc 55 

18 [ 3 , 0 , 3 , 1 , 2 , 3 , E -1 , E -1 , D2 2 , 2 ] rcv_aclcl 23 

rcv_daCa 24 

24 [ 3 . 1 , 3 , 1 , 3 , 1 , E -1 , E -1 , E -1 , 2 ) rcv_ac)cl 31 

snd~ack 22 

3 1 1 , 1 , 1 . 2 , 1 , 2 , E -1 , E -1 . E -1,-1] snd_data 5 

snd ack 6 

6 [1,0,1,2,1,2,E-1,E-1,E-1, 1] rcv“ackO 9 

snd daCa 10 


9 

( 0 

i 

0.1, 

2 , 

1 . 

2 , 

E 

-1 

0 

E 

-1 . 

E 

-1 , 

-1 ] 

snd_data 

13 

13 

( 1 

0 

0,2, 

3 , 

1 , 

2 . 

E 

-1 

0 

01 

1 , 

E 

-1 , 

-1 ] 

snd_data 

19 
















rcv_data 

20 

19 

[ 2 

0 

0.3. 

1 . 

1 , 

2 , 

E 

-1 

0 

01 

1 . 

02 

2 , 

-1 ] 

snd_data 

25 
















rcv_data 

26 

25 

: 3 

0 

0,0, 

2 , 

1 , 

2 , 

00 

3 

0 

01 

1 . 

02 

2 , 

-1 ] 

rcv_data 

32 

32 

[ 3 

0 

1.0, 

2 , 

2 , 

3 . 

00 

3 


E 

-1 . 

02 

2 , 

-1 ] 

rcv_data 

39 

39 

( 3 

, 

2.0, 

2 , 

3 , 

1 , 

DO 

3 

0 

E 

-1 . 

E 

-1 , 

-1 1 

rcv_data 

48 


48 ( 3 , 3 , 0 , 2 , 0 , 2 , E -1 , E -1 , E -1,-1) snd_ack 58 

58 [ 3 , 0 , Q , 2 , 0 , 2 , E -1 , E -1 , E -1 , 0 ) rcv_ack0 63 

26 [ 2 , 1 , 3 , 1 , 2 , 3 , E -1 , E -1 , 02 2,-1] snd_data 32 

rcv_data 33 

33 { 2 , 2 , 3 , 1 , 3 , 1 , E -1 , E -1 , E -1,-1] snd_data 39 

snd_ack 40 

40 ( 2 , 0 , 3 , 1 , 3 , 1 , E -1 , E -1 , E -1 , 3 ) rcv_ack0 29 

snd~daca 49 

49 ( 3 , 0 , 0 , 2 , 3 , 1 , DO 3 , E -1 , E -1 , 3 ] rcv_ackl 35 

rcv_data 59 

59 ( 3 , 1 , 0 , 2 , 0 , 2 , E -1 , E -1 , E -1 , 3 ] rcv_ackl 44 

snd~ack 58 

20 ( 1 , 1 , 2 , 3 , 2 , 3 , E -1 , E -1 , E -1,-1] snd~data 26 

snd~ack 27 

27 ( 1 , 0 , 2 , 3 , 2 , 3 , E -1 , E -1 , E -1 , 2 ) rcv'ackO 17 

•snd~data 34 

34 ( 2 , 0 , 3 , 1 , 2 , 3 , E -1 , E -1 , 02 2 , 2 J rcv'ackl 23 

snd^data 41 
rcv~data 42 

41 ( 3 , 0 , 0 , 2 , 2 , 3 , DO 3 , E -1 , 02 2 , 2 ) rcv2ack2 30 

' rcv'data 50 

50 ( 3 , I , 0 , 2 , 3 , 1 , DO 3 , E -1 , E -1 , 2 ) rcv;ack2 37 

rev data 60 

60 ( 3 , 2 , 0 , 2 , 0 , 2 , E -1 , E -1 , E -1 , 2 ) rcv2ack2 46 

snd~ack 58 

42 [ 2 , 1 , 3 , 1 , 3 , 1 , E -1 , E -1 , E -1 , 2 ] rcv'ackl 31 


snd_data 50 
snd ack 40 


10 

( 2 , 

. 0 , 

2 , 

3 , 

1 , 

2 , 

E 

-1 , 

01 

1 , 

E , 

-1 , 

1 1 

rev ackl 
snd data 
rcv_data 

13 

14 

15 

14 

.( 3 , 

> 0 , 

3 , 

1 , 

1 . 

2 , 

E 

-1 , 

01 

1 , 

02 

2 , 

1 J 

rcv3ack2 

rcv_data 

19 

21 

21 

( 3 , 

. 1 , 

3 , 

1 , 

2 , 

3 , 

E 

-1 , 

E 

-1 , 

02 

2 , 

■ 1 1 

rcv_ack2 

rcv_data 

26 

28 

28 

1 3 , 

2 , 

3 , 

1 , 

3 , 

^ • 


- I f 

E 

-1 , 

E 

-1 , 

1 ] 

rev ack2 
snd ack 

33 

22 

15 

( 2 , 

1 , 

2 , 

3 , 

2 , 

3 , 

E 

-1 , 

£ 

- 1 , 

E 

-1 , 

1 1 

rcv_ackl 
snd data 

20 

21 


snd ack 12 


System State GRAPH 


0 

[ 0 

0 ] 

snd data 

i 1 , 

0 I 

1 

1 

[ 1 

0 1 

snd_data 

: 2 , 

0 j 

2 




rev data 

; 1 , 

1 1 

3 

2 

[ 2 

0 ) 

snd data 

i 3 , 

0 1 

4 




rev data 

; 2 , 

I 1 

5 

4 

1 3 

0 I 

revdata 

, 3 , 

1 1 

7 

7 

! 3 

1 1 

rcv_data 

1 3 , 

2 j 

10 

10 

i 3 

2 ] 

rcv_data 

: 3 . 

3 1 

14 

14 

t 3 

3 1 

snd ack 

1 3 , 

0 1 

17 

17 

! 3 

0 1 

rcv_ackO 

[ 0 , 

0 ] 

0 

5 

I 2 

i I 

snd data 

1 3 , 

1 1 

7 


199 








rcv_ciata 

i 2 


2 ] 

8 

8 

( 2 


2 ) 

snd_daca 

( 3 


2 ] 

10 





snd_aclt 

( 2 


0 1 

11 

11 

( 2 


0 1 

rcv_aclc0 

( 0 


0 ] 

0 





snd~data 

t 3 


0 ] 

15 

15 

[ 3 


0 ] 

rcv~ackl 

1 1 


0 ] 

1 





rcv_data 

( 3 


1 ] 

18 

18 

1 3 


1 1 

rcv~aclcl 

[ 1 


1 ] 

3 





snd_ack 

1 3 


0 ] 

17 

3 

( 1 


1 ) 

snd_data 

1 2 


1 1 

5 





snd_ack 

[ 1 


0 1 

6 

6 

1 1 


0 ) 

rev_ackO 

( 0 


0 1 

0 





snd_data 

( 2 


0 1 

9 

9 

( 2 


0 1 

rcv_ackl 

( 1 


0 1 

1 





snd_daca 

( 3 


0 1 

12 





rcv_data 

( 2 


1 ] 

13 

12 

( 3 


0 ] 

rcv_ack2 

( 2 


0 ] 

2 





rcv^data 

( 3 


1 1 

16 

16 

( 3 


1 ] 

rcv_ack2 

1 2 


1 ) 

5 





rev~data 

( 3 


2 1 

19 

19 

[ 3 


2 1 

rcv_ack2 

( 2 


2 ) 

8 





snd_ack 

[ 3 


0 1 

17 

13 

[ 2 


1 1 

rev_ackl 

( 1 


1 ] 

3 





snd_daCa 

t 3 


1 1 

16 





and ack 

1 2 


0 1 

11 


1 

Machine 

1 

Array Contents 1 

1 From 

I 

To 

1 

Transition 

1 Executed 1 

1 0 

I 

1 


snd data 

1 yes i 

1 1 

I 

0 

1 

rev ackO 

1 yes 1 

1 1 

I 

2 

1 

snd data 

1 yes -1 

1 2 

I 

0 

1 

rev ackO 

1 yes 1 

1 2 

I 

1 

1 

rev ackl 

1 yes 1 

1 2 

I 

3 

1 

snd data 

1 yes 1 

1 3 

I 

0 

1 

rev ackO 

1 yes ) 

1 3 

I 

1 

1 

rev ackl 

1 yes 1 

I 3 

I 

2 

1 

rcv_ack2 

1 yes I 


I Machine 2 Array Contents l 


From 1 

To 

Transition 

1 Executed 1 

0 1 

1 

rev data 

1 yes i 

1 1 

2 

rev data 

i yes i 

1 1 

0 

snd ack 

1 , yes 1 

2 1 

3 

rev data 

1 yes 1 

2 1 

0 

snd ack 

1 yes 1 

3 1 

0 

snd ack 

■ 1 yes 1 


200 



















APPENDIX H (SCM) GO_BACK_N, W=4 

INPUT (FSM) 


start 




machine 1 



State 

0 



trans 

snd 

data 

1 

state 

1 ' 



trans 

rcv_ 

ackO 

0 

trans 

snd" 

^data 

2 

state 

2 ' 



trans 

rcv_ 

_ackO 

0 

trans 

rcv^ 

_ackl 

1 

trans 

snd" 

'data 

3 

state 

3 " 



trans 

rcv_ 

ackO 

0 

trans 

rcv^ 

[ackl 

1 

trans 

rev" 

'ack2 

2 

trans 

snd 

_data 

4 

state 

4 * 



trans 

rcv_ 

_ackO 

0 

trans 

rcv_ 

_ackl 

1 

trans 

rev^ 

^ack2 

2 

trans 

rev" 

’ack3 

3 

machine 2 



State 

0 



trans 

rev 

data 

1 

state 

1 



trans 

rcv_ 

data 

2 

trans 

snd' 

>ck 

0 

stat^ 

2 

data 


trans 

rev 

3 

trans 

snd ack 

0 

state 

3 



trans 

rev 

data 

4 

trans 

snd ack 

0 

state 

A 



trans 

snd 

ack 

0 

initial state 

0 

finish 




201 




VARIABLE DEFINITIONS 


p«ckag« definitions Is 


type scm_transltlon_type Is (snd_data, rcv_data, 

“ snd_ac)t, rcv_acltO, 

rcv_acltl, rcv_ack2, 
tcv_ack3, unused); 

type buffor_type Is (dO,dl,d2,d3,e,a); 

type buffer_array_type Is array(1..4) of buffer_type; 

type seq_array_type Is array(1..4) of integer range 

type niachinel_state_type is 
record ~ 

state number : natural :• 0; 

Sdata~ : buffer_array_type (dO,dl.d2,d3); 

seq : Integer range 0..4 0; 

1 : integer range 1..4 1; 

end record; 

type machine2_state_type is 
record 

state number : natural :• 0; 

Rdata~ : buffer_type e; 

exp : integer range 0..4 !” 0; 

j : integer range 1..4 :■ 1; 

end record; 

type global_variable_type is 
record ” 

DATA : buffer_array_type :• (e,e,e,e); 

SEQ : seq_array_type :« (-1,-1,-1,-1); 

ACK : integer range -1..4 :» -1; 

end record; 

end definitions: 


202 






PREDICATE-ACTION 


separata (main) 

function Analyze_Predlcates_Machlnel (local : niachlnel_state type; 

SLOBAL: global_varlabIe_type) return transition_- 

staclc_package.stack is 

tempi : Integer GLOBAL.ACK + 0; 

tempi : integer :• (GLOBAL.ACK + Dmod S; 

temp3 : integer (GLOBAL.ACK + 2)mod 5; 

temp4 : integer (GLOBAL.ACK * 3)mod S; 

begin 

MakeEmpty(transition stack); 

if ((GLOBAL.DATA(local.!) - E) and (GLOBAL.SEQ(local.i) > -1)) then 
Push(transition stack, snd data); 
end if; ~ 


if 

((tempi > local.seq) and (GLOBAL.ACK 
Push(transition stack,rev ackO); 

/- -D) 

then 

end 

if; 



if 

((temp2 - local.seq) and (GLOBAL.ACK 
Push(transition stack,rev ackl); 

/- -D) 

then 

end 

•if; 



if 

{(tempi » local.seq) and (GLOBAL.ACK 
Push(transition stack,rev ack2); 

/- -D) 

then 

end 

if; 



if 

((temp4 <• local, seq) and (GLOBAL. ACK 

/- -D) 

then 


Push(transition stack,rev ack3); 
end if; ~ 

return transition_stack; 
end Analy 2 e_Predicates_Ma':hinel; 


separate (main) 

function Analyze_Pradicates_Machlne2(local : machine2_state_type; 

~ ~ GLOBAL: global_va'riable”type) return transition_- 

stack_package,stack is - - — . - 

begin 

MakeEmpty(transition stack); 

if ((GLOBAL.OATA(local.j)/-E) and (GLOBAL.SEQ(local.j) > local.exp)) then 
Push(transition_stack,rcv_data); 
end if; ~ 

if (GLOBAL.DATAdocal. j)-E) then 
Push(transition_stack,snd_ack); 
end if; 

return transition_atack; 
end Analyze_Predlcate3_Machine2; 

separate (main) 

procedure Act ion(in_3ystem_state : in out Gstate_record_type; 

in_transition: in out scm_transition~type; 
out_3y3tem_state ; in out”Gstate_record_type) is 

temp : integer 0; 

begin 

case (in_transition) is 
when (snd_data) ■> 

out_system_3tate‘.GLOBAL VARIABLES .DATA( in system_3tate .machinel_state . i) : = 
~ in_3y3'tem_state .macTiinel_state .Sdata ('In_system_state .machinel_state . i) ; 
out_system_stato.GLOBAL_VARIABLES.SEQ(in_system_state.machinel_state.i) :* 
in_3y3tem_3tate.machinel_state.seq; ^ 
begin” 

case (in 3ystem_3tate.machinel state.!) is 
when I -> ” 

out_system_state.machinel_state.i 2; 

when 2 -> 

out_system_state.machinel_state.i 3; 

when 3 -> 

out_sy3tem_state .niachinel_state. i 4; 

when 4”»> 

out_sy3tem_state.machinel_3tate.i :• 1; 
when others «> 
null; 
end case; 
end; 

out_system_state.machinel_3tate.seq :» 

(”( (ln_sy3tem_state.machinel_3tate.seq) + Dmod 5) ; 


203 










wh«n (rcv_aclcO) -> 

out_system state.GLOBAL_VARrAflLES.ACK :« -1; 
when (rcv_acltir «> 

ouC_system_state.GLOBAL_VARIABLES.ACX :■ -1; 
when (rcv_aclc2) ■> 

out_sysCem_staCe.GLOBAL_VARIABLES.ACK -1; 

when (rcv_ack3) «> 

OUC_system_state.GLOBAL_VARIABL£S.ACK :« -1; 
when (sncl_aek) •> ~ 

out_sy3tem_sCate.GLOBAL_VARIABLES.ACK in_system_3tace.machine2_state. 

exp; 

0uC_sysCem_sCace.machine2_scaCe.RdaCa e; 

when (rcv_data) -> ~ 

out syacem_state.machlne2_stace.Rdata :• 

~ln system_staCe.GLOaAL_VARIABLES. 

DAfA(ln_syscem_state.machine2_stace.j); 
out system state.GLOBAL VARIABLES'^ DATA (in system state .machlne2 state, j) 
~E; ~ ~ ~ 

out system state.GLOaAL_VARIABLES.S£Q (in system state.machine2 state.j) 

~ - 1 ; ~ 
begin 

case (in system state.machine2 state.j) is 
when I -> “ 

out_system_stace.machine2_scace.j ;» 2; 
when 2 -> ~ 

out_3ystem_scace.machine2_state.j :« 3; 
when 3 •> 

out_3ystem_state.machine2_state.j 4; 

when 4~«> ~ ~ 

out_sysCem_state.machine2_scate.j :« 1; 
when o'thers •> 
null; 
end case; 
end; 

out_aystem_state.machine2_staca.exp :■ (((in_system_state.machine2_state. 

“exp) ♦~l)mod S); ~ -- ~ 

when others ■> 

put_line("There is an error in the Action procedure'); 
end case; ~ 
end Action; 


204 









OUTPUT FORMAT 


saparat* (main) 

procadura ouCpuC_GCupla(Cupla : in ouc GsCaca_racord_Cypa) ia 
bagln ~ 

putC* [* t integar'image (tuple .machinel_state. state_number) t " 
put(integer'image(tuple.machine2_state.state number)); 
putC . •); 

put(tuple.machinel_atate.seq, width »> 1); 
put (" , ') ; 

put(tuple.machinel_stata.i, width -> 1); 
putC , •); 

put(tuple.machine2 state.exp, width •> 1); 
putC , •); 

put(tuple.machineZ state.j, width >> 1); 
putC ,'•); 

put(tuple.GLOBAL_VARIABLES.DATA(l), width ->3); 
put(tuple.GLOBAL_VARIABLES.SEQ(l),width->2); 
put(* , *); 

put (tuple.GLOBAL_VARIABl.ES.DATA(2) , width ->3); 
put(tuple.GL0BAL_VARIABLES.SEQ(2),wldth->2); 
putC , •); 

put(tuple.GLOBAL_VARIABLES.0ATA(3), width ->3); 
put(tuple.GLOBAL_VARIABLES.SEQ(3),width->2); 
put(* ,*); 

put(tuple.GLOBAL VARIABLES.0ATA(4), width ->3); 
put(tuple.GLOBAL~VARXABLES.SEQ(4),width->2); 
putC ,*); 

put(tuple.GLOBAL VARXABLES.ACK, width -> 3); 
putC ]*); 
end output_Gtuple; 

separata (main) 

procedure output_Gtuple_to_file(tuple : in out Gstate record type; 

counter : in out integer) is~ 

begin 

put(reach,counter); 

put(reach,' C t integer'image(tuple.machinel_state.state_number) i " ,') ; 
put(reach,integer'image(tuple.machine2_3tate.state number))7 
put (reach,* ,'*); 

put(reach,tuple.machinel_state.seq, width •> 1); 
put (reach,* , "); ~ 

put(reach,tuple.machinel_state.i, width »> 1); 
put(reach,* , *); ~ 

put(reach,tuple.machine2_state.exp, width -> 1); 
put(roach,* , "); ~ 

put(roach,tuple.machine2_stace.j, width •> 1); 
put(reach,* , ”); 

put(reach,tuple.GLOBAL_VARIABLES.DATA(1) , width ->3); 
put(reach,tuple.GLOBAL^VARIABLES.SEQ(l),width*>2); 
put(reach,* , '); 

put(reach,tuple.GLOBAL_VARIABLES.DATA(2), width ->3); 
put (reach, tuple.GL0BAL_VARIABLES.SEQ(2) ,width=«>2) ; 
put(reach,* ,*); 

put(reach,tuple.GLOBAL VARIABLES.0ATA(3), width *>3); 
put (reach, tuple .GLOBAL^VARIABLES . SEQ (3), width»2) ; 
put (reach, * ,*); 

put(reach, tuple.GLOBAL_VARIABLES.ACK, width •> 3); 
put(reach,* 1*) ; ~ 

new_iine(reach); 
end output_Gtuple_to_file; 


separate (main) 

procedure output_G3tate_node(Gstate pointer : in out Glink type; 

Error_riag : in out boolean) is 


begin 

output_line_count :• output line_count » 1; 
if ((output~line_count mod TO) = 0) then 
scroll_pau3e; 
end if; 

set_col(Gcolumn_set); 

put(Gstate_pointer.system_state_number, width •> 3); 
output_Gtuple(Gstate pointer.Gtuple) ; 

if ( (Gstate_pointer. Tinlcl .Glin)c • null) and then (Gstate_pointer . 1 in)r2 .G1 in)t 


null) 


205 





and Chen 

(Gatato_pointer. Iink3 .Glinlc 

Chen 

Error_flaq crue; 

else 

Error_flag false; 

end if; ~ 

end outpuC_GsCaCe_node; 


null) and Chen (GsCaco_poincer . limc-l .Glink - null)) 


205 




OUTPUT 


REACHABILITY ANALYSIS 
Global Stace 

0 (0,0,0,1,0,1,E -1,E 

1 (1,0,1,2,0,1,D00,E 

2 (2,0,2,3,0,1, DO Q,D1 

4 (3,0,3,4,0,1, DO Q,D1 

7 (4,0,4,1,0,1, DO 0,D1 

12 t 4 , 1 , 4 , 1 , 1 , 2 , E -1 . D1 

18 [4,2,4,1,2,3,E -1,E 

26 [ 4 , 3 , 4 , 1 , 3 , 4 , E -1 , E 

36 ( 4 , 4 , 4 , 1 , 4 , 1 , E -1 , E 

47 : 4 , 0 , 4 , 1 , 4 , 1 , E -1 , E 

60 [ 0 , 0 , 4 , 1 , 4 , 1 , E -1 , E 

72 [1,0,0.2,4,1, DO 4,E 

87 ( 2 . 0 , 1 , 3 , 4 , 1 , DO 4 , D1 

102 ( 3 . 0 , 2 , 4 , 4 , 1 , DO 4 . D1 

120 ( 4 . 0 , 3 , 1 , 4 , 1 , DO 4 . D1 

134 ( 4 , 1 , 3 , 1 , 0 , 2 , E -1 . 01 

150 ( 4 . 2 , 3 , 1 . 1 , 3 , E -1 . E 

162 ( 4 . 3 . 3 . 1 , 2 . 4 , E -1 . E 

176 [ 4 . 4 , 3 , 1 , 3 , 1 , E -1 , E 

187 [ 4 , 0 , 3 , 1 , 3 , 1 , E -1 , E 

200 [ 0 . 0 , 3 , 1 , 3 , 1 , E -1 , E 

212 ( 1 . 0 . 4 , 2 , 3 , 1 , 00 3 , E 

227 ( 2 , 0 , 0 , 3 , 3 , 1 , 00 3 , D1 

242 ( 3 , 0 , 1 , 4 , 3 , 1 , 00 3 , 01 

260 ( 4 , 0 , 2 , 1 , 3 , 1 , DO 3 , 01 

274 ( 4 , 1 , 2 , 1 , 4 , 2 , E -1 , 01 

290 ( 4 , 2 , 2 , 1 , 0 , 3 , E -1 , E 

302 ( 4 , 3 , 2 , 1 , 1 , 4 , E -1 , E 

316 1 4 , 4 , 2 , 1 , 2 , 1 , E -1 , E 

327 ( 4 , 0 , 2 , 1 , 2 , 1 , E -1 , E 

340 [ 0 . 0 , 2 , 1 , 2 , 1 , E -1 . E 

352 ( 1 , 0 , 3 , 2 , 2 , 1 , DO 2 , E 

367 [ 2 , 0 , 4 , 3 , 2 , 1 , DO 2 , 01 

382 ( 3 , 0 , 0 , 4 , 2 , 1 , DO 2 , Dl 

400 ( 4 , 0 , 1 , 1 , 2 , 1 , DO 2 , 01 

414 r 4 , 1 , 1 , 1 , 3 , 2 . E -1 , d: 

430 ; 4 , 2 , 1 , 1 , 4 , 3 E -I , E 

442 : 4 , 3 , 1 , 1 , 0 , 4 , E -1 , E 

456 [ 4 , 4 , 1 , 1 , 1 , 1 , E -1 , E 

467 : 4 , 0 , 1 , 1 , 1 , 1 , E -1 , E 

480 [ 0 , 0 , 1 , 1 , 1 , 1 , £ -1 , E 

4 92 [ 1 , 0 , 2 , 2 , 1 , 1 , DO 1 , E 

507 [ 2 , 0 , 3 , 3 , 1 , 1 , 00 1 , 01 

522 : 3 , 0 , 4 , 4 , 1 , 1 , DO 1 , 01 

540 { 4 , 0 , 0 , 1 , 1 , 1 , 00 1 . 01 

554 [ 4 , 1 , 0 , 1 , 2 , 2 , E -1 , Dl 

570 ( 4 , 2 , 0 , 1 , 3 , 3 , E -1 , E 

582 ( 4 , 3 , 0 , 1 , 4 , 4 , E -1 , E 

596 ( 4 , 4 , 0 , 1 , 0 , 1 , E -I , E 

607 [ 4 , 0 , 0 , 1 , 0 , : , E -1 . E 

541 ( 3 , 1 , 4 , 4 , 2 , 2 , E -1 , 01 

555 ( 3 , 2 , 4 , 4 , 3 , 3 , E -1 , E 


of 

■ 

go 

_bacic_n_ 

_w4 





GRAPH 








-1 

t 

E 

-1 

,E 

-1 

0 

-1 

] snd_data 

1 

-1 

t 

E 

-1 

,E 

-1 

0 

-1 

] snd_data 

2 









rcv_daea 

3 

1 

t 

E 

-1 

,E 

-1 

0 

-1 

] snd^daca 

4 









rcv_data 

5 

1 

0 

02 

2 

.E 

-1 

0 

-1 

] snd_data 

7 









rcv_data 

8 

1 

0 

D2 

2 

,03 

3 

0 

-1 

] tcv_data 

12 

1 

0 

02 

2 

,03 

3 

0 

-1 

) rcv_data 

18 

-1 

0 

02 

2 

.03 

3 

0 

-1 

1 Ecv~data 

26 

-1 

0 

E 

-1 

.03 

3 

0 

-1 

1 rcv_data 

36 

-1 


E 

-1 

,E 

-1 

0 

-1 

] snd_ack 

47 

-1 


E 

-1 

,E 

-1 

0 

4 

1 ccv_aclcO 

60 

-1 

0 

E 

-1 

.E 

-1 

0 

-1 

] snd_data 

72 

-1 

0 

E 

-1 

,E 

-1 

0 

-1 

j and data 

87 









rcv_data 

88 

0 

0 

E 

-1 

.E 

-1 

0 

-1 

I snd_data 

102 









rcv_data 

103 

0 

0 

02 

1 

,E 

-1 

0 

-1 

] snd_data 

120 









rcv_data 

121 

0 

0 

02 

1 

,03 

2 

0 

-1 

] rcv_data 

134 

0 

0 

02 

1 

,03 

2 

0 

-1 

] rcv_data 

150 

-1 

0 

02 

1 

,03 

2 

0 

-1 

] rcv_data 

162 

-1 

0 

E 

-1 

.03 

2 

0 

-1 

1 rcv_data 

176 

-1 

0 

E 

-1 

,E 

-1 

0 

-1 

] snd_ack 

187 

-1 

0 

E 

-1 

,E 

-1 

0 

3 

] rcv_ac)cO 

200 

-1 

0 

E 

-1 

,E 

-1 

0 

-1 

j snd~data 

212 

-1 

0 

E 

-1 

,E 

-1 

0 

-1 

i snd~data 

227 









_rev^data 

228 

4 

0 

E 

-1 

,E 

-1 

0 

~r 

] snd~data 

242 









rcv~data 

243 

4 

0 

02 

0 

,E 

-1 

0 

-1 

] snd^data 

260 









rev^data 

261 

4 

0 

02 

0 

,03 

1 

0 

-1 

] rcv_data 

274 

4 

0 

02 

0 

,03 

1 

0 

-1 

] rcv~data 

290 

-1 

0 

02 

0 

,03 

1 

0 

-1 

] rcv~data 

302 

-1 

0 

E 

-1 

,03 

1 

0 

-1 

1 rcv~data 

316 

-1 

0 

E 

-1 

,E 

-1 

0 

-1 

1 snd~ack 

327 

-1 

0 

E 

-1 

,E 

-1 

0 

2 

j rcv_ackO 

340 

-1 

0 

E 

-1 

,E 

-1 

0 

-1 

1 snd_data 

352 

-1 

0 

E 

-1 

,E 

-1 

0 

-1 

] and data 

367 









rcv_data 

368 

3 

0 

E 

-1 

,E 

-1 

0 

-1 

] snd_data 

382 









rcv~data 

383 

3 

0 

02 

4 

,E 

-1 

0 

-1 

] snd~data 

400 









rcv_data 

401 

3 


02 

4 

, 03 

0 


-1 

] rcv_data 

414 

3 


02 

4 

, 03 

0 


-1 

1 rcv_data 

430 

" k 


02 

4 

, 03 

0 


-1 

] rcv_data 

442 

- 1 


E 

-1 

, 03 

0 


-1 

] rcv_data 

456 

-1 


E 

-1 

, E 

-1 


-1 

] snd_aclc 

467 

-1 


E 

-1 

, E 

-1 


1 

1 rcv_ackO 

480 

_ 1 


E 

-1 

,E 

-1 


-1 

] snd_data 

492 

-1 


E 

-1 

,E 

-1 

0 

-1 

1 snd_data 

507 









rcv_data 

508 

2 


E 

-1 

,E 

-1 

0 

-1 

1 and_data 

522 









rcv~data 

523 

2 


02 

3 

,E 

-1 

0 

-1 

1 3nd_data 

540 









rcv_data 

541 

2 

0 

02 

3 

,03 

4 

0 

-1 

1 rcv_data 

554 

2 

0 

02 

3 

,03 

4 

0 

-1 

) rT:v data 

570 

-1 

0 

02 

3 

,03 

4 


-1 

1 rcv_data 

582 

-1 


E 

-1 

,03 

4 


-1 

1 rcv_data 

596 

-1 


E 

-1 

,E 

-1 


-1 

I and ack 

607 

” I 


E 

-1 

, E 

-1 


0 

1 rev aekO 

0 

2 


02 

3 

, E 

-1 


-1 

1 and data 

554 









rev data 

555 

• k 

, 

32 

3 

, E 

-1 


-1 

j and data 

570 


rev data 571 


207 







571 

( 3 


3 , 

4 


4 , 

4 , 

4 


E 

-1 


E 

-1 


E 

-1 


-1 , 

-1 ] 

sn<i_data 

3nd_ac)c 

582 

583 

583 

[ 3 


0 , 

4 


4 , 

4 , 

4 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

4 ] 

rcv_ackO 

snd_data 

597 

598 

597 

[ 0 


0 , 

4 


4 , 

4 , 

4 


E 

-1 


E 

-1 


E 

-1 

.E 

-1 , 

-1 1 

snd_data 

608 

608 

: 1 


0 , 

0 


1 , 

4 , 

4 


E 

-1 


E -1 


E 

-1 

.03 

4 , 

-1 : 

snd_daCa 

rcv_data 

620 

621 

620 

( 2 


0 , 

1 


2 , 

4 , 

4 


00 

0 


E 

-1 


E 

-1 

, 03 

4 , 

-1 : 

snd_daca 

rcv_data 

631 

632 

631 

: 3 


0 , 

2 


3 , 

4 , 

4 


DO 

0 


D1 

1 

/ 

E 

-1 

, 03 

4 . 

-1 i 

snd_data 

rcv_data 

645 
64 6 

645 

[ 4 


0 , 

3 


4 , 

4 , 

4 


DO 

0 


01 

1 


02 

2 

,03 

4 , 

-1 ] 

rcv_data 

658 

658 

( 4 


1 , 

3 


4 , 

0 , 

1 


DO 

0 


01 

1 

» 

D2 

2 

.E 

-1 . 

-1 1 

rcv~data 

673 

673 

! 4 


2 , 

3 


4 . 

1 , 

2 


E 

-1 


01 

1 

» 

02 

2 

.E 

-1 , 

-1 1 

rcv_daca 

682 

682 

( 4 


3 . 

3 


4 , 

2 , 

3 


E 

-1 


E 

-1 

t 

D2 

2 

,E 

-1 , 

-1 ] 

rcv_data 

692 

692 

[ 4 


4 , 

3 


4 , 

3 , 

4 


E 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

-1 ] 

snd_ack 

696 

696 

[ 4 


0 , 

3 


4 , 

3 , 

4 


E 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

3 ] 

rcv_aclcO 

37 

646 

: 3 


1 , 

2 


3 . 

0 , 

1 


DO 

0 


01 

1 

0 

E 

-1 

,E 

-1 , 

-1 ] 

3nd_data 

rcv~data 

658 
65 9 

659 

[ 3 


2 , 

2 


3 , 

1 , 

2 


E 

-1 


01 1 

0 

E 

-1 

.E 

-1 , 

-1 1 

sr.d_daCa 

rcv_daca 

673 

674 

674 

[ 3 


3 . 

2 


3 , 

2 , 

3 


E 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

-1 : 

3nd_data 

3nd_ac)c 

682 

683 

683 

t 3 


0 , 

2 


3 , 

2 , 

3 


E 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

2 : 

rcv_ac)cO 

3nd~data 

20 

693 

693 

t 4 


0 , 

3 


4 , 

2 . 

3 


E 

“ 1 


E 

-1 

0 

D2 

2 

.E 

-1 , 

2 • 

rcv_ac)cl 

rcv~data 

28 

697 

697 

[ 4 


1 , 

3 


4 , 

3 , 

4 


E 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

2 ; 

rcv_ac)cl 

3nd_acK 

40 

696 

632 

[ 2 


1 , 

1 


2 , 

0 , 

1 


DO 

0 


E 

-1 

0 

E 

-1 

, E 

-1 , 

-1 1 

3nd~daCa 

rcv_data 

646 

647 

647 

( 2 


2 , 

1 


2 , 

1 , 

2 


E 

-1 


E 

-1 

0 

£ 

-1 

,E 

-1 , 

-1 ; 

snd^data 

snd~ack 

659 

660 

660 

( 2 


0 , 

1 


2 , 

1 , 

2 


E 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

1 ; 

rcv~acicO 

snd_data 

10 

675 

675 

( 3 


0 , 

2 


3 , 

1 , 

2 


E 

-1 


D1 

1 

0 

E_ 

.1.L 

_j_E 

_-l , 

1 ; 

rcv~acitl 

snd'data 

rcv~daca 

15 

684 

685 

684 

1 4 


0 , 

3 


4 , 

1 , 

2 


E 

-1 


01 

1 

0 

02 

2 

,E 

-1 , 

1 ; 

rcv3ac)t2 

rcv~data 

22 

694 

694 

t 4 


1 , 

3 


4 , 

2 , 

3 


E 

-1 


£ - 1 

0 

02 

2 

,E 

“1 , 

1 i 

rcv_ack2 

rcv_data 

32 

698 

698 

( 4 


2 , 

3 


4 , 

3 , 

4 


E 

-1 


E *1 

0 

£ 

-1 

,E 

■ 1 

I ] 

rcv”aclt2 

snd_ack 

44 

696 

685 

t 3 


1 , 

2 


3 , 

2 , 

3 


E 

-1 


E 

-1 

0 

£ 

-1 

£ 

-1 , 

1 1 

rcv^ack1 
3nd2data 
snd_aclc 

23 

694 

683 

621 

: 1 


1 , 

0 


1 , 

0 , 

1 


E 

-1 


E 

-1 

0 

E 

-1 

. E 

-1 , 

-1 1 

3nd_data 
snd acic 

632 

633 

633 

[ 1 


0 , 

0 


1 , 

0 , 

1 


E 

-1 


E 

-1 

0 

E 

-1 

r E 

-1 , 

0 1 

rcv_acicO 
snd daca 

0 

648 

648 

( 2 


0 , 

1 


2 , 

0 , 

i. 


DC 

G 


E 

— 1 




1 w 

-1 , 

0 ] 

rev ackl 
snd daca 
rcv_daca 

661 

662 

661 

( 3 


0 , 

2 


3 , 

0 , 

1 


DO 

0 


Di : 


“ 

-1 

. E 

-1 , 

0 1 

rev ae<2 
snd_daca 
rcv_daca 

2 

676 

6T' 

676 

1 4 


0 , 

3 


4 , 

3 , 

k 


DC 

0 


01 i 


D2 

2 

. E 


0 1 

rev_ae)c3 

rev_daca 

4 

686 

686 

: 4 


1 , 

3 


4 , 

‘ ' 

2 



* 1 


DI I 


02 

2 

, E 

_ 1 

3 i 

rev ae)c3 
rev_daca 

8 

695 

695 

[ 4 


2 , 

3 


4 , 

2 , 

3 


E 

-1 


E -1 


D2 

2 

. E 

“ 1 r 

3 i 

rev ack3 
rev_daca 

13 

699 

699 

[ 4 


3 , 

3 


4 , 

3 , 

4 


E 

-1 


E 

-1 


E 

-1 

, E 

-1 , 

0 1 

rev ack3 
snd_aek 

19 

696 

677 

: 3 


1 , 

2 


3 , 

* ' 

2 


E 

-1 


01 

1 


E 

-1 

,£ 

-1 , 

0 1 

rev_aek2 

snd^data 

rev_daca 

5 

686 

687 

687 

( 3 


2 , 

2 


3 , 

2 , 

3 


E 

-1 


E 

-1 


£ 

-1 

, E 

-1 , 

0 1 

rev_aek2 

snd_data 

snd_ack 

9 

695 

683 

662 

! 2 


1 , 

1 


2 , 


2 


p 

-1 


E 

-1 


“ 

-1 

' “ 

-1 , 

3 1 

rev ackl 
snd_daca 
snd_ack 

3 

67^ 

660 

598 

( 4 


0 , 

0 


'* ' 

4 , 

4 


£ 



E -1 

• 


- 1 

, 03 

4 , 

4 ] 

, rcv_ackL 
rev daca 

608 

609 


208 




609 

( 4 


1 , 

0 


1 , 

0 , 

1 


E 

-1 


E -1 

' 

E 

-1 

-E 

-1 , 

4 

] rcv_aclcl 
snd_ac)c 

621 

607 

523 

( 2 


1 , 

3 


3 . 

2 , 

2 


E 

-1 


D1 2 


E 

-1 

.E 

-1 , 

-1 

] snd data 
rcv_daca 

541 

542 

542 

[ 2 


2 . 

3 


3 , 

3 , 

3 


E 

-1 


E -1 


E 

-1 

, E 

-1 , 

-1 

1 snd_data 
snd'ack 

555 

556 

556 

[ 2 


0 , 

3 


3 , 

3 , 

3 


E 

-1 


E -1 


E 

-1 

,E 

-1 , 

3 

] rcv_ackO 
snd data 

572 

573 

572 

[ 0 


0 , 

3 


3 , 

3 , 

3 


E 

-1 


E -1 


E 

-1 

,E 

-1 , 

-1 

snd_data 

584 

584 

( 1 


0 , 

4 


4 , 

3 , 

3 


E 

-1 


E -1 


02 

3 

, E 

-1 , 

-1 

snd~data 

rcv_data 

599 

600 

599 

( 2 


0 . 

0 


1 , 

3 , 

3 


E 

-1 


E -1 


D2 

3 

,D3 

4 , 

-1 

3nd_data 

rcv_data 

610 

611 

610 

( 3 


0 , 

1 


2 , 

3 , 

3 


DO 

0 


E -1 


D2 

3 

,03 

4 , 

-1 

snd_data 

rcv_data 

622 

623 

622 

( 4 


0 , 

2 


3 , 

3 , 

3 


DO 

0 


D1 1 


D2 

3 

,D3 

4 , 

-1 

rcv_data 

634 

634 

[ 4 


1 , 

2 


3 , 

4 , 

4 


DO 

0 


D1 1 


E 

-1 

, 03 

4 , 

-1 

rcv_data 

64 9 

649 

[ 4 


2 , 

2 


3 , 

0 , 

1 


DO 

Q 


D1 1 


E 

-1 

,E 

-1 , 

-1 

rcv_data 

663 

663 

( 4 


3 , 

2 


3 , 

1 , 

2 


E 

-1 


D1 1 


E 

-1 

,E 

-1 , 

-1 

rev data 

678 

678 

( 4 


4 , 

2 


3 , 

2 , 

3 


E 

-1 


E -1 


E 

-1 

,E 

-1 , 

-1 

snd_ac)t 

688 

688 

t 4 


0 , 

2 


3 , 

2 , 

3 


E 

-1 


E -1 


E 

-1 

,E 

-1 , 

2 

rev ackO 

20 

623 

I 3 


1 , 

1 


2 , 

4 , 

4 


DO 

0 


E -1 


E 

-1 

.03 

4 , 

-1 

snd_data 

ccv_data 

634 

635 

635 

[ 3 


2 , 

1 


2 , 

0 , 

1 


DO 

0 


E -1 


E. 

-1 

,E 

-1 , 

-1 

snd_data 

rcv~data 

649 

650 

650 

( 3 


3 , 

1 


2 , 


2 


E 

-1 


E -1 


E 

-1 

,E 

-1 , 

-1 

snd data 
snd_ack 

663 

664 

664 

[ 3 


0 , 

1 


2 , 

1 , 

2 


£ 

-1 


E -1 


E 

-1 

, E 

-1 , 

1 

rev ackO 
snd_data 

10 

679 

679 

: 4 


0 , 

2 


3 , 

1 , 

2 


£ 

-1 


D1 1 


E 

-1 

,E 

-1 , 

1 : 

rcv_ackl 

rcv~data 

15 

689 

689 

( 4 


1 , 

2 


3 , 

2 

3 



-1 


E -1 


E 

-1 

,E. 

-1 , 

1 : 

rcv~ackl 

snd~ack 

23 

688 

611 

( 2 


1 , 

0 


1 , 

4 , 

4 


E 

-1 


E -1 


E 

-1 

,03 

4 , 

-1 : 

snd~data 

rcv~data 

623 

624 


( 2 


2 , 

0 


1 , 

0 , 

1 


E 

-1 


E -1 


E 

-1 

,E 

-1 , 

-1 ] 

snd_data 

snd~ack 

635 

636 

636 

( 2 


0 , 

0 


1 , 

0 , 

1 


E 

-1 


E -1 


E 

-1 

,E 

-1 , 

0 ] 

rcv”ackO 

snd~data 

0 

651 

651 

! 3 


0 , 

1 


2 , 

0 , 

1 


DO 

0 


E -1 


E 

-1 

,E 

-1 , 

0 ; 

rcv~ackl 

snd~data 

rcv_data 

1 

665 

666 

665 

[ 4 


0 , 

2 


3 , 

0 , 

1 


DO 

.0 


D1 1 


E 

-1 

, E 

-1 , 

0 1 

rcv~ack2 

rcv_data 

2 

680 

680 

( 4 


1 , 

2 


3 , 

1 , 

2 


E 

-1 


D1 1 


E 

-1 

, E 

-1 , 

0 ] 

rcv_ack2 

rev'data 

5 

690 

690 

[ 4 


2 , 

2 


3 , 

2 , 

3 


E 

-1 


E -1 


E 

-1 

,E 

-1 , 

0 1 

rev aek2 
snd_aek 

9 

688 

666 

1 3 


1 , 

1 


2 , 

1 , 

2 


E 

-1 


E -1 


£ 

-1 

,E 

-1 , 

0 1 

rev_aekl 
snd data 
snd aek 

3 

680 

664 

600 

( 1 


1 , 

4 


4 , 

4 , 

4 


E 

-1 


E -1 


E 

-1 

, E 

-1 , 

-1 ) 

snd data 
snd aek 

611 

612 

612 

[ 1 


0 , 

4 


4 , 

4 , 

4 


E 

-1 


E -1 


E 

-1 

, E 

-1 , 

4 1 

rev_ackO 
snd data 

597 

625 

625 

( 2 


0 , 

0 


1 , 

4 , 

4 


E 

• 1 


E “1 


E 

-1 

, 03 

4 , 

4 1 

rev_aek1 
snd_data 
rev data 

608 

637 

638 

637 

[ 3 


0 , 

1 


2 , 

4 , 

4 


DO 

0 


E -1 


E 

-1 

, 03 

4 , 

4 i 

rev aek2 
snd_data 
rev data 

620 

652 

653 

652 

i 4 


0 , 

2 


3 , 

4 , 

4 


DO 

3 


Dl 


c) 

” L 

,03 

4 , 

4 ; 

rev ack3 
rcv_aata 

631 

667 

667 

[ 4 


1 , 

2 


3 , 

0 , 

1 


DO 

0 


01 1 



-1 

, E 

-1 , 

4 i 

rev ack3 
rev data 

646 

681 

681 

[ 4 


2 , 

2 


3 , 

1 , 

2 


E 

-1 


01 1 


E 

-1 

, E 

-1 , 

4 1 

rcv_aek3 
rev data 

659 

691 

691 

( 4 


3 , 

2 


3 , 

2 , 

3 


E 

-1 


E -1 


E 

-1 

, E 

-1 , 

4 1 

rev aek3 
snd ack 

674 

688 

653 

1 3 


1 , 

1 


2 , 

0 , 

1 


DO 

0 


E -1 


E 

-1 

, E _ 

-1 , 

4 1 

rev ack2 
snd data 
rev data 

632 

667 

668 

668 

( 3 


2 , 

1 


2 , 

1 , 

2 


E 

-1 


E -1 


E 


, E 

- 1 , 

4 1 

rev_ack2 
snd data 
snd aek 

647 

681 

664 

638 

( 2 


1 , 

0 


1 , 

0 , 

1 


p 

-1 


E - 1 


r 

* I 

, E 

-1 , 

4 1 

rev ackl 

621 


209 





1 3 


0 

t 

4 


4 


3 , 

3 


E 

-1 


E 

-1 


D2 

3 

,E 

-1 , 

3 1 

3ncl_daCa 

snd_aclc 

1 rcv_ackl 

653 

636 

584 

585 

( 4 


0 

0 

0 


1 


3 , 

3 


E 

-1 


E 

-1 


D2 

3 

, D3 

4 , 

3 1 

snd~daCa 

rcv_data 

1 rcv_ack2 

585 

586 
599 

601 

( 4 


1 

0 

0 


1 


4 , 

4 


£ 

-1 


E 

-1 


£ 

-1 

,03 

4 , 

3 1 

rcv~data 

1 rcv_a'^lc2' 

601 

611 

613 

[ 4 


2 

0 

0 


1 


0 , 

1 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

3 ] 

rcv~data 

1 rcv_acli2 

613 

624 

586 

( 3 


1 

t 

4 


4 


4 , 

4 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

3 ] 

snd_ack 

1 rcv_aclcl 

607 

600 

508 

( 1 


1 

0 

2 


2 


2 , 

2 


E 

-1 


E 

-1 


E 

-1 

.E 

-1 , 

-1 1 

snd_data 

snd_ack 

1 snd~data 

601 

583 

523 

524 

( 1 


0 

0 

2 


2 


2 , 

2 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

2 ] 

snd_ack 
i rcv_ackO 

524 

543 

543 

( 0 


0 

0 

2 


2 


2 , 

2 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

-1 ] 

3nd_daca 

1 snd_daCa 

544 

557 

557 

t 1 


0 

0 

3 


3 


2 , 

2 


E 

-1 


01 

2 


E 

-1 

,E 

-1 , 

-1 ] 

snd_data 

574 

574 

[ 2 


0 


4 


4 


2 , 

2 


E 

-1 


D1 

2 


D2 

3 

,E 

-1 , 

-1 ] 

rcv_daca 

I 3nd_data 

575 

587 

587 

( 3 


0 

0 

0 


1 


2 , 

2 


E 

-1 


D1 

2 


D2 

3 

,03 

4 . 

-1 ] 

rcv_data 

1 3nd_daca 

588 

602 

602 

( 4 


0 

t 

1 


2 


2 , 

2 


DO 

0 


D1 

2 


D2 

3 

,03 

4 , 

-1 ] 

rcv~daca 

rcv_data 

603 

614 

614 

( 4 


1 

0 

1 


2 


3 , 

3 


DO 

0 


E 

-1 


D2 

3 

,03 

4 , 

-1 1 

rcv_data 

626 

62 6 

( 4 


2 

0 

1 


2 


4 , 

4 


DO 

0 


E 

-1 


E 

-1 

,03 

4 , 

-1 ] 

rc.v_data 

639 

639 

( 4 


3 

0 

1 


2 


0 , 

1 


DO 

0 


E 

-1 


E 

-1 

, E 

-1 , 

-1 ] 

rev daca 

654 

654 

( 4 


4 

0 

1 


2 


1 , 

2 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

-1 ] 

snd.ack 

669 

669 

( 4 


0 

0 

1 


2 


1 , 

2 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

1 ] 

rcv_ackO 

10 

603 

( 3 


1 

0 

0 


1 


3 , 

3 


E 

-1 


E 

-1 


D2 

3 

,03 

4 , 

-1 1 

snd_data 

614 

615 

t 3 


2 

0 

0 


1 


4 , 

4 


E 

-1 


E 

-1 


E 

-1 

,03 

4 , 

-1 1 

rcv'daca 

1 snd~data 

615 

626 

627 

( 3 


3 

0 

0 


1 


0 , 

1 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

-1 1 

rcv_daca 
[ snd^data 

627 

639 

640 

( 3 


0 


0 


1 


0 , 

1 


E 

-1 


E 

-1 


• 

E 

-1 

,E 

-1 , 

0 ] 

snd~ack 

rcv~ackO 

640 

0 

655 

( 4 


0 

0 

1 


2 


0 , 

1 


DO 

0 


£ 

-1 


E 

-1 

,E 

-1 , 

0 ; 

snd~data 

1 rcv“ackl 

655 

1 

670 

( 4 


1 

0 

1 


2 


1 , 

2 


E 

-1 


£ 

-1 


E 

-1 

,E 

-1 , 

0 ] 

rcv_data 

rcv_ackZ 

670 

3 

588 

1 2 


1 

0 

4 


4 


3 , 

3 


E 

-1 


E 

-1 


D2 

3 

,E 

-1 , 

-1 1 

snd'ack 

snd_data 

669 

603 

604 

( 2 


2 

0 

4 


4 


4 , 

4 


E 

-1 


E 

-1 


£ 

-1 

,E 

-1 , 

-1 1 

rev^data 

snd~data 

604 

615 

616 

1 2 


0 

0 

4 


4 


4 , 

4 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

4 ] 

snd_ack 

ccv'ackO 

616 

597 

628 

( 3 


0 

0 

0 


1 


4 , 

4 


E 

-1 


£ 

-1 


E 

-1 

, 03 

4 , 

4 1 

snd data 
rcv_ackl 

628 

608 

641 

I 4 


0 

0 

1 


2 


4 , 

4 


DO 

0 


E 

- 1 


E 

-1 

, D3 

4 , 

4 ] 

snd dara 
rev daca 
rev ack2 

641 

642 
620 

656 

[ 4 


1 

0 

1 


2 


0 , 

1 


DO 

0 


£ 

” A 


E 

-1 

,E 

-1 , 

4 1 

rcv_data 

rev_aek2 

656 

632 

671 

[ 4 


2 

0 

1 


2 


1 , 

2 


£ 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

4 ] 

rev daca 
rcv_aek2 

671 

647 

642 

1 3 


1 

0 

0 


1 


0 , 

1 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

4 ] 

snd aek 
rev aekl 

669 

621 

575 

( 1 


? 

A . 

0 

3 


3 


3 , 

'3 


E 

•• L 


E 

-1 


E 

-1 

, E 

-1 , 

-1 ) 

snd daca 
snd aek 
snd_daca 

656 

640 

588 

589 

( 1 


0 


3 


3 


3 , 

3 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

3 1 

snd aek 
rev aekO 

589 

572 

605 

( 2 


0 


4 


4 


3 , 

3 


E 



E 

-1 


D2 

3 

, E 

-1 , 

3 1 

snd daca 
rev aekl 

605 

584 

617 

[ 3 


0 


0 


1 


3 , 

3 


E 

“ 1 


E 

A 


D2 

3 

, 03 

4 , 

3 1 

snd daca 
rev_daca 
rev aek2 

617 

618 
599 

629 

! 4 


0 




2 


3 , 

3 


DO 

a 


E 

-1 


D2 

3 

.03 

4 , 

3 ; 

snd daca 
rev daca 
rev ack3 

629 

630 
610 

643 

( 4 


1 


1 


2 


4 , 

4 


DO 

0 


E 

-1 


E 

-1 

, D3 

4 , 

3 1 

rev aaca 
rcv_ack3 

643 

623 

657 

! 4 


2 


1 


2 


0 , 

1 


DO 

0 


E 

-1 


E 

-1 

, E 

-1 , 

3 1 

rcv_daca 
rev aek3 

657 

635 


210 





672 [ 4 , 3 , 1 , 2 , 1 , 2 , E -1 

630 t 3 , 1 , 0 , 1 , 4 , 4 , E -1 

644 ( 3 . 2 , 0 . 1 , 0 , 1 , E -1 

618 ( 2 , 1 , 4 , 4 , 4 , 4 , E -1 

544 ( 2 . 0 . 3 , 3 , 2 , 2 , E -1 

558 ( 3 , 0 , 4 , 4 , 2 , 2 , E -1 

576 [ 4 , 0 , 0 , 1 , 2 , 2 . E -1 

590 : 4 . 1 , 0 , 1 , 3 , 3 . E -1 

606 [ 4 . 2 , 0 , 1 , 4 , 4 , E -1 

619 [ 4 , 3 , 0 , 1 , 0 , 1 , E -1 

577 [ 3 , 1 , 4 , 4 , 3 , 3 , E -1 

591 ( 3 , 2 , 4 , 4 , 4 , 4 , E -1 

559 ( 2 , 1 , 3 , 3 , 3 , 3 , E -1 

401 ( 3 , 1 , 0 , 4 , 3 , 2 , E -1 

415 ( 3 , 2 , 0 , 4 , 4 , 3 , E -1 

431 ( 3 , 3 , 0 , 4 , 0 , 4 , E -1 

443 ( 3 , 0 , 0 , 4 , 0 , 4 . E -1 

457 ( 0 , 0 , 0 , 4 , 0 , 4 , E -1 

468 ( 1 , 0 , 1 , 1 , 0 , 4 , E -1 

481 ! 2 , 0 , 2 , 2 , 0 , 4 , DO 1 

493 [ 3 , 0 , 3 , 3 , 0 , 4 , DO 1 

509 ( 4 , 0 , 4 , 4 , 0 , 4 , DO 1 

525 [ 4 , 1 , 4 , 4 , 1 , 1 , DO 1 

545 [ 4 , 2 , 4 , 4 , 2 , 2 , E -1 

560 ( 4 , 3 , 4 , 4 , 3 , 3 , E -1 

578 ( 4 , 4 , 4 , 4 , 4 , 4 , E -1 

592 ( 4 , 0 , 4 , 4 , 4 , 4 , E -1 

510 [ 3 , 1 , 3 , 3 , 1 , 1 , DO 1 

526 ( 3 , 2 , 3 , 3 , 2 , 2 , E -1 

546 [ 3 , 3 , 3 , 3 , 3 , 3 , F, -1 

561 [ 3 , 0 , 3 , 3 , 3 , 3 , £ -i 

579 ( 4 , 0 , 4 , 4 , 3 , 3 , E -1 

593 ( 4 , 1 , 4 , 4 , 4 , 4 , E -1 

494 ( 2 , 1 , 2 , 2 , 1 , 1 , DO 1 

511 ( 2 , 2 , 2 , 2 , 2 , 2 , E -1 

527 ( 2 , 0 , 2 , 2 , 2 , 2 , E -1 

547 ( 3 , 0 , 3 , 3 , 2 , 2 , E -1 











rcv_data 

672 


E 

-1 


E 

-1 

,E 

-1 , 

3 

rcv_aok3 

650 










snd ack 

669 


E 

-1 


E 

-1 

,03 

4 , 

3 

rcv_ac)c2 

611 










3nd_data 

643 










rcv_data 

644 


E 

-1 


E 

-1 

,E 

-1 , 

3 

rcv_ac)c2 

624 










3nd_data 

657 










snd_ac)c 

640 


E 

-1 


E 

-1 

.E 

-1 , 

3- 

rcv_ac)cl 

600 










snd_data 

630 










3nd_acic 

616 


D1 

2 


E 

-1 

,E 

-1 , 

2 

rcv_aclcl 

557 










snd_daca 

558 










rcv_data 

559 


D1 

2 


02 

3 

,E 

-1 , 

2 

rcv_aclc2 

574 










snd_data 

576 










rcv_data 

577 


01 

2 


02 

3 

.03 

4 , 

2 

rcv_ac)c3 

587 










rev data 

590 


E 

-1 


02 

3 

,03 

4 , 

2 

rcv_ack3 

603 










rcv_data 

606 


E 

-1 


E 

-1 

,03 

4 , 

2 

rcv_ack3 

615 










rcv_data 

619 


E 

-1 


E 

-1 

, E 

-1 , 

2 

rcv~ac)c3 

627 










snd_aclc 

607 


E 

-1 


02 

3 

,E 

-1 , 

2 

rcv_ack2 

588 










snd_daCa 

590 










rev data 

591 


E 

-1 


E 

-1 

, E 

-1 , 

2 

rcv_ack2 

604 










3nd~data 

606 










snd~ack 

583 


E 

-1 


E 

-1 

,E 

-1 , 

2 

rcv_ackl 

575 










snd~data 

577 










snd~acx 

556 


01 

3 


02 

4 

,E 

-1 , 

-1 

snd_data 

414 










rcv_data 

415 


E 

-1 


02 

4 

,E 

-1 , 

-1 

snd'data 

430 










rev^data 

431 


E 

-1 


E 

-1 

,E 

-1 , 

-1 

snd~data 

442 










snd_ack 

443 


c 

-1 


E 

-1 

,E 

-1 , 

0 

rcv~ackO 

457 










snd~data 

458 


E 

-1 


E 

-1 

,E 

-1 , 

-1 

snd_data 

468 


E 

-1 


E 

-1 

,03 

0 , 

-1 

snd~data 

481 










rcv~data 

482 


E 

-1 


E 

-1 

, 03 

0 , 

-1 

snd_data 

493 










rcv_data 

494 


01 

2 


r 

-1 

, 03 

0 , 

-1 

snd data 

509 










rcv_data 

510 


D1 

2 


02 

3 

, 03 

O' , 

-1 

rcv_data 

525 


01 

2 


02 

3 

,E 

-1 , 

-1 

rcv_data 

545 


01 

2 


02 

3 

, E 

-1 , 

-1 

rev data 

560 


E 

-1 


02 

3 

, E 

-1 , 

-1 

rev data 

578 


E 

-1 


E 

-1 

,E 

-1 , 

-1 

snd_ack 

592 


E 

-1 


E 

-1 

,E 

-1 , 

4 

rev_aekO 

597 


01 

2 


E 

-1 

, E 

-1 , 

-1 

snd_data 

525 










rcv_data 

526 


D1 

2 


E 

-1 

, E 

-1 , 

-1 

snd data 

545 










rev data 

546 


c 

" 1 


c 

-1 

£ 

-1 , 

-1 

snd_data 

560 










snd ack 

561 



-1 


E 

- 1 

, E 

■“ I , 

3 

rev aekO 

5'2 










snd data 

579 


£ 

” L 


02 

3 

, E 

-1 , 

3 

rev_aekl 

584 










rev data 

593 


E 

-1 


E 

-1 

,E 

-1 , 

3 

rev_aekl 

600 










snd aek 

592 


E 

-1 


£ 

-1 

, E 

-1 , 

-1 

snd_data 

510 










rev data 

511 


E 

” 1 . 


E 

-1 

,E 

-1 , 

-1 

snd data 

526 










snd ack 

527 


E 

-1 


E 

-1 

, E 

-1 , 

2 

rev ackO 

543 










snd data 

547 


01 

2 


E 

-1 

, E 

-1 , 

2 

rev ackl 

557 










snd data 

562 


211 





rev data 563 


562 

( 4 


0 


4 


4 , 

2 , 

2 


E 

-1 


01 

2 


02 

3 

,E 

-1 , 

2 ; 

1 rcv_ack2 
rcv~data 

574 

580 

580 

! 4 


1 


4 


4 , 

3 , 

3 


E 

-1 


E 

-1 


02 

3 

.E 

-1 , 

2 : 

1 rcv~ack2 
rcv~data 

588 

594 

594 

( 4 


2 


4 


4 , 

4 , 

4 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

2 1 

1 rcv_ack2 
snd_ack 

604 

592 

563 

( 3 


1 


3 


3 , 

3 . 

3 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

2 : 

1 rcv_ackl 
snd~data 
snd~ack 

575 

580 

561 

482 

( 1 


1 


1 


1 . 

1 . 

1 


E 

-1 


E 

-1 


E 

-1 

.E 

-1 , 

-1 

1 snd_data 
snd_ack 

494 

495 

495 

( 1 


0 


1 


1 . 

1 . 

1 


E 

-1 


e 

-1 


E 

-1 

,E 

-1 , 

1 

1 rcv_ackO 
3nd_data 

480 

512 

512 

( 2 


0 


2 


2 . 

1 , 

1 


00 

1 


E 

-1 


E 

-1 

.E 

-1 , 

1 

1 rcv_ackl 
snd~daca 
rcv~data 

492 

528 

529 

528 

[ 3 


0 


3 


3 , 

1 , 

1 


DO 

1 


01 

2 


E 

-1 

,E 

-1 , 

1 : 

1 rcv_ack2 
3nd_daca 
rcv~data 

507 

548 

549 

548 

I 4 


0 


4 


4 , 

1 , 

1 


00 

1 


01 

2 


02 

3 

,E 

-1 , 

1 

1 rcv_ack3 
rcv~data 

522 

564 

564 

( 4 


1 


4 


4 , 

2 , 

2 


E 

-1 


01 

2 


02 

3 

.E 

-1 , 

1 

1 rcv_ack3 
rcv_data 

541 

581 

581 

[ 4 


2 


4 


4 , 

3 , 

3 


E 

-1 


E 

-1 


02 

3 

,E 

-1 , 

1 

1 rcv~ack3 
rcv_data 

555 

595 

595 

( 4 


3 


4 


4 , 

4 , 

4 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

1 

1 rcv~ack3 
snd_ack 

571 
5 92 

549 

( 3 


1 


3 


3 , 

2 , 

2 


E 

-1 


01 

2 


E 

-1 

,E 

-1 , 

1 

1 rcv_ack2 
3nd_data 
rcv~data 

523 

564 

565 

565 

t 3 


2 


3 


3 , 

3 , 

3 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

1 : 

1 rcv_ack2 
snd daca 
snd'ack 

542 

581 

561 

529 

( 2 


1 


2 


2 , 

2 , 

2 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

1 : 

1 rcv_ackl 
snd~data 
snd~ack 

503 

549 

527 

458 

( 4 


0 


1 


1 , 

0 , 

4 


E -1 


E 

-1 


E 

-1 

, D3 

0 , 

0 

1 rcv~ackl 
rcv_data 

468 

469 

469 

1 4 


1 


1 


1 , 

1 , 

1 


E 

-1 


E 

-1 


E 

-1 

.E 

-1 , 

0 

1 rcv”ackl 
snd_ack 

482 

467 

383 

( 2 


1 


4 


3 , 

3 , 

2 


E 

-1 


01 

3 


E 

-1 

,E 

-1 , 

-1 

1 snd_data 
rcv_data 

401 

402 

402 

1 2 


2 


4 


3 , 

4 , 

3 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

-1 

1 snd_data 
snd^ack 

415 

416 

416 

( 2 


0 


4 


3 , 

4 , 

3 


E 

-1 


E 

-1 


E 

-1 

. E 

-1 , 

4 

1 rcv'ackO 
snd_data 

432 

433 

432 

( 0 


0 


4 


3 , 

4 , 

3 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

-1 

1 snd_data 

444 

444 

( 1 


0 


0 


4 , 

4 , 

3 


E -1- 


E 

* 1 


02 

4 

.E 

-1 , 

-1 

1 snd daca 
rev data 

459 

460 

459 

( 2 


0 


1 


1 , 

4 , 

3 


E -1 


E 

-1 


02 

4 

, 03 

0 , 

-1 

1 snd data 
rev data 

470 

471 

470 

( 3 


0 


2 


2 , 

4 , 

3 


00 1 


£ 

-1 


02 

4 

, 03 

0 , 

-1 

snd data 
rev data 

483 

484 

483 

[ 4 


0 


3 


3 , 

4 , 

3 


00 1 


01 

2 


02 

4 

, 03 

0 , 

* 1 

rev data 

496 

496 

[ 4 


1 


3 


3 , 

0 , 

4 


00 1 


o : 

2 


E 

-1 

, 03 

0 , 

-1 1 

rcv_data 

513 

513 

: 4 


2 


3 


3 , 

1 , 



00 1 


01 

2 


E 

-1 

. E 

- 1 , 

-1 1 

rcv_data 

530 

530 

[ 4 


3 


3 


3 , 

2 , 

2 


E -1 


01 

2 


E 

-1 

, E 

-1 , 

-1 i 

rev data 

550 

550 

: 4 


4 


3 


3 , 

3 , 

3 


E -1 


E 

-1 


E 

-1 

. E 

-1 , 

-1 : 

snd ack 

566 

566 

( 4 


0 


3 


3 , 

3 , 

3 


E 

-1 


E 

“ 1 


E 

-1 

, E 

-1 , 

3 ] 

rev ackO 

572 

484 

( 3 


1 


2 


2 , 

0 , 

4 


00 1 


E 

• 1 


E 

-1 

,03 

0 , 

-1 i 

snd data 
rev data 

496 

497 

497 

( 3 


2 


2 


2 , 

L f 

1 


00 

1 


E 

- ^ 


£ 

-1 

, E 

-1 , 

-1 1 

snd_data 

rcv_data 

513 

514 

514 

[ 3 


3 


2 


2 , 

2 , 

2 


E 

-1 


E 

-1 


E 

-1 

, E 

-1 , 

-1 ] 

snd data 
snd ack 

530 

531 

531 

[ 3 


0 


2 


2 , 

2 , 

2 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

2 1 

rcv_ackO 

snd_data 

543 

551 

551 

( 4 


0 


3 


3 , 

2 , 

2 


E -1 


01 

2 


E 

-1 

, E 

-1 , 

2 1 

rcv_ackl 
rev data 

557 

567 

567 

[ 4 


1 


3 


3 , 

3 , 

3 


E -! 



“ L 


E 

-1 

, E 

-1 , 

2 i 

rev ackl 
snd ack 

575 

566 

471 

[ 2 


1 


1 



0 , 

4 


E -1 





E 

-1 

, 03 

0 , 

~ 1 i 

snd data 
rev data 

484 

485 

485 

1 2 


2 


1 


1 , 

1 , 

1 


£ “I 


E 

- T 


E 

-1 

, E 

-1 , 

■“ 1 1 

snd data 

497 


snd ack 498 


212 





498 ( 2 , 0 , 1 . 1 , 1 , 1 . E -1 , E 

515 ( 3 , 0 , 2 . 2 , 1 , 1 , DO 1 . E 

532 t 4 , 0 . 3 , 3 , 1 , 1 , DO 1 . D1 

552 [ 4 , 1 , 3 . 3 , 2 , 2 , E -1 , D1 

568 ( 4 , 2 , 3 . 3 , 3 , 3 , E -1 , E 

533 ( 3 . 1 , 2 , 2 , 2 , 2 , E -1 , E 

460 ( 1 , 1 , 0 , 4 , 0 . 4 , E -1 . E 

472 ( 1 , 0 , 0 , 4 , 0 , 4 , E -1 . E 

486 [ 2 , 0 , 1 , 1 , 0 , 4 , E -1 . E 

499 [ 3 . 0 . 2 , 2 , 0 , 4 , DO 1 . E 

516 ( 4 , 0 , 3 , 3 , 0 , 4 , DO 1 , 01 

534 [ 4 , 1 , 3 , 3 , 1 , 1 , DO 1 , 01 

553 I 4 , 2 , 3 , 3 , 2 , 2 , E -1 , D1 

569 [ 4 , 3 , 3 , 3 . 3 , 3 , E -1 , E 

517 ( 3 , 1 , 2 , 2 , 1 . 1 , DO 1 . E 

535 ( 3 , 2 , 2 , 2 , 2 , 2 , E -1 < E 

500 ! 2 , 1 , 1 , 1 , 1 , 1 , E -1 , E 

433 [ 3 , 0 , 0 , 4 , 4 , 3 , E -1 , E 

445 I 4 , 0 , 1 , 1 , 11 , 3 , E -1 , E 

461 I 4 , 1 , 1 , 1 , 0 , 4 , E -1 , E 

473 ( 4 , 2 , 1 , 1 , 1 , 1 , E -1 , E 

446 ( 3 , 1 , 0 , 4 , 0 , 4 , E -I , E 

368 ( 1 , 1 , 3 , 2 , 3 , 2 , E -1 , E 

384 ( 1 , 0 , 3 , 2 , 3 , 2 , £ -1 , E 

403 ( 0 , 0 , 3 , 2 , 3 , 2 , E -1 , E 

417 ! 1 , 0 , 4 , 3 , 3 , 2 , E -1 , 01 

434 ( 2 , 0 , 0 , 4 , 3 , 2 , E -1 , 01 

447 ( 3 , 0 , 1 , 1 , 3 , 2 , E -1 , 01 

462 1 4 , 0 , 2 , 2 , 3 , 2 , DO 1 , 01 

474 [ 4 , 1 , 2 , 2 , 4 , 3 , 00 1 , E 

487 1 4 , 2 , 2 , 2 , 0 , 4 , DO 1 , E 

5Q1 [ 4 , 3 , 2 , 2 , 1 , 1 , DO 1 , E 

518 ( 4 , 4 , 2 , 2 , 2 , 2 , E -1 , E 

536 ( 4 , 0 , 2 , 2 , 2 , 2 , E -1 , E 

463 ( 3 , 1 , 1 , 1 , 4 , 3 , E -1 , E 

475 ( 3 , 2 , 1 , 1 , 0 , 4 , E -1 , E 

488 I 3 , 3 , 1 , 1 , 1 , 1 , E -1 , E 


-1 


E 

-1 

,E 

-1 , 

1 1 

rcv_aclcO 

480 








snd_daca 

515 

-1 


E 

-1 

,E 

-1 , 

1 1 

rcv_ackl 

492 








snd_data 

532 








rcv_data 

533 

2 


E 

-1 

,E 

-1 , 

1 1 

rcv~aclc2 

507 







• 

rcv_data 

552 

2 


E 

-1 

,E 

-1 , 

1 1 

rcv_ aclc2 

523 








rcv^data 

568 

-1 


E 

-1 

,E 

-1 , 

1 1 

rcv~ack2 

542 








snd_ack 

566 

-1 


E 

-1 

,E 

-1 , 

1 ] 

ccv_ackl 

508 








snd~data 

552 








snd_ack 

531 

-1 


E 

-1 

,E 

-1 , 

-1 1 

snd~data 

471 








snd_ack 

472 

-1 


E 

-1 

,E 

-1 , 

0 ] 

rcv_ackO 

457 








snd_data 

486 

-1 


E 

-1 

,D3 

0 , 

0 ] 

rev ackl 

4 68 








snd data 

499 








rcv_data 

500 

-1 


E 

-1 

,03 

0 , 

0 ] 

rcv_ack2 

481 








snd_data 

516 








rcv_data 

517 

2 


E 

-1 

.03 

0 , 

0 ] 

rcv~ack3 

493 








rcv_data 

534 

2 


E 

-1 

,E 

-1 , 

0 1 

rcv_ack3 

510 








rev data 

553 

2 


E 

-1 

,E 

-1 , 

0 ] 

rcv_ack3 

526 








rcv_data 

569 

-1 


E 

-1 

0 

-1 , 

0 1 

rcv~ack3 

546 








snd ack 

566 

-1 


E 

-1 

,E 

-1 , 

0 ] 

rcv~ack2 

494 








snd'data 

534 








rcv~data 

535 

-1 


E 

-1 

,E 

-1 , 

0 1 

rcv~ack2 

511 








snd~data 

553 








snd_ack 

531 

-1 


E 

-1 

,E 

-1 , 

0 1 

rcv~ackl 

482 








snd~daca 

517 







0 

snd_ack 

498 

-1 


D2 

4 

,E 

-1 , 

4 ] 

rcv~ackl 

444 








snd_data 

445 








rcv~data 

446 

-1 


02 

4 

,03 

0 , 

4 1 

ccv~ack2 

459 








rcv_data 

461 

-1 


E 

-1 

, 03 

0 , 

4 1 

rcv_ack2 

471 








rcv~daca 

473 

-1 


E 

-1 

, E 

- i , 

4 1 

rcv_ack2 

485 








snd_ack 

467 

-1 


E 

-1 

, E 

-1 , 

4 1 

rcv_ackl 

460 








snd_data 

461 








snd ack 

443 

-1 


E 

-1 

,E 

-1 , 

-1 1 

snd_data 

383 








snd ack 

384 

-1 


E 

-1 

,E 

-1 , 

3 i 

rcv_ackO 

403 








snd_data 

404 

-1 


E 

-1 

, E 

-1 , 

-1 I 

snd~data 

417 

3 


E 

-1 

,E 

-1 , 

-1 1 

snd_data 

434 








revdata 

435 

3 


02 

4 

, E 

-1 , 

rl : 

snd data 

447 








rev data 

448 

3 


02 

4 

, D3 

0 , 

“ 1 i 

snd data 

462 








rev data 

463 

3 


D2 

4 

,03 

0 , 

-1 1 

rev data 

474 

-1 


02 

4 

,03 

0 , 

-1 1 

rev data 

487 

-1 


E 

-1 

,03 

0 , 

-1 ) 

rev_data 

501 

-1 


E 

-1 

.E 

-1 , 

-1 1 

rev_data 

518 

-1 


E 

-1 

,E 

-1 , 

-1 1 

snd_aek 

536 

-1 


E 

-1 

, E 

-1 , 

2 ) 

rev aekO 

543 

-1 


D2 

4 

,03 

0 , 

-1 ] 

snd data 

474 








rev data 

475 

-1 


E 

-1 

,03 

0 , 

-1 ] 

snd data 

487 








rev data 

488 

-1 


E 

-1 

, E 

-1 , 

-1 I 

snd_data 

501 








snd aek 

502 


213 






502 ( 3 , 0 , 1 . 1 , 1 , 1 , E -1 . 

519 t 4 , 0 , 2 . 2 , 1 , 1 , DO 1 , 

537 [ 4 , 1 , 2 , 2 , 2 , 2 , E -1 , 

448 ( 2 , 1 , 0 , 4 , 4 , 3 . E -1 , 

464 [ 2 , 2 , 0 , 4 , 0 , 4 , E -1 , 

476 t 2 , 0 , 0 , 4 , 0 , 4 , E -1 , 

489 ( 3 , 0 , 1 . 1 , 0 , 4 , E -1 . 

503 [ 4 , 0 . 2 . 2 , 0 , 4 , DO 1 , 

520 [ 4 , 1 , 2 . 2 . 1 , 1 , DO 1 , 

538 [ 4 , 2 , 2 . 2 , 2 , 2 , E -1 , 

504 [ 3 , 1 . 1 , 1 , 1 , 1 , E -1 . 

435 [ 1 , 1 , 4 . 3 . 4 , 3 , E -1 , 

449 i 1 , 0 , 4 , 3 , 4 , 3 , E -1 , 

465 [ 2 , 0 , 0 , 4 , 4 , 3 , E -1 , 

477 ( 3 , 0 , 1 , 1 , 4 , 3 , E -1 , 

490 ( 4 , 0 , 2 , 2 , 4 , 3 , DO 1 , 

505 ( 4 , 1 , 2 , 2 , 0*, 4 , DO 1 , 

521 ( 4 , 2 , 2 , 2 , 1 , 1 , DO 1 , 

539 ( 4 , 3 , 2 , 2 , 2 , 2 , E -1 , 

491 ( 3 , 1 , 1 , 1 , 0 , 4 , E -1 , 

506 ( 3 , 2 , 1 , 1 , 1 , 1 , E -1 , 

478 ( 2 , 1 , 0 , 4 . 0 , 4 , E -1 , 

404 (2,0,4, , 3 , 2 , E -I , 

418 [ 3 , 0 , 0 , 4 , 3 , 2 , E -I , 

436 ( 4 , 0 , 1 , 1 , 3 , 2 , E -1 , 

450 ( 4 , 1 , 1 , 1 , 4 , 3 , E -1 , 

466 ( 4 , 2 , 1 , 1 , 0 , 4 , E -1 , 

479 ( 4 , 3 , 1 , 1 , 1 , 1 , E -1 , 

437 ( 3 , 1 , 0 , 4 , 4 , 3 , E -1 , 

451 ( 3 , 2 , 0 , 4 , 0 , 4 , E -1 , 

419 [ 2 , 1 , 4 , 3 , 4 , 3 , E -I , 

261 [ 3 , 1 , 1 , 4 , 4 , 2 , E -1 , 


E 

-1 

0 

E 

-1 


-1 

0 

1 ] 

ccv_ackO 

480 










3nel_data 

519 

E 

-1 

0 

E 

-1 

,E 

-1 

0 

1 ] 

rcv~ac)cl 

492 










rcv_data 

537 

E 

-1 

0 

E 

-1 

,E 

-1 

0 

1 ] 

rcv_aclcl 

508 










snd~ack 

536 

E 

-1 

0 

02 

*4 

,E 

-1 


-1 1 

snd~data 

463 










rcv_data 

464 

E 

-1 

0 

E 

-1 

,E 

-1 


-1 1 

snd data 

475 










snd_ack 

476 

E 

-1 

0 

E 

-1 

,E 

-1 

0 

0 1 

rcv_ackO 

457 










snd data 

489 

E 

-1 

0 

E 

-1 

.03 

0 

0 

0 ! 

rcv_ackl 

468 










snd_daCa 

503 










rcv~daCa 

504 

E 

-1 

0 

E 

-1 

,03 

0 

0 

0 ] 

rcv_ack2 

481 










rev data 

520 

E 

-1 

0 

E 

-1 

,E 

-1 

0 

0 ] 

rcv_ack2 

494 










rcv_data 

538 

E 

-1 

0 

E 

-1 

,E 

-1 

0 

0 ] 

rcv_ack2 

511 










snd_ack 

536 

E 

-1 

0 

E 

-1 

.E 

-1 

0 

3 1 

rcv_ackl 

482 










snd_data 

520 










snd_ack 

502 

E 

-1 

0 

E 

-1 

,E 

-1 

0 

-1 ] 

snd_data 

448 










5nd_ack 

449 

E 

-1 

t 

E 

-1 

,E 

-1 

0 

4 1 

rcv_ackO 

432 










snd_dara 

465 

E 

-1 

0 

D2 

4 

,E 

-1 

0 

4 ] 

rev aekl 

444 










snd data 

477 










rev_data 

478 

E 

-1 

0 

02 

4 

,03 

0 

0 

4 ] 

rcv~aek2 

459 










snd~data 

4 90 










rev“data 

491 

E 

-1 

0 

D2 

4 

,03 

0 

0 

4 1 

rcv~aek3 

470 










rcv_data 

505 

E 

-1 

t 

E 

-1 

, 03 

0 

0 

4 i 

rcv~aek3 

484 










rcv~data 

521 

E 

-1 

0 

E 

-1 

,E 

-1 

0 

4 : 

rcv~aek3 

497 










rcv~data 

539 

E 

-1 

0 

E 

-i 

, s 

-1 

0 

4 i 

rcv_ack3 

514 










snd^ack 

536 

E 

“ 1 

0 

E 

-1 

, 03 

0 

0 

4 ; 

rcv2aek2 

471 










snd_data 

505 










rcv~data 

506 

E 

-1 


E 

-1 

, E 

-1 

0 

4 i 

rcv_ack2 

485 










snd_daca 

521 










snd_ack 

502 

E 

-1 


E 

-1 

, E 

-1 


4 ; 

rcv_ackl 

460 










snd data 

491 










snd aek 

476 

D1 

3 


E 

-1 

, E 

-1 


3 ; 

rev aekl 

417 










3nd_data 

418 










rev data 

419 

01 

3 


02 

4 

, E 

-1 


3 ] 

rev aek2 

434 










snd data 

436 










rev data 

437 

D1 

3 


02 

4 

, 03 

0 


3 ] 

rev aek3 

447 










rev_data 

450 

E 

-1 


02 

4 

, 03 

0 


3 ] 

rcv~aek3 

463 










rev data 

466 


-1 


E 

-1 

, 03 

0 


3 ; 

rev aek3 

475 










rev_data 

479 

£ 

■ 1 


E 

-1 

,E 

-1 


3 1 

rev~aek3 

488 










snd_aek 

467 

E 

-1 


02 

4 

,E 

-1 


3 : 

rcv_aek2 

448 










snd_data 

450 










rcv_data 

451 

E 

-1 


E 

-1 

, E 

-1 


3 : 

rcv_aek2 

464 










snd data 

466 










snd aek 

443 

E 

-1 


F 

-1 

F 

-1 


3 ; 

rcv_aekl 

435 










snd_data 

437 










snd_aek 

416 

01 

4 


02 

0 

, E 

-1 


-1 : 

snd data 

274 










rev data 

275 


214 





275 [ 3 . 2 , 1 , 4 , 0 , 3 , E -1 , E -1 . 02 0 ,E -1,-1] snd_data 290 

rcv_data 291 

291 ( 3 , 3 , 1 , 4 , 1 , 4 , E -1 . E -1 , E -1 ,E -1,-1] snd_data 302 

snd_aclc 303 

303 ( 3 , 0 , 1 , 4 . 1 , 4 , E -1 , E -1 , E -1 ,E -1 , 1 ] rcv_aclc0 317 

snd data 318 

317 ( 0 , 0 , 1 , 4 , 1 , 4 , E -1 , E -1 , E -1 ,E -1,-1] snd~data 328 

328 [ 1 , 0 . 2 . 1 , 1 , 4 , E -1 , E -1 , E -1 ,D3 1,-1] snd_data 341 

rcv~data 342 

341 ( 2 , 0 , 3 , 2 , 1 , 4 , DO 2 , E -1 . E -1 ,D3 1,-1] snd~data 353 

rcv_data 354 

353 ( 3 , 0 , 4 , 3 , 1 , 4 , DO 2 . D1 3 , E -1 ,D3 1,-1] snd_data 369 

rcv~data 370 

369 I <1 , 0 . 0 , 4 , 1 , 4 , DO 2 . 01 3 , D2 4 , D3 1,-1] rcv_data 385 

385 ( 4 . 1 . 0 , 4 , 2 , 1 , DO 2 , D1 3 , D2 4 ,E -1,-1] rcv_daCa 405 

405 [ 4 , 2 , 0 , 4 , 3 , 2 , E -1 , D1 3 , D2 4 ,E -1,-1] rcv_data 420 

420 [ 4 , 3 , 0 , 4 , 4 , 3 , E -1 , E -1 , D2 4 ,E -1 , -1 ] rev data 438 

438 [ 4 , 4 , 0 , 4 , 0 , 4 , E -1 , E -1 , E -1 ,E -1,-1] snd~ac)c 452 

452 ( 4 , 0 , 0 . 4 , 0 , 4 , E -1 , E -1 . E -1 ,E -1 , 0 ] rcv_acJcO 457 

370 ( 3 , 1 , 4 , 3 , 2 , 1 , DO 2 , 01 3 , E -1 ,E -1,-1] snd_data 385 

rcv_data 386 

386 ( 3 , 2 . 4 . 3 . 3 , 2 , E -1 . D1 3 , E -1 .E -1,-1] snd_data 405 

rev data 406 

406 ( 3 . 3 . 4 . 3 . 4 , 3 , E -1 , E -1 , E -1 ,E -1,-1] snd_data 420 

snd acic 421 

421 ( 3 , 0 , 4 , 3 , 4 , 3 , E -1 , E -1 , E -1 ,E -1 , 4 ] rcv'ackO 432 

snd~data 439 

439 ( 4 , 0 , 0 , 4 , 4 , 3 . E -1 , E -1 , D2 4 ,E -1 , 4 ] rcv_aclcl 444 

rev data 453 

453 ( 4 , 1 , 0 , 4 , 0 , 4 . E -1 , E -1 , E -1 ,E -1 , 4 ] rev'aeki 460 

snd~aelc 452 

354 ( 2 , 1 , 3 , 2 , 2 , 1 , DO 2 , E -1 , E -1 ,E -1,-1] snd_data 370 

rev data 371 

371 ( 2 , 2 , 3 , 2 , 3 , 2 , E -1 , E -1 , E -1 ,E -1,-1] snd'data 386 

snd~ae)c 387 

387 ( 2 , 0 , 3 , 2 , 3 , 2 , E -1 , E -1 , E -1 ,E -1 , .3 1 XCV^acItO 403 

snd_data 407 

407 ( 3 , 0 , 4 , 3 , 3 , 2 , E -1 , 01 3 , E -1 ,E -1 , 3 ] rev_ae)cl 417 

snd~data 422 
rcv~data 423 

422 ( 4 , 0 , 0 , 4 , 3 , 2 , E -1 , 01 3 , D2 4 ,E -1 , 3 ] rev;;;ae)c2 434 

rev~data 440 

440 ( 4 , 1 , 0 , 4 , 4 , 3 , E -1 , E -1 , D2 4 ,E -1 , 3 ] rcv~acic2 448 

rcv~data 454 

454 ( 4 , 2 , 0 , 4 , 0 , 4 , E -1 , E -1 , E -1 ,E -1 , 3 ] rcv_ae)c2 464 

snd ack 452 

423 ( 3 , 1 , 4 , 3 , 4 , 3 , E -1 , E -1 , E -1 ,E -1 , 3 ] rcv^aclcl 435 

snd_data 440 
snd acIc 421 

342 ( 1 , 1 , 2 , 1 , 2 , 1 , E -1 , E -1 , E -1 ,E -1,-1] snd'data 354 

snd_ack 355 

355 : 1 , 0 , 2 , 1 , 2 , 1 , E -1 , E -1 , E -1 ,E -1 , 2 1 rcv_ackO 340 

snd_data 372 

372 [ 2 , 0 , 3 , 2 , 2 , 1 , DO 2 , E -1 , E -1 ,E -1 , 2 ] rcv_aelcl 352 

snd_data 388 
rcv_data 389 

388 [ 3 , 0 , 4 , 3 , 2 , 1 , DO 2 , D1 3 , E -1 ,E -1 , 2 ] rcv_ae)c2 367 

snd_data 408 
rcv_data 409 

408 [ 4 , 0 , 0 , 4 , 2 , 1 , 00 2 , D1 3 , D2 4 ,E -1 , 2 1 rcv_ack3 382 

rcv_da':a 42 4 

424 : 4 , 1 , 0 , 4 , 3 , 2 , E -1 , 01 3 , D2 4 ,E -1 , 2 ) rcv_ac)c3 401 

rcv_data 441 

441 ( 4 , 2 , 0 , 4 , 4 , 3 , E -1 , E -1 , D2 4 ,E -1 , 2 ] rev_aelc3 415 

rcv_data 455 

455 ( 4 , 3 , 0 , 4 , 0 , 4 , E -1 , E -1 , E -1 ,E -1 , 2 ] rcv_ack3 431 

snd_ac)c 452 

409 [ 3 , 1 , 4 , 3 , 3 , 2 , E -1 , Di 3 , E -1 ,E -1 , 2 ] rcv_ack2 383 

snd_data 424 
rcv_data 425 

425 ( 3 , 2 , 4 , 3 , 4 , 3 , E -1 , E -1 , E -1 ,E -1 , 2 i rcv_ack2 402 

snd_data 441 
snd_ack 421 

389 ( 2 , 1 , 3 , 2 , 3 , 2 , E -1 , E -1 , E -1 ,E -1 , 2 ] rcv_ackl 368 

snd_data 409 
snd ack 387 


215 





318 ( 4 , 0 , 2 , 1 , 1 , 4 , E -1 

329 [ 4 , 1 , 2 , 1 , 2 . 1 , E -1 

243 ( 2 . 1 , 0 , 3 , 4 , 2 , E -1 

262 ( 2 , 2 , 0 , 3 . 0 , 3 , E -1 

276 ( 2 , 0 , 0 , 3 , 0 , 3 , E -1 

292 [ 0 , 0 , 0 , 3 , 0 , 3 . E -1 

304 ( 1 . 0 , 1 . 4 , 0 , 3 , E -1 

319 ( 2 , 0 . 2 . 1 . 0 , 3 , E -1 

330 [ 3 , 0 , 3 . 2 . 0 . 3 . DO 2 

343 [ 4 . 0 , 4 , 3 , 0 , 3 , DO 2 

356 ( 4 . 1 , 4 . 3 , 1 , 4 , DO 2 

373 ( 4 . 2 . 4 , 3 , 2 , 1 , DO 2 

390 [ 4 . 3 . 4 , 3 , 3 , 2 . E -1 

410 [ 4 , 4 . 4 , 3 , 4 , 3 , E -1 

426 ( 4 , 0 . 4 , 3 . 4 . 3 , E -1 

344 ( 3 , 1 , 3 , 2 , 1 , 4 . DO 2 

357 [ 3 , 2 . 3 , 2 , 2 , 1 , DO 2 

374 I 3 . 3 . 3 , 2 , 3 , 2 , E -1 

391 ( 3 , 0 . 3 . 2 , 3 , 2 , E -1 

411 ( 4 , 0 . 4 , 3 , 3 , 2 , E -1 

427 ( 4 , 1 , 4 , 3 , 4 , 3 , E -1 

331 ( 2 , 1 . 2 , 1 , 1 , 4 , E -1 

345 ( 2 , 2 . 2 , 1 , 2 , 1 , E -1 

358 ( 2 , 0 , 2 , 1 , 2 , 1 , E -1 

375 ( 3 , 0 , 3 , 2 , 2 , 1 , DO 2 

392 ( 4 , 0 , 4 , 3 , 2 , 1 , DO 2 

412 ( 4 , 1 , 4 , 3 , 3 , 2 , E -1 

428 1 4 , 2 , 4 , 3 , 4 , 3 , E -1 

393 ( 3 , 1 , 3 , 2 , 3 , 2 , E -1 

320 ( 1 , 1 , 1 , 4 , 1 , 4 , E -1 

332 I 1 , 0 , 1 , 4 , 1 , 4 , E -1 

346 : 2 , 0 , 2 , 1 , 1 , 4 , E -1 

359 ( 3 , 0 , 3 , 2 , 1 , 4 , DO 2 

376 : 4 , 0 , 4 , 3 , 1 , 4 , DO 2 

394 I 4 , 1 , 4 , 3 , 2 , 1 , DO 2 

413 1 4 , 2 , 4 , 3 , 3 , 2 , E -1 

429 : 4 , 3 , 4 , 3 , 4 , 3 , E -1 

377 [ 3 , 1 , 3 , 2 , 2 , 1 , DO 2 

395 ( 3 , 2 , 3 , 2 , 3 , 2 , E -1 



E 

-1 


E 

-1 

,D3 

1 


1 1 

rcv_ac)cl 

328 











rcv_data 

329 


E 

-1 


E 

-1 

.E 

-1 


1 1 

ccv_aclcl 

342 











snd_aclc 

327 


Dl 

4 


E 

-1 

.E 

-1 


-1 1 

snd_daca 

261 











rcv_data 

262 


E 

-1 


E 

-1 

.E 

-1 


-1 ] 

snd_daca 

275 











snd_ack 

276 


E 

-1 


E 

-1 

,E 

-1 


0 ) 

rcv_aclcO 

292 











snd~daca 

293 


E 

-1 


E 

-1 

,E 

-1 


-1 ) 

snd_data 

304 


E 

-1 


D2 

0 

.E 

-1 


-1 1 

snd_daca 

319 











rcv“data 

320 


E 

-1 


D2 

0 

,D3 

1 


-1 1 

snd~data 

330 











rcv_data 

331 


E 

-1 


D2 

0 

,D3 

1 


-1 ) 

snd_data 

343 











rcv_data 

344 


Dl 

3 


D2 

0 

.D3 

1 


-1 1 

rcv_data 

356 


Dl 

3 


E 

-1 

.D3 

1 


-1 ] 

ccv_data 

373 


Dl 

3 


E 

-1 

.E 

-1 


-1 ] 

rcv_daca 

390 


Dl 

3 


E 

-1 

.E 

-1 


-1 1 

ccv~data 

410 


E 

-1 


E 

-1 

,E 

-1 


-1 ] 

snd_aclc 

426 


E 

-1 


E 

-1 

,E 

-1 


4 1 

rcv_ackO 

432 


E 

-1 


E 

-1 

,D3 

1 


-1 1 

snd_data 

356 











rcv_data 

357 


E 

-1 


E 

-1 

.E 

-1 


-1 ] 

snd_daca 

373 











rcv_data 

374 


E 

-1 


E 

-1 

,E 

-1 


-1 1 

snd~data 

390 











snd_ac)c 

391 


E 

-1 


E 

-1 

,E 

-1 


3 1 

rcv_aclcO 

403 











snd_data 

411 


Dl 

3 


£ 

-1 

,E 

-1 


3 ! 

rcv_ackl 

417 











rcv_data 

427 


E 

-1 


E 

-1 

, E 

-1 


3 ] 

rcv~ackl 

435 











snd~ack 

426 


E 

-1 


E 

-1 

, D3 

1 


-1 1 

snd~data 

344 











rcv^data 

345 


E 

-1 


E 

-1 

,£■ 

-r 


-1 1 

snd~data 

357 











snd^ack 

358 


E 

-1 


E 

-1 

,E 

-1 


2 ] 

rcv“ackO 

340 











snd~data 

375 


E 

-1 


E 

-1 

,E 

-1 


2 1 

rcv~ackl 

352 











snd~data 

392 











rcv'data 

393 


Dl 

3 


E 

-1 

,E 

-1 


2 1 

rcv_ack2 

367 











rcv~daca 

412 


Dl 

3 


E 

-1 

,E 

-1 


2 ) 

rcv~ack2 

383 











rcv~data 

428 


E 

-1 


E 

-1 

.E 

-1 


2 ) 

rcv~ack2 

402 











snd_ack 

426 


E 

-1 


E 

-1 

. E 

-1 


2 1 

rcv_ackl 

368 











snd_daca 

412 











snd_ack 

391 


E 

— ^ 


E 

-1 

,E 

-1 


-1 1 

snd_data 

331 











snd ack 

332 


E 

-1 


E 

-1 

, E 

-1 


1 1 

rcv_ackO 

317 











snd_data 

346 


E 

-1 


E 

-1 

, D3 

1 


1 1 

rcv_ackl 

328 











snd_daca 

359 











rcv_data 

360 


E 

* 1 


E 

-1 

, D3 

1 


1 1 

rcv_ack2 

341 











snd daca 

376 











rev data 

377 


Dl 

3 


£ 

-1 

, D3 

1 


1 1 

ccv_ack3 

353 











rcv_data 

394 


Dl 

3 


£ 

-1 

, E 



1 1 

rcv_ack3 

370 











rcv_daca 

413 


Dl 

3 


E 

-1 

,E 

-1 


1 1 

rcv_ack3 

386 











rcv_data 

429 


E 

-1 


E 

-1 

, E 

- 1 


1 1 

rcv_ack3 

406 











snd ack 

426 


c 

-1 


E 

-1 

. E 

-1 


1 ) 

rcv_ack2 

354 











snd_data 

394 











rcv_daca 

395 


E 

-1 


E 

-1 

,E 

-1 


1 1 

rev ack2 

371 











snd data 

413 


« 




216 







360 

( 2 


1 


2 


1 , 

2 , 

1 


Z 

-1 


E 

-1 

0 

z 

-1 

.E 

-1 , 

1 ] 

snd_ac)c 

rcv~ackl 

391 

342 

293 

( 3 


0 


1 

t 

4 , 

0 , 

3 


Z 

-1 


E 

-1 

0 

D2 

0 


-1 , 

0 i 

snd_data 

snd~acli 

rov~ac)cl 

377 

358 

304 

305 

( 4 


0 


2 

0 

1 , 

0 , 

3 


Z 

-1 


E 

-1 

0 

02 

0 

,03 

1 , 

0 ] 

3nd_data 

rcv~data 

rcv_ack2 

305 

306 
319 

321 

1 4 


1 


2 

0 

1 . 

1 , 

4 


E 

-1 


E 

-1 

0 

£ 

-1 

,03 

1 , 

0 ] 

rcv_data 

rcv_ac)c2 

321 

331 

333 

: 4 


2 


2 

0 

1 , 

2 . 

1 


E 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

0 1 

rcv_data 

rcv_aclc2 

333 

345 

306 

1 3 


1 


1 

0 

4 . 

1 . 

4 


E 

-1 


£ 

-1 

0 

E 

-1 

,E 

-1 , 

0 ] 

snd^aclc 

rcv_aclcl 

327 

320 

228 

[ 1 


1 


4 

0 

2 , 

4 . 

2 


E 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

-1 1 

snd_daca 

snd_aclc 

3nd_data 

321 

303 

243 

244 

( 1 


0 


4 

0 

2 , 

4 , 

2 


E 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

4 1 

snd_ac]c 

rcv_ackO 

244 

263 

263 

[ 0 


0 


4 

0 

2 , 

4 , 

2 


£ 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

-1 ' 

snd_daCa 

snd_data 

264 

277 

277 

[ 1 


0 


0 

0 

3 , 

4 , 

2 


E 

-1 


D1 

4' 

0 

E 

-1 

,E 

-1 , 

-1 : 

snd~daCa 

294 

294 

( 2 


0 


1 

0 

4 , 

4 , 

2 


E 

-1 


D1 

4 

0 

D2 

0 

,E 

-1 , 

-1 ; 

rcv_data 

snd~daca 

295 

307 

307 

( 3 


0 


2 


1 , 

4 , 

2 


E 

-1 


D1 

4 

0 

D2 

0 

, 03 

1 , 

-1 : 

rcv~data 

snd_daC.a 

308 

322 

322 

( 4 


0 


3 

0 

2 , 

4 , 

2 


DO 

2 


D1 

4 

0 

D2 

0 

, 03 

1 , 

-1 : 

rev dara 
rcv_data 

323 

334 

334 

( 4 


1 


3 

0 

2 , 

0 , 

3 


DO 

2 


E 

-1 

0 

D2 

0 

, 03 

1 , 

-1 : 

rcv_data 

347 

347 

( 4 


2 


3 

0 

2 , 

1 , 

4 


DO 

2 


E 

-1 

0 

E 

-1 

,03 

1 , 

-1 : 

rcv_data 

361 

361 

( 4 


3 


3 

0 

2 , 

2 , 

1 


DO 

2 


E 

-1 

0 

E 

-1 

,E 

-1 , 

-1 ; 

rcv_data 

378 

378 

( 4 


4 


3 

0 

2 , 

3 , 

2 


E 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

-1 : 

snd_ac)t 

396 

396 

( 4 


0 


3 

0 

2 , 

3 , 

2 


E 

-1 


E 

-1 

0 

£ 

-1 

,E 

-1 , 

3 ; 

rcv~aclc0 

403 

323 

( 3 


1 


2 

0 

1 , 

0 , 

3 


E 

-1 


E 

-1 

0 

D2 

0 

,03 

1 , 

-1 ; 

snd~data 

334 

335 

( 3 


2 


2 

* 

1 , 

1 , 

4 


E 

-1 


E 

-1 

0 

E 

-1 

,03 

1 , 

-1 ; 

rcv~data 

snd'data 

335 

347 

348 

( 3 


3 


2 

* 

1 , 

2 , 

1 


E 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

-1 : 

rcv~data 

snd”data 

348 

361 

362 

( 3 


0 


2 

0 

1 , 

2 , 

1 


E 

-1 


E 

“ 1 

0 

£ 

-1 

,E 

-1 , 

2 1 

sndjack 

rcv~ackO 

362 

340 

379 

( 4 


0 


3 

0 

2 , 

2 , 

1 


DO 

2 


E 

-1 

0 

£ 

-1 

,E 

-1 , 

2 1 

snd_data 

rcv_ackl 

379 

352 

397 

( 4 


1 


3 

0 

2 , 

3 , 

2 


E 

-1 


E 

-1 

0 

e 

-1 

,E 

-1 , 

2 1 

ccv_data 

rcv_ackl 

397 

368 

308 

[ 2 


1 


1 

0 

4 , 

0 , 

3 


£ 

-1 


E 

-1 

0 

02 

0 

,E 

-1 , 

-1 1 

snd~ack 

snd_data 

396 

323 

324 

( 2 


2 


1 

0 

4 , 

1 , 

4 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

-1 1 

rcv_data 

snd_data 

324 

335 

336 

1 2 


0 


1 

0 

4 , 

1 , 

4 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

1 ] 

snd ack 
rcv_ackO 

336 

317 

349 

( 3 


0 


2 

0 

1 , 

1 , 

4 


E 

-1 


E 

-1 


E 

-1 

,03 

1 , 

1 1 

snd data 
rcv_ackl 

349 

328 

363 

( 4 


0 


3 

0 

2 , 

1 , 

4 


DO 

2 


E 

-1 


£ 

-1 

, 03 

1 , 

1 1 

snd data 
rev data 
rcv_ack2 

363 

364 
341 

380 

[ 4 


1 


3 

f 

2 , 

2 , 

1 


DO 

2 


E 

- i 


£ 

-1 

, E 

-1 , 

’l i 

rcv_data 

1 rov_ack2 

380 

354 

398 

( 4 


2 


3 

0 

2 , 

3 , 

2 


E 

- 1 


E 

-1 


E 

-1 

, E 

- 1 , 

1 ; 

rcv_data 
! rev ack2 

398 

371 

364 

( 3 


1 


2 

t 


2 , 



E 



E 



£ 

-1 

, E 

-1 , 


snd ack 

1 rev ackl 

ig*- 

342 

295 

[ 1 


1 


0 


3 , 

0 , 

3 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

-1 1 

snd data 
snd ack 

1 snd_daca 

380 

362 

308 

309 

! 1 


0 


0 


3 , 

0 , 

3 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

0 1 

snd ack 

1 rev ackO 

309 

292 

325 

( 2 


0 


1 


4 , 

0 , 

3 


E 

-1 


E 

-1 


02 

0 

, E 

-1 , 

0 1 

snd_data 

1 rcv_ackl 

325 

304 

337 

1 3 


0 


2 


1 , 

0 , 

3 


c 

-i 


E 

-1 


02 

0 

,03 

1 , 

0 1 

3nd_data 
rev data 
rcv_ack2 

337 

338 
319 

350 

t 4 


0 


3 


2 , 

0 , 

3 


DO 

2 


E 



02 

0 

, 03 


0 : 

snd_data 

rcv_data 

1 rev ack3 

350 

351 
330 

365 

( 4 


1 


3 


2 , 

1 , 

4 


DO 

2 


E 

-1 


E 

-1 

, 03 

1 , 

0 : 

rev data 

1 rev ack3 

365 

344 


217 





rev data 381 


381 

( 4 , 

2 , 

3 , 

2 , 

2 , 

1 , 

DO 

2 


E 

-1 

t 

E 

-1 

,E 

-1 , 

0 ] 

rcv~aclc3 

357 



















ccv_data 

399 

399 

( 4 , 

3 , 

3 , 

2 , 

3 , 

2 , 

E 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

0 ] 

rcv~ac)c3 

374 



















snd_aclc 

396 

351 

[ 3 , 

1 . 

2 , 

1 , 

1 , 

4 , 

E 

-1 


E 

-1 

0 

E 

-1 

,03 

1 , 

0 ] 

rcv~ack2 

331 



















snd_daca 

365 



















rcv_data 

366 

366 

[ 3 , 

2 , 

2 , 

1 , 

2 , 

1 , 

E 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

0 1 

rcv“ac)c2 

345 



















snd_data 

381 



















and ack 

362 

338 

[ 2 , 

1 . 

1 . 

4 , 

1 . 

4 , 

E 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

0 : 

rcv_ac)cl 

320 



















snd_daCa 

351 



















snd_aclc 

336 

264 

[ 2 , 

0 . 

0 . 

3 , 

4 , 

2 , 

E 

-1 


D1 

4 

0 

E 

-1 

.E 

-1 , 

4 ; 

rcv_ac)cl 

277 



















snd_daCa 

278 



















rcv_data 

279 

278 

( 3 . 

0 , 

1 . 

4 , 

4 , 

2 , 

E 

-1 


D1 

4 

0 

D2 

0 

,E 

-1 , 

4 : 

rcv_aclc2 

294 



















snd_daCa 

296 



















rcv_data 

297 

296 

( 4 . 

0 , 

2 . 

1 , 

4 , 

2 , 

E 

-1 


D1 

4 

0 

D2 

0 

,03 

1 , 

4 

rcv_ac)c3 

307 



















rcv“data 

310 

310 

[ 4 , 

1 , 

2 . 

1 , 

0 . 

3 , 

E 

-1 


E 

-1 

0 

D2 

0 

,03 

1 , 

4 

rcv~ack3 

323 



















rcv_data 

326 

326 

[ 4 , 

2 , 

2 , 

1 , 

1 , 

4 , 

E 

-1 


£ 

-1 

0 

E 

-1 

, 03 

1 , 

4 

rcv_ack3 

335 



















rcv_data 

339 

339 

[ 4 , 

3 , 

2 , 

1 , 

2 , 

1 , 

E 

-1 


£ 

-1 


E 

-1 

,E 

-1 , 

4 

rcv_aclc3 

348 



















snd_aclc 

327 

297 

[ 3 , 

1 , 

1 , 

4 , 

0 , 

3 , 

E 

-1 


E 

-1 

0 

D2 

0 

,E 

-1 , 

4 

rcv_ac)c2 

308 



















snd_data 

310 



















rcv_data 

311 

311 

[ 3 . 

2 , 

1 , 

4 , 

1 , 

4 , 

E 

-1 


E 

-1 

0 

£ 

-1 

,E 

-1 , 

4 : 

rcv_acjc2 

324 


snd_data 326 
snd~ac)c 303 


279 

: 2 , 

. 1 , 

0 , 

, 3 

0 , 

3 , 

E -1 , 

E 

-1 , 

E 

-1 

,E 

*1 , 

4 : 

rcv_ackl 

snd^data 

snd”ack 

295 

297 

276 

121 

( 3 , 

1 , 

2 , 

, 4 

0 , 

2 , 

E -1 . 

01 

0 , 

02 

1 

,E 

-1 , 

-1 i 

snd~data 

rev'data 

134 

135 

135 

[ 3 , 

2 , 

2 , 

4 

1 , 

3 , 

E 

-1 , 

E 


02 

1 

,E 

-1 , 

-1 ! 

snd'data 

rcv_data 

150 

151 

151 

[ 3 , 

3 , 

2 , 

4 

2 , 

4 , 

0 -1 , 

£ 

-1 , 

E 

-1 

,E 

-1 , 

-1 1 

spid^data 

snd~ack 

162 

163 

163 

( 3 , 

0 , 

2 , 

4 

2 , 

4 , 

E '-1 , 

E 

-1 , 

E 

-1 

,E 

-1 , 

2 ; 

rcv_ac)cO 

snd~data 

177 

178 

177 

: 0 , 

0 , 

2 , 

4 

2 . 

4 , 

£ 

-1 , 

E 

-1 , 

E 

-1 

,E 

-1 , 

-1 1 

snd~data 

138 

188 

( 1 , 

0 , 

3 , 

1 

2 , 

4 , 

E 

-1 , 

E 

-1 , 

E 

-1 

,03 

2 , 

-1 i 

snd~data 

rcv_data 

201 

202 

201 

[ 2 , 

0 , 

4 , 

2 

2 , 

4 , 

00 

3 , 

E 

-1 , 

E 

-1 

,03 

2 , 

-1 1 

snd~daCa 

rcv_data 

213 

214 

213 

( 3 , 

0 , 

0 , 

3 

2 , 

4 , 

DO 

3 , 

01 

4 , 

E 

-1 

,03 

2 , 

-1 1 

snd~data 

rcv_daca 

229 

230 

229 

[ 4 , 

0 , 

1 , 

4 

2 , 

4 , 

DO 

3 , 

01 

4 , 

02 

0 

, 03 

2 , 

-1 1 

rcv_data 

245 

245 

( 4 , 

1 

1 , 

4 

3 , 

1 , 

DO 

3 , 

D1 

4 , 

D2 

0 

, E 

-1 , 

-1 ; 

rev data 

265 

2 65 

( 4 , 

2 

1 , 

4 

4 , 

2 , 

E -1 , 

D1 

4 , 

02 

n 

yj 

, E 

-1 

-1 i 

rev data 

280 

280 

( 4 , 

3 , 

1 , 

4 

0 , 

3 , 

E • 1 a 

E 

-1 , 

02. 

0 

,E 

-1 ! 

-1 ] 

rev_data 

298 

298 

( 4 , 

4 , 

1 , 

4 

1 , 

4 , 

E *1 » 

E 

-1 , 

E 

-1 

,E 

-1 , 

-1 1 

snd ack 

312 

312 

( 4 , 

0 , 

1 , 

4 

1 , 

4 , 

E 

- 1 , 


-1 , 

£ 

-1 

, E 

-1 , 

1 ] 

rev_aekO 

317 

230 

( 3 , 

1 , 

0 , 

3 

3 , 

1 , 

DO 

3 , 

D1 

4 , 

E 

-1 

,E 

-1 , 

-1 1 

snd_data 

rev~data 

245 

246 

246 

[ 3 , 

2 , 

0 , 

3 

4 , 

2 , 


Dl 

4 , 

E 

-1 

, E 

■“1 , 

-1 1 

snd data 
rev data 

265 

266 

266 

[ 3 , 

3 , 

0 , 

3 

0 , 

3 , 

E -I , 

r 

“1 , 

E 

" i 

, E 

- L , 

-1 j 

snd_data 

snd_aek 

280 

281 

281 

( 3 , 

0 , 

0 , 

3 

0 , 

3 , 

E -1 , 

E 

-1 , 

E 

-1 

,E 

-1 , 

0 1 

rev ackO 
snd data 

292 

299 

299 

! 4 , 

0 , 

1 , 

4 

0 , 

3 , 

E 

“a , 

S 


02 

0 

,E 

-1 , 

0 1 

rev_aekl 

rev_data 

304 

313 

313 

! 4 , 

1 , 

1 . 

4 

■ 

4 , 

E 

-1 , 

E 

-1 , 

£ 

-1 

, E 

-1 , 

0 1 

rev_aekl 
snd aek 

320 

312 

214 

( 2 , 

1 , 

4 , 

2 

3 , 

^ , 

DO 

3 , 

E 

-1 , 

E 

-1 

, E 

-1 , 

-1 1 

1 snd_data 
rcv_data 

230 

231 

231 

[ 2 , 

2 , 

4 , 

2 

4 , 

. 2 , 

w, ” i , 

E 

• 1 , 

£ 

-1 

, E 

■“ L , 

-1 ; 

1 snd data 
snd aek 

246 

247 

247 

! 2 , 

0 , 

4 , 

2 

4 , 

. 2 , 

E -1 , 

E 

-1 , 

E 

-1 

,E 

-1 , 

4 ; 

i rcv_aekO 
snd data 

263 

267 


218 




267 

[ 

3 


0 . 

0 , 

3 , 

4 , 

2 


E 

-1 


01 

4 


E 

-1 

,E 

-1 


4 : 

rcv_ackl 

snd~data 

rev^data 

277 

282 

283 

282 

: 

4 


0 , 

1 , 

4 , 

4 , 

2 


E 

-1 


01 

4 


02 

0 

,E 

-1 


4 

rcv_ack2 

rcv_data 

294 

300 

300 

[ 

4 


1 , 

1 . 

4 . 

0 , 

3 


E 

-1 


E 

-1 


02 

0 

.E 

-1 


4 

rcv_aclc2 

rcv_data 

308 

314 

314 

[ 

4 


2 , 

1 , 

4 , 

1 , 

4 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 


4 

rcv_ack2 

3nd“ac)c 

324 

312 

283 

[ 

3 


1 . 

0 , 

3 , 

0 , 

3 


E 

-1 


E 

-1 


E 

-1 

.E 

-1 


4 

ccv_ackl 

snd_daCa 

snd_aclc 

295 

300 

281 

202 

( 

1 


1 , 

3 , 

1 , 

3 , 

1 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 


-1 

snd~data 

snd~aclc 

214 

215 

215 

[ 

1 


0 . 

3 , 

1 . 

3 , 

1 



-1 


E 

-1 


E 

-1 

,E 

-1 


3 

rcv~ackO 

snd_daCa 

200 

232 

232 

: 

2 


0 . 

4 , 

2 , 

3 , 

1 


□ 0 

3 


E 

-1 


E 

-1 

,E 

-1 


3 

rcv~ackl 

snd_daca 

rcv_data 

212 

248 

249 

248 

( 

3 


0 , 

0 , 

3 , 

3 , 

1 


00 

3 


01 

4 


E 

-1 

,E 

-1 


3 : 

rcv_ack2 

snd_data 

rcv_data 

227 

268 

269 

268 

t 

4 


0 , 

1 , 

4 , 

3 , 

1 


00 

3 


01 

4 


02 

0 

.E 

-1 


3 ] 

rcv_ack3 
rev data 

242 

284 

284 

( 

4 


1 , 

1 , 

4 , 

4 , 

2 


E 

-1 


01 

4 


02 

0 

,E 

-1 


3 : 

rcv_ack3 

rcv_daca 

261 

301 

301 

[ 

4 


2 , 

1 , 

4 , 

0 , 

3 


E 

-1 


E 

-1 


02 

0 

,E 

-1 


3 ] 

rcv_ack3 
rev data 

275 

315 

315 

[ 

4 


3 , 

1 , 

4 , 

1 , 

4 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 


3 ; 

rcv_ack3 

snd~aek 

291 

312 

269 

( 

3 


1 , 

0 , 

3 , 

4 , 

2 


E 

-1 


01 

4 


E 

-1 

,E 

-1 


3 : 

rev_aek2 

snd^data 

rcv~data 

243 

284 

285 

285 

t 

3 


2 , 

0 , 

3 , 

0 , 

3 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 


3 : 

rcv~aek2 

snd_data 

snd'ack 

262 

301 

281 

249 

( 

2 


1 , 

4 , 

2 , 

4 , 

2 


E 

-1 


E 

-1 


E 

-1 

.E 

-1 


3 ! 

rev~ackl 

snd~daca 

snd~ack 

228 

269 

247 

178 

( 

4 


0 , 

3 , 

1 , 

2 , 

4 


E 

-1 


E 

-1 


E 

-1 

,03 

2 


2 1 

rev“ackl 

rcv_data 

188 

189 

189 

( 

4 


1 , 

3 , 

1 , 

3 , 

1 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 


2 ; 

rev'ackl 

snd~aek 

.202 

187 

103 

[ 

2 


1 , 

1 , 

3 , 

0 , 

2 


E 

-1 


01 

0 


E 

-1 

,E 

-1 


-1 : 

snd~data 

rev_data 

121 

122 

122 

1 

2 


2 , 

1 , 

3 , 

1 , 

3 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 


-1 : 

snd~data 
snd ack 

135 

136 

136 

( 

2 


0 . 

1 , 

3 , 

1 , 

3 


E 

-1 


E 

-1 


E 

-1 

, E 

-1 


1 ; 

rev aekO 
snd data 

152 

153 

152 

1 

0 


0 , 

1 , 

3 

1 , 

3 


c 

^ 1 


E 

-1 


E 

-1 

, E 

-1 


-1 : 

snd data 

164 

164 

( 

1 


0 , 

2 , 

4 , 

1 , 

3 


E 

-I 


E 

-1 


02 

1 

, E 

-1 


-1 ; 

snd data 
rev data 

179 

180 

179 

i 

2 


0 , 

3 , 

1 , 

1 , 

3 


£ 

-1 


E 

-1 


02 

1 

, 03 

2 


-1 i 

snd_data 
rev data 

190 

191 

190 

■[ 

3 


0 , 

4 , 

2 , 

1 , 

3 


00 

3 


E 



02 

1 

,03 

2 


-i i 

snd data 
rev_data 

203 

204 

203 

[ 

4 


0 , 

0 , 

3 , 

1 , 

3 


00 

3 


01 

4 


02 

1 

, 03 

2 


-1 1 

rcv_data 

216 

216 

[ 

4 


1 , 

0 , 

3 , 

2 , 

4 


DO 

3 


01 

4 


E 

-1 

,03 

2 


-1 1 

rcv~data 

233 

233 

: 

4 


2 , 

0 , 

3 , 

3 , 

1 


DO 

3 


01 

4 


E 

-1 

,E 

-1 


-1 1 

rcv_data 

250 

250 

r 

4 


3 , 

0 , 

3 , 

4 , 

2 


£ 

- ^ 


01 

4 


£ 

-1 

. E 

-1 


-1 i 

rev data 

270 

270 

i 

4 


4 , 

0 , 

3 , 

0 , 

3 


E 

-1 


£ 

- 1 


E 

-1 

,E 

-1 


-1 ; 

snd ack 

286 

286 

i 

4 


0 , 

0 , 

3 , 

0 , 

3 


E 

- 1 


E 

-1 


E 

-1 

,E 

-1 


0 ■ 

rcv_ackO 

292 

204 

I 

3 


‘ ' 

4 , 

2 , 

2 , 

4 


DO 

3 



- 1 


E 

-1 

, 03 

2 


-1 ; 

snd_data 
rev data 

216 

217 

217 

( 

3 


2 , 

4 , 

2 , 

3 , 

1 


DO 

3 


E 

-1 


E 

-1 

,E 

-1 


-1 ; 

snd data 
rcv_data 

233 

234 

234 

1 

3 


3 , 

4 , 

2 , 

4 , 

2 


E 

-1 


E 

-1 


E 

-1 

, E 

-1 


-1 : 

snd data 
snd ack 

250 

251 

251 

( 

3 


0 , 

4 , 

2 , 

4 , 

2 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 


4 1 

rev ackO 
snd data 

263 

271 

271 

( 

4 


0 , 

0 , 

3 , 

4 , 

2 


E 

“ A 


D1 

4 


E 

-1 

, E 

-1 


4 ; 

rcv_ackl 

rcv_data 

277 

287 

287 

( 

4 


1 , 

0 , 

3 , 

0 , 

3 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 


4 : 

rev ackl 
snd_ack 

295 

286 

191 

( 

2 


1 , 

3 , 

1 , 

2 , 

4 


E 

-1 


E 

-1 


E 

-1 

, 03 

2 


-1 : 

snd data 

204 


rev data 205 


219 




205 
218 

235 

252 

272 
288 

253 

180 

192 

206 

219 

236 

254 

273 
289 

237 

255 

220 

153 

165 
181 

193 

166 

88 

104 

123 

137 

154 
167 

182 

194 
207 
221 

238 

256 
183 

195 


( 2 , 
: 2 , 
( 3 , 

: 4 , 
[ 4 , 
[ 4 . 
[ 3 , 

( 1 , 
[ 1 , 
[ 2 , 

[ 3 . 

[ 4 , 
( 4 . 
( 4 , 
[ 4 , 
( 3 , 

[ 3 , 

( 2 , 

( 3 , 

( 4 , 
( 4 , 
( 4 , 
( 3 , 

( 1 , 

( 1 , 

( 0 , 
( 1 , 

[ 2 , 

( 3 , 

1 4 , 
[ 4 , 
( 4 , 
( 4 , 
( 4 , 
( 4 , 
( 3 , 

! 3 , 


2 . 3 , 1 . 3 , 1 , 

0 . 3 , 1 . 3 . 1 , 

0 , 4 , 2 , 3 , 1 , 

0 . 0 , 3 , 3 , 1 , 

1 . 0 , 3 , 4 , 2 , 

2 , 0 , 3 , 0 . 3 . 

1 , 4 . 2 , 4 . 2 , 

1 . 2 . 4 , 2 , 4 . 

0 . 2 , 4 , 2 , 4 , 

0 . 3 , 1 , 2 , 4 . 

0 . 4 , 2 , 2 , 4 , 

0 , 0 , 3 , 2 . 4 , 

1 . 0 . 3 , 3 , 1 . 

2 . 0 , 3 , 4 , 2 , 

3 , 0 , 3 , 0 , 3 , 

1 , 4 , 2 , 3 , 1 , 

2 , 4 , 2 , 4 , 2 , 

1 , 3 , 1 , 3 , 1 , 

0 , 2 , 4 , 1 , 3 , 

0 , 3 , 1 , 1 , 3 , 

1 , 3 , 1 , 2 , 4 , 

2 , 3 , 1 , 3 , 1 , 

1 , 2 , 4 , 2 , 4 , 

1 , 0 , 2 , 0 , 2 , 

0 , 0 , 2 , 0 , 2 , 

0 , 0 , 2 , 0 , 2 , 

0 , 1 , 3 , a , 2 , 

0 , 2 , 4 , 0 , 2 , 

0 , 3 , 1 , 0 , 2 , 

0 , 4 , 2 , 0 , 2 , 

1 , 4 , 2 , 1 , 3 , 

2 , 4 , 2 , 2 , 4 , 

3 , 4 , 2 , 3 , 1 , 

4 , 4 , 2 , 4 , 2 , 

0 , 4 , 2 , 4 , 2 , 

1 . 3 , 1 , 1 , 3 , 

2 3 , 1 , 2 , 4 , 


E 

-1 

t 

E 

-1 

0 

E 

-1 


-1 

0 

-1 ’ 

1 snd_data 

217 













snd_ack 

218 

E 

-1 

» 

E 

-1 

0 

E 

-1 

,E 

-1 

0 

3 ; 

1 rcv_aclcO 

200 













snd_data 

235 

DO 

3 

» 

E 

-1 

0 

E 

-1 

,E 

-1 

0 

3 ; 

1 rcv_ackl 

212 













snd_daCa 

252 













Ecv_data 

253 

DO 

3 

» 

D1 

4 

0 

E 

-1 

rE 

-1 

0 

3 ; 

1 rcv_aclc2 

227 













rcv~data 

272 

E 

-1 

* 

D1 

4 

0 

E 

-1 

,E 

-1 

0 

3 ; 

1 rcv~aclc2 

243 













rev^data 

288 

E 

-1 

0 

E 

-1 

0 

E 

-1 

,E 

-1 

0 

3 ; 

1 rcv_ack2 

262 













snd_aclc 

286 

E 

-1 

0 

E 

-1 

0 

E 

-1 

.E 

-1 

0 

3 ; 

1 rcv_ackl 

228 













snd_data 

272 













snd~aclc 

251 

E 

-1 

0 

E 

-1 

0 

E 

-1 

.E 

-1 

0 

-1 : 

1 snd_data 

191 













snd~ack 

192 

E 

-1 

t 

E 

-1 

0 

E 

-1 

,E 

-1 

0 

2 ; 

1 rcv_ac)cO 

177 













snd_daCa 

206 

E 

-1 

0 

E 

-1 

0 

E 

-1 

.D3 

2 

0 

2 1 

1 rcv_ac)cl 

188 













snd_daCa 

219 













rcv_data 

220 

DO 

3 

0 

E 

-1 

0 

E 

-1 

,D3 

2 

0 

2 ] 

1 rcv_ack2 

201 













snd_daca 

236 













rcv_daCa 

237 

DO 

3 

0 

D1 

4 


E 

-1 

,03 

2 

t 

2 ] 

1 rcv_ack3 

213 













rcv_data 

254 

DO 

3 

0 

01 

4 

0 

E 

-1 

,E 

-1 

0 

2 1 

1 rcv_ack3 

230 













rcv_data 

273 

E 

-1 

0 

D1 

4 

0 

E 

-1 

,E 

-1 

0 

2 1 

1 rcv_ack3 

246 













rcv_data 

289 

E 

-1 

0 

E 

-1 

0 

E 

-1 

,E 

-1 

0 

2 ] 

i rcv~ack3 

266 













snd^ack 

286 

DO 

3 

0 

E 

-1 

0 

£ 

-1 

,E 

-1 

0 

2 ] 

1 tcv_ack2 

214 













snd~daCa 

254 













rcv~data 

255 

E 

-1 

0 

E 

-1 

0 

E 

-1 

,E 

-1 

0 

2 1 

1 rcv~ack2 

231 













snd_daca 

273 













snd~ack 

251 

E 

-1 

0 

E 

-1 


E 

-1 

,E 

-1 

0 

2 : 

1 rcv_ackl 

202 













snd^data 

237 













snd~ack 

218 

E 

-1 

0 

E 

-1 

0 

D2 

1 

,E 

-1 

0 

1 i 

1 rcv'ackl 

164 













snd~data 

165 













rcv~data 

166 

E 

-1 

0 

E 

-1 

0 

D2 

1 

, 03 

2 

0 

1 i 

rcv~ack2 

179 













rcv“data 

181 

E 

-1 

0 

E 

-1 

0 

E 

-1 

,D3 

2 

0 

1 1 

rcv~ack2 

191 













rev data 

193 

E 

-1 

0 

E 

-1 

0 

E 

-1 

, E 

-1 

0 

1 1 

rev aek2 

205 













snd aek 

187 

E 

-1 

0 

E 

-1 


E 

-1 

, E 

- T_ 

0 

1 ] 

rev aekl 

180 













snd_data 

181 













snd_aek 

163 

E 

-1 


E 

-1 


E 

-1 

, E 

-1 


-1 1 

snd_daca 

103 













3nd~aek 

104 

E 

-1 


E 

-1 


E 

-1 

,E 

-1 


0 1 

rev_aekO 

123 













snd_daca 

124 

£ 

-1 


E ' 

-1 


E 

-1 

,E 

-1 


-1 ] 

snd_daCa 

137 

E 

-1 


D1 

0 


E 

-1 

, E 

-1 

0 

-1 1 

snd data 

154 













rev data 

155 

E 

-1 


D1 

0 


02 

1 

,E 

-1 

0 

-1 1 

snd data 

167 













rev_data 

168 

E 

-1 


D1 

0 


02 

1 

, 03 

2 

0 

-1 1 

snd_data 

182 













rev_data 

183 

DO 

3 


01 

0 


02 

1 

,D3 

2 

0 

-1 1 

rev_data 

194 

DO 

3 


E 

-1 


02 

1 

,03 

2 

0 

-1 1 

rev data 

207 

DO 

3 


E 

-1 


E 

-1 

, 03 

2 

0 

-1 1 

rev_data 

221 

DO 

3 


E 

-1 


E 

-1 

, E 

-1 

0 

-1 1 

rev data 

238 

E 

- 1 


E 

-1 


r 

-1 

,E 

-1 

0 

’ 

snd aek 

256 

r 

* 1 


E 

-1 


£ 

-1 

0 s 

-1 

0 

4 i 

rev_aekO 

263 

E 

-1 


E 

-1 


02 

1 

, D3 

2 


-1 1 

snd_data 

194 













rev_data 

195 

E 

-1 

f 

E 

-1 

0 

E 

-1 

, 03 

2 

, 

-1 1 

snd data 

207 


rev data 208 


220 




208 [ 3 , 3 , 3 , 1 , 3 , 1 , E -1 , E -1 . E -1 ,E -1,-1] 3nd_data 221 

snd_acic 222 

222 [ 3 . 0 , 3 , 1 , 3 , 1 , E -1 . E -1 , E -1 ,E -1 , 3 ] rcv_aclc0 200 

snd data 239 

239 ( 4 , 0 , 4 , 2 , 3 , 1 , 00 3 , E -1 . E -1 ,E -1 , 3 1 rcv“ac)cl 212 

rcv_daca 257 

257 1 4 . 1 . 4 , 2 , 4 , 2 , E -1 , E -1 , E -1 ,E -1 , 3 J rcv_ac)cl 228 

snd acic 256 

168 ( 2 , 1 , 2 , 4 , 1 , 3 , E -1 . E -1 , 02 1 ,E -1,-1] snd'data 183 

rcv_data 184 

184 ( 2 , 2 . 2 , 4 , 2 , 4 . E -1 , E -1 , E -1 ,E -1,-1] snd_data 195 

snd ack 196 

196 I 2 , 0 . 2 , 4 , 2 , 4 . E -1 , E -1 , E -1 ,E -1 , 2 ] rcv_ack0 177 

snd data 209 

209 [ 3 , 0 , 3 , 1 , 2 , 4 , E -1 . E -1 , E -1 ,03 2 , 2 ] ccv_ackl 188 

snd_data 223 
rcv_data 224 

223 [ 4 , 0 , 4 , 2 , 2 , 4 , DO 3 , E -1 , E -1 ,03 2 , 2 ) rcv_ack2 201 

rcv~data 240 

240 ( 4 , 1 , 4 , 2 , 3 , 1 , 00 3 , E -1 , E -1 ,E -1 , 2 ] rcv_ack2 214 

rev data 258 

258 ( 4 , 2 , 4 . 2 , 4 , 2 , E -1 , E -1 , E -1 ,E -1 , 2 ] rcv“ack2 231 

snd_ack 256 

224 ( 3 , 1 , 3 , 1 , 3 , 1 , E -1 , E -1 , E -1 ,E -1 , 2 ] rcv_ackl 202 

snd_data 240 
snd_ack 222 

155 ( 1 , 1 , 1 , 3 , 1 , 3 , E -1 , E -1 , E -1 ,E -1,-1] 3nd_data 168 

snd~ack 169 

169 [ 1 , 0 , 1 , 3 , 1 , 3 , E -1 , E -1 , E -1 ,E -1 , 1 1 rcv_ack0 152 

snd_data 185 

185 1 2 . 0 . 2 , 4 , 1 , 3 , E -1 , E -1 , 02 1 ,E -1 , 1 ] rcv_ackl 164 

. snd_data 197 

rcv~data 198 

197 ( 3 , 0 , 3 , 1 , 1 , 3 , E -1 , E -1 , 02 1 ,03 2 , 1 ] rcv~ack2 179 

snd'data 210 
rcv~data 211 

210 ( 4 , 0 , 4 , 2 , 1 , 3 , DO 3 , E -1 , 02 1 ,03 2 , 1 1 rcv~ack3 190 

rev data 225 

225 ( 4 , 1 , 4 , 2 , 2 , 4 , 00 3 , E -1 , E -1 ,03 2 , 1 ) rev"aek3 204 

rcv~data 241 

241 ( 4 , 2 , 4 , 2 , 3 , 1 , DO 3 , E -1 , E -1 ,E -1 , 1 ] rcv;;aek3 217 

rev data 259 

259 ( 4 , 3 , 4 , 2 , 4 , 2 , E -1 , E -1 , E -1 ,E -1 , 1 1 rev2aek3 234 

snd aek 256 

211 ( 3 , 1 , 3 , 1 , 2 , 4 , E -1 , E -1 , E -1 ,03 2 , 1 ) rcv~ack2 191 

snd~data 225 
rev data 226 

226 : 3 , 2 , 3 , 1 , 3 , 1 , E -1 , E -1 , E -1 ,E -1 , 1 ] rcv_aek2 205 

snd_data 241 
snd_aek 222 

198 ( 2 , 1 , 2 , 4 , 2 , 4 , E -1 , E -1 , E -1 ,E -1 , 1 ] rev_aekl 180 

snd_data 211 
snd_ack 196 

124 : 2 , 0 , 1 , 3 , 0 , 2 , E -1 , 01 0 , E -1 ,E -1 , 0 ] rev_aekl 137 

snd_data 138 
rcv_data 139 

138 ; 3 , 0 , 2 , 4 , 0 , 2 , E -1 , 01 0 , 02 1 ,E -1 , 0 1 rev_aek2 154 

snd_data 156 
rev_data 157 

156 [ 4 , 0 , 3 , 1 , 0 , 2 , E -1 , 01 0 , 02 1 ,03 2 , 0 ] rcv_aek3 167 

rcv_data 170 

170 [ 4 , 1 , 3 , 1 , 1 , 3 , E -1 , E -1 , 02 1 ,03 2 , 0 ] rcv_aek3 183 

rcv_data 186 

186 [ 4 , 2 , 3 , 1 , 2 , 4 , E -1 , E -1 , E -1 ,03 2 , 0 J rev_ack3 195 

rev_data 199 

199 [ 4 , 3 , 3 , 1 , 3 , 1 , E -1 , E -1 , E -1 ,E -1 , 0 ] rev_ack3 208 

snd_aek 187 

157 [ 3 , 1 , 2 , 4 , 1 , 3 , E -1 , E -1 , 02 1 ,E -1 , 0 ] rev_aek2 168 

snd_data 170 
rcv_data 171 

171 [ 3 , 2 , 2 , 4 , 2 , 4 , E -1 , E -1 , £ -1 ,E' -1 , 0 ] rcv_ack2 184 

snddata 186 
snd_ack 163 

139 [2, 1, 1,3,1, 3,E -i,E -1,E -1,E -1, 0] rev_ackl 155 

snd_data 157 
snd ack 136 


221 








8 ( 3 , 1 . 3 , 4 , 1 , 2 , E -1 . D1 

13 (3,2,3,4,2,3,E -l.E 

19 [3,3,3,4,3,4,E -l.E 

27 (3,0.3.4.3,4,E -l.E 

37 [0.0.3.4.3,4.E -l.E 

48 ( 1 . 0 . 4 . 1 . 3 . 4 , E -l.E 

61 ( 2 . 0 . 0 . 2 . 3 . 4 . DO 4 . E 

73 ( 3 . 0 . 1 . 3 . 3 . 4 . DO 4 . 01 

89 ( 4 . 0 . 2 . 4 . 3 . 4 . DO 4 . D1 

105 [ 4 . 1 . 2 . 4 . 4 . 1 . DO 4 , D1 

125 ( 4 . 2 . 2 . 4 . 0 . 2 . E -1 . D1 

140 ( 4 . 3 . 2 . 4 . 1 . 3 , E -l.E 

158 [ 4 . 4 . 2 . 4 . 2 . 4 . E -l.E 

172 ( 4 . 0 . 2 . 4 . 2 . 4 . E -l.E 

90 ( 3 . 1 . 1 . 3 . 4 . 1 . DO 4 . D1 

106 ( 3 . 2 . 1 . 3 . 0 . 2 . E -1 . D1 

126 [ 3 . 3 . 1 . 3 . 1 , 3 . E -l.E 

141 [ 3 . 0 , 1 . 3 , 1 . 3 . E -l.E 

159 ( 4 . 0 . 2 . 4 . 1 . 3 . E -l.E 

173 ( 4 . 1 . 2 . 4 , 2 . 4 , E -l.E 

74 ( 2 . 1 . 0 . 2 . 4 . 1 . DO 4 , E 

91 (2.2.0.2.0.2.E -l.E 

107 t 2 . 0 . 0 . 2 . 0 , 2 . E -l.E 

127 ( 3 , 0 . 1 . 3 . 0 , 2 . E -1 , D1 

142 ( 4 . 0 . 2 . 4 , 0 , 2 , E -1 , D1 

160 ( 4 . 1 . 2 , 4 . 1 , 3 . E -l.E 

174 ( 4 , 2 . 2 , 4 , 2 , 4 , E -l.E 

143 ( 3 , 1 . 1 . 3 . 1 . 3 , E -l.E 

62 ( 1 , 1 , 4 , 1 , 4 , 1 , E -l.E 

75 ( 1 . 0 . 4 , 1 , 4 , 1 , £ -l.E 

92 12,0,0,2,4,1, DO 4,E 

108 ( 3 , 0 , 1 , 3 , 4 , 1 , DO 4 , D1 

128 [ 4 , 0 , 2 , 4 , 4 , ’ 1 , DO 4 , D1 

144 ( 4 , 1 , 2 , 4 , 0 , 2 , E -1 , 01 

161 I 4 , 2 , 2 , 4 , 1 , 3 , E -l.E 

175 ( 4 , 3 , 2 , 4 , 2 , 4 , E -l.E 

129 [ 3 , 1 , 1 , 3 , 0 , 2 , E -1 , D1 

145 : 3 , 2 , 1 , 3 , 1 , 3 , £ -l.E 

109 ! 2 , 1 , 0 , 2 , 0 , 2 , E -l.E 


1 


D2 

2 

,E 

-1 


-1 ; 

1 snd_data 

12 









rcv~data 

13 

-1 


02 

2 

,E 

-1 


-1 ; 

1 snd~daca 

18 









rcv_data 

19 

-1 


E 

-1 

,E 

-1 


-1 ; 

1 snd_data 

26 









snd'ack 

27 

-1 


E 

-1 

.E 

-1 


3 : 

1 rcv_aclcO 

37 









snd_daca 

38 

-1 


E 

-1 

,E 

-1 


-1 : 

1 3nd_data 

48 

-1 


E 

-1 

,D3 

3 


-1 : 

1 snd_data 

61 









rcv_data 

62 

-1 


E 

-1 

,D3 

3 


-1 1 

1 snd_daca 

73 









rcv_data 

74 

0 


E 

-1 

,D3 

3 


-1 : 

1 snd_daCa 

89 









rcv_dal:a 

90 

0 


D2 

1 

.03 

3 


-1 : 

1 ccv_data 

105 

0 


D2 

1 

.E 

-1 


-1 ■ 

1 rc\/_data 

125 

0 


02 

X 

.E 

-1 


-1 : 

1 rcv_data 

140 

-1 


D2 

1 

.E 

-1 


-1 ’ 

1 tcv_data 

153 

-1 


E 

-1 

,E 

-1 


-1 1 

1 snd_ac)c 

172 

-1 


E 

-1 

.E 

-1 


2 ] 

1 rcv~ac)cO 

177 

0 


E 

-1 

.E 

-1 


-1 

1 sna^daCa 

105 









rcv_data 

106 

0 


E 

-1 

,E 

-1 


-1 

1 snd_daca 

125 









rcv_daca 

126 

-1 


E 

-1 

.E 

-1 


-1 

1 snd_data 

140 









snd~aclc 

141 

-1 


E 

-1 

,E 

-1 


1 

1 rcv_aclcO 

152 









snd_data 

159 

-1 


02 

1 

.E 

-1 


1 

1 rcv^aciil 

164 









rcv_data 

173 

-1 


E 

-1 

,E 

-1 


1 

1 cov_ackl 

180 









snd^aclc 

172 

-1 


E 

-1 

.E 

-1 


-1 

i snd'data 

90 









rcv~daca 

91 

-1 


E 

-1 

,E 

-1 


-1 

1 snd'data 

106 









snd~ac)c 

107 

-1 


E 

-1 

.E 

-1 


0 1 

t rcv_ac)tO 

123 









snd^daca 

127 

0 


E 

-1 

.E 

-1 


0 1 

rcv~acicl 

137 









snd'data 

142 









rcv“data 

143 

0 


02 

1 

,E 

-1 


0 ] 

rcv”ac)c2 

154 









rcv~data 

160 

-1 


02 

1 

,E 

-1 


0 J 

ccv^ackZ 

168 









rcv~daca 

17-1 

-1 


E 

-1 

,E 

-1 


a 1 

I rcv_aclt2 

184 









snd~ac)c 

172 

-1 


E 

-1 

,E 

-1 


C 1 

rcv_ac)cl 

155 









snd_data 

160 









snd ack 

141 

«1 


£ 

-1 

,E 

-1 


-1 1 

snd data 

74 









snd_ack 

75 

-1 


E 

-1 

,E 

-1 


4 1 

rev acicO 

60 









snd data 

92 

-1 


E 

-1 

, E 

-1 


4 J 

rcv_ackl 

72 









snd_data 

108 









rcv~data 

109 

0 


E 

-1 

,E 

-1 


4 ] 

rcv_ac)r2 

87 









snddata 

128 









rev data 

129 

0 


02 

1 

,E 

-1 


4 1 

rev aclc3 

102 









rev_daLa 

144 

0 


02 

1 

.E 

-1 


4 1 

rev_aci<.3 

121 









rev_daca 

161 

-1 


02 

1 

, E 

-1 


4 ; 

rev ack3 

135 









rev_data 

175 

-1 


E 

-1 

,E 

-1 


4 1 

rev_ack3 

151 









3nd_ack 

172 

0 


E 

-1 

,E 

-1 


4 1 

rev_ack2 

103 

• 








3nd_data 

144 









rev_data 

145 

-1 


E 

-1 

, E 

-1 


4 1 

rev_ack2 

122 









snd_data 

161 









snd_ack 

141 

“ 1 . 


E 

-1 

,E 

-1 


4 1 

rev ackl 

88 


222 






sna_daca 129 
snd actc 107 


38 

( 4 , 

0 


4 


1 , 

3 


4 


£ 

-1 


E 

-1 


E 

-1 

, D3 

3 , 

3 ] 

1 rcv_acicl 
rcv~data 

18 

49 

49 

1 4 , 

1 


4 


1 , 

4 


1 


E 

-1 


E 

-1 


E 

-1 

,E 

_ I 

3 1 

1 rcv_ac)cl 
snd_ac)t 

62 

47 

5 

( 2 , 

1 


2 


3 , 

1 


2 


E 

-1 


D1 

1 


E 

-1 

,E 

-1 , 

-1 ] 

1 snd_data 
rcv_data 

8 

9 

9 

[ 2 , 

2 


2 


3 , 

2 


3 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

-1 ] 

snd data 
snd_ack. 

13 

14 

14 

1 2 , 

0 


2 


3 , 

2 


3 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

2 ] 

rcv_ac)cO 

snd_daCa 

20 

21 

20 

( 0 , 

0 


2 


3 . 

2 


3 


E 

-1 


E 

-1 


E 

-1 

, E 

-1 , 

-1 1 

3nd_data 

28 

28 

( 1 - 

0 


3 


4 . 

2 


3 


E 

-1 


z 

-1 


D2 

2 


-1 , 

1 1 

1 snd_data 
rcv_data 

39 

40 

39 

[ 2 , 

0 


4 


1 , 

2 


3 


E 

-1 


E 

-1 


D2 

2 

,D3 

3 , 

-1 ; 

! d~data 

rcv_daca 

50 

51 

50 

( 3 , 

0 


0 


2 , 

2 


3 


DO 

4 


E 

-1 


D2 

2 

,D3 

3 , 

-1 

1 snd_data 
rcv_data 

63 

64 

63 

[ 4 , 

0 


1 


3 , 

2 


3 


DO 

4 


D1 

0 


D2 

2 

.D3 

3 , 

-1 

1 rev data 

76 

76 

[ 4 , 

1 


1 


3 , 

3 


4 


DO 

4 


D1 

0 


E 

-1 

,D3 

3 , 

-1 

1 rcv_data 

93 

93 

[ 4 , 

2 


1 


3 , 

4 


1 


DO 

4 


D1 

0 


E 

-1 

.E 

-1 , 

-1 

1 rcv~data 

110 

110 

( 4 . 

3 


1 


3 , 

0 


2 


E 

-1 


D1 

0 


E 

-1 

.E 

-1 , 

-1 

1 rcv_data 

130 

130 

( 4 , 

4 


1 


3 , 

1 


3 


E 

-1 


E 

-1 


E 

-1 

c 

-1 , 

-1 

i snd_aclc 

146 

146 

( 4 , 

0 


1 


3 , 

1 


3 


E 

-1 


E 

-1 


E 

.1 

’ E 

-1 , 

1 

1 rcv_aclcO 

152 

64 

( 3 , 

1 


0 


2 , 

3 


4 


DO 

4 


E 

-1 


E 

«1 

,D3 

3 , 

-1 

I snd_data 
rcv_data 

76 

77 

77 

( 3 , 

2 


0 


2 , 

4 


1 


DO 

4 



-1 


E 

-1 

, E 

-1 , 

-1 

1 snd data 
rev data 

93 

94 

94 

( 3 , 

3 


0 


2 , 

0 


2 


E 

-1 


E 

-1 


£ 

-1 

,F 

-1 , 

-1 ; 

1 snd_data 
snd~aclc 

110 

111 

111 

[ 3 , 

0 


0 


2 , 

0 


2 


E 

-1 


E 

-1 


E 

-1 

* E 

-1 , 

0 ] 

1 rcv~aclcO 
snd~data 

123 

131 

131 

! 4 , 

0 


1 


3 , 

0 


2 


E 

-1 


D1 

0 


E 

-1 

,E 

-1 , 

0 ] 

1 rcv_acltl 
rcv_data 

137 

147 

147 

1 4 , 

1 


1 


3 , 

1 


3 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

0 ] 

[ rcv'ackl 
snd~ac)t 

155 

146 

51 

f 2 , 

1 


4 


1 , 

3 


4 


E 

-1 


E 

-1 


E 

-1 

, D3 

3 , 

-1 ] 

snd'data 

rcv~data 

64 

65 

65 

( 2 , 

2 


4 


1 , 

4 


1 


E 



E 

-1 


E 

-1 

,E 

-1 , 

-1 1 

snd~data 

snd_ac)c 

■’7 

78 

78 

( 2 , 

0 


4 


1 , 

4 


1 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

4 1 

rcv^acIcO 

snd”data 

60 

95 

95 

( 3 , 

0 


0 


2 , 

4 


1 


DO 

4 


E 

-1 


E 

-1 

,E 


4 1 

rcv^ackl 

snd~data 

rcv*data 

72 

112 

113 

112 

: 4 , 

0 


1 


3 , 

4 


1 


DO 

4 


01 

0 


E 

-1 

, E 

-1 , 

4 1 

rcv_aclc2 

rcv~data 

87 

132 

132 

( 4 , 

1 


1 


3 , 

0 


2 


E 

-1 


01 

0 


E 

-1 

, E 

-1 , 

4 ] 

rcv~aclc2 

rcv_data 

103 

148 

148 

1 4 , 

2 


1 


3 , 

1 


3 


E 

-1 


E 

-1 


E 

-1 

, E 

-1 , 

4 1 

rev ac)t2 
snd ack 

122 

146 

113 

( 3 , 

1 


0 


2 , 

0 


2 


E 

-1 


E 

-1 


E 

-1 

, E 

-1 , 

4 1 

rev ackl 
snd data 
snd ack 

88 

132 

111 

40 ■ 

( 1 , 

1 


3 


4 , 

3 


4 


E 

■* I 


E 

• 1 


E 

-1 

, E 

~ 1 , 

-1 ! 

snd data 
snd_ack 

51 

52 

52 

[ 1 , 

c 


3 


4 , 

3 


4 


E 

- 1 


E 

-1 


E 

-1 

, E 

-1 , 

3 i 

rev ackO 
snd data 

37 

66 

66 

[ 2 , 

0 


4 


1 , 

3 


4 


E 

1 


E 

- 1 


E 

-1- 

, D3 

3 , 

3 I 

rev ackl 
snd data 
rev data 

43 

79 

80 

79 

( 3 , 

0 


0 


2 , 

3 


4 


DO 

4 


£ 

*• 



•“ 1 

,33 

3 , 

3 : 

rev ack2 
snd_data 
rev data 

61 

96 

97 

96 

1 4 , 

0 


1 


3 , 

3 


4 


DO 

4 


D1 

0 


p 

-1 

, D3 

3 , 

3 ] 

rev aek3 
rev data 

73 

114 

114 

[ 4 , 

1 


1 


3 , 

4 


1 


DO 

4 


D1 

0 


E 

-1 

,E 

-1 , 

3 ] 

rev ack3 
• rcv_data 

90 

133 

133 

[ 4 , 

2 


1 


3 , 

0 


2 


p 

-1 


Di 

0 


E 

-1 

p 

-1 , 

3 1 

rev ack3 
rev data 

106 

149 

149 

[ 4 , 

3 


1 


3 , 

1 


3 



” 1 


E 

-1 


E 

-1 

, E 

- 1 , 

3 1 

rev ack3 
snd ack 

126 

146 

97 

[ 3 , 

1 


0 


2 , 

4 


1 


DC 

4 


E 

t 


E 

-1 

, E 

-1 . 

3 1 

rev ack2 

74 


5nd_data 114 
rev data 115 


223 






115 

[ 3 


2 


0 


2 


0 

2 


E 

-1 


E 

-1 


E 

-1 

.E 

-1 , 

3 ] 

1 rcv_ack2 
snd_daca 
and ack 

91 

133 

111 

80 

( 2 


1 


4 


1 


4 

1 


E 

-1 


E 

-1 

f 

E 

-1 

,E 

-1 , 

3 ] 

1 rcv_acicl 
and^daca 
and_ac)c 

62 

97 

78 

21 

[ 3 


0 


3 


4 


2 

3 


E 

-1 


E 

-1 

t 

02 

2 

,E 

-1 , 

2 ] 

1 ccv_aclcl 
and_daCa 
rcv_data 

28 

29 

30 

29 

: 4 


0 


4 


1 


2 

3 


E 

-1 


E 

-1 

t 

D2 

2 

.03 

3 , 

2 ] 

1 rcv~ack2 
rcv_data 

39 

41 

41 

[ 4 


1 


4 


1 


3 

4 


E 

-1 


E 

-1 

» 

E 

-1 

,03 

3 , 

2 ] 

1 rcv_ack2 
rcv_data 

51 

53 

53 

( 4 


2 


4 


1 


4 

1 


E 

-1 


E 

-1 

» 

E 

-1 

,E 

-1 , 

2 ] 

1 rcv_ack2 
and_ack 

65 

47 

30 

[ 3 


1 


3 


4 


3 

4 


E 

-1 


E 

-1 

$ 

E 

-1 

.E 

-1 , 

2 ] 

1 rcv_ackl 
and data 
and_ack 

40 

41 
27 

3 

t 1 


1 


1 


2 


1 

2 


E 

-1 


E 

-1 

t 

E 

-1 

,E 

-1 , 

-1 ] 

1 snd_daCa 
and_ack 

5 

6 

6 

( 1 


0 


1 


2 


1 

2 


E 

-1 


E 

-1 


E 

-1 

.E 

-1 , 

1 ] 

1 rcv_ackO 
and_data 

10 

11 

10 

( 0 


3 


1 


2 


1 

2 


E 

-1 


E 

-1 


E 

-1 

.E 

-1 , 

-1 ] 

1 and_daCa 

15 

15 

( 1 


0 


2 


3 


1 

2 


E 

-1 


01 

1 

» 

E 

-1 

,E 

-1 , 

-1 ] 

1 and_daCa 
rcv_data 

22 

23 

22 

( 2 


0 


3 


4 


1 

2 


E 

-1 


D1 

1 

t 

D2 

2 

.E 

-1 , 

-1 1 

1 snd_data 
rcv_data 

31 

32 

31 

[ 3 


0 


4 


1 


1 

2 


E 

-1 


D1 

1 

» 

02 

2 

,03 

3 , 

-1 ] 

1 snd_data 
rcv_data 

42 

43 

42 

( 4 


0 


0 


2 


1 

2 


DO 

4 


01 

1 

» 

D2 

2 

.03 

3 , 

-1 ] 

1 rcv_data 

54 

54 

[ 4 


1 


0 


2 


2 

3 


DO 

4 


E 

-1 

0 

D2 

2 

,03 

3 , 

-1 1 

i rcv_daca 

67 

67 

( 4 


2 


0 


2 


3 

4 


DO 

4 


E 

-1 

0 

E 

-1 

,03 

3 , 

-1 ] 

[ rcv_data 

81 

81 

( 4 


3 


0 


2 


4 

1 


DO 

4 


E 

-1 

0 

E 

-1 

,E 

-1 , 

-1 1 

1 rcv~data 

98 

98 

( 4 


4 


0 


2 


0 

2 


£ 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

-1 1 

1 snd~ack 

116 

116 

( 4 


0 


0 


2 


0 

2 


E 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

0 ] 

[ rcv~ackO 

123 

43 

( 3 


1 


4 


1 


2 

3 


E 

-1 


E 

-1 

0 

D2 

2 

,03 

3 , 

-1 ] 

snd~data 

rcv~data 

54 

55 

55 

[ 3 


2 


4 


1 


3 

4 


E 

-1 


E 

-1 

0 

E 

-1 

,03 

3 , 

-1 ] 

and~data 

rcv~data 

67 

68 

68 

( 3 


3 


4 


1 


4 

1 


E 

-1 


E 

-1 

0 

£ 

-1 

,E 

-1 , 

-1 1 

1 snd^data 
snd~ack 

81 

82 

82 

: 3 


0 


4 


1 


4 

1 


E 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

4 ] 

rcv~ackO 

3nd~data 

60 

99 

99 

! 4 


0 


0 


2 


4 

1 


DO 

4 


E 

-1 

0 

E 

-1 

,E 

-1 

4 1 

rcv_ackl 

rcv~daca 

72 

117 

117 

[ 4 


1 


0 


2 


0 

2 


E 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

4 ] 

\ rcv~ackl 
snd_ack 

88 

116 

32 

( 2 


1 


3 


4 


2 

3 


E 

-1 


E 

-1 

0 

D2 

2 

, E 

-1 , 

-1 ] 

snd_data 

rcv_data 

43 

44 

44 

[ 2 


2 


3 


4 


3 

4 


E 

-1 


E 

-1 

0 

E 

-1 

,E 

-1 , 

-1 1 

and daca 
and ack 

55 

56 

56 

1 2 


0 


3 


4 


3 

4 


E 

-1 


E 

-1 

> 

E 

-1 

, E 

“ 1 , 

3 ] 

rev ackO 
and_daCa 

37 

69 

69 

1 3 


0 


4 


1 


3 

4 


E 

- 1 


E 

-1 


E 

-1 

, D3 

3 , 

3 1 

rev ackl 
and daca 
rev_daca 

48 

83 

84 

83 

( 4 


0 


0 


2 


3 

4 


DO 

4 


E 

-1 


E 

-1 

, 03 

3 , 

3 ] 

rcv_aek2 

rev_data 

61 

100 

100 

( 4 


1 


0 


2 


4 

1 


DO 

4 


E 

-1 


E 

-1 

, E 

-1 , 

3 1 

rev aek2 
rev_data 

74 

118 

118 

[ 4 


2 


0 


2 


0 

2 


E 

-1 


E 

-1 


E 

-1 

, E 

-1 , 

3 ] 

rev ack2 
and aek 

91 

116 

34 

[ 3 


1 


4 


1 


4 

1 


E 

• 1 


E 

-1 


E 

-1 

, E 

-1 , 

3 ] 

rev ackl 
and_daca 
and ack 

62 

100 

82 

23 

[ 1 


1 


2 


3 


2 

3 


£ 



E 

-1 


E 

-1 

, E 

-1 , 

-1 1 

and_data 

and_ack 

32 

33 

33 

[ 1 


0 


2 


3 


2 

3 


E 

-1 


E 

-1 


E 

-1 

,E 

-1 , 

2 ] 

rev ackO 
and daca 

20 

45 

45 

[ 2 


0 


3 


4 


2 

3 


E 

-1 


E 

-1 


02 

2 

, E 

-1 , 

2 1 

rev ackl 
and_daca 
rev daCa 

28 

57 

58 

57 

( 3 


0 


4 


1 


2 

3 


E 

-1 


E 

-1 

0 

D2 

2 

, 03 

3 , 

2 ] 

rcv_ack2 
and_daca 
rev daCa 

39 

70 

71 

70 

( 4 


u 


0 


2 


2 

3 


DO 

4 


E 

-1 

0 

02 

2 

,03 

3 , 

2 ] 

rev ack3 

50 


224 




rev data 85 


85 

( 4 


1 


0 

t 

2 

0 

3 , 

4 , 

00 

4 

0 

E 

-1 

0 

E 

-1 ,03 

3 , 

2 ] 

rcv_ack3 

64 






















rcv_data 

101 

101 

( 4 


2 


0 

i 

2 

0 

4 , 

1 , 

DO 

4 

0 

E 

-1 

0 

E 

-1 ,E 

-1 , 

2 ] 

1 rcv_ac)c3 

77 






















rcv_data 

119 

119 

t 4 


3 


0 

t 

2 

0 

0 , 

2 , 

E 

-1 

0 

E 

-1 

0 

E 

-1 ,E 

-1 , 

,2 ] 

1 tcv_ack3 

94 






















snd_ac)c 

116 

71 

[ 3 


1 


4 

t 

1 

0 

3 , 

4 . 

E 

-1 

0 

E 

-1 

0 

E 

-1 ,03 

3 , 

2 ] 

rcv_ack2 

51 






















snd_data 

85 






















rcv_data 

86 

86 

[ 3 


2 


4 

§ 

1 

' 0 

4 , 

1 , 

E 

-1 

0 

E 

-1 

0 

E 

-1 ,E 

-1 , 

2 ] 

rcv_ac)c2 

65 






















snd_data 

101 






















snd_ack 

82 

58 

( 2 


1 


3 

0 

4 

0 

3 , 

4 . 

E 

-1 

0 

E 

-1 

0 

E 

-1 ,E 

-1 , 

2 ] 

1 rcv_ac)cl 

40 






















snd_data 

71 






















3nd_ac)t 

56 

11 

( 2 


0 


2 

0 

3 

0 

1 , 

2 , 

E 

-1 

0 

01 

1 

0 

E 

-1 .E 

-1 , 

1 ] 

t rcv_ackl 

15 






















snd_daCa 

16 






















rcv_daCa 

17 

16 

( 3 


0 


3 

0 

4 

0 

1 , 

2 , 

E 

-1 

0 

01 

1 

0 

02 

2 ,E 

-1 , 

1 1 

' rcv_aclt2 

22 






















snd data 

24 






















i 'v_ 'ata 

25 

24 

( 4 


0 


4 

0 

1 

0 

1 , 

2 . 

E 

-1 

0 

01 

1 

0 

02 

2 ,03 

3 , 

1 ] 

1 rcv_aijlc3 

31 






















rcv_data 

34 

34 

( 4 


1 


4 

0 

1 

0 

2 , 

3 , 

E 

-1 

0 

E 

-1 

0 

02 

2 ,03 

3 , 

1 1 

1 rcv_a''!c3 

43 






















rcv_data 

46 

46 

( 4 


2 


4 

0 

1 

0 

3 , 

4 , 

E 

-1 

0 

E 

-1 

0 

E 

-1 ,03 

3 , 

1 ] 

1 rcv_aclc3 

55 






















rcv_daCa 

59 

59 

[ 4 


3 


4 

0 

1 

0 

4 , 

1 , 

E 

-1 

0 

E 

-1 

0 

E 

-1 ,E 

-1 , 

1 i 

1 rcv_aclc3 

68 






















snd_ack 

47 

25 

[ 3 


1 


3 

0 

4 

0 

2 , 

3 , 

E 

-1 

0 

E 

-1 

0 

02 

2 ,E 

-1 , 

1 ; 

1 rcv~ac)c2 

32 






















snd_data 

34 






















rcv~data 

35 

35 

[ 3 


2 


3 

0 

4 

0 

3 , 

4 , 

E 

-1 

0 

E 

-1 

0 

£ 

-1 ,E 

-1 , 

1 : 

1 rcv~ac)t2 

44 






















snd~data 

46 














% 








snd~ac)t 

27 

17 

( 2 


1 


2 

0 

3 

0 

2 , 

3 , 

E 

-1 

0 

E 

-1 


E 

-1 ,E 

-1 , 

1 : 

1 rcv~ackl 

23 


snd^data 25 
snd~ac)t 14 


225 




System State GRA^H 


0 

( 0 


0 ] 

snd_<lata 

( 1 


0 ] 

1 

1 

t 1 


0 ] 

snd”data 

( 2 


0 ] 

2 





rcv~data 

( 1 


1 ] 

3 

2 

[ 2 


0 1 

snd~data 

t 3. 


0 ] 

4 





rcv”data 

( 2' 


1 1 

5 

4 

( 3 


0 ] 

and'data 

( 4 


0 ] 

7 




rcv”data 

( 3 


1 ] 

8 

7 

1 4 


0 ] 

ccv_data 

[ 4 


1 1 

11 

11 

[ 4 


1 1 

ccv_data 

( 4 


2 1 

16 

16 

( 4 


2 1 

rcv_data 

( 4 


3 ] 

21 

21 

[ 4 


3 ] 

rcv^data 

( 4 


4 ) 

27 

27 

( 4 


4 ] 

snd_ack 

( 4 


0 ] 

31 

31 

( 4 


0 ] 

rcv”aclcO 

[ 0 


0 ] 

0 

8 

( 3 


1 1 

snd^data 

( 4 


1 ] 

11 





rcv_data 

[ 3 


2 ] 

12 

12 

( 3 


2 ] 

snd~data 

( 4 


2 ] 

16 





rev data 

( 3 


3 ] 

17 

17 

( 3 


3 1 

snd_data 

( 4 


3 1 

21 





snd_ack 

t 3 


0 ] 

22 

22 

( 3 


0 1 

rcv~ackO 

( 0 


0 ] 

0 





snd^data 

[ 4 


0 ] 

28 

28 

: 4 


0 ] 

rcv^ackl 

[ 1 


0 ] 

1 





rev^data 

[ 4 


1 ] 

32 

32 

( 4 


1 ] 

rcv”ackl 

( 1 


1 ) 

3 





snd”ack 

I 4 


0 ] 

31 

5 

( 2 


1 1 

snd^data 

( 3 


1 1 

8 





tcv__data 

( 2 


2 ] 

9 

9 

( 2 


2 1 

snd]^data 

( 3 


2 ) 

12 





snd^ack 

( 2 


0 ] 

13 

13 

( 2 


0 1 

rcv^ackO 

( 0 


0 ] 

0 





snd^data 

t 3 


0 ] 

18 

18 

t 3 


0 ] 

rcv“ackl 

( 1 


0 ) 

1 





snd~data 

t 4 


0 1 

23 


• 



rev^data 

( 3 


1 1 

24 

23 

( 4 


0 ] 

rcv”ack2 

[ 2 


0 ] 

2 





rcv”data 

( 4 


1 1 

29 

29 

( 4 


1 ] 

rcv~ack2 

( 2 


1 ) 

5 





ccv”data 

1 4 


2 1 

33 

33 

( “ 


2 1 

rcv”ack2 

( 2 


2 J 

9 





snd”ack 

[ 4 


0 1 

31 

24 

{ 3 


1 1 

rcv”ackl 

1 1 


1 1 

3 





snd^data 

1 4 


1 1 

29 





snd~ack 

1 3 


0 ) 

22 

3 

1 1 


1 ) 

snd~data 

( 2 


1 1 

5 





snd^ack 

1 1 


0 ] 

6 

6 

1 1 


0 1 

ccv~ack0 

( 0 


0 1 

0 





snd^data 

( 2 


0 1 

10 

10 

( 2 


0 1 

ccv_ackl 

( 1 


0 ] 

1 





snd_data 

( 3 


0 1 

14 





rev'data 

( 2 


1 1 

15 

14 

[ 3 


0 1 

rcv_ack2 

( 2 


0 1 

2 





snd data 

( 4 


0 ] 

19 





rcv~data 

( 3 


1 ) 

20 

19 

[ 4 


0 1 

rcv”ack3 

( 3 


0 J 

4 





ccv”data 

( 4 


1 1 

25 

25 

I 4 


1 1 

rcv_ack3 

( 3 


1 ) 

8 





rcv_data 

1 4 


2 1 

30 

30 

I 4 


2 ) 

rcv”ack3 

1 3 


2 ] 

12 





rcv~data 

( 4 


3 1 

34 

34 

( 4 


3 1 

rcv~ack3 

( 3 


3 1 

17 





snd^ack 

1 4 


0 1 

31 

20 

1 3 


1 1 

rcv”ack2 

( 2 


1 J 

5 





snd”data 

( 4 


1 1 

25 





rev^data 

( 3 


2 1 

26 

26 

( 3 


2 ) 

ccv~ack2 

( 2 


2 1 

9 





snd~data 

( 4 


2 ] 

30 





snd”ack 

( 3 


0 1 

22 

15 

1 2 


1 1 

rcv^ackl 

( 1 


1 1 

3 





snddata 

[ 3 


1 1 

20 





snd ack 

[ 2 


0 1 

13 



226 





1 

Machine 

1 

Array Contents 

1 

1 

From 

To 

1 

Transition 

1 Executed 

1 

1 

0 

1 

1 

snd data 

1 yes 

1 

1 

1 

0 

1 

rev ackO 

1 yes 

1 

1 

1 

2 

1 

snd data 

1 yes 

1 

1 

2 

0 

1 

rev ackO 

1 yes 

1 

1 

2 

i 

1 

rev ackl 

1 yes 

1 

1 

2 

3 

1 

snd data 

1 yes 

1 

1 

3 

0 

1 

rev ackO 

1 yes 

1 

1 

3 

1 

1 

rev ackl 

1 yes 

1 

1 

3 

2 

1 

rev ack2 

1 yes 

1 

1 

3 

4 

1 

snd data 

1 yes 

1 

1 

4 

Q 

1 

rev ackO 

1 yes 

1 

1 

4 

1 

1 

rev ackl 

1 yes 

1 

1 

4 

2 

1 

rev ack2 

1 yes 

1 

1 

4 

3 

1 

rcv_ack3 

1 yes 

1 


1 

Machine 

2 

Array Contents 1 

1 From 

1 

To 

1 

Transition 1 

Executed 1 

1 0 

1 

1 

1 

rev data 1 

yes 1 

1 1 

1 

2 

1 

rev data 1 

yes 1 

1 1 

1 

0 

1 

snd ack 1 

yes 1 

1 2 

1 

3 

1 

rev data 1 

yes 1 

1 2 

1 

0 

1 

snd ack 1 

yes 1 

1 3 

1 

4 

1 

rev data 1 

yes 1 

1 3 

1 

0 

1 

snd ack, 1 

yes 1 

1 4 

1 

0 

1 

snd_ack 1 

yes 1 


227 


























APPENDIX I (SCM) SELECTIVE REPEAT, W=1 


INPUT 


scact 
machine 1 
scace 0 

crans snd_datal 1 
sCace 1 

crans rcv_ac)cl 2 
sCaCe 2 

crans adv_winl 0 
machine 2 
scace 0 

crans rcv_dacal 1 
sCaCe 1 

crans snd_aclcl 0 
inicial_scace 0 0 
finish 


228 






VARIABLE DEFINITIONS 


package definitions Is 

type scm_transition_type is {snd_datal, rcv_datal, snd acltl, 
~ rcv_ackl, adv_winl, unused); 

type buf/»r_type is (dl,e,al); 
type boolean_type is (t,f); 

type buffer_array_type is array(1..1) of buffer_type; 
type boolean_array_type is array(1..1) of boolean_type; 

type machinel_atate_type is 
record 

state number : natural :« 0; 

out buffer : buffer_array_typo (others»>dl) 

ack”rec : boolean_array_type (others»>f); 

current i integer range l,.l :■ 1; 

end record; 

type tnachine2_atata_type is 
record 

state number : natural 0; 

in buffer : buffer_array_type (others«>e); 

pkt" rec : boolean’_array_type (others“>f) ; 

current : integer range 1..1 1; 

end record; 

type global_variable_type is 
record ” 

DATA : buffer_type e; 

end record; 

end definitions; 


229 





PREDICATE-ACTION 


separace (main) 

function Analyze_Predicaces_Machinel(local : machinel_stace type; 

GLOBAL: qlcbal_variabre_t:ype) return transition 

staclc_paclcage.stack is 
* begin 

MakaEnpty(transition_stack); 
if (local.out_bufferTl) /” E) then 
Push (transition stack, snd datal) ; 
end if; ~ 

if ((local.ack rec(l}-f) and GLOBAL.OATA»A1) then 
Push (transTtion stack, rev ackl); 
end if; ~ 

Push(transition_stack.adv_winl); 
return transitlQn_stack; 
end Analyze_Predicates_Machinel; 


separate (main) 

function Analyze_Predlcates_Machine2(local : machine2_state_type; 

~ GLOBAL: global_variable_type) return transition_- 

stack_package.stack is ~ 

begin” 

MakeEmpty(transition stack); 

if ((GLOBAL.DATA - oT) and (local.pkt_rec(1)-f)) then 
Push(transition_stack.rcv_datai); 
end if; 

if (local.pkt rec(l)-t) then 

Push(transTtlon_stack.snd_ackl); 
end if; 

return transition_stack; 

end Analyze_Predicates_Machine2; — this returned value is then chec)ted against the 
machine arrays 

-- to determine if indeed this transition can be 

taken 


sepa\rate (main) 

procedure Act ion(in_system_state : in out Gstate_record_type; 

~in_transirion : in out scm2transition_type; 
out_system_state : in out Gstate_record_type) is 

temp : integer :■ 0; 

begin 

case (in_transition) is 
when”(snd_datal) •> 

out_system_state.GLOBAL_VARIABLES.OATA :• 

in_sy3tem_state.machinel_state.out_buf fer(1); 
when (rcv^ackl) "»> ~ 

out_system_state.machineIstate.ack_rec(1) t; 

out_sy3tem_state.GLCBALVARTABLES.DATA :» e; 
out_system_'state .machinel_state .current 1; 

when (rcv_datal) -> 

out_system_state.machine2 state. in_Duff er (1) := 
in_system_state.GLOBAL_VAR TABLES.DATA; 
out_system_state.GLOBAL_VARTABLES.DATA e; 

out_system_state.machine2_state.pkt_rec(1) t; 

when (snd_ackl) -> 

out_system_state.GL0BAL_VARTA8LES.DATA :» al; 
out_system_state.machine2 state.pkt_rec(1) f; 

out_system_3tate .macn ine2^_state . in_buf fer (1) e; 
when (adv_winl) -> 

out_system_state.ma¬ 
ch inel_3tate. ack_rec(in_system_state.machinelstate.current) f; 

~ when oShers -J” 

put_line("There is an error in the Action procedure"); 
end case; 
end Action; 


230 





OUTPUT FORMAT 


s«p«rac« (main) 

procadur* ouCput_Gtuple (cuple : in out Gstace cecord_l:ype) is 
bagin ~ 

put ('* (* i intagar'image (tuple.machinel_scate.stace_number) ) ; 

put(* ( integer'image(tuple.machine2_state.stace_number)); 
put(’‘ 

put(tuple.machinal_state.out_buffer(1), width -> 1); 
put (* , •) ; 

put (tuple.machinal_state.ac)c_rec(l) ,width>>2) ; 
put(• , *) ; 

put(tuple.machlne2_state.in_buffee(1), width -> 1); 
put (• , •) ; 

put (tuple.machine2 state.p)ct rec(1), wldth«>2) ; 
putC . •); 

put(tuple.GLOBAL_VARIABLES.DATA, width ->2); 
putC ]•); 
end output_Gtuple; 

separata (main) 

procedure output_Gtuple_to_file(tuple : in out Gstate_record_type; 

counter : in out integer) is 

begin 

put(reach,counter); 

put(reach,' (* t integer'image(tuple.machinel_state.state_number)); 
put(reach,' ,' t integer'image(tuple.machine2_state.state_number)); 
put(reach,' , “); ~ 

put (reach, tuple.ma'chinel_state.out_buffer (1), width -> 1) ; 
put(reach,' , *); ~ 

put (reach, tuple.machinel_state .ac)c_rec (1), width->2); 
put(reach,' , *); ~ ~ 

put(reach,tuple.machine2_state.in_buffer(1), width »> 1); 
put (reach,' , '*); 

put (reach, tuple .machine2_state. pltt_rec (1), width“>2); 
put(reach,' , *); 

put(reach,tuple.GLOBAL_VAJRrABLES.DATA, width ->2); 
put(reach,' ]'); 
new_line(reach); 
end output_Gtuple_to_file; 

separate (main) 

procedure output_Gstate_node (Gstate pointer : in out Glin)t_type; 

~ Error_flag : in out boolean) is 

begin 

output_line_count :« output line_count ♦ 1; 
if ((output~line_count mod TO) ■ 0) then 
scroll_pause; 
end if; 

set_col(Gcolumn_set); 

put(Gscace_pointer.system_state_number, width •> 3); 
output_Gtuple(Gstate pointer.Gtuple); 

if ( (Gstate_pointer . Tinkl .G1 in)c • null) and then (Gstate_po inter . 1 inli2 .G1 inli = null) 
and then 

(Gstate_pointer . 1 ink3 .G1 inli • null) and then (Gstate_pointer . 1 ink'I .G1 in)t - null)) 

then 

Error_flaq :» true; 
else ~ 

Error_flag false; 
end if; 

and output_Gstate_node; 


231 




OUTPUT 


REACHABILITY ANALYSIS of : *«l_r«p_wl 


Global State GRAPH 


0 

( 0 , 0 , D1 . F 

. E , 

F , 

E 1 

snd_datal 

1 

1 

( 1 . 0 . D1 , F 

. E . 

F . 

01 1 

rcv_datal 

2 

2 

( 1 . 1 . D1 , F 

. D1 

. T 

E ] 

snd_ac)cl 

3 

3 

( 1 , 0 , D1 , F 

, E , 

F . 

A1 1 

rcv_ackl 

4 

4 

( 2 , 0 , D1 . T 

, E . 

F . 

E ] 

adv~wlnl 

0 




System 

state GRAPH 



0 

( 0 . 

0 ] 

snd_datal 

{1.0] 

1 1 

1 

( 1 . 

0 1 

rcv~datal 

(1.1] 

1 2 

2 

( 1 . 

1 1 

snd^ackl [ 

1.0] 

3 

3 

t 1 . 

0 1 

ccv_ackl ( 

2.0) 

4 

4 

( 2 . 

0 ] 

adv~winl ( 

0.0) 

0 


1 

Machine 

1 Array Contents 

1 

1 From 

1 To 

1 Transition 1 

Executed 1 

1 0 

1 1 

1 snd datal 1 

yes 1 

1 1 

1 2 

1 rev ackl 1 

yes 1 

1 2 

1 0 

1 adv_winl 1 

yes 1 


1 

Machine 

2 Array Contents 1 

1 From 

1 To 

1 Transition 1 

Executed 1 

1 0 

1 1 

1 rev data! 1 

yes 1 

1 1 

1 0 

1 snd_ackl 1 

yes 1 


232 












APPENDIX J (SCM) SELECTIVE REPEAT, W=2 


INPUT (FSM) 

start 
machine 1 
state 0 

trans snd_datal 1 
state 1 

trans rcv_acJcl 2 
state 2 

trans adv_winl 0 
machine 2 
state 0 

trans rcv_datal 1 
state 1 

trans snd_acltl 0 
initial_state 0 0 
finish 


233 







VARIABLE DEHNITIONS 


package definitions is 

type scm_transition_type is (snd_data, rcv_data, 

snd^ack. rcv_ack, 
adv^winl, unused); 

type buffor_type is (dl,d2,e,al,a2); 
type boolean_type is (t,f); 

subtype ack buffer_type is buffer_type range e..a2; 
subtype data_buffer_type is buffet_type range dl..e; 

type ack_array_type is array(1..2) of ack_buffer_type; 
type data_array_type is array(1..2) of data_buffet_type; 

type boolean_array_type is array{1..2) of boolean_type; 


type machinel state type 

is 



record 

stata_nufflber 

natural 


Q; 

out_buffer 

: data_array_type 


(dl.d2) ; 

ack_rec 

: boolean_array_type 


(others->f) 

current 

: integer”range~l..2 


1; 

hold 

: boolean type 


f; 

end record; 

type machine2 state type 

is 



record 

state number 

natural 

: ■ 

0; 

in_bu'?fer : 

data_array_type 

:» 

(others«>e) 

pkt" rec : 

end record; 

boolean_atray_type 

• • 

(others“>f) 


type global_variable_type is 


record ~ • 



(others»>e); 

DATA 


: data_array_type 

CONTROL 
end record; 


: ack_array_t’ype 

:» (others»>e); 


end definitions; 


234 







PREDICATE-ACTION 


s 




separate (main) 

function Analyze_Pradicates_Machinel(local : machinel_stato type; 

GLOBAL: global_'7ariabre_type) return transition_- 

staclc_paclcage. stack is 
begin 

MakeEmpty(transition stack); 

if (((local.hold - fl and (local.out buffer(l) /- E) and (GLOBAL.DATA(l)-E)) or 
((local.hold - f) and (local .out^uffor <2) /- E) and (GLOBAL.DATA(2)-E) ) ) then 
Push(tran3ition_stack,snd_data); 
end if; 

if (((local.ack_rec(l)-f) and (GLOBAL.CONTROL(l) - AD) or 

((local.ack_rec(2)-f) and (GLOBAL.CONTROL(2) -A2))) then 
Push (transit’ion_stack, rcv_ack) ; 
end if; ~ 

Push(tran3ition_stack,adv_winl); 
return transition_stack; ~ 
end Analyze_Predicates_Machinel; 

separate (main) 

function Analyze_Predicatas_Machine2(local : machlne2_state type; 

“ GLOBAL: global_varial3le_type) return transition_- 

stack_package.stack is 
begin” 

MakeEmpty(transition_stack); 

if (((GLOBAL.DATA(l) - 01) and (GLOBAL.DATA(2) - E) and (local.pkt_rec(1)-f)) or 
((GLOBAL.DATA(1) « E) and (GLOBAL.OATA(2) - 02) and (local.pkt_rec(2)-f)) or 
((GLOBAL.DATA(1) - 01) and (GLOBAL.OATA(2) • 02) and (local.pkt_rec(1)-t) and 
(local.pkt_rec(2)-f)) or 

((GLOBAL.OATA(1) - 01) and (GLOBAL.OATA(2) - 02) and (local.pkt_rec(1)-f) and 
(local.pkt_rec(2)"f))) then 
Push(transit'ion_stack, rcv_data) ; 
end if; ~ 

if (((GLOBAL.CONTROL(l)-E) and (local-pkt rec(l)-t)) or 

((GL0BAL.C0NTR0L(2)-E) and (local.pkt“rec(2)-t))) then 
Push(transition_stack,snd_ack); 
end if; 

return transition_stack; 

end Analyze_Predicates_Machine2; — this returned value is then checked against the 
machine arrays 

-- to determine if indeed this transition can be 

taken 

separate (main) 

procedure Act ion(in_sy3tem_state : in out Gstate_record_type; 

in_tran3ition ; in out scm”transition_cype; 
out_system_3tate : in out Gstatej^record_type) is 


temp : integer 0; 

begin 

case (in_transition) is 
when~(snd_data) ■> 

out_3ystem_state.GLOBALVARTABLES.- 
DATA(in_system_3tate.machinel_3tate.current) := 

~ in_system state.machinelstate.ouc_- 

buffer(in_3ystem_state.machinel_state.current); 

~ out_3y3tem_state.machinel state.current in_system_state.machinel_state.- 

current; 

begin 

case ( in_sy3tem_3tate . nachmel_3tate .current) is 
1 when 1 «> 

out_system_3tate.machinel_state.current :• 2; 
when 2 

--out_3yscem_3tate.machinel_state.current 1; 
out_system_3tate.machinel_state.hold :» t; 
when others «> 

, put_line("error in the action procedure"); 

end case; 
end; 

when (rcv_aclr) =>> 

if(in_system_state.GLOBAL_VARIABLES.CONTROL{l)=A1) then 
out_system_state.machinel_state.ack_rec(1) t; 

out_system_state.GLOBAL_VARIABLES.CONTROL(1) :» e; 
out_sy3tem_state.machinelstate-current :• 1; 


235 




else 

if (ln_system_3Cate.GL0BAL_VARIAaLES.C0NTR0L(2)-A2) then 
out_system_staCe.machinel_scate.aclc rec(2) :• C; 
out_system_scate.GLOBAl,_VARIABLES.CONTROL (2) e; 

•<ystem~state .machine^l_stace . current :« 2; 
end ~ 

end if; 

when (rev data) -> 

if (in_sy3Cem_state.GLOBAL VARIABLES.DATA(1) - Dl) then 
out_sysCem state.machine? state.in_buffer(1) 
in_system_stace.GLOBAL' vARIABLES.DATA( 1); 
ouC_system_3tate.GL0BAL_VARIAELES.DATA(l) e; 
out_system_state.machine2_state.p)ct_rec(l) t; 
else ~ 

if (ln_syscem_state.GLOBAL VARTABLES.DATA(2) - D2) then 
out_3ystera_state.machine? state.in_buffer(2) 
in_system_scate.GL0BAL_VARIABLES.DATA(2); 
out_system_state.GLOBAL_VARIABLES.DATA(2) e; 
out~sysCem~atate .machire2_stace .plct_cec (2) C; 
end if; ~ 

end if; 

when (3nd_ac)c) -> 

if (in~system_3tate.machine2_stace.pkt_rec\l)-t) then 
Out_system_state.GL0aAL_VARIAaLES.CONTROL(1) al; 

out_system_state .machine2_state .plct_rec (1) f; 

out_3ystem_state.machine2_stace.in_buffer(1) e; 

else "" ~ ~ ~ 

if (in system state.machine2 state.pkt_rec(2)-t) Chen 

"out_system_state.GLOBAL_VARIABLES.CONTROL(2) a2; 

out_system~state.machine2_sCate.pkC rec(2) :» f; 
out~3yatem~state.machine22sCate.in_Buffer(2) e; 

end if; ~ 

end if; 

when (adv_winl) »> 

if ((ln_syscem_state.machinel_state.ack_rec(1)»C) and 
(in~system'sCate.machineInstate.ack~rec(2)»f) and 
(in~system~state.machinel~stace.hol3 • t) and 
(in'system state.machinel~state.current • 1) and 
(in~syscem~state.GLOBAL VARIABLES.DATA(1) - B) and 
(in~system~state.GLOBAL2vARIABLES.DATA(2) - D2)) then 
out^syatemlstate.machinel_state.ack_rec(1) :«f; 
out^syatsm'staCe.machinel^state.ack~rec(2) :»f; 
out~syStem~state.machinel~state.hol3 :»f; 
out'system~state.machinel~3tace.current :«2; 
ouc~system~state.GLOBAL VARIABLES.DATA(1) Dl; 

out2system~sCaCe.GLOBAL2VARIASLES.DATA(2) E; 

elsif 

((in_syscem_scate.machinel_3tate.ack_rec(1)«t) and 
(in_system_state.machinel_state.ack rec(2)»f) and 
(in_sy3tem_stace.machinel_stace.hol3 - t) and 
(in~3ystem_stace.machinel_scace.current • 1) and 
(in_system_scace.machine2_3Cace.in_buffer(1) • E) and 
( in_3yscem_state .machine2_state'. in_buf fer (2) = D2) and 
(in2syscem_state.machine2_scate.pkc_rec(1) - f) and 
( in_sy3tem_state .machine2_stace . pkc_rec (2) ■= t)) Chen 
out_sy3tem_state.machinel_state.ack_rec(1) :'f; 

out_sy3tem_state.machine Istate.ack'rec(2) :-f; 

ouc_system_stace.macninel_stace.hoid :=f; 
out_3ystem_state.machinelstace.current :-2; 
out~syscem_scate.macnine2_state.inbuffer(1) :» Dl; 

out3sy3tem_stace.machine2_state.in_buffer(2) :• E; 

out~system_state .mac.hine2_state .pkt_rec (1) :» c; 

out_systom~state.machine2 state.pkt_rec(2) :» f; 
elsif 

((in_system_3tate.machinel_scate.ack_rec(1)«t) and 
(in~system_state.machinel_scace.ack_cec(2)-f) and 
(in_system_state.machinelstace.hold - t) and 
(in2syscem_state.machinel_scace.current • 1) and 
(in_system_state.GLOBAL_VABIABLES.CONTROL(1) = E) and 
(in_syscem_stace.GL3BAL_VARTABLES.CONTROL(2) - A2)! then 
out^system state, mach me', state, ackrec (1! ;^f; 

ouC_syscem_state.machinel_state.ack_rec(2) :=f; 
ouC_system_state ..macn inei state.hold :»f; 
out _system_state . mach me Instate .current : «2; 
out_system_scace.GLOBAL_VAHIABLES.CONTROL(1) Al; 


236 





out_system_staCe.GL0BAL_VAfiIABLES.C0NTR0L(2) E; 

else 


if ((in system state .machinel state . aclc_rec (1) *t) and 
(in_sy3tem_state.GL0aAL_VARIABLES.DATA(2) /-E) ) then, 
out system_state.machinel_state.hold :• t; 

elsif ( {in~aystem_state .machinel_state .acic_rec (1)-t) and 
(in system_state.machinel~state.ac!t_rec (2)-f) and 
(in_3y3tem_state.GL0BAI,_VARIABLES.DATA(2)-E) ) then 
out_SYStem_state .machinel_state .ac)c_rec (1) :» f; 

elsif ( (in_system_state .machinel_state.aclc_rec (1) ”f) and 
(in_system_state .machinel_state .ack_rec (2) -t) ^ .id 
(in_system state.machinel_state.hold - t)) then 

out_sy3tem_state.machinel_state.aclt rec(2) :• f; 
out_3y3tem~state.machinel_state.hol3 f; 

else 

if { (in_system_state .machinel_state .aclc_rec (1)-t 1 and 
(in_3y3tem_3tate .machinel_state .ac)t_rec (2) “t) and 
(in_system state.GL08AL_VARIABLES.DATA(1) “El and 
(in_3y3tem~state.GLOBAL VARIABLES.DATA(2)-E)) then 
out 3 ystem_state.macRinel_3tate.hold f; 
out~system state.machinel_state.ac)t_rec (1) :• f; 

out 3ystem~state.machinel_state.ack_rec(2) f; 
end if; ~ 
and if; 

out sy 3 tem_scate.machinel_state.Current 1; 

an3’ if; 

whan others »> 

put_line("There is an error in the Action procedure”); 
end case; 
end Action; 


g 


) 


I 


237 







OUTPUT FORMAT 


separate (main) 

procedure output_Gtuple(tuple : In out Gstate_cecord type) Is 
be^in “ 

put(* (• i integer'image(tuple.machinel_state.state_number)); 
put(* t integer'image(tuple.machine2 state.state number)); 
putC,'); 

put(tuple.machine1 state.out buffer(1). width •> 2); 
put{'*.'’); 

put(tuple.machlnel_state.out_buffer(2), width -> 2); 
put (*,*); 

put (tuple.machinel_state.aclc rec (1), width->l) ; 
putC,-); 

put (tuple.machinel state.acic rec(2),width->l); 
putC,'); 

put(tuple.machinel state.hold. width->l); 
putC.-); 

put(tuple.machine2_state.in_buffer(1). width -> 2); 
put (*,”); 

put(tuple.machine2 state.in buffer(2). width -> 2); 
put(-.') ; 

put (tuple.machine2_state.p)ct_rec(l) ,width”>l) ; 
put (","); 

put (tuple.machine2 state.p)ct rec (2) , width->l); 
putC*,'); 

put(tuple.GLOBAL VARIABLES.DATA(1), width ->2); 
put('‘ •); 

put(tuple.GLOBAL_VARIABLES.DATA(2), width ->2); 
put (•,') ; 

put(tuple.GLOBAL VARIABLES.CONTROL(1), width «>2); 
put(«,'); 

put(tuple.GLOBAL_VARIABLES.CONTROL(2), width ->2); 
put ('•,'); ~ • 

put(tuple.machinel_state.current,width»>l); 
put(* ]'); 
end output_Gtuple; 

separate (main) 

procedure output_Gtuple_to_file(tuple : in out Gstate_record type; 

counter : in out integer) is” 

begin 

put(reach,counter); 

put(reach,' (” i integer'image(tuple.raachinel_staCo.state number)) 
put(reach," t integer'image(tuple.machine2_state.state number)); 
put (reach,','’) ; ~ 

put(reach,tuple.machinel_state.out_buffer(1), width •> 1); 
put(reach,*,"); 

put(reach,tuple.machinel_3tate.out_buffec(2), width »> 1); 
put (reach, ",'’); 

put (reach, tuple .machinel_state .ac)c_cec (1) , width»>l) ; 
put(reach,','); 

put(reach,tuple.machinel_state.ack_rec(2) , width»>l); 
put (reach, *,'*); 

put(teach,tuple.machine2_state.in_buffer(1), width »> 1); 
put (teach, '',"); 

put(reach,tuple.machine2_state.in_buffer(2), width »> 1); 
put(reach,",') ; 

put(reach,tuple.machine2_state.pkt_cec(l),width=>l); 
put(reach,","); 

put(roach,tuple.machine2_state.pkt_rec(2),width»>l); 
put(reach,","); ” 

put(reach,tuple.GLOBAL_VARIABLES.OATA(l), width ->1); 
put(reach," )"); 
now_line(reach); 
end oucput_Gtuple_to_file; 

separate (main) 

procedure output_Gstate_node (Gstate pointer : in out Glinlt_type; 

Error_riag : in out boolean) is 

begin 

output_line_count :• output line_count ♦ 1; 
if ((output_Line_count mod TO) » 0) then 
scroll_pause; 







end if; 

3et_col(Gcolumn_3et); 

put(G3tace_polnter.3ystem_3Cate_number, width -> 3); 
output_Gtuple(G3tate_pointer.Gtuple); 

if ((G3tate_pointer.linkl.Glink » null) and then (Gstate_pointer.Iink2.Glink » null) 
and then 

(G3tate_pointer.links.Glink « null) and then (G3tate_pointer.xink4.Glink » null)) 
then ~ 

Error_flag :• true; 

el3e 

Error_flag falae; 
end if; 

end output_G3tate_node; 





OUTPUT 


REACHABILITY ANALYSIS of : sel_rep_w2 


Global State GRAPH 


0 

: 0 , 

0,D1,D2,F,F,F,E 

,E 

.F.F.E 

E . 

E .E 

.1 1 

snd_data 

1 

1 

( 1 , 

0,Dl,02,F,F,t,E 

,E 

.F.F.Dl 

E . 

E .E 

.2 1 

snd_data 

2 









rcv_data 

3 

2 

[ 3 , 

0,D1.D2,F.F.T.E 

.E 

.F.F.Ol 

02. 

E .E 

.2 1 

rcv_data 

4 

4 

t 3 . 

1.D1,02.F.F,T,D1 

.E 

.T.F.E 

02. 

E .E 

.2 1 

3nd~aclc 

6 

6 

( 3 , 

0,D1,D2,F,F,T,E 

• E 

.F.F.E 

02. 

Al.E 

.2 1 

rcv_ack 

8 









rcv_data 

9 

8 

[ 4 , 

0,D1,D2,T,F,T,E 

.E 

.F.F.E 

02. 

E .E 

.1 1 

adv_winl 

1 









rcv_data 

10 

10 

[ 4 , 

1,D1,D2,T,F.T,E 

.02 

.F.T.E 

E . 

E ,E 

.1 ] 

adv_winl 

3 









snd_ack 

12 

12 

1 4 , 

0,D1.D2,T,F.T.E 

.E 

.F.F.E 

E . 

E .A2 

.1 1 

adv_winl 

5 

9 

[ 3 , 

l.Dl,D2,F,F.T.E 

.02 

.F.T.E 

E . 

Al.E 

.2 1 

rcv_aclc 

10 









snd~aclc 

■ 11 

11 

( 3 . 

Q,D1,D2,F,F,T,E 

.E 

.F.F.E 

E . 

A1.A2 

.2 1 

rcv~aclc 

12 

3 

( 1 . 

1,D1,D2.F,F,F.D1 

.E 

.T.F.E 

E . 

E .E 

.2 ) 

snd_data 

4 









snd_aclc 

5 

5 

[ 1 . 

0,D1,D2.F,F,F,E 

.E 

.F.F.E 

E , 

Al.E 

.2 ] 

rcv_aclc 

7 









snd_data 

6 

7 

[ 2 , 

0,D1,D2,T,F,F,E 

,E 

.F.F.E 

E . 

E .E 

.1 1 

adv_winl 

0 


System State GRAPH 


0 

( 0 , 

0 ] 

3nd_data 

[ 1 


0 ] 

1 

1 

( 1 . 

0 ! 

snd~data 

1 3 


0 1 

2 




rcv^data 

( 1 


1 1 

3 

2 

1 3 . 

0 1 

rcv^data 

( 3 


1 1 

4 

4 

( 3 . 

1 1 

snd^ack 

( 3 


0 1 

6 

6 

( 3 , 

0 ! 

rov~ack 

( 4 


0 1 

8 




rcv“data 

( 3 


1 1 

9 

8 

( 4 . 

0 ) 

adv~winl 

( 1 


0 ) 

1 




ccv”data 

( 4 


1 1 

10 

10 

( 4 . 

1 1 

adv~winl 

( 1 


1 1 

3 




snd~ack 

1 4 


0 ] 

12 

12 

( 4 , 

0 1 

adv~winl 

1 1 


0 1 

5 

9 

( 3 . 

1 1 

tcv~ack 

[ 4 


1 ) 

10 




snd'ack 

( 3 


0 ) 

11 

11 

( 3 . 

0 1 

rev ack 

( 4 


0 i 

12 

3 

( 1 . 

1 1 

snd_data 

( 3 


1 ) 

4 




3nd_ack 

1 1 


0 1 

5 

5 

[ 1 . 

0 ! 

rcv_ack 

1 2 


0 1 

7 




and data 

( 3 


0 1 

6 

7 

( 2 , 

0 1 

adv winl 

[ 0 


0 1 

0 


1 

Machine 

1 Array Contents 

1 

1 From 

1 To 

i Transition i 

Executed 1 

1 0 

1 1 

1 snd data 

yes 1 

1 1 

1 2 

1 rev ack 

yes 1 

1 1 

1 3 

snd data i 

yes 1 

1 2 

1 0 

' adv Hinl 

yes 1 

1 3 

1 4 

1 rev ack I 

yes 1 

1 4 

1 1 

1 adv_winl ' 

yes 1 


1 

Machine 

2 Array Contents 


1 F rom 

1 To 

1 Trans it ion 

Executeo 1 

1 0 

1 1 

1 rev data i 

yes 1 

1 1 

i 0 

1 snd_ack 1 

yes 1 














REFERENCES 


p 


\ 


t 




[BART 87] 
[BENV 91] 

[BCXX:91] 

[FELJ5 90] 
[GOUD 83] 

[GONZ91] 
[HOLZ91] 
[JENS 92] 

[KING 91] 
[LUND 88] 


Barton, M., and others, “Architectural and Behavioral Modeling in 
Computer CommuniciLdon” Distributed Processing, North-Holland, 1987. 

Benvenutti, Eugene S., “Selection and Specification of a Data Link Protocol 
for VSAT Based Inter-Lan Communications,” Master's Thesis, U.S. Naval 
Postgraduate School, Monterey, Ca., 1991. 

Booch, Grady, Software Engineering with Ada, Addison-Wesley Publishing 
Co., 1991. 

Feldman, M.B., Data Structures with Ada, Reston Publishing Co., 1990. 

Gouda, M. G., “An Example for Constructing Communicating Machines by 
Stepwise Refinement,” Proc. 3rd IFIP WG 6.1 Int. Workshop on Protocol 
Specification, Testing, and Verification, North-Holland Publ., 1983. 

Gonzalez, Dean W., Ada Programmer's Handbook and Language Reference 
Manual, Benjamin/Cummings Publishing Co., 1991. 

Holzmann, Ger^d X., Design and Validation of Computer Protocols, 
Prentice Hall Publishing Co., 1991. 

Jensen, Patricia B., “Historical Overview of Data Communication with 
Analysis of a Selective Repeat Protocol,” Master’s Thesis, U.S. Naval 
Postgraduate School, Monterey, Ca., 1992. 

King, Paul W., “Formalization of Protocol Engineering Concepts,” IEEE 
Transactions on Computers, April 1992. 

Lundy, G.M., and Miller, R.E., “A Variable Window Protocol Specification 
and Analysis,” Protocol Specification, Testing, and Verification, VII, North- 
Holland, 1988. 


[LUND 91a] Lundy, G.M., and Miller, R.E., “Specification and Analysis of a Data 
Transfer Protocol Using Systems of Communicating Machines,” Distributed 
Computing, December 1991. 

[LUND 91b] Lundy, G.M., “Using FDT’s as a Teaching Tool in Computer 
Communications Networks,”submitted for publication. 

[LUND 92a] Lundy, G. M. and Miller, R. E., “Analyzing a CSMA/CD Protocol Through 
a System of Communicating Machines Specification,” submitted for 
publication. 


241 



[LUND 92b] Lundy, G. M., “Specification and Analysis of a Composition of Protocols,” 
Information Sciences, to appear. 

[MANB 89] Manber, Udi, Introduction to Algorithms, Addison-Wesley Publishing Co., 
1989. 

[PENG 91] Peng, Wuxu and Puroshothaman, S., “Data Flow Analysis of 
Communicating Finite State Machines,” ACM Transactions on 
Programming Languages and Systems, Vol.l3, No. 3, July 1991. 

[RAND 92] Randall, M., “Communication Protocol Conformance Testing Using a 
System of Communicating Machines Specification,” Master’s Thesis, Naval 
Postgraduate School, to be published 1992. 

[RUDI83] Rudin, H. and West, C. n.J*rotocol Specification, Testing, and Verification, 
III, Elsevier Science Publishers, B. V., 1983. 

[RUMB91] Rumbaugh, James and others, Object-Oriented Modelling and Design, 
Prentice Hall Publishing Co., 1991. 

[SARI 91] Sarikaya, B, and others, “Estelle-based Test Generation Tool,” Computer 
Communications, November 1991. 

[SIST91] Sisto, R. and others, “A Protocol for Multi-rendezvous of LOTOS 
Processes,” IEEE Transactions on Computers, April 1991. 

[SKAN 88] Skansholm, Jan, Ada From the Beginning, Addison-Wesley Publishing Co., 
1988. 

[STAL91] Stallings, William, Data and Computer Communications, 3rd ed., 
Macmillan Publishing Co., 1991. 

[TANE81] Tanenbaum, Andrew S., Computer Networks, Prentice-Hall Publishing 
Co., 1981. 

[VUON 83] Vuong, Son T. and Cowan, Donald D.,” Reachability Analysis of Protocols 
with FIFO Channels,” Proceedings, ACM SIGCOM, March 8-9, 1983. 





INITIAL DISTRIBUTION LIST 


Defense Technical Information Center 
Cameron Station 
Alexandria, VA 22304-6145 

Dudley Knox Library 
Code 52 

Naval Postgraduate School 
Monterey, CA 93943-5002 

Dr. G. M. Lundy 
Code CS/Lu 

Assistant Professor, Computer Science Department 
Naval Postgraduate School 
Monterey, CA 93943-5000 

Dr. Amr Zaky 
Code CS/Za 

Assistant Professor, Computer Science Department 
Naval Postgraduate School 
Monterey, CA 93943-5000 

Defense InformatioB Systems Agency 
Code; DO 

ATTN: COL Bowser 
701 South Courthouse Road 
Arlington, VA 22204-2199 

Headquarters 

Total Army Personnel Command 
TAPC-OPF-SC 
ATTNLTC Kehoe 
200 Stovall Street 
Alexandria, VA 2332-0415 

CPT Matthew J. Rothlisbcrger 
7200 Leawood Lane 
Charlotte, NC 28227 


