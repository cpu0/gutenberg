ORA: Organization Risk Analyzer* 


CASOS Technical Report 

Kathleen M. Carley, Jeff Reminga 
July 2004 
CMU-ISRI-04-106 


Carnegie Mellon University 
School of Computer Science 
ISRI - Institute for Software Research International 
CASOS - Center for Computational Analysis of Social and Organizational Systems 


Abstract 

ORA is a network analysis tool that deteets risks or vulnerabilities of an organization’s design 
strueture. The design strueture of an organization is the relationship among its personnel, 
knowledge, resouree, and task entities. These entities and relationships are represented by the 
Meta-Matrix. Measures that take as input a Meta-Matrix are used to analyze the struetural 
properties of an organization for potential risk. ORA eontains over 50 measures whieh are 
eategorized by whieh type of risk they deteet. Measures are also organized by input requirements 
and by output. ORA generates formatted reports viewable on sereen or in log files, and reads and 
writes networks in multiple data formats to be interoperable with existing network analysis 
paekages. In addition, it has tools for graphieally visualizing Meta-Matrix data and for 
optimizing a network’s design strueture. ORA uses a Java interfaee for ease of use, and a C++ 
eomputational baekend. The eurrent version ORA 1.2 software is available on the CASOS 
website http://www.easos.es.emu.edu/projeets/ora/software.html. 


* This work was supported in part by the National Science Foundation under grants: No. ITR/IM IIS-0081219, NSF 
IGERT 9972762 in CASOS, NSF IRI9633 662, the Offiee of Naval Researeh (ONR), Offiee of Naval 
Research Grant No. N00014-97-1-0037 and N0014-02-10973, and NASA.. Additional support was 
provided by the center for Computational Analysis of Social and Organizational Systems (CASOS) and the Institute 
for Software Research International at Carnegie Mellon University. The views and conclusions contained in this 
document are those of the authors and should not be interpreted as representing the official policies, either expressed 
or implied, of the National Science Foundation, the office of naval research, NASA, or the U.S. government. 



Report Documentation Page 

Form Approved 

0MB No. 0704-0188 

Public reporting burden for the collection of information is estimated to average 1 hour per response, including the time for reviewing instructions, searching existing data sources, gathering and 
maintaining the data needed, and completing and reviewing the collection of information. Send comments regarding this burden estimate or any other aspect of this collection of information, 
including suggestions for reducing this burden, to Washington Headquarters Services, Directorate for Information Operations and Reports, 1215 Jefferson Davis Highway, Suite 1204, Arlington 

VA 22202-4302. Respondents should be aware that notwithstanding any other provision of law, no person shall be subject to a penalty for failing to comply with a collection of information if it 
does not display a currently valid 0MB control number. 

1. REPORT DATE 

JUL 2004 

2. REPORT TYPE 

3. DATES COVERED 

00-07-2004 to 00-07-2004 

4. TITLE AND SUBTITLE 




5a. CONTRACT NUMBER 

ORA: Organization Risk Analyzer 



5b. GRANT NUMBER 





5c. PROGRAM ELEMENT NUMBER 

6. AUTHOR(S) 




5d. PROJECT NUMBER 





5e. TASK NUMBER 





5f. WORK UNIT NUMBER 

7. PERFORMING ORGANIZATION NAME(S) AND ADDRESS(ES) 

Carnegie Mellon University,School of Computer 

Science,Pittsburgh,PA,15213 

8. PERFORMING ORGANIZATION 

REPORT NUMBER 

9. SPONSORING/MONITORING AGENCY NAME(S) AND ADDRESS(ES) 


10. SPONSOR/MONITOR’S ACRONYM(S) 





11. SPONSOR/MONITOR’S REPORT 
NUMBER(S) 

12. DISTRIBUTION/AVAILABILITY STATEMENT 

Approved for public release; distribution unlimited 

13. SUPPLEMENTARY NOTES 

The original document contains color images. 

14. ABSTRACT 

15. SUBJECT TERMS 

16. SECURITY CLASSIFICATION OF: 

17. LIMITATION OF 
ABSTRACT 

18. NUMBER 
OF PAGES 

49 

19a. NAME OF 
RESPONSIBLE PERSON 

a. REPORT 

unclassified 

b. ABSTRACT 

unclassified 

c. THIS PAGE 

unclassified 


standard Form 298 (Rev. 8-98) 

Prescribed by ANSI Std Z39-18 





Keywords: dynamic network analysis, measures, meta-matrix, organization risk 

CMU SCS ISRI - ii - CASOS Report 



Table of Contents 


I. Index of Tables.iv 

II. Index of Figures.iv 

1. ORA Motivation and Deseription.1 

2. Input.2 

2.1 The Organization as Meta-Matrix.2 

2.1.1 DyNetML.3 

2.1.1 Extended-DL.3 

3. Meta-Matrix Measures.4 

3.1 Measure Risk Categories.5 

3.1.1 Critical Employee Risk.5 

3.1.2 Resource Allocation Risk.5 

3.1.3 Communication Risk.5 

3.1.4 Redundancy Risk.5 

3.1.5 Task Risk.5 

3.1.6 Personnel Interaction Risk.5 

3.1.7 Performance Risk.6 

3.2 Measure Input Requirements.6 

3.3 Measure Output Types.6 

4. Reports.8 

5. User Interface Components.10 

5.1 Meta-Matrix Manager.10 

5.2 Measure Manager.11 

5.3 Output Panel.11 

5.4 Tools.11 

5.4.1 Visualization.11 

5.4.2 Optimizer.13 

5.4.3 Regression Tool.13 

6. System Requirements.13 

7. Conclusion.13 

8. Euture Work.14 

References.15 

Appendix A - ORA Measures.16 

Appendix B - ORA Risk Category Measures.39 


- ill - 


CMU SCS ISRI 


CASOS Report 




































L Index of Tables 

Table 1: Meta-Matrix Showing Networks of Relations Connecting Node Entities.2 

Table 2: Illustrative metrics categorized by Input, Risk, and Output.7 

II. Index of Figures 

Figure 1: Risk and Vulnerability Report File.8 

Figure 2: Comparing Two Organizations: Risk and Vulnerability Report.9 

Figure 3: ORA Interface.10 

Figure 4: NetworkViz Visualizer.12 

Figure 5: JUNG Visualizer.12 


CMU SCS ISRI - iv - CASOS Report 










1, ORA Motivation and Description 


ORA is a network analysis tool that detects risks or vulnerabilities of an organization’s 
design structure. The design structure of an organization is the relationship among its personnel, 
knowledge, resources, and tasks entities. These entities and relationships are represented by a 
collection of networks called the Meta-Matrix. ORA analyzes the Meta-Matrix using measures, 
and reads and writes network data in multiple formats to make it interoperable with existing 
network analysis software. 

The modeling of organizations as networks and the development of measures to examine 
their design structure is well developed. Even a cursory analysis of the literature reveals a wide 
variety of measures for assessing organizational risk and vulnerability [1] [2] [4] [6] [9] [10]. 
Such measures vary dramatically in the detail and type of data needed to determine that measure. 
They span from the assessment of critical employees, to the tendency to group think, to the 
potential for adaptability. In fact, it is possible to provide a suite of measures and metrics that 
capture both the organizational design and the possible changes in that design that are likely to 
result in group think, error cascades, and IP loss [7]. 

Given the high potential number of vulnerabilities and risks, what is needed is a framework 
for evaluating this set of metrics, assessing the value of existing metrics, locating gaps in the 
existing metrics, developing new metrics as needed, and so providing a more comprehensive 
guide to which metrics to use when. ORA has been designed to provide this framework. 

A large number of metrics for assessing organizational vulnerability and design have been 
assessed and over 50 of them are now incorporated in ORA. As metrics are incorporated, if they 
cannot handle binary data, then we are developing a non-binary form. Help is provided for each 
measure that describes the measure definition and formula, input data constraints, and 
computational complexity. Fastest known algorithms are incorporated, employing sparse and 
non-sparse matrix techniques. Further, the number of nodes of any one type - personnel, 
knowledge, resources, tasks etc. in ORA is limited only by machine memory and processor 
speed. All measures are based on the Meta-Matrix and take into account the relations among 
personnel, knowledge, resources and tasks. These measures are based on work in social 
networks, operations research, organization theory, knowledge management, and task 
management. Where possible, metrics are normalized to be within 0 and 1 to provide a 
consistent framework. 

ORA can be used to do a risk audit for the organization of its individual and organization 
risks. Such risks include, but are not limited to, tendency to groupthink, overlook of information, 
communication barriers, and critical employees. It evaluates potential organizational risks based 
upon underlying social, knowledge, resource, and task networks. This tool takes the Meta- 
Matrix data at a particular point in time and calculates a series of metrics assessing the team’s 
design, particularly the command and control structure, and the associated organizational risks. 
ORA has been used to assess risk in various organizational and government settings including 
NASA, nursing hospitals, and joint task force settings. 


- 1 - 


CMU SCS ISRI 


CASOS Report 



2, Input 


2,1 The Organization as Meta-Matrix 

The main unit of input in ORA is the organization. An organization ean be modeled and 
eharaeterized as a set of interloeked networks eonneeting entities sueh as people, knowledge 
resourees, tasks and groups. These interloeked networks ean be represented using the Meta- 
Matrix eoneeptual framework (see [5] [7] [8]) presented in Table 1. 


Table 1: Meta-Matrix Showing Networks of Relations Connecting Node Entities 



People 

Knowledge 

Resources 

Tasks/Projects 

People 

Social Network 
Who talks to, 
works with, and 
reports to whom 

Knowledge 

Network 

Who knows what, 
has what 
expertise or skills 

Resource 

Network 

Who has access 

to or can use 

which resource 

Assignment 

Network 

Who is assigned to 
which task or 
project, who does 
what 

Knowledge 


Information 
Network 
Connections 
among types of 
knowledge, 
mental models 

Resource Usage 
Requirements 

What type of 
knowledge is 
needed to use that 

resource 

Knowledge 

Requirements 

What type of 
knowledge is 
needed for that task 
or project 

Resources 



Inter-operability 
and Co-usage 
Requirements 
Connections 
among resources, 
substitutions 

Resource 

Requirements 

What type of 
resources are 
needed for that task 
or project 

Tasks/ 

Projects 




Precedence and 
Dependencies 

Which tasks are 
related to which 


This Meta-Matrix serves as an integrating feature of a managerial toolkit. The Meta-Matrix 
serves several purposes; 1) it provides a way of eoneeptualizing the set of entities and relations 
among them that the researeh and assoeiated tools will foeus on; 2) it brings to the forefront the 
reeognition that the data that is eollecting will be not just the attributes of the entities (people, 
knowledge, resourees, tasks and/or projeets, and groups or teams) but also the set of relations or 
ties among them; 3) it provides an identifieation of the elass of entities and relations that will be 
used in doing organizational design, analysis and risk evaluation; and 4) it provides a eommon 
ontology for talking about and representing organizational information. 


CMU SCS ISRI 


-2- 


CASOS Report 




2,1 Meta-Matrix Data Formats 


To make ORA interoperable with existing network analysis software, ORA reads and writes 
Meta-Matrix network data in multiple formats. The networks that constitute a Meta-Matrix can 
be stored in separate files, with one network per file, or they can be collected into a single file. 

ORA supports the DL, Extended-DL (EDL), CSV, and RAW formats for reading and writing 
a file containing a single type of network (for example, the type Agent x Agent). The RAW and 
DE formats are defined by the network analysis package UCINET [3]. DyNetML and EDL are 
the supported formats for representing in a single file the multiple network types of the Meta- 
Matrix. 

2.1.1 DyNetML 

DyNetML is an XML specification that represents the node entities Agent, Knowledge, 
Resource, and Task and the networks defined on them. DyNetML supports multiple Meta- 
Matrices to be within the same file, and each Meta-Matrix can have different Agent, Knowledge, 
Resource, and Task node sets. Because DyNetML is XML it is humanly readable. DyNetML is 
described more fully in the DyNetML Technical Report. 

2.1.1 Extended-DL 

Extended-DL (EDL) is the DL format of UCINET with two extensions. The first extension 
adds more header information to the DL file using two additional tokens. The two tokens 
identify the type of row nodes and the type of column nodes. The two tokens are ROW TYPE 
and COLUMN TYPE and are followed by one of the following: AGENT, KNOWLEDGE, 
RESOURCE, or TASK. COLUMN TYPE can be shortened to COL TYPE. Note that tokens in 
DL and EDL are case insensitive. The tokens allow the user to specify the network type of the 
data. Lor example, the following EDL file specifies a Knowledge Network (Agent x 
Knowledge): 

ROW TYPE = AGENT 
COLUMN TYPE = KNOWLEDGE 
DL 

NR=3, NC=6 

EORMAT = EULLMATRIX 

DATA: 

0 110 0 0 
1 0 0 0 1 0 
0 0 0 1 1 1 

Note that the ROW TYPE and COLUMN TYPE tokens appear before the DL token, and 
because the tokens are optional, a valid DL file is a valid EDL file. In short, an EDL file can be 
created by adding the two new tokens to the beginning of an existing DL file. 

The second extension in EDL is the ability to have multiple network types in a single file. 
Each network type section must be a complete and valid EDL file. The sections are separated by 
two vertical bars (‘||’). Thus, the extension simply allows files to be concatenated into a single 


-3 - 


CMU SCS ISRI 


CASOS Report 



file. For example, the following file eontains two types of networks from a Meta-Matrix, a 
Knowledge Network (Agent x Knowledge) and a Communieation Network (Agent x Agent): 


ROW TYPE = AGENT 
COL TYPE = KNOWLEDGE 
DL 

NR=3, NC=6 
EORMAT = EULLMATRIX 
MATRIX LABELS: 
"Knowledge Network" 
DATA: 

0 110 0 0 
1 0 0 0 1 0 
0 0 0 1 1 1 
I I 

ROW TYPE = AGENT 
COL TYPE = AGENT 
DL 
N=3 

EORMAT = EULLMATRIX 
MATRIX LABELS: 
"Communication Network" 
DATA: 

Oil 
10 0 
0 0 0 


To summarize, when ORA ereates a Meta-Matrix as output the user ean ehoose to save eaeh 
type of matrix in the Meta-Matrix in a separate file, or to save the entire Meta-Matrix in a single 
file. When saving individual network types to a file, the following formats are available: EDL, 
DL, RAW, and CSV. When saving the entire Meta-Matrix to a single file, the following are 
available: EDL and DyNetML. These output formats make ORA interoperable with other 
network analysis paekages. 


3. Meta-Matrix Measures 


An ORA measure is a funetion that takes a Meta-Matrix as input. Eaeh measure 
examines a partieular aspeet of the mathematical structure of the Meta-Matrix. The metrics in 
ORA include social network, task management, and dynamic network metrics. ORA contains 
over 50 measures, and provides three classifications of them based on risk and vulnerability, 
input requirements, and type of output produced. The three classifications enable the user to 
quickly find a measure based on its properties. 


CMU SCS ISRI 


-4- 


CASOS Report 



3.1 Measure Risk Categories 

The first classification divides the measures into seven categories of risk and vulnerability: 
Communication Risk, Critical Employee Risk, Resource Allocation Risk, Redundancy Risk, 
Personnel Interaction Risk, Task Risk, and Performance Risk. The measures in each category 
analyze the Meta-Matrix structure to detect the type of risk. A single measure can be classified 
into more than one risk category. Each of the seven categories is briefly discussed below. 

3.1.1 Critical Employee Risk 

Critical Employee Risk is the risk based on employees having exclusive knowledge, 
resources, or task assignments. Measures in this category assess in part: would the removal of 
one employee from the organization greatly affect the ability to complete tasks? Do employees 
tend to have exclusive access to knowledge or resources? 

3.1.2 Resource Allocation Risk 

Resource Allocation Risk is the risk based on how the organization’s resource allocation 
affects its ability to complete tasks. Measures in this category assess: is agent workload evenly 
distributed? Do agents have access to the resources they need to complete tasks? Do agents 
have access to resources they do not use? 

3.1.3 Communication Risk 

Communication Risk is the based on the level of communication and the authority structure 
of the organization. This category seeks to answer the following questions: are agents able to 
communicate when necessary to complete tasks? Is communication too centralized or 
decentralized? Do agents have recourse to managers to settle disputes? 

3.1.4 Redundancy Risk 

Redundancy Risk is the risk based on redundancy in task assignments, resource access, and 
knowledge access. An organization with little redundancy is more adversely affected by an 
agent or resource no longer being available. On the other hand, too much redundancy makes an 
organization inefficient. 

3.1.5 Task Risk 

Task Risk is the risk based on task precedence and task assignment. Measures in this 
category are able to evaluate the following questions: do agents have the resources to complete 
their tasks? are tasks highly interdependent so that the inability to perform one task prevents 
many other tasks from being completed? 

3.1.6 Personnel Interaction Risk 

Personnel Interaction Risk is the risk based on agent communication, either agents 
communicating who should not be, or vice-versa. Measures in this category examine the 
organization design structure to assess the following: are agents with similar skills interacting? 
Are agents with complementary skills interacting? Are there groups of agents communicating in 
unexpected ways? Is there a group of agents that has extensive reach in the organization, or 
whose removal would greatly fragment the organization. 


-5 - 


CMU SCS ISRI 


CASOS Report 



3.1.7 Performance Risk 

Performance Risk is the risk based on ability to complete tasks accurately. Measures in this 
category assess the following questions: is the organization able to complete all tasks? How well 
does the organization build consensus? How many tasks would be left undone if a single 
employee were selected for removal? 

3.2 Measure Input Requirements 

A second way that measures can be classified is according to input requirements. Measures 
that take as input a single matrix (a cell of the Meta-Matrix) are called Single-Cell measures; 
measures taking more than one cell are called Multi-Cell measures. In addition, some measures 
require only one matrix as input, but it need not correspond to a specific cell in the Meta-Matrix, 
but only a square sub-section of the Meta-Matrix; these are called Square measures. For 
example, all of the Centrality measures are Square measures, and as such they can take as input 
the AxA (Communication) matrix from the Meta-Matrix, but they could also take the entire 
Meta-Matrix - which is square, or the TxT matrix. 

3.3 Measure Output Types 

A third classification of measures is by output. A measure produces one of two types of 
output: graph level or node level. A graph level measure’s output is associated with one or more 
matrices (also called graphs) from the Meta-Matrix. Graph-Level measures are always scalar 
valued. For example. Density is a graph level measures because it outputs a scalar value that 
describes a property of the input graph as a whole. The output of a Node Level measure, on the 
other hand, is associated with the members of a node entity. For example, the Cognitive Load 
measure is a Node Level measure because it produces a scalar value for each Agent node. 

To summarize the three classification schemes. Table 2 classifies some of the measures 
available in ORA. A complete listing of measures available in ORA with descriptions, formulas, 
input requirements, and output data is in Appendix A: ORA Measures. Measures are listed by 
risk category in Appendix B: ORA Risk Measure Categories. 


CMU SCS ISRI 


-6- 


CASOS Report 



Table 2: Illustrative metrics categorized by Input, Risk, and Output 


Metric 

Meaning 

Output 

Level 

Risk 

Input Data 

Degree 

Centrality 

In the social network, 
number of others the person 
is connected to. 

Node 

Communication 

Single-cell 

Task 

Exclusivity 

Detects agents who 
exclusively perform tasks. 

Node 

Critical 

Employee 

Performance 

Single-cell 

Cognitive 

Load 

Measures the total amount 
of effort expended by each 
agent to do its tasks. 

Node 

Critical 

Employee 

Multi-cell 

Resource 

Congruence 

Measures the similarity 
between what resources are 
assigned to tasks via agents, 
and what resources are 
required to do tasks. Perfect 
congruence occurs when 
agents have access to 
resources when and only 
when it is needful to 
complete tasks. 

Graph 

Resource 

Allocation, 

Task 

Multi-cell 


CMU SCS ISRI 


-7- 


CASOS Report 




4, Reports 


ORA generates text reports from the measure analysis. A report is a predefined output data 
format. ORA eurrently produees a single report, the Risk and Vulnerability Report. This report 
can be saved in one of three formats: plain text, CSV, or DyNetML. The Risk and Vulnerability 
Report is a risk audit of an organization, which groups the measures by risk category and lists the 
measure values. The three formats are three different mediums for outputting the report data. 
The DyNetML report format contains in one file the original input Meta-Matrix together with all 
measures computed on the Meta-Matrix. The user selects which of the reports to generate, and 
ORA creates separate output files for each. Figure 1 below shows a portion of the text file 
format of a Risk and Vulnerability Report for a single Meta-Matrix organization. 

Figure 1: Risk and Vulnerability Report File 



CMU SCS ISRI 


-8- 


CASOS Report 


























ORA can compare two Meta-Matrix organizations. The user can select any two meta¬ 
matrices and then generate a Risk and Vulnerability Report that compares the two organizations. 
Figure 2 displays a portion of one such report; it is similar to the single organization report, but it 
contains a side by side listing of the measure values for each organization followed by the 
percent by which the measure values differ. 


Figure 2: Comparing Two Organizations: Risk and Vulnerability Report 



CMU SCS ISRI 


-9- 


CASOS Report 
































5, User Interface Components 


ORA has a Java user interface for cross platform compatibility. The interface contains three 
main components; 1) Meta-Matrix Manager, 2) Measure Manager, and 3) Output Panel. In 
addition, it contains the following sub-components: the Visualizer, the Optimizer, and the 
Regression Tool. Each of these will be briefly described in turn. The descriptions will refer to 
Figure 3 below, which shows the three main components of the ORA interface. 


Figure 3: ORA Interface 



5,1 Meta-Matrix Manager 

The unifying concept in ORA is the Meta-Matrix. The user needs to be able to manage 
multiple organizations, both those entered as original input and those output by the Optimizer. 
These are collected and managed in the Meta-Matrix Manager, which occupies the upper half of 
Figure 3. From this panel, the user can add organizations to the collection, rename them, and 
specify data files for each network of the Meta-Matrix. Most user actions in ORA require the 
selection of one or more organizations as input, and the available organizations are those entered 
into the Meta-Matrix Manager. 


CMU SCS ISRI 


- 10- 


CASOS Report 












































5.2 Measure Manager 

The Measure Manager is a separate panel, seen in the lower left panel of Figure 3, that gives 
the user different views of the measures, according to the categories described above: Risk 
Category, Node Level, and Graph Level. These are all views of the same set of underlying 
measures, so selecting or unselecting a measure in one view is reflected in all other views. 

5.3 Output Panel 

The Output Panel is a text panel that gives the user immediate feedback. The Output Panel 
displays status information from user actions, and also displays the text content of measure 
reports. The Output Panel displaying a Risk Report can be seen in the lower right half of Figure 

3. 

5.4 Tools 

The Visualizer, Optimizer, and Regression Tool are invoked from the main menu and are 
contained within pop-up windows. The different popup components of ORA constitute an 
integrated graphical user interface that has proven to be extensible and flexible. 

5.4.1 Visualization 

The Meta-Matrix contains multiple node entities and different types of edges. Most existing 
visualization packages cannot display multiple network types simultaneously, and therefore are 
not suitable for visualizing the Meta-Matrix. ORA contains two integrated visualization 
packages for displaying an entire Meta-Matrix: NetworkViz and Jung. 

NetworkViz was developed at CASOS specifically for visually analyzing Meta-Matrix data, 
and is capable of displaying all of the networks of the Meta-Matrix simultaneously. 
NetworkViz can also display specific parts of the Meta-Matrix, for example, a single network, or 
all networks defined on one or more node entities. In this manner, the user can isolate and 
visualize portions of the Meta-Matrix that are of interest. If ORA has computed measures for the 
Meta-Matrix, then NetworkViz displays them. For example, all Node Level measures computed 
for a particular Agent node are displayed in a pop-up window when the node is right clicked. 
Figure 4 contains a sample Meta-Matrix visualization using NetworkViz. 


CMU SCS ISRI 


- 11 - 


CASOS Report 



Figure 4: NetworkViz Visualizer 


1^ NetworkViz 


^Xj 


File Lajwut Tools 



^/gent13 

^esourcel 

^esource2 

^^ent6 

'44sourceO 

R?gent1l 


^towledgeS 


4i| [ ¥| | D| | i»i W ! \E 


=5p^= HE® H0 @a 


^nowledge2 



Statistics 



Name: agents 

Connections: agent2 ; agent4 ; agents ; agent? ; agentt 1 ; agenti 3; knowledgeO ; knowledget ; resource2 ; taski ; 



Figure 5: JUNG Visualizer 

^ ^x| 


Node Size Resize ... Threshold Resize... Nodes Meas. Graph Meas. Show Nodes Set Layout Vert.Zoom Horiz.Zoom Shift 




I totalDegreeCentr^ily 







CMU SCS ISRI 


- 12- 


CASOS Report 













































The Jung visualization package is an open-source code project from Stanford adapted and 
integrated into ORA. It offers three different layout algorithms, and has been customized to 
display Node Level and Graph Level measures computed on the Meta-Matrix. With Jung the 
user can choose portions of the Meta-Matrix to display based on measure values, for example. 
Figure 5 displays the Agent nodes with sizes proportional to their Total Degree Centrality. 

5.4.2 Optimizer 

Having detected the risk and vulnerabilities of an organization’s design structure, the 
Optimizer tool in ORA allows the user to change the structure according to user specified criteria. 
The user selects a single measure or a linear combination of measures to be an objective function, 
and the Optimizer produces an organization that maximizes or minimizes the objective function 
by adding and removing relationships (i.e. edges) between node entities. Because the output of 
the Optimizer is a Meta-Matrix, it can be input to ORA for measure analysis and visualization. 
Details of the Optimizer can be found in the Optimizer Technical Report. 

5.4.3 Regression Tool 

The Regression Tool allows the user to compare two vector valued measures, plotting the 
two vectors in coordinate space with a linear regression line. The two vectors can be the same 
measure computed on two different organizations, two measures computed on the same 
organization, or two different measures computed on two different organizations. The plot 
output can be saved to a file. 


6, System Requirements 


ORA 1.2 is the latest version of ORA and it runs on any Windows 2000 or XP machine 
running on an Intel processor. The C++ back-end source code is written so as to be compatible 
with platforms and processors, and is being ported and tested on other platforms and processors. 


7. Conclusion 


ORA advances the state of the art in network analysis tools by being organized around the 
unifying concept of the Meta-Matrix. Measures are organized to facilitate their coherent use. In 
particular, they are categorized by how they measure the risk and vulnerability of an 
organization’s design structure. ORA reads and writes in multiple data formats and is 
interoperable with existing network analysis software. Entire Meta-Matrices can be visualized 
using different layout algorithms. The integrated Optimizer adapts an organization’s design 
structure according to user specified criteria, and the resulting organization can be input into 
ORA and analyzed and visualized. The computational back end employs NetStatPlus, an open 
source C++ library of SNA and DNA routines. The Java graphical user interface is designed for 
ease of use and for extensibility and flexibility as new features are added. ORA is being actively 
developed and tested in a wide range of contexts. 


CMU SCS ISRI 


- 13 - 


CASOS Report 



8, Future Work 


Future work in ORA will address all aspects of its core functionality, including (1) managing 
Meta-Matrix organizations; (2) measure presentation and selection; (3) network visualization; (4) 
tool sub-components; and (5) generating reports. 

Currently a Meta-Matrix can contain only one matrix of each network type. Thus a Meta- 
Matrix cannot have a Communication Network and a Friendship Network, both of type Agent x 
Agent. Similarly, time period data for a matrix type is not possible. Future versions will extend 
the Meta-Matrix Manager to allow multiple matrices of a single type. 

The Measures Manager currently does not allow the user to specify the input for 
measures. Certain measures have predefined input, and so specifying input matrices is 
unnecessary. For example the Actual Knowledge Workload measure takes always takes as input 
the following matrices: Agent x Knowledge, Knowledge x Task, and Agent x Task. Other 
measures, for example Square measures, can operate on any square input matrix. For example, 
the Betweenness Centrality measure takes any square matrix as input. Currently, such measures 
run on a pre-determined, default matrix which is not user selectable. 

Another tool currently being developed for ORA called the Matrix Tool, which displays 
matrix data in an editable spreadsheet window. Individual networks can be displayed, or an 
entire Meta-Matrix. The Matrix Tool lets the user manipulate matrices, such as performing 
matrix algebra, and computing the Intersection, Union, and Central Matrix of a collection of 
matrices. By loading a Meta-Matrix in one format and saving in another, the user can convert 
data from one format to another. The Matrix Tool will be included in the next release of ORA. 

Finally, ORA will be extended to provide multiple report types. Currently, only the Risk 
and Vulnerability Report is available. Future report types will output alphabetical lists of 
measures, or measures categorized by node, and graph level. The Output Panel of the user 
interface will be extended to display multiple output fdes, allowing the user to quickly organize 
and view report fdes. 


CMU SCS ISRI 


- 14- 


CASOS Report 



References 


[1] Ashworth, M. and Kathleen M. Carley, 2003, Critieal Human Capital, Working Paper, 
CASOS, Carnegie Mellon, Pittsburgh PA. 

[2] Borgatti, S.P. 2003. The Key Player Problem. Dynamie Soeial Network Modeling and 
Analysis: Workshop Summary and Papers, R. Breiger, K. Carley, & P. Pattison (Eds.) 
Committee on Human Faetors, National Researeh Couneil, 241-252. 

[3] Borgatti, S.P., Everett, M.G. and Freeman, E.C. 2002. Ueinet for Windows: Software for 
Soeial Network Analysis. Harvard: Analytie Teehnologies. 

[4] Brass, D. 1984. Being in the right plaee: A struetural analysis of individual influenee in an 
organization. Admin. Sei. Quart. 26 331-348. 

[5] Carley, Kathleen M. 2002, “Smart Agents and Organizations of the Future” The Handbook 
of New Media. Edited by Feah Fievrouw & Sonia Fivingstone, Ch. 12 pp. 206-220, 
Thousand Oaks, CA, Sage. 

[6] Carley, Kathleen M. and Yuqing Ren, 2001, “Tradeoffs Between Performanee and 
Adaptability for C3I Arehiteetures.” In Proeeedings of the 2001 Command and Control 
Researeh and Teehnology Symposium. Conferenee held in Annapolis, Maryland, June, 
2001. Evidenee Based Researeh, Vienna, VA. 

[7] Carley, Kathleen M. and Vanessa Hill, 2001, “Struetural Change and Beaming Within 
Organizations”. In Dynamies of Organizations: Computational Modeling and 
Organizational Theories. Edited by Alessandro Fomi and Erik R. Farsen, MIT Press/AAAI 
Press/Five Oak, Ch. 2. pp 63-92. 

[8] Kraekhardt, David and Kathleen M. Carley, 1998, “A PCANS Model of Stmeture in 
Organization” Pp. 113-119 in Proeeedings of the 1998 International Symposium on 
Command and Control Researeh and Teehnology. Conferenee held in June. Monterray, 
CA. Evidenee Based Researeh, Vienna, VA. 

[9] Thompson, J. D. 1967. Organizations in Aetion. MeGraw-Hill, New York. 

[10] Wasserman, Stanley and Katherine Faust. Soeial Network Analysis: Methods and 
Applieations. Cambridge: Cambridge University Press, 1994. 


CMU SCS ISRI 


- 15 - 


CASOS Report 



Appendix A - ORA Measures 


A network N consists of two sets of nodes, ealled U and V, and a set of edges EcUxV. An element e = (i,j) in E indieates a 
relationship or tie between nodes ieEl and jeV. A network where E1=V and therefore EcVxV is called unimodal; otherwise the 
network is bimodal. Eor our purposes, unimodal networks will not contain self loops, which means that (i,i) ^ E for i e V. 

An organization is a eolleetion of networks. A measure is a funetion that maps one or more networks to R". Measures are often 
sealar (n=l) or veetor valued with n = |V| or n=|El|. 

When defining or implementing measures, a network ean be represented as (1) a graph, or as (2) an adjaeeney matrix. To 
represent a unimodal network as a graph, let G=(V,E), where V is the network’s nodes, and E are the ties; bimodal networks will not 
be represented as graphs. Both unimodal and bimodal networks are represented as adjaeeney matriees. 

Given a network N=((E1,V),E), define a matrix M of dimension |El|x|V|, and let M(i,j) = 1 if (i,j)eE, else let M(i,j)=0. Then M is 
ealled the adjaeeney matrix representation of network N. Elnimodal networks are also ealled square networks beeause their adjaeeney 
matrix is square; the diagonal is zero diagonal because there are no self-loops. 

Define the following sets of nodes: Agents, Knowledge, Resources, and Tasks. The following networks defined on these node sets 
are used throughout the doeumentation: 


Symbol 

Node Sets 

U V 

Name 

A 

Agent 

Agent 

Communieation Network 

AK 

Agent 

Knowledge 

Knowledge Network 

AR 

Agent 

Resouree 

Capabilities Network 

AT 

Agent 

Task 

Assignment Network 

K 

Knowledge 

Knowledge 

Information Network 

KR 

Knowledge 

Resouree 

Training Network 

KT 

Knowledge 

Task 

Knowledge Requirement Network 

R 

Resouree 

Resouree 

Resouree Substitute Network 

RT 

Resource 

Task 

Resouree Requirement Network 

T 

Task 

Task 

Preeedenee Network 


CMU SCS ISRI 


- 16- 


CASOS Report 




The following matrix notation is used: 

|Matrix| = dimension of a scmare Matrix (i.e. if Matrix has dimension r x r, then |Matrix| = r) 

Matrix(i,j) = the entry in the i“ row and j**' eolurnn of Matrix 
Matrix(i,:) = i**' row vector of Matrix 
Matrix(: ,j) = j**' column vector of Matrix 

sum(Matrix) = sum of the elements in Matrix (also, Matrix can be a row or column vector of Matrix) 

Matrix’ = the transpose of Matrix 

-“Matrix = for binary Matrix, -“Matrix(i,j) = 1 iff Matrix(i,j) = 0. 

Matrix@Matrix = element-wise multiplication of two matrices (e.g. C=A@B => C(i,j) = A(i,j)*B(i,j)) 

These mathematical terms and symbols are used: 

card(Set) = |Set| = the cardinality of Set 
sgn(x) = 1 if X >= 0, and -1 otherwise 
tR denotes a real number 
Z denotes an integer 

These graph theoretic terms are used: 

d Q{i,j) is the length of the shortest directed path in G from node i to node). Note that if there is a path from i to j in G, 
thenl <d Q{i,j) < \v\. Therefore, let d ^{1,]) = |V| if there is no path in G from i to j. Also, let d ^{1,1) = 0 for each ie V. 

The Reachability Graph for a square network N=(V,E) is defined as follows: let G=(V,E) be the graph representation for N. The 
Reachability Graph for N is the graph G’=(V,E’) where E’= {(i,j) e VxV | 3 directed path from i to j in G}. 

The Underlying Network for a network N=(V,E) is defined as follows: N’=(V,E’) where E’= {(i,j) | (i,j)e E v (j,i)e E }. That is, 
an symmetric version of N. 


CMU SCS ISRI 


- 17- 


CASOS Report 



Measure 

Description 

Reference 

Formula 

Access Index, 
Knowledge Based 

Boolean value which is true if an agent is 
the only agent who knows a piece of 
knowledge and who is known by exactly 
one other agent. The one agent known also 
has its KAI set to one. 

Type Node Level 

Input AK:binary; A:binary 

Output Binary 

Ashworth, 

2003 

The Knowledge Access Index (KAI) for agent i is defined as follows: 
let 

S {5 AK{i,s) A {sum{AK{:,s)) = \) A{sum{A{i,-^) = l)} 

Then KAI.= ((5,^ 0) V (37 \Sj^ 0 A A{j,i) = 1 )) 

Access Index, 
Resource Based 

Boolean value which is true if an agent is 
the only agent with access to a resource and 
who is known by exactly one other agent. 

The one agent known also has its RAI set to 
one. 

Type Node Level 

Input AR:binary; A:binary 

Output Binary 

Ashworth, 

2003 

The Resource Access Index (RAI) for agent i is defined identically as 
Knowledge Access Index, with the matrix AK replaced by AR. 

Actual Workload, 
Knowledge 

The knowledge an agent uses to perform the 
tasks to which it is assigned. 

Type Node Level 

Input AK:binary; KT:binary; AT:binary 

Output 91 G [0,1] 

Carley, 2002 

Actual Workload for agent i is defined as follows: 

[AK*KT*AT’](i,i)/sum(KT) 

Note how Potential Workload is the first matrix product. 

Actual Workload, 
Resource 

The resources an agent uses to perform the 
tasks to which it is assigned. 

Type Node Level 

Input AR:binary; RT:binary; AT:binary 

Output 91 G [0,1] 

Carley, 2002 

Actual Resource Workload for agent i is identical to Actual Knowledge 
Workload, replacing AK with AR and KT with RT. 

Average Distance 

The average shortest path length between 
nodes, excluding infinite distances. 

Type Graph Level 

Input A:binary, square 

Output 91 G [0,1] 

NetStat 

Let G=(V,E) represent a square network. Define a set S of all pairs (i,j) of 
nodes such that i can reach]. Then average the shortest paths, 
let S = {(i,j) j is reachable in G from] } 

Then, Average Distance = -' 


CMU SCS ISRI 


- 18- 


CASOS Report 




Centrality, 

Betweenness 

The Betweenness Centrality of node v in a 
network is defined as: aeross all node pairs 
that have a shortest path eontaining v, the 
pereentage that pass through v. This is 
defined for direeted networks. 

Type Node Level 

Input N: square 

Output 91 e [0,1] 

Freeman, 1979 

Let G=(V,E) be the graph representation for the network. Let n=|V|, and 
fix a node v G V. 

For (u,w) G VxV, let n ^ (w, tv) be the number of geodesies in G from u to 
w. If(u,w)GE, thenset ng(M,tv)=l. 

Define the following: 

let S = {(u,w) G VxV J(j(M,tv) =d q{u,v) +d q{v,w)} 
let between = ^ (n g (w , v) g (v, tv)) /ng{u,w) 

{u,w)^S 

Then Betweenness Centrality of node v = between / ((n-l)(n-2)/2). 

Note: if G is not symmetrie, then between is normalized by (n-l)(n-2). 

Centrality, 

Closeness 

The average eloseness of a node to the other 
nodes in a network. Loosely, Closeness is 
the inverse of the average distanee in the 
network between the node and all other 
nodes. This is defined for direeted 
networks. 

Type Node Level 

Input N: square 

Output 91 G [0,1] 

Freeman, 1979 

Let G=(V,E) be the graph representation of the square network. Fix v G V. 

let dist = ^ t/ g(v, /) , if every node is reaehable from v 

ieV 

Then Closeness Centrality of node v = (|V|-l)/dist. If some node is not 
reaehable from v then the Closeness Centrality of v is |V|. 

Centrality, 

Eigenveetor 

Caleulates the eigenveetor of the largest 
positive eigenvalue of the adjaeeney matrix 
representation of a square network. 

Type Node Level 

Input N: square, symmetrie 

Output 91 e [0,1] 

Bonaeieh P, 

1972 

Caleulates the eigenveetor of the largest positive eigenvalue of the 
adjaeeney matrix representation of a square network. A Jaeobi method is 
used to eompute the eigenvalues and veetors. 

Centrality, In 
Degree 

The In Degree Centrality of a node in a 
unimodal network is its normalized in¬ 
degree. 

Type Node Level 

Input N: square 

Output 91 G [0,1] 

Wasserman 
and Faust, 

1994 

Let G=(V,E) be the graph representation of a square network and fix a node 

V. 

let deg = card{u G F (m,v) G A} , this is the in-degree of node v. 

The In Degree Centrality of node v = deg / ( V -1) 


CMU SCS ISRI 


- 19- 


CASOS Report 




Centrality, 

Information 

Caleulate the Stephenson and Zelen 
information eentrality measure for eaeh 
node. 

Type Node Level 

Input N: square, symmetrie 

Output 91 e [0,1] 

Wasserman 
and Faust, 

1994 (pg 195) 

Caleulates the measure deseribed on pg 195-6 of Wasserman and Faust. 
Nodes with 0 degree are first removed from the network, and the measure 
eomputed on the resulting sub-graph. The removed nodes are given 
eentrality value 0. 

Centrality, Inverse 
Closeness 

The average eloseness of a node to the other 
nodes in a network. Inverse Closeness is 
the sum of the inverse distanees between a 
node and all other nodes. This is defined 
for direeted networks. 

Type Node Level 

Input N: square 

Output 91 G [0,1] 

Wasserman 
and Faust, 

1994 (pg 195) 

Let G=(V,E) be the graph representation of the square network. Fix v G V. 

^1 1 1 
let dist - > , where “ 0 and - 0 if i is not 

i^ydaivj) dc{i,i) d(j(v,i) 

reaehable from v. 

Then Inverse Closeness Centrality of node v = dist/(|V|-l). 

Centrality, Out 
Degree 

The Out Degree Centrality of a node in a 
square network is its normalized out-degree. 
Type Node Level 

Input N: square 

Output 91 G [0,1] 

Wasserman 
and Faust, 

1994 

Let G=(V,E) be the graph representation of a square network and fix a node 

V. 

let deg = card{u G F (v, w) G A} , this is the out-degree of node v. 
The Out Degree Centrality of node v = deg / ( V -1) 

Centrality, Total 
Degree 

The Total Degree Centrality of a node in a 
square network is its normalized in plus out 
degree. 

Type Node Level 

Input N: square, undireeted 

Output 91 G [0,1] 

Wasserman 
and Faust, 

1994 (pg 199) 

Let G=(V,E) be the graph representation of a square network and fix a node 

V. 

let deg = card{u € V \ (v,u) € E v {u,v) € E} , this is the total 
degree of node v. 

The Total Degree Centrality of node v = deg / 2*( V -1) 


CMU SCS ISRI 


- 20 - 


CASOS Report 




Clustering Measures the degree of clustering in a Watts and 

Coefficient, network by averaging the clustering Strogatz, 1998 

Watts-Strogatz coefficient of each node i, defined as the 

ratio of the number of triangles connected to 
i to the number of triples centered at i. 

Type Graph Level 
Input N: square 
Output 91 e [0,1] 


CMU SCS ISRI 


-21 - 



CASOS Report 




Cognitive Load 


Measures the total amount of effort 
expended by each agent to do its tasks. 


Carley, 


Note: Cognitive Load is defined if one or 
both of the following pairs of networks 
exists: {AR,RT}, {AK,KT}. 

Type Node Level 

Input A:binary; AT:binary; [AR:binary; 
RT:binary]; [AK:binary; KT:binary] 

Output 91 e [0,1] 


CMU SCS ISRI 


- 22 - 


The Cognitive Load for agent i is defined as follows: 
let ATR = AT*RT’ 
let ATA = AT*AT’ 

let X. = # of agents that agent i interacts with / total # of agents 


X^O',7) 


let ^2 = # of tasks agent i is assigned to / total # of tasks 
= sum(AT(i,:))/|T| 

let X3 = sum of # agents who do the same tasks as agent i / (total # tasks ' 
total # agents) 


= Y^ATAiiJ) /(H-i)(|r|) 


Note that X4, Xj, Xg depend upon networks AR and RT; if the networks 

AK and KT exist, then three analogous terms for knowledge are computed 
and averaged. If only AK and KT exist, then only they are used, 
let X4 = # of resources agent i manages / total # of resources 
= sum(AR(i,:))/|R| 

let Xj = sum of # resources agent i needs to do all its tasks / (total # tasks * 

total # resources) 

= sum(ATR(i,:))/(|T|*|R|) 

let Xg = sum of negotiation needs agent i must do for each task / total 
possible negotiations 


= /(|i?||r|) 

V j ) 

Then Cognitive Load for agent i = (xj+X2+X3+X4+Xg+Xg)/6 


CASOS Report 




Communication 

Measures the communication need of agents 
to complete their assigned tasks. 

Type Node Level 

Input A:binary; AT:binary; AR:binary; 
RT:binary, T:binary 

Output tR e [0,1] 

Carley, 2003 

Communication uses the concepts from Communication Congruence: 
Handoff, Co-Assignment, and Negotiation. 

let H, C, and N be defined as in Communication Congruence, 
let M(i,j) ^[A + (H-TH’) + C + (N-rN’)](i,j) > 0, and M(i,i) = 0 

Note that the transpose of H and N is used to make the communication 
reciprocal. 

let d = sum(M(i,:)) 

let d = d / ( A -1), normalizing d to be in [0,1] 

Then Communication for agent i is d. 

Communicative 

Need 

Measures the percentage of reciprocal edges 
in a network. 

Type Graph Level 

Input N: square 

Output 91 € [0,1] 

Carley, 2002 

Let G = (V,E) represent a square network: 

Then the Communicative Need = (Reciprocal Edge Count of G) / |E| 

Component 

Count, Strong 

The number of strongly connected 
components in a network. 

Type Graph Level 

Input N: square 

Output Z e [0, F ] 

Wasserman 
and Faust, 

1994 (pg 109) 

Given a square network represented by a graph G=(V,E), the Strong 
Component Count is the number of strongly connected components in G. 

This is computed directly on G, whether or not G is directed. 

Component 

Count, Weak 

The number of weakly connected 
components in a network. 

Type Graph Level 

Input N: square, symmetric 

Output Z e [0, F ] 

Wasserman 
and Faust, 

1994 (pg 109) 

Given a square, symmetric network represented by a graph G=(V,E), the 
Weak Component Count is the number of connected components in G. 

Such components are called “weak” because the graph G is undirected. 


CMU SCS ISRI 


-23 - 


CASOS Report 




Congruence, 

Communication 

Measures to what extent the agents 
communicate when and only when it is 
needful to complete tasks. Perfect 
congruence requires reciprocal 
communication. 

Type Graph Level 

Input A:binary; AT:binary; AR:binary; 
RT:binary, T:binary 

Output 91 G [0,1] 

Carley, 2002 

Communication Congruence = 1 iff agents communicate when and only 
when it is needful to complete their tasks. There are three task related 
reasons when agents i and] need to communicate: 

(a) Handoff. if i is assigned to a task s and j is assigned to a task t and s 

directly precedes task t 

(b) Co-Assignment: if i is assigned to a task s and j is also assigned to s 

(c) Negotiation: if i is assigned to a task s and] is not, and there is a 

resource r to which agents assigned to s have no access but] does. 

The three cases are computed as follows: 

(a) let H = AT*T*AT’ 

(b) let C = AT*AT’ 

(c) let N = AT*Z*AR’, where Z(t,r) = [AT’*AR - RT’](t,r)<0 

Note that C is always symmetric, but not necessarily H and N. 

let Q(i,j) = [ (H+H’) + C + (N+N’)](i,j) > 0. 

Communication Congruence requires reciprocal communication, 
explaining the transposes of H and N to make them symmetric. 

let d = hamming distance between Q and A, which measures the degree 
to which communication differs from that which is needed to do tasks. 

The maximum value for d is d max = |A|*(|A|-1) 

Then Communication Congruence = 1 - (d /d max), which is in [0,1]. 

Congruence, 

Knowledge 

Measures the similarity between what 
knowledge is assigned to tasks via agents, 
and what knowledge is required to do tasks. 
Perfect congruence occurs when agents 
have knowledge when and only when it is 
needful to complete tasks. 

Type Graph Level 

Input AK:binary; AT:binary; KT:binary 

Output 91 e [0,1] 

Carley, 2002 

Knowledge Congruence = 1 iff agents have knowledge when and only 
when it is needful to complete their tasks. Thus, we compute the 
knowledge assigned to tasks via agents, and compare it with the knowledge 
needed for tasks. 

let KAT = (AK’*AT) 

let d = card] (i,j) | (KAT(i,j)>0) != (KT(i,j)>0)} 
let d = d / (K * T), which normalizes d to be in [0,1] 

Then Knowledge Congruence = 1 - d 


CMU SCS ISRI 


-24- 


CASOS Report 




Congruence, 

Resource 

Measures the similarity between what 
resources are assigned to tasks via agents, 
and what resources are required to do tasks. 
Perfect congruence occurs when agents 
have access to resources when and only 
when it is needful to complete tasks. 

Type Graph Level 

Input AR:binary; AT:binary; RT:binary 

Output 91 e [0,1] 

Carley, 2002 

Identical to Knowledge Congruence with AR replaced by AK and KT 
replaced by RT. 

Connectedness 

Measures the degree to which a square 
network’s underlying (undirected) network 
is connected. 

Type Graph Level 

Input N: square, symmetric 

Output 91 e [0,1] 

Krackhardt, 

1994 

The Connectedness of a square, symmetric network is the Density of its 
Reachability Network. 

Constraint, Burt 

The degree to which each node in a square 
network is constrained from acting because 
of its existing links to other nodes. 

Type Node Level 

Input N: square 

Output 91 e [0,1] 

Burt, 1992 

This is the Constraint measure described by Equ. 2.4 on pg. 55 of Burt, 

1992. Note that the matrix Z is the adjacency matrix representation of the 
network N. 

Density 

The ratio of the number of edges versus the 
maximum possible edges for a network. 

Type Graph Level 

Input N 

Output 91 e [0,1] 

Wasserman 
and Faust, 

1994 (pg 101) 

Let M be the adjacency matrix for the network of dimension m x n. 

If the network is unimodal, then m=n and M has a zero diagonal, and 
therefore 

Density = sum(M)/(m*(m-l)). If the network is symmetric, then Density is 
multiplied by two. 

For bimodal networks. Density = sum(M)/(m*n). 

Diameter 

The maximum shortest path length between 
any two nodes in a unimodal network 
G=(V,E). If there exist i,j in V such that] is 
not reachable from i, then |V| is returned. 
Type Graph Level 

Input N: square 

Output Z e[0,\V \] 

Wasserman 
and Faust, 

1994 (pg 111) 

The diameter of G=(V,E) is defined as: 
max{dQ{i,j)\i,j ^V} 

That is, the maximum shortest directed path between any two vertices in G. 

If there exists i and j such that j is not reachable from i, then | V| is returned. 


CMU SCS ISRI 


-25 - 


CASOS Report 




Distance 

Weighted Reach 

A generalization of graph theoretic distance, 
this measures the distance from a set of 
nodes in the network to all other nodes. 

Type Graph Level 

Input N: square, undirected 

Output 91 G [0,1] 

Borgatti, 2003 

Consider a square, undirected network represented by G=(V,E). 
let Sc V 

For any] ^ S, define {S, j) = min {d^ (i, j) / G 5'} . 

z ^ 

, US dais, j) 

Then, Distance Weighted Reach =1-, 

|F-5| 

Diversity, 

Knowledge 

The distribution of difference in idea 
sharing. This is the Herfindahl-Hirshman 
index applied to column sums of AK. 

Type Graph Level 

Input AK:binary 

Output 91 e [0,1] 


This is the Herfindahl-Hirshman index (economics: sum of the squares of 
each firm’s market share) applied to the normalized column sums of AK. 

This measures the degree to which knowledge is equally known. 

\A 

let tVj. = Z k) ,iox\<k < A 

i=\ 

\K\ 

letW= 

k=l 

\K\ 

Then Diversity ^ 1 “ ^ 

k=\ 

Diversity, 

Resource 

The distribution of difference in resource 
sharing. This is the Herfindahl-Hirshman 
index applied to column sums of AR. 

Type Graph Level 

Input AR:binary 

Output 91 G [0,1] 


Identical to Knowledge Diversity, with AK replaced by AR. 

Edge Count, 

Lateral 

The percentage of lateral edges in a 
unimodal network. Fixing a root node x, a 
lateral edge (i,j) is one in which the distance 
from X to i is the same as the distance from 
xtoj. 

Type Graph Level 

Input N: square 

Output 91 G [0,1] 

Carley, 2002 

Let G=(V,E) be the graph representation of a unimodal network. And fix a 
node X G V to be the root node. 

Let S = {(i,j) G E 1 t/ g(x, 0 =d g{x, j) } 

Then Lateral Edge Count = S / E 


CMU SCS ISRI 


-26- 


CASOS Report 




Edge Count, 

Pooled 

The pereentage of pooled edges in a 
unimodal network. A pooled is an edge (i,j) 
sueh that there exists at least one other edge 
(i,k) in the network, and 

Type Graph Level 

Input N: square 

Output e [0,1] 

Carley, 2002 

Let M be the adjaeeney matrix representation of a unimodal network. 

Let S = {(i,j) 1 M(i,j)=l A sum(M(:,j))>l } 

In other words: edge (i,j) is a pooled edge iff the in-degree of node j > 1. 

Then Pooled Edge Count = S / E 

Edge Count, 
Reeiproeal 

The pereentage of edges in a unimodal 
network that are reeiproeated (also ealled 
Reeiproeity). An edge (i,j) in the network is 
reeiproeated if edge (j,i) is also in the 
network. 

Type Graph Level 

Input N: square 

Output 91 e [0,1] 


Let G=(V,E) be the graph representation of a unimodal network. 

Let S = eard{(i,j) e E | i<j, 0,0 e E } 

Then Reeiproeal Edge Count = S / E 

Edge Count, 
Sequential 

The pereentage of edges in a unimodal 
network that are neither Reeiproeal Edges 
nor Pooled Edges. Note that an edge ean be 
both a Pooled and a Reeiproeal edge. 

Type Graph Level 

Input N: square 

Output 91 e [0,1] 

Carley, 2002 

Let G=(V,E) be the graph representation of a unimodal network, and 
let X = set of Pooled edges of G, and let Y = set of Reeiproeal edges of G. 

Then Sequential Edge Count = E-X-Y / E 

Edge Count, Skip 

The fraetion of edges in a unimodal network 
that skip levels. An edge (i,j) is a skip edge 
if there is a path from node i to node j even 
after the edge (i,j) is removed. 

Type Graph Level 

Input N: square 

Output 91 e [0,1] 

Carley, 2002 

A skip edge in a unimodal network represented by G=(V,E) is an edge 
(i,j) e E sueh that] is reaehable from i in the graph G’=(V,E\(i,j)), that is, 
the graph G with edge (i,j) removed. Skip Count is simply the number of 
sueh edges in G normalized to be in [0,1] by dividing by E . 

Effeetive Network 
Size 

The effeetive size of a node’s ego network 
based on redundaney of ties. 

Type Node Level 

Input N: square 

Output 91 e [0,1] 

Burt, 1992 

This is the Effeetive Size of Network measure deseribed by Equ. 2.2 on pg. 
52 of Burt, 1992. Note that the matrix Z is the adjaeeney matrix 
representation of the network N. 


CMU SCS ISRI 


-27- 


CASOS Report 




Efficiency 

The degree to which each component in a 
network contains the minimum edges 
possible to keep it connected. 

Type Graph Level 

Input N: square, symmetric 

Output 91 e [0,1] 

Krackhardt, 

1994 

Let G=(V,E) be the graph representation of a square, symmetric network, 
let n = number of components in G 
let C- = number of nodes in component i 
let penalty = E - V + C 
let maxPenalty = C - V + ^ C,- (c, — 1) / 2 

i 

Then Efficiency = 1 - penalty/maxPenalty 

Exclusivity, 

Knowledge 

Detects agents who have singular 
knowledge. 

Type Node Level 

Input AK:binary 

Output 91 € [0,1] 

Ashworth, 

2003 

The Knowledge Exclusivity Index (KEI) for agent i is defined as follows: 

* exp(l - sum{AK{:,j))) 

Exclusivity, 

Resource 

Detects agents who have singular resource 
access. 

Type Node Level 

Input AR:binary 

Output 91 € [0,1] 

Ashworth, 

2003 

The Resource Exclusivity Index (REI) for agent i is defined exactly as for 
Knowledge Based Exclusivity, but with the matrix AK replaced by AR. 

Exclusivity, Task 

Detects agents who exclusively perform 
tasks. 

Type Node Level 

Input AT:binary 

Output 91 e [0,1] 

Ashworth, 

2003 

The Task Exclusivity Index (TEI) for agent i is defined exactly as for 
Knowledge Based Exclusivity, but with the matrix AK replaced by AT. 

Fragmentation 

The proportion of nodes in a network that 
are disconnected. 

Type Graph Level 

Input N: square, undirected 

Output 91 e [0,1] 

Borgatti, 2003 

Consider a square, undirected network represented by G=(V,E). 
let n = V 

let ^ be the number of nodes in the k* component of G, 1 < k < n 

Then, Fragmentation =1 - - -. 

n{n-\) 

Flierarchy 

The degree to which a unimodal network 
exhibits a pure hierarchical structure. 

Type Graph Level 

Input N: square 

Output 91 e [0,1] 

Krackhardt, 

1994 

Let N be a unimodal network. The Hierarchy of N is the Reciprocity of the 
Reachability Network for N. 


CMU SCS ISRI 


- 28 - 


CASOS Report 




Interdependence 

The percentage of edges in a unimodal 
network that are Pooled or Reciprocal. 

Type Graph Level 

Input N: square 

Output e [0,1] 

Carley, 2002 

Let G=(V,E) be the graph representation of a square network. 

Let a = Pooled Edge Count and b = Reciprocal Edge Count of the network. 
Then Interdependence = (a+b)/ E 

Interlockers and 
Radials 

Interlocker and radial nodes in a square 
network have a high and low Triad Count, 
respectively. 

Type Node Level 

Input N: square 

Output Binary 

Carley, 2002 

Let N=(V,E) be a square network. 

Let f. = Triad Count for node i, 1 < / < K . 

Let U = the mean of {f ^ } 

Let d = the variance of {t - } 

Then if f {u + d) , then agent k is an interlocker. If f {u — d) then 
agent k is a radial. 

Load, Knowledge 

Average number of knowledge per agent. 
Type Graph Level 

Input AK:binary 

Output 91 e [0, 1A ] 

Carley, 2002 

Knowledge Load = sum(AK)/ (A) 

Load, Resource 

Average number of resources per agent. 

Type Graph Level 

Input AR:binary 

Output 91 e [0, ] 

Carley, 2002 

Resource Load = sum(AR)/ (A) 

Negotiation, 

Knowledge 

The extent to which agents need to 
negotiate with each other because they lack 
the knowledge to complete their assigned 
tasks. 

Type Graph Level 

Input AT:binary; AK:binary; KT:binary 

Output 91 € [0,1] 

Carley, 2002 

Compute the percentage of tasks that lack at least one resource: 
let Need = (AT’*AK) - KT’ 

letS={i 1 l</<|r|, 3 j:Need(i,j)<0} 

Then Need for Negotiation = S / T 

Negotiation, 

Resource 

The extent to which agents need to 
negotiate with each other because they lack 
the resources to complete their assigned 
tasks. 

Type Graph Level 

Input AT:binary; AR:binary; RT:binary 

Output 91 e [0,1] 

Carley, 2002 

Identical to Knowledge Negotiation, replacing AK with AR, and KT with 

RT. 


CMU SCS ISRI 


-29- 


CASOS Report 




Network 

Centralization, 

Betweeimess 

Network centralization based on the 
betweenness score for each node in a square 
network. This measure is defined for 
directed and undirected networks. 

Type Graph Level 

Input N: square 

Output e [0,1] 

Freeman, 1979 

Let G=(V,E) represent the square network, and lei 
let d ^ = Betweenness Centrality of node i 

let d = max{<i,. \ <i<n} 

Then Network Betweenness Cent. = ^ d —d- 

\\<i<n 

tn = |V| 

/(n-1). 

Network 

Centralization, 

Closeness 

Network centralization based on the 
closeness centrality of each node in a square 
network. This is defined only for 
connected, undirected networks. 

Type Graph Level 

Input N:square, symmetric, connected 
Output 91 G [0,1] 

Freeman, 1979 

Let G=(V,E) represent the square network, and let n = V 
let d 1 = Closeness Centrality of node i 

let d = max{t/. \ <i<n} 

Then Network Closeness Cent. 

= '^d-d ■ /((n-2)(n-l)/(2n-3)). 

Vl</<n / 

Network 
Centralization, 
Column Degree 

A centralization based on the degree of the 
column nodes of a network. 

Type Graph Level 

Input N 

Output 91 G [0,1] 

NetStat 

Let N be a network with n column nodes, 
let d degree of column node j, 1 < j 

let d = max{d j\ 1 < j <n} 

/ 

Then Column Degree Network Centralization = 

\ 

b 

'^d-dJ /(n) . 

l<j<n J 

Network 
Centralization, In 
Degree 

A centralization of a square network based 
on the In-Degree Centrality of each node. 
Type Graph Level 

Input N: square 

Output 91 G [0,1] 

NetStat 

Let N be a unimodal network with n nodes, 
let d In Degree Centrality of node i 

let d = max{t/. \ <i<n} 

f _ 

Then In Degree Network Centralization = ^ d —d ■ ID, 

\\<i<n J 

where D = (n-2) if N is undirected, and (n-1) otherwise. 


CMU SCS ISRI 


-30- 


CASOS Report 




Network 

Centralization, 

Out Degree 

A centralization of a square network based 
on the Out-Degree Centrality of each node. 
Type Graph Level 

Input N: square 

Output 91 G [0,1] 

NetStat 

Let N be a unimodal network with n nodes, 
let d ^ = Out Degree Centrality of node i 

let d = max{t/. \ <i<n} 

/ 

Then Out Degree Network Centralization = 

V 

where D = (n-2) if N is undirected, and (n- 

Y,d-d^ 1 
J 

1 ) otherwise. 

'D, 

Network 

Centralization, 

Row Degree 

A centralization based on the degree of the 
row nodes in a network. 

Type Graph Level 

Input N 

Output 91 G [0,1] 

NetStat 

Let N be a network with n row nodes. 

let d degree of row node j, 1 < j < n 

let d = max{t/ j\ 1 < j <n} 

Then Row Degree Network Centralization = 


\ 

l{n). 

) 

Network 

Centralization, 

Total Degree 

A centralization of a square network based 
on total degree centrality of each node. 

Type Graph Level 

Input N: square 

Output 91 G [0,1] 

Freeman, 1979 

Let N be a unimodal network with n nodes, 
let d 1 = Total Degree Centrality of node i 

let d = max{t/. \ <i<n} 

Then Total Degree Network Centralization = 

''Ld-d; 

\\<i<n y 

/(n-2). 

/ 

Network Levels 

The Network Level of a square network is 
the maximum Node Level of its nodes. 

Type Graph Level 

Input N: square 

Output Z G [0, F — 1] 

NetStat 

Let G=(V,E) be the graph representation of a square network. 

Then the Levels of G = max {d g{i, j) i,j G V; j reachable from i in G } 

Node Level 

The Node Level for a node v in a square 
network is the longest shortest path from v 
to every node v can reach. If v cannot reach 
any node, then its level is 0. 

Type Node Level 

Input N: square 

Output Z G [0, F — 1] 

Carley, 2002 

Let G=(V,E) be the graph representation of a square network and fix a 
node V. 

Node Level for v = max {t/g(v,y')jGV;j reachable from v in G }; if v 
cannot reach any nodes, then its level is 0. 


CMU SCS ISRI 


-31 - 


CASOS Report 




Omega, 

Knowledge 

The degree to whieh agents reuse 
knowledge while doing their tasks. 

Type Graph Level 

Input AT:binary; KT:binary; T:binary 

Output 91 G [0,1] 

Carley, 

Dekker, and 
Kraekhardt 

2000 

Let TAT = TA*TA’ 

Let N = ((T’@TAT)*KT’)@KT’ 

Then Knowledge Based Omega = sum(N)/sum(KT) 

Omega, Resouree 

The degree to whieh agents reuse resourees 
while doing their tasks. 

Type Graph Level 

Input AT:binary; RT:binary; T:binary 

Output 91 G [0,1] 

Carley, 

Dekker, and 
Kraekhardt 

2000 

Identieal to Knowledge Based Omega, replaeing KT with RT. 

Performanee as 
Aeeuraey 

Measures how aeeurately agents ean 
perform their assigned tasks based on their 
aeeess to knowledge and resourees. 

Type Graph Level 

Input AT:binary; AK:binary; AR:binary; 
KT:binary; RT:binary 

Output 91 G [0,1] 

Carley, 2002 

Aeeuraey is eomputed based on the binary elassifieation problem. It is 
eomputed in one of two ways: 

(1) Knowledge based: Let b be a binary string of length K, let N=KT’, 
and let S=AK. Fix a task t. 

let answer = ( ^ N{t, k)bi^ / ^ N{t, k) > .5), whieh is the eorreet 

elassifieation of b with respeet to task t. Now, let let I={ i | AT(i,t)=l}. 
let answer(i) = ( ^^N{t,k)S{i,kyj i^/ >.5), iGl. 

l</t<|A:| \<k<\K\ 

This is agent i’s elassifieation of b with respeet to t. 

The group of agents elassify b using majority voting. That is, let 

group answer = (-^ answer{i) > .5 ). 

Then, if group answer = answer, then the group was aeeurate, otherwise 
not. 

This is repeated multiple times for eaeh task, and aeross all tasks. The 
pereentage eorreet is Performanee as Aeeuraey. 

(2) Resouree based: let N=RT’ and S=AR in the analysis of ease (1). 

If the network has the knowledge and resouree graphs to perform both 
eases, then Performanee as Aeeuraey is the average of the two. 


CMU SCS ISRI 


-32- 


CASOS Report 




Personnel Cost 

Total number of people reporting to an 
agent, plus its total knowledge, resources, 
and tasks. 

Type Node Level 

Input A:binary; AK:binary; AR:binary; 

AT :binary 

Output 91 G [0,1] 

Carley, 2003 

Personnel Cost for agent i is defined as follows: 

Let d = sum(A(:,i)) + sum(AK(i,:)) + sum(AR(i,:)) + sum(AT(i,:)) 

The value is then normalized to be in [0,1]: 

Letd = d/((|A|-1) + |K| + |R| + |T|) 

The Personnel Cost for agent i is d. 

Potential 

Workload, 

Knowledge 

Maximum knowledge an agent could use to 
do tasks if it were assigned to all tasks. 

Type Node Level 

Input AK:binary; KT :binary 

Output 91 G [0,1] 

Carley, 2002 

Potential Knowledge Workload for agent i = sum((AK*KT)(i,:))/sum(KT) 

Potential 

Workload, 

Resouree 

Maximum resources an agent could use to 
do tasks if it were assigned to all tasks. 

Type Node Level 

Input AR:binary; RT :binary 

Output 91 G [0,1] 

Carley, 2002 

Potential Resource Workload for agent i is identical to Potential 

Knowledge Workload, replacing AK with AR, and KT with RT. 

Redundaney, 

Aeeess 

Average number of redundant agents per 
resource. An agent is redundant if there is 
already an agent that has access to the 
resource. 

Type Graph Level 

Input AR:binary 

Output 91 G [0, (|y4 — 1) * i?|] 

Carley, 2002 

This is the Column Redundancy of matrix AR. 

Redundaney, 

Assignment 

Average number of redundant agents 
assigned to tasks. An agent is redundant if 
there is already an agent assigned to the 
task. 

Type Graph Level 

Input AT 

Output 91 G [0, (yd — 1) * r] 

Carley, 2002 

This is the Column Redundancy of matrix AT. 


CMU SCS ISRI 


-33 - 


CASOS Report 




Redundancy, 

Column 

The mean number of column node edges in 
excess of one. 

Type Graph Level 

Input N of dimension m x n 

Output 91 G [0, (m -1) * n\ 

Netstat 

Let M be the matrix representation for a network N of dimension m x n. 
let d j= max{0, sum{M{:,j))-\} , for 1 < j <n ; this is the 

number of column entries in excess of one for column]. 

f ” ^ 

Then Column Redundancy = ^ ^ / n 

Redundancy, 

Knowledge 

Average number of redundant agents per 
knowledge. An agent is redundant if there 
is already an agent that has the knowledge. 
Type Graph Level 

Input AK 

Output 91 e [0, ( yd — 1) * A ] 

Carley, 2002 

This is the Column Redundancy of matrix AK. 

Redundancy, 

Resource 

Average number of redundant resources 
assigned to tasks. A resource is redundant 
if there is already a resource assigned to the 
task. 

Type Graph Level 

Input RT :binary 

Output 91e[0,( il -1)* r ] 

Carley, 2002 

This is the Column Redundancy of matrix RT. 

Redundancy, Row 

The mean number of row node edges in 
excess of one. 

Type Graph Level 

Input N of dimension m x n 

Output 91 G [0, (« -1) * m\ 

Netstat 

Let M be the matrix representation for a network N of dimension m x n. 
let d.= max{0,sum{M{j,:)) -1}, for 1 < / < m ; this is the 

number of column entries in excess of one for row i. 

f m \ 

Then Row Redundancy = ^ y / m 

VAi J 

Relative Expertise 

The degree of dissimilarity between agents 
based on shared knowledge. Each agent 
computes to what degree the other agents 
know what they do not know. 

Type Node Level 

Input AK:binary 

Output 91 G [0,1] 

Carley, 2002 

The Relative Expertise matrix (RE) is defined as follows: 

RE(i,i) = 0 

RE(i,j) = (~AK*AK’) = # knowledge that] knows that i does not know 
Finally, normalize RE by its row sums: 

RE(i,:) /= sum(RE(i,:)) 

r \ 

\A 

The Relative Expertise for agent i = ^ RE{i, j) /( yd —1), 

J=i 

V J*‘ J 

that is, the average of the non-diagonal elements of row i of RE. 


CMU SCS ISRI 


-34- 


CASOS Report 




Relative 

Similarity 

The degree of similarity between two agents 
based on shared knowledge. Each agent 
computes to what degree the other agents 
know what they know. 

Type Node Level 

Input AK: binary 

Output 91 G [0,1] 

Carley, 2002 

Let M = AK*AK’ 

Let w(i) = sum(M(i,:)), \ <i< 

Then Relative Similarity (RS) between < 
M(i,j)/w(i). 

The Relative Similarity for an agent i = 

that is, the average of the non-diagonal i 

igents i and] is RS(i,j) = 

\4 

/(H-i), 

7=1 

V7« J 

dements of row i of RS. 

Span of Control 

The average number of out edges per node 
with non-zero out degrees. 

Type Graph Level 

Input N: square 

Output 91 e [0, \V\ - 1] 

Carley, 2002 

let S = set of nodes in V that have positive out-degree 

letK= y^outPegreeji) 

i^S 

Then Span of Control = K / S 

Speed, Average 

The average shortest path length between 
node pairs (i,j) where there is a path in the 
network from i to j. If there are no such 
pairs, then Average Speed is zero. 

Type Graph Level 

Input N: square 

Output 91 G [0,1] 

Carley, 2002 

let G=(V,E) be the grapl 

let D={(i,j)|i,jGV,jrs 

Then Average Speed = 

h representation 

jachable from i i 

of a square network. 

n G } 

/\d\ 

Speed, Minimum 

The maximum shortest path length between 
node pairs (i,j) where there is a path in the 
network from i to j. If there are no such 
pairs, then Minimum Speed is zero. 

Type Graph Level 

Input A 

Output 91 G [0,1] 

Carley, 2002 

Minimum Speed = 1 / (Levels for the Communication Network) 

Task Completion, 
Knowledge Based 

The percentage of tasks that can be 
completed by the agents assigned to them, 
based solely on whether the agents have the 
requisite knowledge to do the tasks. 

Type Graph Level 

Input AK:binary; AT:binary; KT:binary 

Output 91 G [0,1] 

Carley, 2002 

Find the tasks that cannot be completed because the agents assigned to the 
tasks lack necessary knowledge: 
let Need = [(AT’*AK) - KT’] 

let S = {i 1 1 < / < r , 3 j : Need(i,j) < 0 } 

Knowledge Based Task Completion is the percentage of tasks that could be 
completed = (T - S) / T 


CMU SCS ISRI 


-35- 


CASOS Report 




Task Completion, 
Overall 

The percentage of tasks that can be 
completed by the agents assigned to them, 
based solely on whether the agents have the 
requisite knowledge and resources to do the 
tasks. 

Type Graph Level 

Input AR:binary; AT :binary; RT :binary; 
AK:binary, KT:binary 

Output 91 G [0,1] 

Carley, 2002 

This is the average of Knowledge Based Task Completion and Resource 
Based Task Completion. If one of the two could not be computed, then the 
other is returned. 

Task Completion, 
Resource Based 

The percentage of tasks that can be 
completed by the agents assigned to them, 
based solely on whether the agents have the 
requisite resources to do the tasks. 

Type Graph Level 

Input AR:binary; AT :binary; RT :binary 
Output 91 G [0,1] 

Carley, 2002 

Find the tasks that cannot be completed because the agents assigned to the 
tasks lack necessary resources. Defined identically as Knowledge Based 
Task Completion, replacing matrix AK with AR and matrix KT with RT. 

Transitivity 

The percentage of edge pairs {(i,j), G>k)} in 
the network such that (i,k) is also an edge in 
the network. 

Type Graph Level 

Input N: square 

Output 91 G [0,1] 

NetStat 

Let G = (V,E) be the graph representation of the square network, 
let I = {(i,j,k) G i,j,k distinct} 

let Potential = {(i,j,k) G I (i,j) G E, and G,k) e E } 
let Complete = {(i,j,k) G Potential (i,k) G E } 

Then Transitivity = |Complete| / |Potential| 

Triad Count 

The number of triads centered at each node 
in a square network. 

Type Node Level 

Input N:square of dimension |V| 

Output Zg[0,(U -1)(F -2)] 

NetStat 

Let G=(V,E) represent a square network. And let Triad be a matrix of 
dimension V x V. 

Triad(i,i) = 0 

Triad(i,j) = card{ k | k != i, k !=j; A(i,j) A A(i,k) A A(k,j) }, i j 

Then the Triad count for agent i = sum(Triad(i,:)) 

Under Supply, 
Knowledge 

The extent to which the knowledge needed 
to do tasks are unavailable in the entire 
organization. 

Type Graph Level 

Input AK:binary; AT:binary; KT:binary 

Output 91 G [0,1] 

Carley, 2002 

Compute the average number of needed knowledge per task: 
letNeed = (AT’*AK)-KT’ 

let TaskNeed(i) = card] j Need(i,j)<0 }, for l<=i<= T 

Then UnderSupply is sum(TaskNeed)/ T 


CMU SCS ISRI 


-36- 


CASOS Report 




Under Supply, 
Resource 

The extent to which the resources needed to 
do tasks are unavailable in the entire 
organization. 

Type Graph Level 

Input AR:binary; AT:binary; RT:binary 

Output 91 e [0,1] 

Carley, 2002 

Under Resource Supply is identical to Under Knowledge Supply, replacing 
AK with AR, and KT with RT. 

Upper 

Boundedness 

The degree to which pairs of agents have a 
common ancestor. 

Type Graph Level 

Input N: square 

Output 91 e [0,1] 

Krackhardt, 

1994 


Weak Boundary 
Spanner 

A node which if removed from a network 
creates a new component. 

Type Node Level 

Input N: square, symmetric 

Output Binary 

Cormen, 

Leiserson, 

Riverest, 

Stein, 2001 
p.558 

A Weak Boundary Spanner is an articulation point of N, as defined in the 
referenced book. 


CMU SCS ISRI 


-37- 


CASOS Report 




Bibliography 


[1] Ashworth, M. and K. M. Carley, 2003, Critical Human Capital, Working Paper, CASOS, Carnegie Mellon, Pittsburgh PA. 

[2] Bonaeieh, Phil 1987. Power and eentrality; A family of measures. Ameriean Journal of Soeiology 92: 1170-1182. 

[3] Borgatti, S.P. 2003. The Key Player Problem. Dynamie Social Network Modeling and Analysis: Workshop Summary and 
Papers, R. Breiger, K. Carley, & P. Pattison (Eds.) Committee on Human Factors, National Research Council, 241-252. 

[4] Burt, Ronald. Structural Holes: The Soeial Struetures of Competition. Cambridge, MA: Harvard University Press, 1992. 

[5] Carley, Kathleen 2002. Summary of Key Network Measures for Charaeterizing Organizational Arehiteetures. Unpublished 
Document: CMU 2002 

[6] Cormen, Leiserson, Rivest, Stein 2001. Introduction to Algorithms, Second Edition. Cambridge, MA: MIT Press, 2001. 

[7] Carley, K, Dekker, D., Krackhardt, D (2000). How Do Social Networks Affect Organizational Knowledge Utilitization? 

[8] Elenberg, S.E., Meyer, M.M., and Wasserman, S.S. (1985). "Statistical Analysis of Multiple Soeiometric Relations," Journal of 
the Ameriean 

[9] Freeman, E.C. (1979). Centrality in Soeial Networks I: Coneeptual Clarification. Social Networks, 1, 215-239. 

[10] Kraekhardt, D. 1994. Graph Theoretieal Dimensions of Informal Organizations. In Computational Organization Theory, edited 
by Carley, Kathleen M. andM.J. Prietula. Hillsdale, NJ: Eawrenee Erlbaum Associates, 1994. 

[11] Newman MEJ, Moore C, Watts DJ Mean-field solution of the small-world network model PHYS REV EETT 84 (14): 3201- 
3204 APR 3 2000 

[12] Newman MEJ, Watts DJ Renormalization group analysis of the small-world network model PHYS EETT A 263 (4-6): 341-346 
DEC 6 1999 

[13] Newman MEJ, Watts DJ Scaling and percolation in the small-world network model PHYS REV E 60 (6): 7332-7342 Part B 
DEC 1999 Statistical Association, 80, 51-67 

[14] Wasserman, Stanley and Katherine Faust. Social Network Analysis: Methods and Applieations. Cambridge: Cambridge 
University Press, 1994. 

[15] Watts DJ Networks, dynamies, and the small-world phenomenon AM J SOCIOE 105 (2): 493-527 SEP 1999 

[16] Watts DJ, Strogatz SH Colleetive dynamies of'small-world' networks NATURE 393 (6684): 440-442 JUN 4 1998 


CMU SCS ISRI 


-38- 


CASOS Report 



Appendix B - ORA Risk Category Measures 


Metric 

Meaning 

Level 

Risk 

Data Needs 

Access Index, Knowledge 
Based 

Boolean value which is true if an agent is the 
only agent who knows a piece of knowledge 
and who is known by exactly one other agent. 

The one agent known also has its KAI set to 
one. 

Node 

Critical Employee 

Multi-cell 

Access Index, Resource 

Based 

Boolean value which is true if an agent is the 
only agent with access to a resource and who is 
known by exactly one other agent. The one 
agent known also has its RAI set to one. 

Node 

Critical Employee 

Multi-cell 

Actual Workload, 

Knowledge 

The knowledge an agent uses to perform the 
tasks to which it is assigned. 

Node 

Resource Allocation 

Multi-cell 

Actual Workload, Resource 

The resources an agent uses to perform the 
tasks to which it is assigned. 

Node 

Resource Allocation 

Multi-cell 

Average Distance 

The average shortest path length between 
nodes, excluding infinite distances. 

Graph 

Communication 

Single-cell 

Centrality, Betweenness 

The Betweenness Centrality of node v in a 
network is defined as: across all node pairs that 
have a shortest path containing v, the 
percentage that pass through v. This is defined 
for directed networks. 

Node 

Communication 

Single-cell 

Centrality, Closeness 

The average closeness of a node to the other 
nodes in a network. Loosely, Closeness is the 
inverse of the average distance in the network 
between the node and all other nodes. This is 
defined for directed networks. 

Node 

Communication 

Single-cell 

Centrality, Eigenvector 

Calculates the eigenvector of the largest 
positive eigenvalue of the adjacency matrix 
representation of a square network. 

Node 

Communication 

Single-cell 

Centrality, In Degree 

The In Degree Centrality of a node in a 
unimodal network is its normalized in-degree. 

Node 

Communication 

Single-cell 

Centrality, Information 

Calculate the Stephenson and Zelen information 
centrality measure for each node. 

Node 

Communication 

Single-cell 


CMU SCS ISRI 


-39- 


CASOS Report 




Centrality, Inverse Closeness 

The average eloseness of a node to the other 
nodes in a network. Inverse Closeness is the 
sum of the inverse distanees between a node 
and all other nodes. This is defined for direeted 
networks. 

Node 

Communieation 

Single-cell 

Centrality, Out Degree 

The Out Degree Centrality of a node in a square 
network is its normalized out-degree. 

Node 

Communication 

Single-cell 

Centrality, Total Degree 

The Total Degree Centrality of a node in a 
square network is its normalized in plus out 
degree. 

Node 

Communication 

Single-cell 

Clustering Coeffieient, 
Watts-Strogatz 

Measures the degree of elustering in a network 
by averaging the elustering eoeffieient of eaeh 
node i, defined as the ratio of the number of 
triangles eonneeted to i to the number of triples 
eentered at i. 

Graph 

Communication 

Single-cell 

Cognitive Load 

Measures the total amount of effort expended 
by eaeh agent to do its tasks. 

Node 

Critical Employee 

Multi-cell 

Communieation 

Measures the eommunieation need of agents to 
eomplete their assigned tasks. 

Node 

Communication 

Multi-cell 

Component Count, Strong 

The number of strongly eonneeted eomponents 
in a network. 

Graph 

Communication 

Single-cell 

Component Count, Weak 

The number of weakly eonneeted eomponents 
in a network. 

Graph 

Communication 

Single-cell 

Congmenee, Communieation 

Measures to what extent the agents 
eommunieate when and only when it is needful 
to eomplete tasks. Perfeet eongraenee requires 
reeiproeal eommunieation. 

Graph 

Communication 

Multi-cell 

Congmenee, Knowledge 

Measures the similarity between what 
knowledge is assigned to tasks via agents, and 
what knowledge is required to do tasks. Perfeet 
eongraenee oeeurs when agents have 
knowledge when and only when it is needful to 
eomplete tasks. 

Graph 

Resource Allocation, 

Task 

Multi-cell 

Congmenee, Resouree 

Measures the similarity between what resourees 
are assigned to tasks via agents, and what 
resourees are required to do tasks. Perfeet 
eongraenee oeeurs when agents have aeeess to 
resourees when and only when it is needful to 
eomplete tasks. 

Graph 

Resource Allocation, 

Task 

Multi-cell 


CMU SCS ISRI 


-40- 


CASOS Report 




Connectedness 

Measures the degree to which a square 
network’s underlying (undirected) network is 
connected. 

Graph 

Communication 

Single-cell 

Constraint, Burt 

The degree to which each node in a square 
network is constrained from acting because of 
its existing links to other nodes. 

Node 

Critical Employee, 

Redundancy, 

Communication 

Single-cell 

Density 

The ratio of the number of edges versus the 
maximum possible edges for a network. 

Graph 


Single-cell 

Diameter 

The maximum shortest path length between any 
two nodes in a unimodal network G=(V,E). If 
there exist i,j in V such that j is not reachable 
from i, then |V| is returned. 

Graph 

Communication 

Single-cell 

Distance Weighted Reach 

A generalization of graph theoretic distance, 
this measures the distance from a set of nodes in 
the network to all other nodes. 

Graph 

Communication, 

Critical Employee 

Single-cell 

Diversity, Knowledge 

The distribution of difference in idea sharing. 

This is the Herfmdahl-Hirshman index applied 
to column sums of AK. 

Graph 

Resource Allocation 

Single-cell 

Diversity, Resource 

The distribution of difference in resource 
sharing. This is the Herfindahl-Hirshman index 
applied to column sums of AR. 

Graph 

Resource Allocation 

Single-cell 

Edge Count, Lateral 

The percentage of lateral edges in a unimodal 
network. Fixing a root node x, a lateral edge 
(i,j) is one in which the distance from x to i is 
the same as the distance from x to j. 

Graph 

Communication 

Single-cell 

Edge Count, Pooled 

The percentage of pooled edges in a unimodal 
network. A pooled is an edge (i,j) such that 
there exists at least one other edge (i,k) in the 
network, and kj. 

Graph 

Task 

Single-cell 

Edge Count, Reciprocal 

The percentage of edges in a unimodal network 
that are reciprocated (also called Reciprocity). 

An edge (i,j) in the network is reciprocated if 
edge (j,i) is also in the network. 

Graph 

Task 

Single-cell 

Edge Count, Sequential 

The percentage of edges in a unimodal network 
that are neither Reciprocal Edges nor Pooled 
Edges. Note that an edge can be both a Pooled 
and a Reciprocal edge. 

Graph 

Task 

Single-cell 


CMU SCS ISRI 


-41 - 


CASOS Report 




Edge Count, Skip 

The fraction of edges in a unimodal network 
that skip levels. An edge (i,j) is a skip edge if 
there is a path from node i to node j even after 
the edge (i,j) is removed. 

Graph 

Communication 

Single-cell 

Effective Network Size 

The effective size of a node’s ego network 
based on redundancy of ties. 

Node 

Critical Employee, 

Redundancy, 

Communication 

Single-cell 

Exclusivity, Knowledge 

Detects agents who have singular knowledge. 

Node 

Critical Employee 

Single-cell 

Exclusivity, Resource 

Detects agents who have singular resource 
access. 

Node 

Critical Employee 

Single-cell 

Exclusivity, Task 

Detects agents who exclusively perform tasks. 

Node 

Critical Employee 
Performance 

Single-cell 

Fragmentation 

The proportion of nodes in a network that are 
disconnected 

Graph 

Critical Employee, 
Communication, 

Personnel Interaction 

Single-cell 

Flierarchy 

The degree to which a unimodal network 
exhibits a pure hierarchical structure. 

Graph 

Communication 

Single-cell 

Interdependence 

The percentage of edges in a unimodal network 
that are Pooled or Reciprocal. 

Graph 

Task 

Single-cell 

Interlockers and Radials 

Interlocker and radial nodes in a square network 
have a high and low Triad Count, respectively. 

Graph 

Critical Employee 

Single-cell 

Load, Knowledge 

Average number of knowledge per agent. 

Graph 

Resource Allocation, 
Redundancy 

Single-cell 

Load, Resource 

Average number of resources per agent. 

Graph 

Resource Allocation, 
Redundancy 

Single-cell 

Negotiation, Knowledge 

The extent to which agents need to negotiate 
with each other because they lack the 
knowledge to complete their assigned tasks. 

Graph 

Resource Allocation, 

Task 

Multi-cell 

Negotiation, Resource 

The extent to which agents need to negotiate 
with each other because they lack the resources 
to complete their assigned tasks. 

Graph 

Resource Allocation, 

Task 

Multi-cell 

Network Centralization, 
Betweenness 

Network centralization based on the 
betweenness score for each node in a square 
network. This measure is defined for directed 
and undirected networks. 

Graph 

Communication 

Single-cell 

Network Centralization, 
Closeness 

Network centralization based on the closeness 
centrality of each node in a square network. 

This is defined only for connected, undirected 
networks. 

Graph 

Communication 

Single-cell 


CMU SCS ISRI 


-42- 


CASOS Report 




Network Centralization, 
Column Degree 

A centralization based on the degree of the 
column nodes of a network. 

Graph 


Single-cell 

Network Centralization, In 
Degree 

A centralization of a square network based on 
the In-Degree Centrality of each node. 

Graph 

Communication 

Single-cell 

Network Centralization, Out 
Degree 

A centralization of a square network based on 
the Out-Degree Centrality of each node. 

Graph 

Communication 

Single-cell 

Network Centralization, Row 
Degree 

A centralization based on the degree of the row 
nodes in a network. 

Graph 


Single-cell 

Network Centralization, 

Total Degree 

A centralization of a square network based on 
total degree centrality of each node. 

Graph 

Communication 

Single-cell 

Network Levels 

The Network Level of a square network is the 
maximum Node Level of its nodes. 

Graph 

Communication 

Single-cell 

Node Level 

The Node Level for a node v in a square 
network is the longest shortest path from v to 
every node v can reach. If v cannot reach any 
node, then its level is 0. 

Graph 

Communication 

Single-cell 

Omega, Knowledge 

The degree to which agents reuse knowledge 
while doing their tasks. 

Graph 

Task, 

Performance 

Multi-cell 

Omega, Resource 

The degree to which agents reuse resources 
while doing their tasks. 

Graph 

Task, 

Performance 

Multi-cell 

Performance as Accuracy 

Measures how accurately agents can perform 
their assigned tasks based on their access to 
knowledge and resources. 

Graph 

Task, 

Performance 

Multi-cell 

Personnel Cost 

Total number of people reporting to an agent, 
plus its total knowledge, resources, and tasks. 

Node 


Multi-cell 

Potential Workload, 
Knowledge 

Maximum knowledge an agent could use to do 
tasks if it were assigned to all tasks. 

Node 

Resource Allocation 

Multi-cell 

Potential Workload, 

Resource 

Maximum resources an agent could use to do 
tasks if it were assigned to all tasks. 

Node 

Resource Allocation 

Multi-cell 

Redundancy, Access 

Average number of redundant agents per 
resource. An agent is redundant if there is 
already an agent that has access to the resource. 

Graph 

Resource Allocation, 
Redundancy 

Multi-cell 

Redundancy, Assignment 

Average number of redundant agents assigned 
to tasks. An agent is redundant if there is 
already an agent assigned to the task. 

Graph 

Resource Allocation, 
Redundancy 

Multi-cell 

Redundancy, Column 

The mean number of column node edges in 
excess of one. 

Graph 


Single-cell 


CMU SCS ISRI 


-43 - 


CASOS Report 




Redundancy, Knowledge 

Average number of redundant agents per 
knowledge. An agent is redundant if there is 
already an agent that has the knowledge. 

Graph 

Resource Allocation, 
Redundancy, 

Task 

Single-cell 

Redundancy, Resource 

Average number of redundant resources 
assigned to tasks. A resource is redundant if 
there is already a resource assigned to the task. 

Graph 

Resource Allocation, 
Redundancy, 

Task 

Single-cell 

Redundancy, Row 

The mean number of row node edges in excess 
of one. 

Graph 


Single-cell 

Relative Expertise 

The degree of dissimilarity between agents 
based on shared knowledge. Each agent 
computes to what degree the other agents know 
what they do not know. 

Node 

Personnel Interaction 

Single-cell 

Relative Similarity 

The degree of similarity between two agents 
based on shared knowledge. Each agent 
computes to what degree the other agents know 
what they know. 

Node 

Personnel Interaction 

Single-cell 

Span of Control 

The average number of out edges per node with 
non-zero out degrees. 

Graph 

Communication 

Single-cell 

Speed, Average 

The average shortest path length between node 
pairs (i,j) where there is a path in the network 
from i to j. If there are no such pairs, then 
Average Speed is zero. 

Graph 

Communication 

Single-cell 

Speed, Minimum 

The maximum shortest path length between 
node pairs (i,j) where there is a path in the 
network from i to j. If there are no such pairs, 
then Minimum Speed is zero. 

Graph 

Communication 

Single-cell 

Task Completion, 

Knowledge Based 

The percentage of tasks that can be completed 
by the agents assigned to them, based solely on 
whether the agents have the requisite 
knowledge to do the tasks. 

Graph 

Performance 

Multi-cell 

Task Completion, Overall 

The percentage of tasks that can be completed 
by the agents assigned to them, based solely on 
whether the agents have the requisite 
knowledge and resources to do the tasks. 

Graph 

Performance 

Multi-cell 

Task Completion, Resource 
Based 

The percentage of tasks that can be completed 
by the agents assigned to them, based solely on 
whether the agents have the requisite resources 
to do the tasks. 

Graph 

Performance 

Multi-cell 


CMU SCS ISRI 


-44- 


CASOS Report 




Transitivity 

The pereentage of edge pairs {(i,j), (j,k)} in the 
network sueh that (i,k) is also an edge in the 
network. 

Graph 

Communieation, 

Task 

Single-eell 

Triad Count 

The number of triads eentered at eaeh node in a 
square network. 

Node 

Communieation 

Single-eell 

Under Supply, Knowledge 

The extent to whieh the knowledge needed to 
do tasks are unavailable in the entire 
organization. 

Graph 

Resouree Alloeation, 

Task 

Multi-eell 

Under Supply, Resouree 

The extent to whieh the resourees needed to do 
tasks are unavailable in the entire organization. 

Graph 

Resouree Alloeation, 

Task 

Multi-eell 

Upper Boundedness 

The degree to whieh pairs of agents have a 
eommon aneestor. 

Graph 

Communieation 

Single-eell 

Weak Boundary Spanner 

A node whieh if removed from a network 
ereates a new eomponent. 

Node 

Critieal Employee 

Single-eell 


CMU SCS ISRI 


-45- 


CASOS Report 




