WLTAE: An HLA Federation for Logistics and Warfighting Models 


Charles Sinex 
Daniel Kerchner 
Kevin Cox 
Stephen Basile 
William Sellers 
Eric Hindman 
Johns Hopkins University 
Applied Physics Laboratory 
11100 Johns Hopkins Road 
Laurel, MD 20723-6099 
240-228-5000 

c.sinex@jhuapl.edu, dan.kerchner@Jhuapl.edu, kevin.cox@jhuapl.edu, 
stephen.basile@jhuapl.edu, william.sellers@jhuapl.edu, e.hindman(^huapl.edu 

VADM Stephen Loftus (USN retired) 

The Spectrum Group 
11 Canal Center Plaza 
Alexandria, VA 22310 
703-683-4222 
SFL TSG@aol.com 

John Hummel 

Argonne National Laboratory 
9700 South Cass Avenue 
Building 900 
Argonne, IL 60439-4832 
630-252-7189 

hummel@athens.dis.anl.gov 
Keywords; 

Logistics, Warfighting, TPFDD, ELIST, THUNDER, HLA, 

'Advanced Logistics Program, simulation interoperability, HLA Federation Class 

Abstract: The Warfighting and Logistics Technology and Assessment Environment (WLTAE) is intended to 
dynamically link warfighting and logistics models in a HLA-compliant simulation. WLTAE is currently funded as part 
of the DARPA Advanced Logistics Program (ALP) and will provide proactive planning and trade-off analysis 
capabilities for logistics in terms of the warfighting impact. The simulation currently has three federates: a warfighting 
federate, represented by the THUNDER model, a logistics federate, represented by the Enhanced Logistics Intratheater 
Support Tool (ELIST), and a Viewer/Controller federate. The Federation Object Model (FOM) is based on the Time- 
Phased Force Deployment Data (TPFDD) representation, facilitating the inclusion of additional logistics and 
warfighting models into the simulation. The WLTAE federates use the HLA Foundation Class library, a C++ library 
providing a object-oriented framework for rapid federate development. This paper discusses the general logistics¬ 
warfighting FOM used in WLTAE, the implementation process, and the information displays used to monitor and 
control the simulation 


1. Introduction 

Warfighting and logistics models and analyses have 
generally not been closely linked to one another for a 


variety of reasons. Typically, warfighting models have 
been run to examine weapons and strategies, and logistics 
limitations have not been a major concern. On the other 
hand, logistics models have been typically run in a 
scheduling mode to see if the time phased force 


Approved for Public Release, Distribution Unlimited 


D7IC QTTAUnr INSPECTED 4 


19981029 111 


deployment data (TPFDD) schedules desired by the CINC 
can be realistically achieved. There has not been much 
concern about the likelihood of enemy attacks on the 
logistics infrastructure. Additionally, sufficient supplies 
have been sent in the past to handle most warfighting 
contingencies, so the logistics models have not had to 
respond quickly to warfighting variations. 

As a result, there is no truly integrated model that can be 
used to develop and test an integrated warfighting and 
logistics plan. Several developments since the end of the 
Cold War make this situation unacceptable. First, there 
has been considerable discussion in DoD about cutting 
back on the logistics infrastructure and moving more in 
the direction of a “just-in-time” logistics strategy [1]. 
With the proliferation of theater ballistic missiles and 
other advanced weapons, there is an increasing 
vulnerability of the logistics systems to enemy attack. 
The assumptions that planned logistics supplies will be 
sufficient to handle all warfighting contingencies and that 
the enemy will not attack the logistics infrastructure are 
no longer valid. 

1-1 What is the Warfighting Logistics Technology and 
Assessment Environment (WLTAE) 

WLTAE is being developed to help meet this need for 
integrated warfighting/logistics models. WLTAE is 
intended to provide a flexible interface that will allow the 
user to dynamically link warfighting and logistics models 
and data bases in order to evaluate alternative operational 
plans and examine new logistics strategies. Dynamic 
linking will be two-way; logistics shortfalls will impact 
the warfighting simulation, while the logistics 
infrastructure will be present as targets in the warfighting 
model, allowing the enemy to attack the logistics 
laydown. 

WLTAE will be an HLA federation to facilitate model 
inter-operability and to support the transition to the next 
generation models such as the Joint Warfighting 
Simulation (JWARS). However, since few models are 
currently HLA compliant, WLTAE started by using non- 
HLA legacy models and exchanging data between those 
models through a HLA federation. 

1.2 Current WLTAE Federation 

The current WLTAE federation consists of three 
federates. Since the goal was to link warfighting and 
logistics models, major theater-level warfare (MTW) was 
chosen as the warfighting scenario to ensure the logistics 
supply system was stressed. After surveying available 
warfighting models, the THUNDER model was selected 
for the warfighting federate to demonstrate proof-of- 
principle for the WLTAE concept. THUNDER models 


air warfare stochastically and ground warfare 
deterministically and is maintained by the Air Force 
Studies and Analysis Agency (AFSAA). 

The matching logistics federate was then required to 
support flow of supplies and equipment forward from the 
sea and air ports of debarkation (SPODs and APODs, 
respectively) to the air and ground combat units in 
THUNDER. After surveying a number of logistics 
models, the Enhanced Logistics Intra-Theater Support 
Tool (ELIST) was selected for the logistics federate for 
the proof-of-principle demonstration. ELIST is 
maintained by the Military Transportation Management 
Command Transportation Engineering Agency (MTMC- 
TEA). 

During earlier work in FY-97, a direct, non-HLA link 
between THUNDER and ELIST was developed by the 
Logistics Management Institute (LMI) as part of the 
WLTAE project. The current work in FY-98 has 
concentrated on converting this direct, non-HLA link into 
a general warfighting/logistics HLA federation that can 
include a variety of other models. As part of this 
conversion, a Viewer/Controller federate was developed 
to allow the user to observe the conduct of the simulation 
and to allow redirecting the flow of supplies and 
equipment as the warfight progresses. 

1.3 Relation to the DARPA Advanced Logistics 
Program (ALP) 

WLTAE is currently funded as part of the DARPA ALP. 
ALP is a five year program, running to 2001, with the 
objective of designing, developing and demonstrating an 
end-to-end prototype system using advanced technologies 
to realize efficient, real-time control of the logistics 
pipeline to put the right material in the right place at the 
right time to support the warfighting commands. Specific 
goals of ALP include: (1) a capability for automated 
logistics planning, (2) real-time situation assessment, and 
(3) end-to-end movement control with continuous 
monitoring techniques. 

By linking logistics with warfighting models, WLTAE 
provides ALP with a proactive planning capability, 
allowing the likelihood and consequences of .successful 
enemy attack against the logistics infrastructure to be 
assessed and incorporate contingencies into the logistics 
plan. WLTAE also provides a trade-off analysis 
capability. If the ALP plans cannot meet all of the 
CINC’s requests, the warfighting simulation can be run 
with several logistics alternatives to help identify the most 
important items to be delivered. In turn, the ALP 
plaiming modules can serve as logistics models in their 
own right in WLTAE, with their automatic planning 



capability providing a dynamic link to the changing 
requirements of the warfighting simulation. 

In this operating mode, the near-term user community for 
WLTAE is considered to be the CINCs and their staffs. 
WLTAE would serve as a mission planning tool, allowing 
them to analyze branches and sequels to their basic 
warfighting/logistics plan. In the longer term, planners 
are also seen as users of WLTAE. In a planning mode, 
alternate logistics concepts and systems could be designed 
and tested in WLTAE simulations to help determine how 
well these systems and concepts support fte warfighters. 

2. Linking Warfighting and Logistics 
Models 

There are two challenges in linking warfighting and 
logistics models in WLTAE. The first challenge is an 
operational one of linking legacy models that were never 
designed to operate together or in a HLA environment. 
The second challenge is a more fundamental one of 
relating the entities and interactions that are important in a 
logistics environment to those that are important in a 
warfighting environment. Both of these issues are 
discussed briefly in the following sections. 

2.1 Linking legacy models in a HLA environment 

Most legacy warfighting and logistics models are 
designed to run in a stand-alone mode to completion of 
some fixed time step, typically on the order of several 
hours up to a day or more in simulation time, before they 
pause to write output or read new input. To try to 
exchange data on time steps smaller than tiiese 
programmed time steps requires substantial source coding 
changes, raising multiple verification and validation 
issues. To avoid fliis problem, the WLTAE project 
restricted its attention to legacy models that were 
designed to run in a start-stop mode and could be re¬ 
started by command line code rather than through a user 
interfece. Since logistics delivery times are on the order 
of hours, programs that had time increments in the range 
of 8 to 24 hours were considered acceptable. 

Dynamic linking of logistics and warfighting models 
requires the models have some functionality in common. 
For example, the warfighting model has to have some 
logistics input such as unit status and weapon and fuel 
quantities, which would impact mission planning or 
conduct in the warfighting model. In turn, die logistics 
model has to have the ability to modify infrastructure 
parameters like port throughput, allowing damage 
assessments from toe warfighting model against logistics 
targets to actually impact the subsequent delivery of 
supplies. Given tiiis common functionality, it was fairly 


easy to dynamically link the legacy models by exchanging 
data when the models pause between time steps. This 
approach also avoided major validation and verification 
issues since any source code changes were then primarily 
associated with data and warfighting unit initializations at 
the simulation start-up time. We found that a number of 
other warfighting and logistics legacy models also have 
this type of interactive capability; consequently, the 
current WLTAE system is not limited to THUNDER and 
ELIST. 

2.2 Linking the Logistics and Warfighting Scenario 
Environments 

A more challenging problem is the general linking of the 
logistics and warfi^ting scenario environments. The 
logistics environment is detail-rich, with a TPFDD 
containing thousands of entries for all types of supplies, 
equipment and personnel flowing into the theater. The 
TPFDD also includes detailed schedule and routing data. 
Typically, a fighter squadron might be described in the 
TPFDD by 50 to 100 separate unit line number (ULN) 
items, representing the fighter aircraft, repair crews, 
weapons, spare fuel tanks, military police, meteorological 
teams, etc. All of these ULNs are required for the 
squadron to be fully operational. 

Warfighting models typically have a much higher level of 
representation for warfighting units. For example, a 
warfighting model may describe a squadron in terms of 
only a few basic logistics descriptions, such as the number 
of aircraft and quantities of weapons and fuel. 

The approach used in the current HLA linkage was an 
adaptation of the force module linkage used in the 
original non-HLA link between THUNDER and ELIST. 
The basic concept is shown in the next two figures. The 
TPFDD is used to drive ELIST, effectively assuming that 
everything arrives at the SPOD or APOD as scheduled in 
the TPFDD. ELIST then transports these items forward 
to a final destination specified in the TPFDD. In 
calculating the transportation flow, ELIST breaks each 
ULN up into a mixture of 17 commodity classes, shown 
in die list on the left side of Figure 1. 

As shown in Figure 1, a particular ULN may have only a 
few of these 17 possible classes to transport. For 
example, a ULN labeled FAAA may represent the 18 F16 
fighters in a fighter squadron. In addition to the fighters 
which fly directly to the final airbase, ELIST has to 
transport some quantity of “containerized” material, some 
number of “personnel” and quantities of “hazardous not- 
containerized” and “not-containerized.” When all 
personnel have arrived and all amounts of the material 
have been delivered, die ULN is considered complete. A 




similar procedure is used for non-unit supplies such as 


fuel and water. 


TPFDD Input 
17 BUST commodity 
classes for each ULN: 
ULN (FAAAA)- 18 
F16s 

HET movable tonnage 
Aircraft tonnage 
Organic tonnage 
Ammo tonnage 
POL bulk 

Ammo containerized 
Ammo not-contalnerized 
Containerized • 

Personnel 
Floating craft 
Hazardous containerized 
Hazardous not-containerized - 
NAT tonnage 
Not containerized * 

Unidentified level 3,4 tonnage 
Air transportable tonnage 
Unidentified level 2 tonnage 


Host nation 

x; containerized 
N: personnel 
^ y: hazardous not-cont 
- z: not containerized 


L Pest^ 

ULNFAAAis 
complete when: 
allx, 
allN, 
all y, and 
all z 

are delivered 


Figure 1 ELIST Transportation Methodology 


BUST I THUNDER 



Figure 2 THUNDER-ELIST Force Module Linkage 


Figure 2 illustrates the basic force module linkage fighter squadron. This squadron might have 30 separate 

between THUNDER and ELIST. Each force module in ULNs, the first of which was the ULN labeled FAAAA 

the TPFDD represents a fighting unit such as the 7* shown in Figure 1 with the actual fighter aircraft. All of 









these ULNs must arrive at the destination for the 
squadron to be fully operational, with all service kits, etc. 
Each ULN is considered complete following the process 
illustrated in Figure 1; when all ULNs making up that 
force module are complete, that fighter squadron can be 
transferred fi’om the destination in ELIST to the airbase in 
THUNDER. A similar process is followed for each force 
module in the TPFDD. 

3. HLA Federation for WLTAE 

There are currently three federates which participate in 
the WLTAE federation: (1) ELIST (intra-theater 
logistics), (2) THUNDER (theater warfighting) and (3) 
Viewer/Controller (data logger and simulation interface) 

The ELIST and THUNDER federates are both 
constructed around legacy models. All three federates 
rely heavily upon the HLA Foundation Class (HFC) 
library developed at APL. The HFC library provides a 
layer of abstraction between the simulation models and 
the intricacies of the HLA/RTI. The HFC includes the 
necessary fi'amework of a federate, such as the federate 
ambassador, simulation driver, event services, time 
management, and automated attribute updating. Using 
the HFC considerably expedites federation development 
by minimizing source code duplication from federate to 
federate. The HFC library is described in further detail in 
[ 2 ]. 

Figure 3 shows the hierarchy of object classes, and the 
attributes associated with each class. The subclasses of 
organization and installation are based on the 
representation in THUNDER. Although all organizations 
represented in THUNDER are published (for the benefit 
of the viewer), only a subset of these currently receive 
their supplies from ELIST. This subset is specified in the 
user-created files which are read in by the ELIST and 
THUNDER federates upon initialization. 

Figure 4 shows the hierarchy of object interactions, and 
the parameters of each interaction. The arrival 
interactions are arrivals of non-critical supplies, whereas 
the resupply interactions are used to track arrivals of 
critical resources. Of the types of supply arrival 
interactions, Equipment_Arv and AC_Arv are directed to 
particular organizations, whereas the remainder are 
general supply arrivals, in that the supplies are distributed 
to the appropriate units within THUNDER. 

The Federation Executive, ELIST model and federate, 
and THUNDER model and federate are each run on a Sun 
Sparc Station. The Viewer/Controller federate is 
currently executed on a PC running Windows 95. 


3.1 ELIST Federate 

The ELIST federate consists of C-H- code written using 
the HFC library, plus the legacy ELIST model (version 
7.2). In order to allow the federate to regulate the running 
of ELIST, it was necessary to make a few modifications 
to ELIST. The original ELIST model was operated by a 
user through a graphical user interface (GUI); for 
WLTAE it was necessary for the model to be operable in 
an automated fashion. To allow ELIST to be operated in 
this mode, ELIST was modified by MTMC-TEA to read a 
control file. By appending lines to this control file, the 
ELIST federate is able to have ELIST run to a specified 
day and then pause until further directives are added to 
the control file. Additionally, several model parameters 
can be dynamically modified using this control file; 
currently WLTAE takes advantage of the ability to 
modify port throughput to reflect damages inflicted in 
THUl^ER warfighting. 

The ELIST federate incorporates ELIST results, which 
are output after each time step, by reading the ELIST 
output file. This file describes information about supply 
arrivals. To reflect these arrivals, the ELIST federate 
creates the appropriate arrival or resupply interactions. 

The ELIST federate internally tracks the supplies that 
have arrived for each organization. When supplies for 
each organization reach the required levels, ELIST 
deploys the organization by toggling its deploy_stams 
attribute. Upon receiving a Supply_Info_Request 
interaction from the Viewer/Controller, federate, ELIST 
“replies” by sending a Supply_Info interaction containing 
details about the supplies held by an organization. 

On each time step, the ELIST federate reads the ELIST 
arrivals file, which describes the deliveries which arrived 
at their destinations. The federate then generates supply 
arrival interactions to reflect these deliveries. 

3.2 THUNDER Federate 

The THUNDER federate consists of C-H- code written 
using the HFC library, plus the legacy THUNDER 
simulation (version 6.4). The original THUNDER 
simulation had been modified by LMI for the- non-HLA 
link so that it can be run one step at a time. The 
simulation was further modified this year so that it 
appends to its output files after each time step, rather than 
after the completion of the entire simulation. 

On each time step, the THUNDER federate reads the 
THUNDER output file which describes the position of 
each organization; the federate updates these attributes of 
the respective federation objects. This file also describes 
the current forward line of troops (FLOT); the 



THUNDER federate publishes a FLOT Spec interaction, installation; the federate then updates the appropriate 
On each time step the THUNDER federate also reads the attributes of the installation objects. 

THUNDER output file which describes the status of each 



Figure 3 WLTAE Object Classes 



Figure 4 WLTAE Interaction Classes 




















































Upon receiving arrival or resupply interactions, 
THUNDER appends to the “supply arrivals file” which is 
read by THUNDER at each time step. 

3.3 Viewer/Controller Federate 

The WLTAE Viewer was developed to provide an 
integrated display environment for warfighting and 
logistics information, to serve as an analysis tool, provide 
data logging for the WLTAE Federation, and provide a 
standalone playback capability. The Viewer can be used 
by CINCs and their staff to answer fundamental 
questions, such as: how is the warfight progressing, what 
are the consequences of attack or damage to the logistics 
infrastructure, what are the projected arrival times of 
equipment, or is a unit missing a key component. 

3.3.1 Design: A modular design approach was used for 
the Viewer. It is composed of two components: the 
display/graphical user interface portion and the Viewer 
federate. The display portion of the Viewer provides the 
user with federation control capabilities and status 
information, a standalone playback capability, an easy to 
use graphical user interface, and access to various 
analysis capabilities. The Viewer federate subscribes to 
the various federation attributes published by the ELIST 
and Thunder simulation federates. The Display 
component and the Viewer federate communicate over a 
TCP/IP streamed data socket. This allows the two 
components to reside on separate computers and 
communicate over the Internet or a standard telephone 
line using a Slip or RAS connection. This provides a low 
cost connectivity between the WLTAE Warfighting and 
Logistics simulations, and remote users. To have access 
to the full capabilities of WLTAE, a remote user would 
need only a PC with Windows 95 or Windows NT and a 
modem. 

A relational database was chosen to archive federation 
information, provide a playback capability, and a query 
capability. A relational database provided the most 
flexibility in storing and accessing large quantities of 
data. 

3.3.2 Tools: Rapid Application Development (RAD) 
tools and the HFC library were used to build the WLTAE 
Viewer/Controller. Microsoft Visual Basic was used to 
develop the Display component of the Viewer/Controller. 
The GUI and database tools in Visual Basic greatly 


reduced the time necessary to create this component. The 
GUI design environment of MS Access was used 
extensively to prototype queries for the Viewer. 

3.3.3 Environment: The WLTAE Viewer was installed 
and tested on PCs running Windows 95 and Windows NT 
4.0 operating over a 16 Mbs token-ring network. The 
ELIST and THUNDER federates were installed on a Sun 
Sparc Station operating on a separate 10 Mbs Ethernet 
network connected by a Network Bridge to the token-ring 
network segment. The RTI and Federation executives 
were also run on Sun Sparc Stations. 

4. Test Scenario and User Interface 

The test scenario used was a war in the Middle East. Iraq 
invades Kuwait and Saudi Arabia, the United States reacts 
by halting invaders, building up forces in the theater, and 
then counter attacking. The Allied ground forces 
consisted of one Kuwait division, one Saudi division, five 
1/3 U.S. Army divisions, and two Marine fly-in-echelons. 
The air units consisted of 14 Air Force tactical fighter 
squadrons, two Marine Air tactical fighter squadrons, and 
eight Navy tactical fighter squadrons. 

The information required to construct this scenario 
consisted of three sets of data. The TPFDD holding the 
U.S. deplo 5 anent data, the warfight parameters along with 
the order of battle for the Iraqi and allied forces in the 
THUNDER data files, and the in-theater transportation 
and host nation support details in the ELIST data files. 

The first test case was a short-warning scenario. Five 
days of warning were assumed before an Iraqi invasion of 
Kuwait and Saudi Arabia. 

4.1 Results 

The results of the short-warning scenario indicate that the 
enemy overruns the allied forces. This is because many of 
the units assumed to be fighting at the front had been 
delayed as a result of missing key components. Figure 5 
shows the Viewer main display and situation map on day 
seven of the warfight. The Iraqi forces have pushed 
though Kuwait and are deep into Saudi Arabia as shown 
by the FLOT line displayed in magenta. The yellow 
circles indicate U.S. forces that have not been deployed 
because of key supplies not being delivered by that time. 



Figure 5 Viewer Main display and Situation Map on Day 7 of the WarHght 


4.2 User Interface 

By using the Viewer it is possible to drill down into the 
detail and discover problems that contributed to the late 
deployment of U.S. forces. Figure 6 shows the equipment 
status for the 1/1 Cavalry Division Kuwait on day seven 
of the warfight. This division has not been deployed 
because it is missing critical heavy equipment transporters 
(HET) moveable tonnage even though all its personnel are 
in place. 



mnnn 



^mmbdily 




Ammunition Containerized 

24.8 

100 


Containerized 

A^A.^ 

100 


HET Movable Tonnage 

15996.3 

1 


Not Containerized 

3152^0 

100 ' 


Organic Tonnage 1 

mAS2 

182... 


Personnel 

148340 

!ioo 



Figure 6 Equipment Status for the 1/1 
Cavalry Division on Day 7 of the Warfight 

The Viewer provides the capability to search for matching 
Unit Type Codes (UTCs) in the theater. The UTC 
describes the generic equipment that is contained in the 
ULN. A CINC could use this search capability to locate 
and redirect supplies to organizations with a more critical 


need for that equipment. Figure 7 shows the capability of 
the Viewer to query all of the supplies being delivered 
into the theater. By double clicking on an equipment 
type, the CINC can find the location and expected 
delivery for all the matching UTCs in the theater that 
might be considered for substitution. Figure 8 shows an 
example query for all Apache attack helicopters in the 
theater, where they are being sent and when they are 
expected to arrive. Alternatively, the CINC could decide 
the missing equipment is not combat-critical and could 
deploy the Unit as it is currently configured. 

5. Future Plans 

Future plans are to continue to develop the WLTAE 
federation and add additional user functionality. The 
addition of Naval warfighting and logistics models and 
databases are required to make WLTAE truly joint. There 
is also interest in extending the logistics component of 
WLTAE back to CONUS. A proposal to implement this 
extension by combining WLTAE with the Argonne 
Distributed Intelligent Agents for Logistics (DIAL) is 
described in a companion paper being presented at this 
conference [3]. 

As described in the introduction, the near term goal is to 
make WLTAE into a mission planning tool for the CINC 
and his staff. In this WLTAE is intended to allow the 
CINC to ask a variety of questions. Typical questions 


I 












pp 




mm 


3E322 

HHC DIVAVNBDE HVY 

1 


3E666 

HHC DIVAVNBDE IDL 

2 


2EUTT 

HHC HVY DIV BDE ARMOR 

A 


NBF22 

HHC SUPPORT GROUP CORPS 

2 


0W322 

HHC AIR ASSAULT BRIGADE 

6 


0HP66 

HHC AIR ASSAULT DIVISION 

2 


^LRNN 

HHC COMBAT ENGINEER GROUP 

2 


OLTTT 

HHClNFDFv' MECH BDE 

2 

m 

NED77 

HHC MMC SPT CMD AASLT DIV 

2 


N21W 

HHD CORPS SUPPORT BN 

A 


42B77 

HHD ENGINEER BRIGADE 

2 


GC722 

HHD CHEMICAL BATTALION 

2 


Q2F77 

HHD MP BATTALION 

2 

i 

2T222 

HHT ACR 

2 

KSo' 

3PLFP 

HMH(1BCH-53E)/MPSFIE 

2 


3PLAP 

HMH(8CH-53D)/MPSRE 

2 


3PUAP 

HMLA (18 AH-1 /9 UH-1)/MPS FIE ' 

2 


3PNAP 

HMM (12 GH-^6)/MPS RE 

A 


9HEEP 

HQ BTY, ARTY BN/MPS RE 

- 2 

M 





Figure 7 Example Equipment List 



mi 




WMS 

3RF77 

ITANAC i 

*I7L4 

coil 

Itanap i 

rziA 

C030 

ItAN3C i 

TZLA 

C037 

AT 1 AUn ntL BN An rrr-, " 1 

iTANjP ! 

TZL4 

C03G 

jTAPFC i 

TZIA I 

G037 

ITAPFP I 

TZL4 i 

C036 


Figure 8 Example Attack Helicopter Query 

might be a series of inquiries such as: 

• How is the warfight progressing? 

• Where is the enemy advancing, where am I 
advancing? 

• How do actual consumption rates of supplies 
compare to planned rates? 

• Can the enemy attack/damage my logistics 
infrastructure? 

• What is the status of my combat units? 

• What are their combat readiness levels? 

• Is a unit missing key ULN components? 

• Where are the missing ULNs and when will 
they arrive? 

• Can I deploy the unit without the missing 
components? 


• Are there substitute ULNs elsewhere in the 
theater than can be transferred to complete 
this unit? 

• Can I maintain my warfighting tempo? 

• What is my sustained operational capability? 

• If supplies slow or stop temporarily, can I 
recover without losing tempo? 

From the types of questions that might be asked, it is clear 
that visibility into unit status and the ability to drill down 
to details is essential. The Viewer/Controller provides 
this initial capability. Equally important is the ability to 
translate these changes back into the TPFDD and the 
warfight. Modifications to the Viewer/Controller will be 
made that allow the CINC to redirect the flow of supplies 
into the theater (i.e. modify the destinations of items to be 
delivered by ELIST) or deploy units to THUNDER for 
combat without the full set of ULNs being delivered. 

Acknowledgements 

This WLTAE development was funded under the 
DARPA Advanced Logistics Program. We would like to 
thank the Program Manager, Todd Carrico, for his 
support of this effort to integrate warfighting and logistics 
models. We would also like to thank Military 
Transportation Management Command-Transportation 
engineering Agency for making ELIST available and Air 
Force Studies and Analysis Agency for making 
THUNDER available to the WLTAE project. 

References 

[1] Dr. J.S. Gansler: “Defense Modernization” keynote 
address at the Aerospace Industry Association, 21 
November 1997 

[2] Kevin Cox, “A Framework-based Approach to HLA 
Federate Development” SIW paper number 98F-SIW- 
181. In this volume 

[3] John R. Hummel and Charles H. Sinex, “Development 
of a Comprehensive Logistics and Warfighting System”, 
SIW paper 059 in this volume 

Author Biographies 

CHARLES SINEX holds a Ph.D. in Nuclear Physics 
from Rice University. He is currently a Program Manager 
with the Joint Warfare Analysis Department at the Johns 
Hopkins University Applied Physics Laboratory, Laurel, 
Md and is managing the warfighting Logistics 
Technology and Assessment Environment (WLTAE) 
project. Dr. Sinex is a member of the American 


























Geophysical Union and the SISO Logistics working 
group. 

DANIEL KERCHNER holds an M.S. in Systems 
Engineering from the University of Virginia and a B.S. in 
Applied & Engineering Physics from Cornell University. 
He is currently a member of the Joint Warfare Analysis 
Department at the Johns Hopkins University Applied 
Physics Laboratory, and is woiking on problems of 
simulation interoperability and of decision analysis. Mr. 
Kerchner is a member of die Military Operations 
Research Society. 

KEVIN COX is a software engineer at the Johns Hopkins 
University Applied Physics Laboratory. He holds a BS in 
Physics and Mathematics from Towson State University 
and completes an MS degree in Computer Science from 
the Johns Hopkins University in Fall of 1998. Mr. Cox’s 
interests lie in distributed computing technologies and the 
application of these technologies to distributed 
simulation. He has been involved in numerous distributed 
simulation projects conducted at APL. 

STEPHEN BASILE is a Senior Staff Engineer with The 
Johns Hopkins University Applied Physics Laboratory 
Test and Evaluation Branch. He performs weapon system 
reliability, maintainability, and accuracy analyses. His 
interests include modeling and simulation, computer 
integration and control applications, and concurrent 
engineering. Dr. Basile teaches mechanical engineering 
at the JHU Whiting School] of Engineering. He holds a 
D.Sc. from George Washington University. He is a 
member of ASME and SOLE. 

WILLIAM SELLERS is a Senior Professional Staff 
Physicist in APL’s Strategic Systems Department. He 
obtained a B.S. degree in physics from the University of 
Maryland in 1978 and an M.S. degree in computer 
science from die Johns Hopkins University in 1985.. 
Since joining APL in 1981, he has worked at designing 
and developing data analysis and simulation tools for GPS 
missile tracking systems, NEAR spacecraft groimd 
systems. Digital Short Range Communications systems, 
informatics system for the pain management doctors at 
the JHU School of Medicine, and an FBI interview 
training simulation system. 

ERIC HINDMAN holds a Masters in Applied 
Madiematics from the University of Maryland. He is 
ciurently a Chief Software Engineer with EISI (a 
subsidiary of Hadron, Inc.) and is contracted to the 
Information Systems Facilities Group, Strategic Systems 
Department at the Johns Hopkins University Applied 
Physics Laboratory. He has 28 years experience in 
Software Engineering. 


STEPHEN LOFTUS is the Executive Vice President of 
the SPECTRUM Group in Alexandria, Virginia, and is 
currently acting as a consultant to The Johns Hopkins 
University Applied Physics Laboratory in the 
development of new logistics concepts. He recently 
retired from the U.S. Navy as a Vice Admiral, having 
been the Deputy Chief of Naval Operations (Logistics). 

JOHN HUMMEL is a Program Coordinator/Manager 
with the Decision and Information Sciences Division of 
the Argonne National Laboratory, Argonne, IL. He 
manages development efforts with the Dynamic 
Information Architecture System (DIAS), the Distributed 
Intelligent Agents for Logistics, and the Dynamic 
Environmental Effects Model (DEEM). Dr. Hummel is a 
member of the SISO Synthetic Natural Environment and 
Logistics working groups and a member of the SNE PRP. 


