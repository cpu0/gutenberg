AD-A216 093 



» Carnegie Mellon University 

Software Engineering Institute 

Quarterly 

Update 

Fi 9 t’Z'S 0003 



P»Tl>.aV7ION 3TATTMINT A 

Approved for puoiic release* 
PftnJbupop Uolaiuted_ 


April-June 1989 


) 













2Q 

89 


* Carnegie Mellon University 

Software Engineering Institute 


Quarterly 

Update 


Published as SEI-89-CDRL-103-3 by 
the Software Engineering Institute. 
The SEI is a federally funded research 
and development center sponsored by 
the Department of Defense under con¬ 
tract to Carnegie Mellon University. 

Approved for public release. 
Distribution unlimited. 



i : ■ ; . ■ ;> s 



M 1 ! 


April-June 1989 









r 


Director’s Overview 

The second quarter of 1989 was an eventful one for the SEI. We held our annual SEI 
Affiliates Symposium on May 2-4. 1989, in Pittsburgh. This year’s symposium in¬ 
cluded one day of tutorials and workshops followed by two days of briefings and con¬ 
ference sessions. I was pleased that 358 people from affiliate organizations attended 
and that many participants offered valuable feedback on SEF work. The 1990 SEI 
Affiliates Symposium is scheduled for September 11-13, 1990, in Pittsburgh. We 
look forward to hearing from affiliates then and throughout the year. 

The SEI played a large role in organizing the I !th International Conference on Soft¬ 
ware Engineering (ICSE), which was held in Pittsburgh on May 16-18, 1989. This 
conference was jointly sponsored by the IEEE Computer Society Technical Commit¬ 
tee on Software and the ACM Special Interest Group on Software Engineering. ICSE 
was attended by more than 1100 people from 20 countries. I served as the general 
chair. Norm Gibbs was the tutorials chair, and Nancy Belz was the local arrangements 
chair. Other members of the SEI participated as presenters, panelists, program com¬ 
mittee members, tool presenters, exhibitors, and session chairs. 

Several ->* h er significant events were held during this quarter, including the Software 
Engineering Process Group Workshop (p. 5). the Measurement Steering Committee 
Meeting (p. 5), the Sixth IEEE Workshop on Real-Time Operating Systems and Soft¬ 
ware (p. 13), and the Third International Workshop on Real-Time Ada Issues (p. 21J. 

The SEI provided a variety of training and educational opportunities during this past 
quarter. We conducted self-assessment training for 40 participants (pp. 4, 23). and 
completed Software Verification and Validation (p. 18), an Academic Series course, 
and Software Project Management (p. 18). the first Continuing Education Series 
course. In addition, the first Technology Series videotape, Sojru'are and Some Les¬ 
sons Learned from Engineering (p. 18), was released this quarter. 

Several of the SEI projects that involve the development of prototype systems have 
useful products available to interested organizations. This quarter, the Distributed 
Ada Real-Time Kernel (DARK) was distributed to nine r.r.v acceptor sit“s (p ' A ) and 
three additional companies signed on as acceptor sites for the Serpent user interface 
management system (p. 14). Furthermore, the SEI began distributing the source code 
for the SQL Ada Module Extensions standard packages, which enable the binding of 
Ada and SQL (p. 21). 

Between April and June 1989. the SEI signed on two new academic affiliates (p. 16) 
and nine new industry affiliates (p. 23). In addition, three new resident affiliates 
joined the SEI (p. 23). I encourage more organizations to consider sending resident 
affiliates to the SEI. Resident affiliates mutually benefit the SEI and their home or¬ 
ganizations by applying their expertise toward working with us on significant issues 
that affect the whole software engineering community. 


Larry Druffel, Director 


2 






Table of Contents 


i 

Software Process Assessment .4 

Software Process Development.5 

Software Capability Evaluation .6 


Software Development Environments .8 

Specification and Design Methods and Tools.9 

Software Architecture Design Principles.9 

Software Process Modeling . 10 

Real-Time Embedded Systems Testbed. 12 

Real-Time Scheduling in Ada. 13 

Distributed Ada Real-Time Kernel . 14 

User Interface. 14 

Software for Heterogeneous Machines. 15 

Software Engineering Curriculum. 17 

Video Dissemination. 18 

Advanced Learning Technologies . 19 

Software Engineering Video Network . 19 

Domain-Specific Software Architectures .20 

Binding of Ada and SQL.21 

Study and Analysis for Ada 9X.21 


Technology Application.22 

Affiliate Relations .23 

Transition Training .23 

Information Management .24 

Empirical Methods.24 


26 

27 

28 


Software Engineering 
Process 


Software Engineering 
Methods 


Software Systems 


Education 


Ada & STARS Support 


Technology Transition 


Computing Facilities 
CERT 

Coordination Center 
For More Information 


3 
































Software Process 
Assessment 


Software Engineering Process 

The Software Engineering Process Program focuses on improving the process of software 
development. Projects within the program are assessing the actual practice of software 
engineering in the defense community, training organizations to gain management control 
over their software development processes, and establishing a network of process groups 
to improve their software capability. 


The Software Process Assessment Project assists software organizations in launching * 

effective process improvement programs, characterizes and reports on the software engi¬ 
neering capabilities of defense contractors, and defines priority needs for software process 
improvement in the defense community. 

Project members completed their review of the Westinghouse Electronic Systems Group 

(WESG) action plan to make process improvements, and SEI and WESG professionals ® 

held a meeting to discuss the SEl’s response. 

SEI-assisted assessments were completed for Ford Aerospace and McDonnell Douglas 
during this quarter. 

In conjunction with staff from the SEI Transition Training group, project members con- ® 

ducted self-assessment training for 40 participants from several SEI affiliate organiza¬ 
tions. The training prepares affiliates to assess software development processes within 
their organizations. 

In May 1989, the project conduced a process assessment of an SEI project. This internal 

assessment provided insight into software development within the SEI and allowed Proc- ® 

ess staff to gauge how the assessment tool scales down to a smaller organization. 

At the 11th International Conference on Software Engineering, the project leader gave a 
presentation describing the project’s state-of-the-practice reporting effort. 

The project leader presented the keynote speech at the first annual Naval Ocean Systems 0 

Center (NOSC) Software Engineering Symposium in San Diego. The symposium w'as 
sponsored by NOSC’s new software engineering process organization, which was created 
as a direct result of the SEI-assisted assessment conducted at NOSC in January 1988. 








4 









The Software Process Development Project supports improvement in the software engi¬ 
neering process through software engineering process groups (SEPGs), guides, work¬ 
shops, working groups, and training courses. Using data gathered from the Software 
Process Assessment and Softwa r e Capability Evaluation Projects, this project identities 
priority needs for process improvement, selects methods and practices to meet these 
needs, and works with organizations to improve their methods and practices. 

The second annual SEPG Workshop was held June 21-22, 1989, at the SE1. Forty-five 
invited participants from industry and government organizations met to discuss their 
experiences in establishing and sustaining process improvement within their organiza¬ 
tions. Individuals attending the workshop are currently participating in an ongoing proc¬ 
ess group in their organization. Presentations were made on total quality management, 
metrics, and human resources issues that relate to the process maturity framework. This 
workshop was used to foster dialogue among peers from different organizations and to 
collect ideas for future support that the project will provide to process groups. 

The project, in collaboration with staff from the SEI Technology Transition Program, 
completed a draft version of the Software Engineering Process Group Guide in June 
1989, and distributed it for external review at the SEPG Workshop. This report provides 
guidance on establishing and operating an SEPG and wiil serve zz the basis of a future 
SEI publication. 

The first meeting of the Measurement Steering Committee was held in April 1989 at the 
SEI. This meeting launched a national initiative that the SEI is leading to bring software 
process metrics into more general use. The use of metrics will provide a more explicit 
and formal basis for evaluating and improving the software development process. The 
meeting was attended by approximately 20 authorities on measurement, drawn from in¬ 
dustry, government, and academia. 

The Measurement Steering Committee established two measurement working groups: 
one for metrics definition and one for metrics acquisition. The first group will define a 
basic set of measurements. The second will define the requirements to obtain the metrics 
and will account for different viewpoints and usage in practice, validation, verification, 
precision, and accuracy. The first meeting of the measurement working groups was held 
at the SEI on June 20, 1989. Approximately 50 people attended. The project will con¬ 
tinue to support the measurement initiative by facilitating the meetings of the steering 
committee and the working groups. 

The fifth pilot session of the software inspections course was taught to General Dynam¬ 
ics in Fort Worth, Texas. This course, developed in collaboration with the SEI Transi¬ 
tion Training group, teaches a method for effectively conducting peer technical reviews 
of software products, including specification, design, test plans, test results, and code. It 
instructs practitioners in cost-effective methods for detecting and removing defects early 
in the software life cycle. 

The project initiated a program management effort to help government program offices 
understand and use process principles when acquiring software and monitoring software 
contracts. The project has direct support funding from two Electronic Systems Division 
programs: Cobra Dane and Mission Planning System; and two Communications and 
Electronics Command (CECOM) programs: Operational Tactical Army Data Systems 
(OPTADS) and Forward Army Air Defense Command and Control (FAADC2). The 
purpose of the program management effort is to help government acquisition organiza¬ 
tions to be better customers. Working with government program managers provides the 
SEI with an opportunity to increase the application of software capability evaluation and 
provides incentive to contractors to continually improve their process maturity. 


Software Process 
Development 


5 




Software Capability 
Evaluation 


• • The Software Capability Evaluation Project helps DoD acquisition organizations to evalu¬ 
ate the software capability of contractors to perform competently on DoD contracts. The 
project is improving and transitioning an evaluation method for use in software-intensive 
acquisitions. 

Project members updated their plan for revising the questionnaire used to help identify the 
maturity of an organization’s software capability. This revision incorporates suggestions 
from industry for an extensive public review and a revision control system. The project 
expects to complete Version I of the software capability questionnaire in the summer of 
1990. 

Project members made presentations to CECOM program engineering offices and col¬ 
lected feedback on the project's evaluation method. The project is supporting CECOM, 
which is using capability evaluations in its acquisition activities. 

Project members also trained representatives from seven logistic centers in the Air Force 
Logistics Command to use the capability evaluation method. The method was applied in 
June 1989 on the command's source selection for a major F-l 11 upgrade. 

In June 1989, project members made presentations to the Aircraft Weapons and Systems 
Integration Department at the Naval Weapons Center (NWC). and arranged to train two 
evaluation teams from NWC in July 1989. 

The project leader met with representatives of the Air Force Systems Command (AFSC) 
and the Air Force Aeronautic Systems Division (ASD). who are producing a regulation 
describing the use of pre-award surveys in source selection. The project's evaluation 
method will be included in the regulation. 


00000000000000 

Process Program 
Reports 

Aprii-June 1989 


CASE Planning and the Software Proc ess 
(CMU/SEI-89-TR-26) 


For information on how to order reports, see page 


6 




Software Development 
Environments 


Software Engineering Methods 

The primary objective of the Methods Program is to improve the practice of software 
engineering by improving individual and team productivity through the identification 
and transition to practice of emerging software technology. Promoting the appropriate 
use of this technology supports the SE1 effort to transform software development from 
an ad-hoc, labor-intensive activity to a technology-supported engineering discipline. 


A continuation of the Evaluation of Environments Project, this project is investigating 
emerging environment technology and its transition to practice. Specifically, the project 
is studying the problem of tool configuration management and is tracking the state of en¬ 
vironment architectures, with a focus, in particular, on configuration management func¬ 
tionality. 

To address problems concerning the assembly, integration, and evolution of third-party 
tools in environments, the project is developing a prototype tool that supports the configu¬ 
ration management of tools in a distributed workstation environment. This quarter, pro¬ 
ject members completed the first stage of analyzing the requirements for the data model¬ 
ing aspect of this prototype, and performed an analysis of tool parameterization tech- 


Focusing on advances in configuration management, project members are examining sev¬ 
eral commercial environments for their support in managing software evolution. The 
underlying configuration management models are being analyzed and compared, and 
newly introduced configuration management concepts are being determined. The results 
of this work are being communicated to cooperating government agencies, through re¬ 
ports and presentations. 

A chapter describing the state of the practice of software development environments was 
reviewed and submitted for publication to the American Institute of Aeronautics and As¬ 
tronautics (AIAA) as part of an AIAA Progress Series Book on Aerospace Software En¬ 
gineering. 

Also this quarter, project members gave an invited talk at the USEN1X Software Manage¬ 
ment Workshop, participated and presented at the Services Backplane Forum under the 
auspices of the National Institute for Standards and Technology (NIST), and attended a 
program committee meeting for the Second International Workshop on Software Con¬ 
figuration Management. 


8 













This project is examining the use of traditional and formal methodologies in the specifica¬ 
tion of embedded applications. 

This quarter, the project specified a problem using four methodologies (Ward/Mellor, 
Hatley/Pirbhai, Harel, and Extended Systems Modeling Language), and is evaluating 
these specifications against a set of previously established evaluation criteria. Developers 
of the methodologies are also reviewing the specifications. To investigate the experience 
of others in using these methodologies, project members visited six companies that pro¬ 
duce commercial or military software (Hewlett-Packard, Motorola, MITRE, Ford Aero¬ 
space, Kaiser Electronics, and Smith Industries). The knowledge and experience gained 
from this effort will be reported to the software community to help developers select ap¬ 
propriate methodologies for designing embedded applications. 

Also developed this quarter was a taxonomy of characteristics for formal methods that are 
applicable to specification of concurrent systems. Project members visited developers 
and users of some popular concurrent and sequential formal methods to discover the ex¬ 
tent of their usage, the state of tool development, and the advances being considered. Pro¬ 
ject members also discussed the taxonomy and were advised on changes and extensions to 
it. 




To develop a fundamental understanding of structures for the soft ware architecture level 
of design, this project is describing basic design elements used in the description, analy¬ 
sis, and development of software systems. 

The project is preparing a report describing the results of a surv ey of several software 
system architectures. The immediate beneficiaries of these results will be research and 
development groups working on architectures in specific application domains. 

The project leader gave a seminar on software architectures at the University of Mary¬ 
land. She also made a presentation at the Fifth International Workshop on Software 
Specification and Design, an invited workshop held after the 11th International Confer¬ 
ence on Software Engineering (ICSE). 

The project leader, with research staff from the Robotics Institute at Carnegie Mellon, 
began a collaborative study on the content knowledge a software engineer should have 
and how that knowledge should be communicated. 

A videotaped lecture by the project leader on the history of engineering is available 
through the SEI {Education Program, and a short (20-minute) version is being used in 
conjunction with an SEI continuing education course. (See page 18 for more details.) 
The project leader gave a seminar on the subject at Queens University. She also made a 
presentation at ICSE on the past 20 years of software engineering; the related paper ap¬ 
pears in the conference proceedings and in Annals of History of Computing. 


m 


Specification and 
Design Methods 
and Tools 


Software Architecture 
Design Principles 


9 








Software Process 
Modeling 



The Software Process Modeling Project is investigating techniques for modeling the soft¬ 
ware development and maintenance process. 


In April 1989. a walk-through vvith the Pacific Missile Test Center was held to verify the 
project's model of the F-14 software maintenance process. Work began on refining the 
model according to the results of this walk-through, and project members are preparing to 
add simulation to the model. 


Project members discussed the technical approach, progress, and long-term direction of 
the F-16 modeling efft rt with representatives from the Air Logistics Center at Ogden Air 
Force Base. 

At the 11th International Conference on Software Engineering (ICSE) in May 1989, pro¬ 
ject staff presented a paper on entity process models and participated in a panel discussion 
on modeling the software process. 

A position paper. “Software Maintenance: A Fresh Perspective." and a panel summary 
report. “Non-Traditional Perspectives on Software Maintenance." were completed for 
publication in the Proceedings of the 198V Conference on Software Maintenance, sched¬ 
uled for October 1989. 


10 















Real-Time Embedded 
Systems Testbed 


Software Systems 

The goal of [he Systems Program is lo improve the development of real-lime distributed 
systems by integrating software engineering with system* engineering and reducin' 1 the 
risk of new technology. 


Th Real-Time Embedded Systems Testbed (REST) Project is coPecting. classifying 
generating, and disseminating information about software development for real-time em¬ 
bedded systems. 

The project began experimenting with the Inertial Navigation System (INS), an Ada arti¬ 
fact developed by the project. The initial exneriment. started in June, is to perform a 
schedulability analysis of the INS. As part of this experiment, a schedmability model of 
the INS will be generated. A second experiment, which is being prepare-^, is to perform 
a detailed comparative analysis of two implementation paradigms (the Task Dispatcher 
and Delay-Until models) that can be used to implement periodic Ada tasks. Other ex¬ 
periments are planned. 


Project members continued developing ana experimenting with Hailstone, a benchmark 
series directed specifically at real-time embeaded computer systems. Project members 
developed several prototype versions of Hartstone benchmarks, and are reconciling the 
variujs versions. Versions wem sent to five compilei vendors and five applications de¬ 
velopers for review and feedback. One vendor discovered that the benchmark is a good 
stress test of its Ada runtime system; the benchmark has uncovered a significant bug in 
the runtime system. A formal release (Version 1.0) of the initial Hartstone test series is 
being prepared. 

The Real-Time Computing Network (RTCN) was installed and is undergoing initial test¬ 
ing. The RTCN, a fiber-optic network that IBM supplied to the SEE provides the testbed 
with a distributed target system for experimentation ana analysis. 


The project is providing support io the Naval Surface Warfare Center (NSWC) on the 
Shipboard Gridlock System with Auto-Correlation (SGS/AC) program. The project is 
developing performance benchmarks to assess the performance of the Ada version of 
SGS/AC and is evaluating design methodologies associated with polled and interrupt 
driven systems. The task includes an assessment of procedures that allow quantitative 
comparison of alternative designs. Work is expected to be completed later in 1989. 


A preliminary evaluation of the DDC-I Ada cioss-compiler for the Intel 80386 processor 
was undertaken for the F-16 VHSIC Core Avionics Processor (VCAP) Project. The SE1 
was contracted by Hill Air Force Base in Ogden, Utah, to help with this project. The 
REST project effort involved compiling VCAP software under the DDC-I compiler so 
that the generated code could be analyzed by the VCAP contractor. General Dynamics in 
Fort Worth, Texas. 


12 








The Real-Time Scheduling in Ada Project is demonstrating how to design and implement 
real-time systems using analytic scheduling algorithms. 


Real-Time Scheduling 
in Ada 


A plan outlining experiments for evaluating the perfonmance of the project's runtime im¬ 
plementation was completed, and experimentation began. Project members will conduct 
performance tests of various implementations of the scheduling algorithms for the VADS/ 
Unix runtime system. These tests will provide empirical results that will be used to evalu¬ 
ate the scheduling theory. Moreover, the results will be used in the avionics case study. 

The implementation of the avionics case study is complete. A draft report describing the 
avionics case is being prepared by IBM and will be reviewed in the next quarter. The test 
case was developed in association with the Naval Weapons Center at China Lake, Califor¬ 
nia, and IBM in Owego, New York. This test case will be used to demonstrate that the 
timing and performance requirements of a uniprocessor avionics system can be met in 
Ada. Other case studies are planned by the project. 

Three technical reports by project members were published during this quarter: 

• Scheduling Sporadic and Aperiodic Events in a Hard Real-Time System (CMU/ 
SEI-89-TR-11) presents a new algorithm, the sporadic server algorithm, that great!) 
improves response times for soft-deadline aperiodic tasks and can guarantee hard 
deadlines for both periodic and aperiodic tasks. The opeiation of the sporadic server 
algorithm, its performance, and schedulability analysis are discussed and compared 
with previously published aperiodic service algorithms. 

• Implementing Priority Inheritance Algorithms in an Ada Runtime System (CMU/ 
SEI-89-TR-15) documents the specification of the scheduling algorithms. Aimed at 
compiler vendors, this report describes how to implement a real-time scheduling 
algorithm (the priority ceiling protocol) in an Ada runtime system. 

• When a database system is used in a real-time application, the concurrency control 
protocol must satisfy not only the consistency of shared data but also the liming con¬ 
straints of the application. A Real-Time Locking Protocol (CMU/SEI-89-TR-18) 
examines a priority-driven, two-phase lock protocol called the read- or write-priority 
ceiling protocol, which is free of deadlock. In addition, a high-priority transaction 
can be blocked by lower priority transactions for at most the duration of a single 
embedded transaction. 

The Sixth IEEE Workshop on Real-Time Operating Systems and Software was held at the 
SEI on May 11-12, 1989. Eighty-two people attended, and 16 papers were presented. 
These presentations described promising approaches and work in progress related to real¬ 
time software and operating systems, and examined programming language support for 
real-time systems (Ada and other languages). The workshop was sponsored by the SEI. 
the Office of Naval Research, and the IEEE Computer Society Technical Committee on 
Real-Time Systems. The project leader served as program co-chair (together w'ith an af¬ 
filiate from IBM who is working with this project). 

The project provided a one-day tutorial at the Affiliates Symposium in May 1989. The 
tutorial explained the practical application of analytical real-time scheduling methods. It 
was aimed at teal-time system designers familiar with hard real-time system requirements 
and designs. Of approximately 120 participants, more than half requested to be kept in¬ 
formed of the project’s status. 

The project is providing support tc the IEEE FutureBus-t- effort by having a representative 
on two IEEE working groups: the Real-Time Working Group and the Operating System 
Working Group. The real-time scheduling algorithm technology is being incorporated 
into the next generation IEEE FutureBus-t- standard, a backplane bus being developed as 
part of the Next Generation Computer Resource initiative of the Navy. 


13 





Distributed Ada 
Real-Time Kernel 


The Distributed Ada Real-Time Kernel (DARK) Project has developed a prototype kernel 
that supports distributed targets. It is currently implemented on the 68020 target, and 
there is a development version available on VMS. All versions are freely available. 

DARK V2.00 was shipped to 11 acceptor sites in June 1989: the 2 that received DARK 
VI.00 in February 1989, and 9 new acceptor sites. (See page 22 for the names of DARK 
acceptor sites and more information on DARK transition activities.) 

A DARK Formal Demonstration and Workshop was held at the SEI on May 5, 1989. The 
workshop was held for those organizations that are interested in the implementation and 
commercialization details of the Kernel. The workshop included detailed technical pres¬ 
entations by the DARK project team and the execution of test cases using the Kernel on 
the SEI testbed. There were more than 40 participants. 

Work continues on adapting the Inertial Navigation System (INS) developed by the SEI 
Real-Time Embedded Systems Testbed Project. Because the Kernel has its own schedul¬ 
ing mechanisms, the dispatcher task of the INS was removed. The INS is running on all 
four nodes and is being debugged. The Kernel is currently undergoing final system and 
performance testing. 


User Interface 


The User Interface Project is developing Serpent, a user interface management system. 
Serpent separates the concerns of the user interface from those of the application, which 
allows integration of input/output technologies without modifying the functional portion 
of the application. 

Three more companies signed on as Serpent acceptor sites: CADLAB in West Germany; 
CASET Corporation in San Juan Capistrano. California; and Unisys Paoli Research Cen¬ 
ter in Paoli. Pennsylvania. Serpent now has five acceptor sites. 

Softcopy Mapping System (SMS), a digital mapping system from Lockheed, was inte¬ 
grated into Serpent to demonstrate that different input/output technologies (in this case, 
SMS and the X Window System) can coexist within Serpent. 

The ability to directly manipulate the size and position of X Toolkit widgets was incorpo¬ 
rated into Serpent this quarter. Direct manipulation allows the user interface designer to 
position the size objects directly through interaction with the objects instead of specifying 
the information textually in terms of screen pixels. 

Project members removed Serpent's dependency on OPS83. a production system used for 
programming expert systems. The project expects that users w'ill adopt Serpent more 
readily now that they do not need OPS83. 

Project members demonstrated Serpent at three major events in May 1989; ICSE, the SEI 
Affiliates Symposium, and CHI ’89. The demonstrations were extremely well received. 
The project has also received inquiries from people who heard about Serpent from at¬ 
tendees. All people who expressed interest received copies of the Serpent newsletter and 
registration information for a Serpent workshop in July 1989. More than 200 people were 
added to the Serpent mailing list, and several are interested in receiving Serpent software. 
George Washington University. Ohio State University, and Virginia Polytechnic Institute 
and State University plan to use Serpent in user interface courses in the 1989-90 school 
year. 

The project has been helping the SEI Domain-Specific Software Architectures Project to 
use Serpent to develop user interface prototypes for Granite Sentry. This is the first use 
of Serpent with an Ada application. 


14 
















The Software for Heterogeneous Machines Project is developing tools and a methodology 
to support applications running on networks of different processors executing concurrent, 
communicating tasks. The heterogeneous machines targeted by this project have general- 
purpose processors, special-purpose processors, memory boxes, and switches that can be 
configured in arbitrary logical networks. 

A comprehensive demonstration of the Durra language and its runtime environment was 
developed and presented at the SEI Affiliates Symposium. The demonstration consisted 
ot a sequence of examples using several cooperating, concurrent tasks that are configured 
in and out of the application. The hardware configuration consisted of three workstations 
connected on an Ethernet local area network. 

The implementation of the Durra debugging/monitor task was completed. This task al¬ 
lows the application developer and user to interactively control the execution of the appli¬ 
cation and to monitor the application during execution. 

Project members began to develop a demonstration of Durra using the Inertial Navigation 
System (INS), a real-time application developed by the SEI Real-Time Embedded Sys¬ 
tems Testbed Project. The INS was selected because it has more performance require¬ 
ments than previous Durra applications or demonstrations. 

The project continued to plan the Third Workshop on Large-Grained Parallelism sched¬ 
uled for October 10-11, 1989, at the SEI. Registration material was mailed to people re¬ 
sponding to the initial invitation. Invitations were sent to people doing research or devel¬ 
opment on languages, tools, and techniques for implementing distributed applications 
consisting of large-grained, loosely-coupled tasks. The theme of the workshop w ill be 
techniques for describing the structure, behavior, and fault-tolerance characteristics of 
distributed applications. 


Scheduling Sporadic and Aperiodic Events in a Hard Real-Time System 
(CMU/SEI-89-TR-11) 

Implementing Priority Inheritance Algorithms in an Ada Runtime System 
(CMU/SEI-89-TR-15) 

A Real-Time Locking Protocol 
(CMU/SEI-89-TR-18) 

Hartslone: Synthetic Benchmark Requirements for Hard Real-Time Applications 
(CMU/SFI-89-TR-23) 


For information on how to order reports, see page 28. 


Software for 

Heterogeneous 

Machines 


00000000000000 

Systems Program 
Reports 

April-June 1989 


15 





Education 

The primary objective of the SEI Education Program is to increase the number of highly 
qualified software engineers by rapidly improving software engineering education 
throughout the education communities of academia, government, and industry. To ac¬ 
complish this objective, the program's projects focus on accelerating the development of 
software engineering programs in academia and on enhancing opportunities for the con¬ 
tinuing education of practitioners. 

This quarter, the program signed agreements with two new academic affiliates: Portland 
State University and the University of Florida. The Academic Affiliates Program pro¬ 
vides a means whereby educational institutions can join the SEI in cooperative efforts of 
mutual interest. These efforts may include work in education, training, research, develop¬ 
ment, or technology transition. 

An article by the director of the Education Program. “The SEI Education Program: The 
Challenge of Teaching Future Software Engineers," was published in the May 1989 issue 
of Communications of the ACM. The article discusses the purpose and goals of the Educa¬ 
tion Program and the various projects within the program. 

A member of the Education Program, with a former SEI resident affiliate from the Danish 
Datamatics Centre in Denmark, conducted a tutorial (Formal Methods in Software Engi¬ 
neering) at the 11th International Conference on Software Engineering on May 15, 1989. 








9 


The Graduate Curriculum Project and Undergraduate Curriculum Project have been com¬ 
bined to form the Software Engineering Curriculum Project. By combining the two pro¬ 
jects, the Education Program will be able to coordinate graduate and undergraduate cur¬ 
riculum development activities more closely and to use its resources more efficiently. 

Tne newly oiganized project has two purposes: to promote the development of software 
engineering as an academic discipline, and to promote the establishment of software engi¬ 
neering degree programs throughout the academic community. Prcjc"* act;. iiies wiii in¬ 
clude producing model curricula at undergraduate and graduate levels and providing sup¬ 
port materials for a broader range of curriculum topics. 

A software engineering ethics workshop was held at the SEt on June 15-16, 1989. Its 
purpose was to identify important issues and approaches to software engineering ethics. 
Participants considered how ethics can best be presented to software engineering educa¬ 
tors, both to engage their interest and to facilitate teaching ethics topics in their classes. 
They identified tools and materials educators will need and recommended that the SEI 
collect case studies for use in the classroom. The workshop was attended by six CMU 
and SEI participants and six participants from other universities. 

Registration is under way for SEI Education and Training Week, which will take place in 
Pittsburgh on July 18-21, 1989. The week’s activities will bring together educators from 
academia, government, and industry to exchange ideas on all aspects of software engi¬ 
neering education and training. Events will include the Third SEI Conference on Soft¬ 
ware Engineering Education, the Faculty Development Workshop, and the Workshop on 
an Undergraduate Software Engineerir. - Curriculum. 

The SEI Series on Software Engineering, a joint effort of the SEI and Addison-Wesley 
Publishing Company, has been established to promote technology dissemination through 
a series of textbooks and monographs on software engineering. The audience includes 
both students and practitioners of software engineering. The first book in the series. Man¬ 
aging the Sofware Process, by the director of the SEI Process Program, was published in 
May 1989. 

The Editorial Board for the SEI/Addison-Wesley book series held a meeting on May 14, 
1989, in Pittsburgh. The purpose of the meeting was to discuss the direction in which the 
software engineering field is moving and to set corresponding directions for the book se¬ 
ries. 

The 1989 SEI Report on Graduate Software Eng ’leering Education (CMU/ 
SEI-89-TR-21) was published. This report includes an update of the project's Master of 
Software Engineering curriculum recommendations and other information on graduate 
level software engineering education. 


Software Engineering 
Curriculum 


17 










Video Dissemination 




The Video Dissemination Project provides courses on modern software engineering meth¬ 
ods to software development practitioners. The project has three series of videotaped 
courses: the Academic Series, which offers graduate courses for academic credit; the 
Continuing Education Series, which offers noncredit courses to practitioners in govern¬ 
ment and industry: and the Technology Series, which provides stand-alone presentations 
that promote awareness of emerging issues and leading-edge technologies. 


Presentation of the Academic Series course. Software Verification and Validation, was 
completed this quarter. The course covered both the theory and practice of ensuring high- 
quality softw are products, it included topics such as quality assessment, proof of correct¬ 
ness, testing, and the limitations of verification and validation methods. The course, 
which was held in the SEI video studio, was also presented via videotape at the Univer¬ 
sity of New Mexico, East Tennessee State University, and California State University at 
Dominguez Hills. Thirty-five students received graduate credit for this course. 


A second Academic Series course. Software Project Management, was presented via 
videotape at California State University at Dominguez Hills and Jacksonville State Uni¬ 
versity. Students attending these courses received academic credit. 


The first Continuing Education Series course. Software Project Management, was com¬ 
pleted this quarter. The course presents a balance of technical content and management 
topics addressed in traditional software project management courses: planning, estimat¬ 
ing, measuring, tracking, evaluating, and directing. It is based on the belief that managers 
must understand the impact of software engineering disciplines, methods, and technolo¬ 
gies on the products and processes they manage. The course, which consists of three 
mini-courses of 2.5 days each, was attended by 23 students representing 12 government 
and industry organizations. Students who successfully completed course requirements 
received continuing education units. 


The second offering of the Software Project Management course began at the SEI this 
quarter, with 25 students enrolled. Twelve of these students are enrolled as future tutors 
of the course. They will attend a one-week orientation session in July 1989 at the SEI, 
where they will receive help in tailoring the course to meet the educational requirements 
of their particular organization. 


Software and Some Lessons Learned from Engineering, the first Technology Series vide¬ 
otape, was released. The lecture, by the leader of the Software Architecture Design Prin¬ 
ciples Project, discusses the path that software engineering must take to become a legiti¬ 
mate engineering profession. The videotape was distributed, without charge, to partici¬ 
pants in the Academic Series and to tutors in the Continuing Education Series. Addition¬ 
ally, copies of the videotape were purchased by Mellon Bank, Telos Federal Systems, and 
Texas Instruments. 


18 





The Advanced Leamin t Technologies (ALT) Project is using hardware and software 
technologies to teach soi.ware code inspections. Interactive, technology-intensive train¬ 
ing can be distributed economically to a broad audience and can provide an effective 
learning experience. 

The project, which is a beta site for Intel's Digital Video Interactive technology, began 
conversion to Intel's new system software. The first audio and video tape was sent to 
Intel for compression onto a CD-ROM. In addition, project members began to enter and 
format articles that will oe available online in the system resource library, which is a col¬ 
lection of supplementary' readings on code inspections. 

Apple's Advanced Technologies Division invited project members to present a talk to 
their artificial intelligence research group. The presentation, “Groundwork for a Knowl¬ 
edge Navigator Agent: Intelligent Digital Video to Create Simulated Persona,” was well 
received. As a result, a group at Apple is proposing an intelligent digital video tutor for 
network systems analysis based on the ideas developed for the ALT Project. 

With the assistance of the University of Nebraska, the project will conduct the Workshop 
on Design and Development of Intelligent Tutoring Systems and Interactive Digital Video 
on July 20-21, 1989, in Pittsburgh. This workshop provides an opportunity for faculty 
members and trainers to become aware of advanced learning technologies and strategies 
for effectively incorporating current theories of cognitive psychology into design of edu¬ 
cational media. 

Project members gave a demonstration of the ALT system at the 11th International Con¬ 
ference on Software Engineering held in Pittsburgh. Feedback on the project demonstra¬ 
tion was positive, and there was interest by some attendees in acquiring the product. 


The Software Engineering Video Network (SEVN) Function provides the facility, equip¬ 
ment, and technical expertise to support the audio/video production requirements of the 
SEI. The SEVN studio is primarily used to tape courses for the Video Dissemination 
Project, as well as for the videotaping and editing activities of the Advanced Learning 
Technologies (ALT) Project. The SEVN facilities are also used by other SEI programs 
and by Carnegie Mellon. 

The SEVN facility was used to videotape one Academic Series course for the Video Dis¬ 
semination Project and five mini-courses for the project's Continuing Education Series. 

The SEVN, in collaboration with the ALT Project, produced a videotape of the ALT sys¬ 
tem, which project members now use when they demonstrate the system. 

During this quarter, the SEVN facility was rented by other departments of Carnegie Mel¬ 
lon for a total of 100 hours. 


1989 SEI Report on Graduate Software Engineering Education 
(CMU/3EI-89-TR-21) 


For information on how to order reports, see page 28. 


Advanced Learning 
Technologies 


Software Engineering 
Video Network 


00000000000000 

Education Program 
Reports 

Aprit-June 1989 


19 









Oomain-Specific 
Software Architectures 


Ada & STARS Support 


As Ada :j;es and its use becomes more common within the mission-critical computer 
resource (MCCR) community, users will be faced with the benefits and problems of 
adopting more disciplined approaches to software engineering. The goals of the Ada 
and STARS Support effort are to remove technical and managerial impediments to the 
adoption of Ada, to support the DoD STARS (Software Technology for Adaptable, Reli¬ 
able Systems) Program in technology development and transition efforts, and to explore 
the advantages and disadvantages of new software engineering approaches and para¬ 
digms made possible by Ada language features. 


The Domain-Specific Software Architectures Project provides technical guidance to DoD 
program offices in applying innovative, model-based software engineering solutions to 
the problems that characterize an application domain. The project is working with the 
Granite Sentry Program Office on part of the replacement for the NORAD system in 
Cheyenne Mountain, the AW1S Program Office in the development of the World-Wide 
Military Command and Control Information System, and the Advanced Millimeter-Wave 
Seeker Program Office in the redesign of the Maverick air-to-ground missile seeker from 
infrared sensing to millimeter-wave radar. In each effort, the project takes an active role 
in the design and development of the system. 

This quarter, project members completed 80% of the documentation for the Message 
Translation and Validation (MTV) model. The MTV model provides the capability to 
convert between different message representations and checks all representations for va¬ 
lidity. The documentation describes different views of the MTV model based upon the 
intended audience. The views can be summarized as: an architectural component for ref¬ 
erence at the design level; detailed application notes for users of the model solution; and 
detailed implementation notes for showing how the model solution works. The MTV 
documentation will be used as a model to develop a prototype handbook for the C3I do¬ 
main. 

In conjunction with Hercules Defense Systems, work progressed on the design and imple¬ 
mentation of the signal processor software for the Maverick missile seeker. The critical 
design review showed that the project’s object-oriented design methodology results in a 
design that is easy to understand, document, and review. The changes to the requirements 
specification helped to improve the design by allowing more design flexibility and as¬ 
sisted in generating more clearly defined requirements that were easier to trace through¬ 
out the software life cycle. Lessons also were learned about the effect of the strong typ¬ 
ing of Ada to the design. 

Also during this quarter, the project worked with key AWIS design team members to help 
them understand the benefits of a modeling approach for solving some of the recurring 
problems associated with software development. Project members reviewed the func¬ 
tional description documents for several AWIS sites and began developing model solu¬ 
tions to such recurring problems as the man-machine interface, the report generator, and 
the Ada/SQL application-to-database interface. 


20 









The Binding of Ada and SQL Project, initiated at the request of the Ada Joint Program 
Office (AJPO), has investigated the problem of binding the Ada programming language 
with the Structured Query Language (SQL) database language The solution to this prob¬ 
lem was the specification of the SQL Ada Module Extensions (SAME), an interface that 
permits an application program written in Ada to access and manipulate data controlled 
by a database management system (DBMS) using SQL. 

This quarter, project members began distributing the source code of the SAME standard 
packages. These packages consist of more than 1500 lines of Ada code that support the 
SAME methodology. 

A report that describes the SAME method was released. Guidelines for the Use of the 
SAME (CMU/SEI-89-TR-16) contains a complete description of the SAME, including the 
motivation for its development. This report is intended for application developers and 
technicians creating Ada applications for SQL database management systems. Sections 
are included that describe decimal arithmetic and dynamic SQL. An order form for the 
SAME standard packages is also included in the report. 

Also completed this quarter was the conversion of the SAME standard packages to DB2. 
The packages can now run on IBM systems under the MVS-TSO operating system with 
an Intermetrics Ada Compiler and the DB2 database. 

At the meeting of the March 1989 SAME Design Committee, the project began develop¬ 
ing the Abstract Module Description Language (AMDL). a language that is used to auto¬ 
matically construct the Abstract Module. The Abstract Module provides the interface 
between the SQL statements and the Ada application. Currently, this interface is manu¬ 
ally implemented. A prototype processor for the language is also being developed by the 
project. Project members met with the Internationa! Standards Organization (ISO) Work¬ 
ing Group 9 to discuss the possibility of making the AMDL a standard. 


The Ada Joint Program Office (AJPO) has decided that a revision to the the Ada language 
standard is required to maintain it as a standard (ANSI/M1L-STD-1815A). The purpose 
of this project is to identify and evaluate potential areas for revising die Ada standard 
based on the experiences of software developers and compiler implementors. This project 
is providing an organizational framework to help guide revision activities. 

The Third International Workshop on Real-Time Ada Issues, sponsored by the SEI and 
the Office of Naval Research in cooperation with Ada UK and ACM SIGAda, was held 
on June 26-29, 1989, at Nemacolin Woodlands in Farmington, Pennsylvania. The pur¬ 
pose of the workshop was to explore potential Ada language revisions that will make the 
revised version of Ada more suitable for real-time and distributed applications. Attended 
by 33 people, the workshop provided an opportunity for users to discuss the features of 
Ada that should be revised, those that should be added, and the features that should not be 
changed. A proceedings will be published by SIGAda later in 1989. 

Suggestions for technical tasks needed to revise the Ada standard were delivered to the 
Ada 9X project manager at Eglin Air Force Base, Florida. In addition, work also contin¬ 
ued in these areas: extended character set, shared variables, reuse language issues, and 
mathematics libraries. 


Guidelines for the Use of the SAME 
(CMU/SEI-89-TR-16) 

For information on how to order reports, see page 28. 


Binding of Ada 
and SQL 


Study and Analysis 
for Ada 9X 


00000000000000 

Ada & STARS Support 
Reports 

April-June 1989 


21 







Technology Transition 

The Technology Transition Program is the focal point for SE1 transition efforts. The 
program works with other SEI programs to match problems and solutions in the DoD 
software community. 


Technology 

Application 


The Technology Application Function provides a link between DoD mission-critical ap¬ 
plication domains and ongoing SEI technology evaluation and development efforts. The 
goal is to identify technologies useful in a particular application domain and to assist in 
their maturation by working with specific clients to provide product transition and direct 
support. 


The Distributed Ada Real-Time Kernel (DARK) is maturing rapidly, and the number of 
acceptor sites has increased from 2 to 11. The firms currently evaluating the DARK pro¬ 
totype include: Wichita State University/Boeing Military Airplane; Lockheed (3 separate 
programs); General Dynamics; Hughes Aircraft; Ferranti International; Schultz Engineer¬ 
ing; The Analytic Sciences Corporation; Westinghouse Electronic Systems Group; and 
the Naval Weapons Center at China Lake. The project hosted a one-day workshop at the 
SEI in May 1989 targeted at organizations interested in commercializing DARK. The 
DARK Project continues to seek firms interested in the commercial aspects of this tech¬ 
nology. 


The Air Force Contract Management Division (AFCMD) Annual Joint Executive Confer¬ 
ence (JEC) was held on May 16-18, 1989, in Albuquerque, New Mexico. Chief operating 
officers from 27 aerospace firms attended. The SEI briefed the attendees on the Execu¬ 
tive Software Issues Workshop and related activities sponsored by the SEE 

The SEI has organized three groups to work on issues related to the ongoing Air Force 
Systems Command (AFSC) Software Action Team. The team is coordinating the actions 
and responses of the AFSC to a recent Air Force-wide broad area review on software. 
These efforts, involving several initiatives within the Air Force, were briefed to industry 
representatives at MITRE ort June 23, 1989. Each of the three SEI groups, addressing 
topics in software acquisition and development processes as well as manpower, person¬ 
nel, and training issues, is being coordinated by a member of Technology Application. 


Work began with the Air Force Wright Research Development Center (WRDC) on the 
Pave Pace Program. Pave Pace is an effort to define the next generation of avionic sys¬ 
tems as a follow-on to the Pave Pillar Program. The SEI is supporting WRDC by evaluat 
ing the state of avionics software and system development technology, investigating ex¬ 
isting R&D activities that would improve avionics development, and assisting WRDC in 
putting together an avionics technology development plan for critical technologies to be 
developed over the next five to ten years. During this quarter, the effort was established 
and organized, and the first quarterly review was held with WRDC on June 27, 1989. 


22 






9 


The Affiliate Relations Function establishes and maintains SE1 relationships with indus¬ 
try' organizations. Affiliate Relations also negotiates and places, wilh the cooperation of 
the SEI Joint Program Office, government and industry resident affiliates at the SEE The 
SE1 Education Program manages academic affiliates and visiting scientists from acade¬ 
mia. 

The fourth SE1 Affiliates Symposium was held on May 2-4, 1989, at the SEI and two 
nearby locations in the Oakland section of Pittsburgh. The annual symposium is a key 
forum forexchanging information among software communities from industry, govern¬ 
ment, and academia. The symposium highlighted the state of software engineering prac¬ 
tice and technology as well as specific SEI projects. Lloyd K. Mosemann, Deputy Assis¬ 
tant Secretary of the Air Force for Logistics, delivered the keynote address, entitled "Soft¬ 
ware Engineering and Beyond: The People Problem.” The symposium was attended by 
358 people from affiliate organizations: 248 from industry. 78 from government, and 32 
from academia. One day of tutorials and workshops was followed by two days of brief¬ 
ings and conference sessions. 

Nine new industry affiliates signed information exchange agreements during this quarter: 
Flughes Aircraft Company. Radar Systems Group-Advanced Programs Division; Insight 
Industries; Medtronic; Mikros Systems Corporation; P-Cube Corporation; Rockwell. Col¬ 
lins Defense Communications; SAIC, Military Sciences Group; SOPHSYS; and the Soft¬ 
ware Productivity Consortium. 

Three new resident affiliates joined the SEI this quarter. A senior member of the techni¬ 
cal staff from GTE began working with the Real-Time Embedded Systems Testbed Pro¬ 
ject. A senior software engineer from GE Aerospace and a captain from Gunter Air Force 
Station both began working on software reuse. A resident affiliate from IBM. who was 
working on the Real-Time Scheduling in Ada Project, concluded his term of residency. 

As of June 30, 1989, 16 resident affiliates are working at the SEI: 7 from industry and 9 
from the Services and government agencies. 

GTE’s Quality Managers Group visited the SEI in June 1989. The agenda predominantly 
addressed software process improvement, quality, and technology transfer issues. 


The Transition Training Function provides training development services to support tran¬ 
sition activities of SEI technical projects. In addition, the function provides training on 
managing the organizational changes associated with technology transition, and consult¬ 
ing services to customers on software engineering training issues. 

The process self-assessment course underwent revision and a further pilot test at the SEI 
in May 1989. Developed in conjunction with the Software Process Assessment Project, 
the course is in final revision and is scheduled for delivery in the fourth quarter of 1989. 


A one-day tutorial on planning for technology transition was developed and presented 
twice at the SEI Affiliates Symposium and a third time at the quarterly executive meeting 
at the Government Information Systems Division of Planning Research Corporation in 
McLean. Virginia. The tutorial is a distillation of the three-day course on managing tech¬ 
nological change offered by Transition Training. In April 1989, the three-day course was 
taught at Contel Federal Systems to a class representing a cross-section of that organiza¬ 
tion. 


Transition Training staff helped subject-matter experts at SPAWAR to develop six of ten 
units for a course on software acquisition. The course will be pilot-tested at SPAWAR in 
September 1989. 


Affiliate Relations 


Transition Training 


23 







Information 

Management 


The Information Management Function develops, edits, publishes, and maintains informa¬ 
tion relevant to the mission and accomplishments of the SE1. 

Several publications weie issued during the quarter. The June 1989 issue of Bridge, the 
SEI magazine, covers the SEI Affiliates Symposium. The first issue of Serpent A'ot .s, a 
newsletter about the User Interface Project, discusses the alpha release of the Serpent soft¬ 
ware and documentation. A brochure for Education & Training Week describes the week 
of activities (July 18-21, 1989) that the SEI Education Program is sponsoring. 


The SEI library' added 130 book titles and 6 periodicals to its collection and 250 docu¬ 
ments to its database during this quarter. The collection now comprises 2430 book titles 
and 226 periodicals. The database contains information about 3050 documents germane to 
software engineering. The library collection is available through the OCLC interlibrary 
loan network, which provides access to 3400 participating libraries in the U.S. The SEI 
library also distributes SEI technical reports to 27 libraries. 10 of which send their organi¬ 
zation’s reports to the SEI library'. 

The SEI librarian gave an invited presentation on “The Library of the Future” to the IEEE 
Board of Governors while they were visiting Pittsburgh during the 11th International Con¬ 
ference on Software Engineering. 


Three members of Information Management gave two presentations at the International 
Technical Communications Conference in Chicago. One presentation. “Design in the 
High-Tech Environment,” discussed how the SEI uses computers and other publishing 
equipment to solve design problems. This presentation will be used in the Summer Design 
Program at Carnegie Mellon in July 1989. The other presentation. “Strategies for Persua¬ 
sive Editing." ptovided strategies, such as using "lessons learned," that help editors and 
technical authors work together effectively. This talk will be presented to technical w rit¬ 
ing students at Carnegie Mellon in the fall. 


Empirical Methods 


The Empirical Methods Function supports transition management of SEI technology pro¬ 
jects by providing market research methods and materials, conducting surveys, and evalu¬ 
ating or validating products and events of SEI projects. 

Protocol analysis and usability studies are being conducted on the Process Program’s re¬ 
finement of the process assessment questionnaire. These analyses will be completed in 
July 1989. and pilot testing will occur in the fall of 1989. 


The SEI received a request from the Air Force Systems Command to collaborate with 

ESD and MITRE to conduct a two-phased study of U.S. software capacity. The near- w 

term effort, which began in June 1989, is to assess the nation’s capability to produce soft¬ 
ware for the DoD. This study will be completed in October 1989. A project to develop a 
model and methodology to use on a continuing basis to assess the capacity of the nation’s 
software industry will begin in October 1989 and may continue for three to five years. 

Both efforts will involve study of the supply and demand of software personnel in gov¬ 
ernment and industry for both commercial and military sectors. Empirical Methods is ® 

coordinating the study, which is staffed with a team of faculty from Carnegie Mellon, 

Purdue, and the University of Arizona. 


24 










00000000000000 


Adoption of Software Engineering Innovations in Organizations 
(CMU/SEI 89-TR-17) 


For information on how to order reports, see page 2X. 


Technology Transition 
Program Reports 

April-June 1989 




25 







Computing Facilities 

Computing facilities is responsible (or the SEI computing environment, which provides a 
diverse mix of hardware, software, and other services to support a vai ietv of individual 
and project needs. Additionally, Computing Facilities prov ides computing acquisition 
support (including consultation, negotiation, and coordination) and assessment of new 
technologies in the marketplace. 


A secondary node for receiving electronic mail from remote sites was installed. Previ¬ 
ously, whenever the SEI’s primary' e-mail node was down, tlte flow of e-mail w as inter¬ 
rupted. With this new system in place, remote sites that cannot connect to the primary 
node automatically try the secondary node. As a result, mail service with other sites is 
uninterrupted. 


Computing Facilities is working to prevent unauthorized entry by tightening the gateway 
and by monitoring file transfer and login access. A computer program routinely reviews 
passwords to find those that can be easily guessed or broken. 


The way the SEI implements databases is being coordinated and consolidated. For in¬ 
stance, during a recent conversion of an existing Informix database to INGRES, generic 
system utilities were developed foi implementing INGRES on all SE! w-ckstation/termi¬ 
nal types and for integrating it with NFS (network file system). Computing Facilities also 
began to develop requirements for central data management at the SEI. 


26 








CERT Coordination Center 


The purpose of the Compute: emergency Response Team Coordination Centei (ClrlRT/ 
CC) is to supplement existing mechanisms by which informally organized experts deal 
with and prevent computer emergencies. The CERT/CC at the SF.I supports two differ¬ 
ent communities: Internet users, and developers of technology that is available on the 
network, such as Unix and networking software. The services provided bv the CERT/ 
CC generally fall into these categories: 

• Provide a dependable and trusted 24-hour-a-day point of contact for security is¬ 
sues. 

• Maintain a reliable and highly secure repository of information for team members. 

• Provide rapid communication during emergencies. 

• Maintain close ties with research in the area of trusted systems to improve the se¬ 
curity of existing systems. 

• Raise constituents’ awareness of security issues and assist individual organizations 
in improving the security of their systems. 


Project members made presentations at the following conferences: the Computer Viruses 
’89 Conference sponsored by the Computer Security Institute, the USENIX 1989 Summer 
Technical Conference, and the SUN Microsystems Western Users' Group Conference. 

As a result of these presentations, the CERT/CC enlarged its base of contacts to more 
than 400 people in the client communities and strengthened its working relationships with 
the technical community and organizations involved in computer security. 

The CERT/CC, in cooperation with the National Institute of Standards and Technology, is 
organizing a Computer Security Incident Response Workshop, to be held at the SEI on 
July 31-August 1, 1989. The purpose of the workshop is to identify the problems in¬ 
volved in the operation of computer security incident response centers and to discuss so¬ 
lutions. The workshop will focus on incident handling, vendor relations, clearinghouse 
activities, communications, legal and investigative issues, constituency relations, re¬ 
search, threat modeling, and external issues that affect the operation of response centers. 


I 







For More Information 


How to Order 
SEI Publications 


How to Get the 
SEI Magazine 


How to Become 
an SEI Affiliate 


How to Get 

Additional Information 


To order an SEI publication, send a written request accompanied by a preaddressed mail¬ 
ing label to: 

Software Engineering Institute 
ATTN: Publications Requests 
Carnegie Mellon University 
Pittsburgh, PA 15213-3890 


To be added to the Bridge mailing list, write to: 

Software Engineering Institute 
ATTN: Bridge Mailing List 
Carnegie Mellon University 
Pittsburgh, PA 15213-3890 


For information on opportunities for affiliation, contact: 

Software Engineering Institute 
ATTN: Mark Coticchia 
Carnegie Mellon University 
Pittsburgh, PA 15213-3890 
(412)268-6138 

ARPANET: mec@sei.cmu.edu 


For further information about the SEI, contact: 

Operations Center 
Software Engineering Institute 
Carnegie Mellon University 
Pittsburgh, PA 15213-3890 
(412)268-5800 


28 















