Spacecraft Guidance, Navigation, and Control 
Visualization Tool 

NASA’s Jet Propulsion Laboratory, Pasadena, California 



G-View is a 3D visualization tool for 
supporting spacecraft guidance, naviga- 
tion, and control (GN&C) simulations 
relevant to small-body exploration and 
sampling (see figure). The tool is devel- 
oped in MATLAB using Virtual Reality 
Toolbox and provides users with the abil- 
ity to visualize the behavior of their simu- 
lations, regardless of which program- 
ming language (or machine) is used to 
generate simulation results. The only re- 
quirement is that multi-body simulation 
data is generated and placed in the 
proper format before applying G-View. 

G-View allows the user to visualize the 
behavior of a multi-body system (i.e. a 
spacecraft, the translations and rota- 
tions of the spacecraft body compo- 
nents, thruster firings, and thrust mag- 
nitude) by simultaneously showing plots 
of various relevant states and parame- 
ters. In G-View, the user can easily ma- 
nipulate the location, zoom, translation, 
and direction of the camera, thus pro- 
viding a wide range of options for view- 
ing the behavior of specific spacecraft 
components, such as the solar panels, 
mechanical arms, brush-wheel sampler, 
joints, etc. 

G-View is easily modifiable and can 
be adjusted to specific design or simula- 
tion requirements. For example, one 
mode of usage is to create movie clips 
for a batch-collected set of data. This 
provides a visual aid supporting itera- 
tive design methods and an efficient 
tool for generating presentations. G- 
View can also be applied to a computer 


simulation one frame at a time. This is 
especially beneficial when applied to 
simulation environments that require 
long running times. By extracting visu- 
alization data at specific time instants, 
the user can assess whether the simula- 
tion has the desired behavior or if 
something is wrong and is not worth 
continuing. In this manner, G-View can 
save significant time when simulating 


complex scenarios, and improve trou- 
bleshooting efficiency. 

This work was done by Milan Mandic, Behcet 
Acikmese, and Lars Blackmore of Caltech for 
NASA’s Jet Propulsion Laboratory. Further in- 
formation is contained in a TSP (see page 1 ). 

This software is available for commercial li- 
censing. Please contact Daniel Broderick of 
the California Institute of Technology at 
danielb@caltech.edu. Refer to NPO-47197. 


Mission Operations Planning and Scheduling System (MOPSS) 

Goddard Space Flight Center, Greenbelt, Maryland 


MOPSS is a generic framework that 
can be configured on the fly to support a 
wide range of planning and scheduling 
applications. It is currently used to sup- 
port seven missions at Goddard Space 
Flight Center (GSFC) in roles that in- 
clude science planning, mission plan- 
ning, and real-time control. 

Prior to MOPSS, each spacecraft proj- 
ect built its own planning and schedul- 
ing capability to plan satellite activities 
and communications and to create the 
commands to be uplinked to the space- 


craft. This approach required creating a 
data repository for storing planning and 
scheduling information, building user 
interfaces to display data, generating 
needed scheduling algorithms, and im- 
plementing customized external inter- 
faces. Complex scheduling problems 
that involved reacting to multiple vari- 
able situations were analyzed manually. 
Operators then used the results to add 
commands to the schedule. Each archi- 
tecture was unique to specific satellite 
requirements. 


MOPSS is an expert system that auto- 
mates mission operations and frees the 
flight operations team to concentrate on 
critical activities. It is easily reconfigured 
by the flight operations team as the mis- 
sion evolves. The heart of the system is a 
custom object-oriented data layer 
mapped onto an Oracle relational data- 
base. The combination of these two tech- 
nologies allows a user or system engineer 
to capture any type of scheduling or 
planning data in the system’s generic 
data storage via a GUI. 


NASA Tech Briefs, September 2011 


47 




MOPSS uses CORBA in conjunction 
with a multi-tier architecture to allow 
multiple users to concurrently view and 
edit schedule data. The adaptable archi- 
tecture of MOPSS also enables easy inte- 
gration of tools and models to satisfy new 
system requirements. MOPSS has two 
clients: an X/MOTIF client and a Java 
client. The Java client is effective over the 
Web and has been used by remote MAP 


mission scientists and engineers to mon- 
itor spacecraft integration tests. 

The most obvious use of MOPSS is for 
control of commercial satellites. In the 
television industry, MOPSS could be 
used to schedule TV commercials on 
broadcast television based on FCC rules, 
demographics, and program content. In 
the medical field, MOPSS could be used 
to schedule and optimize use of hospitals 


in a network and resources within hospi- 
tals. In the power industry, MOPSS can 
be used to schedule nuclear power plant 
maintenance. The education and trans- 
portation fields are also candidates. 

This work was done by Terri Wood of God- 
dard Space Right Center and Paul Hempel of 
Computer Sciences Corp. Further information 
is contained in a TSP (see page 1).. GSC- 
15858-1 


Global Precipitation Mission Visualization Tool 

Goddard Space Flight Center, Greenbelt , Maryland 



Location of Validation Network match-up sites and associated site grid domains in the southeastern U.S. 


The Global Precipitation Mission 
(GPM) software provides graphic visuali- 
zation tools that enable easy comparison 
of ground- and space-based radar obser- 
vations. It was initially designed to com- 
pare ground radar reflectivity from oper- 
ational, ground-based, S- and C-band 
meteorological radars with comparable 
measurements from the Tropical Rainfall 
Measuring Mission (TRMM) satellite’s 
precipitation radar instrument. This de- 
sign is also applicable to other ground- 
based and space-based radars, and allows 
both ground- and space-based radar data 
to be compared for validation purposes. 

The tool creates an operational system 
that routinely performs several steps. It in- 
gests satellite radar data (precipitation 
radar data from TRMM) and ground- 
based meteorological radar data from a 
number of sources. Principally, the ground 
radar data comes from national networks 
of weather radars (see figure) . The data in- 
gested by the visualization tool must con- 
form to the data formats used in GPM Val- 
idation Network Geometry-matched data 
product generation. The software also per- 
forms match-ups of the radar volume data 
for the ground- and space-based data, as 


well as statistical and graphical analysis (in- 
cluding two-dimensional graphical dis- 
plays) on the match-up data. 

The visualization tool software is writ- 
ten in IDL, and can be operated either 
in the IDL development environment or 


as a stand-alone executable function. 

This work was done by Mathew Schwaller 
of Goddard Space Flight Center. For further 
information, contact the Goddard Innovative 
Partnerships Office at ( 301 ) 286-5810. GSC- 
15785-1 


Thermal Protection System Imagery Inspection Management 
System — TIIMS 

Lyndon B. Johnson Space Center, Houston, Texas 


TIIMS is used during the inspection 
phases of every mission to provide quick 
visual feedback, detailed inspection 
data, and determination to the mission 
management team. This system consists 
of a visual Web page interface, an SQL 
database, and a graphical image genera- 
tor. These combine to allow a user to as- 


certain quickly the status of the inspec- 
tion process, and current determination 
of any problem zones. 

The TIIMS system allows inspection 
engineers to enter their determinations 
into a database and to link pertinent im- 
ages and video to those database entries. 
The database then assigns criteria to 


each zone and tile, and via query, sends 
the information to a graphical image 
generation program. Using the official 
TIPS database tile positions and sizes, the 
graphical image generation program 
creates images of the current status of 
the orbiter, coloring zones, and tiles 
based on a predefined key code. These 


48 


NASA Tech Briefs, September 2011 



