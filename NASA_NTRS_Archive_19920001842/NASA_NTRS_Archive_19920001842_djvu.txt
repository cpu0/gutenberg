Resource Representation in COMPASS* 


Barry R. Fox 

McDonnell Douglas Space Systems Co. 
16055 Space Center Blvd. 

Houston, Texas 77062 
(713)488-7410 


*Research support in part by code MD & MT 



Outline 

Introduction 

Statement of the Problem 
Representation of Resource Requirements 
Representation of Resource Availability 
Algorithm for Activity Placement 
Conclusion 



Introduction 

COMPASS is an incremental, interactive, non-chronological 
scheduler written in Ada with an X-Windows user interface. 


I csMiwm v 


1 •g=5 r ’’3gF^' 


BP*I*-*' 


as 


' ' 

COMPASS 




oora. lut 1 ktMk f. 
oot*. Lwt l krMkt 
oor • last J . linch I 
oort Last J Itub I 
oora Lnat_l . dlMMi 
oor* Ult rdlnMr 
oor* la«l_l . train ii 
oora lnat_7 tralnii 
oora Inst. 1 par aon 
oora Inst J parson 
* oora Init.l *la*p.l 
oora. inst_? . sloop! 
oara. lnst_l .braskf. 
oora. likst. J.bcaakf. 
oora . Inst. 1. limcfe 
oora Inst .1 lwcb 
oora lnst_l .Stansr 
oora. Inst. 2 dLanar 
oora lnit. 1 . trsinti 
oora. Inst. 2 . trsinli 
oara. Inst . 1 parson 
osrs. Last.? parson 
oars . Lost 1 . slaap . 
oara. Inst _ 7 slaap 
alactrolysis. Inst 
alsctrolyals. last_ 
alactrolysis. iast_ 
alactrolysis. last 
electrolysis. Inst _ 
alactrolysis . ins t _ 
alactrolysis lnat_ 


j,: 


n 





V-5 



Introduction 


Incremental 

beginning with an empty schedule, activities are added to 
the schedule one at a time, taking into consideration the 
placement of the activities already on the timeline and 
the resources that have been reserved for them. 

Interactive 

the order that activities are added to the timeline and 
their location on the timeline are controlled by 
selection and placement commands invoked by the user. 
Non-Chronological 

the order that activities are added to the timeline and 
their location are independent 

J 

V-6 

243 





Introduction 


3a 


COMPASS is the successor of Wedge (1986), a scheduler of 
similar capability written in Lisp on a Symbolics machine. 

COMPASS contains portable, generic packages that were 
useful and necessary in the conversion of a major Lisp 
program to Ada 
Lookahead I/O 
Stream Oriented I/O 
Symbol Data Types 
Generic List Package 

COMPASS can be useful to anyone planning the conversion 
of software that relies heavily upon lists and symbol data types. 


p 

; (tine. . . 

set 

. , STEP-FORWARD 
‘ GTEPBACKWAPD 

‘ j 

' 'FORWARD. . . 

| STEP 
: JOB 
j LIST 

^backward. . . 

1 STEP 

< i JOB 


[Rtftove . , . 

. ! STEP 
JOB 
ALL 

MODIFY . . . 

move 

DELAY 

EXTEND 

CONDENSE ■ ■ . 
LEFT 
RIGHT 

WEDGE. . . 
STEP-RT 
JOB-AT 
JOB-AFT ER 

BATCH. . . 
LIST 

nOHI TOR... 

• FILE 

[ETC. . . 

•6 MAP SHOT 
•PROFILE 


I 


Not 1 c« j This is PIDC Proprietary toftuir* produced by the T1DRL Al-Croup. 

It It not to be discussed with or demonstrated for non-flDC personnel without prior pernission frori P1DRL 


Wedge 


T t 

+ 1 

j. * 


joe-A 

OPERAUON-l 

OPERATION-2 

OPERATION-3 

OPERATION-* 

OPERATION-5 

OPERATION-6 

joe-B 

OPERATION-1 
OPERA! ION-2 
OPERATION-3 
OPERATION-4 
OPERATION-5 
OPERATION'S 
J08-C 

OPERATION-1 

OPERATION-2 

OPERATION-3 

OPERATION-4 

OPERATION-5 

OPERATION-* 

joe-o 


CATEGORY-1 
IH6TANCE-1 
INSTANCE-2 
CAIEGORY-2 
irtSTAncE-i 
INSTANCE -2 
CATEGORY -3 
IN6T ANCE-1 
CAT EGORY -4 
IflSTAnCE-l 
INSTANCE-2 
INSTANCE-3 


]_] L2fl ; D2 : 22 Process Edit Uindou got an trror 

Select Edit Window Background Streen by typing Funct ion-9-$ . ] 




M t ( I T T I M T I t T I T J fTT 1 1 f I I I I f 1 M I ff I I I t \ II 


H 

H 


-4—1 I — h- 


H HH 

-4 — \ \ — I 


V-8 


244 













Statement of the Problem 

Implementation of interactive and automated scheduling 
systems requires 

an external (textual) representation for resource requirements, 
an internal representation for resource requirements, 

an external (textual) representation for resource availability, 
an internal representation for resource availability, 

an algorithm for placing activities on the timeline so that 
the combined resource requirements at any point in time 
do not exceed the resource availability. 

i 



V-10 


245 


Statement of the Problem 


6 


NASA requires access to advanced scheduling technology. 

Basic scheduling data structures and algorithms should 
be publicly available "textbook" knowledge. 

This enables traditional "time and space" analysis of 
proposed methods. 

This enables objective comparison of methods, unobscured 
by differences in implementation languages and hardware. 

This enables the creation of new scheduling applications 
without the costly process of re-discovery and re-invention. 

v 

V-ll ~ “ “ r 


r ; 

Representation of Resource Requirements 

Resource requirements can be classified by the properties of the 
function that defines the quantity required at each point in time. 

Location of the origin 

Shape and continuity 

Sign 

Extent 



V-l 2 


246 



Representation of Resource Requirements 


8 


COMPASS represents resource requirements by piecewise 
linear functions. 



The origin is relative to the beginning of the activity. 

Positive quantities represent the amount required by an activity. 
Positive segments with finite extent represent assignment. 
Positive segments with infinite extent represent consumpution. 


V- 13 



Representation of Resource Requirements 

COMPASS represents resource requirements by piecewise 
linear functions. 



The origin is relative to the beginning of the activity. 

Negative quantities represent the amount provided by an activity. 

Negative segments with finite extent represent • 

Negative segments with infinite extent represent production. 


V-14 


247 


Representation of Resource Requirements 


9a 


This representation is suitable for a wide variety of resources 
including: 

electrical, thermal, communications, etc. 
water, oxygen, hydrogen, nitrogen, etc. 
crew members 

screwdrivers, hammers, pliers, etc. 

replaceable parts, packaged food, disposable clothing, etc. 

storage capacity 

mass and volume 



Representation of Resource Requirements 

COMPASS provides a dotted notation for resource names 
which enables "wildcard" resource requirements. 

Given four crew members named: crew.so.bob 


crew.so.carol 

crew.ss.ted 

crew.ss.alice 



V-16 



248 




Representation of Resource Requirements 

Piecewise linear functions are represented as an ordered list 
of segment descriptors: 


Quantity-2 . 
Quantity- 1 


i 1 ; 

iiiiiiiiii 


Time-1 Time-2 


( Quantity- 1 Quantity-2 ) / [ Time-1 Time-2 ] 


Representation of Resource Requirements 




( 1 . 0)/[0 1 : 00 ]; 


(1.0)/[0 +inf] ; 


^anmnipE 

v ’ V ■: ’.'I', '.'j .5ii - 3 ,•. » . ■ i, .• > I • j. 


(0.0 1.0)/[0 1:00] (1.0)/[1:00 +inf] 




(1.0)/[0 0:15] (2.0)/[0:30 1:45]; 


V-18 


249 



r 

Representation of Resource Requirements 
Notation for time: 



1 

1/2 

1/2:03 

1/2:03:04 

2:03 

2:03:04 

12/31/1990 

12/31/1990 @ 2 

12/31/1990 (5) 2:03 

12/31/1990 @ 2:03:04 


1 day 

1 day, 2 hours 
1 day, 2 hours, 3 minutes 

1 day, 2 hours, 3 minutes, 4 seconds 

2 hours, 3 minutes 

2 hours, 3 minutes, 4 seconds 
December 31,1 990 
December 31, 1990 at 2:00 
December 31, 1990 at 2:03 
December 31, 1990 at 2:03:04 


(32 bit internal representation: +/- 65 years at resolution of 1 second) 

V-I9 ' — 


Representation of Resource Requirements 

Piecewise linear functions are represented by linked lists of 
<ramp>/<interval> pairs created using the generic list package. 

(0.0 1.0) / [0 0:15] (1.0 0.0) / [0:15 0:30]; 





1 

1 



— 

► 




, 






0.0 

1.0 




1.0 

0.0 








0 

0:15 




0:15 

^0:30 



1 





V-20 


Total memory required is proportional to the amount of detail, 
not to the span of time! 


250 







Representation of Resource Requirements 

Given Ada’s ability to create dynamically sized arrays, 
it is feasible to represent lists as both linked lists and arrays! 

However, this is safe only if the compiler correctly implements 
unchecked deallocation! 


( 0.0 1 . 0) /[0 0 : 15 ] ( 1.0 0 . 0 )/ [ 0:15 0 : 30 ] ; 



14 


Representation of Resource Availability 

COMPASS represents resource availability by piecewise 
linear functions. 


V-22 


25 



Algorithm for Activity Placement 


15 


To schedule an activity 

locate a time where its resource requirement can be satisfied 

schedule the activity to occur at that time 

translate its resource requirement to that time 

subtract its resource requirement from the resource availability 



Subtraction of the resource requirement from the resource 
availability ensures that the resource requirement will be 
satisfied even after other activities are added to the timeline. 


Subsequently, another activity can be scheduled to occur at 
the same time only if its resource requirement can be satisfied 
by the remainder. 

The reversibility of this method for resource reservation 
enables us to "unschedule" an activity by adding its 
resource requirement back into the resource availability! 


V-J4 


252 



r "" _ 17 N ’ 

Algorithm for Activity Placement 

To locate where a resource requirement can be satisfied 

locate where each segment of the requirement can be satisfied 
normalize the results and combine by interval intersection 


V- 25 


Algorithm for Activity Placement 

To locate where a segment of a requirement can be satisfied 
Begin by assuming that all of time is satisfactory 
Consider each segment of the resource availability 
If there is a subsegment which is not satisfactory 
then exclude it from the answer. 



1 H 




V-26 


253 


Work in Process 


19 


This same algorithm for computing feasible intervals of time 
can be used for pattern matching against other numeric data, 
like latitude, longitude, light and dark, which can be 
reasonably approximated by piecewise linear functions. 
(Special notation needs to be introduced in order to represent 
conjunction and disjunction.) 



J 


Work in Process 

Few resources can be accurately modeled as quantity available 
over time. 

Rather than building more complex, domain specific models 
into COMPASS, we are building a distributed system of 
schedulers and resource managers that communicate with each 
other through a stylized protocol of requests and reservations. 

Interprocess communication is greatly facilitated by the 
stream oriented I/O facilities already part of COMPASS. 

Development of the basic capabilities is being performed 
jointly with the COOPES project. Specific resource models 
are being developed under the MDC IR&D program. 


V-28 


254 


Full Activity Representation 


21 


Act ivity 
Name 

Priority 

Value 

Penalty 

Predecesor_List 

Successor_list 

Non_ConCur rent_Act ivit y_L 1st 

Temporal_Const raint_List 

Duration 

Ear 1 iest_Start 

Latest_F inish 

Pre f erred_Interval_list 

Required_Resources 


Required_Condit ions 
Act i vit y_End 


Crystal . Step 2 
10 

5000 

1000 

(Crystal . Step_l ) 

() 

() 

[Start of * Finish of Crystal . Step 1 + 0:15] 

1 : 15 

3/00:00 

3 / 12:00 

[3/04:00 3/05:30] (3/07:00 3/08:30] ; 

C rew ( 1 . 0 ) / ( 0 1:15] ; 

Electricity <5.5)/(0 0:15] ( 9.0)/[0:15 1:15] 
Thermal (5.5)/[0 0:15] ( 1 4 . 0 ) / { 0 : 1 5 1:15] 

M i c r oG ravity T / [ 0 : 1 5 1:00] ; ; 


V 


V- 29 


/ 


— ^ \ 

Conclusion 

The COMPASS code library is a cost-effective platform for 
the development of new artificial intelligence applications that 
must be delivered in Ada and X-Windows. 

It implements symbols, strongly typed lists, and stream oriented 
low-level i/o libraries which are based upon very simple 
requirements and pragmatic compromises. 

The implementation has been tested in the context of a large 
complex, computationally intensive application. 

The implementation is being refined on the basis of design 
reviews, code audits, time and space benchmarks, and the 
wisdom of hindsight. 


V- 30 


Conclusion 


The COMPASS code library is a cost-effective platform for the 
developement of new scheduling applications. 

The code library contains generic, portable, modular, and 
adaptable scheduling technology. 

It can be effectively used off-the-shelf for compatibile 
scheduling applications or it can be used as a parts library 
for the development of custom scheduling systems 

It has proved useful as a neutral benchmark for comparing the 
time, space, and qualitative performance of existing schedulers. 

It has proved useful for assessing the feasibility of building 
scheduling systems, and other symbolic applications in Ada. 



PRECEDING PAGE BLANK NOT FILMED 



0) 

a 

o 

ai 

5T 

—h 

o 

H 


x 


la 

a 

'I 


<d 

o 

(A 

fl 

o 

0) 

o 

a 

u 

flj 

"a 

o 

CJ 

o 

£ 

CO 


o 

T 3 

O 

o 

£ 

5 

co 

£ 


o 

CO 

o 

CN 

« 

vO 

s 

o 

CN 


CO 


<x> 

S' 

o 

CN 

0 
Q 

1 

i 

cd 


Eli 

II 


X 

o 

a> 

T3 

o 

O 

G?| 

« 

< 

co 

< 

£ 


X 

o 

a> 

T3 

o 

O 

a?| 

« 

ss 

c 


o 

a> 

T3 

o 

O 

a? 

a 

<< 

CO 

< 

a 


a> 


LO 

VO 

rH 

t> 

ct 

00 

<N 

o 

CO 


t- 

i> 

o 

CN 

Q 


a> 

a> 

lo 


a> 

W 

<u, 

a 


be 


« 


Ol 

^1 

W 


^ ,d 

aS 


(N 


VO 

0) 

T3 

O 

O 

o 

pH 

c/3 

O 

CO 

C 

£ 


QG 

O 

1 

d 

2 

5 


00 

t> 

C 0 

I 

CO 

00 

<N 

O 

CO 


o> 

t> 

voi 

vo 

I 

CO 

00 

,<n 

o 

00 


o 

CO 

o 

CO 

I 

CO 

00 

<N 

o 

CO 


t> 

o 

<N 

Q 

s 


t> 

o 

CN 

Q 

§ 


!| 

<D 

<D 

u 


bp 


II 

<D 

<D 

U 

O 


o 

c2 

HJ 

X!, 

tu 

• rH 

X 

cd 

•e 

*c 

cd 

ft 


t> 

oo 

00 

co 

i 

CO 

00 

<N 

o 

CO 


21 

s 

VO 

ci 

00 

N 

o 

CO 


CO 

I s ' 

S' 

00 

CN 

o 

CO 


CO 

<N 

ci 

oo 

CN 

O 

CO 


o> 

o 

© 

co 


VO 

3 

CO 

I 

CO 

oo 

<M 

o 

co 


r- 

r> 

o 

CN 

Q 

S 


i, 

a> 

<U 

lo 


is 

a 

a> 

0) 

Vh 

O 


t- 

o 

o 

CN 

Q 

S 


t- 

t- 

o 

CN 


C- 

t- 

O 

<N 

Q 

S 


z 

<D 

a> 

o 


JJ, 

3 

0) 

u 

o 


r2 

p 

<p 
0) 
i ^ 

o 


JS 

p 

<D 

0) 

Vh 

O 


CN CN 
(N CN 
VO VO 


a 

CD , 

a 

a 

<0J 

PU, 


x> 

cd 

Pul 

ft 

a> 

X 

CO 

cd 

*£ 

CO 


CN 

CN 

VO 

<D 

T3 

O 

O 

a 

CO 

a 

CO 

< 

55 


CN 

CN 

VO 

Td 

o 

O 

O 

CO 

o 

S 5 

< 


CN 

<N 

<N 

»o 

a> 

-d 

o 

O 

O 

pH 

CO 

O 

< 

55 


CN 

CN 

<N 

VO 


O 

ci 

co 

o 

< 

CO 

< 

55 


tU 3 


a 


a> 


a 

‘C cd . 
W XI 


o 


Cd 


259 


PRECEDING PAGE BLANK NOT FILMED 



SNC Conference on Resource Allocation - List of Attendees 


O CO H 
(N CO Oi 
<J* ^ lO 

r- cn cd 

CD CD CD 
00 00 00 
(N (N (N 
^ ^ ^ 
o o o 
oo oo co 


<n o a> 

iO t> 00 
<N <N <N 
CO H rH 

« i i 
^ 

lO 1C in 
CO CO 00 

06 ob 06 

rH H rH 

00 oo oo 


t> t*- t- O t> t*- 

o o o o o o o 

<N <N CN <N <N <N <N 

PDOQQQQ 


&££££ J5 JS 

c a c c a c a 

<u a> a <d a> a> a> 

O O O 4) O (U 

u u ^ u ^ u u 

OOOOOOO 


<T> O'* <J) 

< < < 

0 o o 

cd cd cd 
G C C 
<d <d a> 
T3 T3 T3 
cd cd cd 

01 00 Qt) 

cd cd cd 
Ph Ph P-» 


a> a) <d 
> > > 
•c *C *C 
Q Q Q 
0 ) 0 0 ) 
> > > 
o o o 

(H L L 

a O O 

•a -a -a 

o o o 

o o o 
o o o 

00 OO 00 

Tf Tf 


O O O O O O' 

CO co oo oo oo oo 

iO lO lO lO lO ic 

(U <U O 0) (U <u 

ncJ '"O '“O T3 

o o o o o o 

u o o o o u 

‘ d d d d d 

pL, &L| 

co co co co co 

o o o o o 

< < < < < 

co co co co co 

< < C 3 < 

£ fc £ 5? 'Z 


JP <D 

c S g 

o £ O 

3 £ -a 
«i .22 s 


(QfcHP 



^ ^ rH 

00 00 CO CO CO CO 

lO 1C lO 1C ic to 

d> d> <D <1> O <D 

r O *"0 r X3 ’’P5 
o o o o o o 

uuuuuu 

d d d d d d 

C«H (X< pt| pL| ft, 

CO CO CO CO CO CO 

OOOOOO 

<<<<<< 
CO CO CO CO CO CO 

<J <3 ■< < <3 < 
£ ^ £ £ £ fc 


§ 2 1 1 1 
>> £ J ^ E § 

►2 r fc PQ W H 

KU Mfl C # 

pq pc| O > < O 


o o o 

CO CO CD 

CO CO CO 

4 4 .4 

< c < 

CO CO CO 

< < < 

Z'z.'z, 


© -3 :=? 

§<63 

O 0) w 

o £ g 

g •£ B 

5v cd o 
H Q % 



260 


Robert Alter Alter Associates 17714 Glenmore Spring Way IBethesda, MD 20817 1301/469-8796 











261 


SNC Conference on Resource Allocation • List of Attendees 
ion 1 Street Address City, State, Zii 


t> <N rH 

00 o ^ 

t> CO CsJ 

cn ca <n 

• i i 

CO CO t> 

in t> <n 

^ UJ U) 

o5 o$ 

O rH t— < 
(N t> O 


Cs| 

o 

<M O 

CO N 


•C c 

(X (X 
CO CO 


M £ 


(5> S S S 

o o o o 

<N (N <M <N 
<N (N M (N 

< <3 <3 <! 

> > > > 

d d d d 
3 3 3 3 

CO 00 CO CO 


CM 

o 


t> 

^0 

w 

cn 

CO 


s 

£ 

c3 

<D 

3 

•c 

•C 

cd 

03 

% 

S 

.3 

.a 

tJ 


03 

a3 

S 

S 

>> 


© 


£ 


o 


o 

O 

•c 

pq 

>> 

i 

§ 

Q 


5 p 

© nn 
CO 

Id o 

£ * 

s 3 


X 

o 

:-S && 

o o o 
POO 




a a? 


•3 3 «| 

p ” S 


CO CO CO CO 
t"- t>- o o 


a a a a 

8 8 8 8 

a> <u a> cl> 

"3 ^3 *3 "3 
H H H H 

T3 TJ TJ 
>h Ih *■< u 

t o ,o ,q ,o 


CO CO CO CO 


fc? 

as 


tel 

O o 0* 


262 


Tom Spam University of Colorado Campus Box 392 | Boulder, CO 80309 303/492-2799 

Dan Gablehouse | University of Colorado jCampus Box 392 [Boulder, CO 80309 1303/492-2744 






PRECEDING PAGE BLANK NOT FILMED 



