Software 


Displaying CFD Solution Parameters on Arbitrary Cut Planes 

Langley Research Center, Hampton, Virginia 


USMC6 is a Fortran 90 computer pro- 
gram for postprocessing in support of visu- 
alization of flows simulated by computa- 
tional fluid dynamics (CFD). Die name 
“USMC6” is pardy an abbreviation of 
“TetrUSS — USM3D Solution Cutter,” re- 
flecting its origin as a postprocessor for use 
with USM3D — a CFD program that is a 
component of the Tetrahedral Unstruc- 
tured Software System and that solves die 
Navier-Stokes equations on tetrahedral un- 


structured grids. “Cutter” here refers to a ca- 
pability to acquire and process solution data 
on (1) arbitrary planes that cut through 
grid volumes, or (2) user-selected spher- 
oidal, conical, cylindrical, and/or prismatic 
domains cut from within grids. Cutting 
saves time by enabling concentration of 
post-processing and visualization efforts on 
smaller solution domains of interest. 

The user can select from among more 
than 40 flow functions. The cut planes 


can be trimmed to circular or rectangular 
shape. The user specifies cuts and func- 
tions in a free-format input file using sim- 
ple and easy-to-remember keywords. The 
USMC6 command line is simple enough 
that the slicing process can readily be em- 
bedded in a shell script for assembly-line 
post-processing. The output of USMC6 is 
a data file ready for plotting. 

This program was written by S. Paul Pao of 
Langley Research Center. LAR-1 7527-1 


© Flow Solver for Incompressible 2-D Drive Cavity 

Goddard Space Flight Center, Greenbelt, Maryland 


This software solves the Navier- 
Stokes equations for the incompress- 
ible driven cavity flow problem. The 
code uses second-order finite differ- 
encing on a staggered grid using the 
Chorin projection method. The result- 
ing intermediate Poisson equation is 


efficiently solved using the fast Fourier 
transform. 

Time stepping is done using fourth-order 
Runge-Kutta for stability at high Reynolds 
numbers. Features include check-pointing, 
periodic field snapshots, ongoing reporting 
of kinetic energy and changes between time 


steps, time histories at selected points, and 
optional streakline generation. 

This program was written by Virginia Kalb 
of Goddard Space Flight Center. For further' 
information, contact the Goddard Innovative 
Partnerships Office at ( 301 ) 286-5810. GSC- 
15107-1 


t? Flow Solver for Incompressible Rectangular Domains 

Goddard Space Flight Center, Greenbelt, Maryland 


This is an extension of the Flow Solver 
for Incompressible 2-D Drive Cavity soft- 
ware described in the preceding article. It 
solves the Navier-Stokes equations for in- 
compressible flow using finite differenc- 
ing on a uniform, staggered grid. There is 
a runtime choice of either central differ- 
encing or modified upwinding for the 
convective term. The domain must be 
rectangular, but may have a rectangular 
walled region within it. Currently, the po- 
sition of the interior region and exterior 


boundary conditions are changed by 
modifying parameters in the code and re- 
compiling. These features make it possi- 
ble to solve a variety of classical fluid flow 
problems such as an L-shaped cavity, 
channel flow, or wake flow past a square 
cylinder. The code uses fourth-order 
Runge-Kutta time-stepping and overall 
second-order spatial accuracy. 

This software permits the walled region 
to be positioned such that flow past a 
square cylinder, an L-shaped cavity, and 


the flow over a back-facing step can all be 
solved by reconfiguration. Also, this ex- 
tension has an automatic detection of pe- 
riodicity, as well as use of specialized data 
structure for ease of configuring domain 
decomposition and computing conver- 
gence in overlap regions. 

This program was written by Virginia L. 
Kalb of Goddard Space Flight Center. For fur- 
ther information, contact the Goddard Inno- 
vative Partnerships Office at (301) 286- 
5810. GSC-15111-1 


w Simulating Avionics Upgrades to the Space Shuttles 

Lyndon B. Johnson Space Center, Houston, Texas 


Cockpit Avionics Prototyping Envi- 
ronment (CAPE) is a computer program 
that simulates the functions of proposed 


upgraded avionics for a space shuttle. In 
CAPE, pre-existing space-shuttle-sim- 
ulation programs are merged with a 


commercial-off-the-shelf (COTS) dis- 
play-development program, yielding a 
package of software that enables high-fi- 


NASA Tech Briefs, September 2008 


45 


delity simulation while making it possi- 
ble to rapidly change avionic displays 
and the underlying model algorithms. 
The pre-existing simulation programs 
are Shuttle Engineering Simulation, 
Shuttle Engineering Simulation II, Inter- 
active Control and Docking Simulation, 
and Shuttle Mission Simulator playback. 

The COTS program — Virtual Appli- 
cation Prototyping System (VAPS) — 


not only enables the development of dis- 
plays but also makes it possible to move 
data about, capture and process events, 
and connect to a simulation. VAPS also 
enables the user to write code in the C 
or C++ programming language and com- 
pile that code into the end-product sim- 
ulation software. As many as ten differ- 
ent avionic-upgrade ideas can be 
incorporated in a single compilation 


and, thus, tested in a single simulation 
run. CAPE can be run in conjunction 
with any or all of four simulations, each 
representing a different phase of a 
space-shuttle flight. 

This program was written by Daniel Deger 
and Kenneth Hill of Johnson Space Center 
and Karsten E. Braaten of United Space Al- 
liance. Further information is contained in a 
TSP (see page 1). MSC-23453-1/15-1 


Simulating the Phoenix Landing Radar System 

NASA’s Jet Propulsion Laboratory, Pasadena, California 

A computer program called “phxlr- 
sim” simulates the behavior of the radar 
system used as an altimeter and vel- 
ocimeter during the entry, descent, and 
landing phases of the Phoenix lander 
spacecraft. The simulation includes 
modeling of internal functions of the 
radar system, the spacecraft trajectory, 
and the terrain. The computational 
models incorporate representations of 
nonideal hardware effects in the radar 
system and effects of radar speckle (co- 
herent scatter of radar signals from ter- 
rain). 

This program was written by Curtis W. 

Chen of Caltech for NASA’s Jet Propulsion 
Laboratory. Further information is contained 
in a TSP (seepage 1 ). 

This software is available for commer- 
cial licensing. Please contact Karina Ed- 
monds of the California Institute of Tech- 
nology at (626) 395-2322. Refer to 
NPO-44431. 



Phoenix Mission Lander on Mars, artist's concept. 


Injecting Artificial Memory Errors Into a Running Computer 
Program 

NASA’s Jet Propulsion Laboratory, Pasadena, California 


Single-event upsets (SEUs) or “bit- 
flips” are computer memory errors 
caused by radiation. BITFLIPS (Basic 
Instrumentation Tool for Fault Local- 
ized Injection of Probabilistic SEUs) is 
a computer program that deliberately 
injects SEUs into another computer 
program, while the latter is running, 
for the purpose of evaluating the fault 
tolerance of that program. BITFLIPS 
was written as a plug-in extension of 
the open-source Valgrind debugging 
and profiling software. BITFLIPS can 
inject SEUs into any program that can 


be run on the Linux operating system, 
without needing to modify the pro- 
gram’s source code. Further, if access 
to the original program source code is 
available, BITFLIPS offers fine-grained 
control over exactly when and which 
areas of memory (as specified via pro- 
gram variables) will be subjected to 
SEUs. 

The rate of injection of SEUs is 
controlled by specifying either a fault 
probability or a fault rate based on 
memory size and radiation exposure 
time, in units of SEUs per byte per 


second. BITFLIPS can also log each 
SEU that it injects and, if program 
source code is available, report the 
magnitude of effect of the SEU on a 
floating-point value or other program 
variable. 

This program was written Benjamin J. 
Bornstein, Robert A. Granat, and Kiri L. 
Wagstaff of Caltech for NASA’s Jet Propulsion 
Laboratory. 

This software is available for commercial 
licensing. Please contact Karina Edmonds 
of the California Institute of Technology at 
(626) 395-2322. Refer to NPO-45368. 


46 


NASA Tech Briefs, September 2008 



