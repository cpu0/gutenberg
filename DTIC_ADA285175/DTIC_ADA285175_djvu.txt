o 



TASK: UU04 
CDRL: 05203 
24 February 1993 


Ada PCTE Binding 
(AdaPCTE) Version 0.3 
SunOS Implementation 


Informal Technical Data 


yTrv.v ■». 'f* V 



STARS-UC-05203/004/00 
24 February 1993 


94-31244 



qOALlTi 

















TASK: UU04 
CDRL: 05203 
24 February 1993 


VERSION DESCRIPTION DOCUMENT 
For 

SOFTWARE TECHNOLOGY FOR ADAPTABLE, RELIABLE SYSTEMS 

(STARS) 

Ada PCTE Binding (AdaPCTE) 

Version 0.3 

SunOS Implementation 

STARS-UC-05203/004/00 
24 February 1993 

Data Type: A005, Informal Technical Data 

CONTRACT NO. F19628-88-D-0031 
Delivery Order 0011 

Prepared for: 

Electronic Systems Center 
Air Force Systems Command, USAF 
Hanscom AFB, MA 01731-5000 


Prepared by: 

Paramax Systems Corporation 
12010 Sunrise Valley Drive 
Reston, VA 22091 


Distribution Statement “A” 
per DoD Directive 5230.24 

Authorized for public release; Distribution is unlimited. 













TASK: UU04 
CDRL: 05203 
24 February 1993 


Data ID: STARS-UC-05203/004/00 

Distribution Statement “A” 
per DoD Directive 5230.24 

Authorized for public release; Distribution is unlimited. 


Copyright 1993, Paramax Systems Corporation, Reston, Virginia 
Copyright is assigned to the U.S. Government, upon delivery thereto, in accordance with 

the DFAR Special Works Clause. 


Developed by: Paramax Systems Corporation 


This software, developed under the Software Technology for Adaptable, Reliable Systems 
(STARS) program, is approved for release under Distribution “A” of the Scientific and Tech¬ 
nical Information Program Classification Scheme (DoD Directive 5230.24) unless otherwise 
indicated. Sponsored by the U.S. Defense Advanced Research Projects Agency (DARPA) 
under contract F19628-88-D-0031, the STARS program is supported by the military services, 
SEI, and MITRE, with the U.S. Air Force as the executive contracting agent. 


Permission to use, copy, modify, and comment on this software and its documentation for 
purposes stated under Distribution “A” and without fee is hereby granted, provided that 
this notice appears in each whole or partial copy. This software retains Contractor indemni¬ 
fication to The Government regarding copyrights pursuant to the above referenced STARS 
contract. The Government disclaims all responsibility against liability, including costs and 
expenses for violation of proprietary rights, or copyrights arising out of the creation or use 
of this software. 


In addition, the Government, Paramax, and its subcontractors disclaim all warranties with 
regard to this software, including all implied warranties of merchantability and fitness, and 
in no event shall the Government, Paramax, or its subcontractor(s) be liable for any special, 
indirect or consequential damages or any damages whatsoever resulting from the loss of use, 
data, or profits, whether in action of contract, negligence or other tortious action, arising in 
connection with the use or performance of this software. 








TASK: UU04 
CDRL: 05203 
24 February 1993 


VERSION DESCRIPTION DOCUMENT 
Ada PCTE Binding (AdaPCTE) 

Version 0.3 

SunOS Implementation 


Principal Author(s): 


Robert C. Smith, Paramax, Valley Forge Engineering Center 


Date 


Michael J. Horton, Paramax, Valley Forge Engineering Center 


Date 


Approvals: 




S j 1^ / 


Task Manager Dr. Paul Orgren 


Date 


(Signatures on File) 








TASK: UU04 
CDRL: 05203 
24 February 1993 


VERSION DESCRIPTION DOCUMENT 
Ada PCTE Binding (AdaPCTE) 

Version 0.3 

SunOS Implementation 


Change Record: 


Data ID 

Description of Change 

Date 

Approval 

STARS-UC-05203/004/00 

Successor Volume: Upgrade 
for software version 0.3 

24 February 1993 

on file 

STARS-UC-05203/003/00 

Successor Volume: Upgrade 
for software version 0.2 

30 November 1992 

on file 

STARS-TC-04014/001/00 

Original Issue 

12 June 1992 

on file 























REPORT DOCUMENTATION PAGE 


Form Approved 
0MB NO. 0704^0188 


Public reoortin^ burden tor ihn collection of information estimated to average • hour oer responve. including the tima for reviewmo m^truaions. scarchmo ensting o.ita sour^r^ 
gathering and maintaining the data needed, and comoleting and revievwmg the collection of mformation. Send comments reaaroinn tt'is burden estimate or any other aspect oi this 
colleaion of information, including suggestions for reducing this burden, to Washington Headquarters Services. Oirecorate for information Ooerations ano Rfoorts. W »S Jefferson 
Oavis ffichwav. Suite 120<1. Arlington. VA 22202-A302. and to the Off ire of Management and Budget. Paperwork Reduction Protect (O/flJ-O ffl8). Washington, DC 20 SO 3 


1. AGENCY USE ONLY (Leave blank) 


4. TITLE AND SUBTITLE 


2. REPORT DATE 

24 February 1993 


3. REPORT TYPE AND-DATES COVERED 

nformal Technical Report 


S. FUNDING NUMBERS 


Ada PCTE Binding (AdaPCTE) Version 0.3 
SunOS Implementation 


6. AUTHOR(S) 

Bob Smith 
Michael Horton 


7. PERFORMING ORGANIZATION NAME(S) AND ADORESS(ES) 

Paramax Systems Corporation 
1201 0 Sunrise Valley Drive 
Reston, VA 22091 


FI9628-88-D-0013 


8. PERFORMING ORGANIZATION 
REPORT NUMBER 


TARS-UC-05203/004/00 


9. SPONSORING/MONITORING AGENCY NAME(S) AND AOORESS(ES) 

Department of the Air Force 

Headquarters ESC 

Hanscom, AFB, MA 01731-5000 


10. SPONSORING/MONITORING 
AGENCY REPORT NUMBER 


05203 



12a. DISTRIBUTION/AVAILABILITY STATEMENT 


12b. DISTRIBUTION CODE 


Distribution "A" 


13. ABSTRACT (Maximum 200 words) 


The Ada Portable Common Tool Environment (PCTE) binding (AdaPCTE) provides Ada 
applications access to a PCTP object bEise as defined by the European Computer Manufac¬ 
turers Association (ECMA) Ada PCTE specification (Standard ECMA-162 Ada Language 
Binding, December 1991). This “alpha” release provides a minimal set of interfaces to permit 
Ada developers to experiment with and evaluate PCTE for use in future Ada applications. 
It is expected that later releases will complete the binding. 


14. SUBJECT TERMS 



Ada PCTE Bindings 



17. SECURITY CLASSIFICATION 

18. SECURITY CLASSIFICATION 

19. SECURITY CLASSIMCATi:n 

OF REPORT 

OF THIS PAGE 

OF abstract 

Unclassified 

Unclassified 

Unclassified 


15. NUMBER CF PAGES 
1 6 


16 PRICE coot 
























24 February 1993 


STARS-UC-05203/004/00 


Contents 

1 SCOPE 1 

1.1 Identification . 1 

1.2 System Overview. 1 

2 RELATED SOFTWARE 1 

3 VERSION DESCRIPTION 1 

3.1 Inventory of Contents. 1 

A 3.1.1 Directory: adapcte/code . 1 

3.1.2 Sub-directory: adapcte/code/C . 2 

3.2 Changes Installed. 2 

A 3.2.1 Version 0.3 2 

3.2.2 Version 0.2 . 3 

3.3 Adaptation Data. 3 

3.3.1 Operating Environment . 3 

3.3.2 Development Environment. 3 

3.4 Interface Compatibility. 4 

3.5 Installation Instructions . 4 

3.5.1 Build Procedure. 4 

4 USER FEEDBACK 4 

5 NOTES 5 

A Appendix: Inventory of Contents 8 

B Appendix: Build Scripts 10 

B.l Script: Build.AdaPCTE.var . 10 

B.2 Script: Build.AdaPCTE.csh . 14 

Page ii 






















24 February 1993 


STARS-UC-05203/004/00 


1 SCOPE 

1.1 Identification 

Version Description Document, 
Ada PCTE Binding (AdaPCTE), 
A Version 0.3, 

SunOS Implementation 


1.2 System Overview 

The Ada Portable Common Tool Environment (PCTE) binding (AdaPCTE) provides Ada 
applications access to a PCTE object base as defined by the European Computer Manufac¬ 
turers Association (ECMA) Ada PCTE specification (Standard ECMA-162 Ada Language 
Binding, December 1991). This “alpha” release provides a minimal set of interfaces to permit 
Ada developers to experiment with and evaluate PCTE for use in future Ada applications. 
It is expected that later releases will complete the binding. 


2 RELATED SOFTWARE 

Since no conforming implementations of ECMA PCTE exist as defined in Standard ECMA- 
149, AdaPCTE is implemented on GIE Emeraude’s PCTE V12.2 Fix 7 or V12.3. Because 
A only a subset of the ECMA PCTE Ada specification has been implemented for the 0.3 release, 
and because ECMA PCTE functionality differs somewhat from Emeraude PCTE function¬ 
ality, the complete functionality of Emeraude PCTE is not available to Ada applications 
using these bindings. 


3 VERSION DESCRIPTION 

I 

3.1 Inventory of Contents 

The AdaPCTE distribution is structured as shown below. The top-level directory adapcte 
includes PostScript (VDDadapcte.ps) and clear ASCII text (VDDadapcte.tty) versions 
of this document, along with a complete directory listing of the distribution (Contents.tty, 
reproduced herein as Appendix A). 


A 3.1.1 Directory: adapcte/code 

The adapcte/code directory contains the Ada source files for the Ada binding to PCTE and 
the UNIX C-shell script Build.AdaPCTE.csh. Build.AdaPCTE.csh can be used to build 
A the entire AdaPCTE Binding using the Sun Ada 1.1 Development System. No provisions 
within the build script have been made for installing the bindings in the PCTE object base. 


Page I 








24 February 1993 


STARS-UC-05203/004/00 


Applications being developed on these bindings are expected to be developed within a UNIX 
environment and executable code files may be installed by the user in the PCTE object base 
(but are not required to be installed in the object base). The build script is reproduced 
herein as Appendix B.2. 


3.1.2 Sub-directory: adapcte/code/C 

This directory contains a small C file, util.c, containing utility routines used by AdaPCTE. 
The build script compiles this file in the target directory as util.o. Applications are required 
to add this file to any link commands for applications developed with these bindings. 


3.2 Changes Installed 
A 3.2.1 Version 0.3 

In the original ECMA-162 Ada Language Binding specification for the file Pete.a a generic 
package specification for sequences was declared and instantiated before the package body 
was elaborated. This violates MIL-STD-1815A-1983 (the Ada Reference Manual). The 
Sun Ada 1.0 compiler did not enforce generic package elaboration before instantiation. The 
Sun Ada 1.1 compiler now enforces this, so to successfully compile and execute AdaPCTE- 
based applications, the generic sequences package and it’s body were moved to a separate 
compilation unit. This caused several minor changes to other AdaPCTE files, and may 
require changes to applications using the AdaPCTE bindings. Application changes should 
be limited to changing data types of paramaters passed to procedures in the sequences 
package. 

The ECMA standards group responsible for the ECMA-162 has been notified of the problem, 
and a description of changes made to AdaPCTE provided. Future releases of the standard 
may differ from the specifications in AdaPCTE 0.3. ECMA changes will be incorporated in 
future releases of AdaPCTE. 

I 

Files affected were: 


Pete.a 

Pcte_accounting.a 
Pcte_audit.a 
Pcte_b.a 

Pcte_discretionary.a 
Pcte_oms.a 
Pcte.process.a 
Pcte_process_b.a 
Sequences .a 
Sequences.b.a 


Page 2 






24 February 1993 


STARS-UC-05203/004/00 


Several inconsistencies between standard Ada text input-output and PCTE text input- 
output were discovered. Changes were made to pcteAextAo so that get and end-ofJine 
work a5 in standard Ada text input-output. Files affected were: 


Pcte_contents_b. a 
PctG_text_io_b. a 


3.2.2 Version 0.2 

Added to this version are Ada Input Output packages that support text, sequential, and 
direct input output to PCTE objects with contents. The specifications of these packages 
match the standard Ada input output routines defined in the Language Reference Manual. 
The package bodies have been rewritten to access PCTE objects. The packages are specified 
in pcte^textAo.a^ pcte-direcLio.a, and pcte.sequentiaLio.a. 

To support access to Emeraude PCTE objects a package pcte.support was added. This 
package provides constants for accessing standard PCTE objects (e.g., common root, home 
object), and routines for manipulating Emeraude PCTE path names. 

The procedure list.alLlinks in package Pcte.object was extended to permit applications to 
request a listing of links based on an application supplied list of link types. 


3.3 Adaptation Data 

3.3.1 Operating Environment 

Sun-4 Workstations 

SunOS, Version 4.1.2 

Emeraude PCTE V12.2 Fix 7 or V12.3 

3.3.2 Development Environment 

Sun-4 Workstations (32 MB main memory, 100 MB swap space) 
SunOS, Version 4.1.2 
Emeraude PCTE V12.2 Fix 7 or V12.3 
A SunAda 1.1 

C compiler 


Page 3 





24 February 1993 


STARS-UC-05203/004/00 


3.4 Interface Compatibility 

AdaPCTE uses the recently adopted standard ECMA-162 for the Ada binding specification. 
Because no ECMA PCTE implementation is available, AdaPCTE is bound to GIE Emer- 
aude’s PCTE 1.5 VT2.2 or V12.3 implementation written in “C”. As a result, the AdaPCTE 
specification contains some minor modifications to ECMA-162. The exact specification of the 
implemented binding can be found in the Ada package specifications located in the directory 
/adapcte/code in this delivery. 


3.5 Installation Instructions 

File adapcte/code/Build.AdaPCTE.esh is an executable UNIX C-shell script, which can be 
used interactively to build the AdaPCTE Binding from the Ada source code, using the 
Sun Ada 1.0 system. It ensures that library dependencies are established correctly, making 
it unnecessary for the instMler to perform these operations manually. 


3.5.1 Build Procedure 

1. (OPTIONAL) - To prevent interactive prompting when executing the script, uncom¬ 
ment and edit the environment variables at the beginning of file code/Build.AdaPCTE. var 
(see Appendix B.l) to reflect the actual operating environment. The following envi¬ 
ronment variables must be modified: 

AdaPCTE - identifies the full pathname of the directory into which the AdaPCTE 

distribution has been loaded (e.g., /local/adapcte); 

COMPILERNAME - identifies the name of the compiler to be used; 

COMPVERSION - identifies the compiler version; 

COMPILERPATH - identifies the full pathname of the directory containing the 

SunAda compilation system (e.g., /local/sunadal.O); 

TARGET - identifies a Build directory to be used for building the software. 

2. Execute Build.AdaPCTE.csh, providing configuration information when prompted by 
the script. 


4 USER FEEDBACK 

This version of AdaPCTE is considered an “alpha” release. The primary purpose of the 
release is to encourage experimentation with the software and to solicit feedback from the 
Ada and PCTE user communities. Thus, we would greatly appreciate your comments, 
suggestions, and criticisms. 


Page 4 









24 February 1993 


STARS-UC-0520;3/004/00 


5 NOTES 

The full set of PCTE path names as described in the ECMA PCTE Abstract Specification 
(149) has not been implemented for this release. The following characters 
and “/” plus alphanumeric characters are valid characters in AdaPCTE path names. The 
following are examples of valid AdaPCTE path names: 


_/sun4.tools 
“/.history.e 


A AdaPCTE Version 0.3 has not implemented all the interfaces defined in ECMA-162. The 
following describes which interfaces are implemented in Version 0.3 including any limitations. 


Package Sequence 
function get 
procedure put 
procedure delete 
procedure copy 
function length.of 
function index_of 
function equal 
procedure normalize 

Package Pete 

Package Reference 

— These procedures use a limited form of path names as defined 

— in the abstract spec. You can use ", ., .., / plus ascii 

— characters 
function get.path 
procedure set_absolute 
procedure set_relative 
procedure unset 

— New operations added by VFEC 
function get_reference_id 
procedure set_reference_id 

Package Pcte_contents 

— This package is only implemented for files; no pipes or devices 
procedure close 
function get_position 
procedure open 
function read 
procedure seek 


Page 5 








24 February 1993 


STARS-UC-05203/004/00 


procedure set.position 
procedure set.properties 
procedure write 

— New operations added by VFEC 
procedure standard.input 
procedure standard.output 
procedure standard.error 
function end.of.contents 
procedure write.s 

— (writes a string) 
procedure read.s 

— (reads a string) 

Package Pete.error 
procedure set 
procedure unset 
procedure set.will.raise 
procedure set.will.record 
function will.raise 
function will.record 
function last.error 

Package Pete.object 
procedure create 

— can not specify aoiother volume 
procedure delete 

procedure get.attribute 

— for boolean, integer, natural aind string types only 
procedure get.several.attributes 

— for booleein, integer, natural eind string types only 
function get.type 

procedure list.all.links 

— does not support EXTERNAL extents 

— does not support COMPOSITE scopes 

— ignores links parameter 

— none of the other 8 procedure variations of 

— object.list.links is supported 

Package Pcte.process 

procedure create.and.start 

— no process objects created; just fire up a process 

— local execution site only 
procedure set.working.schema 

— for current process only 
procedure wait.for.any.child 


Page 6 







24 February 1993 


STARS-UC-05203/004/00 


procedure wait.for_child 
package Pcte.sds 

procedure get_link_type_properties 
procedure get_object_type_properties 
function get_type_name 

— ignores any sds param value other than IN_WORKING_SCHEMA 

package Pcte.link 

procedure get_attribute 

— for boolean, integer, natural and string types only 
procedure get_several_attributes 

— for boolean, integer, natural and string types only 


Page 7 









24 February 1993 


STARS-UC-05203/004/00 


A Appendix: Inventory of Contents 

NOTE: identifies executables; "/" identifies directories 

adapcte: 

Contents.tty 
VDDadapcte.ps 
VDDadapcte.tty 
code/ 

adapcte/code: 

Build.AdaPCTE.csh* 

Build.AdaPCTE.var 
C/ 

Pete.a 

Pcte.accounting.a 

Pcte.activity.a 

Pcte.audit.a 

Pcte.b.a 

Pcte.contents.a 

Pcte_contents_b.a 

Pcte.discretionary.a 

Pcte_discretionary_b.a 

Pcte.error.a 

Pcte_error_b.a 

Pcte.limit.a 

Pcte.mandatory.a 

Pcte_mandatory_b.a 

Pcte.message.a 

Pcte.notify.a 

Pcte.obj ect_b.a 

Pcte.oms.a 

Pcte.oms.b.a 

Pcte.process.a 

Pcte_process_b.a 

Pcte.queue.a 

Pcte_replicated_object.a 

Pcte.sds.a 

Pcte_8ds_b.a 

Pcte.time.a 

Pcte_vol_dev_archi.a 

Pcte.Horkstation.a 

Sequences.a 

Sequences.b.a 

emer.conversion.a 


Page 8 









24 February 1993 


STARS-UC-05203/004/00 


error.a 
error_b.a 
error3_c.a 
pcte_l_5_int.a 
pcte_l_S_support.a 
pete_1_6_support_b.a 
pcte_direct_io.a 
pcte_direct_io_b.a 
pcte_obj ect_create.a 
pcte_sequential_io.a 
pcte_sequential_io_b.a 
pcte_STipport.a 
pcte_support_b.a 
pcte_text_io.a 
pcte_text_io_b.a 

adapcte/code/C: 

util.c 


Page 9 






24 February 1993 


STARS-UC-05203/004/00 


B Appendix: Build Scripts 
B.l Script: Build-AdaPCTE.var 
1 « 

2 # Unconunent and edit these lines if you do not want to 

3 # be prompted for the environment variables 

4 # 

5 setenv ADAPCTE /tbd/adapcte # replace with location of the release 

6 setenv COMPILERNAHE sunada # set to sunada 

7 setenv COMPVERSIOH SunAdal.1 # e.g. SunAdal.O or SunAdal.1 

8 setenv COMPILERPATH /tbd/SunAdal.1 # indicate your compiler path 

9 setenv TARGET $ADAPCTE/Build_$C0MPVERSI01I 

10 

11 # 

12 # Define the location of the RGB source code directories. 

13 # 

14 

15 if ( ! $?ADAPCTE ) then 

16 echo "" 

17 echo "Specify path to top level Ada PCTE directory " 

18 echo "(e.g. /local/adapcte ) " 

19 echo "" 

20 echo -n " ADAPCTE = " 

21 setenv ADAPCTE $< 

22 echo "" 

23 endif 

24 if ( ! -e $ADAPCTE ) then 

25 echo "" 

26 echo "♦* $ADAPCTE does not exist 

27 echo Script aborted **" 

28i echo "" 

29 unsetenv ADAPCTE 

30 exit -1 

31 endif 

32 

33 

34 

35 # 

36 # Define C Language compilation variable 

37 # 

38 setenv CC " cc -g -c " 

39 

40 

41 


Page 10 






24 February 1993 


STARS-UC-05203/004/00 


42 # 

43 # Determine the Ada compilation system to use 

44 # 

45 # 

46 # Establish a path to the SunAda compilation system 

47 # 

48 if ( ! $?COMPILERNAME I I ! $?CQMPVERSION I I ! $?COMPILERPATH ) then 

49 echo "" 

50 echo "Please select your compiler name: [sunada] " 

51 echo "" 

52 echo -n " COMPILERMAME = " 

53 setenv COMPILERNANE $< 

54 echo "" 

55 switch ($COMPILERNAME) 

56 case Vads; 

57 case VADS: 

58 case vads: 

59 echo -n "Are you building with VADS Version 6.0.3? [y,n](n) " 

60 set COMPVERSION = $< 

61 echo "" 

62 switch ($C0MPVERSI0N) 

63 case Y: 

64 case y: 

65 set COMPVERSION = Vads603 

66 breaksw 

67 case N: 

68 case n: 

69 default: 

70 set COMPVERSION = Vads 

71 echo "" 

72 echo "Warning! Software not tested under your version of the VADS com 

73 piler." ' 

74 breaksw 

75 endsw 

76 breaksw 

77 case SunAda: 

78 case Sunada: 

79 case sunada: 

80 echo -n "Which version of SunAda are you using? [0,1](0) " 

81 set COMPVERSION = $< 

82 echo "" 

83 switch (ICOMPVERSION) 

84 case 1: 

85 set COMPVERSION = SunAdal.l 

86 echo "Warning! Softwaure not tested under your version of the SunAda compiler." 


Page 11 







24 February 1993 


STARS-UC-05203/J04/00 


87 breeUcsw 

88 case 0: 

89 default: 

90 set COMPVERSION = SunAdal.O 

91 breaksv 

92 endsv 

93 breeiksv 

94 default: 

95 echo "" 

96 echo "You must specify a compiler name." 

97 echo "" 

98 unsetenv COMPVERSION 

99 exit -1 

100 breaksB 

101 endsw 

102 

103 echo "" 

104 echo "Specify path to the compiler (e.g. /loccd./SuiiAda)" 

105 echo "" 

106 echo -n " COMPILERPATH = " 

107 setenv COMPILERPATH $< 

108 if ( ( $COMPILERPATH =* ) 11 ( ! -e $COMPILERPATH/bin/ada ) ) then 

109 echo "" 

110 echo "♦* Cannot find Ada compiler in $COMPILERPATH/bin **" 

111 echo Script aborted 

112 echo "" 

113 unsetenv COMPILERPATH 

114 exit -1 

115 endif 

116 endif 

117 if ( -e $COMPILERPATH/bin/ada ) then 

118 if ( $COMPILERHAME == "sunad'a" I I $COMPILERNAME == "vads" ) then 

119 setenv COMPILERBIN $COMPILERPATH/bin 

120 setenv COMPILE "$COMPILERBIN/ada -v -00 " 

121 setenv LINK "$COMPILERBIN/a.ld " 

122 endif 

123 else 

124 echo "" 

125 echo Cannot find $C0MPILERPATH/bin/ada 

126 echo Script aborted *♦" 

127 echo "" 

128 unsetenv COMPILERPATH 

129 exit -1 

130 endif 

131 


Page 12 






24 February 1993 


STARS-UC-05203/004/OO 


132 

133 # 

134 # Define the Destination of the ADAPCTE build 

135 # where TARGET = path to build destination (e.g. $ADAPCTE/Build_SunAdal.0) 

136 # 

137 if ( ! $?TARGET ) then 

138 echo 

139 echo "Specify the path to the TARGET directory " 

140 echo "(Defaults to $ADAPCTE/Build_$<COMPVERSIOK>) " 

141 echo "" 

142 echo -n " TARGET = " 

143 setenv TEMP $< 

144 echo "" 

145 if ( $TEMP == ) then # check for null entry 

146 setenv TARGET $ADAPCTE/Build_$-CCOMPVERSION> 

147 unsetenv TEMP 

148 else 

149 setenv TARGET $TEMP 

150 unsetenv TEMP 

151 endif 


152 

endif 




153 






154 

echo 

IIII 




155 

echo 

If 

TARGET 

s 

$TARGET" 

156 

echo 

till 




157 

echo 

M 

ADAPCTE 

= 

$ADAPCTE" 

158 

echo 

fill 




159 

echo 

II 

COMPILERNAME 

= 

$COMPILERNAME' 

160 

echo 

II 

COMPVERSION 

= 

$C0MPVERSI0N" 

161 

echo 

II 

COMPILERPATH 


$COMPILERPATH' 

162 

echo 

If 

COMPILE 

= 

$C0MPILE" 

163 

echo 

II 

LINK 

= 

SLINK" 


164 

165 » 

166 # Create the directories for the build 

167 # 

168 if ( ! -d $TARGET ) mkdir ITARGET 

169 

170 

171 


Page 13 






24 February 1993 


STARS-UC-05203/004/00 


B.2 Script: Build-AdaPCTE.csh 

1 #! /bin/csh -f 

2 echo "" 

3 echo "Delining installation-dependent variables" 

4 echo "" 

5 source Build.AdaPCTE.var 

6 

7 echo "" 

8 echo "Building Ada libraries lor the Ada Bindings to PCTE" 

9 echo "" 

10 

11 il ! -e $TARGET mkdir $TARGET 

12 

13 cd $TARGET 

14 

15 il ( ( $COMPILERHAME == "vads" ) |1 ($COMPILERNAME == "sunada" ) ) then 

16 il ( ! -e ada.lib ) then 

17 $COMPILERBIH/a.mklib -1 $TARGET $COMPILERPATH/verdixlib 

18 endil 

19 endil 

20 

21 echo "" 

22 echo "Creating source code links in $ADAPCTE/code" 

23 echo "" 

24 loreach lile ($ADAPCTE/code/*.a) 

25 il (! -e $'Clile:t} ) In -s $lile $<lilo:t> 

26 end 

27 

28 loreach lile ($ADAPCTE/code/C/*) 

29 il (! -e $'Clile:t> ) In -s $lile ${lile:t> 

30 end ! 

31 

32 rm -rl LOGadapcte 

33 

34 echo "" 

35 echo "Compiling the Ada PCTE binding source" 

36 echo "" 

37 


38 

ICOMPILE Sequences.a 

»fc LOGadapcte 

39 

ICONPILE Sequences.b.a 

»fe LOGadapcte 

40 

ICOHPILE Pcte.error.a 

»t LOGadapcte 

41 

ICONPILE Pete.a 

»k LOGadapcte 

42 

ICOHPILE Pcte.contents.a 

»ft LOGadapcte 

43 

ICONPILE Pet e_replicat ed.obj ect.a 

»ft LOGadapcte 


Page 14 









24 February 1993 


STARS-UC-05203/004/00 


44 

$COMPILE Pcte.message.a 

»tc LOGadapcte 

45 

SCOMPILE Pcte_error_b.a 

»ft LOGadapcte 

46 

$COMPILE Pcte_notity.a 

»ft LOGadapcte 

47 

SCOMPILE Pcte.discretionary.a 

»ft LOGadapcte 

48 

SCOMPILE Pcte.mandatory.a 

»k LOGadapcte 

49 

$C0MPILE Pcte_audit.a 

»ft LOGadapcte 

50 

SCOMPILE Pcte_mandatory_b.a 

»k LOGadapcte 

51 

SCOMPILE Pcte.sorkstation.a 

»k LOGadapcte 

52 

SCOMPILE Pcte_discretioiiary_b.a 

»k LOGadapcte 

53 

SCOMPILE Pcta.process. a 

»ft LOGadapcte 

54 

SCOMPILE emer.conversion.a 

»k LOGadapcte 

55 

SCOMPILE Pcte_vol_dev_archi.a 

»k LOGadapcte 

56 

SCOMPILE errors_c.a 

»k LOGadapcte 

57 

SCOMPILE error.a 

»k LOGadapcte 

58 

SCOMPILE error_b.a 

»k LOGadapcte 

59 

SCOMPILE pcte_l_5_int.a 

»ft LOGadapcte 

60 

SCOMPILE pcte_l_S_support.a 

»k LOGadapcte 

61 

SCOMPILE pcte_l_5_3upport_b.a 

»k LOGadapcte 

62 

SCOMPILE Pcte_proces3_b.a 

»ft LOGadapcte 

63 

SCOMPILE Pcte_content3..b.a 

»ft LOGadapcte 

64 

SCOMPILE Pcta.b.a 

»k LOGadapcte 

65 

SCOMPILE Pcte_om3.a 

»k LOGadapcte 

66 

SCOMPILE Pcte_obj6Ct_b.a 

»k LOGadapcte 

67 

SCOMPILE Pcte_om3_b.a 

»k LOGadapcte 

68 

SCOMPILE Pcte.time.a 

»k LOGadapcte 

69 

SCOMPILE Pcte_3d3.a 

»k LOGadapcte 

70 

SCOMPILE Pcte_3d3_b.a 

»k LOGadapcte 

71 

SCOMPILE Pcte_queue.a 

»k LOGadapcte 

72 

SCOMPILE Pcte.accounting.a 

»k LOGadapcte 

73 

SCOMPILE Pcte_activity.a 

»k LOGadapcte 

74 

SCOMPILE Pcte_liinit.a 

»ft LOGadapcte 

75 

SCOMPILE -pcte.support.a 

»k LOGadapcte 

76 

SCOMPILE pcte_3upport_b.a 

»k LOGadapcte 

77 

SCOMPILE pcte_object_creato.a 

»k LOGadapcte 

78 

SCOMPILE pcte_text_io.a 

»k LOGadapcte 

79 

SCOMPILE pcte_text_io_b.a 

»k LOGadapcte 

80 

SCOMPILE pcte.direct.io.a 

»k LOGadapcte 

81 

SCOMPILE pcte_dir6ct_io_b.a 

»k LOGadapcte 

82 

SCOMPILE pcte_3equential_io.a 

»k LOGadapcte 

83 

SCOMPILE pcte_sequantial_io_b.a 

»ft LOGadapcte 

84 



85 



86 

echo "" 


87 

echo "Compiling the C code" 


88 

echo "" 



Page 15 





24 February 1993 


89 $CC util.c »t LOGadapcte 

90 

91 echo 

92 echo "Compilation Complete" 


STARS-UC-05203/004/00 


Page 16 






