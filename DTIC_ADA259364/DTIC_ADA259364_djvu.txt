
13. ABSTRACT (Maximum 200 words) 

This Software Users Manual (SUM) is written for the Generic Avionics Data Bus Tool Kit (GADBTK) version 1.1. The 
GADBTK is an Ada Technology Insertion Program (ATIP) sponsored effort to produce an Ada binding with the 
MIL-STD-1553B time multiplex serieal data bus. 




DTIC 

iBS-KCTE 
,JAN0 41993 


14 SUBJECT TERMS 



17. SECURITY CLASSIFICATION 

18. SECURITY CLASSIFICATION 

19. SECURITY CLASSIFICATION 

OF REPOSIT 

UNCLASSIFIED 

UNCLASSIFIED 

OF ABSTRACT 

UNCLASSIFIED 




16. PRICE CODE 


20. LIMITATION OF ABSTRACT 

UNCLASSIFIED 




NSN 7540-01-280-550 

























Software Users Manual 


For The 


Generic Avionics Data Bus Tool Kit 

Of The 

Ada Technology Insertion Program 


( 


Prepared For 

Ada Joint Program Office 


Prepared By 

Computer Technology & Simulation Department 
Systems Engineering Test Directorate 
Flight Test Engineering Group 
Naval Air Warfare Center / Aircraft Division 

17 July 1992 


92“33118 

11111111^09^ 


92 12 30 018 




1.0 SCOPE 


1.1 Identification 

This Software Users Manual (SUM) is written for the Generic Avionics Data Bus Tool Kit 
(GADBTK) version 1.1. The GADBTK is an Ada Technology Insertion Program (ATIP) 
sponsored effort to produce an Ada binding with the MIL-STD-1553B time multiplex serial data 
bus. 

1.2 System Overview 

The GADBTK is to produce an Ada binding to the 1553B standard by defining the hardware 
elements and data structures used in a 1553 data bus system in terms of the Ada language. These 
definitions will then be used to provide various building block components from which 1553 data 
bus applications may be constructed. Finally a bus monitw application will be constructed from 
the components as a proof of concept Initial target system for this project will be a Digital 
Equipment Corporation VAXStation 3200 series computer widi a Computer Technology & 
Simulation Dept developed Microprogrammable Multiplex Bus Interface (CTSD-MMBI). 

1.3 Document Overview 

This manual will detail the application interface to the 1553 • Ada binding, and the user interface 
to the bus monitor application. The document wUl be divided into two parts the first will show 
how an application programmer would use the interface. The second will detail the operation of 
the bus monitor application including how to start it, the commands available while using it, and 
how to shut it down. In the appendix a list of possible CTTor messages, their most likely cause, 
and the suggested remedy are provided. 


1 Aoeeaslon For 

J 

FTIS GRAM 

DTIC TAB 
Unannounced 
Justification_ 

□ 

□ 


KS‘0 

D^trlbu^on/ 


Availability Codes 


1 


Dial 


Avail acd/or 
Special 





2.0 Referenced documents 


/ 


2.1 Government Documents 

The follov.’ing documents of the exact issue shown fonn a part of this specification to the 
extent specified herein. In the event of conflict between the documents referenced herein and the 
contents of this specification, the contents of this specification shall be considered a superseding 
requirement 

STANDARDS: 

Military 

MIL-STD-1553B, 8 September 1986 Digital Time Division Command/Response 

Multiplex Data Bus 

MIL-STD-1815A, 22 January 1983 Ada Programming Language 
DOD-STD-2167A, 29 February 1988 Defense System Software Development 

OTHER: 

SDD for the Generic Avionics Data Bus Tool Kit, 4 October 1991 
SRS for the Generic Avionics Data Bus Tool Kit, 7 August 1991 

2.2 Non-Government Documents 

The following documents of the exact issue shown form a part of this specification to the 
extent specified herein. In the event of conflict between the documents referenced herein and the 
contents of this specification, the contents of this specification shall be considered a superseding 
requirement. 

STANDARDS: 

AA-EF88A-TE, February 1985 VAX Ada Programmer’s Run-Tune Reference 

Manual 

F-6/89- lOM, 1988 MII^STD-1553 Designer's Guide, DDCILC Data 

Device CoiporaticHi 

ISBN 0-442-23805-3,1989 Ada Quality and Style, The Software Productivity 

Consortium 

MFS Users Manual, Volume 3 Software Style Guide and Configuration 

Management 


2 





3.0 Execution Procedures 


3.1 Bus Interface 
a. Initialization. 

There are two steps to initializing the 1553 interface package. The first is to call the 
Seleci_Unit procedure to select a UNIBUS adaptor MMBI interface and data bus. Then call one 
of the three start procedures. 

An interface can only be used in one of the three modes (Remote Terminal, Bus 
Controller, Monitor) at a time. An interface being used as a remote terminal or a monitor can 
support several remote terminal addresses at a time. An interface can also only be connected to a 
single bus at a time. If more than one mode are needed from within a single application at the 
same time this can be achieved by using tlie Select_Unit procedure to toggle the context between 
different interfaces. A single application can also use the Select_Unit entry to maintain interfaces 
on multiple buses simultaneously. 

The Stan procedures do not modify the firmware load in the interface at the time they are 
invoked. Therefore it is the application’s responsibility to make any firmware naodifications 
necessary before calling Stait_. When using the (Computer Technology & Simulation 
Department’s MMBI interface the package MlCRC)CODE_1553 included in this tool kit can be 
used to interface with the firmware 

To use the Transmit, Monitor, Receive procedures they must be instantiated with a buffer 
type of the users preference, and either a command word or a status word. The buffer is a 
contiguous data structure the size of the number of words to transmit or receive. The buffer type 
can be whatever is best suited to the q)pIication as long as the memory is contiguous and the size 
is correct. The following table illustrates the type of bus word to use. 


Interface Mode 

i 

s 

Procedure 

Bus Word Type 

Bus Controier 

Remote Terminal 

COMMAND 

RESPONCE 

COMMAND 

RESPONCE 

Transmit 

Receive 

Receive 

Transmit 

Command_Word 

Status 

Command_Word 

Status 


b. User Inputs. 

Interfacc_Number 

Bus_Numbcr 

Unibus_Number 


AN_INTERFACE 

A_MFS_BUS 

A.UNBUS 


3 
















Rcmote.Tcrminal : A.REMOTE.TERMINAL.ADDRESS 
Dam : A_TRANSMIT_MESSAGE_BUFFER 

Bus_Word : A_BUS_OVERHEAD_WORD 

Form : MESSAGE_TYPE 

Subaddress : A_SUBADDRESS 

type A_TRANSM1T_MESSAGE_BUFFER 
type A_BUS_OVERHEAD_WORD 
type A_RECErVE_MESSAGE_BUFFER 
type A_MONITOR_MESSAGE_BUFFER 

c. System Inputs. 

Bus Dam: A_DATA_WORD; 

d. Termination. 

To terminate the bus interface call the Stop_ proceduTe(s) that conesponds to the Stan. 
procedure(s) that was/were called during initialization. 

e. Restart. 

Repeat the initialization procedure. 

f. Outputs. 

BUS_DATA_FORMAT_ERROR .exception; 

HARDWARE_FAILURE : exception; 

KERNAL_SYSTEM_ERROR : exception; 

RANGE_ERROR : exception; 

Status : out A_BUS_STATUS); 

Bus_Word : out A_BUS_OVERHEAD_WORD; 

Tline : out A_TIME_TAG; 

Command_Woiti : outA_DATA_COMMAND_WORD; 

Data out A_MONlTOR_MESSAGE_BUFFER; 

Status.Word : out A_STATUS_WORD; 

Tunc : out A_nME_TAG; 

3.2 Monitor Application 

a. Initialization. 

The only initialization necessary to run the software is making sure the default path 


4 





contains the data file PORTS_l 553. This file is necessary for the application to start processing 
but no hard coded path exists in the application so that different files could be used to change the 
configuration from machine to machine. 

b. User Inputs. 

HEX 

DECIMAL 
BINARY 
OCTAL 

PREFERED.DATA 
RAW.DATA 
RESET.DISP 
CANCEL_SELECnON 
RT 
QUIT 

c. System Inputs. 

n.a. 

d. Termination. 

Type Quit at the input prompt to terminate. 

e. Restart. 

See initialization. 

f. Outputs. 

Bus_Data in either priority mode display or raw data display. 

Status and error messages relating to the application. 

Prompts for more data to be supplied by user, 

3.2.1 Error Messages 

In general error messages preceded by a % follow the same general conventions as VMS. 
That means the first part of the enor ID is die subsystem that generated the error, die second pan 
is the severity, the third pan is the abbreviated message text, the final field is an english language 
description of the error. 

The format of this section of this document is to list the error, then on the indented lines 


Set Data Format Hex 
Set Data Format Decimal 
Set Data Format Binary 
Set Data Fexmat Octal 
Set Mode Prefered Data 
Set Mode Raw Data 
Refresh Display 
Stop Mentoring Selected RT 
Choose an RT 
Exit Program 


5 



that follow the possible cause and if applicable the remedy are listed 


%GETMSG-E-NOMESSAGE, unable to retrieve message text 

A system error has occurred and the system supplied message text can’t be loaded 
%DPMAN-I-PARTINTT, Dual_PtHt_Ram in use - partial initialization performed 
The dual port ram allocation program is not the first to map dual pwt 
This is not an error and should not be a cause for concern. It simply means someone else 
is also using the interfaces on this machine. 

%MON1553-W-UNTMPL, that command is not currently supported 

The command parser accepts all valid commands, however not all the valid commands are 
currently implemented in the executive. 

%GETSEL-E-CONSTERR, a selection parameter is out of range 

One of the values in an RT selector is out of the acceptable limits. 

Reselect the RT with new parameters. 

%SELECT-E-NOTINIT, an error occurred initializing RT# check process privileges 

The most likely cause of this error is the lack of sufficient process privileges to execute the 
application. When the application starts an RT it creates and maps a global section, to 

do this you need the VMS privileges PRMGBL, PHYMAP, CMEXC. If this error occurs 
exit the application, set the appropriate privileges, and restart the implication. 
%SELECT-E-INSUFMEM, insufficient memory for allocation of RT 

There is not enough dual port ram remaining to allocate another RT. This may be due to a 
lack of actual memory or the allocation table may simply be full. In cither case you will 
have to reconsider the amount of RTs being run on the Interface. 

%SELECT-E-PRMERR, parameter error, check bus and interface numbCTS 

The bus or interface number passed to the sclect_unit procedure are out of range. 
%INPAR-F-RNDZFAIL, Task input parser appears to have terminated abnormally 
_INPAR-l-ERRORAT, This error occurred at rendezvous KILL_PARSER in task PARSER 

An error occurred shutting down the application’s input task. Quit the application with a 
CTRL-Y if necessary and restart 

%PARSER-F-UNHDL£XPT, parser task is terminating due to an unhanded excqidon 
Some unanticipated user input has caused the parser task to die prematurely. Use 
CTRL-Y to exit 

%INPAR-F-UNHDLEXPT, error initializing IP_USER_COMMAND_INTERFACE package 
Some problem kept the input parser task fron starting. 

%OUTFM-F-RNDZFAIL, tasking error occurred shutting down display tasks 
During an application exit the display task exited abnormally. 


6 






%CLOCK-F-RNDZFAIL, task id TIMMER exiting due to error in rendezvous 
Probably caused by the display task dying due to an error. 

OUTFM-F-CONSTERR, task id FORMATTER died due to constraint error 
Some data that was to be displayed was out of bounds. 

OUTFM-F-TASKNERR, task id FORMATTER died due tc ^asking error 

Some type of erroneous program state developed. Restart the application. 

Bad data entered, please try again 

The type of data entered by the user was inconsistent with the type expected. 

Sub Address out of range (0..31) 
enter a value from 0 to 31, 

Remote Terminal out of range (0..31) 
enter a value from 0 to 31. 

Queue limit reached. Please wait 

The command input que is full, processing input will continue as soon as the que has 
space available. 

ERROR IN COMMAND, Pleae try again 
Command syntax was incorrect. 

CHARACTER ERROR, Please reenter command 

An invalid Ada character was entered from the command line. 

NUMBER ERROR ON DATA FOR SA,BN, OR RT 

One of the selection parameters contained a non numeric character. 

Prompt number not reconized 

An invalid prompt string was requested. This is an internal error and should be ignored 
by non developers. 

Invalid Entry 

The data entered does not match the expected input. 

Input string to long 

The length of the text typed exceeds the length of the input buffer. 


7 










4.0 NOTES 

4.1 Definition Of Terms and Abbreviations 


AN/AYK 

(Navy standard embedded mission processor) 

ATIP 

Ada Technology Insertion Program 

BC 

Bus Controller 

CSCI 

Computer Software Configuration Item. 

CSU 

Computer Software Unit 

crsD 

Computer Technology and Simulation Department 

DCL 

Digital (Command Language 

DEC 

Digital Equipment (joiporation 

GADBTK 

Generic Avionics Data Bus Tool Kit 

RT 

Renx>tc Tcnninal 

UART 

Universal Asyncronous Receiver / Transmitter 

VAX 

Virtual Address Extension (DEC mini computer architecture) 

VMS 

Virtual Memory System (VAX operating system) 


8 







