20 09 5 


AD-A278 377 STATION PAGE 


form ApDrc\ec 
MB ft/C o^cj ctse 


Ml TS • “OW'oe*f^CigO’r^ tf*e I*C' “ ■ 

c?l»MtiCn 0^ Vena cC'n'^enij reaJ^drc \ OM'Se** env —jie c* 

jfoe** t; A»»n»naten "••oogj'ie'% Ve'v«ces. C-fec:?f#te'O' Ooe'^'^^r^s <»“a • 

. u**‘?e o* Mene9e*«ent ano iuo?e* p»Deri**cf^ Heown'cn e'eien ;?^C4-r *8Sl . 


1. AGENCY USE ONLY (LMve blink) I 2. REPORT DATE 


4. TITLE AND SUBTITLE 


3. REPORT TYPE AND DATES COVERED 

FINAL/01 NOV 90 TO 31 OCT 93 


5. FUNDING NUMBERS 


PROGRAM COMPOSITION (U) 


6. AUTHOR(S) 

Professor K. Chandy 


7. PERFORMING ORGANIZATION NAME(S) AND AOORESS(ES} 

California Institute of Technology 
Computer Science 256-80 
Pasadena, CA 91125 


9. SPONSORING/MONITORING AGENCY NAME{S) AND AOORESS(ES) 

AFOSR/NM ^ 

110 DUNCAN AVE, SUITE B115 r\ I 

BOLLING AFB DC 20332-0001 1 


OTIC 

ELECT E 


2304/A2 
AFOSR-91-0070 


8. PERFORMING ORGANIZATION 
REPORT NUMBER 


OSg.^. ^16 


10. SPONSORING/MONITORING 
AGENCY REPORT NUMBER 

AFOSR-91-0070 


11. SUPPLEMENTARY NOTES 


IZa. DISTRIBUTION/AVAILABILITY STATEMENT 



12b. DISTRIBUTION CODE 


APPROVED FOR PUBLIC RELEASE: DISTRIBUTION IS UNLIMITED 


13. ABSTRACT (Maximum 200 words) 



Work done under this grant falls under four main areas: (1) Theory of Concurrent 
Systems - has led to much simpler ways of demonstrating the correctness of 
concurrent programs, (2) Use of Ada in Parallel Programming - exploring simple ^ 
extensions of Ada that would make it suitable for shared-memory multiprocessor 
machines, (3) Parallel Pradigra Integration - researchers developed softvrare and 
methods that help in developing large parallel applications incorporaating both ^ 
functional and data parallelism, (4) Language Development - this grant initiated 
work on PCN (Program Composition Notation), a very si.mple language for composing 
programs in Fortran and C;PCN has been ftp'd at over 300 sites, including Air Force 
Laboratories, and is being used at several universities for teaching parallel 
programming. 


lync; '"TT4T;rr¥ n- '-'^''Tr;D a 


IS. NUMBER OF PAGES 


16. PRICE CODE 


17. SECURITY CLASSIFICATION 18. SECURITY CLASSIFICATION 19. SECURITY CLASSIFICATION I 20. LIMITATION OF ABSTRACT 

OF REPORT OF THIS PAGE OF ABSTRACT I 

UNCLASSIFIED UNCLASSIFIED UNCLASSIFIED iAR(SAME AS REPORT) 



NSN 7540-01-280-S500 


Standard Form 298 (Rev 2-89) 

by ANVJ V!d 








































5 7 tsjj 


030 



AfOffllS. () 4 0 1 6 £ 


Final Technical Report 
AFOSR 91-0070 
Program Composition 


Approved for public release; 
distribution unlimited# 


K. Mani Chandy 
California Institute of Tech’^ology 

31 January 1994 




1 


1 Work on this Grant 


The earlier work done under this grant falls under four main areas; 


Theory of Concurrent Systems This research has led to much simpler 
ways of demonstrating the correctness of concurrent programs. This 
work shows that a small set of rules, similar to those in existing theorem 
provers, can be used to reason about parallel programs. 

Papers partially supported by the grant include: 

1. K.M. Chandy, “Properties of Concurrent Programs,” to appear in 
Formal Aspects of Computing Science, 1994. 

2. K.M.Chandy and B.A.Sanders, “Conjunctive Predicate Transform¬ 
ers for Reasoning about Concurrent Computation,” Technical Re¬ 
port 197, ETH Departement Informatik, 1993, submitted Science 
of Computer Programming. 

3. K.M.Chandy and B.A.Sanders, “Compositional Reasoning about 
Safety and Progress Properties for Message Passing Systems,” 
submitted Conference on Formal Methods, 1994. 

4. K.M.Chandy and B.A.Sanders, “Compositional Proofs of Concur¬ 
rent Systems,” in preparation. 

5. U.Binau, “Distributed Diners: From UNITY Specification to CC-I—H 
Implementation,” Caltech Computer Science Tech. Report, CS- 
TR-93-20. 


Use of Ada in Parallel Programming Our attempts at integrating sci¬ 
entific numeric computation within larger embedded reactive systems, 
led us to explore the use of Ada. Our reasons for choosing Ada cis a 
language for exploration are: 


1. Ada is the language of choice for many DoD applications. 

2. Ada is a standardized concurrent programming language. 

3. Many reactive applications have been written in Ada. 




Our emphasis was on exploring simple extensions of Ada that would i 
make the language suitable for shared-memory multiprocessor machines. 


2 


./ 


Diet 


.1 A 


aod/*r 

I 


I 




□ □ 







We developed a simple extension, implemented a simple (though some¬ 
what inefficient) compiler for the extension, and developed and proved 
several programs using the extension. The focus of the Ada applica¬ 
tions was on a functional template that allowed sequential programs to 
be transformed into parallel programs in a simple systematic way. 

Papers on this topic include: 

1. J. Thornley, “Parallel Programming with Declarative Ada,” Cal¬ 
tech Computer Science Tech. Report, CS-TR-93-03. 

2. J. Thornley, “The Programming Language Declarative Ada Refer¬ 
ence Manual,” Caltech Computer Science Tech. Report, CS-TR- 
93-04. 

3. J. Thornley, “A Collection of Declaiative Ada Example Programs,” 
Caltech Computer Science Tech. Report, CS-TR-93-05. 

4. J. Thornley, “Functional Parallel Programming with Ada,” to be 
submitted to TriAda, 94. 

Parallel Paradigm Integration. We developed software and methods 
that help in developing large parallel applications that incorporate both 
functional and data parallelism. A particular emphasis was on applica¬ 
tions with a task-parallel framework where units within this framework 
were data-parallel. Such applications arise in digital signal processing 
and many other areas. 

We developed a method of integrating Fortran with PCN to obtain an 
integrated task and data parallel programming system, and developed 
a few applications using the system. The applications fit an overall 
template in which the program structure is data-parallel and the nodes 
within the program are task-parallel. 

We also did research on integrating functional programming with im¬ 
perative parallel programming. Functional programming has the ad¬ 
vantage of having clean semantics, but a very small percentage of air 
force personnel use functional programming languages. We developed 
and then implemented systematic transformations from functional pro¬ 
grams to parallel programs in C-f-h, thus having the advantages of func¬ 
tional specifications and implementations in languages that are more 
familiar to DoD. 


3 








Papers in this area include: 

1. B. Maissingill, “Integrating Task and Data Parallelism,” Caltech 
Computer Science Tech. Report, CS-TR-93-01. 

2. J. Thomley, “Integrating Functional and Parallel Programming: 
CC++ Solutions to the Salishan Problems,” submitted to IPPS, 
1993. 

Development of Templates We developed three templates for mesh com¬ 
putations, spectral computations and divide <ind conquer. We have 
parallelized a large airshed quality model that predicts smog (over 30 
separate pollutants) in the L.A. basin; this parallelization was done 
using the spectral tempate. We are parallelizing a fluid dynamics ap¬ 
plication using the mesh template, and we have parallelized several 
combinatorics applications using the divide and conquer template. At 
this point, we are working with people in other departments (specifi¬ 
cally Applied Mathematics) in completing performance measurements 
prior to publishing the results. 

Language Development This grant initiated the work on PCN, Pro¬ 
gram Composition Notation. The last release of PCN was ftp’d at over 
300 sites, including airforce laboratories. Several universities, including 
Caltech, use PCN for teaching parallel programming. The book. In¬ 
troduction to Parallel Programming, specifically mentions grants from 
AFOSR for supporting the work on PCN. 

The focus of PCN was to develop a very simple language that could be 
used to compose programs in Fortran and C. We wanted to implement 
a language with just four statements: parallel composition, sequential 
composition, choice and recursion. The use of PCN in several institu¬ 
tions is an indication of the simplicity of the language. 

Another goal of PCN was to develop applications transportable across 
a wide range of architectures. It is now executed on networks of work¬ 
stations, multicomputers and shared-memory multiprocessor systems. 

PCN is a success in the sense that it is used quite widely for teaching 
and research, and it is a simple language with cletm semantics. We are 
now using ideas from PCN to develop parallel extensions of Fortrcin, 


4 





C-H- and Ada; we expect these implementations to be much more 
widely used because of the prevalence of the base languages. 

K.M.Chandy, and S.Taylor, An Introduction to Parallel Programming, 
Jones and Bartlett, Publishers, 1992. 


2 Technology Transfer 

PCN PCN has been used in a variety of sites including airforce laborato¬ 
ries, Argonne National Laboratory and the Aerospace Corp. It continues to 
be available from Argonne by ftp, and remains in wide use. 

Collaboration with Phillips Laboratories Ms. Berna Massingill, a 
member of the group at Caltech, spent part of her summer at Phillips Air 
Force Labs in Albuquerque. She worked on archetypes for electromagnetics 
codes, and has been parallelizing one particular code of interest to Phillips. 

Collaboration with Rome Laboratories Ms. Milissa Benincasa and 
Carla Burns have been working with Mani Chandy on software engineering 
methods for parallel program development. We expect to publish a paper in 
early 1994 describing our results. 

Satellite Design Ms. Massingill is working with JPL on a multidisci¬ 
plinary integration of CAD tools for satellite design. We expect to use this 
effort to help us develop archetypes for multidisciplineiry CAD applications. 

Environmental Engineering The spectral archetype heis been used to 
psu’allize smog model code. This code was developed by Prof. Seinfeld, and 
Donald Dabdub at Caltech, and our group showed how templates could be 
used to simplify development. The code runs on the IBM SPl, and was 
demonstrated at Supercomputing 94. 

Computational Fluid Dynamics We are now working with Prof. Dan 
Meiron on using templates for fluid dynamics. We expect to have a complete 
application with graphics and animation by the end of January. 


5 








