Specific Signal Processors 
(RASSP) 



Naval Research Laboratory 


SANDERS^ 

A Lockheed Martin Company 



19960122 02 ' 


Approved for public release; distribution is unlimited. 


Document #AVY-L-R-00252-101-A 


betc 










*Finar 

(3rd) 



22 Decemberl 995 


Submitted by: 


Under Contract: 


Lockheed Sanders, Inc. 
Hughes Aircraft 
Motorola 
ISX Corporation 

N00014-93-C-2172 


SANDERS 

A Lockheed Marlin Company x 


CLIN 0004AG, Seq. No. A007 

Advanced Research Projects Agency 
3701 North Fairfax Drive 
Arlington, VA 22203-1714 

Naval Research Laboratory 
4555 Overlook Avenue 
Washington, DC 20357-5347 


P.O. Box 868 
Nashua, NH 03061-0868 


Approved for public release; distribution is unlimited. 


Document #AVY-L-R-00252-101 -A 






Table of Contents 


1 

Purpose 

1-1 


2 

RASSP Design Environment 

1-1 


2.1 

Physical RDE Architecture 

1-1 


2.2 

Enterprise Framework 

1-2 


3 

Current RASSP Design Environment - Build 5 

1-4 


3.1 

Component Communications 

1-4 


3.2 

Desktop 

1-5 


3.3 

Problem Reporting 

1-5 


3.4 

User Support Utility 

1-5 


3.5 

Task Manager 

1-5 


3.6 

Metric Browser 

1-5 


3.7 

Review Tool 

1-6 


3.8 

Product Structure Editor 

1-6 


3.9 

Remote Data Access 

1-6 


3.10 

Source Reuse Utility 

1-7 


4 

Process Management 

1-7 


4.1 

Process Management Vision 

1-7 


4.2 

Process Management Paradigms 

1-7 


4.2.1 

Routing 

1-7 


4.2.2 

Enactment 

1-8 


4.3 

Process Terminology 

1-8 ! 

i 

For 

NT IS 

4.3.1 

Project 

1-9 ! 

1 

1 

miC fiB r 

\]neizy u 0 un f,' e C 

4.3.2 

Process 

1-9 1 

j 

Just .a X Si ax. _ 

4.3.3 

4.3.4 

Activity 

Task 

1-10 

i 

1-11 

Ev .. . 

Slst-ibutlo;-/ 


Dlst j 


4.3.4 


Task 


nir 






4.4 

Process Management Lifecycle 

4.4.1 

Describe Processes 

4.4.2 

Reference Processes 

4.4.3 

Product Requirements 

4.4.3.1 

Create Plan 

4.4.3.2 

Tailor Process 

4.4.3.3 

Process Composition 

4.4.3.4 

Too! selection 

4.4.3.5 

Interface Modification 

4.4.3.6 

Product Structure Definition 

4.4.3.7 

Event-Action Definition 

4.4.3.8 

Create Schedule 

4.4.4 

Enact Process 

4.4.5 

Product and Data 

4.4.6 

Monitor 

4.4.7 

Metrics 

4.4.8 

Adapt Plan 

4.4.9 

Predict Outcome 

4.4.10 

Improve Process 

4.5 

Process Management Requirements 

4.5.1 

Distributed Operation 

4,5.2 

Multi-Platform 

4,5.3 

Maintain Process State 

4.5.4 

Signal Events 

4.5.5 

Process Deviations 

4.5.6 

Provide Audit Trail 







4.5.7 


Monitor Process 


1-18 


4.5.7.1 

Capture Metrics 

1-18 

4.5.7.2 

Provide Thermometers 

1-18 

4.5.7.3 

Obtain Status 

1-18 

4.5.8 

Adapt Process 

1-18 

4.5.9 

Response Time 

1-19 

4.5.10 

Off-Line Operation 

1-19 

4.5.11 

Other Requirements 

1-19 

4.6 

Architecture 

1-20 

4.6.1 

Task Manager 

1-20 

4.6.2 

Event Manager 

1-20 

4.6.3 

Microsoft Project 

1-20 

4.6.4 

Mentor's FlowXpert 

1-20 

4.6.5 

Other Functional Components of Process Management 

1-21 

5 

Data Management 

1-21 

5.1 

Distributed Communications 

1-22 

5.2 

RASSP Engineering Database 

1-24 

5.2.1 

Outside of the Scope the RASSP Engineering Database 

1-25 

6 

RASSP Network Communications 

1-26 

6.1 

Distributed Network Goal 

1-26 

6.2 

Current Network Architecture of the Lockheed 

RASSP Partners 

1-26 

6.3 

Network Infrastructure Hardware and Software 

1-27 

6.3.1 

Commercial Internet Providers 

1-27 

6.3.2 

Firewall Configurations 

1-27 

6.3.3 

User Applications 

1-28 

6.3.3.1 

Email 

1-28 



6.33.2 

FTP Server 

1-28 

63.3.3 

Shared Filesystems 

1-29 

6.3.3.4 

World-Wide-Web Capabilities 

1-29 

6.3.3.5 

Videoconferencing 

1-29 

6.4 

An Internet NFS Server 

1-30 

6.5 

How to Create an NFS Server 

1-30 

7 

Engineering Environments 

1-31 

7.1 

VFIDL Tool Environment 

1-31 

12 

Ada Tool Environment 

1-31 

8 

Appendix A - RDE User’s Guide 

1-32 


List of Figures 


Figure 1 

Physical RASSP Environment 

1-2 

Figure 2 

Original RASSP Enterprise Framework 

1-3 

Figure 3 

Example Sub-Process Diagram from RASSP Bmk 3 Process 

1-10 

Figure 4 

RASSP Process Management Life Cycle 

1-12 

Figure 5 

RDE Database/Communications Architecture 

1-22 

Figure 6 

RDE Information Model 

1-25 

Figure 7 

Physical Topology of RASSP Team Network 

1-27 


Table 1 

List of Tables 

Current RASSP Design Environment - Bid 5 

1-4 

Table 2 

Sanders Firewall Services 

1-28 



Lockheed Sanders - Hughes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2172 


1 Purpose 

The purpose of this document is to describe the Lockheed Sanders Team RASSP Design Environ¬ 
ment (RDE). The RDE provides a working environment to support users of the RASSP process to 
develop signal processing systems more quickly and with greater quality than was previously 
achievable. The RDE is a CAD tool-independent process management system that supports dis¬ 
tributed development. This document describes the RDE and the components that make up the 
environment. 

The predecessor of this document was the Annual CAD System Description Document. It was 
renamed this year to be the RDE System Description Document because the focus of the Sanders’ 
RASSP program is on the RDE and the building of an environment that supports distributed 
development. The CAD tools used by the Demonstration and Benchmark teams are commercial 
tools that are widely known by the electronic design developers, so are not described in this docu¬ 
ment. Instead, this document completely describes the development and features of the RDE. 

2 RASSP Design Environment 

The RDE is a set of commercial and RASSP developed components that facilitate the develop¬ 
ment of electronic systems in a distributed environment. The RDE supports a heterogeneous com¬ 
puting environment, links between geographically diverse locations, tailorable configuration 
management, and exchange of product information between the many varied disciplines. This 
supports an improved product development process allowing for rapid iterations, incremental pro¬ 
motion, and scalable configuration management controls. 

This section will provide the physical description of the RDE and discuss the RDE software com¬ 
ponents. The RDE is being developed iteratively with a series of builds. The RDE is scheduled for 
10 builds during the four years of the RASSP program. The development of each build is three to 
five months in duration. At the end of each build, the components are integrated with each other 
and released to each of the team members to use. The requirements for the next build are devel¬ 
oped based on the long term vision of the RDE and from feedback from the users of the RDE. 
This document represents information from Build 5 of the RDE. 

2.1 Physical RDE Architecture 

The RDE was designed to support concurrent development of signal processing systems. This 
environment allows a team of engineers and managers to work together on a project from geo¬ 
graphically different sites and using different platforms. The RDE hardware architecture consists 
of heterogeneous computers and high-speed data communication networks. It is a geographically 
distributed architecture consisting of Unix workstations, file servers, IBM compatible PCs, and 
Mclntoshes, all interconnected via communication networks. Groups within companies are elec¬ 
tronically connected by a Local Area Network (LAN), and are connected to other groups or com¬ 
panies over a Wide Area Network (WAN) using Internet. The largest issue about connected WANs 
together is to overcome the security issues to protect one’s data from unauthorized access. The 
details of how the Sanders RASSP network is set up is described in Section 6. 


RASSP Annual RDE System Desc. 


1/4/96 


Lockheed Sanders - Hughes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2172 


Currently, we have been focusing on Sun Unix stations as the preferred platform using the X- 
Windows system. The current RDE is running on SunOS 4.x. but is being ported to Solaris. There 
are long term plans to port to HP. As the RDE is ported to each platform, the previous platforms 
will also be supported. When the RDE has been ported to Solaris, it will be made COSE Common 
Desktop Environment (CDE) compliant. 

Euture plans are being made to provide many of the RDE services using a World Wide Web 
(WWW) browser such as Netscape. This will immediately allow us to achieve the goal of having 
a multi-platform environment. 


~i r 



2o2 Enterprise Framework 

The Lockheed Sanders RASSP team has invested much time searching for an Enterprise Erame- 
work (EFW) that could be used as the electronic framework to the RDE. This started with an orig¬ 
inal setup of requirements that were generated by the RASSP Systems Engineering team. A 
Request For Information was sent to vendors who were thought to have a solution to the EFW. 
From the nine vendors that responded, four were selected for a product demonstration and discus¬ 
sion with them. Two vendors were downselected for an in-hou.se evaluation of their product. The 
result was that the best met only 50% of the original requirements ba.sed on the test procedure that 


RASSP Annual RDE System Desc. 


1-2 


1/4/96 

















Lockheed Sanders - Hughes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2l 72 


was developed. Since that time, we have been putting together the components from commercial 
utilities as well as developing our own services where commercial solutions were not available. 

The EFW focused on five areas as shown in Figure 2. These areas are 

• Data Management 

• Workflow Management 

• User Interface 

• Communications Management 

• Tool Encapsulation 



The RDE has most recently focused in two areas, Process Management and Data Management. 
Process Management has grown out of Workflow Management as our idea of process has 
evolved. Process Management contains several parts of which Workflow Management is one. 
RASSP is a process program and a section of this document is devoted to Process Management. 

The other major area that we are focusing on is Data Management. A complete description of 
Data Management is described in this document. This section describes the current RDE. 


RASSP Annual RDE System Desc. 


1-3 


1/4/96 








Lockheed Sanders - Hughes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2l72 


3 Current RASSP Design Environment - Build 5 


This is the fifth of ten scheduled builds of the RDE. It is the goal of the RDE to support the devel¬ 
opment of signal process systems with a geographically distributed team. All the components that 
make up the RDE have this in mind, and support distributed control or access. 

The RDE is comprised of a series of components and services. The RDE has a major focus on 
Process Management and Data Management. The following sections will briefly de.scribe the 
major components of the RDE. A more complete description of these components can be found in 
the “RDE User's Guide” of Appendix B. 


Table 1: 


General Services 

Process Management 

Data Management 

Component Communications 

Task Manager 

Product Structure Editor 

Desktop 

Metric Browser 

Remote Data Access 

Problem Reporting 

Review Utility 

Source Reuse Utility 

User Support Utility 




Communication utilities and services that are public domain or can be obtained commercially are 
discussed in the Network Communications section of this document, Section 6. 


3.1 Component Communications 

The communications between the RDE components is done by sending ToolTalk messages to an 
RDE bulletin board. Any component in a session can post a message to the bulletin board. If 
another component has subscribed to that message, it will be notified with a ToolTalk message. As 
a new component enters the session, it can query the bulletin board for the desired information. 

The RDE will use COSE ToolTalk as the messaging system to communicate between components 
of the RDE. Some messages are RDE defined, and others are standard messages defined by CFI. 
The ability to send messages to commercial tools depends on whether the tool supports the stan¬ 
dard messages. The messages that the RDE currently uses are listed below. 

° Current project 
° User 

o Current working directory 
” Current process phase 

Other messages that will be u,sed when converting to COSE CDE are listed below. 

® Launch Tool 
“ Tool successfully initialized 
° Tool has finished execution 
° Check file into database 


RASSP Annual RDE System Desc. 


1-4 


1/4/96 





Lockheed Sanders - Hughes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2172 


3.2 Desktop 

The RDE Desktop Utility provides a desktop strip menubar which allows users to navigate the 
RDE, access RDE Utilities and Services, and launch encapsulated COTS Tools. 

The RDE is an environment shell in which working conditions can be customized and tools can 
be accessed and launched. The way that categories are set up is remembered from session to ses¬ 
sion, in regards to the categories that are defined, which tools are in those categories, and the posi¬ 
tion and size of those category tool palettes. 

3.3 Problem Reporting 

The Problem Report Utility provides the ability to submit problem reports for use by the Problem 
Management System. A key challenge of development teams is to effectively identify, contain, 
and resolve development problems. The Problem Management System facilitates the handling of 
problems throughout the product development lifecycle. Remote access to the Problem Manage¬ 
ment System facilitates problem management for the geographically diverse IPPDT and the Vir¬ 
tual Corporation. Problem Report data is available for metrics collection and display. Reporting is 
quick and easy and the system automatically informs the responsible parties and sends appropri¬ 
ate problem notifications. 

3.4 User Support Utility 

The User Support Utility is a WWW based page that contains information for the RDE user. This 
information is a set of hyperlinks to information including bug alerts, RDE Users Guide, and 
newsgroup interface for group RDE discussions. This web page can be accessed from the RDE 
help menu. 

3.5 Task Manager 

The Task Manager is a tool that is used by engineers and managers on a project to keep track of 
and report on their tasks. The task manager can assign the activities of a schedule to individuals 
on a project, and allow tasks and subtasks to be created. Each user has their own list of tasks, and 
is notified when new tasks are assigned to them. When a task is completed, the use indicates that 
the activity is done. A report of the current status of the project can be viewed at any time by man¬ 
agers or engineers. 

3.6 Metric Browser 

The Multi-Metric Browser Utility provides the ability to access and display metric data. The RDE 
automates data collection and metric generation. Customizing metrics provide any IPPDT mem¬ 
ber with useful data and feedback. The Multi-Metric Browser retrieves data on request from the 
RDE database to populate the desired users form or report. 

The database is populated by the metric generators. Metric generators are normally run as a cron 
job. Currently, four major metric reports are available through the browser: code size, number of 
open problem reports, number of closed problem reports, and review packets created. 


RASSP Annual RDE System Desc. 


1-5 


1/4/96 




Lockheed Sanders - Hushes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2172 


3.7 Review Tool 


The Review Utility supports and automates the entire review process. Consistently accurate Tech¬ 
nical Peer Reviews help ensure compliance with the development process and a mature, quality 
product. Review data is encapsulated in a Review Package, maintained throughout the review' 
process. The Review Utility facilitates on-line review by geographically dispersed reviewers. The 
review leader and all the reviewers are selected through the utility. The Red Lining feature dis¬ 
plays the markups from all the reviewers and allows for new markups. By having different colors 
represent each reviewer, it is easy to see and identify and to block out any of the comments or 
markups made. The review members are notified through e-mail of the status of their review 
packages. Utility data is also available for metrics collection and display. 

3.8 Product Structure Editor 

The Product Structure Editor provides the ability to structurally organize the elements of a prod¬ 
uct. It allows the graphical representation of the hierarchy of a product including source code, 
documentation, and images and stores the data and the mapping of the data into a database. The 
users define all the object types, actions on those types, tools for those actions, formats for the 
tools, and possible relationships between objects. The structures can be created in the hierarchy 
view, which displays the structure in a parent-self-children format. Other views are available to 
represent the structure, they include an information view', which displays the information of the 
center element, and a relation view, which displays the relationship of the elements in the struc¬ 
ture. 

This utility provides an organized method of maintaining the product data over its lifecycle. 
Source and document versions are handled through the check in and check out options. The data¬ 
base itself can be backed up through the export/import options. And. the database infoiTnation on 
the structure can be easily viewed by all interested individual at all stages of development. 

3.9 Remote Data Access 

The Remote Data Access Utility(RDA) provides access to remote configuration-controlled data 
repositories which house the distributed RDE database. This multi-platform client/server software 
for accessing the RASSP database currently runs on Macintosh. Unix, and Windows platforms. 


The RDA consists of a Server, a Service Broker, and a Client. The Server registers itself with the 
broker and waits for a client. The broker maintains the list of available servers. When a client asks 
the broker for a server and receives the necessary information to connect to one, the server then 
disconnects itself from the broker and spawns a new server. The new' server registers itself with 
the broker and waits for the next client. 


RASSP Annual RDE Sy.stem Desc. 


1-6 


1/4/96 





Lockheed Sanders - Hughes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2172 


3.10 Source Reuse Utility 

The Reuse Utility provides the ability to populate, query, and update the reuse database. The reuse 
of components from previous development efforts helps reduce cycle time. Reuse Management 
capabilities and remote database synchronization facilitate reuse for the IPPDT and the Virtual 
Corporation. 

The rest of the original five areas of the EFW, User Interface, Communications Management, and 
Tool Encapsulation, are general services that are common to both the Data Management and Pro¬ 
cess Management areas. The only work continuing in the general services area will be to support 
the needs of Process Management and Data Management. 

4 Process Management 

This service facilitates the encapsulation and integration of tools for inclusion in the RDE. Tools 
will be encapsulated without requiring the vendor to change their tool. This enables a heteroge¬ 
neous set of tools to work together. 

4.1 Process Management Vision 

Process Management provides automated, distributed capabilities for presenting the RASSP pro¬ 
cess on-line, assisting users in executing the process, and tracking progress against the process. It 
also provides integrated capabilities for collecting, analyzing, and displaying process and product 
metrics. Product developers and managers will have capabilities for event notification, task status- 
ing, and process compliance assistance and assessment. They will also have capabilities for 
dynamically viewing history and actuals against plan and requirements. These automated, distrib¬ 
uted capabilities will increase situation awareness and improve decision making by enhancing the 
quality and timeliness of communication. By providing a minimum level of discipline, they will 
also facilitate concurrent development. This will reduce wait time, avoid unnecessary effort, and 
result in reduced cycle time. Furthermore, the capabilities for tracking and measuring progress 
can provide process improvement insights. 

4.2 Process Management Paradigms 

There are two basic process management paradigms, routing and enactment. RASSP focuses on 
the enactment paradigm. However, since routing is essentially a constrained subset of enactment, 
RASSP actually focuses on both. 

4.2.1 Routing 

The Routing Paradigm is used primarily in financial, business, and administrative environments. 
Routing is applied to paper and electronic "forms" or "documents". Some examples are problem 
reports, purchase orders, change requests, and technical reports. Typically, each form is routed 
sequentially through a well-defined series of steps that include conditionals to handle different 
cases. Not accommodated, however, are process innovation, process iteration, and the addition of 
new steps in response to changing conditions. 


RASSP Annual RDE System Desc. 


1-7 


1/4/96 


Lockheed Sanders - Hughes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2172 


Routing is characterized by a fixed set of steps, each of which is specific and well defined (what is 
performed and how it is performed). Also, all "forms" of a given type follow the same process. 
Although there may be many possible routes for a form to follow through the process, the process 
itself is static. It is somewhat analogous to a map since one can follow many routes but cannot 
change the existing roads or cities. This paradigm is appropriately rigid about how "forms" are 
processed. 

4o2,2 Enactment 

The Enactment Paradigm is employed in engineering and other creative environments. Enactment 
is applied to product designs and other conceptual objects. Some examples are electronic prod¬ 
ucts, software tools, and mechanical devices. Typically, each object is developed by following a 
tailored set of activities (a process) formulated to meet the object's functional and performance 
requirements. An object evolves as it moves through the process, starting in a highly abstract form 
and ending in a fully realized form. Furthermore, objects move through the activities in a non- 
deterministic way, making many local iterations based on innovative choices and experimental 
results. Finally, decisions about which activities are present within the process and the details of 
what is performed during an activity are often made at the time a sub-process or activity is initi¬ 
ated, since only then is enough information known to determine such details. Thus, for enactment, 
a process can be dynamic. 

Enactment is characterized by a set of activities, each of which is defined by sets of entry and exit 
criteria, and an added-value transformation that is applied to the inputs to create the outputs. Typ¬ 
ically, the transformation includes synthesis and validation steps. The specific set of steps and 
their order of application for accomplishing an activity is not necessarily specified. Essentially, 
each activity is a well defined, well-bounded problem with a clear definition of "done", with the 
exact method of solving the problem left to the performer. This paradigm is appropriately flexible. 
It accommodates innovation, creativity, and experimentation (e.g., trade studies). 

Enactment is also characterized by its recognition that the entire product development process 
cannot be known ahead of time. The process and product evolve together. Decisions made while 
enacting early activities determine many of the downstream activities. For example, packaging 
decisions that are made early in a process determine whether downstream sub-processes will be 
needed for module, ASIC, or FPGA design. 

4o3 Process Termiiiology 

We know of no standard terminology for describing and discussing processes. Without defini¬ 
tions, it is expected that the meanings of these terms would be different between individuals and 
would be influenced by the roles of the individuals enacting a process. Therefore, to avoid confu¬ 
sion and provide clarity, the words “Project”, “Process”, “Activity”, and “Task”, as used by 
RASSP. are defined here. They are used consistently within our documentation, presentations, and 
implementations (such as our web process pages). These definitions relate to experiences on 
RASSP and we will use RASSP examples for illustrations. 


RASSP Annual RDE System Desc. 


1/4/96 



Lockheed Sanders - Hughes Aircraft - Motorola - ISX Contract #N00014-93-C-2172 

4.3.1 Project 

A project is an undertaking, requiring concerted effort, that consumes resources and delivers a 
product. A project is more than just a process. A project contains tailored process instantiations, 
schedules, resources (people, tools, facilities, etc.), costs, contractual agreements and more. A 
given project may have several processes or sub-processes (e.g., a unit process, a board process, 
and a software development process). 

4.3.2 Process 

In simple terms, a process is a series of operations performed in the making or treatment of a 
product. A process can be hierarchically decomposed into smaller sub-processes down to the bot¬ 
tom or leaf level operations that are called activities. Sub-processes are collections of activities 
and other sub-processes, grouped together to simplify understanding of the whole process. 

Hierarchic grouping can be performed many different ways, but as long as the set of activities 
does not change, all the possible hierarchic groupings are, in fact, the same process. For an exam¬ 
ple sub-process, refer to Figure 3 which contains a RASSP Benchmark 3 process diagram. Here, 
sub-processes (further decomposed in other diagrams) are indicated by shadowed boxes, activities 
are portrayed by plain boxes, and data flows are represented by arrows. Diagrams like this one do 
not contain a complete description of a sub-process. However, it is a convenient method for assist¬ 
ing understanding. 


RASSP Annual RDE System Desc. 


1*9 


1/4/96 


Lockheed Sanders - Hughes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2172 



Figure 3: Example Sub-Process Diagram from RASSP Benchmark 3 Process 


4.3o3 Activity 

An activity is the effort represented by a leaf level operation in the hierarchic decomposition of a 
process. Consistent with the enactment paradigm, an activity is a well defined, well-bounded 
problem with a clear definition of "done". The exact method of solving the problem is left to the 
performer who is considered a knowledgeable, competent professional capable of performing the 
work without detailed, step-by-step in.structions. 

When formulating a process, it is sometimes difficult to know when to stop decomposing the pro¬ 
cess and settle upon the final set of leaf level activities. We refer to this problem as the "level of 
detail problem". Guidance for solving this problem is beyond the scope of this document. How¬ 
ever, we have chosen an activity to be a unit of managed work, or, in other words, a well-defined 
unit of work that a manager wishes to track without further decomposition. Furthermore, for us, 
there is conceptually a one-to-one mapping of activities in the process to line-items in a project- 
schedule s Gantt chart. Thus, activities are the lowest level of cost accounting, metrics reporting, 
and data package generation of concern to the manager. Also, activities can'be formulated sucTi 
that their outputs are at critical boundaries w'here data packages are passed between organizations 
or software tools. These boundaries can also be phase containment boundaries, beyond which 
errors are considered defects. 


RASSP Annual RDE System Desc. 


1-10 


1/4/96 









Lockheed Sanders - Hughes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2172 


Each activity is defined by its inputs, outputs, entry criteria, exit criteria, tool set, tasks, and per¬ 
former types (e.g., roles, expertise). An activity cannot begin until its entry criteria are satisfied. 
An activity cannot completed until its exit criteria are satisfied. 

Often, an activity's entry criteria is simply the availability of its inputs. It can also be a complex 
set of conditions including partial sets of inputs and preliminary versions of inputs. Often, an 
activity's exit criteria are the completion of all outputs and verification that quality standards have 
been met. Since the outputs of activities are the inputs to other activities, there can be a complex 
interrelationship between activities, many of which can be performed in parallel. During perfor¬ 
mance of an activity, tasks are carried out. The exact set of tasks, their order of execution, and the 
number of iterations through them is determined by the performer (with guidance from documen¬ 
tation, checklists, and lessons learned). 

The state of most activities' entry criteria are determined by the state of other activities' exit crite¬ 
ria. Exceptions exist at the boundary or interface of the process. Examples are: arrival of parts in 
receiving, receipt of authorizations to increase spending, customer changes to requirements. 
When formulating a process, it is critically important to understand the process's interface with its 
operational environment. 

4.3.4 Task 

A task is an individual work operation, many of which must be performed to complete an activ¬ 
ity. At the discretion and convenience of performers, tasks can be decomposed into sub-tasks. 
The need for some tasks can be predetermined but many cannot. Although sets of related tasks 
could be represented as flow diagrams, the tasks' order of performance is often unimportant and, 
since the need for them is determined dynamically, maintaining flows is economically unjustified. 
(Especially successful activities can be recorded for reference in process documents and lessons 
learned.) 

4.4 Process Management Lifecycle 

Our Process Management Life Cycle consists of continuous process usage and improvement 
loops. See Figure 4. Initially, reference processes for new product classes are defined. From then 
on, processes are iteratively improved by usage (enactment) and evaluation. For both loops, refer¬ 
ence processes are interconnected, tailored, and expanded into a plan. The plan is either enacted 
by a product development effort, or evaluated through simulation. During enactment and evalua¬ 
tion, metrics and simulation results are collected. The metrics and simulation results are used to 
adjust the plan or to improve the reference processes. 


RASSP Annual RDE System Desc. 


1-11 


1/4/96 



Lockheed Sanders - Hughes Aircraft - Motorola - ISX Contract #N00014-93-C-217 



From our process management perspective, product development begins with planning (e.g., pro¬ 
cess composition, tailoring, scheduling, resource loading, costing) and ends with a completed 
product (and product data) within cost and schedule. In this perspective, we assume the existence 
of 1) product requirements, and 2) "reference processes" for developing products that can satisfy 
the requirements. 

4A.1 Describe Processes 

Describing a process (or sub-process) consists of either capturing an existing process or defining a 
new one. Capturing an existing process consists of collecting information about a process and cre¬ 
ating a process description. There are numerous methods for capturing process descriptions. How¬ 
ever. such methods are outside the scope of this document. Nevertheless, the result of describing a 
process is the creation of a "reference process" that is placed in a library for subsequent use. 

4o4o2 Reference Processes 

Reference processes are processes and sub-processes that are stored in a library for use in com¬ 
posing product specific "tailored" processes. Reference processes are generic "if-ever" processes. 


RASSP Annual RDE Svstem Dcsc. 


1-17 


1 /A /f'l/: 









Lockheed Sanders - Hughes Aircraft - Motorola - ISX Contract #N00014-93-C-2172 

This means that reference processes address families or classes of products and that they are not 
specific to any particular product instance within a class. Furthermore, reference processes 
address all possible, known development situations that can occur for a product class. If it's ever 
the case that a specific product development must include activities to deal with some aspect of 
the product, then the reference process contains the needed activities. It is rare that any specific 
product development effort will need to perform all activities contained in a reference process. 

Since some processes are tool and technology dependent, reference processes may contain pre¬ 
scribed tools and data file formats. Such prescriptions are also convenient for individuals who pre¬ 
fer not to specify such details and use what has proven successful in the past. Furthermore, 
processes may also contain product structure segments with which to organize the product data 
produced by process enactment. Finally, processes may contain the roles and skills necessary to 
carry out each activity. 

The RASSP Program is developing a reference process for the development if Digital Signal Pro¬ 
cessors, DSPs. The RASSP Design Environment, RDE, will contain capabilities for tailoring this 
reference model for the development of specific DSPs. 

4.4.3 Product Requirements 

Product requirements describe the detailed specifics of the functions and performance that a par¬ 
ticular product must satisfy. Product requirements are provided by the customer and are assumed 
to be somewhat incomplete at the beginning of product development. During product develop¬ 
ment, the requirements are refined by involving the customer in the product development effort. 
Consequently, the tailored process and plan evolve over time as the requirements mature. 

4.4.3.1 Create Plan 

Creating a product development plan consists of tailoring a composition of reference process, for¬ 
mulating a schedule (adding time and resources to the tailored process), applying appropriate con¬ 
straints (e.g., availability of things, desire for events to occur at specific times), and assessing 
risks. Included in the creation of the plan is a balancing of product features, activities, resources, 
and risk so that the product satisfies the requirements and is developed within given constraints. 
Planning is done prior to process enactment. 

A plan will not be perfect from the start. It will contain unspecified items since not enough is 
known at the start. Thus, the plan will need to change in real time to accommodate events. 

4.4.3.2 Tailor Process 

Process tailoring consists of creating a composition of several reference processes, appropriately 
modifying the interfaces between them, defining or adjusting the product structure with which to 
organize and manage generated product data, and defining actions to be taken automatically when 
certain events occur. 


RASSP Annual RDE System Desc. 


1-13 


1/4/96 



Lockheed Sanders - Hughes Aircraft - Motorola - ISX 


Contract #N00014-93^C-2172 


To aid tailoring, reference processes are stored in a library. They are reusable sub-processes that 
can be instantiated before and during process enactment. These sub-processes are templates that 
include candidate activities, data objects (inputs and outputs), entry and exit criteria, tools, tasks, 
narrative descriptions, metrics, events, and actions. Events, if supported by the design environ¬ 
ment. cause automatic execution of actions when their activation rules are satisfied, such as notifi¬ 
cations to be sent, software tools to execute, and status information to be collected. 


In its simplest form, process composition consists of examining the product requirements and 
.selectively editing a reference process to include only those activities that are appropriate for the 
specific product. 

In its typical form, process composition consists of selecting several reference processes, editing 
them, interconnecting them, and ensuring that any holes that remain can be filled by other existing 
reference process. Holes will exist when down-stream decisions are needed before final selection 
can be made. 

In its most complex form, process composition deals with virtual corporation formation. Signifi¬ 
cant process negotiation and editing is required when several companies are teaming, since each 
has its own reference processes, and it is likely that very little process consistency exists across 
them. Nevertheless, without a tailored process, it is unlikely that the operation of a virtual corpo¬ 
ration will be smooth. 

4o43.4 Tool selection 

Tool selection consists of examining the software tools employed by all the activities and ensur¬ 
ing that 1) they are appropriately consistent across the interconnected reference processes and 2) 
that they are available to the project. If this is not the case, then modifications are made to the tai¬ 
lored process to correct any problems. This may include the inclusion of translators, the replace¬ 
ment of sub-processes, or re-thinking of the product's architecture. 

4.403.5 Interface Modification 

Interface modification consists of examining the internal interfaces (between sub-process) and the 
external interfaces (outside the process) to ensure that data objects and types are consistent and 
match up. If this is not the case, then appropriate adjustments are made so that information can 
flow freely through the tailored process and be smoothly exchanged with its process environment. 

4.4.3.6 Product Structure Definition 


Product structure definition consists of examining the product structures associated with the sub¬ 
processes to ensure that they are properly constructed to contain the data that the project wishes to 
manage. If this is not the case, then appropriate modifications are made to the product structures. 


RASSP Annual RDE System Desc. 


1-14 


]/4/96 




Lockheed Sanders - Hushes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2172 


The organization of the product structures is influenced by the tools employed and the other sub¬ 
processes in the tailored process. 

4.4.3.7 Event-Action Definition 

Event-Action definition consists of examining the roles, notifications, and automatic actions 
present in the reference processes and determining if they are appropriate for the project being 
planned. 

4.4.3.8 Create Schedule 

• Time 

• Cost 

• Resources 

• Risk 

4.4.4 Enact Process 

Enacting the process consists of executing the tailored process according to the project schedule. 
Process enactment results in the development of a product that satisfies the product requirements. 
During process enactment, as the product evolves — design decision and technology choices are 
made — the process is adapted to reflect those decisions. For instance, if a decision is made to use 
FPGA's instead of an ASIC, then necessary process changes are made, typically adding an 
instance of a sub-process to the plan. During enactment, which consists primarily of synthesis and 
verification activities, candidate designs are compared with requirements to ensure compliance. 

4.4.5 Product and Data 

Product and data are the result of the product development effort (enactment of the tailored pro¬ 
cess). The product is the primary deliverable. The data consists of all the managed representations 
of the product, organized by the product structure. Essentially, the Product data is a description of 
the product in sufficient detail that the product can be reproduced. 

4.4.6 Monitor 

Monitoring the enactment consists of collecting process and product metrics, and analyzing them 
to determine progress towards cost and performance objeetives and to assess risk. Low level met¬ 
rics are used by performers to coordinate activities. Low level metrics are also rolled up to pro¬ 
vide management with appropriate visibility of project status and to alert them to potential 
problems. 

4.4.7 Metrics 

Metrics are measurements collected during process enactment. They include both product and 
process metrics. Process metrics are analyzed to determine progress against plan. Product metrics 
are analyzed to determine compliance with requirements. Together they are analyzed to determine 

RASSP Annual RDE System Desc. 1-15 1/4/96 



Lockheed Sanders - Hughes Aircraft - Motorola - ISX 


Contract #N()0014-93-C-2172 


productivity. The results of these analyses are used to adapt the plan. Included in these analysis 
are lessons learned that are also used to improve the reference processes. 


4.4.8 Adapt Plan 

Adapting the plan consists of changing or updating the tailored process and project schedule as 
events unfold. Better methods are incorporated for accomplishing development objectives, new 
tools are adopted, schedules are modified, and so on. Much of the adaptation is driven by design 
decisions and the conclusions arrived at through metrics analysis. Simulation can be used to aid 
management decision making. 

4.4.9 Predict Outcome 

Predicting the outcome of a project consists of devising candidate changes to the tailored process, 
projecting each of them into the future, and selecting the best one. Predicting the outcome of a 
project occurs in two different situations, one during enactment, the other during process 
improvement. 

During enactment, predicting the outcome of a project is a management activity. It will typically 
occur when significant events have occurred which require a change to the project plan. Here, 
given the current state and circumstances of the project, prediction is aimed at selecting those 
changes to the tailored process that achieve the best possible outcome. One possible approach for 
doing this consists of converting the tailored process and plan into an executable model, loading 
the model into a simulator, using the collected metrics as initial conditions, and running the model 
to conclusion. By doing this repetitively with various candidate changes to the tailored process 
and plan (process, resources, etc.), simulation can help predict the outcome of the various choices. 
Here, the role of process simulation is to provide management with powerful "what-if" capabili¬ 
ties that can help predict the consequences of decisions in very complex situations. For realistic 
results, real world actuals must be available for simulation — e.g., production rates and windows 
of availability for production lines to determine what delivery commitments can be met. 

During process improvement, predicting the outcome of a project is a process-developer activity. 
It will occur whenever the enterprise chooses to improve its reference processes. Here, prediction 
is aimed at determining the value (contribution to productivity and quality) of proposed changes. 
Again, one possible approach for doing this consists of simulating reference processes. Here, the 
plan (tailored process, etc.) is simulated under various anticipated conditions using representative 
example products (or past projects) as evaluation vehicles. The results of process simulation show 
the effects of various changes to tailored processes, with different product configurations, using 
different resource loadings, operating under varying constraints, and with different event proba" 
bilities. 

4.4.10 Improve Process 

Improving the process consists of 1) taking lessons learned from enactments and incorporating 
them into leference piocesses, and 2) taking tailored processes and conducting experiments to 
determine if proposed modifications to reference processes will result in expected results. 


RASSP Annual RDE Sy.stem Desc. 


1-16 


1 / 4/96 







Lockheed Sanders - Hughes Aircraft - Motorola - ISX Contract #N00014-93-C-2172 

4.5 Process Management Requirements 

The requirements enumerated here reflect our goal of providing a "Tool-Independent Process 
Management System" that enables Distributed Development. This means that teams composed of 
individuals from several companies, geographically distributed over large distances, and in differ¬ 
ent time zones, can effectively work collaboratively as a virtual corporation. In this context, pro¬ 
cess management is not constrained to include only engineering processes. It must also provide 
capabilities that can support administrative, financial, material (i.e., supply management), and 
other management (above the shop floor) processes. 

4.5.1 Distributed Operation 

The process management capability shall provide capabilities for operating over a combination of 
LAN (local area network) and WAN (wide area network) configurations. It must operate over the 
network using web technology since many of the process management functions will be provided 
through web browsers. 

4.5.2 Multi-Platform 

The process management capability shall be capable of operating on multiple compute platforms 
including Sun, HP, Mac, and PC Windows. This is because in many companies significant product 
development work is done on personal computers. Furthermore, most managers have Mac's or 
PC's, and they are the ones who have most need for monitoring the status of on-going work. 

4.5.3 Maintain Process State 

The process management capability shall provide capabilities for persistent maintenance of the 
state of each activity. Furthermore, it shall be capable of recalculating the state at any time. 

The process management capability shall provide capabilities for manual setting of state values 
(with appropriate access control). This feature is needed when it is necessary to override the 
results of entry and exit criteria evaluation. In some cases, this will provide the means for process 
deviating. 

The process management capability shall also provide capabilities for querying the state of activi¬ 
ties so that users can ascertain progress through the process and determine what criteria must be 
satisfied for additional activities to complete. 

4.5.4 Signal Events 

The process management capability shall provide capabilities for users to signal that certain 
events have occurred, thus triggering automated actions to occur such as notification, state 
change, and metric collection. 


RASSP Annual RDE System Desc. 


1-17 


1/4/96 




Lockheed Sanders - Hushes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2172 


4.5o5 Process Deviations 

The process management capability shall provide capabilities for allowing users to deviate from 
the tailored process. This is needed because there is no assurance that a process will be perfect and 
include all activities required. However, all deviations will be recorded and users asked for the 
reasons for deviating. 


The process management capability shall provide capabilities for logging all events that occur 
during process enactment, including adaptations of the process. 

4.5.7 Monitor Process 

4.5.7.1 Capture Metrics 

the process management capability shall provide capabilities for capturing process and product 
metrics during enactment of tailored processes. The captured metrics must be traceable to the pro¬ 
cesses activities and tasks, even when the process has been adapted to account for evolving 
events. 

4.5.7.2 Provide Thermometers 


The process management capability shall provide capabilities for displaying dynamically updat¬ 
ing digital or graphic thermometers. The thermometers shall display the values of user selected 
metrics in comparison to goals, objectives, or constraints. Users shall also have the ability to dis¬ 
play thermometeis for both product and process metrics and shall have the ability to define new 
metrics as functions of existing ones. For instance, if one metric is total number of VHDL lines 
and another is total cost of VHDL, then the user shall be able to define a metric that is cost per line 
of VHDL. Thermometers shall be updated at each relevant event. 


The process management capability shall provide capabilities tor obtaining the status of activities 
and data objects. It must also provide capabilities for analyzing and rolling up the status into over¬ 
all project progress indicators. 


4.5.8 Adapt Process 

The process management capability shall provide capabilities for tailoring the process and plan in 
real time to account for evolving events. These capabilities are essentially the same as tho.se for 
process tailoring (inserting new sub-processes, changing schedules, modifying product struc¬ 
ture. changing roles and responsibilities) as described above, except that they are applied after 
process execution has begun. Thus they should not require complete replacement of the process 


RASSP Annual RDE System Desc. 


1 / 4/96 




Lockheed Sanders - Hushes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2172 


and re-initialization of all states. Furthermore, a history of tailoring changes should be maintained 
for ongoing analysis. 

4.5.9 Response Time 

The process management capability shall respond (provide feedback) to all user actions within 2 
seconds or less. If an action requires more than 2 seconds, then a progress indicator or appropriate 
message should be displayed within 2 seconds. Progress indicators are preferred because they let 
the user know that progress is being made towards completion of the action. 

4.5.10 Off-Line Operation 

The process management capability shall provide capabilities that allow all tools to work off-line. 
Here, off-line means that the user's workstation (platform) is not connected to the network or that 
parts of the network are down. The fact that network reliability is sometimes poor should not pre¬ 
vent work from being performed. This requirement implies that some type of synchronization 
may be required once communication is re-established. 

4.5.11 Other Requirements 

Process management include the other requirements that are listed below. 

• Security: The capability to provide adequate access control and security. 

• Extensible: Scripts are required to add functionality or automate repetitive sequences 
batch operation 

• Scalable: Support is required for small and large projects by incremental addition of 
HW/SW resources 

• Define Reference Process: The process management capability must provide capa¬ 
bilities for capturing, editing, and storing reference processes for reuse. 

• Tailor Process: The process management capability must provide capabilities for tai¬ 
loring reference processes to the specific needs of a project. 

• Create Plan: The process management capability must provide features for creating a 
schedule and allocating resources to the activities of the tailored process. 

• Execute Process 

• View Process: The process management capability must provide a capability for 
graphically viewing processes. This includes methods for easy traversal of process 
hierarchies. This capability is intended to provide performers with on-line access to 
descriptions of the tailored processes they are enacting. 

• Manage Events: The process management capability shall provide capabilities for 
tracking, signaling, and responding to events during process enactment. 

• Evaluate Entry and Exit Criteria: The process management capability shall provide 
capabilities for defining an activity's entry and exit criteria as a set of expression/ 
action-list pairs such that if one of the expressions evaluate to true, then the associ¬ 
ated actions will be fired. 


RASSP Annual RDE System Desc. 


1-19 


1/4/96 


Lockheed Sanders - Hughes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2172 


4.6 Architecture 

The Process Management Implementation Architecture portrays the functional components of 
process management within the RDE and indicates how they are interconnected. 

4.6.1 Task Manager 

The Task Manager is a component of the RDE's Process Enactment capability. The task manager 
provides day to day task interactions for all users in a distributed fashion, including logging u.ser 
comments and assisting process compliance. 

There is a mechanism for switching between the detailed task view of a user and the process view 
presented by the Process Browser. Thus, for the Task Manager, a user should be able to ask for a 
diagram showing where a task fits within the overall process. Likewise, from the Process 
Browser, a user should be able to ask for the status of all the tasks being performed to complete an 
activity. 

4.6.2 Event Manager 

The Event Manager is a component of the RDE's Process Enactment capability. In essence, it is 
the process execution engine. The Event Manager is responsible for evaluating entry and exit cri¬ 
teria, determining the state of process elements, responding to events, launching actions, and sig¬ 
naling users when events of interest have occurred. 

4.6.3 Microsoft Project 

For some activities, a complex set of tasks and sub-tasks may need to be planned and tracked (by 
the performers of the activities). Under such conditions, it would be desirable to let performers 
construct activity plans using Microsoft Project and export the tasks to the Task Manager for 
tracking, metrics gathering, and notification. 

It may also be desirable to import an indented list of tasks (captured in the Task Manager) to 
Microsoft Project for scheduling and resource leveling, then pass back the updated information to 
the Task Manager. 

It should be understood, however, that in both of these situations, the function of the interface is to 
move information between the databases of the RDE and Microsoft Project. From this perspec¬ 
tive. the Task Manager and Microsoft Project are simply the tools a user would employ for creat¬ 
ing. editing, updating and viewing the data. 

4.6.4 Mentor's FlowXpert 

The ability to interface with Mentor's FlowXpert needs investigation. It is desirable to interface 
with FlowXpert in two ways. First, by treating the processes it manages as leaf level activities. 
Second, by interacting with elements within those activities. With these interfaces, it should be 
possible to have RDE and FlowXpert work cooperatively in managing a complete development 
process. 


RASSP Annual RDE System Desc. 


1-20 


1/4/96 



Lockheed Sanders - Hughes Aircraft - Motorola - ISX Contract #N00014-93-C-2172 

In the first case, entry and exit criteria at the boundaries of a FlowXpert managed process should 
operate seamlessly between the RDE and FlowXpert. Furthermore, the input and output data 
objects, plus their states, should also be available to both the RDE and FlowXpert. 

In the second case, events that occur within a process managed by FlowXpert should visible out¬ 
side to the RDE, and events that occur within the RDE should be visible to FlowXpert. 

If we were to use Mentor's WFM, we would need a way to dynamically (during process enact¬ 
ment) access the database that it maintains so that status and parameter information could be used 
outside the WFM by tools on other platforms and other networks. 

With what we currently know, the conclusion is that Mentor's WFM cannot satisfy enough of 
RASSP requirements to make it a long term solution. At most it is a capability we could use in the 
short term for hands-on learning about WFM usage on real projects. 

4.6.5 Other Functional Components of Process Management 

Other functional components of process management include are listed below. 

• Process Viewer / Browser 

• Process Snippet Editor / Manager 

• Metrics Viewer / Browser 

• Review Manager 

• Problem Manager 

• Change Manager 

• DOORS 

5 Data Management 

Data Management is one of the major focuses of the RDE. The Data Management services control 
all product or project data on a project with which the engineer or manager needs to handle. This 
includes data that is for work in progress, and data that is archived for later use. The product 
design data includes requirements documents, design documents, hardware schematics, and soft¬ 
ware source code. The project data includes lists of users and roles, task and schedule informa¬ 
tion, and metrics. To allow all this information to be managed, the data is controlled with the 
Product Structure Editor (PSE). This provides the user with a set of functions including Check-In 
and Check-Out, Design Folder management, Version Control, user access protection. Document 
State Management, managing Relationships Between Objects and Query capability. 

To allow other multiple PSEs or other RDE clients wishing to access database information, an 
Application Programming Interface (API) has been designed with help from the University of 
Wisconsin. This interface separates the RDE clients from the database. The clients do not have 
any database specific code in their executables, they use only the API library. The interface is 
designed with the requirement that it can be implemented by multiple databases or Data Manage¬ 
ment Systems. Each database that is used to implement the interface must create a library of sub¬ 
routines that are defined by the interface. Then when a message is sent using the interface, the 


RASSP Annual RDE System Desc. 


1-21 


1/4/96 




Lockheed Sanders - Hughes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2172 


underlying database can execute the request. This allows any desired database to be used as an 
implementation to the interface. Each company can run the PSE using their favorite database or 
PDM system, such as SHORE, Sherpa, Oracle, and Metaphase. The pilot implementation has 
been done using the SHORE object database. This interface was not completed for use at the end 
of Build 5. 

Figure 5 shows the architecture of the database communications. Each box in the diagram is a 
process, such as a Elnix executable program. For Build 5, the clients include the RDEloesktop, 
PSE, the Source Reuse Utility, and the Peer Review Utility. The Metric Browser and Task Man¬ 
ager are being added as clients. The RDE clients are programs or processes that the user invokes 
to get at his project data. The clients can be on any platform including Macintoshes and IBM com¬ 
patible PCs. The client needs only to be on a network (Internet) that can connect with the Commu¬ 
nications Server through TCP/IP. The client sends a message to the Communications Server. The 
Communications Server determines if the message concerns a database that it is hosting, other¬ 
wise, it sends the message to a Communications server that hosts the desired database. The data¬ 
bases are distributed across Internet, but can be accessed through any client that has the proper 
permissions. 



Figure 5 - RDE Database/Communications Architecture 


Sol Distributed Communications 

The RDE Database will work across a Wide Area Network. A library of messages that the applica¬ 
tions will use are sent to a server. The messages are constructed by the RDE cHent application in 


RASSP Annual RDE System Desc. 


1-22 


1/4/96 






















Lockheed Sanders - Hughes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2172 


order to query the distributed database for objects based on object attributes. The following is a 
set of messages that can made: 

• Give me a list of all the child objects of the specified object. 

• Give me a list of all the objects that refer to the specified object. 

• Copy the specified object into my working directory. 

• Give me all the attributes associated with the specified object. 

• Give me a list of all objects that match the specified query string. 

The messages are sent from the RDE client to the communications server. The client uses the 
message library to determine the host and port to send the message to from environmental vari¬ 
ables that are setup when the tool is installed. 

The Communications Server is a background Unix process that mostly waits for a client to make 
a TCP/IP connection. Once a client connects, the server forks a process that will handle the mes¬ 
sages from that client. The server can handle multiple clients at the same time by using the normal 
scheduling mechanism of the Unix operating system. The client will initially want to connect to a 
host computer on the same Local Area Network file system to allow good performance. The con¬ 
nection between the client and the server will continue until the server receives a “close” com¬ 
mand from the client, or until the socket is broken by some error condition, such as loosing power 
on the client or server host computer. 

The Communication Server can communicate with zero, one, or more databases. Upon starting 
each database on a particular network, the database process registers with the Communication 
Server. The Communication Server stores information about the database in a table, and creates a 
callback that forwards messages destined for the desired database. Most of the messages sent 
from the client to the Communications Server contain a reference to an object that the client wants 
to know about. The object name is specified by a URL (Universal Resource Locator) to identify 
the host and the database containing the object. If the Communication Server does not have the 
requested database registered, the request for the object is be forwarded to the appropriate server. 
Each server can be a client of another server. This is server to server communication. The mes¬ 
sages that can be sent by an application client can also be sent by a server to another server. The 
only difference between a server-to-server and a client-server communication is that a client- 
server stays connected until the application if complete, and a server-to-server communication is 
only connected for that immediate series of messages. 

A Communications Server may not have any databases registered, but may exist only to commu¬ 
nicate with other databases. This scheme allows the databases to communicate on a single TCP/IP 
port. Security software can be used to protect the port from unauthorized access. Each Communi¬ 
cations Server that sends a message to a database, sends the same messages with the data format¬ 
ted in the same format to each database, even though the databases are different. For example, one 
server knows how to retrieve objects and query Sherpa, and another SHORE. 

For those objects that are controlled by a CAD tool, such as a Mentor or Viewlogic design object, 
the data is stored in the database of the CAD system. Messages, such as how to get the version 
number of the design, is accomplished by implementing the RASSP Engineering Database Inter¬ 
face (REDI) in terms of the CAD tool interface. In this case the CAD tool would be asked about 
the version, and passed back through the REDI interface. REDI is a general interface of functions 


RASSP Annual RDE System Desc. 


1-23 


1/4/96 




Lockheed Sanders - Hughes Aircraft - Motorola - ISX 


Contract #N00014-93~C-2172 


that can be used to communicate with the databases. The interface is implemented in terms of the 
interface supplied by the database management system that is storing the objects. 

5.2 RASSP Engineering Database 

The RASSP Engineering Databa.se contains all design and product data. This includes documen¬ 
tation such as requirements and guidelines, hardware schematics and design documents, software 
source code, and libraries of software, electronic components, and electronic models, list of per¬ 
sonnel and roles on a project, process, scheduling, and task information, project mail, and links to 
HTTPs on the WWW. The data in the database is stored as objects and can be structured to best 
organize a project as shown in Figure 6. The objects in a database may have links to objects that 
physically reside in other databases. 

An object in the database contains standard and user defined attributes, and generally represents 
one or more files on a file system. Each object has a type and a format. For"example, an object 
may be of type ‘requirements document’ with a format of ‘FrameMaker’. The type and format are 
two attributes of the object. Other attributes currently include: creator, creation date, last modified 
by, last date modified, version, state, and comment. The user can define his own attributes for his 
own use. 

When file is checked into the database, a database object is created for the file, and the file is 
stored in a repository or a location on the filesystem where it is protected from the user. Assuming 
there is not a permission problem, the user can copy out or check out a file. The difference is tha"t 
checking out a file creates a new version of the object. 

Some objects do not directly represent a single file in a repository. One such object is a relea.se 
object that contains a list of files and versions that can be copied out of the repository for later u.se. 
Another object is a schematic that communicates with the CAD tool, .such as Mentor, for the 
required information. In this ca.se. Mentor stores the file in its own repository and the REDB does 
not attempt to store the Mentor files outside the Mentor environment. 

Database objects also have references that are defined by the user or system administrator, refer¬ 
ences can be defined to relate objects in the database. The referenced object may be in another 
database and at another geographical location. 


RASSP Annual RDE Sy.stem Desc. 


1-24 


1/4/96 






Lockheed Sanders - Hushes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2172 



5.2.1 Outside of the Scope the RASSP Engineering Database 

This section describes features of the database that would be valuable, but are outside of the scope 
of the work being performed by the Sanders RASSP team. 

We are not implementing a standard interface definition for the product data used within a given 
user process. It would be great if all data of a certain type had the same format to offer interopera¬ 
bility between tools. Since they do not, we are not forcing the data to be converted to a common 
format. We will, however, make use of standard commercial translators whereever possible and 
where it is feasible, create translators. 

Though a library object can be created to represent a commercial or company library, we will not 
attempt to duplicate the information or functions that exist in commercially available tools. Com¬ 
mercial libraries have their own user interfaces and data formats. We will not duplicate the inter- 


RASSP Annual RDE System Desc. 


1-25 


1/4/96 



Lockheed Sanders - Hughes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2172 


face or attempt to control and manage the library data, but we do allow a library object to be 
created that the user can place in his project so that it can to be easily located. 

We will not attempt to allow designs to be copied from CAD tools unless it is supported by the 
CAD tool. Many CAD tools use multiple files and libraries to represent a design. These tools use 
hardcoded paths within their own data management system and do not provide hooks to copy a 
design from one system to another. 

6 RASSP Network Communications 


6<,1 Distributed Network Goal 

Developing an engineering product across a wide area network such as the Internet leads to a 
number of data consistency and data sharing problems. The challenge is to provide an environ¬ 
ment across the wide area network that imitates the ease of a well-designed local area network. 

Currently, data sharing is done in a variety of cumbersome ways. The most common way is 
through using File Transfer Protocol (FTP). Files are collected into a directory, compressed and 
moved an intermediate site. The receivers of this data must get the files from the site and move it 
to their own site. Then the files must be uncompres.sed before use. This process is cumbersome. 
The process can causes versioning and configuration management problems, since the users are 
working outside of a configuration management system. 

The goal is to provide engineers with an environment in which they can treat a central repository 
shared between companies as an extension of their local area network. With the file in a central 
public accessible place, it is easily copied. Let the network be configured so that the transfer 
across the wide area network is the same as a transfer on the local area network. 

This goal is much easier stated than achieved. The primary obstacle to achieving this goal is the 
fact that most companies place a protective layer between themselves and the Internet. This bar¬ 
rier is commonly referred to as a “firewalL. A firewall is a mechanism that is capable of restrict¬ 
ing traffic to a network. It is a focal point between two networks for all traffic between those two 
networks. This traffic can either be allowed or denied by rules programmed into the firewall 
mechanism. For those without a firewall, a computer on Internet is protected from access by nor¬ 
mal Unix security, such as by user names and passwords, and by group and individual permis¬ 
sions set on directories and file. 


The picture below depicts the top-level network architecture interconnecting Sanders, Hughes 
Aircraft, Motorola, and ISX. ISX has no firewall protection. Sanders has an external, unprotected 
network available for team members to store data. Sanders also has a protected internal network. 
The Hughes RASSP team works on a network that is behind a firewall, but in parallel with their 
corporate network. Motorola uses a scheme much like Hughes, except there is an additional con¬ 
nection between the company network and the RASSP network which is also protected by a fire- 
wall router. 


RASSP Annual RDE System Desc. 


1-26 


1/4/96 



Lockheed Sanders - Huehes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2172 



1.54 Mb/s via CERFnet 


1.54 Mb/s via NEARnet 


Company connection network 


The Internet 


1.54 Mb/s via Netcom 

Motorola j 



56 kb/s via PSI 

ISX 


192.77.181 
RASSP & Company 
Network 



Figure 7 - Physical Topology of RASSP Team Network 


6.3 Network Infrastructure Hardware and Software 

6.3.1 Commercial Internet Providers 

Each of the companies on the RASSP team has chosen a different network service provider, 
depending on their own need, and the regional variations in pricing and suppliers. Typically, as of 
May 1995, a full T1 (1.54 Mb/s) Internet connection costs about $40K annually. Lower band- 
widths have commensurately lower costs, with 56 Kb/s leased line access typically costing around 
$18K annually. These commercial Internet providers essentially provide a “spigot” to connect 
each of the companies local area networks to the Internet. 

6.3.2 Firewall Configurations 

Since there is no restriction on computer access within the infrastructure of the Internet, it is nec¬ 
essary to protect the local area networks (LANs) from unauthorized access from non-team mem¬ 
bers on the Internet. For this reason, each of the RASSP team members has implemented some 
sort of “firewall.” between their LAN and the Internet. 


RASSP Annual RDE System Desc. 


1-27 


1/4/96 











Lockheed Sanders - Hughes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2172 


At Sanders, this firewall consists of a Cisco router which is capable of packet filtering. The router 
is configured in such a way as to permit only a restricted set of communication protocols to pass 
from the LAN to the Internet. Full communication is permitted to the RASSP team members, 
while only specific protocols in an outbound direction are permitted to non-team member hosts. 


633 User Applications 

On top of the underlying RASSP network infrastructure, a suite of applications have been used by 
the RASSP team to facilitate electronic communication. The.se applications have addressed mes¬ 
sages (via email), documents and design information (via FTP, shared filesystems, and World- 
Wide-Web), and interactive video conferencing. 


Table 2: Sanders Firewall Services 


BI-DIRECTIONAL 

SERVICES 

OUTBOUND-ONLY 

SERVICES 

INBOUND-ONLY 

SERVICES 

Domain Name Service 

File Transfer Protocol via 
proxy server 

None Permitted 

E-Mail 

World Wide Web (HTTP) 
via proxy server 


Internet News 

Telnet via proxy .server 


Network Time Protocol 




63.3ol Email 


Email has been the fundamental communication mechanism in use by the RASSP team. This has 
been highly successful, with a number of automated distribution lists to permit “broadcast” mes¬ 
sages as well as personal correspondence. For interoperability across different software packages 
and machines, it is essential that mail software take advantage of the RII^ME (Nfultipurpose Inter¬ 
net Mail Extensions) standards. As such, the RASSP team has preferred the use of mail packages 
such as Zmail for Unix machines, and Eudora for the Macintosh or PC. 


6«33.2 FTP Server 


The primary mechanism for sharing documents and design information within the RASSP team 
thus far has been the use of a central RASSP FTP Server at Sanders. Each of the Integrated Prod¬ 
uct/Process Development Teams (IPPDTs) is responsible for maintaining an area of the server. 

The RASSP team members have had great success using the publicly available “wu-ftpd” FTP 
server. This server is freely available from Washington University in St. Louis, MO. This .server 
allows for multiple “anonymous” groups to be set up, with the determination of the proper group 
to be made based upon the place of origin of the FTP request. This permits “anonymous” access 
to be made by team members, while disallowing any access from non-team members. 


RASSP Annual RDE System Desc. 


1-28 


1/4/96 












Lockheed Sanders - Hughes Aircraft - Motorola - ISX Contract #N00014-93-C-2172 

63.3.3 Shared Filesystems 

The ability to utilize shared filesystems across the RASSP network is a relatively new capability, 
first used by the RASSP Design Environment (RDE) prototype team. This technique allows engi¬ 
neers to easily share common code or design information libraries across the team members. Per¬ 
formance using this mechanism varies with network load, from about 2Kbytes/s to 20Kbytes/s, 
with typical responses of approximately 5Kbytes/s. This makes it possible for engineers to “check 
in” or “check out” a typical three or four hundred line VHDL or C++ code file in a few seconds. 

63.3.4 World-Wide-Web Capabilities 

The World-Wide-Web (WWW) is a collection of client/server protocols that provides easy access 
to information from client software available for Unix machines. Macintoshes, and PCs. The pri¬ 
mary advantage of WWW client software is that it is relatively easy for a novice to gain access to 
a wealth of information. 

Within the RASSP program, we have been examining ways for using this technology within the 
team. Notable uses of WWW services have included a distributed address book (rolodex), docu¬ 
ment server, calendar, team glossary and acronyms, and metrics reporting. 

In order to view WWW information, a WWW browser is required. The preferred browser on the 
RASSP team is “Netscape Navigator”, by Netscape Communications Corporation. A variety of 
WWW servers are being used by the RASSP team members, including the freely available 
National Center for Supercomputing Applications (NCSA) HyperText Transfer Protocol Daemon 
(HTTPD), the freely available CERN HTTPD, and the commercial Netscape Server. 

6.3.3.5 Videoconferencing 

Electronic videoconferencing has been used within the RASSP team to send and receive audio 
and video data, primarily for conducting distributed meetings and reviews. The preferred product 
on the team, due to its low cost, is the CU-SeeMe software from Cornell University. Recent ver¬ 
sions of this product support integrated audio and video for both the Macintosh and PC platforms, 
with multi-way conferencing support. 

Within the RASSP team, the CU-SeeMe software has been used exclusively on Macintosh com¬ 
puters. The only additional hardware requirement beyond an AV-compatible Macintosh is to have 
a video camera. The two tested products by the RASSP team have been Connectix’ “QuickCam,” 
and VideoLab’s “FlexCam”. The QuickCam is an inexpensive ($99) black and white camera giv¬ 
ing 320x240 resolution, while the FlexCam is more expensive ($499) color camera providing 
640x480 resolution. Both cameras perform adequately with the CU-SeeMe software, while the 
FlexCam provides increased capabilities for other applications. 


RASSP Annual RDE System Desc. 


L29 


1/4/96 


Lockheed Sanders - Hughes Aircraft - Motorola - ISX 


Contract #N00014-93-C-2172 


604 An Internet NFS Server 

In order to efficiently share data, a way must be devised so that company A can easily place data 
in a place where company B can easily retrieve it. A scheme using tan compress, and ftp does not 
meet that goal for the purposes of this di.scussion. The goal is to make this wide area data transfer 
as seamless as a local area network data transfer. That is, make it so a user can copy data from his 
local directory to another directory, which may be local or across the country, using the exact 
same procedure. 

The plan to do this is to engineer a .secure Network File System server, secure the communica¬ 
tions between this host and remote hosts at the various companies, and create an NFS filesystem 
across the Internet. This would allow a person at company As secure host to copy a file from his 
host to the remote NFS server host. 

605 How to Create an NFS Server 

The first step to creating an NFS server is to configure a Unix machine with only the NFS service 
available. Edit the configuration files (inetd.conf) to ensure that no other network services are 
available. Then remove the binaries for those services from the operating system. Some of these 
services are HTTP, telnet, rlogin, rsh, finger, talk, and write. There are many others. 

Once the machine can be considered a bare-bones NFS server, then the security must be provided 
for the NFS transmissions. We use the NetLock software. This .software takes an IP packet, com¬ 
pletely encapsulates inside a packet generated by NetLock, and transmits and receives the new 
packet on NetLock specific ports. A firewall can be configured to allow NetLock traffic to pass 
through since the ports NetLock uses are well known. Presumably, the IP addresses of any hosts 
wishing to communicate to the NFS server are also well known. 

The NetLock software performs the authentication with other NetLock hosts. The ho.sts can be 
configured so that the only allowed communications are with other NetLock hosts. 

Our proposed NFS server configuration entailed the NFS .server “straddling” the existing corpo¬ 
rate firewall. This would be accomplished by configuring a router as an NFS server firewall. This 
router would only allow NetLock traffic to pass in a bi-directional fashion. No other traffic is 
allowed through the firewall. 

Once this firewall has been tested, a second ethernet card can be added to the NFS server to pro¬ 
vide for a connection to the internal corporate network. It must be realized that this alternate path 
to the external network is actually much more restrictive than the existing path. 

The system can also be configured so that the existing firewall can allow Netlock traffic to and 
from the internal corporate network. This would alleviate the need for a .second router and a sec¬ 
ond ethernet card. There would only be one path between the external and internal networks. The 
existing firewall would have to be relaxed to allow NetLock traffic to pass through it. 


RASSP Annual RDE System Desc. 


1 -30 


1/4/96 



Lockheed Sanders - Hughes Aircraft - Motorola - ISX Contract #N000]4-93-C-2172 

Once the NFS server has been completely configured, a program is run to detect changes to spec¬ 
ified files in the file system. We chose the Tripwire program. This program uses multiple “check¬ 
sum” procedures on specified files to ensure that the machine has not been compromised in some 
way. These checksums are compared against an original database that is maintained on a physi¬ 
cally protected read-only media (such as a hard disk or floppy disk that has been physically con¬ 
figured to be read-only.) Tripwire reports all changes between the original database and the 
current configuration. When set up to run daily, Tripwire provides a good measure of intrusion 
detection. 

7 Engineering Environments 

The RASSP Demonstration team and first Benchmark team have used VHDL and Ada for engi¬ 
neering of their projects. This section describes the tools that were used in the VHDL and Ada 
engineering environments. 

7.1 VHDL Tool Environment 

RASSP activities that have been completed in VHDL have been on the Demonstration, and the 
Benchmark 1. Both of these environments are similar, but the Demonstration is further along due 
to its greater scope. The tools used for VHDL development include emacs as a text editor to create 
the behavioral VHDL source code. The source code is then analyzed, elaborated, simulated, and 
debugged using the Vantage Spreadsheet VHDL Development Tool. The source code is controlled 
with the Unix SCCS (Source Code Control System), for engineers to check in and check out 
working and released versions of the VHDL source code. After the simulation is successfully 
completed. Synopsis is used for FPGA gate level synthesis. Mentor’s Quicksim II is used to add 
timing before Board Station is used for circuit board layout, completing the VHDL design. 

7.2 Ada Tool Environment 

The RASSP activities that have been completed in Ada have been on the Demonstration, and the 
Benchmark 1. 

The Benchmark Environment uses Ada for work on a 68040 processor. There are 2,000 to 3,000 
lines-of-code that are being developed to control the benchmark hardware. The software develop¬ 
ment platform is a Sun workstation using SunOS 4.1.3. The top level software is designed using 
Cadre Teamwork. This tool represents the design with data flow diagrams that describes the func¬ 
tions and the data that are passed between the functions. After the design is completed, the soft¬ 
ware is written using the emacs editor in Ada mode. This mode allows the indentation to 
automatically conform to Ada conventions. The source code is controlled using SCCS, allowing 
the engineers to control and track the versions of the software. 

The software is compiled on the Sun with the Alsys cross-compiler on the Sun that produces 
680x0 object files. The object code is then linked with a Microtech linker that allows a simulation 
to be performed on the Sun workstation. The software is then debugged and tested using the sim¬ 
ulator. 


RASSP Annual RDE System Desc. 


1-31 


1/4/96 



Lockheed Sanders - Hughes Aircraft - Motorola - ISX 


Contract #N000 i 4-93-C-2172 


After the initial software testing, the object files are linked into the Styx Interface where the soft- 
ware can be executed along with the VHDL simulation from Vantage. The co-simulation of Ada 
with VHDL allows software that controls the hardware to be tested. The entire system can be 
tested in this manner. 

The demonstration team environment is similar to the benchmark environment. The software was 
developed on a Sun workstation. The top level design was done using Cadre Teamwork. The soft¬ 
ware was written in a text editor, cross compiled with a Mercury compiler targeted for the i860XR 
microprocessor, and debugged with the Mercury adagdb860 debugger. After the executable image 
was generated, the coff860 tool generates “Common Object File Format” (.coff) files that are 
loaded into the VHDL simulation and run on the virtual prototype. This allowed the software to 
interact with and be tested with the hardware described in VHDL. 

No automatic code generation was used for the Ada development. Cadre Teamwork provides the 
capability to generate Ada code from the data flow' diagrams. The engineers decided that the infor¬ 
mation that was required to be entered into this tool to allow it to produce useful code would not 
be as productive as typing the information using a text editor. Code generation is an area that can 
be improved upon to increase the productivity in developing software. 


There is currently not much reuse, either from previous design diagrams, or code libraries. The 
compilers come with board level support libraries that contain operating system routines for the 
processors. No other commercial libraries, public domain, or in-house libraries were used for 
these programs. This is an area that can be improved. 

8 Appendix A = RDE User’s Guide 


RASSP Annual RDE System Desc. 


-32 


1/4/96 





22 December 1995 


Advanced Research Projects Agenc 
Naval Research Laboratory 


SANDERS 

A Lockheed Martin Company 



Approved for public release; distribution is unlimited 


Document #AVY-L-R-00250-101-A 








TABLE OF CONTENTS 


Page 

Glossary of Acronyms.G-1 

Chapter 1: Getting Started.1-1 

Conventions. 1-1 

User’s Guide Overview. 1-2 

Introduction to the RDE. 1-6 

Using the RDE.1-7 

System Requirements. 1-8 

Glossary of Acronyms. 1-9 

Customer Support.1-10 

Chapter 2: The RDE Desktop Utility.2-1 

Introduction.2-1 

Starting the RDE.2-2 

File Menu.2-2 

Set Working Directory.2-3 

Edit Preferences.2-8 

Edit Categories.2-10 

Show All Tools.2-11 

Show Function Names Show Tool Names.2-13 

Install New Tool.2-13 

Quit.2-15 

Menu Bar Categories.2-15 

Using a Tool Palette.2-16 

Customizing a Tool.2-20 

Saving Tool Information.2-23 

Launching Tools.2-25 

Help Menu.2-27 

Chapter 3: The Product Structure Editor.3-1 

Introduction.3-1 

System.3-1 

Views.3-2 

Relationships.3-4 

Chapter 4: The Remote Data Access Utility.4-1 

Introduction.4-1 

Service Broker / Service.4-1 

The RDA Client.4-1 


RDE User’s Guide TOC-i 






































Chapter 5: The Log Utility ,.. 

Introduction. 

Adding a Log. 

Querying the Database. 

Deleting Logs. 


5-1 

5-1 

5-1 

5-2 

5-4 


Chapter 6 The Multi-Metric Browser Utility 

Introduction. 

Available Metric Reports. 

Changing Metric Categories. 

Changing Project and Subsystem. 

Getting Parametrics. 

Accessing Database. 

Retrieved Values. 

Common Values. 

Chart Type Options. 

Output Options. 

Database Populator. 

Product Structure Editor Stub. 


. 6-1 
. 6-1 
. 6-1 
. 6-4 
. 6-5 
. 6-7 
. 6-8 
. 6-9 
6-10 
6-12 
6-13 
6-15 
6-18 


Chapter 7: The Problem Report Utility... 

Introduction. 

Conventions. 

Concept. 

Configuration. 

Functionality. 

Error Messages. 

Support. 


. 7-1 
. 7-1 
. 7-1 
. 7-3 
. 7-6 
7-14 
7-14 


Chapter 8: The Reuse Utility. 

Introduction. 

Reuse Configuration. 

Reminders. 

Functionality. 

Command-Line Parameters. 

Primary Functionality / Main Window 

The Add Application. 

Querying the Database. 

Displaying Matches. 

Summary of Matches. 

Other Dialogs. 


. 8-1 
. 8-1 
. 8-1 
. 8-5 
. 8-5 
. 8-6 
. 8-6 
. 8-7 
8-11 
8-12 
8-14 
8-15 


RDE User's Guide TOC-ii 







































Chapter 9: The Review Utility.9-1 

Introduction.9-1 

Starting the Review Utility.9-2 

Creating / Starting a Review Package.9-4 

Reviewing a Package.9-16 

Comments.9-20 

Action Items.9-27 

Redlining a Design Object.9-35 

Additional Actions for Design Objects.9-38 

Closing a Review Package.9-39 

Stopping the Review.9-40 

Cancelling the Review.9-41 

Additional Features.9-42 

Reviewer Listing.9-42 

Review Summary.9-43 

Named Package Filtering.9-46 

Default Reviewer Lists.9-54 

Message Center.9-60 

Chapter 10: The Task Manager.10-1 

I. 0 Background. 10-1 

2.0 Task Manager Description. 10-1 

3.0 Task Manager Functionality. 10-2 

4.0 Task Manager Basics.10-4 

5.0 The User Interface. 10-4 

5.1 Pop-Up and Pull-Down Menus. 10-4 

5.2 Mouse Techniques.10.4 

5.3 Scroll Bars.10.4 

5.4 Slider Bars. 10-5 

5.5 Buttons. 10-5 

5.6 Text Fields. 10-5 

6.0 Getting Started.10-5 

7.0 Execution Begins. 10-5 

8.0 Logging In.10-6 

9.0 First Time Browser Screen. 10-7 

10.0 Task Manager Elements. 10-7 

II. 0 General Information. 10-7 

12.0 Task Browser. 10-7 

13.0 Preferences.10-9 

14.0 Sysadmin. 10-11 

15.0 Tool Info. 10-12 

16.0 Import.10-13 

17.0 Edit Subtask.10-14 


RDE User’s Guide TOC-iii 


















































LIST OF FIGURES 
Chapter 2 

Figure 1. RDE Menu Bar.2-2 

Figure 2. File Menu.2-2 

Figures. Set Working Directory.2-3 

Figure 4. Choose File Browser.2-4 

Figure 5. Choose from History List.2-5 

Figure 6. Choose From Alias List - Shrunken and Expanded.2-6 

Eigure 7. Add Dir Window.2-7 

Figures. Edit Dir Window.2-7 

Eigure 9. Edit Preferences.2-8 

Figure 10. Set Tool Dir Info Window.2-9 

Figure 11. Set Tool Dir Info Help Window.2-10 

Figure 12. Category Editor Window - before and after selection.2-10 

Figure 13. Show All Tools (Tool Database).2-11 

Figure 14. Make New Category.2-12 

Figure 15. Menu Bar (with newly added categories).2-12 

Figure 16. Install New Tool Window.2-13 

Figure 17. New Database Tool Adder (Help).2-14 

Figure 18. Quitting the RDE.2-15 

Figure 19. Menu Bar (selecting empty category tool palette).2-15 

Figure 20. Category Tool Palette (empty).2-16 

Figure 21. Adding tools to the new tool palette (dragging with Button 2).2-18 

Figure 22. Newly filled Tool Palette.2-18 

Figure 23. Tool choices corresponding to icons in new tool palette.2-19 

Figure 24. Tool palette.2-19 

Figure 25. Tool Configuration (Tool Information).2-21 

Figure 26. Message Window - Personal Save.2-23 

Figure 27. Administrative Password Retrieval.2-24 

Figure 28. Administrative Password Retrieval - OK.2-24 

Figure 29. Administrative Password Retrieval - WRONG.2-25 

Figure 30. Message Window - Public Save.2-25 

Figure 31. Tool Palette with Popup Menu.2-26 

Figure 32. Using Help.2-27 

Figure 33. RDE Information Window.2-28 

Chapter 3 

Eigure 1. Main Gui of the PSE.3-1 

Figure 2. Translator Setup.3-2 

Figure 3. Browser View.3-3 

Figure 4. Information View.3-4 

Figure 5. Edit Types Gui.3-5 


RDE User's Guide TOC-v 









































Figure 6. Set Relation Gui.3-6 

Figure 7. Edit Objects Gui.3-6 

Figure 8. Directory Browser Gui for grabbing files.3-7 

Figure 9. Parent/Child View. 3-8 

Chapter 4 

Figure 1. Remote Data Access Login.4-2 

Figure 2. Remote Data Access Main Dialog. 4-3 

Figure 3. Copy Out Window. 4_5 

Chapter 5 

Figure 1. Log Tool Window. 5 _] 

Figure 2. Query Results Window. 5.3 

Chapter 6 

Figure 1 . Metric Browser StartUp Screen. 6-3 

Figure 2 . Metric Browser - Changing Metrics Category. 6-4 

Figure 3. Project Selection Box. 6-5 

Figure 4. Metric Browser - New Set of Metrics. 6-6 

Figure 5. Metric Browser - Getting Parametrics. 6-7 

Figure 6 . Metric Browser - Accessing Database. 6-8 

Figure 7. Metric Browser - Retrieved Values.■..6-9 

Figure 8 . Metric Browser - Common Values.6-10 

Figure 9. Metric Report - Bar Chart. 6-11 

Figure 10. Metric Report - X-Y Chart. 6-12 

Figure 11 . Metric Output - Comma Separated Values.6-13 

Figure 12 . Comma Separated Value File Selection Box.6-14 

Chapter 7 

Figure 1 . Problem Report Tool (Main Window). 7.5 

Figure 2. Problem Report Category Dialog. 7-15 

Figures. Metrics Collection Dialog.7-15 

Chapter 8 

Figure 1 . Main GUI for the configuration file edits. 8-2 

Figure 2. Add project to projects with mailing list.8-3 

Figure 3. Editing a projects mailing list, is done in this GUI.8-4 

Figure 4. Main GUI for the Reuse Tool. 8-7 

Figure 5. Add Window.8-9 

Figure 6 . View File - used for help files, viewing Text.8-10 

Figure 7. Show Code Example.8-10 

Figures. Query display. 8_]2 

Figure 9. Display Matches. 8.]3 


RDE User's Guide TOC-vi 







































Figure 10. Directory Browser.8-14 

Figure 11. Summary of Matches.8-15 

Figure 12. ‘No matches found by query.8-15 

Figure 13. ‘parse error”.8-15 


Chapter 9 

Figure 1. 
Figure 2. 
Figure 3. 
Figure 4. 
Figure 5. 
Figure 6. 
Figure 7. 
Figure 8. 
Figure 9. 
Figure 10. 
Figure 11. 
Figure 12. 
Figure 13. 
Figure 14. 
Figure 15. 
Figure 16. 
Figure 17. 
Figure 18. 
Figure 19. 
Figure 20. 
Figure 21. 
Figure 22. 
Figure 23. 
Figure 24. 
Figure 25. 
Figure 26. 
Figure 27. 
Figure 28. 
Figure 29. 
Figure 30. 
Figure 31. 
Figure 32. 
Figure 33. 
Figure 34. 
Figure 35. 


Review Utility Startup Dialog.9-3 

Create Review Package Without Starting.9-6 

Review Utility With Review Package.9-8 

Start Review Dialog.9-9 


Selecting an Alternate Default Reviewer List.9-10 

Add Reviewers Dialog.9-11 

Specify Reviewer Dialog.9-12 

Reviewer Role Specification Dialog.9-13 

Create Review Package and Start.9-15 

Opening Review Package.9-17 

Design Objects Dialog.9-18 

Drag and Drop Techniques for Launching Design Object Features. . . 9-20 


Comments Dialog.9-21 

Create Comment from Dialog.9-23 

Enter Search Criteria Dialog.9-25 

Comment Search Results.9-26 

Action Items Dialog.9-27 

New Problem Report Dialog.9-30 

Open Action Item Dialog.9-32 

Action Item Search Results.9-35 

Redlining a Design Object.9-36 

Color Palette Dialog.9-37 

Closing a Review Package.9-39 

Stopping the Review.9-40 

Cancelling the Review.9-41 

Reviewer Listing Dialog.9-43 

Review Summary Dialog.9-45 

Named Package Filters Dialog.9-47 

Create Named Package Filter Dialog.9-49 

Edit Named Package Filter Dialog.9-51 

Turning Named Package Filtering On.9-54 

Default Reviewer Lists Dialog.9-55 

Create Default Reviewer List Dialog.9-57 

Edit Default Reviewer List Dialog.9-59 

Message Center Dialog.9-61 


RDE User's Guide TOC-vii 









































Chapter 10 

Figure], Task Manager Functionality. 10-3 

Figure 2. Task Browser. 10-8 

Figures. Task Manager Preferences Window. 10-10 

Figured. TMType Definitions. 10-12 

Figure 5. Tool Launch Data Window. 10-13 

Figure 6. Task Import Window. 10-14 

Figure 7. Task Editor Window. 10-15 

Figures. Task Editor Additional Information. 10-16 


RDE User’s Guide TOC-viii 












Acronyms 


Glossary of Acronyms 

AI 

Action Items 

CWD 

Current Working Directory 

DMAT 

Data Management Access Tool 

ggnats 

Problem Report Tool 

GUI 

Graphical User Interface 

HTML 

Hypertext Markup Language 

HTTP 

Hypertext Transfer Protocal 

IPD 

Integrated Product Development 

PC 

Personal Computer 

RASSP 

Rapid Prototyping of Application Specific Signal Pro¬ 
cessors 

REDB 

RASSP Engineering Database 

RDE 

RASSP Design Environment 

TDM 

Team Design Manager 

WWW 

World Wide Web 


RDE User's Guide G-1 














Getting Started 
Chapter Content 


Chapter Content 


Conventions 


Chapter 1: Getting Started 

Refer to this Chapter for: 

• Conventions 

• User’s Guide Overview 

• Introduction to the RDE 

• Using the RDE 

• System Requirements 

• Glossary of Acronyms 

• Customer Support 

The following conventions will be used throughout this document: 

• Acronyms are used for common or frequently used terms, refer 
to Chapter 1: “Glossary of Acronyms” on page 17. 

• Information that may be typed in by the user, and information 
being displayed from files will be displayed in 10 point Courier, 
usually on a separate line, as follows: 

cout << "The RDE is great...Want some ice?" << endl 

• Basic knowledge of Unix and X-Windows is assumed. 


RDE User's Guide 1-1 



Getting Started 
User's Guide Oveniew 


User’s Guide Overview This User’s Guide is part of the RDE Release 1.0 distribution. It con¬ 
sists of nine chapters that provide the information and instructions to 
guide the RDE user through the process of developing a RASSP- 
based system, i.e. creating and implementing electronic designs in an 
integrated environment to facilitate an efficient concurrent engineer¬ 
ing process. 

The following list outlines the contents of this guide. 

° Chapter 1: Getting Started 
° Chapter 2: The RDE Desktop Utility 
° Chapter 3: The Product Structure Editor 
° Chapter 4; The Remote Data Access Utility 
° Chapter 5: The Log Utility 
° Chapter 6: The Multi-Metric Browser Utility 
o Chapter 7: The Problem Report Utility 
° Chapter 8: The Reuse Utility 
° Chapter 9: The Review Utility 
° Chapter 10: The Task Manager 


1-2 RDE User’s Guide 




Getting Started 

User's Guide Oven'iew 


Getting Started 

This “Getting Started” Chapter provides a Chapter summary of the 
User’s Guide. The information stated in the “About This User’s 
Guide” Section is reiterated and expanded. Getting Started includes; 
Conventions, a basic Introduction to Using the RDE, System Re¬ 
quirements, Acronyms, and important Customer Support informa¬ 
tion. 

The RDE Desktop Utility 

“The RDE Desktop Utility” Chapter provides a guide to the function¬ 
ality of the RDE Desktop strip menubar and menu items, and how to 
invoke RDE Utilities and Services from the Desktop. 

Chapter coverage includes; Invoking and Exiting the RDE Desktop, 
Navigating the RDE, Tool Launching and Encapsulation, Help. 

NOTE: This manual assumes you 're familiar with basic Unix 
and Motif terminology and operations. Refer to appropriate 
documentation as needed. 

The Product Structure Editor 

“The Product Structure Editor” Chapter provides a guide to the func¬ 
tionality of the Product Structure Editor (PSE) and how it is used to 
manage data for an engineering project. 

The Remote Data Access Utility 

“The Remote Data Access Utility” Chapter provides a guide to the 
functionality of the Remote Data Access Utility (RDA) and how to 
access remote configuration management controlled data repositories 
which house the distributed RDE database. This multi-platform client 
currently runs on Macintosh, Unix, and Windows platforms. 


RDE User’s Guide 1-3 



Getting Started 
User's Guide Oven'iew 


The Log Utility 

“The Log Utility” Chapter provides a guide to the functionality of the 
Log Utility and how to log and access data for use in a project. The 
ability to make high and low level annotations is supported by the 
free format of this utility. 

The logged data is automatically stored in the RDE database within 
the project context. The Log Utility provides a query engine for log 
retrieval. 

The Multi-Metric Browser Utility 

“The Multi-Metric Browser Utility” Chapter provides a guide to the 
functionality of the Multi-Metric Browser Utility and how to access 
and display metric data. The RDE automates data collection and met¬ 
ric generation as much as possible. 

Metrics will be customizable to provide any Integrated Product/Pro¬ 
cess Development Team (IPPDT) member with useful metric data. 
The Multi-Metric Browser retrieves data from the RDE database as 
requested to populate the desired user form or report. 

The Problem Report Utility 

“The Problem Report Utility” Chapter provides a guide to the func¬ 
tionality of the Problem Report Utility and how to define and submit 
problem reports for use by the Problem Management System. The 
complete Problem Management System facilitates the handling of 
problems throughout the product development life-cycle. Remote ac¬ 
cess to the Problem Management System facilitates problem manage¬ 
ment for the di.stributed development team and the Virtual 
Corporation. 

A key challenge of development teams is to effectively identify, con¬ 
tain, and resolve development problems. To facilitate and automate 
this critical need the RDE uses the GNATS Problem Management 
System. The Problem Report Utility provides a GUI problem submis¬ 
sion utility as a replacement for the GNATS command-line send-pr. 
The Problem Management System automatically inform responsible 
parties and sends appropriate notifications. Problem Report data is 
available for metrics collection and display. 






Getting Started 

User's Guide Oveniew 


The Reuse Utility 

“The Reuse Utility” Chapter provides a guide to the functionality of 
the Reuse Utility and how to locate and acquire data for reuse in an¬ 
other project. Users may add to, query, and update the reuse database. 

Extended reuse component attributes; e.g. common keywords, logi¬ 
cal keywords, descriptions, units, interfaces; encourage the use of this 
utility and simplify the documentation of and the access to reusable 
development components. A variety of reuse library management ca¬ 
pabilities facilitate the use of this utility: import, export, backup, de¬ 
letion, redundancy, metrics display. Remote database 
synchronization facilitates reuse for the distributed development 
team and the Virtual Corporation. 

The Review Utility 

“The Review Utility” Chapter provides a guide to the functionality of 
the Review Utility and how to perform reviews in a project. The Re¬ 
view Utility supports and automates the entire review process. Re¬ 
view data is encapsulated in a Review Package which is maintained 
throughout the review process. 

Performing consistent accurate Technical Peer Reviews help ensure 
compliance with the development process and a quality product. The 
Review Utility facilitates on-line review by a geographically diverse 
team of reviewers. The Review Utility data is available for metrics 
collection and display. 

The Task Manager 

“The Task Manager” Chapter provides a guide to the functionality of 
the Task Manager and how it is used to control tasks on an engineer¬ 
ing program. 


RDE User’s Guide 1-5 









The RDE facilitates Integrated Product Development (IPD) by pro¬ 
viding a collaborative work environment. The RDE provides support 
for automating the product development process to improve product 
development, specifically with respect to cycle time, product cost, 
and product quality. The RDE enables the IPD philosophy with its 
support of rapid iterations, incremental promotion, and scalable con¬ 
figuration management controls. The IPD approach can be employed 
during all phases of a product's life cycle from conceptual and de¬ 
tailed design through production to field support, refer to Figure 1 on 
page 2 of Chapter 2 for Product Development Maturity Matrix. 

A wide variety of disciplines will be utilized throughout the product 
development process which requires the u.se of many clas.ses of tools 
including tools for program and project management, requirements 
capture and analysis, algorithm development, software engineering, 
and electrical and mechanical hardware design, modeling, and simu¬ 
lation. 

The RDE provides technologies that fully support concurrent design, 
development, and the electronic exchange of information, e.g. status, 
schedules, and product data. A fundamental thread in supporting IPD 
is communication; the RDE commercially available high-speed com¬ 
munication services allow for linking to geographically diverse sites. 
Since team members represent different companies, organizations 
and product development disciplines; the RDE supports a heteroge¬ 
neous computing environment, links between geographically diverse 
locations, tolerable configuration management, diverse product data 
and diverse tools. The RDE supports an improved product develop¬ 
ment process allowing for rapid iterations, incremental promotion, 
and scalable configuration management controls. 







Getting Started 

Using the RDE 


Using the RDE 


The RDE must be installed on compatible system(s), for detailed in¬ 
stallation information and system requirements refer to the Adminis¬ 
trator’s Guide (also refer to Chapter 1: “System Requirements” on 
page 16). 

Starting the RDE 

When the RDE is properly installed a user may invoke it via the Unix 
command-line by typing: 

rde<ENTER> 

This will display the RDE Desktop Utility. Now you have access to 
the RDE Services and Utilities. 

Understanding the RDE 

The RASSP Proliferation Team offers RDE training courses. If train¬ 
ing in the use of the RDE and the RASSP Process is desired refer to 
Chapter 1: “Customer Support” on page 18. 

This guide is intended for use as a reference and not a tutorial. Users 
of this material should be familiar with RASSP and the RDE. Users 
also must be literate in Unix and X-Windows. 


RDE User’s Guide 1-7 




Gettmg Started 
System Requirements 


System Requirements This section describes the platform, hardware and software require¬ 
ments for the RDE. This includes memory and disk space require¬ 
ments. Use this information to make sure you meet the minimum 
hardware and software requirements as they are crucial for proper in¬ 
stallation and operation of the RDE software. 

Platform Requirements 

The RDE software currently runs under Sun SPARC platforms run¬ 
ning SunOS version 4.1.3 only. 

Hardware Requirements 

To accommodate the RDE, the following memory resources are re¬ 
quired: 

° 50 Megabytes Hard Disk space 

° 16 Megabytes RAM 

Software Requirements 

The RDE software is dependent on the following software products 
for proper functioning: 

° X-Windows System, Version: XI1R5. or XI1R6. 

o TDM (Team Design Manager) from Cadence is required for 
configuration control of development data. 


NOTE: Full RDE functionality and services are provided without the 
explicit use of a Configuration Management {CM) or Version Control 
f UUj System. However, the use of some kind of CM / VC System is en¬ 
couraged. Many CM / VC System benefits are noted in the develop¬ 
ment process. 

° GNATS by GNU is used as the Problem Management System. 
This is public domain software that may be obtained via ftp 
from prep.ai.mit.edu:/pub/gnu/gnats*. 

NOTE: GNATS is not required; however, some Problem Management 
System must be in place. The product development life cycle may be 
severely hampered by the absence of a Problem Management System. 


1-8 RDE User's Guide 





Getting Started 

Glossary' of Acronyms 


Glossary of Acronyms 


AI 

Action Items 

CM 

Configuration Management 

COTS 

Commercial Off-The-Shelf 

CWD 

Current Working Directory 

GGNATS 

GUI GNATS 

GUI 

Graphical User Interface 

HTML 

Hypertext Markup Language 

HTTP 

Hypertext Transfer Protocol 

IPD 

Integrated Product Development 

IPPDT 

Integrated Product/Process Development Team 

PC 

Personal Computer 

RASSP 

Rapid Prototyping of Application Specific Signal Pro¬ 
cessors 

RDA 

Remote Data Access Utility 

RDE 

RASSP Design Environment 

REDB 

RASSP Engineering Database 

TDM 

Team Design Manager 

VC 

Version Control 

WWW 

World Wide Web 


RDE User's Guide 1-9 













The RDE Desktop Utility 

Chapter Content 


Chapter Content 


Introduction 


Chapter 2: The RDE Desktop Utility 

Refer to this Chapter for: 

• Introduction 

• Starting the RDE 

• File Menu 

• Set Working Directory 

• Edit Preferences 

• Edit Categories 

• Show All Tools 

• Show Function Names Show Tool Names 

• Install New Tool 

• Quit 

• Menu Bar Categories 

• Using a Tool Palette 

• Customizing a Tool 

• Saving Tool Information 

• Launching Tools 

• Help Menu 

The RDE is an environment shell in which working conditions can be 
customized and tools can be accessed and launched. Categories of 
tools can be set up in separate windows (tool palettes) so that there is 
easy access to launching of the tools that are used most. The way that 
the categories are set up is remembered from session to session - in 
regards to the categories that are defined, which tools are in those cat¬ 
egories, and the position and size of those category tool palettes. The 
tool palettes contain icons for the tools - providing quick and easy 
recognition and execution access. 

GENERAL NOTES 

• Use the TAB key or point and click with the mouse to move be¬ 
tween the fields of a window. 

• Selecting the Dismiss button displayed at the bottom of win¬ 
dows will close the current window. 


RDE User's Guide 2-1 









The RDE Desktop Utility 
St art in o the RDE 


starting the RDE 


File Menu 


2-2 RDE User's Guide 


Type rde in an xterm window and press Return. 

NOTE: If you receive any error messages (e.g., connection re 
fused) after typing "rde, ” the database sender may he down. 
Contact the System Administrator (SysAdmin), to start it up 
again. 

After a few moments, the RDE menu bar is displayed. 



FIGURE 1. RDE Menu Bar 

This menu is the entry way to all the functionality of the RDE. By de 
fault, it contains the "File” and "Help” choices, and can be custom 
ized to include more choices - namely a choice for each category of 
tools that are used. To add categories to the menu, see Figure 13. 
‘’Show All Tools (Tool Database),” on page 29. 

The File menu allows users to set the current working directory, edit 
user preferences, show all the tools available in the database, toggle 
between the tool names and the function names for the tool icons, in 
stall a new tool into the database, and quit from the RDE. 


lie TCI 




^Ttware 


^et Working Directory 
idit Preferences... 


iiiS 




Show All Tools 
Show Function Name 
Install New Tool... 




FIGURE 2. File Menu 



















File I TCP/IP^ Utilities S oftware HelD-| | ^ ^y 

Set Working Directory h Choose from file browser 
Edit Preferences... i Choose from history list... 

Edit Categories... _Choose from aiias list... 


FIGURE 3. Set Working Directory 

Use the Set Working Directory menu to establish from where you 
want to launch a tool. If the tools are launched through scripts, and 
the scripts do not change directories prior to actually running the ex¬ 
ecutable, the Current Working Directory (CWD), as set by these ac¬ 
tions, will be the place from where all tools are launched. This 
implies that as the tool is running, it will consider the current directo¬ 
ry the one that was chosen through Set Working Directory. 

When you select the CWD, the RDE will place all files created (by 
any tool) into the specified directory until you specify a different 
working directory through the tool, or unless the tool explicitly spec¬ 
ifies a different directory on its own. The very first CWD is the one 
in which the RDE is launched; and then the CWD is remembered 
from session to session. The CWD can be changed by the user at any 
time. 


The RDE Desktop Utility 
Set Working Directory 


Set Working Directory There are three methods of setting the working directory: Choose 

from file browser; Choose from history list; and Choose from alias 
list. 


RDE User’s Guide 2-3 













The RDE Desktop Utility 
Set Working Directoly 


Choose from the File Browser 


Filter box 


Directories list box 


Selection box 


File Selector 


Filter 


-l-sp/rde/uiork/gr egoro/rde/1 ch/1 ch.cdswa. Work/^" 


Directories 


Files 




^project 

* 


|da^Work/,^ 




Na^Work/^* 





la«york/♦rau^data 



+rau5_data 


da^Nork/niyesl 



myesl 


1 oa,»l^ork/ptrepository j 

I 


ptrepository 


da ^ Work/submitied ^Ifo1 



subniitted Jfol 


da*l»]ork/tes 



tes 


: ■■ . -. 




Selection 


^p/rde/work/gregoro/r de/ i ch/ i ch.cdswa ^ Wor k^ 


OK 


Filter 


Dismiss 


J Stag open after choosing a file 


FIGURE 4. Choose from File Browser 


The “File Browser” will most likely be used when the user wants to 
define an alias, and not have to type in the full path of the directory. 
Setting the CWD through this method, and then using the alias dialog, 
mentioned below, to make an alias for the CWD (by hitting the “Add 
cwd’ button), the user will have avoided typing in the entire path to 
the directory. 

“ Filter - Enables filtering using information provided in the Fil¬ 
ter texttield. The default for the Filter is to display ail directories 
in the directory. When the window is first displayed, you are 
shown directories at the level from where you either launch the 
RDE or last update the working directory (from this window). 


2-4 RDE User's Guide 












The RDE Desktop Utility 
Set Working Directory 


• Selection box - The path is displayed in the Selection box. Ver¬ 
ify that the path is where you want files to be placed when they 
are created within the RDE. 

• Directories - Use the directories list to locate the directory 
where you want newly created files to be placed. As you 
traverse the directory, the path name is automatically construct¬ 
ed and displayed in the Selection box. 

• Stay Open - Toggle to control keeping the window open after 
choosing CWD. 

• OK - Save the path, as the CWD, and close this window. 


Choose from the History List 


Birectcr^HistorBBialog ■ 


Birectory HieUry - 


size: 7' 



M Stay 


OK 


I Reset hisUry ler^th| Blsftlss [ 


FIGURE 5. Choose from History List 


The ‘‘Directory History ” Figure 5 on page 23 is mainly used for set- 

, ting the CWD and seeing the last few directories that were worked in. 

I The number of directory names it keeps track of, is set by the user. 

• Directory History - When the window is first displayed, you 
are shown directories that have been previously selected from 
the File Selector window. These directories are saved in the 
.rdetools file in the user’s home directory - for retrieval upon 
each start-up. A single click followed by hitting the OK button 

■ will automatically dismiss the window. 

• Stay Open - Toggles window feature to stay open after choos¬ 
ing CWD 

I- 


RDE User's Guide 2-5 

















The RDE Desktop Utility 
Set Working Directory 


° OK - Set the selected directory as the CWD, then closeness. 

° History Length - The length of the list is controlled by the user. 
The current max value of the length of the list is shown in the 
upper right corner and can be reset by hitting the ‘Reset history 
length’ button. 

° Dismiss Buttorii - This button will close the window no matter 
if the Stay open toggle is on or off. 


CHOOSE FROM ALIAS LIST 



Birector 1 iasesBia 109 


Bir aliases 



/1 oca 1 /hoiK^s/dsp/gresor 0 / 


Add dir! Add cwd| 


Edit! 


OK I Shrink1 Bismiss I 


Choose from Alias List - Shrunken and Expanded 


This “DirectofyAlias” Dialog is intended to remain on the desktop 
at all times, and take up very little space while doing so. Its attractive 
feature is that it can be shrunk and expanded. In the shrunken state, it 
gives just enough view of the alias names so that they are recogniz¬ 
able and selectable. The window is almost always kept shrunken. 
When aliases need to be edited, added, or deleted, then the window 
would be expanded for making the changes. A simple single click on 
the alias in the list will immediately change the CWD (updating the 
history list simultaneously). Typically, the user clicks on a desired 
alias immediately before launching a tool - so that the tool considers 
the selected directory its CWD. 


2-6 RDE Users Guide 
























The RDE Desktop Utility 
Set Working Directory 


Expand - Hitting the Expand button widens the window to 
show additional commands for aliasing. 

Add dir - Add a new directory alias to the list. 

Add cwd - Add whatever the new cwd is to the list and give it 
an alias. 


Edit - Edit the highlighted alias. 


Delete - Remove the alias from the list. 


• OK - Make the highlighted alias the cwd, and close the window. 
Figure 7 & 8 show some of the dialogs that affect the user’s alias list. 



I 


FIGURE 7. Add Dir Window 

• Add Dir - This window allows the user to make an entry to the 
list. 



Question 


Oian^ the value of the alias. 


J)ome=/local/'hoines/dsp/9re9oro/ 




Dismiss 



FIGURE 8. Edit Dir Window 


Edit Dir - This window allows the user to change an entry in 
the list. 


RDE User’s Guide 2-7 
















The RDE Desktop Utility 
Edit Preferences 


Edit Preferences 


Use the “Edit Preferences” dialog to set user preferences, to set the 
project, with a comment (for the current working rde session), and the 
SysAdmin directory data. The preferences, project and comment will 
be remembered from session to session. 


-"1 .Preferences || 

Project Rl^SSP_Softhiare ^ 

Comment 


jjjorking on release for June | 

Remember window layoyt at startup? Yes ^ \ 

Bcn4ble check upon quitting? No ^ 

■ ■ i 

■ j 

Sys Pdmin | 

.. 

Save 

1 Bismiss j - 


FIGURES. Edit Preferences 


The ToolTalk service, if activated, will communicate through the 
RdeBulletinBoard (a hidden background server), to other applica¬ 
tions using the same list of projects, the new project chosen. When a 
different project is selected as the current project, then the other ap¬ 
plications will be notified via the RdeBulletinBoard, so that they can 
update their current project data. 

° Project - Select a new project from this list. This list is defined 
in a file called “.rdeprojects" in the $RDE_HOME/etc/ directo¬ 
ry. 

° Comment - Enter a comment that briefly describes what you’re 
doing on the project. 

° Remember Layout at Start-up - Remembers the layout, size 
and position on screen of the fixed rde desktop application win¬ 
dows, and NOT any windows that come from tools launched 
from the rde desktop. 

° Double Check Upon Quitting - Asks the u.ser if he really wants 
to quit, after choosing 'Quit' from the File menu. If the user 
does not want the double check option turned on, then this 
should be set to ‘No’. 















The RDE Desktop Utility 
Edit Preferences 


• Save - Save the preferences to the user’s configuration file im¬ 
mediately. 

• Sys Admin - Bring up the window to set information known to 
the rde system administrator. See Figure 10, “Set Tool Dir Info 
Window,” on page 27. 

The Set Tool Dir Info Window provides the ability for a user to de¬ 
termine the location of the tool_log file, rde dynamic library, and the 
real dynamic library. The rde dynamic library is intended for use with 
tools that are declared to be Dynamic when they are installed, and the 
real dynamic library is used along with it. The main purpose of the 
rde dynamic library is to try to collect as many metrics about the tool 
as it is running as possible. The dynamic library capability is current¬ 
ly disabled. 



TckjI Ji(^ dirt 

y 1oca1/proj ects/rassp/rde/bui1d4/too1_1 09 

Itesktc^ 

y 1oca1/proj ects/rassp/rde/bui1d4/etc 

Rea! lib dirt | 

pusr/lib/ 

1 Help \ Dismiss | 

. , Okay 

1 . -- ■ . 


FIGURE 10. Set Tool Dir Info Window 


• Okay - Sets the fields information for subsequent use. 

• Help - Pops up a window with a short description of each field 
to be entered. Figure 10, “Set Tool Dir Info Window,” on 
page 27. 


RDE User’s Guide 2-9 











The RDE Desktop Utility 
Edit Categories 





Message """ / j| 

i 

Tool log directory: 
Desktop dyn lib dir: 

Real dyn lib dir: 

Place fe^ere parent 11 put tool i^etrics^ ; 
Lccatioti of tile libc«so^xx.,xx tfiat ms nade for this ^ 
desktop <$RDE„H0H£/etc/libc.so.i.39) i 
Location of the system's libc^so^xx^x dynamic library^ I 


«j 

1 


FIGURE 11. Set Too! Dir Info Help Window 


Edii CHtegjOri'BS Select 'Edit Categories...” from the file menu. The “Category Editor’' 

Figure 12 on page 28 allows the user to add and remove categories 
with ease. 



After selection 
‘Remove’ becomes 
active. 


Categories 


TCP/IP 

Utilities 


Pdd I [ I 


Remo*v?e DisMlss 


Category Editor Window-before and after selection. 


° Add - Make a new category and add its name to this list and to 
the RDE menubar. Either hitting the return key after typing in 
the name, or hitting this button, will add the category. 


2-10 RDE Users Guide 





















Ptoleny 


fidwiscr 


irc 

Clean 


Pcwerview 


Design 

ft^itect 


Install Neui Tool 


The RDE Desktop Utility 
Show All Tools 


• Remove - (Becomes active only after a selection is made.) Re¬ 
move the category by closing all the open tool palettes for that 
category and putting all its tools back into the tool database win¬ 
dow. Remove its name from this list and from the menubar. 

Show All Tools Use the Show All Tools menu to show all the tools that reside in the 

database, (see Figure 13, “Show All Tools (Tool Database),*' on 
page 29). These are all of the tools that are available to the user. 
These tools can be launched straight from this window, or launched 
from category tool palettes. Double-clicking on the icon, will launch 
the tool. 

To make a category tool palette, click on the “Make new category” 
button at the bottom of the dialog. (For more information see 
Figure 14 on page 30) 


Tool Database 


FIGURE 13. Show Ail Tools (Tool Database) 
























The RDE Desktop Utility 
Show All Tools 


° Install New Too! - Allows the user to install a new tool into the 
public database. 

° Make New' Category - Allows the user to make a new category 
to appear on the RDE menu bar. 

° Trash Can - Only the System Administrator has approval to re¬ 
move trash. (Figure 27, “Administrative Password Retrieval,” 
on page 42) Tools dragged to and then dropped into the trash 
can will be removed from the database permanently. Once it’s 
removed, no other users will have access to it in their RDE ses¬ 
sions. 

Make New Category 


Figure 14, “Make New Category,” on page 30 allows the user to cre¬ 
ate new category tool palettes. After adding new categories (i.e. Util¬ 
ities, Software, and Telnet) to the RDE, the menubar will change to 
contain the following displayed categories (See Figure 15, “Menu 
Bar (with newly added categories),” on page 30). 



1 Question 


Inter name of nay tool category^ 

[ 

I 



' Ok ■ 

Dismiss j 




FIGURE 14. Make New Category 

“ OK - Make a new category and add its name to the RDE 
menubar. 



FIGURE 15. Menu Bar (with newly added categories) 


2-12 RDE User’s Guide 











The RDE Desktop Utility 

Show Function Names Show Tool Names 


Show Function Names Toggle the labels next to all icons in the Tool Database window, as 

Show Tool Names well as the tool palettes, from either the actual tool name to the gener¬ 

ic function name, or the function name to the actual tool name. 

Install New Tool Installing a new tool will normally be done by a super user/SysAd¬ 

min type person, but it is possible by anyone in this release. If there 
is a tool that a user thinks should be made available to all the users of 
the RDE, and that tool is not already in the Tool Database (it doesn’t 
have an icon in Figure 13, “Show All Tools (Tool Database),” on 
page 29),the dialog in Figure 16, “Install New Tool Window,” on 
page 31 would be used to enter all of the information necessary to in¬ 
stall a new tool into the database. 

It is possible to install a new tool by ONLY providing a Tool Name 
and a Launch Command, since everything else can be defaulted. This 
is not recommended, however, as the more information that is accu¬ 
rate, the better the tool is represented. 



Neiii Database Tool Adder 


Tool name 


Function, 


Launch command: 


Optione/ewitches for launch command: 


Pixmap file name for icon; 


flan page keyword 


Version: 


Default host/machine to run on, 


DFttILT 


Is this an K application? 


Di^iss 


FIGURE 16. Install New Tool Window 


RDE Users Guide 2-13 






Default host/machine - The machine that will be used to run 
the tool each time that it is launched. 


° X application? - Is the application an X Window application? 

° Add to Database - Adds this tool to the public database. 

o Input TES file... - Prompts the user for a TES file. The TES file 
is used to fill in some of the fields of the form. 

“ Help - Pops up a window with a short description of each field 
to be entered. 

Figure 17, “New Database Tool Adder (Help),” on page 32 is the 
help window that is popped up after hitting “Help. ” It provides short 
descriptions of the fields that describe the attributes of a tool being in¬ 
stalled. 


Tool name: 
Function nmet 
Launch copimand: 
Opti c^is/sy i tehee: 


Pixffiap file: 
Hart 

Version: 


Default host: 


K application?: 



Name that mil appear next to the Icon* 

The gene^'al function that the tool perfof'P^s* 

The binary/executable name* 

Any options or switches that are passed as argents* 

If one of the options or switches is the nane of a 
d^iamically specified file^ then insert the key%.iord 
FILENAME uhere the file name uould be inserted at run time.> 
Name of pixmap file that resides in ^le directory 
specified uith the environment variable $RB£JOHE/etc/icons* 
Specify, ONLY, the *xpm file nar^, not the full path to it* 
Not implemented yet* Can leave blank* 

Version ruimber of the tool* This version number uill 
be used to distinguish amongst multiple copies of tte 
same tool in the database* This enables you to have an old 
version and a neu ver^sion of a t43ol to chioose from* Hoia- 
^er, it still stands that whatever is specified in the 
"Launch coramaixl" field will be launched* 

The host that this tool will be launched from* If 
^BEFAOLT'^is specified, then the host that the rde uas 
launched from, ulll be the host that is used to launch 
the tool * 

'Yes^ means that it is an K application, (using the K 
Nindous System)* ^No' means that it is a command-line 
type of application (requiring no K Windou System)* 




FIGURE 17. Mew Database Tool Adder (Help) 
















The RDE Desktop Utility 
Quit 


When you’ve finished using the RDE, you can quit out of it to end 
the current session. Be sure to quit out of the RDE before exiting your 
window system or logging out, as most of the state of your session is 
saved only by quitting properly. 

• Selecting Quit from the File menu pops up a window to confirm 
your decision. DO NOT use the window manager Destroy or 
Delete choice from the window manager’s menu, or an unfavor¬ 
able exit will occur, and no changes will be saved to the user’s 
personal configuration file. 


Question 



FIGURE 18. Quitting the RDE 


Menu Bar Categories 


You can now choose commands from the menus in the menu bar. To 
get the list of tool icons for a category, choose “Tool Palette” from 
beneath a category name (for example. Utilities as shown in 
Figure 19, “Menu Bar (selecting empty category tool palette),” on 
page 33). 



File Utilities | Software Telnet Hel^ 
Tool Palette 







FIGURE 19. Menu Bar (selecting empty category tool palette) 


This brings up a blank tool palette - if the category hasn’t been filled. 


RDE User’s Guide 2-15 

















The RDE Desktop Utility 
Using a Tool Palette 


Using a Tool Palette 



FIGURE 20. Category Tool Palette (empty) 


When you select a category (by selecting the "Tool Palette” choice 
from the category menu) from the RDE menu bar such as Utilities, 
Software, Telnet, or some other custom category, a tool palette is dis¬ 
played. Multiple instances of the same category tool palette can be 
displayed. The idea behind this is that the user might want to have one 
Software too! palette in one virtual window and another Software tool 
palette in another virtual window. This is only useful if your window 
manager supports virtual windows. 

For each tool palette instance, the window is numbered, to be able to 
distinguish multiple instances from each other at quitting time. These 
numbers are only needed for helping distinguish the windows when 
remembering the window layouts. 

From the Tool Palette, and from the Tool Database window, you can 
view information about a tool prior to launching it, and you can di¬ 
rectly launch a tool by double-clicking on it. To view information 
about a tool prior to launching it, see Figure 25, ‘‘Tool Configuration 
(Tool Information),” on page 39. To launch a tool without first view¬ 
ing its information, see Figure 31, ‘‘Tool Palette with Popup Menu,” 
on page 44, 


2-16 RDE User’s Guide 












The RDE Desktop Utility 
Using a Tool Palette 


NOTE: The tool palettes for any category have the same com¬ 
mand functionality, i.e. they have the same command buttons 
and subsequent behavior. The only difference is the tool set de¬ 
fined within the tool palette for a category. (The category. Soft¬ 
ware, might contain debugging aids or compilers for 
developing software while a category. Project Management, 
might contain scheduling and cost accounting aids for manag¬ 
ing a project.) 

Adding a Tool to a Category 

With the middle mouse button, drag an icon from the Tool Database 
window to a desired category Tool Palette. Then, letting go of the 
button to add that tool to the receiving category. See Figure 21, “Add¬ 
ing tools to the new tool palette (dragging with Button2),” on 
page 36. 

Removing a Tool from a Category 

With the middle mouse button, drag an icon from a category Tool 
Palette to the Tool Database window. Then, letting go of the button 
will remove that tool from all instances of the category that contained 
it, and put it back into the tool database palette. The icon in the Tool 
Database window will now be un-grayed-out, since while it existed 
in a category tool palette, it was grayed-out in the Tool Database win¬ 
dow. 

Changing a Tools Category 

With the middle mouse button drag an icon from one category to an¬ 
other. When you let go, the tool will be removed from all the category 
tool palette instances that used to contain it, and will appear in all the 
tool palettes of its new category. 


RDE User’s Guide 2-17 







yruLJi- 












































- ;■-ivi :.■■..<::• ifW .%«$;*.* 

iliillB 




I File Utilities I Software Telnet Hel^ 
Tool Palette 

I Itiliyatirii 

FIGURE 23 


ool choices corresponding to icons in new tool palette 


ObjectCenter 


Tool 

Metric 

Repcrt 


XBeeisner 




The RDE Desktop Utility 

Using a Tool Palette 


And the menubar choice, Utilities, will now have these tools under- 
neath it - which will be available for launching by selecting them: 


RDE 


To select a command from the menu bar, single click the menu name, 
and then single click the menu choice. Or select the menu name, and 
while holding Button 1, drag down to the menu choice and release the 
button. 


RDE User *s Guide 2-19 


Software 


LDG 

Chan^ category 

RftSSP 

AliQn icons , 

I 09 

Toggle function/tool names 


cwd: /local/tool s/c+Vreuse/BD-rf/ 


Dismiss 


Customize 


FIGURE 24. Tool 
























The RDE Desktop Utility 
Ciisromizing a Tool 


° Customize - View and possibly customize the attributes of the 
current tool. 

® Documentation - Not yet available, this option will show the 
documentation for this tool. 

“ Launch - Run the selected tool on the default host. 

° Popup - Buttons - When pressed on the background of the pal¬ 
ette (not on a tool) the pop up Functions menu appears. 

° Change Category - When dragging over the 'Change category’ 
menu choice, there should be a sub-menu that pops up. It will 
contain the list of categories that already exist for your rde ses¬ 
sion. Choosing one of these will swap out the current category 
of tools, with the newly selected category of tools. 

° Align icons - Move each icon to its own spot on the invisible 
grid. 

° Toggle function/tool names - Replace the names underneath 
the icons with the generic descriptive name of the appropriate 
tool, if the specific tool name is currently being displayed, and 
vice versa. 

Customizing a Tool The Too! Information window is selected by choosing the Customize 

option in the popup menu or the Customize button as shown on 
Figure 24, “Tool Palette,” on page 37. When you select a tool in the 
tool palette, the tool gets a square border around it to indicate that it 
is the “active” ioo\. 

This window displays information about the tool configuration, see 
Figure 25, “Tool Configuration (Tool Information),” on page 39, in¬ 
cluding its version, name, function, and icon pixmap file. You can 
modify the default information and save it as the new default. Person¬ 
al saving occurs in the user’s own configuration file, it does not affect 
the attributes of the tool in the database - so making changes will not 
bother other users. A public save will eventually affect other users 
when they start up again - and a password is required to be able to do 
a public save. 


2-20 RDE User's Guide 









Tool icon 


FuncticMi 


Cirrent file 


Icm pixmap file 


1^.8^ Cc»wi^ 


Launch Command. 


Switches/Options 


rassplogtest FILENAME 


Host button 


Version button 


Output TES file 


Launch 


RDE Users Guide2’21 


The RDE Desktop Utility 

Customizing a Tool 


• Tool Icon - The tool icon is customizable. To modify the icon, 
you need to either update the actual file that is displayed in the 
‘Icon pixmap file’ box, or replace the pixmap file name with 
that of another pixmap file name. The ‘Icon pixmap file’ box 
contains only the name for the pixmap file as it appears in the 
$RDE_HOME/etc/icons directory. This directory contains pix- 
maps for all tools in the database, so when a new pixmap is de¬ 
sired, it must be put into this directory to be accessible. 


Tool Configuration (Tool Information) 


FIGURE 25. 


Tool Information 


BflSSP log 


jletrics 


rassplog^xpm 


^itchec/upt ions 
IFILENAME 








° Version Button - The Version button displays the version of 
the tool. Eventually (in later releases) if other versions exist, 
they will be displayed in the pop-up menu when you click on the 
version button - but for now, multiple versions are represented 
by multiple icons. Multiple versions are useful when you have 
different files using different versions of the same tool. 

° Current File - The Current file box will display the currently 
selected file. This file will be used as a switch/option when the 
tool is launched. It replaces $FILENAME. 

° Launch Command - The Launch Command box contains the 
command used when the RDE launches the tool. It uses this 
command in conjunction with the options contained in the 
Switches/Options box. For example, to launch a file in Object- 
Center, you may always want the options to be objectcenter (for 
the launch command) and, -1 $FILENAME -g (for the Switches/ 
Options text). SFILENAME will be the value of the entry in the 
“Current File” text box. 

° Host Button - The Host button contains an option list of hosts 
denoting from where you can launch the tool. 

° Public Save - Save the changes, just made in this window, to 
the database. The database is a public database, so the changes 
made to it will be available to all other users when they run the 
rde. An administrative password is required in order to make a 
public save, so if it is needed, then it can be found out by the rde 
administrator. 

“ Personal Save - Save the changes, just made in this window, to 
the user’s personal configuration file (in his/her home directo¬ 
ry) named “.rdetools”. These changes won’t be available to oth¬ 
er users, and so the user can experiment without fear of 
affecting other rde users. If the user desires to reset the tool in¬ 
formation to what is in the public database, then the Revert To 
Public Info button can be used. 

° Revert To Public Info - If the user desires to reset the tool in¬ 
formation to what is in the public database, then this button will 
wipe away the attributes currently associated with the tool, and 
replace them with the ones currently being held in the public da- 
taba.se. 












The RDE Desktop Utility 
Saving Tool Information 


Saving Tool 
Information 


• Output TES File... - This will prompt the user to specify a di¬ 
rectory and file name in which to output the TES file. The out¬ 
put of a TES file is a step in an effort to have the rde completely 
compatible with the industry standard of tool encapsulation 
techniques. Outputting a TES file, as the rde is currently imple¬ 
mented will produce a minimal, but accurate, TES file that can 
be read by other TES parsers/readers. The rde will currently 
read in a TES file, if the user specifies so, when a new tool is 
installed. A more robust and accurate TES reader is scheduled 
to be implemented by a member of CFI (CAD Framework Ini¬ 
tiative), and will eventually be integrated with the rde to provide 
a more useful interface to TES files. This is not a necessary 
function for the user to use - it is strictly optional. 

• Launch - Launch the tool. 

NOTE: If the host, from which you wish to launch tools, is miss¬ 
ing from the hosts lists, contact your system administrator. 

If you made any changes to the tool configuration in the Tool Infor¬ 
mation box that you wish to be the new default, you should save your 
changes. The changes you make can either be reflected in only your 
environment, or in the public environment. If you wish to make a 
change to the public environment, you will be prompted to enter a 
password first. 

Note: Only the System Administrator has approval to change. 

Personal Save 

Save the changes made to the tool to the user’s rdetool file in his/her 
home directory. The following window appears when the change is 
made; 


J_ Message _ 

The Icon name, function name, pixmap file, 
launch command, switches/options, and host, 
have been saved, and will be reflected In 
y6uMrdetool.sill:e.i5siiWi^ 



FIGURE 26. Message Window - Personal Save 


RDE User's Guide 2-23 









The RDE Desktop Utility 
Saving Tool Information 


This message states that changes made to the Tool name. Function. 
Icon pixmap file. Host selection default. Launch Command and 
Switches/Options text, will be saved to your .rdetools file. 

NOTE: This message is displayed momentarily. It will be dis¬ 
missed automaticalh unless \oii click OK to dismiss it maniial- 
iy. 

Public Save 

If the administrative password has not already been given, then the 
following prompt will be popped up to let the user enter it; 


E 

1 Question 

Enter admin paseuord* 







r 1 : 

I 0^ j Bismiss 1 




FIGURE 27. Administrative Password Retrieval 

The rde administrator will type the password. If the correct password 
is entered, the following popup is shown: 



Hessags ' ' j 

You no\4 have administrative privileges 

J and can make public changes to tools, 

including removing them from the database^ 



ok] 


—. 


——. * 


FIGURE 28 . Administrative Password Retrieval - OK 

Then a loop will be entered, allowing the user to re-enter the pass¬ 
word until it is correct, or until the user gives up. The following pop¬ 
up is shown when the wrong password is given: 


2-24 RDE Users Guide 










The RDE Desktop Utility 

Launching Tools 


I 

I 

I 

I 

i 

1 

! 

I 

I 


Launching Tools 



nz 

Question | 


That was the urwig 


Ib ^ mnt to try again? 


Yes 



FIGURE 29. Administrative Password Retrieval - WRONG 


Finally, when the correct password has been given, the user may save 
the changes made to the tool, to the database, where the changed tool 
will be available to every user who starts up the rde in the future. The 
following window appears when the change is made; 


J ‘ Hessase'''■ __ 

The icon name, function name, pixmap file, 
launch command, switches/options, and host, 
have been saved to the tool database, and 
will be made available to all users now. 



FIGURE 30. Message Window - Public Save 


This message states that changes made to the Tool name. Function, 
Icon pixmap file. Host selection default. Launch Command and 
Switches/Options text, will be saved to the database, which is read by 
everyone at start-up time. 

NOTE: This message is displayed momentarily. It will be dis¬ 
missed automatically unless you click OK to dismiss it immedi¬ 
ately. 

You can launch a tool from several windows of the RDE: from the 
top menu category pull-downs, any tool palette, the Tool Database 
window, and from the Tool Information window. To launch a tool 
from a Tool Palette or from the Tool Information window, see 
“Launching a Tool from a Tool Palette” and “Launching a Tool from 
the Tool Information Window” sections which follow. 


RDE User’s Guide 2-25 






The RDE Desktop Utility 
Launching Tools 


Launching a Tool from a Tool Palette 

Using Button], double-click on the tool icon to launch it from the de¬ 
fault host. Or, using ButtonS, popup a Functions menu, from which 
the host is selected from the Launch submenu. 



o Popup - Buttons - When clicked on a tool, this Functions popup 
menu appears. When dragging over to the right of the launch 
choice - this host list appears. Selecting a host will launch the 
tool off of that host. 

° Launch Button - Click on the launch button at the bottom of 
the window, and the ‘'active” tool (one with box around it) will 
launch from the DEFAULT host, which is the host on which the 
rde was started, or a specific host that was set as the default for 
that particular tool. 


2-26 RDE User's Guide 











The RDE Desktop Utility 
Help Menu 


Launching a Tool from the Tool Information Window 

The Tool Information window is displayed after selecting '"Custom¬ 
ize” from either the bottom of the tool palette or the Functions popup 
menu of the tool icon. Hit the "Launch” button to launch the tool. The 
tool will launch using the information shown - launch command, 
switches/options, and current file (if SFILENAME is an option). 

NOTE: For information on how to use the launched tool, follow the 
user’s guide that accompanied the tool. 

Help Menu The RDE Help command provides: 

• Information about the RDE 

• Help Desk capabilities 

• Screen sharing capabilities 

• Problem Reporting capabilities 


I 

i 


J 

i 



About RDE 
Help Desk 


Screen Sharer 
Problem Reporter 


FIGURE 32. 


Using Help 


I 


RDE User’s Guide 2-27 












The RDE Desktop Utility 
Help Mejiu 


Using About RDE 

Within the Help menu, you can view information about the RDE. 
e.g., version and release date. 


RBE Infortsation 


RDE 


RfiSSP Savelopsient EnvirGrrr.snt 
ysrsion 0,1 

Tue Jan 3 08:48:23 EST 1935 




FIGURE 33. RDE Infbfmatron Wind 


Using the Help Desk 

Invoking the Help Desk will provide on-line help. Currently this help 
is provided via the WWW, and invoking the Help Desk will open up 
a web browser to the site containing the documentation available. If 
there is no web browser available, the only documentation is this Us¬ 
ers Guide. Additional help may be obtained through customer sup¬ 
port (see the section “Customer Support” in Chapter 1). 

Using the Screen Sharer 

Invoking the Screen Sharer will try to invoke CECED if it is available 
on your system. It will invoke it with a session of the rde running on 
it in order to u.se the rde in a screen-sharing capacity. 

Using the Problem Reporter 

Invoking the Problem Reporter will invoke the Problem Report util¬ 
ity that is discussed in the Problem Report Tool chapter. 


2-28 RDE Users Guide 












The Product Structure Editor 

Chapter Content 


Chapter Content 


Introduction 


Starting the PSE 


System 


Chapter 3: The Product Structure Editor 

Refer to this Chapter for; 

Introduction 

System 

View 

Relationships 


Note to Reader: The PSE, including this version, is currently being de¬ 
bugged and continuously developed. Do not perform a formal test on this, 
due to the debugging being done at Sanders, but we would appreciate any 
bug reports or new features that you would like to see. Please contact us 
with any problems at robc@sanders.com. Thank you. 

GENERAL NOTES 

• Use the TAB key or point and click with the mouse to move between 
the fields of a window. 

• Selecting the Dismiss button displayed at the bottom of windows 
will close the current window. 

Type pse in an xterm window and press Return. 

The main gui is the first interface which appears when PSE(Product 
Structure Editor) is run. There is three main options: System, Views, and 
Relationship Figure 4, “Information View,” on page 50. 



|/tmp_nfint/auto/raid 


FIGURE 1. Main Gui of the PSE 


Under Systems, there are two options: Translator Setup and Exit. Trans¬ 
lator Setup allows the user to define a format translator Figure 4, “Infor¬ 
mation View,” on page 50. Currently, a list of translators is read in from 
a file; however, they will soon be stored in the database. Right now, this 
setup gui will add the information to the file and refill the tables, by re¬ 
reading the file. Later this setup gui will just add the information to the da¬ 
tabase. The first field expects the command name of the translator. The 


RDE User’s Guide 3-1 






The Product Structure Editor 
Vie\vs 


second field expects the file extension that would exist on the file to be 
translated: ex. gif, xpm. The third field expects the new extension of the 
translated file: ex. tiff, ppm. The last field would contain any flags needed 
to run the translator: ex -o. Exit would, of course, exit the PSE. 


^ j 

Translator Setup ! -ijj! 


Translator Executable nan>e: 


]! 1 

Qrislnal Forint: 


Translated Formtt 

] 

I 

Line StrlngtCoptional) ■ 

i 

. 1 

"• .: ^ 


OK; 

C^cei Disfnissl 

..... ml .. .-T 


FIGURE 2. Translator Setup 


Under Views, there are three working options: Parent/Child(Hierarchy), 
Information, and Browse. The first pops up a Parent/Child, or hierarchi¬ 
cal, view Figure 4, “Information View,^’ on page 50. Basically, this shows 
a center icon and its parents and children. This view type may also be cre¬ 
ated by pressing the icon with hierarchy chart on it{second one). Informa¬ 
tion view shows textual information about an object, usually the center 
object Figure 4, “Information View,’’ on page 50. This view may also be 
created by pressing the 'i' icon. Another view is currently in the works and 
it is a browsing view Figure 4, “Information View,” on page 50. To 
traverse this view siply single click the icons, not double click. (More on 
this as it develops) More on the view interface is provided below. 


3-2 RDE User’s Guide 















The Product Structure Editor 



RDE User's Guide 3-3 














The Product Structure Editor 



FIGURE 4. Information View 


Relationships Under Relationships, there are three options:Edit Types, Set Relation, and 

Edit Objects. Edit Types pops up a gui within which new relationship 
types may be added, edited, and in the future deleted Figure 4, “Informa¬ 
tion View,” on page 50. Relationship types should be defined before any 
are set. Set Relation pops up a gui within which two objects may have a 
relationship defined about them Figure 4, “Information View,” on 
page 50. Using the second mouse button, one object icon is dragged onto 


3’4 RDE User's Guide 



















The Product Structure Editor 

Relationships 


the 'From' drop site. Then, another object is dragged onto the 'To' drop 
site. The dragged icon should go from red to green, green indicates a legal 
drop site. The relationship is selected from the list given. Edit Objects 
pops up a gui which allows new object types to be added to the database 
Figure 4, “Information View,” on page 50. When PSE is first installed, 
there either should be types added through this gui or imported through a 
command line import. The common object types are folder, document, 
image, and workflow. 



FIGURE 5. Edit Types Gui 


J-5 RDE User’s Guide 








































ODD 


The Product Structure Editor 
Relationships 



QkPSE , Qdriwer.cc ' 

QpseHainl)Uijcd.h ■ ■ Qps«RelsttonsEdltor_xd,h QpeeR»l«tionsEditw.cc 

npseRelatiiit1Sefcttn9.ee [~*|HekeFlle ■' ■ " Qp5eRelatttsiSefcttn9.h 

QpeeRelationSettinsjcd.h QpseTranslatorSefcwJ.ifd.h 'QpseTran»l^<irS»tijp.xd 
QpsaHatnSjt.o Q|i»d?elafcionaEdifciirjid.o' QpsaRSIattofisEdttqr.o 

r~*) pa eP roi i p tBialo 8 .» QpseOWectsait<ir.wi QtpseMainGui.cci 

QpseSpectal0lsjectH9r.o QpeeCfclecfcsEditerjBUi ., QpseOtiiecfcsEdt^.ce 

n]pseCop9Ch4ectrilej(d.bak npseflWectsEattor.Kd.o QpseKeirtGui.xd.bak 


FIGURE 8. Directory Browser Gui for grabbing files 


The first icon on the tool bar is used to popup a file browser type dialog 
Figure 4, “Information View,” on page 50. This is used to get files from 
directories, by dragging them onto the icons in a view, using second 
mouse button. The second icon brings up the Parent/Child view. The third 
icon with the 'i' on it brings up the Information view. 


On the views, there is another menu bar with three options: View, Rela¬ 
tion, and Bookmarks. 

Under View, there is a list of all the possible views that the current one 
can be converted to. Relation currently contains 'Hierarchy' and 'Depends 
On'. Pressing one would adjust the order of the icons on the view, if it ap¬ 
plied to them. In the future, this should be updated to contain all possible 
relationships. Bookmarks allows bookmarks, or place keepers, to be add¬ 
ed or there label edited. Existing bookmarks for a user should also show 
up as menu buttons as they are added. Currently, the edit feature is not im¬ 
plemented. Pressing on a bookmark button should force the view to goto 
that center icon and show the view as it was seen when the book mark is 
set. The user sets a bookmark by going to the center icon view that it wants 
to remember, and then pressing the Add Bookmark button. 

Two icons on the views are for dismissing the view, red circle with line. 


3-7 RDE Users Guide 




The Product Structure Editor 
Relationships 


and creating a link to another view, which must be popped up first. When 
linking views, press the link icon, second one, and the cursor will turn into 
a link symbol. Next, press the link icon on the other view. This will cause 
the views to be framed by a matching color, indicated that they are linked. 
Changing the center object on one, will automatically change it on the oth¬ 
er. To choose a center object on the Parent/Child view, simply double 
click on the icon. 



3-8 RDE User’s Guide 





















The Product Structure Editor 

Relationships 


Also available on the views, a popup menu appears when the third mouse 
button is pressed on a icon on the view(not one of the tool bar icons). This 
menu includes actions for that icon. These may include Check In, Check 
Out, Subscribe, Edit Attributes, Delete, and Create Folder. Check In will 
check the file into the database(might not be working yet). Check Out will 
check the file out of the database(might not be working yet). Subscribe al¬ 
lows the user to add his name to a list of people who will be mailed mes¬ 
sages when this file is checked in. Edit Attributes allows the user to edit 
attributes. Delete will remove the object. Create Folder will create a new 
folder off this icon. Additional options may show up if there are other ac¬ 
tions which can be done to it. For example, a document can be viewed, 
edited and printed if the tools are available. In that case, each action would 
show up on the menu with submenus containing the tool used. Selecting 
on of those tools should cause the action to happen. This is where the 
translators come into play. Sometimes a file has to be converted in order 
to be used by the available tools. Usually image files are involved with 
translators. 


3’9 RDE Users Guide 


The Product Structure Editor 
Relationships 


3"I0 RDE User's Guide 






The Remote Data Access Utility 
Chapter Content 


Chapter 4: The Remote Data Access Utility 
Chapter Content Refer to this Chapter for: 

• Introduction 

• Service Broker / Server 

• The RDA Client 

introduction The RDE Remote Data Access Utility (RDA) is client/server soft¬ 

ware for accessing the RASSP database. This version consists of a 
Service Broker, a Server, and a Client. 

The Service Broker maintains the list of available Servers. The Serv¬ 
er registers itself with the Service Broker and waits for a Client. The 
Client asks the Service Broker for a Server and receives the necessary 
information to connect to one. The Server then disconnects itself 
from the Service Broker and spawns a new Server. This new Server 
registers itself and is available for the next Client. Once the Client and 
Server are connected the user logs in, performs database operations, 
and quits. When the user quits both the Client and Server are ended. 

NOTE: There is a Server running in the background so that au¬ 
thorized Clients may connect as desired. 

The Service Broker (vdasserv) and the Server (idaserver) must 
be running on a Sun before a client ^da) is started. The available da¬ 
tabase operations are Up, Down, Home, Copy Out, Checkout, Cancel 
Checkout, Checkin and Impound. Currently, these are implemented 
using the Team Design Manager (TDM) tool by Cadence. 

Service Broker / Server The Service Broker and the Server must be started by your system ad¬ 

ministrator before the Client is started (and the user logs on). 

The RDA Client The Client software must be started from a directory (folder on the 

Mac) which contains the executable ^da) and the resource file 
(rda. vr). On a workstation type: rda -laf motif or launch it 
from the RDE desktop as you would any other application. On a Mac 
or PC double-click on therda icon. The Login Screen will be dis¬ 
played (see Figure 1, “Remote Data Access Login,” on page 58). The 
user should enter the hostname (fully qualified if it is on a Wide Area 
Network), login name and password, then press the return key or 
click on the OK button. If your connection is refused or you get and 
invalid user message contact your system administrator. 


RDE User’s Guide 4-1 






The Remote Data Access Utility 
The RDA Client 


The Mme Dialog Screen 

Upon successful login the Remote Data Access main dialog window 
will be displayed, see Figure 2, “Remote Data Access Main Dialog," 
on page 59. The main dialog screen contains the following areas; the 
pull-down menu bar; the project name; the remote host name; the cur¬ 
rent database object; the list of project files; the directory traversal 
buttons; the database action buttons; the session history; and the Quit 
button. The pull-down menu bar contains the File menu, which has 
RDA Info and Quit, and the Projects menu, which has Select Project. 
Choosing RDA Info will display information about the current ver¬ 
sion of the RDA client. The other menu entries will be discussed be¬ 
low. 



Quitting 

There are two ways to exit the client program. 1) Click on the Quit 
button at the bottom. 2) Click on the Quit button in the File pull-down 
menu. With both methods, the user will be asked to confirm the ac¬ 
tion. The user should click on the Yes button to exit or on the No but¬ 
ton to continue the program. 


4-2 RDE Users Guide 











The Remote Data Access Utility 
The RDA Client 


Choosing a Project 

The user must select a project before any database actions can be tak¬ 
en. This is done by choosing the Project pull-down menu Select 
Project option. A list of available projects will be displayed. If the list 
is empty or incorrect contact your system administrator. When the 
user chooses a project its name will be displayed on the Project line 
and a list of all the files in its top-level directory will be displayed in 
the Project Files window. Directory names will end with a slash (/). 



Remote Data Access 


RIe Project 


Project: rde 


Remote Host: 


Database Object: | Users Guide/Acronym.fm 
Project RIes: 


Appendtx.fm 
Cover.fm 
Desk_Top.fm 
Guide .bk 
Gulde.TOC 


Check Out 


Cancel Check out! 


Check In 


Metrics.fm 

Problem.fm 

RDA.fm 


Impound 


Home 


current Session History: 


1 : RDE : Select Project: RDE 

2 : RDE : Change Dir: 

3 : RDE : Change Dir: UsersGuide/ 

4 : RDE : Check Out: UsersGuide/RDA.fm 


FIGURE 2. Remote Data Access Main Dialog 


RDE User’s Guide 4-3 












The Re?note Data Access Utility 
The RDA Client 


Choosing a File 

To go to a lower-level directory the user clicks on the directory name 
and then clicks on the Down button. The user can double-click on the 
directory name instead. To go up to the next higher directory level the 
user clicks on the Up button. Clicking on the Home button will return 
to the project’s top-level directory. To choose a file, the user clicks 
on the file name. The name will be displayed in the Database Object 
window. The user can scroll through a file list by sliding the scrollbar 
up and down. 

The Copy Out Function 

This function makes a read-only copy of a database file to the user's 
work area. The user selects a file, then clicks on the Copy Out button, 
and the Copy Out window will be displayed, see Figure 3, “Copy Out 
Window,” on page 4. This window allows the user to browse through 
his directories (folders on the Mac) and choose where the file will be 
written. The user can scroll up and down using the scrollbar. The di¬ 
rectory levels can be traversed by clicking on the less than (<) and 
greater than (>) symbols or by double-clicking on a folder symbol (in 
this example there is a folder labeled sub3. The name the file will be 
given is displayed in the Save as field. 


4-4 RDE Users Guide 





The Remote Data Access Utility 
The RDA Client 



FIGURE 3. Copy Out Window 


After choosing the directory and filename the user clicks on the OK 
button to start the file transfer, or on the Cancel button to return to the 
Main Dialog window. While the copy is in progress an hourglass will 
be displayed and the window will be frozen. Note that if there is an 
existing file of the same name as the one to be copied out, the user 
will be notified and must verify the action. 


RDE User’s Guide 4-5 













The Remote Data Access Utility 
The RDA Client 


The Check Out Function 

This function makes a read/write copy of a database file to the user's 
work area and locks the file so no other user can check it out. Other 
users may, however, do a Copy Out of the file. The user selects a file, 
then clicks on the Check Out button, and the Check Out window' will 
be displayed. This window is identical to the Copy Out window ex¬ 
cept for the title. The user selects the directory/file where the file will 
be written and clicks on the OK button. While the check-out is in 
progress an hourglass will be displayed and the window will be fro¬ 
zen. Note that if there is an existing file of the same name as the one 
to be checked out, the user will be notified and must verify the action. 

The Cancel Check Out Function 

This function cancels the check-out of a database file by unlocking 
the file so another user can check it out. The file is not removed from 
the user’s work area. The user selects a file, then clicks on the Cancel 
Check Out button. While the operation is in progress an hourglass 
will be displayed and the window will be frozen. 

The Check In Function 

This function copies a file from the user’s work area to the database. 
The selected file must have been checked out by the user using the 
Check Out function. The user selects a file, then clicks on the Check 
In button, and the Check In window wdll be displayed. This window 
is identical to the Copy Out window except for the title. The user se¬ 
lects the directory/file of the file will be read and clicks on the OK 
button. Note that the file names on the Check In menu must match the 
one on the Main Dialog. While the check-in is in progress an hour¬ 
glass will be displayed and the window will be frozen. 

The Impound Function 

This function copies a file from the user’s work area to the database. 
The selected file must not exist in the database (i.e., it is a new file). 
The user selects a file, then clicks on the Impound button, and the Im¬ 
pound window will be displayed. This window is identical to the 
Copy Out window except for the title. The user selects the directory 
and file that will be read and clicks on the OK button. While the im¬ 
pound is in progress an hourglass will be displayed and the window 
will be frozen. 








Project menu 


Project; 


RftSSPJetno 


ID: 


The new C compiler worked greatC 


Add Query! Dismiss 


RDE User’s Guide 5-1 


FIGURE 1. Log Tool Window 


The main window consists of a project menu, a name and date field, 
a text area for entering logs, and a set of action buttons. You may quit 
the tool by pressing the “dismiss button ’’ on the main window. 


The Log Utility 
Chapter Content 


Introduction 


Adding a Log 


1. Choose a project by clicking the project menu and selecting the 


Chapter 5: The Log Utility 


Refer to this Chapter for: 


• Introduction 

• Adding a Log 

• Querying the Database 

• Deleting Logs 


The log tool allows the user to record small pieces of important infor¬ 
mation on a day to day basis. It also will generate a report of logs that 
pass a user defined query. 


Chapter Content 


Name field 


Date field 


Log text area 





The Log Utility 
Querying the Database 


project you wish to add your log to. 

2. The users login name is shown by default. If the name field does 
not show the correct name, select the field and enter a new 
name. 

3. Enter current date. The date must be typed in (MM/DD/YY) 
format. 

4. Select the log text area and enter your log message. 

5. Click the action button “Add” to add your log to the project log 
database. 

Your new log is now stored in the database. 

Querying the Database The method of querying the log database is very simple. Only records 

which match the name field and the date field will be found, (see 
Figure 1, “Log Tool Window,” on page 63) The text entered in the 
log text area when querying, must appear in the log or it will not be 
found. The symbol ’ may be use to indicate “do not care” when 
performing a query. 

" Name Field - In the name field, enter the name of the user who 
entered the logs. This means only logs entered by that user will 
show up in the query results. A “*” may be entered if you do not 
care which user entered the log. 

° Date Field - In the date field, enter a date range which you 
would like to search over.This date range must take the form: 
MM/DD/YY-MM/DD/YY. Either side or both sides of the sep¬ 
arator may be to have open ended date ranges or if you do 
not care about the date. 

Examples: 

° "^-01/01/95 will return all records before 1995 

° will return all records 

° 01/01/94-01/01/95 will return all records from 1994. 

Enter a string which must appear in the log in the logs text area. 
Again a will return all logs regardless of their content. If you en¬ 
ter “software, ” then only logs containing the word “software” will 
show up in the query report. 


5-2 RDE User's Guide 










The iMg Utility 
Querying the Database 


I 



Query Results 


Matching record coimtj 118 


Log ID:^ , ,. , : '■ , 

User ID: falco - . ' . , " ' , . 

Date : 10/12^ ■ , 

Text : D^x^ir^ tl» Hast^/Slave {a^trcol for tf» KT!B used several 
of the t^iavioral mxiels^ 


User ID: falco ' ' ' 

Date : p.;,--.'' ■ 

Text : SiMilstdr «h^ I try to'view data frr^. Sirxe, I'll te 

doing ai ififa*»al n»fiat toiworfxw I brir« this «v,aTd see 
if I can get a soluti(mi» In the tine .I'll stai; wx^ir^ on 
the Icxal bus logic. " . P 

Lc^ ID: 33 

User ID: falco '.'C 

Date : 10/12/94 : ' ■ 

Text : Horkir® cm the desi^i for tte L<kal I thirrfi I'll set it if> so 


Disnis 


FIGURE 2. Query Results Window 


The query results window consists of a results display area, write file 
button and field, and a delete log button and field. The results display 
area shows a list of all the logs which passed the query you defined. 
At the top there is a number showing the number of log records which 
did pass the query. 


/^D£ User's Guide 5~3 


















The Log Utility 
Deleting Logs 


Saving Query Results 

1 • Enter a file name in the field under the "Write to file ’’ 

button. 

2. Press the "Write to file button. ” 

All of the text in the display area has now been written to the file you 

named in a ASCII text format. 

Deleting Logs ° In the field under the "Delete Logs” button you may enter a 

comma separated list of log identifiers. These identifiers are the 
“Log ID;” numbers which can bee seen on all logs in the results 
window. 

° Press the "Delete Logs” button. The logs have been deleted 
from the database. You must rerun your query to see the updat¬ 
ed list of logs. 


5-4 RDE Users Guide 










The Multi-Metric Browser Utility 

Chapter Content 


Chapter 6: The Multi-Metric Browser Utility 
Chapter Content Refer to this Chapter for; 

Introduction The Multi-Metric Browser is a metric viewing tool. Via XRT wid¬ 

gets, it permits the user to view the metrics in different ways, includ¬ 
ing different metrics in a single graph. Metrics are retrieved from the 
shore database. The database is populated by the metric generators, 
the generators are normally run as a cron job. Multi-Metric Browser 
allows the addition of new metrics without any need to recompile the 
display system. New metrics can be added to the database using 
‘db_populator’ utility. Users can specify project and subsystem and 
view metrics for them. 

Available Metric There are nine major metric reports currently available and are acces- 

Reports sible through the “Multi-Metrics Browser. ” 

• Code Size - This report shows the lines of code for the user/time 
parametric. When the user parametric is chosen the metric report 
shows the lines of code generated by different users. When the time 
parametric is chosen the metric report shows the lines of code gen¬ 
erated in different time periods. 

• New Open Problem - This report shows the number of new open 
problems over a specified period of time. Its a good indicator of the 
organizations ability to respond to problems reported. This metric 
has time parametric, hence can be mapped with other metrics. 

• Total Number of Open Problems - This report shows the total 
number of open problems that remain open at the end of the month. 

• Age of Open Problems - This report classifies the list of open prob¬ 
lems depending on their age. It could be used as an indication of re¬ 
sponsiveness to customer needs. 

• Age of Closed Problems - This report classifies the list of closed 
problems depending on the length of time taken to close them. It 
again is a good indication of the responsiveness to customer needs. 

• Phase Containment - This report shows how well the design flaws 
are being captured in the earlier phase of development. Errors are 
defined as flaws discovered in a phase in which the flaw was insert¬ 
ed. Defects are defined as flaws discovered during a phase after the 
flaw was inserted. 

• Interface Complexity for C - This report shows the interface com- 


RDE User's Guide 6-1 




The Multi-Metric Broyvser Utility 
Available Metric Repons 


plexity of the various C files at locations specified in the 
’proj_sub_dir' file. Its a multi-bar graph which shows the average 
interface count and the standard deviation (for the list of interface 
counts for the various modules in the file). In general, if the average 
count is low it implies the interface complexity is less. But if the 
standard deviation is high, then definitely there is some problem in 
terms of module complexity. 

° Tool Usage - This report shows the usage of various tools in sec¬ 
onds. There are two parametrics user and time. When the user para¬ 
metric is chosen the metric report shows the number of seconds the 
tool was used by different users. When the time parametric is cho¬ 
sen the metrics report shows the number of seconds the tool was 
used during different time periods. 

° Review Packets Created - This report shows the number of review 
packets created for the user/time parametric. When the user para¬ 
metric is chosen the metric report shows the number of review 
packets created by different users. When the time parametric is cho¬ 
sen the metric report shows the number of review packets created 
in different time periods. 


6-2 RDE User’s Guide 












The Multi-Metric Browser Utility 

Available Metric Reports 


To best illustrate how to use the multi-metric browser, refer to the in¬ 
formation on the following pages. Figure 1, “Metric Browser StartUp 
Screen,” on page 3 shows the Multi-Metric Browser as it comes up. 



Subsystem I Subsystem 


Hetric Category Metrics with Parametrcics 


Paranetrics 


Multi-Metnc Browser 


Project! Project 


New Open Problems 


FIGURE 1. Metric Browser Startup Screen 


RDE User’s Guide 6-3 

















The Multi-Metric Browser Utility 
Changing Metric Categories 


Changing Metric Cate- There are two categories of metrics namely, those metrics that have 

parametrics and those that don’t. Metrics with parametrics are those 
that can be viewed along with other metrics provided they have some 
common parametrics. Figure 2, “Metric Browser - Changing Metrics 
Category,” on page 4 shows the case where the user has chosen a new 
category resulting in a new list of metrics on the metrics list. 


Molti-Metric Bratwser 


No Project 

Hstric Catesory Hatrics uiithout Parametrics 


Metrics 


Total Number of Open Problems 
A98 of Open Problems 
A98 of Closed Problems 


Time Scale Day 


OK 


Quit 


Subsystemi Subsystem 


Parametrics 


Values 


Output Type Graphic 


u 


Help 


if 


FIGURE 2. lyietffc Browser - Changing MeffTcs Category 


RDE Users Guide 6-4 












The Multi-Metric Browser Utility 

Changing Project and Subsystem 


Changing Project and The project and subsystem buttons lets the user change the project 
Subsystem and subsystem. Subsystem button lets the user choose from the list of 

subsystems available for the current project. Figure 3, “Project Selec¬ 
tion Box,” on page 5 shows the selection box that appears when the 
user clicks on the project button. When the user changes the project, 
list of metrics available gets updated too. 



FIGURE 3. Project Selection Box 


RDE User’s Guide 6-5 






The Multi-Metric Browser Utility 
Changiiig Project and Subsystem 


Figure 4, “Metric Browser - New Set of Metrics/’ on page 6 shows 
the list of new metrics that are available for the new project selected. 
The list of metrics gets updated whenever the project or the sub¬ 
system or the metrics category is changed. 


Browser 


Project! 


SubSysteitjj No Subsysterfi 


Metric Category Metrics yith Paran^etrcics 


Metrics 

I Calc..tool Usage (in seconds) 

IFilemgr^tool Usage (in seconds) 
il GgnatS4.tool Usage (in seconds) 

I JPeg_Visujer 3 ^ 1 ^tool Usage (in seconds) 
/MaiLtool Usage (in seconds) 

IMetricBroi^iser^tool Usage (in seconds) 

IRassplog^tool Usage (in seconds) 

IRda^tool Usage (in seconds) 

Reuse^tool Usage (in seconds) 
Revieu<.tool Usage (in seconds) 


ParametrUcs 



Values 


lim Scale Day ^ 


Chart Type Bar —3 j 


Output Type Graphic 


FIGURE 4. 


tetrsc Browser - New Set of IVletric 


RDE Users Guide 6-6 



















ceedrids/ 


Wipwsir 


Subsystemj Subsystem 


Metric Category Metrics witdi Parawetrcics 


Metrics 


Parametrics 


Wbrkim 


Chart Type Bar -J J Output Type Graphic 


Time Scale Day -J 


FIGURE 5. Metric Browser - Getting Parametrics 


NDE User’s Guide 6-7 


The Multi-Metric Browser Utility 

Getting Parametrics 


Getting Parametrics When a metric is chosen from the metric list and if the metric has 

parametrics, the browser gets the list of parametrics associated with 
the selected metric. Figure 5, “Metric Browser - Getting Paramet¬ 
rics,” on page 7 shows an example where the user has chosen the 
RDA tool usage metric and the browser is accessing the database to 
find the list of parametrics for the RDA tool usage metric. 


Reuse»tool Usage <in seconds 
Revieu,tool Usage tin seconds) 


aoe 


in 
































The Multi‘Metric Browser Utility 
Accessing Database 


Once the user has the list of parametrics, the user chooses a paramet¬ 
ric from the list. When a parametric is selected, the browser accesses 
the database to find the parametric values for the chosen metric and 
parametric. Figure 6. "Metric Browser - Accessing Database,” on 
page 8 shows an example where the user has chosen the user para¬ 
metric and the browser is accessing the database to get the list of users 
who had used the RDA tool. 


ily}iiiitj-ystale Browssr 


Metric Category Metrics with Parapietrcics —* 


System i Subsystem 


Metrics 


j|Rassplo9.,tool Usage <in seco 


Please Wait J 


Reuse,.tool Usage (in seconds?” 
Review^tool Usage (in seconds) 



Time Scale Day 


Parametr 


Day/Time 


Chart Type Bar 


Output Type Graphic 



FIGURE 6. Metric Browser - Accessing Database 


I 



I 


I 


RDE User's Guide 6-8 


































^Iv hfctIti-Metifc Browser 


Subsystem! No Subsystem 


Project 


Metric Category Metrics with Pararaetrcics 


Metrics 


Values 


Chart Tjflje Bar -j 


Output Type Graphic 


The Multi-Metric Browser Utility 
Retrieved Values 


Retrieved Values The retrieved values for the selected parametric and metrics are dis¬ 

played in the values list. Figure 7, “Metric Browser - Retrieved Val¬ 
ues,” on page 9 shows the list of users who had used RDA tool, or 
in other word the values for the user parametric in RDA tool usage 
metric 


Time Scale Day 


FIGURE 7. Metric Browser - Retrieved Values 


RDE User’s Guide 6-9 


Calc*tool Usage (in seconds) 
Filemgr^tool Usage (in seconds) 
Ggnats^tool Usage (in seconds) 


Parametrics 

Day/Thn^ 


JPeg_Viewer3*l*tool Usage (in seconds) 
MaiDtool Usage (in seconds) : 

MetricBrowser»tool Usage (in seconds) 
Rassplog^tool Usage (in seconds) 

Reuse*tool Usage (in seconds) i 
Review.tool Usage (in seconds) :■ 














The Multi-Metric Browser Utility 
Coiumon Values 


Common Values 


When the user chooses another metric, list of parametrics is updated 
to show only the common parametrics. The value list is updated to in¬ 
clude the list of values with atleast one of the selected metric defined. 
In the example case as shown in Figure 8, “Metric Browser - Com¬ 
mon Values,” on page 10 the user has chosen Reuse tool usage met¬ 
ric. as both are tool usage metrics the parametrics are the same. The 
value list is updated to have all the values for the selected parametric 
and both the metrics. 


Project I 


yyiti-MsWc 


No Subsystem 


Metric Cate. 9 ory Metrics with Parawetrci 


Metrics 

jCaic^tool Usage (in seconds) 
fFilemgr^tool Usage <in seconds) 
iGgnats^tool Usage (in seconds) 
iJP89_Viswer3.1*tool Usage (in seconds) 
iMaiUtool Usage (in seconds) 

I MetricBrouser^tool Usage (in seconds) 
j Rassplog^tool^Usage (in se^c^dsW^^^^ 

I Reviewtool Usage (in seconds) ' ' ”* 


Parametric 
1 Day/Time 


Values 


I 


Time Scale Day 


Chart Type Bar 


Output Type Graphic Vj | 


FIGURE 8. Metric Browser - Common Values 


Now when the user clicks on the ok-button the metric report is dis¬ 
played. In Figure 9, “Metric Report - Bar Chart,” on page 11 shows 
the data for the above example using a bar chart. 













The Multi-Metric Browser Utility 

Common Values 


Metric Browser 




imm 


POSTSCRIPT (W 


CLOSE 


FIGURE 9. Metric Report - Bar Chart 


The user can also get a postscript dump of the graph by clicking on 
the POSTSCRIPT 0/P button. 


RDE User’s Guide 6-11 






The Multi-Metric Browser Utility 
Chart Type Options 


Chart Type Options Metric browser supports three types of charts, namely bar. X-Y and 

line. The X-Y chart type is used to map two metrics. It maps one met¬ 
ric on the X-axis and another on the Y-axis. This chart can be used 
only when the metrics with parametrics category is chosen and there 
are exactly two selected metrics.Figure 10, “Metric Report - X-Y 
Chart,” on page 12 shows an example of X-Y chart. 



FIGURE 10. Metric Report ^ X“Y Chart 




















Mulll-Mettric Biw/ier 


Subsystem 


Metrics 


Parametrics 


Day/Txme 


Values 


PostScript 


Project 


Metric Category Itetrlcs ulth Parametrclcs ^ ( 


Calc^tool Usage (in seconds) 
Filemgr^tool Usage (in seconds) 
Ggnats^tool Usage (in seconds) 
JPeg_Viewer3^1*tool Usage (in seconds) 
MaiUtool Usage (in seconds) 
MetricBrows^+tool Usage (in seconds) 
Rassplog^tml Usage (in seomds) 


Revieu^tool Usage (in seconds) 


Time Scale 






FIGURE 11. Metric Output - Comma Separated Values 


RDE User's Guide 6-13 


The Multi-Metric Browser Utility 
Output Options 


Output Options The browser supports three different output options. The metric data 

can be output as a graph or as a CSV (comma separated value) ascii 
file or as a postscript file. Postscript file option basically dumps the 
graph file into a postscript file. CSV output is chosen when the user 
needs to export the data on to a word or excel document. Figure 11, 
“Metric Output - Comma Separated Values,” on page 13 shows the 
user choosing the CSV output option. 











The Multi-Metric Browser Utility 
Output Options 


Figure 12/‘Comma Separated Value File Selection Box." on page 14 
shows the selection box that appears when the user chooses the CSV 
option and clicks on the ok-button. Now the user would be able to 
choose name and location for the CSV ascii file 


CSV File Selection jpopijp 


Filter 


•Charles/na tara/sietr i cs/ piu 1 1 i _P58tr i c_g8nerator/pro j /sf 
Files 


Directories 



J 

/ i 


#db_pop_^aster# 
^gen.fK^etr ics^ sh# 
ssShoreconfig 
Makefile 

HakefilQ^bakjSepJl 

Makefile"' 

Me tr i c^DB^Dump ^ ftug 
Metric_DB.Bump ^ Sep^l 


—char 1 es/nat ara/metr 1 cs/mu 11 i ^rnetr i c_gener ator/pro j /J 


OK 


Cancel 


Help 


FIGURE 12. Comnia Separated Value File Selection Box 


6-14 RDE User's Guide 














The Multi-Metric Browser Utility 

Database Popiilator 


Database Populator The metric browser allows the addition of new metrics without the 

need to recompile the system. This is accomplished by populating the 
database with the new metric in the ‘right’ way. The ‘db_populator’ 
utility at $RDE_HOME/bin helps populate the database. It takes in an 
ascii file. The ascii file has to be in a particular format. The format is 
shown in next page 


RDE User’s Guide 6-15 




The Multi-Metric Browser Utility 

Database Popular or 

<METRIC> 


<PROJECT>project name</PROJECT> 

<SUBSYSTEM>subsystem name</SUBSYSTEM> 

<NAME>metric name</NAME> 

<PARAMETRIC> 


parametric 1 


parametric 2 


parametric nn 


</PARAMETRIC> 


<X_LABEL>x axis label</X_LABEL> 

<Y_LABEL>y axis label</Y_LABEL> 

<LEGEND_LABELS> 


legend label 1 


legend label 2 


legend label n 


<LEGEND_LABELS> 


<DATA> 


x_pointJabel 1, vail 1, vail2, .. 

., valIn 

x_point_label 2, val21, val22,.. 

., val2n 

x_point_label m, valnml, valm2, 

..., valmn 

</DATA> 


<DATA> 


x_point_label I, vail 1, vall2,... 

val In 

x_point_label 2, val2L val22, ... 

val2n 

x_point_label m, valmL valm2, 

..., valmn 

</DATA> 


<DATA> 


x_point_label 1, vai! 1, vail2, ... 

, val 1 n 

x_point_iabel 2, val21, val22,... 

, val2n 

x_point_label m, valml. valm2, 

..., valmn 

</DATA> 


</METRIC> 



6-16 RDE User’s Guide 







The Multi-Metric Browser Utility 
Database Populator 


The format labels are described below 

<METRIC> — indicates the beginning of a metric 

<PROJECT>..</PROJECT> — used to specify the project name 

for the metric, if there is none then 
‘No Project’ is specified 

<SUBSYSTEM>..</SUBSYSTEM> —used to specify the subsystem 

name for the metric, if there 
is none then ‘No Subsystem’ 
is specified 

<NAME>..</NAME> — used to specify the name of the metric as 

it appears in the metric list 

<PARAMETRICS> 

</PARAMETRICS> — used to specify the parametrics, this would 
be used to view the metric along with other 
metrics that have common parametrics 

<X_LABEL>..</X_LABEL> — used to specify the x-axis label 

<Y_LABEL>..</Y_LABEL> — used to specify the y-axis label 

<LEGEND_LABEL> 

</LEGEND_LABEL> — used to specify the list of legend labels 
<DATA> 

</DATA> — used to specify one data set, there should one such for 
every parametric. Each line corresponds to a data point, 
it includes the point label and the values. There would 
be one value for each legend label 

</METRIC> — indicates the end of the metric 


1 

1 

I 

I 


6-17 RDE User's Guide 













The Problem Report Utility 

Chapter Content 


Chapter Content 


Introduction 


Conventions 


Concept 


Chapter 7: The Problem Report Utility 

Refer to this Chapter for: 

• Introduction 

• Conventions 

• Concept 

• Configuration 

• Functionality 

• Error Messages 

• Support 

The Problem Report Tool, known as “ggnats”, is a GUI, C++, version 
of the GNU GNATS “send-pr” Unix script. The GNATS system is 
the GNU Problem Report Management System (Version 3.2). 
GNATS is a bug-tracking tool designed for use with a central support 
site. 

The RDE Problem Report Tool, “ggnats”, will be commonly referred 
to as: Problem Report Tool, ggnats (the name of the binary), and GG¬ 
NATS. In this context, GGNATS refers specifically to the problem 
reporting tool. Currently, the underlying problem management sys¬ 
tem and repository is still GNATS. 

The GNU GNATS software will be commonly referred to as: 
GNATS, and gnats. 

GGNATS and GNATS, with some other utilities, comprise an op¬ 
tional problem reporting mechanism that is provided with the RDE. 
This tool is used to submit problem reports for project or develop¬ 
ment related problems. This tool is being used extensively as the 
problem report management system for the RDE and other RASSP- 
related activities. 

GNATS allows the support function to handle problems in a consis¬ 
tent and trackable manner through the use of email and a centralized 
problem report database. 

At the support site, the problem reports are automatically assigned a 
tracking number and are tracked through resolution and closure by 
GNATS. An audit trail is automatically generated for each problem 
report. When a problem report is changed (e.g., priority change from 
low to medium) or its state changes (e.g., from “review” to “in¬ 
work”), the information is appended to the problem report. Feedback 
(via email) is provided to the requester each time a problem report is 
changed. Feedback about the entire problem database is provided by 


RDE User’s Guide 7-1 




The Froblem Report Utility 
Concept 


the metrics reporting mechanisms. 

Figure 1, “’Problem Report Tool (Main Window),” on page 89 shows 
the main window for GGNATS, the Problem Reporting'Xool. Each 
arrow indicates features explained in the following paragraphs. 


7-2 RDE User’s Guide 









The Problem Report Utility 

Configuration 


Configuration 




The Problem Report Tool reads default site information from a global 
RDE site configuration file. When “ggnats” is executed, the program 
reads necessary configuration information from the global defaults 
file. There is also an optional, local defaults file which allows users 
to customize their GGNATS configuration. 

Global Default File 

All users must reference the global defaults file, $RDE_HOME/etc/ 
ggnatsGlobal, via the RDE_HOME environment variable (e.g. set via 
“setenv RDE_HOME <path_to_RDE_installation_directory>”). 
This file contain site-wide information including: the global problem 
category list, the global project (metric) phase list, the default 
GNATS repository site(s) and their respective email address(es). 

The format of this global defaults file follows; 

# Beginning of the ggnatsGlobal Configuration File for 

# the RDE ggnats tool. 

# 

# 

# Email information for generated problem reports. 
TO_DEFAULT=RASSP;bugsQrassp.rassp.mot.com 

# 

# The default organization. 
ORGANIZATION_DEFAULT=Motorola-GSTG 

# 

# The submitter-id for your site. 

SUBMITTER_DEFAULT=kj 

# 

# The default GGNATS site. 

GNATS_SITE_DEFAULT=kj 

# 

# The default mail address for PR submissions. 
GNATS_ADDR_DEFAULT= 

# 

# The default release for this host. 
RDE_GGNATS_RELEASE=RDEggnats V.1.0_1_B4, R.0 5.19.9 5 

# 

# Environment information. 

SYSTEM_DEFAULT=SunOS kj 4,1.3_U1 2 sun4m 

ARCHITECTURE_DEFAULT-sun4 

MACHINE_DEFAULT= 

# 

# The ggnats local category list. 

GGNATS__CATEGORY=Log Tool; Multi-Metrics Browser; Prob¬ 
lem Report Tool;RDE Desktop;Remote Data Access 
Tool;Reuse Tool;Review Tool;Other Tool...;Other Is¬ 
sue . . . 

# 

# The Project Wide Phases 


RDE UseCs Guide 7-3 



The Problem Report Utility 
Configuration 


PROJECT_PHASE=Requirements Analysis;Preliminary De¬ 
sign; Detailed Design;Coding and Unit Testing;Integra¬ 
tion and Testing;Software System Testing;Production 
and Deployment 
# 

# 

# End of the ggnatsGlobal Configuration File 

A hash symbol. “#’b as the first character of the line, indicates a com¬ 
ment line. 

Please refer to the comments above to explain the parameters. Refer 
to the GNATS documentation for additional information. 

All of the configuration parameters should be defined in this file. The 
parameters critical to correct problem submission and tracking are: 
“to_default’\ “ggnats_category”, “project_phase”. 

default defines the email address of the GNATS administra¬ 
tion site, ggna.ts_category’ contains the list of all categories for 
problem reports, and “project_phase” contains the list of all project 
phase names. 

NOTE: These three parameters: fo_DEFAULT”, 
“ggnats^category”, and “project_phase” will be overrid¬ 
den by the user’s local defaults, if specified. 

Local Default File 

The optional local user defaults file, ~<user_home_directory>/.gg- 
nats, has the same format as the global defaults file, above, for the rel¬ 
evant configuration parameters. The local default file may contain the 
following parameters: ‘t'0_DEFAULT”, “originator_default”, 

“GGNATS_CATEGORr’, “pROJECT_PHASE”. 


7-4 RDE Users Guide 





The Problem Report Utility 
Configuration 



Medium 


V Critical 


FIGURE 1 


Problem Report Tool (Main Window) 


Problem Report Tool 


Menu Bar 


Email Address - 

Submitter Name — 

Class Option Box — 
Priority Option Box - 

Severity Option Box 


Category Button 
Metrics Button - 


File Edit j^tlons 


-To; RASSP -j 1 1 bugs@rassp.rassp.mot.com 

Submitter Name and Phone Number Dan Stupka x1395 H1175 pgr 4; 

—Class ?——^—-—'—1 (—Priority?——-i, pSeverity?- 


v' Change Request 
V" Support .; 


-vr Noit-critical 
^ Serious 


Category | 

Enter a one line synopsis of the problem: 


Metrics 


Synopsis 


Description 


Enter a precise description of the problem; 


Activities 


Solution 


Enter the code/input activities to reproduce the problem; 


Enter the fix or workaround to solve the problem; 


RDE Users Guide 7-5 











GGNATS has straight forward simple functionality: GGNATS 
makes use of the suggested Motif menu and layout. Following is a de¬ 
scription of each function the GGNATS provides. 

Menu Bar 

The menu bar supports the following menus. Refer to Figure 1, 
“Problem Report Tool (Main Window)/’ on page 89. 

° File: This menu supports GGNATS file and exit functionality, 
and the problem submission capability. The “File" menu may 
be invoked with a mouse <click> on “File”, or with the key¬ 
board mnemonic <Meta-F>. Refer to the “File Menu” descrip¬ 
tion below. 

0 Edit: This menu supports GGNATS edit functionality. The 
“Edit” menu may be invoked with a mouse <click> on “Edit”, 
or with the keyboard mnemonic <Meta-E>. Refer to the “Edit 
Menu” description below. 

° Options: This menu supports GGNATS options. The “Op¬ 
tions” menu may be invoked with a mouse <click> on “Op¬ 
tions”, or with the keyboard mnemonic <Meta-0>. Refer to the 
“Options Menu” description below. 

'> Help: This menu supports GGNATS help functionality. The 
“Help” menu may be invoked with a mouse <click> on “Help”, 
or with the keyboard mnemonic <Meta-H>. Refer to the “Help 
Menu” description below. 

File Menu 

This menu supports GGNATS file and exit functionality, and the 
problem submission capability. The “File” menu may be invoked 
with a mouse <click> on “File”, or with the keyboard mnemonic 
<Meta-F>. The “File” menu supports the following menu options. 

° Open...: This menu option may be invoked with a mouse 
<click> on “Open...”, or with the keyboard mnemonic <0> 
with the “File” menu selected, or with the keyboard accelerator 
<Ctrl-0>. 

This option displays a Motif open dialog. Once the desired file 
has been selected, it will be imported into the current problem 
reporting session. 






The Problem Report Utility 

Functionality 


The file must be an ASCII text file in the “GGNATS” Problem 
Report Tool format created by the “Save...” menu option. 
“Open...” imports the following data: Category, Metrics, Prob¬ 
lem Synopsis, Problem Description, Problem Input/Code Ac¬ 
tivities, Problem FixAVorkaround. 

WARNING: If the file is not a GGNATS fotmat file, it will not im¬ 
port correctly. 

• Open Description File...: This menu option may be invoked 
with a mouse <click> on “Open Description File...”, or with the 
keyboard mnemonic <D> with the “File” menu selected, or 
with the keyboard accelerator <Ctrl-D>. 

This option displays a Motif open dialog. Once the desired file 
has been selected, it will be imported into the current problem 
reporting session. 

This option opens the specified ASCII text file and imports the 
Problem Description information. This option has been added 
to support the command line “-filename” option from this GUI. 


The file must be an ASCII text file. “Open Description File...” 
imports the following data: Problem Description. 

WARNING: If the file is not an ASCII text file, it will not import 
correctly. 


RDE User’s Guide 7-7 








Save...: This menu option may be invoked with a mouse 
<click> on “Save...”, or with the keyboard mnemonic <S> with 
the “File” menu selected, or with the keyboard accelerator 
<Ctrl-S>. 

This option displays a Motif save dialog. Once the desired file¬ 
name has been selected, it will be saved/exported to a GGNATS 
formatted ASCII text file. 

The file produced by the “Save...” menu option is suitable to be 
imported into a problem reporting session via the “Open...” op¬ 
tion. 

The following data is saved: Category, Metrics, Problem Syn¬ 
opsis, Problem Description, Problem Input/Code Activities, 
Problem FixAVorkaround. The file may be edited with a third 
party editor or word processor; however, you must maintain the 
order and format integrity of the file to insure a successful file 
import. 

NOTE: If using another program to edit this file, it must he 
saved as an ASCII text file, or it will not import correctly. 

Submit Problem Report: This menu option may be invoked 
with a mouse <click> on “Submit Problem Report”, or with the 
keyboard mnemonic <R> with the “File” menu selected, or with 
the keyboard accelerator <Ctrl-R>. 

This option submits the current report to the GNATS site spec¬ 
ified in the “To:” (“Project:”) field, or “Mail Address”, refer to 
Figure 1, “Problem Report Tool (Main Window),” on page 89. 
The Problem Report is sent via the UNIX “mail” utility. 

An information dialog will be displayed to inform the user of 
the status of the problem submission request. 

NOTE: The Unix “mail” utility must he in the user’s current 
path. If assistance is required then a local LAN administrator or 
RDE representative should he consulted. 






The Problem Report Utility 

Functionality 


• Print Problem Report...: This menu option may be invoked 
with a mouse <click> on “Print Problem Report...”, or with the 
keyboard mnemonic <P> with the “File” menu selected, or with 
the keyboard accelerator <Ctrl-P>. 

This option displays a Motif print dialog. Once the desired print 
command has been specified, the default is “Ipr”, and the 
“Print” button selected, the current problem report information 
will be sent to the printer. 

The file must be an ASCII text file in the “GGNATS” Problem 
Report Tool format created by the “Save...” menu option. 
“Open...” imports the following data: Category, Metrics, Prob¬ 
lem Synopsis, Problem Description, Problem Input/Code Ac¬ 
tivities, Problem FixAVorkaround. 

An information dialog will be displayed to inform the user of 
the status of the problem print request. 

NOTE: The Unix “Ipr” utility, or other desired print utilities, 
must be in the user’s current path. If assistance is required then 
a local LAN administrator or RDE representative should be 
consulted. 

• Exit: This menu option may be invoked with a mouse <click> 
on “Exit”, or with the keyboard mnemonic <X> with the “File” 
menu selected, or with the keyboard accelerator <Ctrl-X>. 

This option exits the Problem Report Tool immediately. 

WARNING: The Problem Report Tool (Version: RDEggnats 
V.1.0_1_B4, 05/24/95, obtained by invoking “ggnats -v”) will 
not prompt you to send or save the current problem report if you 
select “Exit”. 


RDE User’s Guide 7-9 



The Problem Report Utility 
Fiincrionalin 


Edit Menu 

This menu supports GGNATS edit functionality. The “Edit” menu 
may be invoked with a mouse <click> on “Edit", or with the key¬ 
board mnemonic <Meta-E>. The “Edit" menu supports the following 
menu options. 

° Clear All; This menu option may be invoked with a mouse 
<click> on “Clear All", or with the keyboard mnemonic <C> 
with the “Edit” menu selected, or with the keyboard accelerator 
<Ctrl-C>. 

This option clears information from the current problem report¬ 
ing session. “Clear AH” clears the following data; Category, 
Metrics, Problem Synopsis, Problem Description, Problem In¬ 
put/Code Activities, Problem FixAVorkaround. 

NOTE: Once “Clear AU” has been selected, the cleared infor¬ 
mation can not be retrieved unless it was’ previously saved. 

Options Menu 

This menu supports GGNATS options. The “Options” menu may be 
invoked with a mouse <click>, or with the keyboard mnemonic <Me- 
ta-0>. The “Options” menu supports the following menu options. 

° Category...: This menu option may be invoked with a mouse 
<click> on “Category...”, or with the keyboard mnemonic <C> 
with the “Options” menu selected. 

This option displays a Motif “Problem Report Category” selec¬ 
tion dialog. Once the desired category has been selected and the 
“OK ’ button <clicked>, the desired category will be placed in 
the text box next to the “Category” button. 

The “Problem Report Category” dialog may also be selected by 
<clicking> the “Category” button on the main windows of the 
Problem Report Tool. Refer to Figure 2, “Problem Report Cat¬ 
egory Dialog,” on page 99 

NOTE: A catego/y must he selected (i.e. displayed in the text 
box next to the “Categoiy ” button) in order to submit a problem 
report. The user will he warned appropriately if this situation 
occurs. 


7~I0 RDE User’s Guide 









The Problem Report Utility 

Fiinctionalin 


• Metrics...: This menu option may be invoked with a mouse 
<click> on “Metrics...”, or with the keyboard mnemonic <M> 
with the “Options” menu selected. 

This option displays a Motif “Metrics Collection” selection di¬ 
alog. Once the desired “Problem Inserted” and “Problem De¬ 
tected” phases have been selected and the “OK” button 
<clicked>, the desired phase containment metrics are set. The 
phase containment metrics can be verified easily by selecting 
the “Metrics...” option again and viewing the dialog contents. 

The “Metrics Collection” dialog may also be selected by <click- 
ing> the “Metrics” button on the main windows of the Problem 
Report Tool. Refer to Figure 3, “Metrics Collection Dialog,” on 
page 99. 

NOTE: Phase containment metrics are not required in order to 
submit a problem report. 

Help Menu 

This menu supports GGNATS help functionality. The “Help” menu 
may be invoked with a mouse <click>, or with the keyboard mne¬ 
monic <Meta-H>. The “Help” menu supports the following menu op¬ 
tions. 

• About Problem Report Tool...: This menu option may be in¬ 
voked with a mouse <click> on “About Problem Report 
Tool...”, or with the keyboard mnemonic <A> with the “Help” 
menu selected. 

This option displays a Motif “About ggnats” dialog. This con¬ 
tains some brief information regarding GGNATS, the Problem 
Report Tool. When “OK” is <clicked> the dialog closes. 

• Help.. .: This menu option may be invoked with a mouse 
<click> on “Help...”, or with the keyboard mnemonic <H> with 
the “Help” menu selected, or with the keyboard accelerator 
<Ctrl-H>. 

This option displays a Motif “Problem Report Tool Help” win¬ 
dow. This contains an on-line version of the GGNATS func¬ 
tionality. When “OK” is <clicked> the dialog closes. 


RDE User's Guide 7-11 



The Problem Report Utility 
Functinnality 


Email Address 

The email address via the "To:” ("Project:") popup menu. Multiple 
options may be specified. The user is allowed to choose from the 
available menu options only. If only one option is possible, that op¬ 
tion will be the default. The user is "not” allowed to specify alternate 
sites from the GUI. Refer to Figure 1, “Problem Report Tool (Main 
Window),” on page 89. 

Submitter Name 

Enter the submitter name and phone number (including area code) in 
this field. 

“Class?” Option Box 

Select the appropriate class type. The choices are: Software bug. 
Document bug. Change Request, and Support. 

° Software bug: This is the default and means a general product 
problem. 

=> Document bug: This is a problem with the documentation. 

° Change Request: This is a request for a change in the way a 
program behaves. 

° Support: This is a support problem or question. 

“Priority?” Option Box 

Select the appropriate priority type. The choices are: Low, Medium, 
and High. This selection will determine how quickly a problem is act¬ 
ed upon. 

° Low': The problem should be solved in a future release. 

° Medium: This is the default and means that the problem should 
be solved in the next relea.se. 


High: A solution is needed as soon as possible. 




The Problem Report Utility 

Fiinctionalin 


“Severity?” Option Box 

Select the appropriate severity type. The choices are: Non-critical. 
Serious, and Critical. This selection indicates the seriousness of the 
problem (i.e., missing functionality, etc.). 

• Critical: The product, component or concept is completely 
non-operational or some essential functionality is missing. No 
work around is known. 

• Serious: This is the default and means that the product, compo¬ 
nent or concept is not working properly or significant function¬ 
ality is missing. Problems that would otherwise be considered 
“critical” are rated “serious” when a work around is known. 

• Non-Critical: The product, component or concept work in gen¬ 
eral, but lacks features, has irritating behavior, does something 
wrong, or does not match its documentation. 

Category Button 

When the “Category” button is selected the Motif “Problem Report 
Category” selection dialog is displayed. Refer to the explanation 
above under “Options Menu” and “Category...”; also see Figure 2, 
“Problem Report Category Dialog,” on page 99. 

Metrics Button 

When the “Metrics” button is selected the Motif “Metrics Collection” 
selection dialog is displayed. Refer to the explanation above under 
“Options Menu” and “Metrics...”; also see Figure 3, “Metrics Collec¬ 
tion Dialog,” on page 99. 


RDE User's Guide 7-13 



The Problem Report Utility 
Error Messages 


Error Messages 


Support 


Syoopsis 

Enter a One-Line Synopsis of the Problem. Enter a succinct one-line 
summary of the problem in the Synopsis Box. 

Description 

Enter a Detailed Description of the Problem. Enter a description of 
the problem within the Description Box. The more detailed the de¬ 
scription. the easier it will be to diagnose and evaluate the problem. 

Activities 

Enter the Code/Input Activities needed to Reproduce the Problem - 
Enter the example code or input activities to reproduce the problem 
into the Activities Box. 

Solution 

Enter the Fix or Work-Around to Solve the Problem. Enter the fix or 
work-around for the problem used by the submitter, if any, into the 
Solution Box. 

Appropriate error message dialogs will be displayed when error con¬ 
ditions are encountered. The u.ser should note the error message, es¬ 
pecially if it is problem that inhibits the use of the Problem Report 
Tool. 

The Problem Report Tool is an excellent mode for obtaining support 
on RDE services and tools, including GGNATS itself. 

Issues and problems that require immediate attention should be ini¬ 
tially addresses by your local LAN administrator or your local RDE 
representative. 







Multi-Metrics Browser 
Problem Report Tool 
RDE Desktop - 
Remote Data Access Tool 
Reuse Tool 
Review Tool 
Other Tool... 

Other Issue... 


Selection 


Cancel 


Problem Inserted? 


Problem Detected? 


FIGURE 3. Metrics Collection Dialog 


RDE User’s Guide 7-15 


Ftobiem Report Cateqor 


Category 


The Problem Report Utility 
Support 


Indicate both the phase in which the problem 
was inserted and the phase in which the 
problem was detected. 


=No Entrys 


<No Entry^ 


Metrics Collection 


FIGURE 2. 


Problem Report Category Dialog 


















The Reuse Utility 

Chapter Content 


Chapter Content 


Introduction 


Reuse Configuration 


j 

I 


Chapter 8: The Reuse Utility 

Refer to this Chapter for: 

• Introduction 

• Reuse Configuration 

• Reminders 

• Functionality 

• Command-Line Parameters 

• Primary Functionality / Main Window 

• The Add Application 

• Querying the Database 

• Displaying Matches 

• Summary of Matches 

• Other Dialogs 

In an effort to encourage reuse of functions and structures, the Reuse- 
Tool is designed to offer the user quick reference to software already 
available for reuse. The following gives a brief description of the ap¬ 
plications which make up the Reuse Tool. It should be noted that this 
tool is built on and produced some reusable software. 

The reuse configuration file provides the path to the reuse directory, 
the programs with mailing lists only, and all the available languages. 
The information is used to create the language option menu, to keep 
track of who receives mail when changes occur to a record from a 
given project, and to set the path used by the file selection boxes. The 
program option menu is created with a list of projects found in a file 
used by the RDE. 


RDE User's Guide 8~1 





The Reuse Utility 
Reuse Configuration 


Fiie Help j 

Projects with Mailing List: 1 

RASSP_S©ftwarf 

A 

Add 

... .. .... ..... ■ .i'li 

Delete ! 

Edit Mall List]) 


=J^ 


Language: 



Reus© Repository: 

jflocal/tooIs/c+Wreuse/spI - Set Directory! 


ilroot 

i ^ 

Company ID #: 


FiGURE 1. Main GUI for the configuration file edits. 

The reuse.cfg file should be edited through the command line option 
■-config , that is, ‘ReuseTool -config’. This pops up the configuration 
main gui.(see Figure 1, “Main GUI for the configuration file edits.,” 
on page 102) The menu bar ‘File’ menu contains two options: Save 
and Quit. A help file is displayed upon the selection of the Help but¬ 
ton in the Help menu. 

To add a project to the list of projects with mailing list, press the Add 
button next to the scrolled list under ‘Projects...’. This will produce a 
selection box.(see Figure 2, “Add project to projects with mailing 
list.,’ on page 103) This will contain that same list of projects used 
by the RDE and the program option menus in the Reuse Tool. 


8-2 RDE User's Guide 











The Reuse Utility 
Reuse Configuration 


List of Projects: 


/ 


lRASSP_DerTio 


Ok( Heipf Dismiss 


FIGURE 2. Add project to projects with mailing list. 

The Edit Mail List button allows the addition or removal of emailing 
addresses through a special gui.(see Figure 3, “Editing a projects 
mailing list, is done in this GUI.,” on page 104) 

NOTE: If a project exist in the main GUIs projects list, but does 
not have any mailing addresses, then it will be ignored. 

The Set Directory button pops up a directory browser.(see Figure 10, 
“Directory Browser,” on page 114) 


RASSP Demo 


R A S S P_B en ch m ar kl 
RASSP_Benchmarkll 
I RASSP_Sof tware 
I RASSP_Systems 
I RASSP_Prol iteration 
{•>1 .. . . ’ ■ .. . . — 


RDE User's Guide 8~3 


I 

I 




The Reuse Utility 
Reuse Confisumtiou 


Person(s) to mail to 


1 is Sanders 

2 is Motorola 

3 is Hughes 

4 is ISX^ 


8-4 RDE User’s Guide 


yailing Lists: 

I super@sand©rs.c©m 
t eri@ s an d ©rs. com 


p"Add ' 


Remove j 

Dismiss j 


FIGURE 3. Editing a projects mailing list, is done in this GUI 
An example of the reuse.cfg file; 

NUM_PROGRAMS 2 

—RASSP,john@rassp.company.com 

RDE,mike@rassp.company.com,etc@etc.com 
NUM_LANGUAGES 5 
Ada 
C 

C + + 

Fortran 

VHDL 

PATH_REUSE 

/tmp_mnt/auto/asp_4b/tools/C++/reuse/splib/ 
COMPANY_CODE 
1 

REUSE_ADMIN 

teri@mach.company.com <-- administrative user 
END_PARAMETERS 
















The Reuse Utility 
Reminders 


Reminders 


Functionality 


I 


The address should be the user at the other company(s) who executes 
the ImportReuseMail executable. Preferably, this user is not a living, 
existing user, but rather a user made up for the sole purpose of run¬ 
ning ImportReuseMail. That user should not receive mail other than 
ReuseTool generated mail, however, it will disregard any other mail, 
say group mail, if it arrives.The REUSE_ADMINistrator is a living 
user who can handle any permission, or configuration management 
problem discovered during the copying of files into the reuse directo¬ 
ry. For example, if RCS or SCCS are used in the reuse directory, Im¬ 
portReuseMail will try to write over an older copy of the file, 
checking it out if necessary. If it can not check out the file and the ex¬ 
isting file is read only, then the new copy is put into a '.new' file and 
mail is sent to the administrator. It is the administrators responsibility 
to incorporate the new version of the file.The company codes are 
used by the databases to determine which company a record originat¬ 
ed from. 

In addition to the reuse configuration file, you need to set the envi¬ 
ronment variable REUSE_CFG_DIR to the path containing the help 
files and the reuse configuration file. ReuseTool needs the resource 
file ReuseMainApp for both fonts and colors, as well as, translations 
which allow certain keystrokes within the text fields. The resource 
file should be at the path set to environment variable XAPPLRESDIR 
or in the same directory as the executable.To backup the records on 
the database, use the ‘export’ command line option with a filename. 
If the database needs to be filled with export data, then use the ‘de¬ 
lete’ option, followed by the ‘import’ option, with the exported file, 
should do the trick. Never import an export data file without running 
the ‘delete’ option. Also, never use another company's exported data 
file to import into your database. This causes problems with the gen¬ 
eration of new IDs. 

Before running the Reuse Tool, there are some files that are expected 
by the tool; reuse.cfg, which contains the path to the reuse directory 
and list the available languages and programs with a mailing list. Ap¬ 
plications within the reuse tool include: reuse_add_help.dat, help on 
the add application, reuse_dir_brw_help.dat, help on the directory 
browser, and reuse_config_help.dat, help on the configuration file. 
Also, the environment variable ‘REUSE_CFG_DIR’ should set to 
the path containing these files. 


RDE User’s Guide 8-5 





The Reuse Utility 
Command-Line Paranieters 


Command“Line There are a few command line options associated with the Reuse 

Parameters Tool. They include the following. 

metrics - displays metric information 

V - displays version information 

import - imports records from a file into database 

export - puts a copy of all records from database to a file 

delete - removes all records from database 

config- edit the reuse.cfg file 

For example; 


ReuseTool -export <filename> 

PriniHry FunctionHlity / The graphical user interface (GUI) for the main application of the Re- 
Main Window use Tool, offers three push button choices.(see Figure 4, “Main GUI 

for the Reuse Tool.,” on page 107) 

° Query - Starts the query application, within which the reuse li¬ 
brary/directory can be queried for reusable software structures; 
such as, functions and classes. 

° Add - Starts the add application, through which, all data is en¬ 
tered into the database for reusable structures. 

° Quit Button - Offers an ending to the Reuse Tool. 


8-6 RDE Users Guide 




The Reuse Utility 

The Add Application 


The Add Application 


REUSE Tool Manager 


Qu^ry 


Add 


Quit 


FIGURE 4. Main GUI for the Reuse Tool. 


The add tool offers all the necessary fields for entering a function or 
a class into the reuse database, (see Figure 5, “Add Window,” on 
page 109) In addition to the feature listed below, the project option 
menu will automatically show the ‘current’ project on the RDE bul- 
letinboard, and if the user selects an other option from the menu, then 
it would be posted to that bulletinboard. The change would therefore 
be reflected by other RDE tools for that user. 

The features of this tool are as follows: 

• Function/Class Name - Expects the class name or functionality 
of the new item. 

• Description - A more wordy description should be placed in 
this field. 

• Keywords - Should include any common or standard words as¬ 
sociated with the item. These are words from which you can 
query the item. 

• Libraries - Libraries with full paths, are entered in the Libraries 
field. 

• Include Path - The include files are divided into two fields. The 
full paths are placed in one field, followed by the file names in 
the file name field. The include files are usually header files 
when dealing with C/C++ structures. 


RDE User’s Guide 8-7 





AddA^iew/Remove - File names are added, viewed, and re- 
, moved by utilizing the buttons to the right of the file name list. 

Add File - The files which can be added, are those found in the 
reuse directory. Fields are also provided for a list of compilers, 
and the date associated with the structure. Option menus limit 
the possible languages and projects that may be chosen. These 
possibilities are controlled by the data in the configuration file. 
An example of how the structure may be used can be provided 
by pressing the code example button a menu pops up. The date 
and the creator field are set to the current date and the current 
user. The language and program menus default to the first item 
in each list or the last one selected from each list. Help is pro¬ 
vided by pressing the appropriate button. Clear All clears all 
fields, except those which are given default values. The Add 
button commits all the data for a given item to the database and 
clears the fields for the next item.The Dismiss button ends the 
add application. 

View File - Is used for a help file viewing text in the Add button, 
and by the View buttons in both the “Add” and the “Display of 
Matches’ window. The View File is a scrollable window with a 
dismiss button attached, (see Figure 6, “View File - used for 
help files, viewing Text,” on page 110) 

Remove File - Allows user to remove a file. 

Show’ Code Examples - Used for displaying the code exam¬ 
ples. This is a scrollable window with a dismiss button, but it 
also contains a label identifying which class or function it is as¬ 
sociated with, (see Figure 7, “Show Code Example,” on 
page 110) 





The Reuse Utility 

The Add Application 


cSal: I 



Description 


I This class contains a number of functions and fields 

! 

i commonly used to calculate the cost of a project and 
i various aspects of a project! 


cost project budgef 


Libraries 


/locai/tools/accounting/libacc.^ 


Include Path 


/local/tools/accounting/includ4 


#include 


budget_factors.l| 


File Names 


Program: RASSP_Demo 


Compilers 


Language: 


Code Example 


Creator: 


FIGURE 5. Add Window 


RDE User s Guide 8-9 



















The Reuse Utility 
The Add Application 


//////// Help On Add Tool //////////// 

Function/Class Name : 

This field expects a character string. 

If the record is describing a class, then 
the class name would be entered. Otherwise, 
the function, or general functionality, 
would be entered. For examples: 
a class-> spBoolean 

a function-) binary_sort 



J 


FIGURE 6. 


View File - used for help files, viewing Text 


Dismiss 


EKample for fynctioo: spB®ol©an 


Irhis type can be used in conditionals; such as, if-then, 
i while loops, and other loops. For example: 
j spBoolean fixed = FALSE; 

while (Ifixed) 

{ 

fixed = isltDoneO; 

i ^ 

1 where isltDoneQ returns an TRUE or FALSE. 




Dismiss j 


FIGURE 7. Show Code Example 



8-10 RDE User’s Guide 














The Reuse Utility 
Query ing the Database 


Querying the Database 


Once the database has received entries for the current items in the re¬ 
use directory, the most useful application in the Reuse Tool is the 
query application, (see Figure 8, “Query display,” on page 112) 

• Keyword Expression Field - is the only field that requires an 
entry. This entry may either be a single keyword or language, or 
it may be a typical AND/OR expression. Some examples are: 

C++ AND list OR display 

(widget OR child) AND (display OR context) 
vhdl OR (motif AND C++ OR ada) 
list && link I I node 
tool OR aid 
VHDL && Backup 
C++ I I Ada I I Fortran | | C 
Motif 

• Language/ Programs - if different than ‘Any,’ then from the 
matches found by the query, only those matching the language 
and/or program are given. 

• Creator/Date - The same applies for the creator field and the 
to/from date fields. If these fields are not blank, then the match¬ 
es found by the query must also match the data entered. 

• Query - Once the expression is filled, and any optional fields, 
the “Query” button initiates the actual query. If no matches are 
found, then a message box pops ups. (See Figure 12, ‘“No 
matches found by query’,” on page 115) If the expression failed 
the parsing routine, or was empty, then a parsing error message 
box pops ups. (see Figure 13, “‘parse error’,” on page 115) Oth¬ 
erwise, Figure 9, “Display Matches,” on page 113 is produced, 
showing the first match. 

• Show Summary - ’When pressed, will provide the summary of 
matches(seeFigure 11, “Summary of Matches,” on page 115). 
Both the display and the summary are discussed below. 


RDE User’s Guide 8-11 




The Reuse Utility 
Displaying Matches 


Filters 


Creator: jj 


Languages: 



Date: 


ii 



Programs: Any ^ _< 




Keyword/Oueiy EMprsssion: \[ 

1 

Qumyl Clear Allj Show Sumniiary| 

Dismissj 

I 


FIGURE 8. Query display 


“ Clear All/Dismiss - Perform identical functions to their coun¬ 
terparts in the add application. 

Displaying Matches If the query finds any matches, then the first one is automatically dis¬ 

played in Figure 9, “Display Matches,” on page 113. Very similar to 
the add window in appearance, the display matches window shows all 
the information for each item found by the query. Because the main 
function of the Reuse Tool is to display the information about reus¬ 
able software, this gui does not assume the user is interested in editing 
the data; however if he is, then option is given through the ‘Edit 
Record’ button. 

° Arrow Buttons - At the bottom of menu, allow the user to view 
the next or previous item found by the query. 

° Above the arrow buttons, record label - Informs the user that 
this record is nth record out of the total found. 

Copy - The Copy button uses a directory browser application to 
find the path to copy to. and that application uses the view file 
for its Help button. A message application and a warning appli¬ 
cation are used for messages and verification through out the 
Reuse Tool, (see Figure 10, “Directory Browser,” on page 114) 

° Save Record - Saves changes. 

° Edit Record/Delete Record - Using the Edit Record button fol¬ 
lowed by the Delete Record button, removes the item from the 
database. 










FunctioiV 
Class Name: 


|rhis class is derived from the base dass spWidget. 
It perfoims convenient functions for a motif option 
menu with the use of a class & objects. 


Description 


Keywords: ijgadgettitle pulldown motif vddget 


Libraries 


yiocal^oois/c-M-/reuse/splll>/libSP.a 


indude Path: |||ocal/tools/c-M-/reuse/spiib . 

#fndude: |^pPuIldownMenu.h spWidget.h spOpt!6hMenu.h 

File Mameg* 

spOptionM^u.h , 




ismiss 


RDE User’s Guide 8-13 


The Reuse Utility 
Displaying Matches 


Language: 

Creator: 


FIGURE 9. Display Matches 


lispOptionMenu class 


Copy 


Dismiss - Ends the display application and clears the list of 
matches. 
















The Reuse Utility 
Summcuy of Matches 


Filter 

; /local/tools/c■^+/reuse/splib/f 


Directories .r Files 



P 


,spPr©| ©ctsRatrlever.ee 




,spPr©j ©ctsRetri©v©r.h 

.sentind.tmp 



-f ' 

sees 



.make.stit© 

pplus 


1 

.ma}ce.stat©4- ^ 




.nse_d©plinf0 




.pure 


J. 


.purify version j 


H.. .:,_J^ M-...,..!. , 

Selection 

.. ---r: ■ 

I /iocal/tools/c++/reuse/splib| 


OK 


Filter 


Cancel 


FIGURE 10. Directory Browser 



Summary of Matches To activate a summary of the matches found by the query, click on 

Show Summary in Figure 8, “Query display,” on page 112. 

Figure 11, “Summary of Matches,” on page 115 pops up. 

The function or class name, the language used, the date, and the first 
few words in the description for each match is displayed. By selecting 
an item from the summary list, the data for that item is immediately 
displayed in the display application. This is useful when dealing with 
a large list of matches. The Dismiss ends the summary application, 
but does not clear the list. Therefore, if the display application is still 
open, then the summary application can be re-displayed. 


8-14 RDE Users Guide 













No matches found 


FIGURE 12 


!o matches foum 


Parsing Error, expression 


The Reuse Utility 
Other Dialogs 


Function/Class 


Date 


Descnption 


grouo of heiol’a.l tanGtions 


spOptionMenu class 
spbiidget class 


01/31/95 ' This class is derived froni the base clas 
01/31/95 This class is representing a yidget^ as 

gg:' ::■ Dismiss! 


FIGURE 11. Summary of Matches 


RDE Users Guide 8-15 


other Dialogs 


y query 


FIGURE 13. ‘parse error’ 






The Reuse Utility 
Other Dialogs 


8-16 RDE User's Guide 










The Review Utility 
Chapter Content 


Chapter Content 


Introduction 


I 

I 


Chapter 9: The Review Utility 

Refer to this Chapter for; 

• Introduction 

• Starting the Review Utility 

• Creating / Starting a Review Package 

• Reviewing a Package 

• Comments 

• Action Items 

• Redlining a Design Object 

• Additional Actions for Design Objects 

• Closing a Review Package 

• Stopping the Review 

• Cancelling the Review 

• Additional Features 

• Reviewer Listing 

• Named Package Filtering 

The Review Utility consists of a centralized serveitReview- 
Tooiserver) and multiple TCP/IP clients (ReviewTool ) . These 
tools help manage the peer review process by maintaining a database 
of all review information and actions. 


RDE User’s Guide 9-1 







The Review Utility 
Starting the Review Utilit}' 


Starting the Review 
Utility 

After starting the Review Utility client, the dialog shown in Figure 1, 
"Review Utility Startup Dialog,” on page 119 is presented to the user. 

The dialog is broken up into thirds. The top third contains the menu 
bar and information on the currently selected Review Package. 

The middle third contains the list of available Review Packages with 
the current “Package List Type” setting (this setting can be either Re¬ 
viewer, Submitter, Leader or All). 

The bottom third shows the Submitter’s comments for the currently 
selected Review Package (if applicable). 


The Review Utility client is started by launching it from the RDE 
DeskTop. 


9“! RDE User’s Guide 







The Review Utility 
Starting the Review Utility 



Review Tool 


Review Package RIter Reviewer List Options 


Review Leader: Rob Hickman 

Package Submitter: Rob Hickman 


Pafckage Status: Closed 
Actual Close Date: 09/19/95 


Reviewer Role(s): Author, Review Leader, Hardware Engineer 



Package Title 


^eview Pack #1 


Review Pack #2 


Package List Type: Reviewer —i 




















The Review' Utility 

Creating / Starting a Review Package 


The menu bar for the Review Tool dialog has the following entries: 

° Review - Create, Start, Stop, Cancel, Reviewer List, Review 
Summary, Exit 

" Package - Open, Close 

° Filter - Show/Hide Named Filters, Named Filtering 

o Reviewer List - Show/Hide Reviewer Lists 

° Options - Show/Hide Message Center, Refresh 

“ Help - Context Sensitive Help, Help..., About Review Tool 

CrsBtlnQ / Stsirting si In order for a review to begin, a Review Package must be created and 

Review Package then started. There are two possible ways in which this may be done. 

A Review' Package may be started at its creation or a Review Package 
may be started after its creation. 

Creating a Review' Package Without Starting 

The following steps detail the process of creating a Review Package 
without starting it. 

° With the “Package List Type” option menu set on any field, se¬ 
lect “Review -> Create” from the menu bar. The dialog shown 
in Figure 2, “Create Review Package Without Starting,” on 
page 122 will appear. 

NOTE: This figure shows all the fields completed. 

° Select the appropriate value for the “Project” field. Note that 
this field is implemented as a combo box. Click on the down ar¬ 
row to the right of the text field to display a drop down list of 
the available project values. Click on the desired project name 
to select it. This field is required. 

» Select the appropriate value for the “Subsystem” field. As with 
the “Project” field, this field is implemented as a combo box. 
However, this field is inactive until a value for “Project” has 
been identified. This is because a subsystem must belong to a 
project. If a value has been selected for “Project” and the down 
arrow is clicked for “Subsystem”, the drop down list that is dis¬ 
played is a list of the available subsystems for the project spec¬ 
ified in the “Project” field. Click on the desired subsystem name 


9-4 RDE Users Guide 








The Review Utility 
Creating /Starting a Review Package 


to select it. Note that the “Subsystem” field is required. 

• Fill in the appropriate values for the “Title” and “Review Lead¬ 
er” fields. It is not necessary to enter a value for the “Close 
Date” field because the Review Package is not being started (al¬ 
though it will contain the default value of three working days 
past the current date). The “Title” field specifies the title of the 
Review Package and therefore must be unique. The “Review 
Leader” field specifies the leader for this review. This value 
should be a valid user id for the review leader. Both the “Title” 
and “Review Leader” fields are required. 

• Click the “Add” button under the Design Objects list box. A file 
browser dialog will appear. Click on all of the files that you 
wish to add as Design Objects to the Review Package. When 
you have finished selecting files, click on the file browser’s 
“OK” button. This will copy all of the selected files to the Re¬ 
view Package. You may delete Design Objects from the Review 
Package by selecting the objects in the listing and then clicking 
the “Delete” button. Note that in order for a Review Package to 
be created, at least one Design Object must be specified. 

• The Reviewer listbox is adjacent to the Design Object listbox. 
When creating a review package without starting it, there must 
be no Reviewers specified for the package. 

NOTE: If a default reviewer list has been specified for the cur¬ 
rent project/subsystem combination, the reviewers on the de¬ 
fault list will be added to the Reviewer listbox automatically. If 
this is the case, select all of the Reviewers in the listbox and then 
click on the “Delete ” button. When the confirmation dialog box 
pops up, click on the “Delete All ” button to remove all of the 
Reviewers. Refer to the section, “Default Reviewer Lists ”, for 
more information regarding default reviewer lists. 

• Use the “Submitter Comments” field to enter any instructions 
for the Review Package. These instructions will appear on the 
main Review Utility dialog (Figure 1, “Review Utility Startup 
Dialog,” on page 119) when the Review Package is selected. 

• Click on the “OK” button to create the Review Package. A dia¬ 
log will appear informing you that the Review Package is being 
created. 

After selecting “OK”, the client application will submit the package 
to the server. The server will generate an email message and send it 


RDE User’s Guide 9-5 



The Review Utility 

Creating / Starting a Review Package 


to the user id identified as the Review Leader. This email message 
tells the leader that a package needs attention. 


-1 

OBats Review 


- ..! 

Project: 

j RDE 



Subsystem: 

1 Review Utility 


zl 


Title: 

Close Date: 
(Month/Day/Year) 


Redliner Interface 


09/Z5/95 


Review Leader: i hickmars 


Design Objects 


DesignObJect.C 
do_shell.C 
do_shell.H 
jColorSelectorDIg.cc 
fedline.cc 
RedlineTooi.ee 
shapeCommentPixfflap.ee 


Reviewer Name 


Reviewer Role 


1 Deiete 

I Add 

Delete j 

List 

1 

i i 

Submitter Comments 





1 Please review these design objectsj 

X 



J 

}/ 


OK 1 

CSliicel 1 

Help 


J- 


FIGURE 2. Create Review Package Without Starting 


Starting the Review Process After Creation 

A Review Package that is created may only be started by the user who 
was identified as the Review Leader. The Review Leader is notified 


9-6 RDE User's Guide 

































The Review Utility 
Creating / Starting a Review Package 


by email that a Review Package has been created and now needs to 
be started. The Review Leader can modify the previously defined Re¬ 
view Package if necessary. These modifications are limited to speci¬ 
fying additional Design Objects. 

To start a review package after it has been created, perform the fol¬ 
lowing actions. 

• Select the “Leader” filter option from the “Package List Type” 
option menu. A list of all packages for which the user is the de¬ 
fined leader will appear, (see Figure 3, “Review Utility With 
Review Package,” on page 124 for an example). 

• Highlight the Review Package in the listbox that was identified 
in the email notification and select “Review -> Start” from the 
menu bar. 


RDE User's Guide 9-7 







evfew FSickage Filter Reviewer Ust Oplons 


Revievr Leader: 


Rob Hickman 


Package Submitter: Rob Hicksnan 


Reviewer Ro!e(s): Author, Review Leader 


Package Status: Unopened 

Actual Close Date: Not Applicable 


Psa;k^s Titie 


Est. Qose Date 


I 


Reviewer Status 

























Close Date (Month/DayA^ear): 


09/25/95 


Reviewer Name 


Reviewer Role 


Add Design Object 


FIGURE 4. Start Review Dialog 

• Fill in the appropriate value for the “Close Date” field. The 
“Close Date” field specifies the date by which all reviewers 
should be finished with reviewing the Design Objects in the Re¬ 
view Package. Note that this field has a default value of three 
working days past the current date. This field is required. 

• Specify the Reviewers for this Review Package. Reviewer 
specification may be done through reviewer lists, individual re- 


RDE User's Guide 9-9 


Add I Delete 


The Review Utility 

Creating / Starting a Review Package 


Start Review 


Design Objects 


ColorSelectorDlg.ee 

redline.ee 

RedlineTool.ee 

shapeCommentPixmap.ee 

DesignObjeet.C 

do_shell.C 

do :oshelfH‘ 


Oesiyn Obiect 


Rob Hiekman 
Chris Chrulski 
Senthil Natarajan 


Ust 


Hardware Engineer 
Technical Expert 
Hardware Engineer 




































The Review Utility 

Creating / Starting a Review Package 


viewer specification or a combination of both. 

Reviewer Specification with Reviewer Lists 

A reviewer list provides a convenient method of specifying a regular 
group of reviewers for a review package. For a detailed description 
of reviewer lists, please refer to the section, “Default Reviewer 
Lists”. 

° If a default reviewer list has been specified for the current 
project/subsystem combination, the reviewers on the default list 
will be added to the Reviewer listbox automatically. If you wish 
to use a reviewer list other than the default, click on the “List” 
button below' the Reviewer listbox. The dialog presented in 
Figure 5, “Selecting an Alternate Default Reviewer List,” on 
page 126 will appear. 


Select Item 


Items 


Review' 

Review 

Review 

Review 

Review 

Review 


Utility List #2 
Utility List #3 
Utility List #4 
Utility List #5 
Utility Li%#6 
Utility List #7 


iReview Utility List #1 f 


OK C^cel 


Help I 


FIGURE 5. Selecting an Alternate Default Reviewer List 


o Select the name of the default reviewer list you wish to use for 
this review package. Click on the “OK” button to add the re¬ 
viewers on the selected reviewer list to the Reviewer listbox. 

Individual Reviewer Specification 

You may also specify Reviewers for the Review Package on an indi¬ 
vidual basis. 


9~I0 RDE User's Guide 












AcM Reviewers 


Reviewer Database 


Brent Schneeman 


Add New Reviewer To Database 


Cancel 


Help 


The Review Utility 
Creating / Stai'ting a Review Package 


* To add additional reviewers, click on the “Add” button below 
the Reviewer listbox. The dialog presented in Figure 6, “Add 
Reviewers Dialog,” on page 127 will appear. 


RDE User's Guide 9-11 


Dave Chavez 


• To add reviewers to the Review Package, click on the desired 
individual’s name in the Reviewer Database listbox to highlight 
the name. If you wish to add a reviewer to the Review Package 
that does appear in the listing, click on the “Add New Reviewer 
to Database” button. When you do this, the dialog presented in 
Figure 7, “Specify Reviewer Dialog,” on page 128 will appear. 


FIGURE 6. Add Reviewers Dialog 


Dan Stupka 


Robert C, Hickman 
Chris Chrulski 






















The Review Utility 

Creating / Starting a Review Package 



.. 1 

Specify Reviewer 

Login ID: 

f rasspusr 

Rea! Name: 

RASSP Test User Account 

0{<^ 1 Cancel | 

-}-:---:--- 

Help j - 


FIGURE 7. Specify Reviewer Dialog 


° To add the new reviewer to the database, fill in the values for 
the “Login ID” and “Real Name” fields. The “Login ID" should 
be a valid user id and the “Real Name” should be the full name 
of the user corresponding to the user id. After you have entered 
the values, click on the “OK” button. The new user will now be 
added to the list and you will then be able to select the reviewer 
name to add the reviewer to the Review Package. 

° After you have selected all of the individual reviewers you wish 
to add to the Review Package, click on the “OK” button. You 
will now be presented with the dialog shown in Figure 8, “Re¬ 
viewer Role Specification Dialog,” on page 129. This dialog is 
used to assign roles to all of the reviewers for the Review Pack¬ 
age. 


9-12 RDE User’s Guide 






The Review Utility 
Creating / Starting a Review Package 



Reviewer Role :^eciflcatioii 


Reviewer Robert C. Hickman 


Reviewer Chris Chrulski 


Reviewer Dan Stupka 




Software Engineer -i 


Technical Expert 


Role <No Entry> 

System Designer 
Technical Bcpert 
Hardware Engineer 
Software Engineer 
Requireipiffnts Analyst 


Developer 
Integrator 
Design Assurance 
customer Advocate 



FIGURE 8. Reviewer Role Specification Dialog 


For each of the reviewers, select the desired role from its asso¬ 
ciated Role option menu. When all of the reviewer roles have 
been specified, click on the “OK” button. 

You may delete reviewers from the Review Package by select¬ 
ing the reviewers you wish to delete and then clicking the “De¬ 
lete” button under the Reviewer listbox. 

NOTE: In order for a Review Package to he started, at least 
one reviewer must be specified. 


RDE User’s Guide 9-13 














The Review Utility 

Creating/Starting a Review Package 


° If desired, you may add additional Design Objects to the Re¬ 
view Package by clicking on the “Add Design Object" button. 
The standard file browser will appear and you will be able to 
add Design Objects as before when the Review Package was 
created. Note that with the current version of the Review Utility, 
the review leader may not delete any Design Objects from the 
Review Package. 

° Select the "OK” button to submit the information to the server. 

Once the server accepts the information, each Reviewer in the 
Reviewer List is notified (via email) of the Review Package. 

Starting a Review Package During Creation 

As a convenience to the Review Package creator, it is possible to start 
the Review Package concurrently with the creation of the Review 
Package. The following steps detail this process. 

° Bring up the Create Review Package dialog by selecting “Re¬ 
view' -> Create” from the menu bar. The dialog shown in 
Figure 9, “Create Review Package and Start,” on page 131 will 
appear. 

NOTE: This figure shows all the fields completed. 

° Fill in the values for the fields as detailed in “Creating a Review 
Package Without Starting”. 

° In order to start the Review Package at its creation, the list of 
reviewers will have to be specified. Reviewer specification 
may be done through reviewer lists, individual reviewer speci¬ 
fication or a combination of both. Please refer to “Starting the 
Review After Creation” for a detailed description on how to 
specify reviewers. 

° Ensure that the “Close Date” field contains a valid value. 

° When all of the information has been entered, click on the “OK” 
button to submit the information to the server. This will create 
and start the Review Package. Note that the user which creates 
the Review Package does not have to be the review leader in or¬ 
der to create and start the package. 

Once the .server accepts the information, each reviewer in the 
Reviewer List is notified (via email) of the Review Package. 


9-14 RDE Users Guide 







The Review Utility 
Creating / Starting a Review Package 


Qreate Review Package 



Project: 

Subsystem: 


Close Date: 
(Month/DayA'ear) 


RDE 

Review Utility 

j Red liner Interf^^^ 
|l09/25/95 

Design Objects 



Review Leader: hickmaii 


J ColofSelectorDIgxc 
redllnexc 
RedlineTooLcc 
shapeCommentPixmap.ee 
DesIgnObject.C 
do^shell.C 
do sheILH 


, I I Review er Name 

2^ Rob Hickman 
Chris Chrulski 
Senthil Natarajan 


I I Reviewer Role 

Hardware Engineer 
Technical Expert 
Hardware Engineer 






RDE User's Guide 9-15 















The Review Utility 
Reviewing a Package 


Reviewing a Package 


The Review Utility system will notify all reviewers that there is a Re¬ 
view Package requiring their attention. In order for a reviewer to re¬ 
view a package, the following steps must be taken. 

° Select the “Reviewer” filter option from the “Package List 
Type” option menu. A list of all packages for which the user has 
been specified as a reviewer will appear. 

•> Select the appropriate Review Package from the list of packages 
as shown in Figure 10, “Opening Review Package,” on 
page 133. 

° Select “Package -> Open” from the menu bar. 


9-16 RDE User's Guide 















The Review Utility 
Reviewing a Package 




The menu bar for the Design Objects dialog has the following 
tries: 

^ File - View, Print, Close 
° Action - Comments..., Action Items..., Redline... 

° Help - Context Sensitive Help, Help... 


9-18 RDE User's Guide 
















The Review Utility 

Reviewing a Package 


To activate any of the Design Object features (Comments, Action 
Items, View, Print or Redline), click on the icon which is associated 
with the desired Design Object. When the Design Object has been se¬ 
lected, its title will be displayed in reverse video. After selecting the 
Design Object, select the desired feature from the menu bar. 

In addition to using the menu bar to access these features, the user 
may also employ “drag and drop” techniques. To use the “drag and 
drop” technique, click and hold mouse button 2 on the desired Design 
Object icon. While holding down mouse button 2, drag the Design 
Object on top of the desired drop target icon. The drop target icons 
are located at the bottom portion of the Design Objects dialog. There 
are drop targets for Viewer, Printer, Redline, Comments and Action 
Items. When the Design Object is over one of the drop targets, an out¬ 
line around the drop target will appear to provide visual feedback that 
the drop target has been activated. When the outline appears around 
the desired drop target, release mouse button 2 to activate the feature 
for the Design Object. 

Figure 12, “Drag and Drop Technique for Launching Design Object 
Features,” on page 136 shows a Design Object that has been dropped 
over the Redline drop target in order to launch the Redline Tool. 


RDE User’s Guide 9-19 





The Review Utility 
Cojuments 


Comments 



As part of the review process, the reviewers will be creating com¬ 
ments, editing comments and viewing the comments made by other 
reviewers. All comment actions are accessed via the Comments dia¬ 
log. You may bring up the Comments dialog for the desired Design 
Object using either the Design Objects dialog menu bar or the drag 
and drop method. The Comments dialog is shown in Figure 13, 
'‘Comments Dialog,” on page 137, 


9-20 RDE User's Guide 















The Review Utility 
Comments 



Unrollinq Status Loop 


Comments 


Action Search 


Descriptor 


Comment Filter Setting: My Comments 


You might want to unroll the status loop on lines 32Z-330 to 
increase the execution speed. 


Update 


Delete 


Comment Author: 1 

Rob Hickman 

Comment Descriptor: j 
Comment: 

lUnrollIng Status Loop 


FIGURE 13. Comments Dialog 


The Comments dialog is divided into two halves. The upper half of 
the dialog contains the menu bar, the Comments listbox and the Com¬ 
ment Filter Setting option bar (this setting can be My Comments, All 
Comments or Search Results). The lower half of the dialog contains 
the data fields of the currently selected comment (if applicable) and 
the comment modification buttons. 

The Comments listbox displays all of the comments for the selected 
Design Object as specified by the Comment Filter Setting value. If 


RDE User’s Guide 9-21 

















the Comment Filter Setting is set to My Comments, then only your 
comments are displayed in the listbox. If the Comment Filter Setting 
is set to All Comments, then every comment that has been entered for 
the Design Object will be displayed. If the Comment Filter Setting is 
set to Search Results, then all comments which match the most recent 
search criteria will be shown. 

The menu bar for the Comments dialog has the following entries: 

° Action - New..., Update, Delete, Close 

® Search - Search... 

° Help - Context Sensitive Help, Help... 

Creating a New Comment 

To create a new comment, perform the following actions. 

® Select “Action -> New...” from the menu bar. This will bring up 
the Create Comment Form dialog (refer to Figure 14, “Create 
Comment Form Dialog,” on page 139). 







The Review Utility 
Comments 


Qieate Cdmment Form 


Comment Descriptor; Unrolling Status Loop 


Comment: 



You might want to unroll the status loop on lines 3ZZ-330 to 
increase execution speed. 


Status: 


Submit 




Qose 



FIGURE 14. Create Comment Form Dialog 

• Fill in the “Comment Descriptor” and “Comment” fields. The 
comment descriptor is the shortname version for the comment 
by which it will be referenced. The “Comment” field is used to 
fully describe the comment. Both of these fields are required. 

• When the fields have been filled in appropriately, click on the 
“Submit” button to create the comment. 

Note that in order for a reviewer to be able to create a new comment, 
the following conditions must be met: 1) the user must be listed as a 
reviewer for the Review Package, 2) the reviewer must not have pre¬ 
viously closed the Review Package, and 3) the Review Package must 
have a package status of opened (i.e. it must not be unopened, closed 
or cancelled). If all of these conditions are not met, then the “New...” 
menu bar entry will be grayed out. 


RDE User’s Guide 9-23 














Viewing a Comment 

To view an existing comment, perform the following actions. 


° Select the desired comment from the Comments listbox. The 
comment descriptor will be highlighted and its associated fields 
will be displayed in the lower half of the Comments dialog (see 
Figure 13. “Comments Dialog,” on page 137). 

Editing a Comment 

To edit an existing comment, perform the following actions. 

“ Select the desired comment from the Comments listbox. 

o Update the comment attributes in the lower half of the Com¬ 
ments dialog as desired. 

" Click on the “Update” button to update the comment. 

Deleting a Comment 


To delete an existing comment, perform the following actions. 

° Select the desired comment from the Comments listbox. 

° Click on the “Delete” button to delete the comment. The user 
will be prompted for verification on the delete operation. 

Note that in order for a reviewer to be able to edit or delete an existing 
comment, the following conditions must be met: 1) the user must be 
listed as a reviewer for the Review Package, 2) the reviewer must be 
the owner of the comment, 3) the reviewer must not have previously 
closed the Review Package, and 4) the Review Package mu,st have a 
package status of opened (i.e. it must not be unopened, closed or can¬ 
celled). If all of these conditions are not met. then the “Update” and 
“Delete” buttons will be grayed out. 

Searching Comments 

To search the comment database, perform the following actions: 

° Select “Search -> Search...” from the menu bar. This will bring 
up the Enter Search Criteria dialog (refer Figure 15, “Enter 
Search Criteria Dialog,” on page 141). 






The Review Utility 
Comments 



FIGURE 15. Enter Search Criteria Dialog 


• Select the desired “List Type” toggle. If “List Type” is set to 
My Entries, then the search will only be applied to the com¬ 
ments generated by the current user. If “List Type” is set to All 
Entries, then the search will be applied to every comment in the 
database. 

• Enter the desired value for Search String. The search string is a 
regular expression. The search string will be applied to the de¬ 
scriptor and description of each comment that is searched. 

• After List Type and Search String have been specified, click on 
the “OK” button to perform the search. The Comment Filter 
Setting on the Comments dialog will be switched to Search Re¬ 
sults and any comments which matched the search criteria will 
be shown in the comments listbox (refer to Figure 16, “Com¬ 
ment Search Results,” on page 142). 


RDE User’s Guide 9-25 





The Review Utility 
Cojuments 



9^-26 RDE User’s Guide 

















The Review Utility 
Action Items 


Action Items As part of the review process, the reviewers will be creating action 

items, editing action items and viewing the action items made by oth¬ 
er reviewers. All action item functions are accessed via the Action 
Items dialog. You may bring up the Action Items dialog for the de¬ 
sired Design Object using either the Design Objects dialog menu bar 
or the drag and drop method. The Action Items dialog is shown in 
Figure 17, “Action Items Dialog,” on page 143. 



FIGURE 17. Action Items Dialog 


The Action Items dialog contains two listboxes. The listbox on the 
left contains Suggested Action Items and the listbox on the right con¬ 
tains Approved Action Items. 

When reviewers create action items, they are actually suggesting ac¬ 
tion items. These suggested action items become true action items 
when the Review Leader approves them. This allows the Review 
Leader to ensure that multiple action items are not submitted cover¬ 
ing the same problem. 

As with the Comments dialog, there is an Action Item Filter Setting 


RDE User's Guide 9-27 


























option bar which can be set to either My Action Items, All Action 
Items or Search Results. The bottom part of the dialog has a field to 
specify the author of the currently selected action item (if applicable) 
and buttons for creating and editing action items. 

Both the Suggested Action Items and the Approved Action Items list- 
boxes display the action items for the selected Design Object as spec¬ 
ified by the Action Item Filter Setting value. If the Action Item Filter 
Setting is set to My Action Items, then only the reviewer’s action 
items are displayed in the listboxes. If the Action Item Filter Setting 
is set to All Action Items, then every action item that has been entered 
for the Design Object will be displayed. If the Action Item Filter Set¬ 
ting is .set to Search Results, then all action items which match the 
most recent search criteria will be shown. 

The menu bar for the Action Items dialog has the following entries: 

° Action - New..., View/Edit..., Close 
° Search - Search... 

° Help - Context Sensitive Help, Help... 

Creating a Suggested Action Item 

To create a suggested action item, perform the following actions. 

° An Action Item can be suggested by a reviewer by clicking on 
the “New...” button at the bottom of the Action Items dialog. 
This will bring up the New Problem Report dialog shown in 
Figure 18, “New Problem Report Dialog,” on page 146. 

° The New Problem Report dialog is very similar to the main di¬ 
alog for the Problem Report Utility. Please refer to the Problem 
Report Utility section in this User’s Guide for directions and de¬ 
scriptions of the various boxes and buttons. 

° When you have entered the appropriate data into the form, click 
on the “Submit” button to create the suggested action item. 







The Review Utility 

Action Items 


Note that in order for a reviewer to be able to create a suggested ac¬ 
tion item, the following conditions must be met: 1) the reviewer must 
not have previously closed the Review Package, and 2) the Review 
Package must have a package status of opened (i.e. it must not be un¬ 
opened, closed or cancelled). If all of these conditions are not met, 
then the “New...” button will be grayed out. 


RDE User's Guide 9-29 





The Review Utility 
Action hems 


r— Class?- 


—Priority? — 


^ SW-bug 


^ Ljow 


Doc -bug 


Nedlira 


v- Change Request 


High 


Support 





-Severity?- 

^ f'lon-'Cntlcal 
Sedous 
Orttlcal 


Category 


ROE 


Synopsis: j Color coding does not worki 

Enter the precise description of the problem: 


I When the user selects the color coding feature, the application 
{ core dumps! 


Enter the code/input activities to reproduce the problem: 


j Select the color coding feature: 


Enter the fix or worlcaround to solve the problem: 


{ UnknownJ 


Phase inserted: Codling and Unit Testiing ^ | 

Phase Detected: 


Ifitegmtloin and Testing 


Submit 


Cancel 


Help 


FIGURE 18. New Problem Report Dialog 


9-30 RDE User's Guide 


I 



















The Review Utility 

Action Items 


Viewing an Action Item 

To view an action item, perform the following actions. 

• Select the action item to be viewed by clicking on its synopsis 
in the appropriate action item listbox. The selected action item 
will be highlighted in reverse video. 

• Click on the “View/Edit...” button near the bottom of the dialog. 
This will bring up the Open Action Item dialog shown in 
Figure 19, “Open Action Item Dialog,” on page 148. 

• When you have finished viewing the action item, click on the 
“Cancel” button to return to the Action Items dialog. 


RDE User's Guide 9-31 



The Review Utility 
Action Items 



FIGURE 19. Open Action Item Dialog 


9-52 RDE User's Guide 



















The Review Utility 
Action Items 


Editing a Suggested Action Item 

To edit a suggested action item, perform the following actions. 

• Select the action item to be edited by clicking on its synopsis in 
the appropriate action item listbox. The selected action item 
will be highlighted in reverse video. 

• Click on the “View/Edit...” button near the bottom of the dialog. 
This will bring up the Open Action Item dialog shown in 
Figure 19, “Open Action Item Dialog,” on page 148. 

« Edit the data fields appropriately. When you have finished edit¬ 
ing the action item, click on the “Update” button to submit the 
new information to the server. 

Deleting a Suggested Action Item 

To delete a suggested action item, perform the following actions. 

• Select the action item to be deleted by clicking on its synopsis 
in the appropriate action item listbox. The selected action item 
will be highlighted in reverse video. 

• Click on the “View/Edit...” button near the bottom of the dialog. 
This will bring up the Open Action Item dialog shown in 
Figure 19, “Open Action Item Dialog,” on page 148. 

• Click on the “Delete” button to delete the action item. The Re¬ 
view Utility will request confirmation on the delete operation. 

Note that in order for a reviewer to be able to edit or delete an action 
item, the following conditions must be met; 1) the selected action 
item must be a suggested action item (approved action items may not 
be modified), 2) the reviewer must be the owner of the action item, 3) 
the reviewer must not have previously closed the Review Package, 
and 4) the Review Package must have a package status of opened (i.e. 
it must not be unopened, closed or cancelled). If all of these condi¬ 
tions are not met, then the “Update” and “Delete” buttons will be 
grayed out. 


RDE User’s Guide 9^33 




Approving a Suggested Action Item 

The Review Leader can promote an action item from suggested to ap¬ 
proved by highlighting the action item and clicking on the "Approve 
Action Item” button. The approved action item is put into the 
GNATS database (if it exists). Future tracking of the action item 
should be performed through the GNATS database. 

Searching Action Items 

To search the action item database, perform the following actions: 

° Select “Search -> Search...” from the menu bar. This will bring 
up the Enter Search Criteria dialog (refer Figure 15, “Enter 
Search Criteria Dialog,” on page 141). Note that the Search Cri¬ 
teria dialog for performing a search of action items is identical 
to the Search Criteria dialog for performing a search of com¬ 
ments. 

° Select the desired “List Type” toggle. If “List Type” is set to 
My Entries, then the search will only be applied to action items 
generated by the current user. If “List Type” is set to All En¬ 
tries, then the search will be applied to every action item in the 
database. 

° Enter the desired value for Search String. The search string is a 
regular expression. The search string will be applied to the syn¬ 
opsis and description of each action item that is searched. 

° After List Type and Search String have been specified, click on 
the “OK” button to perform the search. The Action Item Filter 
Setting on the Action Items dialog will be switched to Search 
Results and any action items which matched the search criteria 
will be shown in the action item listboxes (refer to Figure 20, 
“Action Item Search Results,” on page 151). 



The Review’ Utility 
Redlining a Design Object 


Action Items 


Action Search 


Suggested Action items 



Approved Action Items 


Approve 

Action 

Item 


Action Item Filter Setting: I Search Results 


Action item Author: 


New... 



FIGURE 20. Action Item Search Results 


Redlining a 
Design Object 


As part of the review process, the reviewers will be redlining design 
objects. This includes making new redline marks and reviewing red- 
line marks made by the other reviewers. All redline actions are ac¬ 
cessed via the Redline Tool. You may bring up the Redline Tool for 
the desired Design Object using either the Design Objects dialog 
menu bar or the drag and drop method. The Redline Tool is shown 
in Figure 21, “Redlining a Design Object,” on page 152. 

NOTE: The Redline Tool can handle text, GIF and XWD files. 

Other types of files may not be redlined. 


RDE User’s Guide 9-35 






















The Review Utility 
Redlining a Design Object 


Acicnmllemii 


yaf^ojp Colors 


/! 

o 


T—1 

j-1 

1 - 

Ai 

r*n 

NOTE! 


hickmaj^ jH clirfsc p snowmaji p' sti^pka 


9 

10 
11 
12 

13 

14 

15 
18 

17 

18 

19 

20 
21 
22 

23 

24 

25 
28 

27 

28 

29 

30 

31 

32 

33 

34 

35 
iG 
37 
33 

39 

40 

41 


^ Module Naroe : ActionItem*h 

^ Revision : [1] [this will be determined by the TDM] 

^ Creation Date: 12/7/1994 
^ Mod* Date : [Month/Day/Year1 

^ Synopsis: 

^ This module defines the flctionltem class* 

^ Requirements: 

^ Change History: 

^ [Rev Date Name! 

^ [What Was Done] 

1 12/7/1994 chrisc 
^ created the module 

Programmer: Chris Chrulski (chriscG!rassp*rassp*mot*com) 

Phone : (602) 441-3699 

^ Address : Motorola Government and Systems Technology Group 
^ M/D H1175 

8201 E* McDowell Road 
^ Scottsdale A2 85252-1417 

* Copyright (c) 1994 Motorola, Inc* 


sifndef _ACTI0NIT£M_H 
#define .ACTIONITEM.H 


Need Comments Here J 


^^include <rij/cstring*h> 

^?include <rw/colistr*h> 

^include <rw/dlistcol*h> 

Include "Reviewer*h" 

typedef enum < UNAPPROVED = 0, APPROVED > AIStatusType; 

typedef struct Actitem.data { 

_-1^_* ________ 


FIGURE 21. Redlining a Design Object 


9-36 RDE User’s Guide 


















Ihickman 


color »al dll 


FIGURE 22. Color Palette Dialog 


The Review Utility 
Redlining a Design Object 


chrisc 

snowman 

stupka 


Dismiss 


The Redline Tool is divided into two portions. The upper portion 
contains the menu bar, tool palette and reviewer listing. The lower 
portion contains the scrolled window which displays the design ob¬ 
ject which is being redlined. 


The menu bar for the Redline Tool has the following entries: 
• Markup - Save, Dismiss 


• Colors - Assign... 


Figure 21, “Redlining a Design Object,” on page 152 shows the Red- 
line Tool with the Design Object and a few marks placed on it. The 
Redline Tool maintains a different color for each reviewer. 


If you wish, you may assign colors to the reviewers which are differ¬ 
ent than the default colors given by the Redline Tool. This is done 
though the use of the Color Palette dialog (see Figure 22, “Color Pal¬ 
ette Dialog,” on page 153). To bring up this dialog, select “Colors -> 
Assign...” from the menu bar. 


RDE User’s Guide 9-37 















The Review Utility 

Additional Actions for Design Objects 


Additional Actions for 
Design Objects 


To assign a color to a reviewer, select the reviewer by clicking on the 
reviewer's name and then select the desired color in the Color Choos¬ 
er array. Continue this process for each reviewer you wish to assign 
a different color. When you have finished, click on the ''Dismiss” but¬ 
ton. 

An individual reviewer’s marks can be turned off by clicking on the 
colored square next to the reviewer’s name. 

To place a mark on the Design Object, select the desired mark type 
from the tool palette and place the mark on the Design Object by left- 
clicking at the location where the mark should be placed. A shift-mid¬ 
dle click operation on an existing mark will delete it. 

When you have finished marking the object, select “Markup -> Dis¬ 
miss’ from the menu bar. This will save the marks and return to the 
Design Objects dialog. 

In order to help the reviewer with the review task, there are two ad¬ 
ditional Design Object features available: viewing and printing. 

Viewing a Design Object 

You may view a Design Object by using either the Design Objects 
dialog menu bar or the drag and drop method. This will launch the ap¬ 
propriate viewer application for the selected Design Object. 

The viewer application is determined by the file extension of the De¬ 
sign Object. The file, $RDE_HOME/etc/view_tool_table, specifies a 
one-to-one mapping between file extension and viewer application. If 
no mapping exists for the Design Object, then the default viewer ap¬ 
plication is launched. 

The Design Object that is displayed in the viewer application is actu¬ 
ally a temporary, read-only version of the Design Object that is delet¬ 
ed when the viewer application is exited. 

Printing a Design Object 

This feature is not currently implemented. 


9-38 RDE User's Guide 







The Review Utility 
Closing a Review Package 


Closing a Review After finishing the reviewing task, the reviewer must inform the sys- 

Package tem that he or she is done with the review. This is accomplished by 

performing the following tasks. 

• Highlight the desired Review Package in the main Review Util¬ 
ity dialog (Figure 1, “Review Utility Startup Dialog,” on 
page 119). 

• Select “Package -> Close” from the menu bar. The user is then 
presented with the dialog shown in Figure 23, “Closing a Re¬ 
view Package,” on page 155. 



Qose Review Pacl 


Reviewer Disposition: 

♦ Accepted 

v Conditionally Accepted 
v- New Review 
V' Redo Module 


Additional Comments: 


Good work! 


Osincel 


FIGURE 23. Closing a Review Package 


• The Close Review Package dialog allows the reviewer to set 
his or her “disposition” (one of “Accepted”, “Conditionally Ac¬ 
cepted”, “New Review”, or “Redo Module”). There is also a 
section for “Additional Comments.” The reviewer should place 
comments which pertain to the disposition and the entire Re- 


RDE User’s Guide 9-39 






















The Review Utility 
Stopping the Review 


view Package here. 

Stopping the Review After all reviewers have reviewed the package, or after the time has 

expired on the review, the Review Leader should stop the review. To 
stop a review, the following actions are performed: 

° Ensure that the value of the 'Tackage List Type" option menu 
is “Leader”. 

“ Designate the Review Package to be stopped by selecting the 
package title in the listbox of the main Review Utility dialog. 

° Select “Review -> Stop” from the menu bar. The dialog shown 
in Figure 24, “Stopping the Review,” on page 156 will appear. 

° Enter the review summary in the “Review Leader Summary” 
field. This field is required. 

° Click on the “OK” button to stop the review. 

The review has now been stopped and email has been sent to the au¬ 
thor to notify him or her that the review has been stopped. This noti¬ 
fication also includes the review leader’s summary. 


1- 

Stop Review 

Review Leader Summary: 

1 This review is closed. Please act on the Action Items by 
j next week. 

R 

I 

!/ 



----- ^ 


OK 

Cancel j Help ] ■ 


FIGURE 24. Stopping the Review 


9-40 RDE User's Guide 








The Review Utility 
Cancelling the Review 


Cancelling the Review 




If necessary, the Review Leader may cancel a review. To cancel a re¬ 
view, the following actions are performed: 

• Select the “Leader” filter option from the “Package List Type” 
option menu on the main Review Utility dialog (shown in 
Figure 1, “Review Utility Startup Dialog,” on page 119). This 
will display all of the Review Packages for which the user is the 
Review Leader. 

• Select the Review Package to be cancelled from the list of pack¬ 
ages displayed. 

• Select “Review -> Cancel” from the menu bar. The dialog 
shown in Figure 25, “Cancelling the Review,” on page 157 will 
appear. 

• Enter the reason for cancelling the review. This field is required. 

• Click on the “OK” button to cancel the review. 

The review has now been cancelled and email has been sent to the au¬ 
thor to notify him or her that the review has been cancelled. This no¬ 
tification also includes the reason why the review was cancelled. 






1 

Reason for Cancelling Review Package: 




I Terminate the review processj 


J 



1 



/ 


^ ---- 

.-. 







OK 1 Cancel | 

Help 

1 



- ^^ - — - 




FIGURE 25. Cancelling the Review 


RDE User’s Guide 9-41 







The Review Utility 
Addirional Features 


AdditionHl F©sityres The Review Utility has five additional features which are provided to 

help the user with the technical review process; 1) Reviewer Listing. 
2) Review Summary, 3) Named Package Filtering, 4) Default Re¬ 
viewer Lists, and 5) Message Center. All of these features are supple¬ 
mental and are not necessary to perform a review. 

Reviewer Listing The Reviewer Listing dialog provides several areas of functionality. 

° It gives a listing of all of the reviewers that have been assigned 
to the currently selected Review Package (if any). 

° It displays important information associated with each of the re¬ 
viewers. This includes reviewer role, reviewer status and re¬ 
viewer disposition. 

° It provides the means to add additional reviewers to a Review 
Package that has already been started. 

To display the Reviewer Listing dialog, perform the following ac¬ 
tions. 

° Designate the Review Package for which you wish to see the 
Reviewer Listing by selecting the package title in the listbox of 
the main Review Utility dialog. 

° Select ‘‘Review -> Reviewer List” from the menu bar. The dia¬ 
log shown in Figure 26, “Reviewer Listing Dialog,” on 
page 159 will appear. 


9-42 RDE User's Guide 







The Review Utility 
Review Summary 


Reviewer listing 


Name 


Role 


Status 


Disposition 


Brent Schneeman 
Chris Ghrulski 
Robert C. Hickman 
Dan Stupka 


System Designer 
Technical E^ert 
Software Engineer 
Developer 


Never Opened Not Applicable 
Never Opened Not Applicable 
Completed Accepted 
Never Opened Not Applicable 


Add Reviewer 


Qose 


Help 


FIGURE 26. Reviewer Listing Dialog 


To add reviewers to a review using the Reviewer Listing dialog, 
click on the “Add Reviewer” button. The Add Reviewers dialog 
(shown in Figure 6, “Add Reviewers Dialog,” on page 127) will ap¬ 
pear and the user will be able to add reviewers as previously de¬ 
scribed. 

Note that in order for a user to be able to add a reviewer to a Review 
Package, the following conditions must be met: 1) the user must be a 
reviewer for the Review Package, the Review Leader or the Review 
Submitter, and 2) the Review Package must be opened (i.e. it must 
not be unopened, closed or cancelled). 

Review Summary The Review Summary dialog provides the user a convenient means 

of viewing reviewer and leader summaries for a Review Package. 
This dialog is most useful for Review Packages which have been 
stopped or cancelled by the Review Leader. There are several items 
of information that this dialog provides to the user. 

• It displays the Review Leader for the currently selected Review 
Package and gives the Review Leader summary (if applicable). 

• It gives a listing of all of the reviewers associated with the cur¬ 
rently selected Review Package. 

• It displays important information associated with each of the re¬ 
viewers. This includes reviewer role, reviewer status and re- 


RDE User's Guide 9-43 


















The Review Utility 
Review Siiniman 


viewer disposition. 

° It displays the Reviewer Summary for the currently selected re¬ 
viewer. The Reviewer Summary will only be applicable for re¬ 
viewers whose disposition is not “Not Applicable”. 

NOTE: The Re view Siimnian' dialog provides a superset of the 
infonnation given by the Reviewer Listing dialog. However, 
you may not add reviewers to a review package through the Re¬ 
view Summary dialog. 

To display the Review Summary dialog, perform the following ac¬ 
tions. 


° Designate the Review Package for which you wish to see the 
Review Summary by selecting the package title in the listbox of 
the main Review Utility dialog. 

o Select “Review -> Review Summary” from the menu bar. The 
dialog shown in Figure 27, “Review Summary Dialog." on 
page 161 will appear. 


9-44 RDE User’.'; Guide 







The Review Utility 

Review Siimnian' 



FIGURE 27. Review Summary Dialog 


The Review Summary dialog is composed of three sections. The top 
section displays the Review Leader and the Leader’s summary for the 
Review Package. The middle section lists all of the reviewers that 
have been assigned to the Review Package. The bottom section dis¬ 
plays the Reviewer Summary for the currently selected reviewer. 

To view a reviewer’s summary, select the desired reviewer in the list- 
box. When you have finished viewing the Review Summary, click 


RDE User's Guide 9-45 


































The Review Utility 
Named Package Filtering 


on the "Close’' button to dismiss the dialog. 

NOTE: Disregard the “Shrink” button on the Review Siimnian' 
dialog. This feature is not implemented in this build of the Re¬ 
view Utility. 

Named Package Filter- In order to help the user organize the listing of review packages, the 

Review Utility provides the means to create custom filters. Currently, 
these named package filters provide the ability to discriminate review 
packages based on three attributes: 1) project name, 2) subsystem 
name and 3) review package status. 

Note that there are four filters already built into the Review Utility 
accessed via the “Package List Type” option menu. Depending on its 
setting, the review package listing with be filtered as follows: 

“ “Package List Type”=Reviewer - Filters the review package 
listing so that only review packages for which the user has been 
assigned as a reviewer are displayed. 

“ “Package List Type”= Submitter - Filters the review package 
listing so that only review packages which the user created are 
displayed. 

° “Package List Type”= Leader - Filters the review package list¬ 
ing so that only review packages for which the user is specified 
as the review leader are displayed. 

° “Package List Type”=Ail - No filtering is performed on the re¬ 
view package listing. All review packages are displayed. 

Named package filters allow for additional filtering in conjunction 
with the “Package List Type” filtering. 

All named package filter actions are accessed via the Named Pack¬ 
age Filters dialog. You may bring up the Named Package Filters di¬ 
alog by selecting “Filter -> Show Named Filters” from the menu bar 
of the main Review Utility dialog (see Figure 1, “Review Utility Star¬ 
tup Dialog,” on page 119). The Named Package Filters dialog is 
shown in Figure 28, “Named Package Filters Dialog,” on page 163. 


9-46 RDE User's Guide 








The Review Utility 

Named Package Filtering 


Named Package Filters 


File Action 

Help 

Available Filters < 



[Empty Fitter 

J 

iMv New Filter r 


Review Utility Filter 

Metrics Filter 

■J 

.: 

1 If 





Filter Description 



PROJECT matches ’RDE’ && 

SUBSYSTEM matches ’Review Utility’ && 

PACKAGE STATUS is ( OPENED ) 

$ 

J 

New... j Apply 1 

Qose 

J 


FIGURE 28. Named Package Filters Dialog 


The Named Package Filters dialog is divided into two halves. The 
upper half of the dialog contains the menu bar and the Available Fil¬ 
ters listbox. The lower half of the dialog contains the filter description 
of the currently selected filter (if applicable) and the package filter ac¬ 
tion buttons. 

The Available Filters listbox displays all of the named package filters 
that exist for the user. Named package filters are kept in the user’s 
home directory in the file, “.ReviewTool-filter-history“. Any time a 
change is made to the named package filters list, the updated list is 
saved to this file. Therefore, the user never has to explicitly save his 
or her named package filters. 


RDE User's Guide 9-47 
















The Reviev,' Utility 
Named Package Filtering 


The menu bar for the Named Package Filters dialog has the follow¬ 
ing entries: 

° File - New.... View/Edit..., Delete. Close 

® Action - Apply 

° Help - Context Sensitive Help, Help... 

Creating a Named Package Filter 

To create a new named package filter, perform the following actions. 

° Select ‘‘File -> New...” from the menu bar (alternatively you 
may click on the ‘"New...” button near the bottom of the dialog). 
This will bring up the Create Named Package Filter dialog (re¬ 
fer to Figure 29, “Create Named Package Filter Dialog,” on 
page 165). 






The Review Utility 
Named Package Filtering 


Cneate Named Packaqe RIter 



FIGURE 29. Create Named Package Filter Dialog 


RDE User \s Guide 9-49 
















The Review Utility 
Named Package Filtering 


® Fill in the '‘Filter Name" field. This will be the name by which 
the filter will be referred. This field is required. 

° Fill in the “Project” and “Subsystem” combo boxes appropri¬ 
ately. Note that these combo boxes are editable. You may select 
a value from the drop-down list or you may directly enter a val¬ 
ue into the text field. The Review Utility supports named pack¬ 
age filters which contain regular expressions. Therefore, the 
“Project” and “Subsystem” may contain regular expressions to 
perform more complex filtering. These values are combined as 
a boolean ANID expression in the package filtering. 

° Click on the appropriate toggles for “Package Status”. These 
values are combined as a boolean OR expression in the package 
filtering. 

° If you wish to clear all of the data fields, click on the “Clear” 
button. 

° When the fields have been filled in appropriately, click on the 
“OK” button to create the named package filter. 

Editing a Named Package Filter 

To edit a named package filter, perform the following actions. 

° Designate the filter you wish to edit by clicking on its name in 
the Available Filters listbox. 

° Select “File -> View/Edit...” from the menu bar. This will bring 
up the Edit Named Package Filter dialog (refer to Figure 30, 
“Edit Named Package Filter Dialog,” on page 167). 


9-50 RDE User's Guide 







The Review Utility 
Named Package Filtering 



Edit Named Packsme Riter 


Filter Name 


Project 


Subsystemf^^^^^^ Reporting Utility 


Package Status: 


W Unopened 


P Opened 


J Qosed 


CanceUed 


Gear 


Cancel 


FIGURE 30. Edit Named Package Filter Dialog 


• All of the data fields will be filled in with the current filter’s at¬ 
tributes. Edit these fields as desired. If necessary, refer to the 
section on creating a new named package filter for descriptions 
of the data fields. 

• If you wish to clear all of the data fields, click on the “Clear” 
button. 

• If you decide that you do not want to edit the filter, click on the 
“Cancel” button and the filter will remain unchanged. 

• When you have finished editing the named package filter, click 
on the “OK” button to post the changes. 


RDE User’s Guide 9-51 




























The Review Utility 
Ncuned Package Filtering 


Deleting a Named Package Filter 

To delete a named package filter, perform the following actions. 

“ Designate the filter you wish to delete by clicking on its name 
in the Available Filters listbox. 

“ Select “File -> Delete” from the menu bar. The Review Utility 
will ask for confirmation on the delete. 

Applying a Named Package Filter 

To perform any filtering on the review package listing, a named 
package filter must be applied. To apply a named package filter, per¬ 
form the following actions. 

“ Designate the filter you wish to apply by clicking on its name in 
the Available Filters listbox. 

° Select “Action -> Apply” from the menu bar (alternatively you 
may click on the “Apply” button near the bottom of the dialog). 

This will set the selected named package filter as the current filter. 
The name of the current package filter is displayed on the main Re¬ 
view Utility dialog (see Figure 1, “Review Utility Startup Dialog,” on 
page i 19) in the middle third of the screen immediately below the 
“Package List Type” option bar. 

Filtering will only take place if named package filtering is on. If 
named package filtering is off, no filtering will take place and the 
name of the current package filter will be grayed out. 







The Review Utility 
Named Package Filtering 


Toggling Named Package Filtering On and Off 

Named package filtering may be turned on and off as desired. To tog¬ 
gle named package filtering, perform the following actions. 

• Select “Filter -> Named Filtering” from the menu bar of the 
main Review Utility dialog (see Figure 31, “Turning Named 
Package Filtering On,” on page 170). 

• If named package filtering was previously off, it will now be 
turned on. This is designated by a red toggle appearing to the 
left of “Filter -> Named Filtering”. If a named package filter 
was previously specified, then the review package listing will 
be regenerated and the named package filter name will no long¬ 
er be grayed out. 

• If named package filtering was previously on, it will now be 
turned off. This is designated by the absence of a red toggle to 
the left of “Filter -> Named Filtering”. The review package list¬ 
ing will be regenerated. If a named package filter was previous¬ 
ly specified, the named package filter name will be grayed out. 


RDE User’s Guide 9~53 




The Review Utility 
Default Reviewer Lists 


Default Reviewer Lists To make the process of creating and starting a review easier for the 

user, the Review Utility provides the means to create and maintain 
default reviewer lists. Default reviewer lists are reviewer lists associ¬ 
ated with a key project/subsystem identifier. 

Default reviewer lists are very useful when there is a core set of re¬ 
viewers for a particular subsystem on a project. Rather than specify¬ 
ing this core set of reviewers each time a review is started, the user 
can do it once as a default reviewer list. Thereafter, whenever a re- 


i 

^l 

Review TooS 

■ ^ J 

Review Package 

Filter j Reviewer list 

Op'ilojis 

Help 

Review Leader: 

Show Mamed Filters 

Package Status: 


Package Submitter: 

Mamed Filtering 

Actual Close Date; 


Reviewer Rol8(s); 





FBa:{cag|8 Title 


EsL aose Date 


Reviewer Status 


Review PacK#1 
Redliner Interface 


03/22/95 

09/25/95 


Completed 

Completed 


Package List Type; Reviewer 


Package Filter Title: Review Utility Filter 


Submitter Comments/Instructions: 


a 


FIGURE 31. Turning Named Package Filtering On 


9-54 RDE User's Guide 



















The Review Utility 
Default Reviewer Lists 


view package is created or started with the same project/subsystem 
combination, the reviewers that comprise the default reviewer list 
will automatically be assigned to the review package. 

All default reviewer list actions are accessed via the Default Review¬ 
er Lists dialog. You may bring up the Default Reviewer Lists dialog 
by selecting “Reviewer List -> Show Reviewer Lists” from the menu 
bar of the main Review Utility dialog (see Figure 1, “Review Utility 
Startup Dialog,” on page 119). The Default Reviewer Lists dialog is 
shown in Figure 32, “Default Reviewer Lists Dialog,” on page 171. 


Default Reviewer Lists 


List Action 

iimi 






Project; j RDE 



Subsystem: j Review Utility 


a 


Default Reviewer Lists 





Review Utility List #1 

Review Utility List #2 (Default) 

Review Utility List #3 X 

Review Utility List #4 

Review Utility List #5 



. . 

— . . . 







-am:-- ■ New..U"''’“ 'jv-U Delete U-viyja': 

Qose 



rry']"'■ :-:-rr-^—- 7 - 


si 



FIGURE 32. Default Reviewer Lists Dialog 


The Default Reviewer Lists dialog is divided into two halves. The 
upper half of the dialog contains the menu bar and the Project and 
Subsystem combo boxes. The lower half of the dialog contains De¬ 
fault Reviewer Lists listbox and the default reviewer list action but¬ 
tons. 

The Default Reviewer Lists listbox displays all of the default review¬ 
er lists for the current project/subsystem setting. The “default” de¬ 
fault reviewer list for the project/subsystem can be determined by 


RDE User's Guide 9-55 




















The Review Utility 
Default Review er Lists 


observing which default reviewer list has the designation, (Default), 
to the right of its name. 

Default reviewer lists are specified by a user and exist only for that 
user. A user’s default reviewer lists are not stored in the Review Util¬ 
ity’s database and therefore are not accessible to others. 

Default reviewer lists are kept in the user’s home directory in the file. 
“.ReviewTool-default-rev-lisf‘. Any time a change is made to the 
collection of default reviewer lists, the updated collection is saved to 
this file. Therefore, the user never has to explicitly save his or her de¬ 
fault reviewer lists. 

The menu bar for the Default Reviewer Lists dialog has the follow¬ 
ing entries: 

° List - New..., Edit..., Delete, Close 
° Action - Make Default 
° Help - Context Sensitive Help, Help... 

Creating a Default Reviewer List 

To create a new default reviewer list, perform the following actions. 

“ Select a value for the Project combo box. This will specify the 
project for which the default reviewer list will be applicable. 

° Select a value for the Subsystem combo box. This will specify 
the subsystem for which the default reviewer list will be appli¬ 
cable. 

NOTE: You will he unable to create a new default reviewer list 
unless valid values have been specified for both Project and 
Subsystetn. 

° Select “List -> New...’’ from the menu bar (alternatively you 
may click on the “New...” button near the bottom of the dialog). 
This will bring up the Create Default Reviewer List dialog (re¬ 
fer to Figure 33, “Create Default Reviewer List Dialog,” on 
page 173). 


9-56 RDE User's Guide 








The Review Utility 
Default Reviewer Lists 


1 



Create Default Reviewer List 






List Name; 

1 Another Default Reviewer List 

Project: 

RDE 


Subsystem; 

Review Utility 

: 








1 ReviewerbName|||fSS 

Reviewer Role 







J 


Chris Chrulski 

Rob Hickman 

Senthil Natarajan 

Software Engineer 

Requirements Analyst 

Developer 
















S-'fPO-'""-' ■ ^ v' 





Add 1 

Delete ' 









C^cer*- "'1 ^ Help, : [ ■ 





. 

—. ' ^ .. .. 


FIGURE 33. Create Default Reviewer List Dialog 


RDE User's Guide 9-57 



























The Review Utility 
Default Reviewer Lists 


° Fill in the “List Name" field. This will be the name by which the 
default reviewer list will be referred. This field is required. 

° To add reviewers to the default reviewer list, click on the “Add" 
button. The Add Reviewers dialog (shown in Figure 6, “Add 
Reviewers Dialog," on page 127) will appear. You may use this 
dialog to add reviewers as previously described (refer to the sec¬ 
tion “Creating/Starting a Review Package” for detailed instruc¬ 
tions for reviewer specification). 

° If you wish to delete reviewers from the default reviewer list, 
select the desired reviewers in the reviewer listbox and then 
click on the “Delete” button. The Review Utility will ask for 
confirmation on the delete operation. 

0 When the List Name field has been filled in appropriately and 
the reviewers for the default reviewer list have been specified, 
click on the “OK” button to create the default reviewer list. 

Editing a Default Reviewer List 

To edit a default reviewer list, perform the following actions, 

° Designate the default reviewer list you wish to edit by clicking 
on its name in the Default Reviewer Lists listbox. 

N OTE: You must specify values for both Project and Subsystem 
before any default reviewer lists appear in the Default Reviewer 
Lists listbox. 

° Select “List -> Edit...” from the menu bar. This will bring up the 
Edit Default Reviewer List dialog (refer to Figure 34, “Edit De¬ 
fault Reviewer List Dialog,” on page 175). 




List Name: |]Review Utility List #2 


Project:.:' RDE 
Subsystem: Review Utility 


Reviewer Name 


Reviewer Role 


Delete 


Cancel 


Efflt Default Reviewer List 


FIGURE 34. Edit Default Reviewer List Dialog 


All of the data items will reflect the current default reviewer 
list’s attributes. Edit these items as desired. If necessary, refer 
to the section on creating a new default reviewer list for descrip¬ 
tions of the data items. 

If you decide that you do not want to edit the default reviewer 
list, click on the “Cancel” button and the default reviewer list 
will remain unchanged. 

When you have finished editing the default reviewer list, click 
on the “OK” button to post the changes. 


The Review utility 
Default Reviewer Lists 


Rob Hickman Hardware Engineer 

Chris Chrulski Technical Expert 

Senthil Natarajan Hardware Engineer 


RDE User's Guide 9-59 
























The Review Utility- 
Message Center 


Message Center 


Deleting a Default Reviewer List 

To delete a default reviewer list, perform the following actions. 

^ Designate the default reviewer list you wish to delete by click¬ 
ing on its name in the Default Reviewer Lists listbox. 

NOTE: You must specify values for both Project and Subsystem 
before any default reviewer lists appear in the Default Reviewer 
Lists listbox. 

° Select “List -> Delete” from the menu bar (alternatively you 
may click on the “Delete” button near the bottom of the dialog). 
The Review Utility will ask for confirmation on the delete. 

Making a Default Reviewer List the “Default” 

For each group of default reviewer lists on a per project/subsystem 
basis, there must be one list which is designated as the “default” de¬ 
fault reviewer list. The default list will be the default reviewer list 
that is automatically added to a review package when the package is 
created or started. 

To make a default reviewer list the default, perform the following ac¬ 
tions. 

° Designate the default reviewer list you wish to make the default 
by clicking on its name in the Default Reviewer Lists listbox. 

N OTE: You must specify values for both Project and Subsystem 
before any default reviewer lists appear in the Default Reviewer 
Lists listbox. 

° Select “Action -> Make Default” from the menu bar. You will 
receive visual confirmation of this action by verifying that the 
desired default reviewer list has the designation, (Default), af¬ 
ter its name in the Default Reviewer Lists listbox. 

The Message Center dialog allows the user to quickly check several 
items of information pertaining to the current context of the Review 
Utility. It also is used to display low-priority status messages (all 
high-priority status messages are issued through full application 
modal message boxes). 

The Message Center dialog provides the following information: 


9-60 RDE User's Guide 






The Review Utility 
Message Center 


• The Project name for the currently selected Review Package (if 
applicable). 

• The Subsystem name for the currently selected Review Package 
(if applicable). 

• The Package Title of the currently selected Review Package (if 
applicable). 

• The Design Object name for the currently selected Design Ob¬ 
ject (if applicable). 

• The last low-priority message issued by the Review Utility. 

To display the Message Center dialog, perform the following actions. 

• Select “Options -> Show Message Center” from the menu bar 
of the main Review Utility dialog (see Figure 1, “Review Util¬ 
ity Startup Dialog,” on page 119). The dialog shown in 
Figure 35, “Message Center Dialog,” on page 177 will appear. 

• To hide the Message Center dialog, select “Options -> Hide 
Message Center” from the menu bar of the main Review Utility 
dialog. 




Message Center 

Project: 

RASSP 

Subsystem: 

RASSP_Subsystem_2 

Package Title: 

IRST Decoder Module 

Design Object: 

Actionitem.h 

Last Message: 



FIGURE 35. Message Center Dialog 



RDE User's Guide 9-61 












9^62 RDE User’s Guide 





Task Manager 


Chapter 10: The Task Manager 

1.0 Background 

Although there is an abundance of COTS tool that serve the area of Work flow management, 
there currently exists no COTS tool that deals with the area of task identification and execu¬ 
tion. This work represents filling this operational need in a manner that will allow collabora¬ 
tion over a distributed area with task specific items while maintaining a level of situational 
awareness never before present. 

This work is the direct result of efforts put forth by the RASSP Design Environment Prototype 
(RDEP) team and our thanks go out to them. 

This document also reflects the current Alpha release of the product and will be updated with 
subsequent releases. 

2.0 Task Manager Description 

The Task Manager allows users from program managers down to engineers direct access and 
execution of the tasks they have to work on. It allows for the arbitrary dissemination of tasks 
into subtasks and allows assignment of each of these subtasks to valid users of the system. 

The Task Manager supports situational awareness by providing a graphical representation of 
all the tasks that a user/manager is responsible for. The possibility of “one slipping through the 
cracks” is reduced to near zero. 

The Task Manager supports task execution by providing direct access and tool launch of all 
data objects associated with a given task. Also, the Task Manager will allow for default or 
non-default tool launching based on user input. Furthermore, the Task Manager will maintain 
automatic metrics collection for a variety of metrics that will be described later in this docu¬ 
ment. 


RDE User’s Guide 10-1 



Task Manager 


3.0 Task Manager Functionality 

Figure 1 shows the top level functionality of the Task Manager. It will take input from 
either a Microsoft project file or from an IDEF process tool file and generate a set of 
tasks representative of the data contained therein. (Please see the section on importing 
for more information). 

The user may then add information pertaining to the tasks and assign them to individu¬ 
als for execution. Once a task has been assigned to a user, that user will be notified of 
this new task and that user’s database will be updated to reflect the new task. 

The Task Manager allows each user to customize their tool in order to support them in 
the work they do without having to change the process of their work significantly. The 
TM will allow a user to defined a set of default tools relating to each task type and 
object type so that when a user wishes access to a data object related to a task, a simple 
mouse click will launch the tool in the user supplied default tool. The TM will also 
allow the user to launch the data object in any other tool which has been identified as a 
tool capable of launch a specific data object type. 



FIGURE 1. Task 


flfsltKI* 


Microsoft 

Project 

Data 


Local and Dist 
team member: 










Task Manager 

4.0 Task Manager Basics 

5.0 The User interface 

5.1 Pop-Up and Pull-Down Menus 

The menus that are located on the screens will either pop-up or pull-down to display com¬ 
mand and data within the Task Manager. Point to a menu and click once to display the com¬ 
mands or data within that menu. Most commands have keyboard shortcuts, which are shown 
cia an underscore on the command or to the right of the command. 

There are three ways to select an option in a menu: 

° Point to the menu you want to display, click and hold on the menu, drag the mouse over an 
option to highlight it, and release the mouse button. 

o Point to the menu you want to display, click once to display the menu, and click the desired 
option. 

° Click the menu to display it, and type the keyboard shortcut. 

5.2 Mouse Techniques 

We use the following conventions when referring to mouse clicks: 

o Click means click the left button unless otherwise noted, 
o Double-click means click the left button twice. 

To select an item, position the cursor over it and click. 

5.3 Scroll Bars 

The Task Manager has both vertical and horizontal .scroll bars to display information that does 
not fit into a single display window. There are three ways to use a scroll bar: 

° Click on the arrow at either end of the bar to move the display one row or column at a time. 










Task Manager 


• Click on the scroll bar, hold down the mouse and drag the bar up, down, left, or right. 

• Click the mouse in the empty space above, below, left, or right of the bar to move the display 
one screenful in the direction of your click. 

5.4 Slider Bars 

There are several instances of slider bars within the Task Manager used to change the type of 
information displayed on the screen. This is usually associated with levels of detail that are dis¬ 
played in reference to hierarchical information in a single window. There are three ways to use a 
slider bar: 

• Click the mouse on either side of the slider bar to cause it to move one level to the right or left. 

• Click and hold on the slide bar while moving the mouse to the right or left to cause it to change 
based on the amount moved. 

• Click the middle mouse button on either side of the slider bar to move the slider bar to the 
selected location. 

5.5 Buttons 

Buttons appear in the TM as raised areas on the screen. Buttons are activated by clicking on them. 
Their labels describe the action that will take place when the button is activated. 

5.6 Text Fields 

Text fields appear in the Task Manager as indented areas on the screen. 

6.0 Getting Started 
7.0 Execution Begins 

This chapter will cover the basics of using the Task Manager for the first time. 


RDE Users Guide 10-5 


Task Manager 


The Task Manager will arrive as a gziped tar file. Download this file in the correct format for 
your system and move the tar file to the location that the tool will reside in. 

Once the file has been stored in the correct directory, unzip the file with the command: “gun- 
zip TM_vxxx_yyy.tar.gz'’ where xxx is the current version number and yyy is either SOL for 
Solaris version or SUN for SunOs. This will unpack the file and ready it to be untarred. The 
next command is: “tar -xvf TM_vxxx_yyy.tar’. This will create several directories and unload 
the files into them. The executables will be stored in the ./bin directory. 

To launch the tool, either change to the TM binary directory, or execute a tool launch from the 
desktop to start up the task manager. If launching will occur from the command line, the com¬ 
mand is tm . This will bring up all executables needed for the Task Manager to operate prop¬ 
erly. 

8.0 Logging in 


Each time a new TM session begins the user is required to log in. This feature will be removed 
in later versions but was necessary for the alpha version of the software. 

The first time that the Task Manager is executed, there will be no users in the database. It will 
be required at this time to create a new user or users. Please note that the only way to create 
new users in the TM database currently, is through this log-in interface. Therefore, before a 
user can be selected as the person a task is assigned to, their user name will have to be added 
in the login screen. 

To add a person to the user database, simply enter their user name into the field provided and 
click on the button labeled “Add User’". Each time a new user is added to the database, the 
pop-up menu at the top of the login screen will be updated with the latest user. 

To log into the Task Manager, either type the users name in the field provided or select the 
user from the user pop-up menu and hit the button labeled “Log In”. 


Task Manager 


\ 

j 9.0 First Time Browser Screen 

Once the user has logged in, the login screen will disappear and be replaced with the Task 
I Browser screen. This will initially be empty due to the fact that there are no tasks in the database. 

' As the user adds tasks to the database that are assigned to that user, this list will begin to populate. 

For more information on the Task Browser screen, refer to chapter 4. 


10.0 Task Manager Elements 

This chapter will cover all the elements contained within the Task Manager and will provide infor¬ 
mation as to their functionality. 

11.0 General Information 

The Task Manager is currently made up of two separate views of the data. The main method for 
viewing and managing tasks is through the “textual” view. This view provides a textual listing of 
all tasks and provides methods for new task creation and other items. The other view provided in 
this version of the Task Manager is the “graphical” version. This is an early implementation of 
where the TM is headed in the future. The graphical view provides an Iconic representation of all 
tasks that are contained within the system. 

Most of the documentation in this chapter will cover the “textual” view of the TM but there will 
be sections covering the graphical representation later in this chapter. 

12.0 Task Browser 

This window is contains the main task information presented in the Task Manager. It acts as a 
starting point for all other TM functions. The Task Browser window can be seen in figure 2. 


RDE User's Guide 10-7 



Task Manager 


FIGURE 2. Task Browser 


:: r: r:T: 






Update Roadmap 

Distribute to team 

Assemble changes into single file 

Gather Inputs from Team 

- - - -.- - ' - - - - - - - 

- •- -...-.- 

[I 


Update Leaf Leue 

Nodes 



U 1 




1 1 




2 





Leuels: UU ' '' '--'i 

_iJ 





— Sort method — 

Role <AI[ Roles> 

1 Project <An ProJects> -* | 

J Graphical View On 



(5 Alphabetic 






J) By Due Date 

Preferences | Sysadmin 

1 Tool Info 1 Import | r.di* ;A 


J i 








At the top of the window is the task presentation area. This is where the tasks that a user is 
responsible for will appear. In the above example, there are several tasks that contain subtasks. 
Subtasks are represented by indentations on the text screen and are parented to the task above 
the subtask that is not indented. The task presentation area is a scrolling window that will 
allow for arbitrary levels of abstraction and length. 

Below the task presentation area is a slider bar that manipulates the level of views into the task 
hierarchy that is currently presented in the task presentation level. By moving the slider bar to 
the left or right, the user will change the view into the task viewing area based on levels of 
abstraction. A level one view will only present root level tasks; those tasks with no direct par¬ 
ent. A level two view will show all root level tasks and subtasks of root level tasks. This dis¬ 
semination will occur to an arbitrary depth. 

In the lower left-hand corner of the Task Brow.ser is an area that will sort the view of the tasks 
in the task presentation area. This section is currently non-functional and the sorting methods 
presented in the push-buttons are a sample of the different types of sorting methods that are 
being investigated. There may be additional methods of viewing the data in future versions 
that are not presented in this area currently. 


10-8 RDE User’s Guide 










Task Manager 


Next to the sorting area of the Task Browser is a pop-up menu called “Roles”. This menu is a 
carry over from the RDEP and is currently non-functional. It is still not clear whether this feature 
will be carried over into the operational Task Manager. What this menu would provide is a means 
of viewing only those tasks for a single user that are of a specific role. 

Next to the role menu is the Project menu. This pop-up menu is also non-functional but will allow 
a user to view only the tasks associated with a given project. 

The next item on that same line is a check box labelled “Graphical View On”. This button enables 
the graphical representation that will be described later in this document. 

Along the bottom of the screen lies the buttons that allow the user to gain access to the other sec¬ 
tions of the Task Manager. Those sections will be discussed in order from left to right in the fol¬ 
lowing sections. 

13.0 Preferences 

The Task Manager Preferences screen is used to set the user defined data items for the tasks and 
data items a user is dealing with. This screen will allow the user to set default settings for newly 
created tasks and to define promotion hierarchies for task types. Some of these functions may 
eventually be restricted to system administration functions, but for now they are publicly avail¬ 
able. Most all attributes of tasks are available for tailoring by the user. 

The Task Manager Preferences window is partitioned into groups of similar functions as seen in 
figure 2. Each of these functions is described below in detail. 


RDE User’s Guide 10-9 



Task Manager 


FIGURE 3. ■ Task Manager Preferences Window 




- Default Sort Method- 

(13 As entered 

_) Alphabetic 
J) Chronological 
I J Reverse chronological 




-Default Priority Level- 
J) H igh 

(S Medium 
J) Low 


pother Defaults- 

Project <None> 


Role Program Manager 


Assigned To richl 


Task Type Documentation Task 


rype Defaults- 


I Status Levels 



Set All Task Types 


Task Type Documentation Task • 


-Object Type Defaults 
Tools 
iXDesigner 



Object Type XDesigner File -■ | 


Default Tool ijXDesigner 


i Dismiss 


In the upper left hand corner of this window resides the default task sorting method check¬ 
boxes. This feature is currently non-functional but will operate as soon as the sorting functions 
of the Task Browser are completed. These check boxes will allow the user to define the default 
sorting method that will be used in the Task Browser. This feature may go away depending on 
user feedback related to the Task Browser showing the sorting of tasks in the last selected 
mode, rather than a default mode each time. 

Next to the Default Sorting Method box lies the Default Priority level box. This group of 
check-boxes is used when creating new tasks. The priority set at this preference level will be 
the one that is automatically selected at the time of task creation. This priority level can then 
be changed if the user .so chooses. 

In the upper right-hand corner of the Preferences window resides the Other Defaults box. This 
box contains multiple pop-up menus that provide default sections for the Project a task gets 
assigned to, the Role that a task will be associated with, the person that is assigned the task, 
and the type of the task. Once a u.ser has set these preferences, each time a new task is created, 


10-10 RDE User's Guide 






















Task Manager 


these values will be initially inserted into those slots. The user may then change them as to their 
liking. 

The lower left-hand section of this window contains a box labelled “Task Type Defaults”. What 
this box deals with is the definition of task promotion hierarchy defaults based on task type. This 
data is initially populated with a promotion scheme but can be specialized based on task type. 
This function is currently available to all users but will most likely be restricted in the future to on 
system administration type people. 

In the lower right-hand corner resides the box that is used to define default tools for object types. 
When a new object type is defined, it will be necessary to define a default launching tool. This is 
also the area that is used to redefine which tool will be used for an object type. In the example in 
the figure above, the object type “X Designer file” has been associated with the application X- 
Designer. 

There is currently no method to directly relate other tools to data objects for usage beyond the 
default tool. Once a tool has been defined as a default tool for a data type, it gets stored in the 
database for use later when changing the tool to launch in. In future versions of the tool, there will 
be a section included to relate tools to data types in a more user-friendly manner. 

14.0 Sysadmin 

The system administration page has been implemented in order to provide various object defini¬ 
tions that were performed in other area’s of the RDEP but were needed within the stand-alone 
tool. 

The types of database objects that a user may create in this window are: Roles, Objects, Task 
Types, and Object Types. When one of these items is added or modified, it is saved into the data¬ 
base and used throughout the rest of the system. 

This window represents functionality that would most likely not be available to the general public 
but would reside in a restricted area only for system administrators. Due to the fact that the system 
is currently limited to single user mode, this function will be available to all users. 


RDE User’s Guide 10-11 




Task Manager 


FIGURE 4. TM Type Definitions 





1 Roles 


Objects 


i ;Customer 


;Temp File 

L- ii 

: iElectrical Designer 


i Roadmap V3 


j -Logistics Engineer 


iindividuai Roadmap inputs 


; ^Manufacturing Engineer 




’ iiVlechanica! Designer 




i ^Process Engineer 




i iProcurement 




i iProgram Manager 




i :Q.A Engineer 




: iSoftware Designer 




1 iSystems Administrator 




; iSystems Engineer 



M 

i i^^ 


kl i - 


Add 1 


Vis-dAdd 


Task Types 


Object Types 


; iDocumentation Task 

3 

iXDesigner File 

3 i 

i Software Task 


:ASCll Text File 


^General Task 


:U!B File 


;Management Task 


:C/C++ P%']ake File 


; Engineer Task 


:5chematic 


i Requirements Task 




iSpecification Task 




lAdministratiye Task 




ijennifer Task 



- i 

ki- I.: 


□- - - 


Add 1 

d 

Add k.-.::Tv| 

j; 

. 

j Dismiss|' 


15,0 Too! Inf© 

This window is a representation of the tool metrics that the task manager collects automati¬ 
cally. The data contained in this window includes: tool start, tool stop time, project, task, data 
item. user, information about launching (default or other), and will include more information 


10-12 RDE User's Guide 






















Task Manager 


as it is identified. This screen was added late in development in response to user requests for this 
type of information and will be updated later based on feedback. 

FIGURE 5. Tool Launch Data window 



16.0 Import 

The current incarnation of the task manager contains the ability to import files from Microsoft 
Project. The figure below shows the screen that the Task Manager uses to perform this function. In 
order to import files into the Task Manager, it will be required to take the Microsoft Project data 
and save it into a “.csv” format. Once the file is in the correct format, use this window to read it 
into the TM database. 

The current version of the Task Manager only creates tasks for activities defined in the Microsoft 
Project file that have man-power allocated to it. This could be changed in future versions based on 
user feedback. 

When the TM creates the tasks from the imported file, each task is created as a root level task. 
These tasks can then be broken down into subtasks at the users discretion. 


RDE User's Guide 10-13 

















Task Manager 


FIGURES. Task Import Window 


I/isx/users/richi/TaskMgr/bi n/i 
Pi rectories _ 

; / i s x/u s e r s/ r i c h 1 /T a s k M g r/b i n/.. 
l/isx/users/richl/TaskMgr/bin/database 
;/isx/users/richl/TaskMgr/bin/lcons 
|/isx/users/richl/TaskMgr/bin/Sounds 


Files _ 

I - drm 2 

f red. CSV 
librde.a 
libxd.a 

rdep s 

ROEP.Config I 

RDEtaskmgr S 

^ RDEtaskmgr_graph y 


/i sx/users/ri chi/TaskMgr/bi n.^ 


Import Type Microsoft CSV-j 
D efault project F-l 4 IR5T 
Default assigned to rich! 


Default role Program Manager -^ | 
Default task type Documentation Task ^ 


17.0 Edit SuWask 

The Ta.sk Editor window is the main location within the Task Manager where task data is 
entered and edited. Each of the different functions of the Task Editor screen will be discussed 
below. 

At the top of this window contains the area that represents links into other .sections of the 
RDE. The only link that is currently functional on this screen is the “Task Parent” link. When 


10-14 RDE User’s Guide 








































Task Manager 


a subtask is loaded into this window, this link will change the context of the editing session to that 
of the parent. The product structure link and the workflow link will be added in the future. 

Each of the items in the middle of the window are used to define elements of the task that will be 
saved to the database. Wherever a button exists beside the text entry field, that data is stored in the 
database and is accessible through a pop-up window. 

At the bottom left of the screen is the area that represents the current task hierarchy. This window 
will be updated as the tasks are created and deleted. 

At the bottom right of this window is the text entry area that is used for entering the task descrip¬ 
tion. This field is saved in the database and is used to communicate addition information about the 
task to the user. 

At the bottom of the screen are buttons that serve a variety of functions. The only ones that are 
currently functional are the buttons labelled: more info. Save, Add Subtask, and Dismiss. The 
help and remove buttons will be functional in later versions. 

FIGURE 7. Task Editor Window 



When a user clicks the “More Info” button, an additional screen of information will be shown, as 
shown in the figure below. This screen contains addition task meta-data that will be stored in the 
database. This screen is also the location where the inputs and ouputs of a given task are defined. 

RDE User’s Guide 10-15 






Task Manager 


These input and output areas on the screen will also allow the user to launch a specific data file 
based on data that has been entered on the file. For example, in the window below there exists 
an input for the Roadmap V3. By clicking on that input and clicking the ‘"View" button, the 
TM will launch the tool defined for that input and load the tool with the specified data. 

FIGURE 8. Task Editor Additional Information 



18.0 New Task 

When a user clicks the ^‘New Task” button from the Task Browser, the TM will create a new 
database record and bring up the Task Editor with the task name of “New Task”. Then the user 
merely edits the task as described above in the Ta.sk Editor section. 

19.0 Task Manager Graphical View 

This section covers the graphical task representation within the Task Manager. Due to its cur¬ 
rent maturity level, most of the complex functions of the task manager exist only in the textual 


10-16 RDE User's Guide 


























Task Manager 


view as described above. However, there exists enough, functionality in the graphical view to 
be useful. 

The graphical representation is made up of three separate windows. These are the History 
window, the Bookmark, window, and the Tasks Window. The history window contains an 
iconic representation of each of the levels of tasks hierarchy that a user is currently in to. This 
allows a better understanding of the level of the subtask that a user may be interested in. 

Another window on the graphical representation is the bookmark window. This window con¬ 
tains icons that will take a user to a specific point within the task hierarchy that the user has 
identified as important. A task gets placed into this window when a user defines a bookmark 
within the task window. 

The Task Window is the main task execution window within the Task Manager. It is this win¬ 
dow that the user will use to launch tasks, define bookmarks, and call up addition task infor¬ 
mation. 

When a task has a subtask defined for it, a special graphical representation of a box surround¬ 
ing that task is drawn to indicate the existence of the decomposition. By clicking on these 
decomposed tasks, the user changes the context of the tasks window to that of the children of 
that task. The change also adds a new icon to the history window for traversal purposes. 

To launch a default data object with the default tool of that object type, all the user has to do is 
single click on the icon. All data objects of a task are accessible through a right mouse click, 
as-well-as the ability to launch tasks in another non-default tool. 


RDE User’s Guide 10-17 










