GENERAL DIGITAL INDUSTRIES 

SOFTWARE TECHNOLOGY TESTBED "SOFTPANEL" PROTOTYPE 
Contract # NAS8-37680 


FTNAL REPORT 
Mav 1988 - February 1991 


Submitted To: Bob Stevens/EB42 
CC: Chris Hauff/KA40 


Date: February 19, 1991 


SUMMARY 


This document is the Final Report related to NASA/MSFC contract 
NAS8-37680 . The following is a quantitative summary of the major 
accomplishments performed between May 1988 and Feb. 18, 1991 on 
the "SoftPanel Prototype" contract. 


1.0 ANALYSIS PERFORMED 

1.1 Approximately 16 Unique Areas of Study 

2 . 0 CONTRACT SUPPORT 

2 . 1 Meetings/Telecons/Videocons Attended 

2.1.1 Approximately 450 On-Going Meetings 

2.1.2 Approximately 137 Special Meetings 

2 . 2 Reviews Supported 

2.2.1 Approximately 24 Reviews Supported 

2 . 3 Trips Supporting Contract 

2.3.1 Approximately 27 Trips Taken 

2 . 4 Documents Reviewed 

2.4.1 Approximately 869 Documents Formally Reviewed 

2.4.2 Approximately 62 Documents FYI 

2.4.3 Approximately 1,037 Documents Stored in Library 

2 . 5 RIDs Produced 

2.5.1 Approximately 2100 RIDs Produced 

2.6 Classes/Seminars Attended 

2.6.1 Approximately 11 Classes Attended 

2.6.2 Approximately 10 Seminars Attended 

3 . 0 HARDWARE PURCHASED 

3 . 1 MicroVax Hardware Upgrade 

3.2 Apollo Disk Upgrade 

4 . 0 HARDWARE/SOFTWARE DEVELOPED 

4 . 1 Hardware Developed 

4.1.1 Aquarium System 

4.2 Software Developed 

4.2.1 AG Control Diagrams and Ada Code for Aquarium 
System 

4.2.2 SoftPanel Prototype 

4.2.2. 1 User I/F using DataViews 

4. 2. 2. 2 User I/F for ECLSS Testbed using TAE+/ 
XWindows 

5.0 LEVEL II SUPPORT 

5.1 Level II SIM Support 

5.1.1 Lead on SIM Task Team SIM Architecture group 

5.2 Standards 

5.2.1 SMADR Officially Signed-off on By NASA/MSFC 

5.2.2 MASM Presently Under Review by NASA/MSFC 

5.2.3 Spiral Model Development 

5 . 3 Risk Management Assessment 

5.3.1 Risk Management Plan Developed 

5.3.2 Risk Management Assessment of Space Station 
Software 

5.3.3 Assessment of Needed/Available Technology Base 


REPORT 


The report that follows is an overview of the main areas of 
analysis and development over the duration of the "Software 
Technology Testbed "SoftPanel" Prototype" contract (May 1988 - 
February 1991) under contract number NAS8-37680. Areas of support 
and emphasis were tailored over the life of the contract to cover 
the specific needs of that period. 


1.0 ANALYSIS PERFORMED 

GDI concentrated on a variety of areas of analysis and design 
over the life of the contract. 

1.1 Approximately 16 Unique Areas of Study 

The main areas of analysis performed over the life of the 
contract are listed below: 

a. Analysis of the advantages and disadvantages of using 
Ada for the development of real-time control systems 
for the Space Station. This included analysis of the 
real-time development environments available and 
analysis of the Lynx operating system in fulfilling the 
POSIX standards. 

b. Analysis of the functionality of the Application 
Generator (AG) through the development of the Aquarium 
Control System. 

c. Analysis of the User Support Environment (USE) criteria 
(DR SY-45) through the development of the SoftPanel 
Prototype on the SUN workstation using 
DataViews/TAE+/XWindows . 

d. Analysis of SSE tools and procedures which are to be 
used for the development of ground/ flight software for 
the Space Station. This included analysis of the 
Rational computer as a suitable development 
environment, analysis of the MAC, PS/2 and the Apollo 
as the suitable workstations, and analysis of the VAX 
mainframe and environment as a suitable host to drive 
the entire development and testing environment. 

e. Analysis of the usefulness of the CBATS tutorial (an 
Ada tutorial package) . Investigated its ease of use and 
functionality in comparison with how it allowed the 
user to efficiently learn Ada. 


f. Analysis of Interleaf to see if it served as an 
adequate development environment for documentation. 
This was not only concerned with the development of the 
documentation, but also the adherence to specified 
standards, the ability to maintain adequate 
configuration management, and the ability to perform 
quality assurance of the documentation. 

g. Analysis of the Integration, Test and Verification 
(IT&V) process of the Space Station. This included 
participation of such groups as the Integration, Test 
and Verification Environment (ITVE) , Data Management 
System (DMS) Kits, Ground Support Environment (GSE) and 
Simulations groups. This analysis involved 
participation in many reviews and working group 
meetings to aid in the process of refining the 
integration of the testing and verification 
environments . 

h. Analysis of the DMS on-orbit flight architecture. This 
included analysis and constant trade between the 
software requirements and code needs versus the 
available processor resources that could be provided 
due to power, weight and volume constraints. This also 
required analysis of non-DMS components to be used in 
the system, such as firmware controllers and the 
sensors/effectors . 

i. Analysis of the simulation architecture as it pertained 
to the overall testing philosophy of the Space Station 
on the ground. This included a lead role in 
establishing a Level II baseline of the simulation 
architecture, and performing analysis of the existing 
Level II standards that were available for the purposes 
of revision to bring the various Work Packages into 
line with an integrated simulation and testing 
philosophy. 

j. Analysis and updating of the Software Management and 
Requirements Document (SMADR) from the LAB level to the 
center-wide document that it has become. Also, 
developed the Methods and Standards Manual (MASM) . 

k. Analysis of the significant software differences 
between the Space Shuttle and Space Station software 
development efforts and design. A white paper was 
generated outlining the significant differences between 
these two software development efforts. This included 
an in-depth analysis of specific systems which were 
related between the two programs. 


l. Analysis of the On-Orbit Verification & Validation 
(V&V) process. This included the discussion and 
addition of requirements to the Level II documentation 
to outline a complete plan for the migration of 
software from the ground to on-board. 

m. Analysis of the DMS Command and Control architecture in 
conjunction with the timing and RODB/MODB requirements. 
This including making sure the tiered command structure 
of the DMS software was adequate to fulfill the needs 
of the various systems, real-time or not. 

n. Analysis of the WP1 software sizing activity which 
analyzed the software development effort versus the 
amount of sensor/effectors identified in the system. 
This also looked into the necessity of those various 
modules of code in comparison to fulfilling the overall 
requirements of the identified systems. 

o. Analysis of identified risks and development of a Risk 
Management plan for the Space Station. Applied the Risk 
Management plan to the Station to identify the risks. 
Also made an assessment of the available technology 
base as related to the risk needs of the Station. 

p. Analysis of the RID process resulted in the development 
of an automated RID generating process which was 
designed and developed using SMALLTALK, an object 
oriented designed language. This P.C. based windowing 
function was designed to date, document and 
electronically generate RIDs and to alleviate problems 
encountered using the current manual process. 


2 . 0 CONTRACT SUPPORT 

The main emphasis of GDI's contract was to provide software 
support to MSFC/EB42 for the Space Station program in whatever 
areas were needed. This included analysis of various systems, 
modules and IT&V philosophies to insure the proper development 
and testing of Station related software. To perform this task, it 
was necessary to perform documentation reviews and attend 
technical meetings as outlined in the sections to follow. In 
conjunction with this support, many working papers and technical 
reports were generated in order to keep EB42 abreast of the 
activities that GDI participated in during the contracted period. 
This listing is included as Appendix A of this document. 

2.1 Meetings/Telecons/Videocons Attended 

To maintain current knowledge of Space Station events as they 
happened, it was necessary to attend many meetings including 
telecons and videocons. This aided in the analysis of the various 
systems as they matured through their life-cycles. 


2.1.1 Approximately 450 On-Going Meetings 

There were approximately 17 meetings that were considered on- 
going from the stand-point that they occurred on a weekly, bi- 
weekly or monthly basis. Over the life of the contract, GDI 
attended approximately 450 of these meetings. The on-going 
meetings were made up of the following: 

1) Weekly SSE Pre-Board Meetings 

2) Bi-Weekly SSE CCB Meeting 

3) Bi-Weekly Project Status Meeting 

4) Bi-Weekly DMS Kits Telecon 

5) SSFP Simulation Task Team Telecons and Videocons 

6) Aquarium System Monthly Progress Meeting 

7) Monthly DMS Status Meeting 

8) DMS Performance Telecons 

9) MSFC/Boeing Technical Interchange Meetings (TIMs) 

a) Ground Support Environment (GSE) 

b) Integration, Test and Verification Environment 
( ITVE) 

c) Simulations 

d) Data Management System (DMS) 

e) Structures and Mechanisms 

10) Systems Environment Working Group (SEWG) Telecons 

11) Application Generator (AG) User's Working Group Telecon 

12) MSFC/WP01 Software Review Board 

13) Simulation Interface Buffer (SIB) Forum 

2.1.2 Approximately 137 Special Meetings 

GDI participated in approximately 137 meetings which were 
classified as special meetings. Special meetings are classified 
as those meetings which were important for GDI to attend in 
support of the contract, but were not considered a part of the 
meetings listed in section 2.1.1. Listed below are examples of 
some of the meetings attended which fall under this 
classification : 

1) On-Orbit V&V meetings 

2) DMS Command and Control meetings 

3) RODB/MODB Design analysis meetings 

4) Progress Review presentations (SRR, PDR, CDR) 

5) Project Orientation meetings (UAH tasks) 

6) Working Group Meetings (AG, USE, DMS, etc.) 

7) Trip Related meetings (DMS, USE, SIMs, etc.) 

2 . 2 Reviews Supported 

To adequately keep up with the progress related to the modules 
and systems of the Space Station, it was necessary to actively 
participate in the reviews of products produced by WP01 and other 
SSFP centers. The review of the requirements and design was 
pertinent to the analysis of the WP01 design. 


2.2.1 Approximately 24 Reviews Supported 

In support of maintaining up-to-date information as it related to 
the WP01 design, GDI participated the major Station reviews. GDI 
participated in approximately 24 of these reviews which are 
listed as follows: 


1) WP01 Delta PRR 

2) WP01 Software PRR 

3) DMS/OMS SRR/SDR 

4 ) SSE PDR 

5) DMS PDR #1 Long-Lead Hardware 

6) SIB Detailed Requirements Review (DRR) 

7) DMS PDR #2 Software 

8) SSE PDR DIR #2 (DRLI 59) 

9) DMS PDR #3 System 

10) OMA PDR 

11) WP01 Distributed System PDR/Software SRR 

12) DMS SDR/SRR 

13) WP02 Integrated PDR 

14) SSFP UIL Spec. Review (DRLI 99) 

15) ITVE SDR/SRR 

16) ITVE PDR 

17) WP01 LAB PDR 

18) DMS Firmware SRR 

19) SSE DIR #3 

20) DNSIM/ALEPS PRR 

21) SIB Integrated Detailed Design Review (IDDR) #1 

22) ITVE IDDR #1 

23) IS PDR 

24) WP01 GSE SRR 

2.3 Trips Supporting Contract 

There were numerous trips taken in support of the contract. Trips 
were only authorized for very important meetings/working groups 
required to support the Space Station analysis effort. 

2.3.1 Approximately 27 Trips Taken 

There were approximately 27 trips taken including various 
reviews, working group meetings, workshops. The trips taken as 
part of the Space Station contract are listed as follows: 


1) 

USE 

Working Group (WG) /Boulder, CO 

2) 

SSE 

SDR/ Lockheed/ JSC 

3) 

USE 

WG/ JSC 

4) 

DMS 

USE SRS/GSFC 

5) 

USE 

WG/KSC 

6) 

DMS/OMS SDR/ SRR/ JSC 

7) 

DMS 

PDR # 1/IBM/JSC 

8) 

DMS 

WG/MDSSC/ JSC 

9) 

SSE 

DIR # 1/Lockheed/ JSC 


10) SIB DRR/Lockheed/JSC 

11) DMS WG/MDSSC/JSC 

12) SSE DIR #2/ Lockheed/ JSC 

13) SSE DIR #3/Lockheed/JSC 

14) UIL Spec. Review/JSC 

15) SIM Task Team Meeting/Reston 

16) SIM Task Team Meeting/Reston 

17) SIM Task Team Meeting/JSC 

18) SIM Task Team Meeting/Reston 

19) DMS PDR #1 (Summary Presentation) /IBM/ JSC 

20) DMS PDR #2/MDSSC/JSC 

21) SMAP Workshop/San Diego, CA 

22) DMS PDR #3 (Summary Presentation) /MDSSC/ JSC 

23) DMS PDR # 3/MDSSC/Hunt ington Beach, CA 

24) ITVE SDR/SRR/MDSSC/JSC 

25) ITVE PDR (Summary Presentation) /MDSSC/ JSC 

26) ITVE PDR/MDSSC/JSC 

27) ITVE/SIB I DDR # 1/MDSSC/Lockheed/JSC 
2 . 4 Documents Reviewed 

In support of the Space Station project, GDI was required to 
review and maintain many documents throughout the life of the 
contract. The review of these documents was considered part of 
the analysis of the various systems and elements of the Space 
Station. 

2.4.1 Approximately 869 Documents Formally Reviewed 

In support of requirements and design analysis, there were 
approximately 869 documents reviewed. The majority of the 
documents that were reviewed were obtained as part of the 
requirements and design reviews that were held over the course of 
the contract. In addition to these documents were such reviewable 
items as white papers, CRs, and feasibility studies. 

2.4.2 Approximately 62 Documents FYI 

In addition to the reviewed documents, there were approximately 
62 documents that were received and read as For Your Information 
(FYI) . These documents mainly consisted of status reports 
outlining the progress of certain systems in the program. 

2.4.3 Approximately 1,037 Documents Stored in Library 

Throughout the life of the contract, GDI maintained a software 
library of all of the documents that were received that related 
to the Space Station. As a result of this effort, GDI has 
approximately 1,037 documents in its Space Station related 
software library. A listing of the documents that are contained 
in the library was delivered to EB42 on 1/31/91 under the title 
"SSFP Documentation Library" (WP-2210/0022/002/00) . This serves 
as the complete listing of the documents in the library as of 
2/19/91. 


2.5 RIDs Produced 


In support of the many documentation reviews that GDI attended as 
noted in section 2.2, there were many RIDs produced from formal 
review of the documentation. 

2.5.1 Approximately 2100 RIDs Produced 

In support of the 24 major reviews and other smaller review 
cycles that GDI participated in, there were approximately 2100 
formal RIDs written against system documentation. These documents 
varied over many systems as well as many work packages. 

2 . 6 Classes/Seminars Attended 

GDI attended several classes/seminars in support of the contract. 
These were attended in order to expand GDI's technical expertise 
in areas pertaining to the contract. The seminars and classes 
were normally reported on if information pertinent to the 
contract was obtained. 

2.6.1 Approximately 11 Classes Attended 

There were several classes which were offered which were relevant 
to the expansion of knowledge as it related to the contract. GDI 
attended approximately 11 classes of this type. Some examples of 
these classes are listed as follows: 

a. AG classes (Part 1 & 2) 5 GDI personnel attended 

b. Ada Development class (UAH) 

c. SMAP Project Management Workshop 

d. TMIS PALS class 

2.6.2 Approximately 10 Seminars Attended 

There were several seminars which were attended by GDI personnel 
which were relevant to the activities of the Space Station. There 
were approximately 10 seminars which were attended. Some examples 
are listed below: 

a. DMS Prototype Kit Seminar 

b. Alsys Ada Seminar (2) 

c. Gensym G2 Real-Time Development Environment 

d. Mizar Real-Time Systems 

e. Oasis Orientation Meeting 

f. Loral Real-Time Systems 

g. SMAP Seminar 

h. NASA Workstation Seminar 


3 . 0 HARDWARE PURCHASED 


At the request of EB42, GDI purchased some hardware to enhance 
systems in the EB42 LAB. These items were needed to perform the 
necessary activities on the Space Station project. 

3 . 1 MicroVax Hardware Upgrade 

GDI purchased several components to update the MicroVax with a 
major upgrade. This was used to bring the MicroVax up to the 
needed operational level for the required work that was to be 
performed on it. 

3.2 Apollo Disk Upgrade 

In support of the SSE loads, it was made necessary to purchase a 
larger disk for the Apollo. The massive amount of software 
received from the SSE was to large to fit on the 77 MB disk with 
which the Apollo was configured. Therefore, GDI purchased a 155 
MB Winchester disk to upgrade the system, so the incoming SSE 
software could be loaded onto the Apollo. 

4 . 0 HARDWARE/SOFTWARE DEVELOPED 

GDI's contract concentrated on two main areas of development over 
the life of the contract. These two areas consisted of the 
Application Generator and the SoftPanel Prototype display system. 
The Application Generator (AG) is a tool that Boeing selected to 
use to automate the software development effort. In conjunction 
with this selection, GDI was tasked with developing a control 
system on which the AG could be tested. The SoftPanel Prototype 
attempts to begin to address a number of Station issues including 
the complexity of the underlying system, the large number of 
critical parameters, reliance on multi-function displays, and on- 
board data processing and autonomy. 

4.1 Hardware Developed 

The only hardware developed specifically under this contract was 
the Aquarium system for the AG experiment. 

4.1.1 Aquarium System 

The Aquarium system was designed and built by GDI in support of 
the AG experiment. This hardware was built with the necessary 
instrumentation to allow a complete analysis of the development 
of control algorithms using the AG. The Aquarium system contained 
such items as pumps, thermocouples, lights, switches, etc. to 
provide a reasonable system to drive from the AG. The hardware 
components used in the Aquarium system are outlined completely in 
Section 3 of the "Aquarium Control System Requirements Document" 
(TR-2 2 10/0005/001/00) . 


4.2 Software Developed 

The software development effort under GDI’s contract consisted of 
the AG control and the SoftPanel Prototype software. The AG 
generates Ada control software from a set of control diagrams. 
The SoftPanel Prototype code consisted of two stages of 
development using DataViews during the first stage and 
TAE+/ xw :L ndows during the second. 

4.2.1 AG Control Diagrams and Ada Code for Aquarium System 

The AG generates Ada software from the AG control diagrams. The 
generated software is downloaded to the AG controller to operate 
the Aquarium system hardware. During execution of the AG 
generated software, the user may specify set points, such as 
temperature or water level, at the AG workstation to exercise the 
Aquarium system hardware. Further discussion of the AG control 
software for the Aquarium system is discussed in Section 4 of the 
"Aquarium Control System Requirements Document” (TR- 

2210/0005/001/00) . 

4 . 2 . 1 . 1 Current Pro j ect Status 

Current controls for Experiment 1 will increase the water 
temperature of Tank 1. The user specifies a temperature set 
point at the AG workstation. The AG controller compares the 
actual water temperature of Tank 1 to the temperature set point. 
If the actual temperature is below the temperature set point, the 
AG controller will turn the heater on and pump water in Tank 1 
through the heater to obtain the temperature set point. The 
controls read a water level constant of three inches for Tank l's 
water level and monitor high and low level alarm switches. The 
user can turn the Aquarium system light on and off at the AG 
workstation. 

Ada software has been generated from the Experiment 1 control 
algorithms. The control algorithms have been successfully 
simulated. Experiment 1 controller software has been generated, 
downloaded, and interfaced with the Aquarium system hardware. 
The controller software will turn the Aquarium system light on or 
off, read and display water temperature of Tank 1, accept a user 
specified temperature set point, monitor high level and low level 
alarms, display activation/deactivation of Pump Heater, display 
if Heater Switch is on or off, and display water level constant 
for Tank 1. 

Problems encountered when interfacing with the Aquarium system 
hardware are as follows: 

1) The thermocouple is damaged and requires replacement 
($35). 


2 ) 


Upon startup, analog outputs to Pump Heater and Heater 
Switch are -10 volts. When the controller is started, 
the initial voltage should be zero but is remaining at 
-10 volts. The IOC file's initial values for the Pump 
Heater and Heater Switch are 0.0 which is either not 
being read by the controller or is not equivalent to 0 
volts. When the Pump Heater is displayed as 
"activated" and when the Heater Switch is displayed as 
"on" the voltage reading should be +10 volts but is 
remaining at -10 volts. This problem requires further 
investigation. 

4. 2. 1.2 Software Deliveries 


A hard and soft copy of the software files that were generated 
for the Aquarium system are being delivered with this report. The 
3.5" floppy disk containing the files will be delivered to EB42. 
A hard copy of all of the listed files is included as Appendix B 
of this report. The aforementioned files are as follows: 


Hardcopy files: 

Animation. Cfg 
Expl . Pic 

Simulation Files: 
Aqua_Sys . Ps 

Expl . Pic 


Aqua_Sys . IOC 


Aqua_Sys . Ada 


Defines interactive animation 
environment . 

Interactive animation for Experiment 1. 


Displays System Build super blocks 
executed during simulation. Super 
blocks are System, Aqua_Sys, Controller, 
and Tank. 

Displays interactive animation for 
Experiment 1 with labels on. The labels 
represent System Build input/ output 
signals during simulation and are 
generated from the real time file 
developed under System Build. 

Displays System Build inputs and outputs 
for simulation. Signal types (monitor) 
and attributes are defined for each 
input and output. This file is 
generated by the Hardware Connection 
Editor (HWCE) . 

AG generated Ada software for Aquarium 
system simulation. 


Hardware Interface Files: 


Controller.Ps 


Expl . Pic 


Aqua_Sys . IOC 


Aqua_Sys . Ada 


System Build control algorithm for the 
Aquarium system controller. The 
controller super block is executed when 
interfacing to the real hardware. The 
controller super block has been changed 
to output "actual temperature" and 
"water level constant" for display in 
the interactive animation while 
exercising the real hardware. 

Displays interactive animation for 
Experiment 1 with labels on. The labels 
represent System Build input/output 
signals when interfacing with the 
Aquarium system hardware and are 
generated from the real time file 
developed under System Build. (Note, 
the input signal for Tank 1 temperature 
is "actual temperature" when interfacing 
with hardware and is "temperature" when 
simulating the model.) 

Displays System Build inputs and outputs 
which interface with hardware and/or the 
Interactive Animator. Interactive 
Animator signal types are monitor. 
Signal types are 0PT0_DA7 
(Digital/Analog outputs) and 0PT0_0DC5AQ 
(Digital outputs) for hardware inputs 
and 0PT0_AD12 (Analog/Digital inputs) 
and 0 PTO_ I DC 5 BQ (Digital inputs) for 
hardware outputs. This file is 
generated by the HWCE. 

AG generated Ada software for exercising 
real hardware. 


Backup Disk: 

Aquarium System project files on disk are: 


Animation . CFG 

Aqua_Sys. ADA 

Aqua_Sys . DAT 

Aqua_Sys . IOC 

Aqua_Sys . PIC 

Aqua_Sys . RTF 

Expl. PIC 

Exp2 . PIC 

Exp3 . PIC 

Exp4 . PIC 

Exp5 . PIC 

Exp6 . PIC 

IODEF.DAT 

Target_Conf ig . CFG 


To copy disk: 


Execute the makeproject command at the VAX $ prompt in 
project directory. Makeproject generates Animation. CFG, 
Project. ALB, and IODEF.DAT files. Copy all files from disk 
to directory where makeproject command was executed. The 
copy command will overwrite the makeproject generated 
Animation. CFG and IODEF.DAT files. The Aquarium system 
project can then be loaded into RTMONIT. 


4. 2. 1.3 Follow-up Work 

If it can be arranged for work to continue on the AG and 
especially the Aquarium system, the following is a listing of 
some follow-up activities that would be useful to continue the 
proj ect : 

1) Replace thermocouple. 

2) Resolve control problems encountered when interfacing 
Experiment 1 controls with Aquarium system hardware. 

3) Add controls to Experiment 1 to decrease Tank 1 water 
temperature and read actual water level of Tank 1 as 
defined in the Aquarium Control System Requirements 
Document . 

4) Develop, simulate, and interface to hardware control 
algorithms for Experiments 2, 3, 4, 5, and 6 as defined 
in the Aquarium Control System Requirements Document. 

4.2.2 SoftPanel Prototype 

Graphical User Interface (GUI) development for a complex system 
such as the Space Station Freedom presents a number of 
difficulties not commonly found in commercial direct manipulation 
user environments. Many of the software systems associated with 
the Station are data-driven rather than user-driven. Also, the 
Station includes a wide variety of concurrent applications 
involving highly specialized areas of engineering and other 
disciplines; as such, there are potentially unique requirements 
in the area of visual display technology, which may or may not be 
satisfied using standard direct manipulation techniques. 
Furthermore, commonality requirements mean systems must be usable 
among many different users in different work environments. 

The SoftPanel Prototype is a GUI developed by MSFC and General 
Digital Industries (GDI) in support of the Space Station Freedom 
user interface definition. It attempts to address a number of 
Station issues. These issues include the complexity of the 
underlying system, the large number of critical parameters, 
reliance on multi-function displays, and on-board data processing 


and autonomy. The SoftPanel Prototype incorporates direct 
manipulation, graphical representation and controls, and a window 
display environment to focus on the problems associated with user 
search activities in a complex system. The following is a 
description of the two different approaches taken in order to 
explore these issues. 

4. 2. 2.1 Graphical User Interface - DataViews Approach 

The first SoftPanel Prototype was developed on the Sun 
03/260 workstation under UNIX version 3.2. It was developed 
using the C programming language and relies on a combination of 
two graphical user interface development resources. These 
include the SunView window environment and DataViews version 6.0. 
SunView is used to provide window management, keyboard and mouse 
communications. DataViews provides graphical presentation and 
control elements. 

DataViews consists of two utility packages, DV-Tools and DV-Draw. 
DV-Tools is a library of subroutines used to manipulate dynamic 
graphical objects. DV-Draw is a two-dimensional drawing editor 
used to create drawings with static and dynamic components. DV- 
Draw also provides a collection of predefined virtual instruments 
such as graphs, gauges, dials, etc. to be used for data 
representation and dynamic simulations. Together, DV-Tools and 
DV-Draw provide developers with the ability to create complete 
graphical displays. 

Integration of DataViews with SunView was necessary because 
neither package lent itself completely to the implementation of 
the advanced features required for the SoftPanel Prototype. 
DataViews provides the resources necessary for implementation and 
presentation of graphical dynamic virtual instrumentation, but it 
is weak in its user interaction features and it lacks window 
management features. SunView provides strong capabilities in 
window management and keyboard and mouse communications, but its 
facilities for producing dynamic graphics are relatively 
primitive. Although bringing these resources together proved to 
be a non-trivial programming task, the outcome is a development 
framework that supports rapid and flexible implementation of 
sophisticated direct manipulation interface prototypes. 

The first approach organizes the Station's functions into a 
classification scheme encompassing Station elements, systems, 
subsystems, and instruments. These components are classified 
into a hierarchical index. Each hierarchical level defines the 
interrelationship among the system, functional, and physical 
viewpoints of the components. This interrelationship links these 
viewpoints together and allows the user to traverse throughout a 
tree structure providing an effective search strategy. Windows 
and instruments are used in order to accomplish its monitoring 
and control functions. Windows are the virtual terminals used to 
contain and manage the display of instrumentation. Instruments 
serve as the virtual devices used by the operator to interact 


with monitor and control activities, for example graphs, dials, 
maps, schematics, knobs, and meters. 

There were several lessons learned from this approach. One 
lesson was that the displays were too cluttered with system 
schematics for even an army of individuals to monitor. There 
needed to be more displays with less information displayed and 
even then, possibly, much of the information being displayed was 
not necessary. Another lesson learned was that the hierarchy 
index, while well organized, was too cumbersome in which to 
quickly maneuver. There were too many paths to follow and even 
though each path was labeled, the user had several methods of 
arriving at the same goal. Often times the user could become 
confused with how he got to the goal in the first place. One 
important lesson learned was that DataViews was not the GUI 
software to be used for this complicated task. The software was 
just too limited in its graphical qualities to be useful for this 
prototype which defeats one of the purposes of its development. 

A complete report of this phase of the project was submitted on 
May 25, 1989 under the report number TR 2210/0001/002/00. 

4 . 2 . 2 . 2 Graphical User Interface - TAE+ Approach 

The second SoftPanel Prototype was developed on the Sun 
03/260 workstation under UNIX version 4.0.3. It was developed 
using X-Windows 11 Revision 4.0 and Transportable Application 
Environment (TAE+) version 4.1. 

TAE+ was developed by Goddard Space Flight Center for the purpose 
of rendering quick interactive application systems. The toolset 
employees windows, graphical objects, icons, a large palette of 
colors and fonts, and a selection of input devices for data 
retrieval. TAE+ runs on top of X-Windows 11 Revision 3.0 or 4.0 
using the X-Window manager to control the windowing functions of 
the application. These two software packages work well together 
without any extra interfacing which was required for SunViews and 
DataViews. TAE+ allows the developer to rapidly develop 
displays, connect them for interaction, and generate the code. 
The code can be generated in one of four languages: Ada, C, 
Fortran, and TAE Command Language. The software package is very 
robust and lends itself well to developing displays. 

The second development approach to the SoftPanel Prototype used 
the User Interface Requirements Document (SY45.1) as the standard 
for designing the displays. For this Prototype, it was decided 
not to dissect the entire Station into a set of interrelated 
displays, but model only one system. The Environmental Control 
and Life Support System (ECLSS) was chosen. At the same time 
MSFC and Boeing were working on another project, the 
Environmental Control and Life Support System Advanced Automation 
Project, which needed a GUI for its test purposes. By teaming 
with this project our design was further enhanced by having the 
opportunity to link to real-time data to run our displays. 


The GUI design uses many windows and functions for displaying 
information and a mouse for quick maneuverability. The Prototype 
is designed to immediately switch to any part of the ECLSS 
system, ranging from an overview of the entire system to any 
component level, with a minimum of mouse clicks (usually only one 
or two) . This method allows the user to spend more time in 
system analysis and less time in system navigation. Each screen 
is equipped with a "quit" button for quick exits, a "help" button 
for screen explanations, a "Tools" pull-down menu for access to 
additional system tools such as notepads, system schematics, and 
maintenance logs, and a window label for window identification. 
The main focus of each window is a functional diagram of a system 
with some data being displayed. There are many selectable items 
within the diagram which the user may click on to obtain more 
information about the instrumentations health. The side of the 
window contains a selection of strip charts which monitor data 
trends to observe severe data skews. 

To date this part of the project is incomplete. There have been 
many hardware failures with the Sun workstation. Also, the ECLSS 
Testbed has undergone major redesign which greatly impacted the 
display design. Therefore, work progressed much slower than 
anticipated. One lesson learned from the TAE+ prototype is that 
the more simple displays seem to work better for understanding 
the current status of the system and allows the user to determine 
at a glance, if there are instrumentation problems. 

More detailed information may be obtained about the ECLSS 
Advanced Automation Project and the GUI from BOEING'S 1990 Annual 
Report and project video. 

4 . 2 . 2 . 3 Follow-up Work 

Much work is left to be done on the TAE+ Prototype. Most of 
the displays needed to be finished. The data link from the ECLSS 
Testbed to the Sun workstation still needs to be completed. 
Additional research on TAE+ as a GUI tool needs to be explored. 
Also, after the code is generated for the GUI application, the 
developer will have to include provisions for reading and 
displaying data. 

Included with this report will be three 1/4" tapes containing the 
X-Windows 11 Revision 4.0, TAE+ version 4.1 including a directory 
with the SoftPanel Prototype files, and a copy of the DataViews 
SoftPanel Prototype. 


5.0 LEVEL II SUPPORT 


In support of the Space Station contract, GDI was required to 
interface and provide support to the Level II effort. This 
included three main tasks which are discussed in the following 
paragraphs . 

5.1 Level II SIM Support 

GDI provided a lead person to develop a "Simulation Architecture" 
document for splinter group 3 of the Level II Simulation Task 
Team. 

5.1.1 Lead on SIM Task Team SIM Architecture group 

The "Simulation Architecture" document that was developed 
outlined a feasible simulation architecture that could be applied 
across the program. The purpose of this was to ensure that the 
various simulations being developed by the different work 
packages could communicate/work together in a testing/integration 
facility if needed. This common simulation architecture across 
the program enables the program to perform end-to-end testing of 
the entire Space Station, if deemed necessary by Level II 
management. This common architecture mitigates some of the risk 
involved in integrating and performing such a task. 

5.2 Standards 

GDI was tasked to upgrade and develop standards for MSFC which 
would ensure commonality of design within MSFC. The two main 
tasks undertaken were a re-write of the SMADR document as well as 
roll-out of the MASM section into a document of its own. In 
addition, GDI participated in the analysis of the Spiral Model 
for a later revision of the SMADR. 

5.2.1 SMADR Officially Signed-off on by NASA/MS FC 

GDI received the task in 1988 to update the SMADR, MA-001-006-2H, 
dated January 1983. But in CY1990, MSFC decided to upgrade the 
document to make it applicable to all MSFC contractors and MSFC 
software development efforts, opposed to being applicable to only 
"EB" Laboratory software development efforts. The task included 
revising and updating Chapters 1, 2, 3 and the Data Requirements 
Appendix. In addition, the task included rolling out the Methods 
and Standards Section of the SMADR into a new document called the 
MSFC Methods and Standards Manual (MASM) (see paragraph 5.2.2 for 
a discussion of this task) . 

The final draft of the Software Management and Development 
Requirements (SMADR) document was delivered to MFSC's, EB-41 in 
Calendar year 1990. The MSFC Center Director, Jack Lee, signed 
the SMADR, MMI 8075.1, in January, 1991. 


5.2.2 MASM Presently Under Review by NASA/MSFC 

GDI was directed to roll-out the Methods and Standards Section of 
the SMADR and create a new document called the MSFC MASM. GDI 
delivered the first draft of the MASM to MFSC, EB-41 in December 
1989. The NASA RID review of the MASM is still an open item as 
of February 15, 1991. The update effort included revising the 

existing methods and standards information to bring it in line 
with new technology, and to address new topic areas in the MASM. 
The MASM document now consists of over 100 pages of information. 
These additions, to the MASM, are as follows: 

a. Software Development Methods by Phase 

b. Programming Language Selection & Usage 

c. Resource Margins 

d. Documentation 

e. User Interface 

5.2.3 Spiral Model Development 

GDI personnel reviewed the proposed Spiral Model Development 
updates to the SMADR, and provided comments to MSFC EB42 on the 
proposed changes. In addition, Randy Bounds, executive panel 
member, John Reynolds, Mike Faulkner and Jim Moon participated in 
the Spiral Model Workshop held at TRW's Huntsville, Alabama 
Facility, on 12/11/90. 

5.3 Risk Management Assessment 

As an add-on to the existing GDI contract, Randy Bounds managed a 
task in conjunction with TRW to perform a Risk Management 
Assessment of the Space Station. This included developing a plan 
to perform these actions, as well as, an assessment of the Space 
Station and of the present technology base available. 

5.3.1 Risk Management Plan Developed 

The first item of the add-on task was the development of a Risk 
Management Plan for the Space Station. This defined a process 
that would be required to ensure the identification of any risks 
to the program. This plan also identified a categorization of the 
risks and ways that the different types of risks could be 
mitigated from the program. 

5.3.2 Risk Management Assessment of Space Station Software 

After completing the Risk Management Plan, an assessment of the 
Space Station software was performed using the guidelines 
outlined in the plan (section 5.3.1). Approximately 95 risks were 
identified as a result of the Risk Management assessment. In 
conjunction with the risks identified, risk mitigation scenarios 
for alleviating the risk areas were also identified. 


5.3.3 Assessment of Needed/Available Technology Base 

The final part of the task was to identify the available 
technology base in contrast to what technology is needed. This 
included the identification of CASE tools and other standardized 
tools which would aid in standardizing the development effort. 
Use of industry standardized tools would identify a technology 
base which could be used to aid in the mitigation of the risks 
identified under the previous task. 


APPENDIX A 


WORKING PAPERS/TECHNICAL REPORTS LISTING 


3 aqe 'Jo. 1 
02 / 

NASA Docuent Series 
General Digital Industriss -321; 
/Jerking ^sqer UP' 


531 Control * 

Section Nase 

Title 

Date 

Author 

iP -22 1 0/ 000 1 / 00 1 / 00 

Soft Panel Testbed a ? 

SCL5S hS Action Item 

05/ 02/33 

CD A 

HP -22 10/0C0 i/002/00 

Soft Panel Testbed UP 

SUN 3/250 Workstation ? r obIe* Report 

12/21/90 

KM 

JiP-2210/0002/ 001 /D3 

Document Standards 

SHADS Tailoring 

03/03/33 

AP 

HP-2210/0002/003/00 

Document Standards 

Review of SRLI 93 r 4.0, Versus SilAP 3.0 

02/08/30 

JDK 

HP-2210/0002/004/00 

Document Standards 

Review of CR 8B001020, Baseline of SSFP SSE Docuu 

07/31/30 

JDK 

HP-2210/0003/001/0Q 

Software Engineering 

Payload Software Engineering Manageaent Process 

10/11/39 

JDK 

UP-2210/0003/002/90 

Software Engineering 

Lynx OS Information 

01/02/90 

HAF 

HP-2210/0003/003/00 

Software Engineering 

SSE/Lockheed Rational Computer Briefing 

02/23/30 

JDR 

UP -22 10/0003/ 004/ 00 

Software Engineering 

Notes Concerning !iV Process and C. Nol3 F s Paper 

03/20/30 

GDI 

HP-2210/0003/C05/00 

Software Engineering 

Rational Computer Inforaation Search Report 

03/12/30 

JDR 

HP-2210/0004/001/00 

Project Status Reports 

June Status Report (2 Copies) 

07/13/33 

JDR 

HP-2210/0004/002/00 

Project Status Reports 

July Status Report 

08/03/89 

JDR 

W-2210/0004/003/QO 

Project Status Reports 

'August/Septeiber Status Report 

10/05/39 

JDR 

UP -2210/0004/004/00 

Project Status Reports 

flctober/Noveeber Status Reports 

12/12/38 

JDR 

BP-2210/0004/005/00 

Project Status Reports 

Deceaber - February Status Reports 

03/13/83 

JDR 

UP -22 10/0004/ 005/ 00 

Project Status Reports 

Har ch/April Status Reports 

05/12/89 

JDR 

UP-2210/0004/007/00 

Project Status Reports 

Soft Panel Testbed Status Report for May 1389 

06/01/89 

JDR 

KP -2210/0004/003/00 

Project Status Reports 

Soft Panel Testbed Status Report for June 1383 

07/31/89 

JDR 

HP -2210/0004/009/00 

Project Status Reports 

July/August 1983 Status Report 

03/05/59 

JDR 

UP-2210/0004/010/00 

Project Status Report 

Soft Panel Testbed Status Report for September 133 

10/03/83 

SDI 

UP-2210/0004/01 1/00 

Project Status Reports 

Soft Panel Testbed Status Report for 10/39 - 11/39 

12/07/89 

JDR 

UP-2210/0004/012/00 

Project Status Report 

Soft Panel Testbed Status Report for Deceaber 1339 

01/02/30 

JDR 

UP-2210/0004/013/00 

Project Status Report 

Soft Panel Testbed Status Report for January 1330 

02/01/30 

JDR 

HP-2210/0004/ 014/00 

Project Status Report 

Soft Panel Testbed Staus Report for February 1390 

03/01/90 

JDR 

UP-2210/0004/015/00 

Project Status Report 

Soft Panel Testbed Status Report for March 1330 

04/02/30 

SDI 

UP-2210/0004/01S/00 

Project Status Report 

Soft Panel Testbed Status Report for April/May 30 

06/06/30 

SDI 

UP-2210/0004/017/00 

Project Status Reports 

Soft Panel Testbed Status Report for June 1390 

07/09/90 

JDR 

HP-2210/0004/013/00 

Project Status Reports 

Soft Panel Testbed Status Report fro JuIIy 1330 

08/17/30 

SDI 

UP*2210/000 4 /013/00 

Project Status Reports 

Soft Panel Testbed Status Report for August 1990 

09/07/90 

JDR 

UP-2210/0004/020/00 

Project Status Reports 

Soft Panel Testbed Status Report for September 30 

10/03/30 

JDR 

UP-2210/0004/021/00 

Project Status Reports 

Soft Panel Testbec Status Report for October 1330 

11/06/30 

JDR 

UP-2210/0004/022/00 

Project Status Reports 

Soft Panel Testbed Status Report for November 1390 

12/05/30 

SDI 

UP-2210/0004/023/00 

Project Status Reports 

Soft Panel Testbed Status Report for Deceaber 1390 

01/10/91 

SDI 

UP-2210/0004/024/00 

Project Status Reports 

Soft Panel Prototype Status Report January 1331 

02/05/31 

JDR 

HP-2210/0005/ 001/00 

Meeting Reports 

S3 I Report on Application Generator Deaonstration 

07/05/38 

JDR 

UP-2210/0005/002/00 

Meeting Reports 

Report on 0SID Telecon 

07/14/33 

JDR 

UP-2210/0005/003/00 

fleeting Reports 

Application generator Assessment 

07/23/33 

JDR 

UP-2210/0005/004/00 

fleeting Reports 

USE Telecon 

02/15/33 

A? 

HP-2210/0005/0C5/00 

Meeting Reports 

USEilB Meeting 

04/05/39 

KHB 

UP -22 10/0005/005/00 

fleeting Reports 

USE OPS Cl) I Telecon 

04/11/33 

KR2 

HP-221 0/0005/007/00 

Meeting Reports 

UAH Avionics Distributed System Deso 

05/25/39 

KR3 

HP -22 10/ 0005/003/00 

Meeting Reports 

ECLSS Reliability Analysis Kickoff Meeting 

06/27/39 

UGH 

UP-2210/0005/009/00 

Meeting Reports 

SSE FDR Coordination Telecon (7/21/39) 

07/25/39 

JDK 

UP -221 0/0005/0 10/00 

Meeting Reports 

SSE PDR Telecon (8/2-3/335 

03/04/33 

JDK 

HP-2210/0005/01 1/00 

Meeting Reports 

SSE Simulation Standards Telecon - 3/25/33 

09/25/39 

UOU 

UP-2210/0005/0 12/00 

Meeting Reports 

Global Inventory Management System (IMS) Meeting 

01/11/30 

KAF 

UP-2210/0005/013/01 

Meeting Reports 

SSE User's Working Group Discussion of Software St 

01/25/30 

KC 

UP-2210/0005/014/00 

Meeting Reports 

SSE User's Working Group 

04/17/90 

YKl 

HP -2210/0006/001 /00 

Trip Reports 

USE Wor king Group Meeting (University of Colorado) 

07/03/33 

A? 


ORIGINAL PAGE IS 
OF POOH QUALITY 


Page No. 2 
02/13/31 

NASA rocaaert Series 
General Digital Industries (33I> 
irfor <mg Paper (IIP) 


GDI Control * 

Section Name 

Title 

Date 

Author 

ap-22:o/ooos/co2;co 

Trip Reports 

Scoaars Space 'light Center '5/13 - 5/13) 

05/23/33 

A? 

HP -22 10/ 0006/ 003/ 0C 

Trip Reports 

DKS HE Hctting at JSC Kay 23-25, 1333 

06/07/33 

HAF 

HP-2210/OCOS/004/00 

Trip Reports 

DKS/0KA SDR/SRR - JSC Trip 

07/14/3S 

HAF 

HP -22 l 0/ OC06 /005/00 

Trip Reports 

USE H6 Meeting (ISO 8/1-3/33 

0B/03/S9 

AP 

HP -22! 0/0006/ OCfi/OO 

Trip Reports 

Trip Report for 3RII 33 CC3 and SSE RDR 

03/23/33 

:dh 

HP -2210/0006/007 / 00 

Trip Reports 

DKS H6 Meeting - JSC Trip Report <10/15-20/83) 

10/24/53 

HAF 

HP-22! 0/0006/008/00 

Trip Reports 

DKS PDR i SIB DRS - JSC Trip Repor: 

12/04/33 

HAF 

HP-221 0/0006/009/00 

Trip Reports 

DRLI 59 Design Imclementation Review Report 

12/21/89 

■il/H 

HP-2210/0005/010/00 

Trip Reports 

DKS Software PDR 

02/13/30 

HA F 

HP-2210/0006/011/00 

Trip Reports 

SSrP ail Spec. RID Disposition Board Meeting 

03/06/30 

AP 

HP-2210/0006/012/00 

Trip Reports 

’Workshop on NASA Workstation Terainology 

03/13/30 

A? 

HP-2210/0007/001/00 

DNS/SIB Reports 

SIB - Tiie Tag & Hun/ Idle Designs 

01/12/33 

HAF 

HP-2210/0007/002/01 

DHS/5I3 Reports 

SI3 - Tiae Inerface and Simulation Cycle Designs 

01/20/39 

HAF 

HP-2210/0007/003/01 

DKS/SIB Reports 

DKS Kits Road Show Agenda 

01/25/33 

HAF 

HP-2210/0007/004/01 

DNS/SIB Reports 

SIB - local Bus Interface Design 

01/25/39 

MAF 

HP-2210/0007/005/00 

DKS/SIB Reports 

SIS KDK/GRU Interface Design 

02/02/33 

HAF 

HP-2210/0007/006/00 

DHS/SIB Reports 

SDDU Interface Design 

02/08/33 

HAF 

HP-2210/0007/007/00 

DKS/SIB Reports 

SIB FDDI Interface Design 

02/15/33 

HAF 

HP-2210/0007/ 009 /CO 

DKS/SI3 Reports 

Data Recording 

02/23/33 

HAF 

HP-2210/0007/003/00 

DKS/SIB Reports 

DKS Kits Road Show Sunary 

02/22/33 

HAF 

HP-2210/0007/010/00 

DKS/SIB Reports 

DKS Kits Road Show Trip Report 

03/02/99 

HAF 

HP-2210/0007/01 1/00 

DKS/SIB Reports 

SIB Data Flow Diagrais 

03/08/83 

HAF 

HP-2210/0007/012/ 00 

DKS/SIB Reports 

DKS/SIB Kode Tea* Update 

03/17/39 

HAF 

HP-2210/0007/013/00 

DHS/SIB Reports 

SIB Diagnostics 

03/23/89 

HAF 

HP-2210/0007/014/00 

DKS/SIB Reports 

513 Tiae Interface Requirnents 

03/29/89 

HAF 

HP-2210/0007/015/00 

DHS/SIB Reports 

DKS Kits Telecan 

04/04/89 

HAF 

HP-2210/0007/016/00 

DKS/SIB Reports 

SIB H/H & S/H Detailed Requirements Spec. (DRII 76 

04/14/89 

HAF 

HP-2210/0007/017/00 

DKS/SIB Reports 

DKS - KSIF Preliainary Requirements 

04/11/83 

HAF 

HP-2210/0007/013/00 

DKS/SIB Reports 

SI3/SIK Concepts Update 

04/12/39 

HAF 

HP-2210/0007/013/00 

DKS/SIB Reports 

SIB - Simulation and Kodeling CUTS Tools 

04/13/83 

HAF 

HP-2210/0007/020/00 

DKS/SIB Reports 

Questions on the Hew Suggested SIB/SIPS Design 

04/24/33 

HAF 

HP-2210/0007/021 /CO 

DKS/SIB Reports 

313 Ground Isolation Requirements Overview 

04/26/33 

HAF 

HP-2210/0007/022/00 

DKS/SIB Reports 

SIB - SSE Support to SSF? IT4V 

05/04/33 

HAF 

HP-2210/0007 /C23/00 

DKS/SIB Reports 

DKS QS/Ada RTE Software Requirements Specification 

05/04/S3 

JH 

HP-2210/0007/024/00 

DKS/SIB Reports 

DKS Kits CEI Specification Review Update 

05/10/33 

HAF 

HP-2210/0007/025/00 

DKS/SIB Reports 

Proposed DKS Release Contents 

05/13/S3 

HAF 

HP-2210/0007/02S/00 

DKS/SIB Reports 

SIB - SSE Siaulation Operations Concept 

05/13/39 

HAF 

HP-2210/0007/027/00 

DKS/SIB Reports 

Early Support for DKS Users 

06/08/83 

HAF 

HP -221 0/0007/ 023/ 00 

DKS/SIB Reports 

Siaulation Architecture Selection Study Overview 

06/03/33 

HAF 

HP-2210/0007/023/00 

DKS/SIB Reports 

Reconfigurability of Kits 

06/15/33 

HAF 

HP-2210/0007/030/00 

DKS/SIB Resorts 

Ada Compiler Evaluation 

05/15/33 

HAF 

HP-2210/0007/031/00 

DKS/SIB Reports 

Boeing DKS Baseline Design Review (8DR) 

06/13/83 

HAF 

HP -2210/0007/032/00 

DKS/SIB Reports 

SIB Data Transfer Concept 

06/22/33 

HAF 

HP-2210/0007/033/00 

DKS/SIB Reports 

Seneral Consents on Current DKS Events 

06/28/S3 

HAF 

HP-2210/0007/034/00 

DKS/SIB Reports 

SIPS Siaulation Control Design Concept 

06/23/33 

HAF 

HP-2210/0007/035/C0 

DKS/SIB Reports 

DNS Ferforaance *6 Teiecon 

07/06/33 

HAF 

HP -221 0/0007/035/00 

DKS/SIB Reports 

SI3 Forum - 3IH Architecture Selection study Resul 

07/24/83 

HAF 

HP-2210/0007/037/00 

DKS/SIB Reports 

DKS Kits - SIK Architecture Selection Study Status 

07/25/53 

HAF 

HP-2210/CC07/C3B/00 

DKS/SIB Reports 

513 Forum Teiecon 

07/26/33 

HAF 


ORIGINAL PAGE IS 
OF POOR QUALITY 


Rsce No. 3 
02/13/31 

NASA Ooc’isen: Series 
General Digical Industries (331) 
Working Paper ill?) 


8DI Control * 

Section N'ase 

Title 

"itS 

Author 

WP -221 0/0007 / 033/ 00 

DMS/SI3 Report 

DHS utilization 

08/14/39 

^Ar 

'49 *22! 0/0007 / 040/ CO 

DKS/SIB Reports 

SIB Forus - SIB Multiprocessor Study Overview 

08/14/39 

HAF 

HP -22 10/0007/04! / 00 

DKS/SIB Reports 

DHS Kits Telecon - Scrub 39 Discussion 

08/15/89 

HAF 

IIP -2210/0007/042/00 

DMS/S IB Reports 

DHS Kits Telecon - Round-table Discussion 

03/31/89 

HAF 

WP-2210/0007/ 043/00 

DMS/SIB Reports 

SIS - SSFP ITiV Environment - Issues/SSE Recommend 

09/13/39 

HAF 

HP-2210/0007/044/00 

BHS/SIB Reports 

SIB Development Activities 

09/20/89 

HAF 

HP-2210/0007/045/00 

DKS/SIB Reports 

VAX ELM Real -Time Operating System 

09/27/39 

HAF 

HP-221 0/0007/045/00 

DKS/SIB Reports 

DUS Kits Teleconference 

10/03/89 

HB 

HP-2210/0007/047/00 

DKS/SI3 Reports 

SIB - DRLI 7S RID Disposition Open Issues 

10/11/89 

HAF 

HP -22 10/0007 /0<*3/ 00 

DKS/SIB Reports 

DHS Status Meeting 

10/13/89 

HAF 

HP-2210/0007/049/00 

DfIS/SIB Reports 

Remote Instrumentation Concentrator (RIO) Telecon 

10/31/39 

HAF 

HP-2210/0007/050/00 

DMS/SIB Reports 

OHS Kit Component Allocations 

10/31/89 

HAF 

HP-2210/0007/051 /00 

DMS/SI3 Reports 

DUS Performance Teleconference 

11/02/39 

HAF 

HP-2210/0007/052/00 

DMS/SIB Reports 

DHS Status Heeting 

11/08/33 

HAF 

HP-2210/0007/053/00 

DMS/SIB Reports 

DHS - Level II Status 

11/14/33 

HAF 

HP-2210/0007/054/00 

DPS/SIB Reports 

SIB Detailed Requirements Review (DRR) Overview 

11/17/33 

HAF 

HP-2210/0007/055/00 

DMS/SIB Reports 

Internal Audio & Video (ITSfV) Heeting 

11/17/39 

HAF 

HP-2210/0007/056/00 

DMS/SIB Reports 

DHS Services Provided 

11/21/39 

HAF 

HP-2210/0007/057/00 

DMS/SIB Reports 

SIB - Summary and Overview of Prototype ITVE Demon 

11/27/39 

HAF 

HP-2210/C007/058/50 

DMS/SIB Reports 

DHS Kits Survey Fora 

12/12/89 

HAF 

HP-2210/0007/053/00 

DMS/SIB Reports 

DHS Status Heeting 

01/10/30 

HAF 

HP-2210/0007/050/00 

DMS/SIB Reports 

DHS Status Presentation 

01/13/90 

HAF 

HP -22 10/0007/05 1/00 

DMS/SIB Reports 

DHS Performance Telecon 

01/18/90 

HAF 

HP-2210/0007/C62/90 

DKS/SIB Reports 

DHS Performance Telecon - HDSSC User Survey Status 

02/02/90 

HAF 

HP-2210/0007/053/00 

DMS/SIB Reports 

DHS Kits Telecon 

02/12/90 

HAF 

HP -221 0/0007/064/ 00 

DMS/SIB Reports 

DHS Kits - DHS PDR2 Issues and HDH FEU Overview 

03/13/30 

HAF 

HP-2210/0007/065/00 

DMS/SIB Reports 

DHS Performance Videocon 

03/23/90 

HAF 

HP-2210/0007/065/00 

DMS/SIB Reports 

DHS Kits Telecon 

03/23/30 

HAF 

HP-2210/0007/067/00 

DMS/SIB Reports 

DHS Kits Telecon - DHS PDR 13 

05/23/30 

HAF 

HP-2210/0007/063/00 

DMS/SI3 Reports 

DHS Command and Control Heeting 

05/30/30 

HAF 

HP-2210/0007/053/00 

DMS/SIB Reports 

DHS *CR to Incorporate DHS ACD Part 4 

06/05/30 

HAF 

HP-2210/0007/070/00 

DMS/SIB Reports 

DHS Command & Control ^elecon 

06/06/30 

HAF 

HP-2210/0007/071/00 

DMS/SIB Reports 

DHS Status Heeting 

06/23/30 

HAF 

HP-2210/0007/072/00 

DMS/SIB Reports 

DHS Kits telecon - 351 interface 

07/05/30 

HAF 

HP -221 0/0007/ 073/00 

DMS/SIB Reports 

5SE Interface Heeting - IEEE 498 versus Ethernet 

07/11/90 

HAF 

HP-2210/0007/074/00 

DKS/SIB Reports 

DHS Performance Videocon 

07/12/90 

HAF 

HP-2210/0007/075/00 

DMS/SIB Reports 

HDH FEU Overview 

08/24/30 

HAF 

HP-2210/0007/076/00 

DKS/SIB Reports 

Comments on Alternate DHS Feasibility Study 

03/30/90 

HAF 

HP-2210/0007/077/00 

DKS/SIB Reports 

DHS Kits a 3 Heeting - HuIti-FFd HDH 

03/19/30 

HAF 

HP-2210/0007/073/00 

DKS/SI3 Reports 

DHS Kits - SIB CDR 41 

1 1/07/30 

HAF 

HP-2210/0007/073/00 

DKS/SI3 Reports 

DHS Kits Telecon 

12/05/30 

HAF 

HP-2210/0003/001/00 

KSIF Reports 

HSIF Requirements Team Telecon Minutes 

02/16/33 

JDR 

HP-2210/0003/002/00 

MS IF Reports 

HSIF Functional Requirements Team Telecon 3/14/39 

03/15/39 

m 

HP-2210/000S/003/00 

KSIF Reports 

HSIF Team Lead Telecon 3/10/89 

03/15/89 

yew 

HP-2210/0009/004/00 

MSIF Reports 

Trip Report - HSIF 3IH Task Team Activation Heetin 

03/06/39 

m 

HP -2210/0008/005/00 

MSIF Reports 

HSIF Hanaqement Team Telecon 3/3/89 

03/16/33 

m 

HP -2210/0003/006/00 

KSIF Reports 

HSIF SIH Task "earn "elecon 3/17/89 

03/22/39 

m 

HP-2210/0008/007/00 

KSIF Reports 

HSIF Team Lead Telecon 3/24/S9 

03/24/33 

m 

HP-2210/0003/C03/00 

KSIF Reports 

Trip Report - HSIF SIH Services Tiger Team Heeting 

04/17/33 

m 


ORIGINAL PAGE IS 
OF POOR QUALITY 


Rage No. - 

's'* mj;') 
v*i.y *0/ i 

NASA Document Series 
Senegal Digital I *c us *: r i es :35I) 
Nor -ang Paper ;*?) 


SCI Goners'. ? 

Section Name 

Title 

Dice 

Aut.v 

4 P -22 1 0 / C OC 3/ 00 3/00 

IS IF Repor-s 

Trip Report - MSIF 3IM "earn -ri.ce Writers Mee 

04/13/33 

WOW 

'4P-2::o/ccc3/cio/oo 

HSIF Reports 

MSIF Joint Teaa Teiecon -i/ti/SS 

04/13/33 

WOW 

-p -22 • o / o o o a/ o : i / oo 

MSIF Reports 

ICHSTF Lessons Learned for MSIF 

04/05/39 

MAF 

yp -22 1 0/0008 /0 1 2/00 

MSIF Reports 

MSIF Requirements Teaa Videoccn - Status Report 

04/07/39 

MAF 

■JP-22! 0/ 0003/ 003/00 

Weekly Status Meeting 

Weekly NASA/MSfC Status Meeting Minutes 

02/17/33 

JDR 

MP-22’0/0003/004/00 

Week ly Status Meeting 

Weekly NASA/MSFC Status Meeting Minutes 3/1/83 

03/01/83 

JBR 

MP-221 0/0009/ 005/ 00 

Weekly Status Meeting 

Weekly NASA/MSFC Status Meeting Minutes 4/5/83 

04/10/89 

MSr 

«p-22:0/0010/00i/00 

S/W Managers Meeting 

Software Managers Videoccn (in notebook) 

02/02/33 

WOW 

’4P -221 0/00 1 5/002/ 00 

Software Managers 

October 5, 1333 SSE Software Managers Meeting Minu 

10/08/39 

JDR 

iiP-2210/0011/001/00 

SSE 7SQ Reports 

Weekly TiO Teiecon Minutes 

03/02/89 

JDR 

yP-2210/001 1/002/00 

SSE T43 Reports 

Weekly TiO Teiecon Minutes 

03/30/33 

MAF 

HP-2210/00I1/003/00 

SSE TiG Reports 

SSE COB Teiecon Minutes 

03/30/33 

MAF 

HP-2210/001 1/004/00 

SSE 7&G Reports 

Weekly TiG Teiecon Minutes 

04/06/39 

MAF 

HP -22 10/0011/ 005 / 00 

SSE TiO Reports 

Weekly TiO Teiecon Minutes 

04/12/39 

JDR , 

HP-2210/OOH/OOS/CO 

SSE TiO Reports 

Weekly TiO Teiecon Minutes 

04/27/33 

JDR 

HP-2210/001 1/007/00 

SSE TiG Reports 

Weekly TiO Teleconference Minutes 

05/05/83 

JDR 

HP-2210/001 1/008/00 

SSE TiO Reports 

Weekly TiO Teiecon Minutes 

05/13/33 

MAF 

WP-2210/0011 /009/00 

SSE 7^0 Reports 

June S, 1383 SSE TiQ Teiecon Minutes 

06/15/33 

JDR 

HP-2210/0011/010/00 

SSE TiO Reports 

June 15, 1989 SSE TiO T eIecon Minutes 

05/16/39 

uiiA 

HP-2210/001 1/011/00 

SSE TiO Reports 

Jane 23, 1933 SSE TiO Teiecon Minutes 

07/05/33 

;sr 

HP-2210/0012/001/00 

OMA/Levei II Reports 

Eleaent OMAs for WP01 

03/02/33 

3D I 

SIP -22 1 0/00 1 2/ 002/ 00 

OMA/ level II Reports 

Eleaent OMAs for WPG2 

03/02/33 

5DI 

HP-2210/00 12/003/ 00 

GMA/level II Reports 

RIDs on level II Software Policies Document 

03/06/33 

3d: 

yP-2210/0012/004/00 

OMA/Level II Reports 

QMS Prise Ite* Developient Specification (DR SY-OS 

04/06/83 

331 

HP-2210/0012/ 005/00 

OMA/Level II Reports 

DMA Interface Requirements Specification (DR 5Y-23 

04/06/39 

3d: 

HP-2210/0012/006/00 

OMAy 1 Level II Reports 

OMA Software Requireaents Specification (DR SY-34) 

04/05/83 

GDI 

HP-2210/0012/007/00 

OMA/level II Reports 

QMS Software Test Plan (DR SY-35) 

04/05/89 

3D I 

HP-2210/0012/008/00 

GMA/level II Reports 

Verification and Validation Plan (DR SY-42) 

04/04/89 

GDI 

HP-2210/0013/001/00 

Application Generator 

Coaaents on Boeings AG Ada SLOC Estimation 

03/23/33 

you 

HP-2210/0013/002/00 

Application Generator 

A6 Evaluation Task 

03/27/89 

m 

HP-2210/0013/003/00 

Application Generator 

AG Meeting 

04/23/83 

m 

HP-22 10/0013/004/00 

Application Generator 

Application Generator Evaluation Criteria 

05/13/33 

X38 

HP-2210/0013/005/ 00 

Application Generator 

Coaaents on DS33-101G3-1, Draft 3, Sec. 5.4.1 AS S 

07/20/33 

X 

yP-2210/0013/006/00 

Application Generator 

AS Evaluation Task Proposal 

07/25/83 

JC 

HP-2210/0013/007 /00 

Application Generator 

Possible Application Generator Applications 

03/07/33 

3D I 

HP-2210/0013/003/00 

Application Generator 

Recommendation for Application Generator Evaluatio 

11/20/33 

GDI 

HP-221 0/0013/009/00 

Application Generator 

Aquariua Control System Hardware Review 

02/05/30 

?y 

HP-2210/0013/010/00 

Application Generator 

Application Generator ’utcrial Review 

02/21/30 

HC 

HP-2210/0013/011/C0 

Application Generator 

Request to House Application Generarcr at GDI 

03/12/30 

a- 

yP-2210/0013/012/00 

Application Generator 

Application Teiecon *or Users Group 

03/23/90 

MC 

HP-2210/0013/013/00 

Application Generator 

Application Generator teleconference 

04/12/30 

XC 

yP-2210/0013/014/00 

Application Generator 

Application Generator teleconference 

04/26/30 

Vf* 

HP -2210/0013/015/00 

Application Generator 

Aquariua Control System Hardware Cost 

06/20/30 

?T 

HP-2210/0013/01S/C0 

Application Generator 

AG User’s Working Group 

08/23/30 

TUI 

HP-2210/0013/017/00 

Application Generator 

AG User’s Working Sroup Teiecon 

10/09/30 

7X1 

HP-2210/0013/018/00 

Application Generator 

AG user’s Working Sroup Teleccr. 

10/31/30 

7X1 

HP-2210/0012/519/00 

Application Generator 

AG User’s Working Group Teiecon 

51/27/30 

:xi 

HP-2210/0013/020/00 

Application Generator 

Aquafiua System Progress Report 

01/07/31 

7X1 

HP-2210/0013/021/00 

Application Generator 

Application Generator User’s Working Group Teiecon 

01/23/31 

’XL 


ORIGINAL PAGE is 

CP POO!? QUALITY 



‘IAEA Document Se'ias 
General Digital Industries GDI) 
Morning 3 aper I*?} 


GDI Control * 

Section Name 

Title 

Date 

Author 

HP-2210/0012/022/00 

Application Generator 

Aquarius System Progress Report 

02/13/91 

"ML 

ap - 22 : o/oc : i/ooi / c c 

USE 

USE MSEC ad hoc Meeting 4/24/39 

04/24/S? 

AF 

UP-2213/0014/002/00 

USE 

USE Teiecon 4/25/39 

04/25/33 

AP 

WP-2210/001 4/ 003/00 

USE 

USE Teiecon Minutes 

05/01/39 

RRB 

UP -2210/0014/004/00 

USE Reports 

DMS USE SRS 

05/11/39 

AP 

WP -2210/0014/005/00 

USE Reports 

USE US Teiecon 5/31/39 

06/01/89 

AP 

UP-2210/0014/006/00 

USE Reports 

Displays Development Meeting 

06/06/33 

MR3 

UP-221G/0014/007/00 

USE Reports 

DisC lays Development Meeting II 

06/20/83 

GDI 

UP-2210/0014/008/00 

USE Reports 

OKA Interface Definition Process Meeting 

06/22/39 

3D I 

SIP-2210/0014/009/00 

USE Reports 

USE "eiecon Meeting Notes 

06/23/S3 

MRB 

UP-221C/0014/010/00 

USE Reports 

USE Teiecon - HCI3 UIL and X Windows CR 

10/10/33 

MB 

WP-2210/0015/001/00 

I IV Reports 

Boeing Simulation Questionnaire 

06/06/39 

m 

UP-2210/0015/002/00 

IW Reports 

SSFP ItV Flow Team Videocon - May 25, 19B9 

06/13/33 

m 

UP-2210/0015/003/00 

I tV Reports 

IVtT Team Videocon 

06/28/39 

m 

UP-2210/0015/004/00 

ItV Reports 

IVtT lean Teiecon S/29/39 

07/05/39 

m 

UP-2210/0015/005/00 

I tV Reports 

IVtT Tea# Meeting (7/20-21/895 

08/01/33 

wow 

(IP-2210/0016/001/00 

SSE CCB Reports 

June 3, 1939 SSE CC3 Teiecon Minutes 

06/15/39 

JDR 

UP-2210/0016/002/00 

SSE CCB Reports 

09/14/S9 SSE CCB Teiecon Minutes 

03/14/33 

JDK 

UP-2210/G015/003/00 

SSE CCB Reports 

October 5, 1983 SSE Level 3 CC3 Meeting Minutes 

10/08/39 

JDR 

UP-221 0/0016/004/ 00 

SSE CCS Reports 

SSE CCB November 21, 1383 

11/23/39 

m 

'4P-2210/0016/ 005/00 

SSE CC3 Reports 

SSE CC3 December 13, 1339 

12/22/33 

JDK 

UP -2210/00 16/006/00 

SSE CCB Reports 

SSE Configuration Control Board (CCB) 05/24/90 

05/24/30 

JDK 

UP-2210/0017/001/00 

Payload Reports 

PDRD to Payload Comparison 

12/03/33 

JDR 

UP-2210/0018/001/00 

Simulation Reports 

SSFP Siaulation Task Teas Activation Meeting 

01/04/90 

m 

UP-2210/0018/002/00 

Simulation Reports 

SSFP Simulation "earn Splinter Group !t2 Meeting 

02/23/90 

wow 

HP-2210/0013/003/00 

I7VE/SIH Reports 

ITVE FDR Summary Presentation 

08/15/90 

MAF 

UP-2210/0018/004/00 

ITVE/SH Reports 

ITVE 3 DR RID Review Trip Report 

03/20/30 

MAF 

UP-2210/0018/005/00 

ITVE/SIH Reports 

Integrated Detailed Design Review (IDDR) 11 

11/19/90 

MAF 

UP-2210/0019/001/00 

CM Reports 

SSFP Configuration Management (CM) Task Team Meet! 

02/14/30 

JDK 

UP-2210/0019/002/00 

CM Reports 

Configuration Management "earn Meeting 

02/22/30 

JDR 

UP-2210/0020/001/00 

SSEUVE 

SSEUH6 Meeting 

02/16/30 

JDK 

WP -22 1 0/002 1 / 00 1 /CO 

SEiiS 

Sm teiecon 

03/16/90 

MAF 

UP-2210/0021/002/00 

SEWS 

Systems Environment forking Group (SHIS) Teiecon 

05/23/30 

MAF 

UP-2210/0021/003/00 

SEW 

SEWS Teiecon 

06/07/30 

MAF 

UP-2210/0021/004/00 

SEW 

SEWS Teiecon 

06/23/50 

MAF 

UP-2210/0021/005/00 

SEWS 

Systems Environment Working Group (SEWS) 

10/03/50 

MAF 

UP-2210/0021/006/00 

SEWB 

Systems Environment Working Group (SEWS) 

12/13/30 

MAF 

UP-2210/0022/001/00 

S3FP DOC Library 

GDI SSFP Documentation Library 

12/21/30 

JDM 

UP-2210/0022/002/00 

33F? DOC Library 

3DI SSFP Documentation Library 

01/31/91 

JDM 


ORIGINAL PAGE IS 
OF POOR QUALITY 



02/19/91 

NASA Docuaent Series 
General Digital Industries C SSI 1 
Technical Reports (73) 


3DI Control 4 

Section Naae 

Title 

Date 

**. U t tiO f 

78-2210/0001/001/00 

Soft Panel Tasted 

soft Panel 2, oto:ype User's 7ar.ua! 

05/13/33 

3D l 

TR-2210/0001/002/00 

Soft Panel Testbed 

Soft Panel Prototype ’ecr.-ical Overview and Assess 

05/ 25/ S3 

Sul 

73-2210/0001/003/00 

Soft Panel Testbed 

Oeaonsiration 

05/10/33 

sd: 

7R-2210/0002/001/01 

Dockers; Standards 

SMAP Inforaation System Life-Cycle and Docuaentati 

05/17/33 

jm 

73-2210/0002/002/01 

Docuaent Standards 

5MAP Version 4.3 Impact 33 Software Managesent Pla 

04/13/33 

CM 

73-2210/0002/003/01 

Docuaent Standards 

SSE Security Issues 

06/01/33 

JRM 

7R-2210/0002/004/01 

Docuaent Standards 12 

S3E Dec.net Requireaents 

05/01/83 

JRM 

73-2210/ 0002/ 003/00 

Docuaent Standards TR 

Inforaation 3/stens Life-Cycle and Docuaentation 3 

06/30/33 

JRM 

73-2210/0002/005/00 

Docuaent Standards 

Software Manageaent and Developaent Requirements D 

07/24/33 

:dm 

TR-2210/0002/007/00 

Docuaent Standards 

Review of MSEC SMADR Update 

10/31/30 

JDM 

7H-2210/0003/001/00 

Software Engineering TR 

Independent review of C3AT3 

01/03/33 

m 

TR-2210/0003/002/00 

Software Engineering 

Coaaents on User Interface language Specification 

03/14/33 

AP 

73-2210/0003/003/00 

Software Engineering 

Coaaents on IBM's Preliainary 3eq. Spec, for DMS U 

03/17/33 

AP 

TR-2210/0003/004/00 

Software Engineering 

Shuttle To Station Software Coaparison 

05/23/30 

MAF 

TH -2210/0003/004/01 

Software Engineering TR 

Shuttle To Station Software Coaparison (Revision) 

06/23/30 

MAF 

TR-2210/0004/001/01 

Reviews Reports 

DRII 34 Review (47 RIDs attached) 

01/18/83 

MAF 

TR-2210/0004/002/01 

Reviews Reports 

SSE Systea Status Report (DRII 5) (Motes 4 Coaaer.t 

01/30/33 

MAF 

TR-2210/0004/003/00 

Reviews Reports 

RIDs on MSIF Concept Docuaent 

03/23/83 

MAF 

73-2210/0004/004/00 

Reviews Reports 

Systea Manageaent Plan (DRII 01) 

04/05/83 

MAF 

73-2210/0004/005/00 

Reviews Reports 

SSE Systea Master Schedule (3HLI 37) 

04/23/33 

MAF 

T3-2210/0004/006/00 

Reviews Reports 

SSE Requireaents Specification (DRII 72) 

04/23/33 

MAF 

TR -2210/0004/007/00 

Review Reports 

HP01 SBPRR Review (RIDs/Coaaents) 

05/11/39 

MAF 

TR-2210/0004/003/00 

Review Reports 

SSE Systea User Support Plan DRII 12 RIDs 

06/01/39 

JDR 

TR-2210/0004/003/00 

Review Reports 

SSE Software Product Specification 01 3.2 RIDs 

06/15/39 

MAF 

TR-2210/0004/0! 0/ 00 

Review Reports 

SSE Systea Docuaentation Standards DRII 33 RIDs 

07/11/39 

JRM 

TR-2210/0004/0 11/00 

Review Reports 

DMS SDR RIDs 

07/19/89 

MAF 

73-2210/0004/012/00 

Review Reports 

DMS/QMS 3RR (RIDs) 

07/21/33 

3D I 

TR-2210/0004/013/00 

Review Reports 

SSE Systea Element Design Docuaent (DRLI 3) RIDs 

07/25/33 

JDR 

TH-2210/0004/014/00 

Review Reports 

SSE Systea 1CD (DRLI 21) 

08/04/39 

JDM 

TH -2210/0004/015/00 

Review Reports 

SSE PDS (DRLI 18,21,535 

08/10/33 

SDI 

TR-2220/0004/015/00 

Review Reports 

Coaaents on 3SF? Level II Software Policies Docuse 

03/11/33 

3D I 

TR-2210/0004/017/00 

Review Reports 

SIB Detailed Requireaents Spec. (DRLI 76) 

08/23/33 

MAF 

TR-2210/0004/013/00 

Review Reports 

Manned Base Reconfiguration Process FCD 

10/25/33 

MAF 

TR-2210/0004/013/00 

Review Reports 

Review of DRLI 33, Version 4, Dated: October 3, 13 

11/07/39 

JDM 

TR-2210/0004/020/00 

Review Reports 

SSE Software P-oduct Specification (DRLI 34) 014.0 

01/15/30 

JDR 

TR-2210/0004/021/00 

Review Reports 

DRLI 53 Analysis 

01/13/30 

JDR 

TR-221 0 /0004 / 022/ 00 

Review Reports 

SSE DIR DRLI 53/DHLI 72 Treacaability Analysis 

02/03/30 

JDR 

TR-2210/0004/023/00 

Review Reports 

Software Review Board (SRB) Meeting 

02/14/30 

JDM 

TH -22 1 0 / 0004 / 024 / C 0 

Review Reports 

MPOl 3RS for the Airlock 2SCI Review 

04/02/30 

7ML 

TR -2210/0004/025/00 

Review Reports 

S5FP Software 3 oIicies and Inforaation Systea Stan 

04/06/30 

JDR 

TR -2210/0004/025/00 

Review Reports 

DMS PDR3 Susaary Reports 

05/01/30 

MAF 

TR -2210/0004/027/00 

Review Reports 

Coaaents on DMS Developaent Plan (Draft 45 

06/23/30 

MAF 

TR-2210/0004/029/00 

Review Reports 

Coaaents/Ispacts to CR 3J0203B3 on DMS ACD Part 4 

07/10/30 

MAF 

7R-2210/0004/023/01 

Review Reports 

Coaaents/Iapacts to CR BJ020389A on DMS ACD Part 4 

07/13/90 

MAF 

TR-2210/0004/023/00 

Review Reports 

S5FP Software Life-Cycle Standards RIDs 

07/13/30 

juM 

TR-2210/0004/030/00 

Review Reports 

Coaparison of DoD-STD-2!67A, DRLI 33, SMAP 3.0, an 

07/24/30 

LDM 

TR-2210/0004/031/00 

Review Reports 

DMS ACD Coaaents 

10/04/30 

MAF 

7R-2210/0004/C32/00 

Review Reports 

Coaaents on CR000S33, Dated October 3, 1330 

10/13/30 

JDM 

T3-2210/0004/C33/00 

Review Reports 

Level A - 3 art II [QMS] Rewrite - Coaaents 

12/14/30 

MAF 


ORJGiN/a PAGE IS 

OF POOS? QUAUTY 


02/13/9: 

NASA jocuaen; Senes 
General digital Industries (351) 
Technical Reports (73) 


3DI Control 1 

Section Naae 

Title 

Date 

Author 

73-2210/ 0004/034/ 00 

Review Reports 

Firiware Analysis Presentation Coaaents 

01/15/91 

7AF 

TH-2210/0005/001/00 

Application Senerator 

Aquarius Control System Requirements Document 

12/07/90 

vz 

I-* 

73-2210/0005/001/01 

Product Reviews 

SIZAR Seminar - Systems For Real-Tiae Applications 

01/20/99 

MAF 

7R-2210/0005/002/00 

Product Review Reports 

Stateaate fro# i-logix 

09/09/39 

haf 

73-2210/0005/003/00 

Product Review Reports 

Interleaf Desktop Publishing Tool Evaluation 

01/31/91 

THL 


ORIGINAL PAGE IS 
OF POOR QUALITY 



Page 'is. 1 
32/13/31 

NASA Docuaeni Series 
General Digital Industries (GD!) 
Software (SSI) 


GDI Centro* ( 

Section Na*e 

Title 

Date 

Author 

Sil *22 10/000 1/00 1/00 

Soft Panel Source Code 

Soft Panel Prototype Systes 

05/26/33 

GDI 


ORlQi^ A , 

of POO* 


jo 

&Aur; 


APPENDIX B 


APPLICATION GENERATOR DELIVERABLE FILES LISTING 


AQUARIUM SYSTEM FINAL REPORT 
Turnover Materials: 


Hardcopy files: 

Animation. Cfg 
Expl . Pic 


Defines interactive animation environment. 
Interactive animation for Experiment 1. 


Simulation Files: 


Aqua_Sys . Ps 


Expl . Pic 


Aqua_Sys . IOC 


Aqua_Sys . Ada 


Displays System Build super blocks executed during 
simulation. Super blocks are System, Aqua_Sys, 
Controller, and Tank. 

Displays interactive animation for Experiment 1 
with labels on. The labels represent System Build 
input/output signals during simulation and are 
generated from the real time file developed under 
System Build. 

Displays System Build inputs and outputs for 
simulation. Signal types (monitor) and attributes 
are defined for each input and output. This file 
is generated by the Hardware Connection Editor 
(HWCE) . 

AG generated Ada software for Aquarium System 
simulation. 


Hardware Interface Files: 


Controller. Ps 


Expl . Pic 


Aqua_Sys . IOC 


System Build control algorithm for the Aquarium 
System controller. The controller super block is 
executed when interfacing to the real hardware. 
The controller super block has been changed to 
output "actual temperature" and "water level 
constant" for display in the interactive animation 
while exercising the real hardware. 

Displays interactive animation for Experiment 1 
with labels on. The labels represent System Build 
input/output signals when interfacing with the 
Aquarium System hardware and are generated from 
the real time file developed under System Build. 
(Note, the input signal for Tank 1 temperature is 
"actual temperature" when interfacing with 
hardware and is "temperature" when simulating the 
model.) 

Displays System Build inputs and outputs which 
interface with hardware and/or the Interactive 
Animator. Interactive Animator signal types are 
monitor. Signal types are 0PT0_DA7 
(Digital/Analog outputs) and 0PT0_0DC5AQ (Digital 
outputs) for hardware inputs and 0PT0_AD12 
(Analog/Digital inputs) and 0PT0_IDC5BQ (Digital 
inputs) for hardware outputs. This file is 


generated by the HWCE. 

Aqua_Sys . Ada - AG generated Ada software for exercising real 

hardware. 


Backup Disk: 

Aquarium System project files on disk are: 

Animation . CFG 

Aqua_Sys . ADA 

Aqua_Sys . DAT 

Aqua_Sys . IOC 

Aqua_Sys . PIC 

Aqua_Sys . RTF 

Expl.PIC 

Exp2 . PIC 

Exp3 . PIC 

Exp4 . PIC 

Exp5 . PIC 

ExpS.PIC 

IODEF . DAT 

Targe t_Conf ig . CFG 

To copy disk: 

Execute the makeproject command at the VAX $ prompt in project 
directory. Makeproject generates Animation. CFG, Project. ALB, and 
IODEF . DAT files. Copy all files from disk to directory where 
makeproject command was executed. The copy command will overwrite the 
makeproject generated Animation . CFG and IODEF.DAT files. The Aquarium 
System project can then be loaded into RTMONIT. 


Final Project Status Report: 

Current controls for Experiment 1 will increase the water temperature 
of Tank 1. The user specifies a temperature set point at the AG 
workstation. The AG controller compares the actual water temperature 
of Tank 1 to the temperature set point ...... If. the actual, temperature is 

below the temperature set point, the AG controller will turn the heater 
on and pump water in Tank 1 through the heater to obtain the temperature 
set point. The controls read a water level constant of three inches for 
Tank l's water level and monitor high and low level alarm switches. The 
user can turn the Aquarium System light on and off at the AG 
workstation . 

Ada software has been generated from the Experiment 1. control 
algorithms. The control algorithms have been successfully simulated. 
Experiment 1 controller software has been generated, downloaded, and 
interfaced with the Aquarium System hardware. The controller software 
will turn the Aquarium system light on or off, read and display water 
temperature of Tank 1, accept a user specified temperature set point, 
monitor high level and low level alarms, display activation/deactivation 
of Pump Heater, display if Heater Switch is on or off, and display water 


level constant for Tank 1. 


Problems encountered when interfacing with the Aquarium System hardware 
are as follows: 

1) Thermocouple is damaged. 

2) Upon startup, analog outputs to Pump Heater and Heater Switch are 
-10 volts. When the controller is started, initial voltage 
should be zero but is remaining at -10 volts. The IOC file's 
initial values for the Pump Heater and Heater Switch are 0.0 
which is either not being read by the controller or is not 
equivalent to 0 volts. When the Pump Heater is displayed as 
"activated" and when the Heater Switch is displayed as "on" the 
voltage reading should be +10 volts but is remaining at -10 
volts . 


Follow-up Work: 

1) Replace thermocouple. 

2) Resolve control problems encountered when interfacing Experiment 1 
controls with Aquarium System hardware. 

3) Add controls to Experiment 1 to decrease Tank 1 water temperature 
and read actual water level of Tank 1 as defined in the Aquarium Control 
System Requirements Document. 

4) Develop, simulate, and interface to hardware control algorithms for 
Experiments 2, 3, 4, 5, and 6 as defined in the Aquarium Control System 
Requirements Document. 



Animation. CFG 
Page 1 of 1 

WS_DRAW CONFIGURATION FILE (ANIMATION . CFG) VERSION 2.0 
************************************************************** 


* The first line of the config file must be: * 

* WS_DRAW CONFIGURATION FILE (ANIMATION. CFG) VERSION X * 

* All meaningful lines must start with the key words, * 

* followed by the name of the file in single quotes. * 

* Blank and comment lines are allowed. * 

* * 

* OTHER KEYWORDS INCLUDE THE FOLLOWING DEFAULTS: * 

* * 

* ICON_SOURCE_FILE ==> ' ANIMATION : ICON. SRC' * 

* * 

* I CON_DATA_F I LE ==> ' ANIMATION : ICON. SOG' * 

* * 

* BUILD CONTROL PANEL ==> ' ANIMATION : CONTROL .SOG' * 


************************************************************** 

C — The following is the first animation picture to be loaded 
BUILD_LOAD_P ICTURE : ' AQUA_SYS .PIC' 

C — The following is a Matrixx FSAVE file used by the IA Animate Command 
S IMULAT I ON_D AT A_F I LE : ' AQUA_SYS .SIM' 

C — The following is the System Build Real-Time (.RTF) file 
S YSTEM_BUI LD_RTF_F I LE : ' AQUA_SYS . RTF' 

C — The following is the code generation output (.Ada) file 
CODE_GENERAT ION_OUTPUT_F ILE : ' AQUA_SYS .ADA' 

C — The following is the Ada library to compile source into 
ADA_L IBRARY : ' AQUA_SYS . ALB' 

C — Multiple of defined frequency at which to run the scheduler 
C — (To be prompted for the factor at run-time, specify a value of 0.0) 
FRE QUENC Y_S CALE_F AC TOR : ' 1 . 0 ' 

C — I/O processing should be on for applications run on the AG-100 
I/0_PROCESSING: 'I/O PROCESSING ON' 

C — Alarms should be off unless the ALARM_WINDOW PICTURE is present 
ALARM_PROCESSING: 'ALARM PROCESSING OFF' 

C -- The following is the first alarm picture to be loaded 
ALARM_WINDOW_P ICTURE : ' AQUA_S Y S_ALARM .PIC' 

C — The following file defines the hardware I/O configuration 
HARDWARE_CONNECT I ON_ED I TOR_F I LE : ' AQUA_SYS . IOC' 

C — The following line(s) define additional process picture files 
C — (Pictures may be chained using PROCESS and RETURN icons) 

PROCESS PICTURES: 'EXP1.PIC' 

































Discrete Super-Block Sampling Interval First Sample Ext. Inputs Ext. Outputs Enable 
CONTROLLER 1. 0. 5 3 Parent 


Simulation File 
Aqua_Sys.PS 
Page 3 of 4 




Discrete Super-Block Sampling Interval First Sample Ext. Inputs Ext. Outputs Enable 

TANK 1. 0. 2 5 Parent 


Simulation Fil 
Aqua Sys. PS 
Page 4 of 4 




AQUARIUM CONTROL SYSTEM - Experiment 


Simulation File 


Expl.PIC 













RTMPG INPUT-OUTPUT CONFIGURATION FILE, VERSION 2.00 
2 = NUMBER OF SYSTEM BUILD (SB) INPUT CHANNELS 


Simulation File 
Aqua_Sys.IOC 
Page 1 of 1 


SB 

CHAN HARDWARE CONNECTIONS IA DATA ACQ. SAMPLING 

I/O TYPE ADDR CHAN TO FROM SET PERIOD I/O PERIOD 


MAX 


CH 

MI 


1 MONITOR 

2 MONITOR 


0 

0 


0 

0 


0 

0 


1 OFF 0 . 000E+00 

2 OFF 0.000E+00 


1.00 

1.00 


0.000E+00 0.000 
0.000E+00 0.000 




7 

SB 

CHAN 


NUMBER OF SYSTEM BUILD (SB) OUTPUT CHANNELS 


HARDWARE CONNECTIONS 


IA 


DATA ACQ. 


SAMPLING 


CH 



I/O TYPE 

ADDR 

CHAN 

TO 

FROM 

SET 

PERIOD 

I/O PERIOD 

MAX 

MI 

1 

MONITOR 

0 

0 

1 

0 

OFF 

0.000E+00 

1.00 

0 . 000E+00 

0.000 

2 

MONITOR 

0 

0 

2 

0 

OFF 

0 . 000E+00 

1.00 

0 . 000E+00 

0.000 

3 

MONITOR 

0 

0 

3 

0 

OFF 

0 . 000E+00 

1.00 

0 . 000E+00 

0.000 

4 

MONITOR 

0 

0 

4 

0 

OFF 

0 . 000E+00 

1.00 

0 . 000E+00 

0.000 

5 

MONITOR 

0 

0 

5 

0 

OFF 

0 . 000E+00 

1.00 

0 . 000E+00 

0.000 

6 

MONITOR 

0 

0 

6 

0 

OFF 

0 . 000E+00 

1.00 

0 . 000E+00 

0.000 

7 

MONITOR 

0 

0 

7 

0 

OFF 

0 . 000E+00 

1.00 

0 . 000E+00 

0.000 


AutoCode/Ada Code Generator V2.204 


Model File 
Model Date 


AQUA_SYS.RTF 
13-FEB-91 16:47 


Generated File: AQUA_SYS.ADA 

Number of External Inputs : 2 
Number of External Outputs: 7 

Scheduler Frequency: 1.00000 

SUBSYSTEM FREQUENCY TIME_SKEW 

1 1.00000 0.00000 


Simulation File 
Aqua_Sys. ADA 
Page 1 of 13 


OUTPUT TIME 


TASK_TYPE 

PERIODIC 


with SA_TYPES; 
package SYSTEM DATA is 


use SA TYPES; 


type TAS K_S TATE_ 

TYPE is (IDLE, RUNNING, 

BLOCKED) ; 


EPSILON 

: constant 

RT FLOAT 

ss 

9.537E-07; 


EPS 

: constant 

RT_FLOAT 

= 

4 . 0*EPSILON; 


LOWEST_PRIORITY 

: constant 


s 

lj 



OK 

: constant 

INTEGER 

= 

0, 



STOP BLOCK 

: constant 

INTEGER 


1, 



MATH ERROR 

: constant 

INTEGER 

= 

2, 



STOPPED 

: constant 

INTEGER 


3, 



UCB ERROR 

: constant 

INTEGER 


4, 



TIME OVERFLOW 

: constant 

INTEGER 


-1, 



UNKNOWNJERROR 

: constant 

INTEGER 

= 

100; 


SCHEDULER FREQ 

: constant 

RT FLOAT 

8 

1 

.0; 


BUSIZE 

: constant 

RT INTEGER 

= 

17; 


NTASKS 

: constant 

RT INTEGER 

ss 

1, 

V 


NUMIN 

: constant 

RT INTEGER 

= 

2, 



NUMOUT 

: constant 

RT INTEGER 

3= 

7, 



UE PTR 

: constant 

RT INTEGER 

8 

35; 


YE_PTR 

: constant 

RT INTEGER 

3SS 

38; 


BUS OFFSET 

: INTG ARRAY (0. .NTASKS) 

f • 


(0.. NTASKS => 

0) ; 

ERROR FLAG 

: INTG ARRAY (1. .NTASKS) 

| • 

= 

(1.. NTASKS => 

0) ; 

EXIT FLAG 

: array (1. 

.NTASKS) of BOOLEAN := (1.. NTASKS => 

TAS K_S TATE 

: array (1. 

.NTASKS) of TASK_STATE_T YPE ; 


BUS 

: REAL ARRAY(1. .44) := 






(1 . .36 => -EPSILON, 37 => 0.0, 38.. 44 => -EPSILON); 


FREQ 


constant REAL ARRAY (1 . .NTASKS) := 


(1. .NTASKS => 1.0) ; 

end SYS TEM_D ATA ; 

package body SYSTEM_DATA is 
LIMIT : RT_INTEGER; 
begin 


Initialize States 


Simulation Fil 
Aqua_Sys.ADA 
Page 2 of 13 

BUS ( 1 ) := 0.0; 

BUS (1) ;= 70.0; 

end SYSTEM DATA; 


— SUBSYSTEM01 — 


with SA TYPES; 

use 

SA TYPES; 

with SA MATH LIB; 

use 

SA MATH LIB; 

with SA FLOAT MATH LIB; 

use 

SA FLOAT MATH LIB; 

with SYSTEM_DATA; 

use 

SYSTEM DATA; 

package SUBSYSTEM01 is 




SUBSYSTEM01 PRIORITY : constant := 29; 


task type SUBSYSTEM01_TYPE is 

pragma PRIORITY (SUBSYSTEM01_PRIORITY) ; 
entry Wakeup; 
end SUBSYSTEM01_TYPE; 

type SUBSYSTEM01_POINTER is access SUBSYSTEM01_TYPE; 
SUBSYSTEM_1 : SUBSYSTEM01_POINTER; 

end SUBSYSTEM01; 

package body SUBSYSTEM01 is 

SUBSYS_ID : constant := 1; 

procedure Section0_01 is separate; 
procedure Sectionl_01 is separate; 

task body SUBSYSTEM01_TYPE is 
begin 

OUTER_LOOP : 
loop 

begin 

loop 

accept Wakeup; 

if EXIT_FLAG(SUBSYS_ID) then 
exit OUTER_LOOP ; 
end if; 

if BUS_OFFSET (SUBSYS_ID) = 0 then 
Section0_01; 
else 

Sectionl_01; 
end if; 

TASK_STATE (SUBSYS_ID) := IDLE; 
end loop; 

exception 

when SA_TYPES.EXIT_CONDITION => 

ERROR FLAG (SUBSYS ID) := STOP BLOCK; 


when NUMERIC_ERROR => 

ERROR_FLAG(SUBSYS_ID) := MATH_ERROR; 
when OTHERS *> 

ERROR_FLAG (SUBSYS_ID) := UNKNOWN_ERROR ; 

end; 

end loop OUTER_LOOP; 
end SUBSYSTEM01 TYPE; 


Simulation File 
Aqua_Sys.ADA 
Page 3 of 13 


end SUBSYSTEM01; 


— SCHEDULER — 


with SA_TYPES; use SA_TYPES; 

with SYSTEM_DATA; use SYS TEM_D ATA ; 

package SCHEDULER_DATA is 

— Scheduler Constants and Tables — 

type SUBSYSTEM_TYPE is (PERIODIC, ENABLED_PERI OD I C , TRIGGERED_ANT , 

TRIGGERED_ATR, TRIGGERED_SAF ) ; 

type SUB S Y S T EM_T YP E_ARRA Y is array (1 . .NTASKS) of SUB S Y S TEM_T YP E ; 
type INI T IAL_S TATE_ARRAY is array (1 . .NTASKS) of TAS K_S T ATE_T YP E ; 


SCHEDULER ID 

: constant 

INTEGER := 0; 


OFFYE 

: constant 

RT INTEGER := 37; 


NUMID 

; constant 

RT INTEGER := 7; 


NUMENABLED 

: constant 

RT INTEGER := 0; 


NUMTRIGGERED 

: constant 

RT INTEGER := 0; 


NUMDSWRITERS 

: constant 

RT INTEGER := 0; 


DS_REGISTERS_EXT 

: constant 

RT_INTEGER := 0; 


TASK TYPE 

: constant 

SUBS YSTEM_TYPE_ARRAY 

; = 

(1.. NTASKS => PERIODIC); 



INITIAL TASK STATE 
(1.. NTASKS => IDLE); 

: constant 

INI T IAL_S TATE_ARRAY 

l — 

START COUNT 

(1.. NTASKS => 0); 

: constant 

INTG_ARRAY (1 . .NTASKS) 

l = 

SCHEDULING COUNT 

(i .. ntasks => Ox- 

: constant 

INTG_ARRAY (1 . .NTASKS) 

l ~ 

output COUNT 

: constant 

INTG_ARRAY (1 . .NTASKS) 

; = 

(1.. NTASKS => 0); 

....... — - ■ 



SH OFFSET 

(1.. NTASKS => 44); 

: constant 

INTG_ARRAY ( 1 . . NTASKS ) 

l — 

SE OFFSET 

(1.. NTASKS => 7); 

; constant 

INTG_ARRAY (1 . .NTASKS) 

• = 

NUMEXT 

(1.. NTASKS => 0); 

: constant 

INTG_ARRAY ( 1 . . NTASKS ) 

I = 

ID EVENT 

(1.. NTASKS => 0); 

; constant 

INTG_ARRAY (1 . .NTASKS) 

• ^ 

LOC EVENT 

(1.. NTASKS => 0); 

; constant 

INTG_ARRAY (1 . .NTASKS) 

■ 

DS REGISTERS 

(1.. NTASKS => 0); 

: constant 

INTG_ARRAY (1 . .NTASKS) 

! = 

DS OFFSET 

(1.. NTASKS => 0); 

: constant 

INTG_ARRAY (1 . .NTASKS) 

I = 

ID 

: constant 

INTG ARRAY (1. .NUMID) 

; = 



Simulation File 


Aqua_Sys.ADA 


Page 4 of 13 

(1, 1, 1, 1 , 1 , 1, 1); 


LOC : 

constant INTG ARRAY (1 . .NUMID) 

(17, 15, 13, 3, 4, 5, 

2) ; 

end SCHEDULER_DATA; 


with SUBSYSTEM01; 

use SUBSYSTEM01; 

with SA UTILITIES; 

use SA UTILITIES; 

with SA TYPES; 

use SA TYPES; 

with SCHEDULER DATA; 

use SCHEDULER DATA; 

with SYSTEM DATA; 

use SYSTEM DATA; 

with SA_IO_DEFINITIONS; 


package body SA_SCHEDULER is 

5 

type TCB TYPE is 


record 


TASK TYPE 

SUBSYSTEM TYPE; 

ENABLED 

BOOLEAN; 

START 

RT INTEGER; 

START COUNT 

RT INTEGER; 

SCHEDULING COUNT 

RT INTEGER; 

ID EVENT 

RT INTEGER; 

LOC EVENT 

RT INTEGER; 

OUTPUT 

RT INTEGER; 

OUTPUT COUNT 

RT INTEGER; 

SH OFFSET 

RT INTEGER; 

SE OFFSET 

RT INTEGER; 

NUMEXT 

RT INTEGER; 

DS OFFSET 

RT INTEGER; 

DS_REGISTERS 

RT_INTEGER; 

end record; 


TSK 

RT INTEGER; 

OFFSE 

RT INTEGER; 

OFFSH 

RT INTEGER; 

OFFDS 

RT INTEGER; 

READY COUNT 

RT INTEGER; 

DISPATCH COUNT 

RT INTEGER; 

READY QUEUE 

INTG ARRAY (1. .NTASKS) ; 

DISPATCH 

BOOLEAN ARRAY (1 . .NTASKS) ; 

TCB 

array (1. .NTASKS) of TCB TYPE; 

procedure Queue Task (NTSK : in RT INTEGER) is 

begin 


READY COUNT 

;= READY COUNT + 1; 

READY QUEUE (READY COUNT) : = NTSK; 

DISPATCH (NTSK) 

:= true; 

TASK STATE (NTSK) 

:= RUNNING; 

end Queue Task; 


pragma inline (Queue_Task) ; 

procedure Update Outputs (NTSK : in RT INTEGER) is 

begin 


BUS OFFSET (NTSK) ;= I 

SUSIZE - BUS OFFSET (NTSK) ; 

end Update Outputs; 


pragma inline (Update_Outputs) ; 


Simulation Fil 
Aqua_Sys..AOA 
Page 5 of 13 


procedure Signal_An_Error (NTSK : in RT_INTEGER) is 
begin 

if ERROR_FLAG (NTSK) - OK then 
ERROR ( NTSK, TIME_OVERFLOW ); 
else 

ERROR ( NTSK, ERROR_FLAG (NTSK) ); 
end if; 

end Signal An Error; 


procedure Init_Scheduler is 
begin 

for NTSK in 1..NTASKS loop 
TCB(NTSK) . TASK_TYPE 
TCB(NTSK) .ENABLED 
TCB(NTSK) .START 
TCB (NTSK) . START_COUNT 
TCB(NTSK) . SCHEDULING_COUNT 
TCB (NTSK) . ID_EVENT 
TCB (NTSK) . LOC_EVENT 
TCB (NTSK) .OUTPUT 
TCB (NTSK) . OUTPUT_COUNT 
TCB (NTSK) . SH_OFFSET 
TCB (NTSK) . SE_OFFSET 
TCB (NTSK) .NUMEXT 
TCB (NTSK) .DS_OFFSET 
TCB (NTSK) .DS_REGISTERS 
TASK_STATE (NTSK) 

DISPATCH (NTSK) 
if TASK_TYPE (NTSK) = TRIGGERED_ATR or 
TASK_TYPE (NTSK) = TRI GGERED_S AF then 
BUS_OFFSET (NTSK) := 0; 
else 

BUS OFFSET (NTSK) := BUSIZE; 


end if; 
end loop; 

D I SP ATCH_COUNT := 0; 
READY_COUNT : = 0 ; 

READ Y_QUEUE ( 1 ) : = 0 ; 

SCHEDULE R_S T AT U S := OK; 
INTERRUPT_COUNT := 0; 
end Init Scheduler; 


= TASK_TYPE (NTSK) ; 

= false; 

= S TART_COUNT (NTSK) ; 

= START_COUNT (NTSK) ; 

= SCHEDULING_COUNT (NTSK) ; 

= ID_EVENT (NTSK) ; 

= LOC_EVENT (NTSK) ; 

= OUTPUT_COUNT (NTSK) ; 

= OUTP UT_COUNT (NTSK) ; 

= SH_OFFSET (NTSK) ; 

= SE_OFFSET (NTSK) ; 

= NUMEXT (NTSK) ; 

= DS_OFFSET (NTSK) ; 

= D S_REG I S TERS (NTSK) ; 

= INITIAL_TASK_STATE (NTSK) ; 
= false; 


task body SCHEDULER_TYPE 
begin 

SCHEDULER_LOOP : 
loop 


INNER_LOOP : 
loop 


is 


— Scheduler Wakeup — 
accept Wakeup; 

INTERRUPT_COUNT := INTERRUP T_COUNT + 1; 

SA 10 DEFINITIONS. STATUS 386 . SCHEDULER READY INDEX := 0; — 


False 



Simulation File 
Aqua_Sys.ADA 

, Page 6 of 13 

if SCHEDULER_STATUS /= OK then 

ERROR ( SCHEDULER_ID, SCHEDULER_STATUS) ; 

exit INNER_LOOP; 

end if; 

— System Input — 

External_Input ( BUS, UE_PTR, NUMIN, SCHEDULER_STATUS ) ; 

— Task Scheduling — 

for NTSK in reverse 1..NTASKS loop 

case TASK_STATE (NTSK) is 
when IDLE => 

case TCB (NTSK) .TASK_TYPE is 

when PERIODIC => 

if TCB(NTSK) .START = 0 then 
Queue_Task (NTSK) ; 

Update_Outputs (NTSK) ; 

TCB (NTSK) . START := TCB (NTSK) . SCHEDULING_COUNT; 
else 

TCB (NTSK) . START := TCB (NTSK) . START - 1; 
end if; 

when ENABLED_PERIODIC => 

if not TCB (NTSK) .ENABLED then 
TASK_STATE (NTSK) := BLOCKED; 
elsif TCB (NTSK) . START = 0 then 
Queue_Task (NTSK) ; 

Update_Outputs (NTSK) ; 

TCB (NTSK) .START := TCB (NTSK) . SCHEDULING_COUNT; 
else 

TCB (NTSK) .START := TCB (NTSK) . START - 1; 
end if; 

when TRI GGERED_ANT => 

if TCB (NTSK) .START = 0 then 
Queue_Task (NTSK) ; 

Update_Outputs (NTSK) ; 

TCB (NTSK) .START :=1; 
end if; 

when TRIGGERED_ATR => 

if TCB (NTSK) .OUTPUT = 0 then 
Update_Outputs (NTSK) ; 

TASK_STATE (NTSK) := BLOCKED; 
else 

TCB (NTSK) .OUTPUT := TCB (NTSK) . OUTPUT - 1; 
end if; 

if TCB (NTSK) .START = 0 then 
Queue_Task (NTSK) ; 

TCB (NTSK) .OUTPUT := TCB (NTSK) . OUTPUT_COUNT; 

TCB (NTSK) .START := 1; 
end if; 

when TRIGGERED_SAF => 

if TCB (NTSK) .OUTPUT = 0 then 
Update_Outputs (NTSK) ; 



TASK_STATE (NTSK) := BLOCKED; 
end if; 

if TCB (NTSK) . START = 0 then 
Queue_Task (NTSK) ; 

TCB (NTSK) .OUTPUT := 0; 

TCB (NTSK) . START ;= 1; 
end if; 

when OTHERS => 
null; 
end case; 

when RUNNING => 

case TCB (NTSK) .TASK_TYPE is 

when PERIODIC => 

if TCB (NTSK) . START > 0 then 

TCB (NTSK) .START := TCB (NTSK) . START - 1; 
else 

Signal_An_Error (NTSK) ; 
exit INNER_LOOP; 
end if; 

when ENABLED_PERIODIC => 

if TCB (NTSK) . START > 0 then 

TCB (NTSK) . START ;= TCB (NTSK) . START - 1; 
else 

Signal_An_Error (NTSK) ; 
exit INNER_LOOP; 
end if; 

when TRIGGERED_ANT => 

if TCB (NTSK) .START = 0 then 
Signal_An_Error (NTSK) ; 
exit INNER_LOOP; 
end if; 

when TRIGGERED_ATR => 

if TCB (NTSK) .OUTPUT > 0 then 

TCB (NTSK) .OUTPUT ;= TCB (NTSK) . OUTPUT - 1; 
else 

Signal_An_Error (NTSK) ; 
exit INNER_LOOP ; 
end if; 

when TRIGGERED_SAF => 

if ERROR_FLAG (NTSK) /= 0 then 
Signal_An_Error (NTSK) ; 
exit INNER_LOOP; 
end if; 

when OTHERS => 
null; 
end case; 

when BLOCKED => 

case TCB (NTSK) .TASK_TYPE is 

when ENABLED_PERIODIC => 

if TCB (NTSK) .ENABLED then 


Simulation File 
Aqua_Sys.ADA 
Page7 of 13 


Simulation File 
Aqua_Sys.ADA 
Page 8 of 13 

Queue_Task (NTSK) ; 

Update_Outputs (NTSK) ; 

TCB (NTSK) . START := TCB (NTSK) . SCHEDULING_COUNT; 
end if; 


when TRIGGERED_ATR => 

if TCB (NTSK) .START = 0 
Queue_Task (NTSK) ; 
TCB (NTSK) .OUTPUT ;= 
TCB (NTSK) . START := 
end if; 

when TRI GGERED_S AF => 

if TCB (NTSK) .START = 0 
Queue_Task (NTSK) ; 
TCB (NTSK) .OUTPUT := 
TCB (NTSK) . START : = 
end if; 


then 

TCB (NTSK) . OUTPUT_COUNT; 

1 ; 

then 

0 ; 

1 ; 


when OTHERS => 
null; 
end case; 

end case; 
end loop; 

— System Output — 

for J in 1..NUM0UT loop 

BUS ( J+OFFYE) := BUS ( LOC (J) +BUS_OFFSET (ID ( J) ) ) ; 
end loop; 

External_Output ( BUS, YE_PTR, NUMOUT, SCHEDULER_STATUS ); 

— Task Input Sample and Hold — 

for I in reverse 1 . .READY_COUNT loop 
TSK : = READ Y_QUEUE (I) ; 

OFFSE := TCB (TSK) .SE_OFFSET; 

OFFSH := TCB (TSK) .SH_OFFSET - OFFSE; 

for J in OFFSE+1 . . OFFSE+TCB (TSK) .NUMEXT loop 

BUS (J+OFFSH) := BUS ( LOC ( J) +BUS_OFFSET ( ID ( J) ) ); 

end loop; 
end loop; 

— Clear Ready Queue — 

if READ Y_QUEUE ( 1 ) > DISPATCH_COUNT then 
D I SPATCH_COUNT : = READY_QUEUE ( 1 ) ; 
end if; 

READY_COUNT := 0; 

READ Y_QUEUE ( 1 ) := 0; 

— Task Dispatching — 

for NTSK in 1. .DISPATCH_COUNT loop 
if DISPATCH (NTSK) then 

DISPATCH (NTSK) := false; 
case NTSK is 

when 1 => SUBSYSTEM l.Wakeup; 


when OTHERS => null; 
end case; 
end if; 
end loop; 

DISPATCH_COUNT := 0; 

INTERRUPT_COUNT := INTERRUPT_COUNT - 1; 

SA_IO_DEF INI T IONS . STATUS_38 6 . SCHEDULER_READY_INDEX := 1; 
end loop INNER_LOOP; 
exit; 

end loop SCHEDULER_L00P; 

— Shutdown — 

accept Quit; 

end SCHEDULER_T YPE ; 
end SA SCHEDULER; 


— MAIN — 


with SUBSYSTEMS; 
with SA_MPC_INTERRUPT; 
with SA_I 0_DEF INI T IONS; 
with SA_SCHEDULER; 
with SA_UTILITIES; 
with SYSTEM_DATA; 

procedure AQUA SYS is 


use SUBSYSTEMS; 
use SA_MPC_INTERRUPT; 
use S A_I 0_DEF I N I T I ON S ; 
use SA_SCHEDULER; 
use SAJJTILITIES; 
use SYSTEM DATA; 


— COMMAND TASK — 


task type C OMMAND_T AS K_T YPE is 

pragma PRIORITY (LOWEST_PRIORITY) ; 
end COMMAND_TASK_TYPE; 

type COMMAND_TASK_POINTER is access COMMAND_TASK_T YPE ; 
COMMAND_TASK : COMMAND_T AS K_PO INTER; 

task body COMMAND_TASK_TYPE is 
begin 

while STATUS_38 6 . TASK_COMMAND /= CONVERT_INPUT_DATA loop 
for WAIT_CNT in 1..10 loop 
null; 
end loop; 
end loop; 

SCHEDULER_STATUS := STOPPED; 

SCHEDULER. Wakeup; 
end COMMAND_TASK_T YPE ; 

procedure Shutdown_The_Tasks is 
begin 

for NTSK in 1..NTASKS loop 
EXIT FLAG (NTSK) := true; 


Simulation File 
Aqua_Sys.ADA 
Page 9 of 13 


— True 


Simulation File 
Aqua_Sys.ADA 
Page 10 and 13 

end loop; 

SUBS YSTEM_1 .Wakeup; 
end Shutdown_The_Tasks; 

begin 


— Create Subsystem Tasks — 

SUBSYSTEMJL :*= new SUBSYSTEM01_TYPE; 

— Start Scheduler — 

Init_Scheduler; 

SCHEDULER := new SCHEDULER_T YPE ; 

— User Initialization — 

Implement at ion_Specific_Initialize (BUS, UE_PTR, NUMIN, YE_PTR, NUMOUT, 

SCHEDULER_STATUS , SCHEDULER_FREQ) ; 

if S CHED ULER_S TATU S = OK then 

COMMAND_TASK := new COMMAND_TASK_TYPE; 

else 

SCHEDULER . Wakeup ; 
end if; 

— User Termination — 

SCHEDULER. Quit; 

if STATUS_38 6 . TASK_COMMAND = CONVERT_INPUT_DATA then 
Implement at ion_Specific_Terminate; 

else 

STATUS_386 .ERRORTYPE := 1; — Reboot controller 
end if; 

Shutdown_The_Tasks ; 
end AQUA SYS; 


separate (SUBSYSTEM01) 

procedure Section0_01 is 
begin 


Nth Order Integrator 

— {TANK. TEMPERATURE. 99} 

BUS (19) := 1.0 * BUS (33) + BUS(l); 

BUS (19) := 1.0 * BUS (19) ; 

General Nested Expression 

— {TANK. WATER LEVEL CONSTANT. 97} 

BUS (20) := 3.0; 

General Logical Expression 

— {TANK. ALARM SWITCHES. 7} 

if BUS (20) >15.0 then 
BUS (21) := 1.0; 

BUS (21) := 0.0; 

end if; 


Simulation File 


if BUS (20) <1.0 then 
BUS (22) := 1.0; 

else 

BUS (22) := 0.0; 

end if; 

OR Logical Block 

— {CONTROLLER. . 95} 

if BUS (21) > 0.0 or BUS (22) >0.0 then 
BUS (23) ;= 1.0; 

elSS BUS(23) := 0.0; 
end if; 

NOT Logical Block 

— {CONTROLLER. . 96} 

if BUS (23) >0.0 then 
BUS (24) := 0.0; 

else 

BUS (24) := 1.0; 

end if; 

General Nested Expression 

— {TANK. TEMP TO VOLT. 98} 

BUS (25) := ( BUS (19) - 60.0 )/8.0; 
General Nested Expression 

— {CONTROLLER. VOLT TO TEMP. 6} 

BUS (2 6) := 60.0 + 8.0*BUS(25); 

Summing Junction 

— {CONTROLLER. .7} 

BUS (27) := -BUS (26) + BUS (35) ; 

Dead Band 


Aqua_Sys.ADA 
Page 11 of 13 


— {CONTROLLER. TEMP ERROR DEADBAND. 16} 

BUS (28) := BUS (27) - 3.0; 

if BUS (28) < 0.0 then 

BUS (28) := BUS (27) + 3.0; 

if BUS (28) >0.0 then 
BUS (28) := 0.0; 

end if; 
end if; 

General Logical Expression 

— {CONTROLLER. RAISE TEMPERATURE . 5 } 

if BUS (28) >0.0 then 
BUS (29) := 1.0; 

else 


BUS (29) := 0.0; 

end if; 

AND Logical Block 

— {CONTROLLER. .97} 

if BUS (29) >0.0 and BUS (24) >0.0 then 
BUS (30) := 1.0; 

else 


BUS (30) := 0 . 0; 

end if; 


Data Conversion 


— {CONTROLLER. LOG_INT CONVERSION. 26 } 

BUS (31) := RT_FLOAT (RT_INTEGER (BUS (30) ) ) ; 

Gain Block 


— {CONTROLLER. .92} 

BUS (32) ;= 10.0 * BUS (31) ; 

General Nested Expression 

— {TANK. DERIVATIVES. 17} 

BUS (33) := BUS (32) /10.0*BUS (30) *3. 0/BUS (20) - 0.075M BUS(19) 



- 70.0 ) /BUS (20) ; 


Simulation File 
Aqua_5ys.ADA 
Page 12 of 13 


— {CONTROLLER. LIGHT. 99} 
BUS (34) := BUS (36) ; 


Gain Block 


— (TANK. TEMPERATURE. 99} 

BUS (18) := 1.0 * BUS (33) + BUS(l) 


Nth Order Integrator 


end Sect i on 0 01; 


separate (SUBSYSTEM01) 

procedure Sectionl_01 is 
begin 


Nth Order Integrator 

— {TANK. TEMPERATURE. 99} 

BUS (2) := 1.0 * BUS (16) + BUS (18); 

BUS (2) ;= 1.0 * BUS (2) ; 

General Nested Expression 

— {TANK. WATER LEVEL CONSTANT. 97} 

BUS (3) := 3.0; 

General Logical Expression 

— {TANK. ALARM SWITCHES. 7} 

if BUS (3) >15.0 then 
BUS (4) := 1.0; 

else 

BUS (4) := 0.0; 

end if; 

if BUS (3) <1.0 then 
BUS (5) 1.0; 

else 

BUS (5) := 0.0; 

end if; 

OR Logical Block 

— {CONTROLLER. . 95} 

if BUS (4) > 0.0 or BUS (5) >0.0 then 
BUS (6) :* 1.0; 

else 

BUS (6) := 0.0; 

end if; 

NOT Logical Block 

— {CONTROLLER. . 96} 

if BUS (6) >0.0 then 
BUS (7) := 0.0; 

else 

BUS (7) := 1.0; 

end if; 

General Nested Expression 

— {TANK. TEMP TO VOLT. 98} 

BUS ( 8 ) := ( BUS (2) - 60.0 )/8.0; 

General Nested Expression 

— {CONTROLLER. VOLT TO TEMP. 6} 

BUS (9) := 60.0 + 8.0*BUS(8); 

Summing Junction 

— {CONTROLLER. .7} 

BUS (10) := -BUS (9) + BUS (35) ; 

Dead Band 



Simulation File 
Aqua_Sys.ADA 

— {CONTROLLER. TEMP ERROR DEADBAND. 16} Page 13 of 13 

BUS (11) := BUS (10) - 3.0; 

if BUS (11) < 0.0 then 

BUS (11) := BUS (10) + 3.0; 

if BUS (11) >0.0 then 
BUS (11) := 0.0; 

end if; 
end if; 

General Logical Expression 

— {CONTROLLER. RAISE TEMPERATURE . 5 } 

if BUS (11) >0.0 then 
BUS (12) := 1.0; 

else 

BUS (12) := 0.0; 

end if; 

— and Logical Block 

— {CONTROLLER. . 97} 

if BUS (12) >0.0 and BUS (7) >0.0 then 
BUS (13) := 1.0; 

else 

BUS (13) := 0.0; 

end if; 

Data Conversion 

— {CONTROLLER. LOG_INT CONVERSION. 26} 

BUS (14) := RT_FLOAT (RT_INTEGER (BUS (13) ) ) ; 

Gain Block 

— {CONTROLLER. . 92} 

BUS (15) := 10.0 * BUS (14); 

General Nested Expression 

— {TANK. DERIVATIVES. 17} 

BUS (16) := BUS (15) /10.0*BUS (13) *3. 0/BUS (3) - 0.075M BUS (2) - 

70.0 ) /BUS (3) ; 

Gain Block 

— {CONTROLLER. LIGHT. 99} 

BUS (17) ;= BUS (36) ; 

* 


— {TANK. TEMPERATURE. 99} 

BUS (1) := 1 .0 * BUS (16) 


Nth Order Integrator 


+ BUS (18) ; 


end Sectionl 01; 


Discrete Super-Block Sampling Interval First Sample Ext. Inputs Ext. Outputs Enable 
CONTROLLER 1. 0. 5 5 Parent 


HW IF File 
Controller.PS 
Page 1 of 1 




AQUARIUM CONTROL SYSTEM - Experiment 



LOW LEVELiil IjiLOW LEVEL 
















RTMPG INPUT-OUTPUT CONFIGURATION FILE, VERSION 2.00 


HW IF File 
Aqua_Sys.IOC 
Page 1 of I 


5 = NUMBER OF SYSTEM BUILD (SB) INPUT CHANNELS 
SB 

CHAN HARDWARE CONNECTIONS IA DATA ACQ. SAMPLING CH 



I/O TYPE 

ADDR 

CHAN 

TO 

FROM 

SET 

PERIOD 

I/O PERIOD 

MAX 

MI 

1 

MONITOR 

0 

0 

0 

1 

OFF 

0 . 000E+00 

1.00 

0 . 000E+00 

0.000 

2 

OPTO AD12 

8 

1 

0 

0 

OFF 

0 . 000E+00 

1.00 

10.0 

-10.0 

3 

OPTO IDC5BQ 

4 

1 

0 

0 

OFF 

0 . 000E+00 

1.00 

1.00 

0.000 

4 

OPTO IDC5BQ 

4 

2 

0 

0 

OFF 

0 . 000E+00 

1.00 

1.00 

0.000 

5 

MONITOR 

0 

0 

0 

2 

OFF 

0 . 000E+00 

1.00 

0 . 000E+00 

0.000 


******************************************************************************* 

5 = NUMBER OF SYSTEM BUILD (SB) OUTPUT CHANNELS 
SB 


CHAN 

HARDWARE CONNECTIONS 

IA 

DATA ACQ. 

SAMPLING 


CH 


I/O TYPE 

ADDR 

CHAN 

TO 

FROM 

SET 

PERIOD 

I/O PERIOD 

MAX 

MI 

1 

OPTO ODC5AQ 

4 

17 

1 

0 

OFF 

0 . 000E+00 

1.00 

1.00 

0.000 

2 

OPTO DA7 

8 

9 

2 

0 

OFF 

0 . 000E+00 

1.00 

10.0 

-10.0 

3 

OPTO ODC5AQ 

4 

18 

3 

0 

OFF 

0.000E+00 

1.00 

1.00 

0.000 

4 

OPTO DA7 

8 

10 

4 

0 

OFF 

0 . 000E+00 

1.00 

10.0 

-10.0 

5 

MONITOR 

0 

0 

5 

0 

OFF 

0 . 000E+00 

1.00 

0 . 000E+00 

0.000 


Autocode /Ada Code Generator V2.204 

Model File : AQUA_SYS.RTF 

Model Date : 13-FEB-91 18:10 

Generated File: AQUA_SYS.ADA 

— Number of External Inputs : 5 

— Number of External Outputs: 5 

Scheduler Frequency: 1.00000 

SUBSYSTEM FREQUENCY TIME SKEW OUTPUT TIME TASK TYPE 


1 1.00000 0.00000 * PERIODIC 


with SA_TYPES; use SA_TYPES; 

package SYSTEM_DATA is 

type TASK STATE TYPE is (IDLE, RUNNING, BLOCKED); 


EPSILON 

: constant 

RT FLOAT 

55 

9.537E-07; 

EPS 

: constant 

RT_FLOAT 

= 

4 . 0*EPSILON 

LOWEST_PRIORITY 

: constant 


= 

1; 

OK 

: constant 

INTEGER 

- 

0; 

STOP BLOCK 

: constant 

INTEGER 

= 

1; 

MATH ERROR 

: constant 

INTEGER 

=5 

2; 

STOPPED 

: constant 

INTEGER 


3; 

UCB ERROR 

: constant 

INTEGER 

= 

4; 

TIME OVERFLOW 

: constant 

INTEGER 

ss 

-1; 

UNKNOWN_E RRO R 

: constant 

INTEGER 

- 

100; 

SCHEDULER FREQ 

: constant 

RT FLOAT 


1.0; 

BUSIZE 

: constant 

RT INTEGER 

= 

11; 

NTASKS 

: constant 

RT INTEGER 

= 

1; 

NUMIN 

: constant 

RT INTEGER 

s= 

5; 

NUMOUT 

: constant 

RT INTEGER 

as 

5; 

UE PTR 

: constant 

RT INTEGER 

= 

23; 

YE PTR 

: constant 

RT INTEGER 

ss 

29; 


BUS_OFFSET : INTG_ARRAY (0. .NTASKS) := (0..NTASKS => 0) ; 

ERROR_FLAG : INTG_ARRAY (1 . .NTASKS) : = (1.. NTASKS => 0) ; 

EXIT_FLAG : array (1 . .NTASKS) of BOOLEAN := (1.. NTASKS => FALSE); 

TASK_STATE : array (1 . .NTASKS) of TASK_STATE_TYPE; 

BUS : REAL_ARRAY (1. .33) : = 

(1..27 => -EPSILON, 28 => 0.0, 29.. 33 => -EPSILON); 

FREQ : constant REAL_ARRAY (1 . .NTASKS) := 

(1. .NTASKS => 1.0); 

end S Y S TEM_DAT A ; 

package body SYSTEM_DATA is 
LIMIT : RT_INTEGER; 
begin 

null; 


HW IF File 
Aqua_Sys.ADA 
Page 1 of 12 


end SYSTEM DATA 


HW IF File 
Aqua_Sys.ADA 
Page 2 of 12 


— SUBSYSTEM01 -- 


with SA TYPES; 

use 

SA TYPES; 

with SA MATH LIB; 

use 

SA MATH LIB; 

with SA FLOAT MATH LIB; 

use 

SA FLOAT MATH LIB; 

with SYSTEM_DATA; 

use 

SYSTEM DATA; 

package SUBSYSTEM01 is 




SUBSYSTEM01 PRIORITY : constant := 29; 


task type SUBSYSTEM01_TYPE is 

pragma PRIORITY (SUBSYSTEM01_PRIORITY) ; 
entry Wakeup; 
end SUBSYSTEM01_TYPE; 

type SUBSYSTEM01_POINTER is access SUBSYSTEM01_TYPE; 
SUBSYSTEM_1 ; SUBSYSTEM01_POINTER; 

end SUBSYSTEM01; 

package body SUBSYSTEM01 is 

SUBSYS_ID : constant := 1; 

procedure Section0_01 is separate; 
procedure Sectionl_01 is separate; 

task body SUBSYSTEM01_TYPE is 
begin 

OUTER_LOOP : 
loop 

begin 

loop 

accept Wakeup; 

if EXIT_FLAG (SUBSYS_ID) then 
exit OUTER_LOOP ; 
end if; 

if BUS_OFFSET (SUBSYS_ID) = 0 then 
Section0_01; 
else 

Sectionl_01; 
end if; 

TASK_STATE (SUBSYS_ID) := IDLE; 
end loop; 

exception 

when SA_TYPES.EXIT_CONDITION => 

ERROR_FLAG(SUBSYS_ID) : = STOP_BLOCK; 
when NUMERIC_ERROR => 

ERROR_FLAG (SUBSYS_ID) := MATH_ERROR; 
when OTHERS => 

ERROR FLAG (SUBSYS ID) := UNKNOWN_E RROR ; 



HW IF File 
flqua_Sys.ADA 

; Page 3 of 12 

end; 

end loop OUTER_LOOP; 
end SUBSYSTEM01_TYPE; 

end SUBSYSTEM01; 


— SCHEDULER — 


with SA_TYPES ; 
with SYS TEM_D AT A ; 

package SCHEDULER_DATA is 

— Scheduler Constants and Tables — 

type SUBSYSTEM_TYPE is (PERIODIC, ENABLED_PERI OD I C , TRIGGERED_ANT, 

TRIGGERED_ATR, TRIGGERED_SAF ) ; 

type SUBSYSTEM_TYPE_ARRAY is array (1 . .NTASKS) of SUBSYSTEM_TYPE; 
type INI T I AL_S TATE_ARRAY is array (1 . .NTASKS) of TASK_STATE_TYPE; 


SCHEDULER ID 

: constant 

INTEGER := 0; 


OFFYE 

: constant 

RT INTEGER := 28; 


NUMID 

: constant 

RT INTEGER := 5; 


NUMENABLED 

: constant 

RT INTEGER := 0; 


NUMTRIGGERED 

: constant 

RT INTEGER := 0; 


NUMDSWRITERS 

: constant 

RT INTEGER := 0; 


D S_REG I S TERS_EXT 

: constant 

RT_INTEGER := 0; 


TASK TYPE 

: constant 

S UB S YS TEM_T YP E_ARRAY 

• 3S 

(1.. NTASKS => PERIODIC); 



INITIAL TASK STATE 
(1.. NTASKS => IDLE); 

: constant 

INI T I AL_STATE_ARRAY 

l ~ 

START COUNT 

(1.. NTASKS => 0); 

: constant 

INTG_ARRAY (1 . .NTASKS) 

Z = 

SCHEDULING COUNT 
(1.. NTASKS => 0); 

: constant 

INTG_ARRAY (1 . .NTASKS) 

• = 

OUTPUT COUNT 

(1.. NTASKS => 0); 

: constant 

INTG_ARRAY ( 1 . . NTASKS ) 

l = 

SH OFFSET 

(1.. NTASKS => 33); 

: constant 

INTG_ARRAY (1 . .NTASKS) 

l " 

SE OFFSET 

(1.. NTASKS => 5); 

: constant 

INTG_ARRAY (1 . .NTASKS) 

! = 

NUMEXT 

(1.. NTASKS => 0); 

: constant 

INTG_ARRAY ( 1 . . NTASKS ) 

• = 

ID EVENT 

(1.. NTASKS => 0) ; 

: constant 

INTG_ARRAY (1 . .NTASKS) 

l = 

LOC EVENT 

(1.. NTASKS => 0); 

: constant 

INTG_ARRAY ( 1 . . NTASKS ) 


DS REGISTERS 

(1.. NTASKS => 0); 

: constant 

INTG_ARRAY ( 1 . . NTASKS ) 

l = 

DS OFFSET 

(1.. NTASKS => 0); 

: constant 

INTG_ARRAY (1 . .NTASKS) 

• 

ID 

(1, 1, 1, 1, 1); 

: constant 

INTG_ARRAY ( 1 . . NUMID ) 

I s 


LOC 

(10, 9, 7, 1, 11); 


use SA_TYPES; 
use SYSTEM DATA; 


constant INTG ARRAY (1 . .NUMID) 


end SCHEDULER DATA 


HW IF File 
Aqua_Sys.ADA 
Page 4 of 12 


with SUBSYSTEM01; 
with SA_UTILITIES; 
with SA_TYPES; 
with SCHEDULER_DATA; 
with SYSTEM_DATA; 
with SA_IO_DEFINITIONS; 

package body SA_SCHEDULER is 

type TCB_TYPE is 
record 

TASK_TYPE : 

ENABLED : 

START : 

S TART_C 0 UNT : 

SCHEDULING_COUNT : 
ID_EVENT : 

LOC_EVENT : 

OUTPUT : 

OUTPUT_COUNT : 

SH_OFFSET : 

SE_OFFSET : 

NUMEXT : 

DS_OFFSET : 

DS_REGISTERS : 

end record; 

TSK : 

OFFSE : 

OFFSH : 

OFFDS : 

READY_COUNT : 

DISPATCH_COUNT : 

READY_QUEUE : 

DISPATCH : 

TCB : 


use SUBSYSTEM01; 
use SA_UTILITIES; 
use SA_TYPES; 
use SCHEDULER_DATA; 
use SYSTEM DATA; 


SUBSYSTEM_TYPE; 

BOOLEAN; 

RT_INTEGER; 

RT_INTEGER; 

RT_INTEGER; 

RT_INTEGER; 

RT_INTEGER; 

RT_INTEGER; 

RT_INTEGER; 

RT_INTEGER; 

RT_INTEGER; 

RT_INTEGER; 

RT_INTEGER; 

RT INTEGER; 


RT_INTEGER; 

RT_INTEGER; 

RT_INTEGER; 

RT_INTEGER; 

RT_INTEGER; 

RT_INTEGER; 

INTG_ARRAY (1 . .NTASKS) ; 
BOOLEAN_ARRAY (1 . .NTASKS) ; 
array (1 . .NTASKS) of TCB TYPE; 


procedure Queue_Task (NTSK : 
begin 

READY_COUNT 

READY_QUEUE (READY_COUNT) 
DISPATCH (NTSK) 

TASK_STATE (NTSK) 
end Queue_Task; 
pragma inline (Queue Task) ; 


in RT_INTEGER) is 

:= READY_COUNT + 1; 
:= NTSK; 

:= true; 

:= RUNNING; 


procedure Update_Outputs (NTSK : in RT_INTEGER) is 
begin 

BUS_OFFSET (NTSK) := BUSIZE - BUS_OFFSET (NTSK) ; 
end Update_Outputs; 
pragma inline (Update_Outputs) ; 


procedure Signal_An_Error (NTSK : in RT_INTEGER) is 
begin 


if ERROR_FLAG (NTSK) = OK then 
ERROR ( NTSK, TIME_OVERFLOW ); 
else 

ERROR ( NTSK, ERROR_FLAG (NTSK) ); 
end if; 

end Signal An Error; 


procedure Init_Scheduler is 
begin 

for NTSK in 1..NTASKS loop 
TCB (NTSK) . TASK_TYPE 
TCB (NTSK) .ENABLED 
TCB (NTSK) .START 
TCB (NTSK) . START_COUNT 
TCB (NTSK) . SCHEDULING_COUNT 
TCB (NTSK) . ID_EVENT 
TCB (NTSK) . LOC_EVENT 
TCB (NTSK) .OUTPUT 
TCB (NTSK) . OUTPUT_COUNT 
TCB (NTSK) . SH_OFFSET 
TCB (NTSK) . SE_OFFSET " 

TCB (NTSK) .NUMEXT 
TCB (NTSK) . DS_OFFSET 
TCB (NTSK) . DS_REGISTERS 
TASK_STATE (NTSK) 

DISPATCH (NTSK) 
if TASK_TYPE (NTSK) = 
TASK_TYPE (NTSK) = 
BUS_OFFSET (NTSK) 
else 

BUS OFFSET (NTSK) 


end if; 
end loop; 

DISPATCH_COUNT := 0; 
READY_COUNT : = 0; 

READY_QUEUE ( 1 ) := 0; 

SCHEDULER_STATUS := OK; 
INTERRUPT_COUNT := 0; 
end Init Scheduler; 


= TASKJTYPE (NTSK) ; 

= false; 

* START_COUNT (NTSK) ; 

= S TART_COUNT (NTSK) ; 

= SCHEDULING_COUNT (NTSK) ; 

« ID_EVENT (NTSK) ; 

- LOC_EVENT (NTSK) ; 

« OUTPUT_COUNT (NTSK) ; 

= OUTPUT_COUNT (NTSK) ; 

= . SH_OFFSET (NTSK) ; 

SE_OFFSET (NTSK) ; 

:= NUMEXT (NTSK) ; 

:» DS_OFFSET (NTSK) ; 

;= DS_REGISTERS (NTSK) ; 

:= INITIAL TASK STATE (NTSK); 


;** false; 

TRI GGERED_ATR or 
TRIGGERED SAF then 
:= 0 ; 

:= BUSIZE; 


task body SCHEDULER_TYPE is 
begin 

SCHEDULER_LOOP : 
loop 

INNER_LOOP ; 
loop 


— Scheduler Wakeup — 
accept Wakeup; 

INTERRUPT_COUNT := INTERRUPT_COUNT + 1; 

SA_IO_DEFINITIONS.STATUS_38 6.SCHEDULER_READY_INDEX := 0; 

if SCHEDULER_STATUS /= OK then 

ERROR (SCHEDULER_ID, SCHEDULER_STATUS ) ; 
exit INNER_LOOP; 
end if; 


HW IF File 
Aqua_Sys.ADA 
Page 5 of 12 


— False 


HW IF File 
Aqua_Sys.ADA 
Page 6 of 12 

— System Input — 

External_Input ( BUS, UE_PTR, NUMIN, SCHEDULER_STATUS ); 

— Task Scheduling — 

for NTSK in reverse 1..NTASKS loop 

case TASK_STATE (NTSK) is 
when IDLE => 

case TCB (NTSK) .TASK_TYPE is 
when PERIODIC => 

if TCB (NTSK) .START = 0 then 
Queue_Task (NTSK) ; 

Update_Outputs (NTSK) ; 

TCB (NTSK) .START TCB (NTSK) . SCHEDULING_COUNT; 

else 

TCB (NTSK) .START := TCB (NTSK) . START - 1; 
end if; 

when ENABLED_PERIODIC => 

if not TCB (NTSK) .ENABLED then 
TASK_STATE (NTSK) := BLOCKED; 
elsif TCB (NTSK) . START = 0 then 
Queue_Task (NTSK) ; 

Update_Outputs (NTSK) ; 

TCB (NTSK) .START ;= TCB (NTSK) . SCHEDULING_COUNT; 
else 

TCB (NTSK) . START := TCB (NTSK) . START - 1; 
end if; 

when TRIGGERED_ANT => 

if TCB (NTSK) .START = 0 then 
Queue_Task (NTSK) ; 

Update_Outputs (NTSK) ; 

TCB (NTSK) . START := 1; 
end if; 

when TRIGGERED_ATR => 

if TCB (NTSK) .OUTPUT = 0 then . 

Update_Outputs (NTSK) ; 

TASK_STATE (NTSK) := BLOCKED; 
else 

TCB (NTSK) .OUTPUT := TCB (NTSK) . OUTPUT - 1; 
end if; 

if TCB (NTSK) .START = 0 then 
Queue_Task (NTSK) ; 

TCB (NTSK) .OUTPUT := TCB (NTSK) . OUTPUT_COUNT; 

TCB (NTSK) .START ;= 1; 
end if; 

when TRI GGERED_S AF => 

if TCB (NTSK) .OUTPUT = 0 then 
Update_Outputs (NTSK) ; 

TASK_STATE (NTSK) := BLOCKED; 
end if; 

if TCB (NTSK) .START = 0 then 
Queue Task (NTSK) ; 


HW IF File 
Aqua_Sys .ADA 
Page 7 of 12 

TCB (NTSK) .OUTPUT := 0; 

TCB (NT SK) . START : = 1; 
end if; 

when OTHERS => 
null; 
end case; 

when RUNNING => 

case TCB (NTSK) .TASK_TYPE is 

when PERIODIC => 

if TCB (NTSK) .START > 0 then 

TCB (NTSK) .START := TCB (NTSK) . START - 1; 
else 

Signal_An_Error (NTSK) ; 
exit INNER_LOOP; 
end if; 

when ENABLED_PERIODIC => 

if TCB (NTSK) .START > 0 then 

TCB (NTSK) .START := TCB (NTSK) . START - 1; 
else 

Signal_An_Error (NTSK) ; 
exit INNER_LOOP ; 
end if; 

when TRIGGERED_ANT => 

if TCB (NTSK) .START = 0 then 
Signal_An_Error (NTSK) ; 
exit INNER_LOOP; 
end if; 

when TRI GGERED_ATR => 

if TCB (NTSK) .OUTPUT > 0 then 

TCB (NTSK) .OUTPUT : = TCB (NTSK) . OUTPUT - 1; 
else 

Signal_An_Error (NTSK) ; 
exit INNER_LOOP ; 
end if; 

when TRI GGERED_S AF => 

if ERROR_FLAG (NTSK) /= 0 then 
Signal_An_Error (NTSK) ; 
exit INNER_LOOP; 
end if; 

when OTHERS => 
null; 
end case; 

when BLOCKED => 

case TCB (NTSK) .TASKJTYPE is 

when ENABLED_PERIODIC => 

if TCB (NTSK) .ENABLED then 
Queue_Task (NTSK) ; 

Update_Outputs (NTSK) ; 

TCB (NTSK) .START ;= TCB (NTSK) . SCHEDULING_COUNT; 
end if; 


then 


when TRIGGERED_ATR => 

if TCB (NTSK) . START = 0 
Queue_Task (NTSK) ; 

TCB (NTSK) .OUTPUT : = TCB (NTSK) .OUTPUT_COUNT 
TCB (NTSK) . START := 1; 
end if; 


when TRI GGERED_S AF => 

if TCB (NTSK) .START = 0 then 
Queue_Task (NTSK) ; 

TCB (NTSK) .OUTPUT := 0; 
TCB (NTSK) .START 1; 

end if; 


when OTHERS => 
null; 
end case; 

end case; 
end loop; 

— System Output — 

for J in 1..NUMOUT loop 

BUS ( J+OFFYE) := BUS ( LOC ( J) +BUS_OFFSET (ID ( J) ) ); 
end loop; 

External_Output ( BUS, YE_PTR, NUMOUT, SCHEDULER_S T ATU S ) ; 

— Task Input Sample and Hold — 

for I in reverse 1 . . READY_COUNT loop 
TSK := READY_QUEUE (I) ; 

OFFSE := TCB (TSK) .SE_OFFSET; 

OFFSH := TCB (TSK) .SH_OFFSET - OFFSE; 

for J in OFFSE+1. .OFFSE+TCB (TSK) .NUMEXT loop 

BUS ( J+OFFSH) := BUS ( LOC ( J) +BUS_OFFSET (ID ( J) ) ); 

end loop; 
end loop; 

— Clear Ready Queue — 

if READ Y_QUEUE ( 1 ) > DISPATCH_COUNT then 
D I SPATCH_COUNT := READ Y_QUEUE ( 1 ) ; 
end if; 

READ Y_COUNT := 0; 

READ Y_QUEUE ( 1 ) := 0; 

— Task Dispatching — 

for NTSK in 1 . .DISPATCH_COUNT loop 
if DISPATCH (NTSK) then 

DISPATCH (NTSK) := false; 
case NTSK is 

when 1 => SUBSYSTEM_1 .Wakeup; 

when OTHERS => null; 
end case; 
end if; 
end loop; 


HW IF File 
Aqua_Sys.ADA 
Paqe 9 of 12 

DISPATCH_COUNT := 0; 

INTERRUPT_COUNT : = INTERRUPT_COUNT - 1; 

SA_IO_DEFINITIONS.STATUS_38 6.SCHEDULER_READY_INDEX := 1; — True 

end loop INNER_LOOP; 
exit; 

end loop SCHEDULER_LOOP; 

— Shutdown — 

accept Quit; 

end SCHEDULER_T YPE ; 
end SA SCHEDULER; 


— MAIN — 


with SUBSYSTEMS; 
with SA_MPC_INTERRUPT; 
with SA_IO_DEFINITIONS ; 
with SA_SCHEDULER; 
with SA_UTILITIES; 
with SYS TEM_D AT A ; 

procedure AQUA SYS is 


use SUBSYSTEMS; 
use SA_MPC_INTERRUPT; 
use S A_I 0_DEF INI T I ON S ; 
use SA_SCHEDULER; 
use SA_UTILITIES; 
use SYSTEM DATA; 


— COMMAND TASK — 


task type COMMAND_TASK_TYPE is 

pragma PRIORITY (LOWEST_PRIORITY) ; 
end COMMAND_TASK_TYPE ; 

type COMMAND_TASK_PO INTER is access COMMAND_TASK_TYPE; 
COMMAND_TASK : COMMAND_TASK_PO INTER; 

task body COMMAND_TASK_TYPE is -• .. 

begin 

while STATUS_386.TASK_COMMAND /= CONVERT_INPUT_DATA loop 
for WAIT_CNT in 1..10 loop 
null; 
end loop; 
end loop; 

SCHEDULER_STATUS := STOPPED; 

SCHEDULER . Wakeup ; 
end COMMAND_TASK_T YPE ; 

procedure Shutdown_The_Tasks is 
begin 

for NTSK in 1..NTASKS loop 
EXIT_FLAG (NTSK) := true; , 
end loop; 

SUBS YSTEM_1 .Wakeup ; 
end Shutdown The Tasks; 



begin 


HW IF File 
Aqua_Sys.ADA 
Page 10 of 12 


— Create Subsystem Tasks — 

SUBSYSTEM_1 := new SUBSYSTEM01_TYPE; 

— Start Scheduler — 

Init_Scheduler; 

SCHEDULER := new SCHEDULER_T YPE ; 

— User Initialization — 

Implement at ion_Specific_Initialize (BUS, UE_PTR, NUMIN, YE_PTR, NUMOUT, 

SCHEDULER STATUS, SCHEDULER FREQ) ; 


if SCHEDULER_STATUS = OK then 

COMMAND_T AS K := new COMMAND_TASK_T YPE ; 

else 

SCHEDULER . Wakeup ; 
end if; 

— User Termination — 

SCHEDULER. Quit; 

if STATUS_3 8 6 . TASK_COMMAND = CONVERT_INPUT_DATA then 
Implement at ion_Specific^Terminate; 

else 

STATUS_3 8 6 . ERRORT YPE := 1; — Reboot controller 
end if; 

Shut do wn_The_T asks; 
end AQUA SYS; 


separate (SUBSYSTEM01) 

procedure Section0_01 is 
begin 


General Nested Expression 

— {CONTROLLER. VOLT TO TEMP. 6} 

BUS (12) := 60.0 + 8.0*BUS(24); 

Summing Junction 

— {CONTROLLER. .7} 

BUS (13) -BUS (12) + BUS (23); 
Dead Band 

— {CONTROLLER. TEMP ERROR DEADBAND. 16} 

BUS (14) := BUS (13) - 3.0; 

if BUS (14) < 0.0 then 

BUS (14 ) := BUS (13) + 3.0; 

if BUS (14) > 0.0 then 
BUS (14) := 0.0; 

end if; 
end if; 

General Logical Expression 

— {CONTROLLER. RAISE TEMPERATURE . 5 } 

if BUS(14)>0.0 then 



BUS (15) := 1.0; 

else 

BUS (15) := 0.0; 

end if; 

OR Logical Block 

— {CONTROLLER. . 95} 

if BUS (25) > 0.0 or BUS (26) >0.0 then 
BUS (16) := 1.0; 

else 

BUS (16) := 0.0; 

end if; 

NOT Logical Block 

— {CONTROLLER. .96} 

if BUS (16) >0.0 then 
BUS (17) := 0.0; 

else 

BUS (17) := 1.0; 

end if; 

AND Logical Block 

— {CONTROLLER. . 97} 

if BUS (15) >0.0 and BUS (17) > 0.0 then 
BUS (18 ) := 1.0; 

BUS (18) := 0.0; 

end if; 

Data Conversion 

— { CONTROLLER. LOG_INT CONVERSION. 26} 

BUS (19) := RT_FLOAT (RT_INTEGER (BUS (18) ) ) ; 

Gain Block 

— { CONTROLLER . . 92 } 

BUS (20) := 10.0 * BUS (19); 

Gain Block 

— {CONTROLLER. LIGHT. 99} 

BUS (21) := BUS (27) ; 

General Nested Expression 

— {CONTROLLER. WATER LEVEL CONSTANT. 98} 

BUS (22) ;= 3.0; 


HW IF File 
Aqua_Sys.ADA 
Page 11 of 12 


end SectionO 01; 


separate (SUBSYSTEM01) 

procedure Sectionl_01 is 
begin 


General Nested Expression 

— {CONTROLLER. VOLT TO TEMP. 6} 

BUS ( 1 ) := 60.0 + 8 . 0*BUS (24) ; 

Summing Junction 

— {CONTROLLER. .7} 

BUS (2) := -BUS (1) + BUS (23) ; 

Dead Band 

— {CONTROLLER. TEMP ERROR DEADBAND. 16} 

BUS (3) := BUS (2) - 3.0; 

if BUS (3) <0.0 then 

BUS (3) := BUS (2) + 3.0; 

if BUS (3) >0.0 then 
BUS (3) := 0.0; 

end if; 



end if; 

General Logical Expression 

— {CONTROLLER. RAISE TEMPERATURE . 5 } 

if BUS (3) >0.0 then 
BUS (4) := 1.0; 

else 

BUS (4 ) := 0.0; 

end if; 

OR Logical Block 

— {CONTROLLER. . 95} 

if BUS (25) > 0.0 or BUS (26) >0.0 then 
BUS (5) := 1.0; 

else 

BUS (5) := 0.0; 

end if; 

NOT Logical Block 

— {CONTROLLER. . 96} 

if BUS (5) >0.0 then 
BUS (6) := 0.0; 

BUS (6) := 1.0; 

end if; 

AND Logical Block 

— {CONTROLLER. .97} 

if BUS (4) >0.0 and BUS (6) >0.0 then 
BUS (7) := 1.0; 

else 

BUS (7) := 0.0; 

end if; 

Data Conversion 

— {CONTROLLER. LOG_INT CONVERSION. 26} 

BUS ( 8 ) : = RT_FLOAT (RT_INTEGER (BUS ( 7 ) ) ) ; 

Gain Block 

— {CONTROLLER. .92} 

BUS (9) := 10.0 * BUS (8) ; 

Gain Block 

— {CONTROLLER. LIGHT. 99} 

BUS (10) := BUS (27) ; 

General Nested Expression 

— {CONTROLLER. WATER LEVEL CONSTANT. 98} 

BUS (11) : = 3.0; 


HW IF File 
Aqua_Sys.ADA 
Page 12 of 12 


end Sectionl 01; 



Report Documentation Page _ j 

- - — 

1. Report No. 

2. Government Accession No. 

3. Recipient's Catalog No. 1 

4. TO# and Subtffls 

Software Technology Testbed "SoftPanel" Prototype Final Report 

5. Report Date 

February 1991 

6. Performing Organization Code ! 

i 

7. Authoris) 
GDI 

8. Performing Organization Report No. 

10. Wor* Unit No. 

j 9. Performing Organization Name and Addres* 

' General Digital Industries, Inc. 
6705 Odyssey Drive 
Huntsville, AL 35806 

11. Contract or Grant No. 

NAS8-37680 

13. Typ# qf Report and Period Covered 

12. Sponsoring Agency Nam# and Address 

! 

14. Sponsoring Agency Code 

"" ' i 


: 15. Supplementary Notts 


j 16. Abftrtet 

j Provides final report of activities performed under this contract Including work on Touch Panel 
! Testbed technology, software standards, and Independent Software Analysis of Space Station Freedom 
! Software. 


\ 17. Key Word* (Suggested by AutboHi)) 


18. Dittribution Statement 


: Soft Panel 





: SMADR 


Unclassified - Unlimited 


I MASM 





j Aquarium System 




i 

> AG 




— 

j 1$. Security Claaarf. (of tW* report) 

20. Security Claaarf. (of tWe page) 

21 . No. Of pages 

22. Price 

j Unclassified 



68 

■■ ■ 


NASA FORM 1828 OCT 9* 





