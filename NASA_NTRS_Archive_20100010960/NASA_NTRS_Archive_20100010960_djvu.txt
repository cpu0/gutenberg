© ISPATOM: A Generic Real-Time Data Processing Tool Without 
Programming 

Lyndon B. Johnson Space Center, Houston, Texas 


Information Sharing Protocol Ad- 
vanced Tool of Math (ISPATOM) is an 
application program allowing for the 
streamlined generation of “comps,” 


which subscribe to streams of incoming 
telemetry data, perform any necessary 
computations on the data, then send the 
data to other programs for display 


and/ or further processing in NASA mis- 
sion control centers (see figure) . Hereto- 
fore, the development of comps was dif- 
ficult, expensive, and time-consuming: 
Each comp was custom written manually, 
in a low-level computing language, by a 
programmer attempting to follow re- 
quirements of flight controllers. 

ISPATOM enables a flight controller 
who is not a programmer to write a comp 
by simply typing in one or more equa- 
tion (s) at a command line or retrieving 
the equation(s) from a text file. ISPATOM 
then subscribes to the necessary input 
data, performs all of necessary computa- 
tions, and sends out the results. It sends 
out new results whenever the input data 
change. The use of equations in ISPATOM 
is no more difficult than is entering equa- 
tions in a spreadsheet. The time involved 
in developing a comp is thus limited to the 
time taken to decide on the necessary 
equations. Thus, ISPATOM is a real-time 
dynamic calculator. 

This work was done by Adam Dershowitz 
of United Space Alliance for Johnson Space 
Center. Further information is contained in 
a TSP (see page l).MSC-23799 



Overview of ISPATOM application flow structure. 


©Automated Diagnosis and Control of Complex Systems 

Ames Research Center, Moffett Field, California 


Livingstone2 is a reusable, artificial 
intelligence (AI) software system de- 
signed to assist spacecraft, life support 
systems, chemical plants, or other com- 



Artist's conception of the New Milennium Deep 
Space One Probe. 


plex systems by operating with minimal 
human supervision, even in the face of 
hardware failures or unexpected 
events. The software diagnoses the cur- 
rent state of the spacecraft or other sys- 
tem, and recommends commands or 
repair actions that will allow the system 
to continue operation. Livingstone2 is 
an enhancement of the Livingstone di- 
agnosis system that was flight-tested on- 
board the Deep Space One spacecraft 
in 1999 (see figure). This version tracks 
multiple diagnostic hypotheses, rather 
than just a single hypothesis as in the 
previous version. It is also able to revise 
diagnostic decisions made in the past 
when additional observations become 
available. In such cases, Livingstone 
might arrive at an incorrect hypothesis. 

Re-architecting and re-implementing 
the system in C++ has increased per- 
formance. Usability has been improved 
by creating a set of development tools 


that is closely integrated with the Living- 
stone2 engine. In addition to the core 
diagnosis engine, Livingstone2 includes 
a compiler that translates diagnostic 
models written in a Java-like language 
into Livingstone2’s language, and a 
broad set of graphical tools for model 
development. 

This program was written by James 
Kurien, Christian Flaunt, Howard Cannon, 
Mark Shirley, and Will Taylor of Ames Re- 
search Center; P. Nayak of USRA-RACS; 
Benoit Hudson, Andrew Bachmann, Lee 
Brownston, Sandra Hayden, and Steve 
Wragg of QSS Group, Inc.; William Millar 
and Shirley Pepke of Caelum Research Corp.; 
Scott Christa of Aerospace Computing, Inc,; 
and Ray Garcia of Foothill-DeAnza Commu- 
nity College. For further information, access 
http://opensource.arc.nasa.gov/ or contact 
the Ames Technology Partnerships Division 
at (650) 604-2954. 

ARC-147 25-1 


NASA Tech Briefs, September 2007 


59 









