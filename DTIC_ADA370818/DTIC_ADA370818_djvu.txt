DATA ANALYSIS TOOLS USING 
JAVA/INTERNET TECHNOLOGY AT 
ARNOLD ENGINEERING DEVELOPMENT CENTER* 

Danna Pemberton 
Senior Programmer Analyst 
Sverdrup Technology, Inc., AEDC Group 
Arnold Engineering Development Center 
Arnold Air Force Base, TN 37389-6200 
pemberton @ hap. amold. af.mil 

KEYWORDS 

Java, Internet, Intranet, Virtual Presence, Analysis 

ABSTRACT 

AEDC is in the process of bringing Virtual Presence capabilities to its customers through Data Analysis 
Tools using the Java Programming Language and Internet Technologies. These technology tools are 
maturing at a time when U.S. dominance and market share are eroding. Thus, these tools provide an 
important contribution for the U.S. to strengthen its share of the world aircraft market. AEDC's 
AeroGraph is a powerful tool for remotely accessing and reviewing wind tunnel test data by the 
aerospace industry and is the main topic of this paper. AeroGraph is only one of many components 
currently being developed at AEDC during this virtual presence era. 

FACILITY OVERVIEW 

The Amold Engineering Development Center (AEDC) is the most advanced and largest complex of 
flight simulation test facilities in the world with 53 aerodynamic and propulsion wind tunnels, rocket 
and turbine engine test cells, space environmental chambers, arc heaters, hyperballistic ranges, and other 
test units. Twenty-seven of the center’s test units have capabilities unmatched elsewhere. Facilities can 
simulate flight conditions from sea level to altitudes more than 100,000 ft, and from subsonic velocities 
to those well over Mach 20. 

Test units are employed in proof of theory (concept, material, design, and performance evaluation) 
throughout the environmental conditions that systems are expected to encounter in performance of their 
missions. Environmental testing continues to play a vital role in obtaining a maximum return from 
Research and Development, Test and Evaluation by ensuring a high degree of quality assurance prior to 

* The research reported herein was performed by the Amold Engineering Development Center (AEDC), Air Force Materiel 
Command. Work and analysis for this research were performed by personnel of Sverdrup Technology, Inc., AEDC Group, 
technical services contractor for AEDC. Further reproduction is authorized to satisfy needs of the U. S. Government. 

Approved for public release; distribution unlimited. 

19991130 099 



a system becoming operational. This testing complements the more expensive and often hazardous 
flight test phase of systems acquisition, and can save time and resources in the overall development, 
acquisition, deployment, and sustainment process. 1 

PRODUCTS/CUSTOMERS 

AEDC has contributed to the development of practically every one of the nation’s top priority aerospace 
programs, including the Atlas, Titan, Minuteman and Peacekeeper ICBMs, Projects Mercury, Gemini 
and Apollo, the space shuttle, F-15, F-16, F/A-18, F-22, F-111, F-117, C-5, C-141, X-29, B-l, and B-2 
aircraft, Navstar Global Positioning System satellites, the Inertial Upper Stage, the anti-satellite 
program, Trident submarine-launched ballistic missile, Tomahawk, Air-Launched Cruise Missile, 
Advanced Medium-Range Air-to-Air Missile, JDAM, JSF, and JASSM. 2 

Customers include the Department of Defense (Army, Navy, and Air Force), the National Aeronautics 
and Space Administration, domestic and foreign private industry, allied foreign governments, and 
educational institutions. 


INTRODUCTION 

Traditionally at AEDC, wind tunnel testing requires the customers to bring a group of engineers and 
scientists to the site. These engineers are needed for their expertise in gathering and reviewing the test 
data. Depending on AEDC’s test schedule and the test’s duration, these engineers, along with AEDC’s 
engineers, may not have enough time to perform an in-depth analysis of the data. Also, the rapid 
acceleration of the technological revolution since the early 1980’s has created an information overload. 
The quantity of data that researchers can assemble, acquire, and reduce for analysis has jumped from a 
few megabytes to gigabytes. Therefore, the aerospace customers often receive the data several months 
after the test, depending on the level of analysis done at AEDC. By this time, the results often indicate 
valuable insights and areas that could have been explored during the test, if the data had been 
conveniently available. Researchers no longer analyze the data on mainframe computers, preferring 
instead to use a variety of computers (PCs, Suns, Dec, Alphas, Macintoshes, Silicon Graphic’s, etc.). 
AEDC is faced with a massive overload of data needing to be managed with customers wanting to plot 
and analyze their data on-line during a test. AeroGraph is to expedite the transfer of reduced data to the 
customers, reduce the number of customer engineers required on site, and provide faster analysis 
capabilities. It is the first attempt to bring virtual presence to our wind tunnel control rooms. 

REQUIREMENTS 

AeroGraph is the product of a project called Test Support Software Modernization. The original intent 
of this project was to combine two existing complex graphics systems; the Analysis and Display System 
(ADS) used by the Propulsion Wind Tunnel (PWT) and Von Karman (VKF) facilities, and the Test 
Interface Graphical Evaluation Resource (TIGER) system used by Engine Test Facility (ETF). Both of 
these systems highly satisfy their current analysis requirements. After several meetings and discussions, 
it was obvious that for future growth and commonality, a product was needed that would take advantage 
of the Internet, web tools, Java, and graphical browsers such as Netscape Navigator and Microsoft 


Internet Explorer. The spiral design approach and rapid prototyping would be used as the software 
development methods. This product, AeroGraph, would consist of basic graphical tools usable on the 
Internet with the potential to grow into the multi-functional graphic systems mentioned above with the 
added capability of virtual presence. 

The features required of AeroGraph are as follows: 

■ Platform Independent 

■ Run on Internet/Intranet 

■ Access current ADS database file / Easily adaptable to other databases 

■ User-friendly point-and-click environment 

■ Multiple XY plots 

■ Manual/Automatic Scales 

■ Mouse Drag/Drop Scales 

■ Store setup files 

■ Sorting capability 

■ Tabular displays 

Due to these requirements, Java became the language of choice. One obvious advantage of Java is a 
run time library that produces platform independent code. The same code can be used in Windows 95, 
Solaris, Unix, Mac OS, etc., This is certainly necessary for Internet programming. Users will 
download Java applets (bytecode) from the Internet and execute them on their own machines with their 
Java enabled browsers. The authors of Java describe it with the following phrase of buzzwords. 

“Java: A simple, object-oriented, network-savvy, interpreted, robust, secure, architecture neutral, 
portable, high-performance, multithreaded, dynamic language.” 3,4 

OVERVIEW 

The AeroGraph framework (Fig. 1) includes a hypertext markup language (HTML) page, a Common 
Gateway Interface (CGI) program, and a Java applet stored on a web server. The web server sends the 
HTML page when it receives a hypertext transfer protocol (HTTP) request from the user’s web browser. 
This page is quite simple, and its main job is to download the Java applet (bytecode) to the user’s 
machine. The user's Java-enabled browser interprets the bytecode. The applet begins by importing a 
number of standard Java classes widely available in standard Java environments, such as browsers and 
developer kits like Microsoft’s Visual J++. It also imports the graphics classes developed by AEDC. 
The user will then see a user-friendly interactive screen, make selections, and click on the "Plot" button. 
This triggers the applet to open a socket to start a Common Gateway Interface (CGI) program on the 
web server, which reads data from an ADS file and writes the data to the socket. The plotting applet 
receives the information and plots the graph within the user's browser display window. 



Server 



Figure 1. AeroGraph framework. 


MODULE 1 - HTML PAGE 


The HTML page specifies the name of the class file to be downloaded, the size of the window, the user 
name, the server name, and the marker file to be used. Currently, this must be set up by AEDC 
personnel for security reasons. 


<HTML> 

<HEAD> 

<TITLE>Plotting ADS data</TITLE> 

</HEAD> 

<BODY> 

<CENTER> 

<applet code=Aerograph.class width=650 height=450> 

<param name=U SERNAME value="pemberton-dl"> 

<param name=SERVERNAME value="cyclone"> 

<param name=MARKER value="marker .txt"> 

</applet> 

</CENTER> 

</BODY> </HTML> 

The graphical browser makes it easy to display Java applets using HTML. 5 Users can connect nearly 
any type of computer to the Internet, and if that computer supports the HTTP, they can program it to 
send nearly any type of data. 






MODULE 2 - CGI PROGRAM 


The CGI program is currently written in the C programming language and resides on the web server 
computer. The Java applet opens a socket to the server's HTTP daemon. The HTTP daemon on the 
server launches the CGI program and feeds it the selections made by the user from the interactive applet. 
Next, the CGI program reads the data from an ADS file structure, performs searches for the requested 
data, and sends the data back to the applet via the socket. Multiple ranges and parameters of data can be 
read. The CGI program can be easily modified to retrieve data from other file structures without 
affecting the results of the plotting applet. 

MODULE 3 - JAVA APPLET 

The Java applet 6 retrieves the data from the socket and plots it. It has the following capabilities: 

A star-shaped input panel (Figure 2) allows easy modification of the number of plots. 

“Left” decreases the number of plots horizontally by one. 

“Right” increases the number of plots horizontally by one. 

“Down” decreases the number of plots vertically by one. 

“Up” increases the number of plots vertically by one. 

“Square in the middle” will increase the number of plots to make the same 
number both vertically and horizontally. When it reaches the maximum of 16, it 
will revert to 1 plot. 



Figure 2. Sample single plot. 















Stores plot setups on the server and allows users to select their predefined plot setups. 

Allows users to view a run log of their ADS data file. 

Allows the following interactive capabilities (Fig. 3): 

Enter run numbers to be plotted 
Parameter selection 
Manual scales 

Automatic scales select on/off 
Markers on curves select on/off 
Gridlines select on/off 

Zooming capability-drag mouse across the area of the plot to be zoomed 
Redrawing of plot with default limits 

Toggle pop-up window that displays the mouse position in user coordinates 
Show coordinates of the data point closest to the cursor 



...1“" ..Wt ...—." 

Figure 3. Sample Interactive menu. 


Provides a Help page. 

Provides tabular data display (Fig. 4): 

Selection of five sorting parameters with min and max inputs. 

Selection of parameters to be printed. 

The resulting display can be copied and pasted from the browser to any Microsoft Office 
program. 
















RUN POINT ALPHA 

MACH 

283 

1 

0.0 

0.8 

283 

2 

0.0 

0.8 

283 

3 

0.0 

0.8 

283 

4 

0.0 

0.8 

284 

1 

2.0 

0.8 

284 

2 

2.0 

0.8 

284 

3 

2.0 

0.8 

284 

4 

2.0 

0.8 

285 

1 

4.0 

0.8 

285 

2 

4.0 

0.8 

285 

3 

4.0 

0.8 

285 

4 

4.0 

0.8 


Figure 4. Sample Tabular Display. 


Figures 2, 5, and 6 are AeroGraph-generated example plots. 



Figure 5. Sample multiple plot capability. 














DATABASE 

AeroGraph currently reads an ADS database that contains all reduced testing parameters acquired 
during the test. Several data points are stored with a number indicating the run configuration. 7 As the 
data are stored, a run log is created that correlates the data with the test configuration. 

Example RunLog: 

' RunLog 

283 

284 

285 

287 

288 

Searching for data that meet certain criteria in multiple ADS files may be performed. Figure 7 is an 
example Graphical User Interface displayed in AeroGraph for searching/sorting. Parameter ALPI and 
C44 would be displayed for data with TIME values between 0.0 and 1.0 for the run range 280-290. 

INTRANET 

The AeroGraph system provides local access to the AEDC wind tunnel facilities through a dedicated, 
site-wide fiber-optic Intranet. No connections to the WWW Internet are currently permitted. The use of 













these isolated networks and subnets provides a level of security. The security level of the data depicts 
which network is used. 


i Jl * *£,* *i JL <&. «&» JSL JL JL wiL M d «L 

wgss a 

ifi tl&A, tex Mf* 


isi ip* 

r , 



' Jd s ^ m Mill . 


| «•*•« !“ a-ssJ 

fmm ■ '*• 

linl . 

to- ■- 


1 

Stli #i 


.I 

SI 

| B :g : I 


Bl ' 

H ... 

1 

' ****** : *** : ■ V* : : 7 * / - /■ ' ‘ ." 

l,t I 

'f 

‘i- ” ||- ■■;■■■ |HP P| "j 

. 




M 


. .mm ■ 



Figure 7. Searching/sorting GUI. 


INTERNET 

AEDC has several private Internet connections in order to provide remote access to data. 
Unclassified: 

Defense Research and Engineering Network (DREN) 

Non-classified Internet Protocol Router Network (NIPRNET) - Government Network 
AERONET - NASA Network 
Classified: 

Secret Internet Protocol Router Network (SIPRNET) 

AeroGraph will execute over any network. The security of the data and the customer requirements 
determine the type of Internet connection and the data encryption mechanism to be used. 

BENEFITS 

AeroGraph will provide the following benefits to AEDC. 

1. Faster access to near real-time reduced data 

2. Fewer engineers required at facility 








3. Opportunity to make test critical decisions in near real-time from customer site 

4. Remote access to data 

5. No plotting package required on the user’s computer 

6. Nothing new to buy 

7. Reduce development cycle time 


FUTURE EFFORTS 

♦ 

Future plans for AeroGraph are to incorporate other database structures. AeroGraph has already been 
modified to read Dynamic Data for the PWT facility. An Oracle database file and powerful meta-data 
search engines are other possible enhancements. Continuous plotting of data and additional plotting 
tools have been requested. 

SUMMARY 

A common goal shared by most of the customers testing at AEDC is to minimize product development 
cycle time and cost. In order to minimize the cycle time, the customer needs remote access to reduced 
data during the test for validation and analysis. The availability of the data is of great importance in 
preventing errors and uncovering problems. The AeroGraph system concept provides the aerospace 
customer the capability to analyze data during a test to make critical decisions. This allows for 
immediate data validation, reduction of time required in the tunnel, and reduction of the number of 
engineers and researchers required on-site. Thus, the ultimate goal of reducing system development 
cycle time and cost can be realized. 


NOMENCLATURE 


AEDC 

PWT 

ETF 

VKF 

ADS 

TIGER 

HTML 

HTTP 

CGI 


Arnold Engineering Development Center 
Propulsion Wind Tunnel Facility 

Engine Test Facility 

; 

Von Karman Test Facility 

Analysis and Display System (PWT analysis package) 

Test Interface Graphical Evaluation Resource (ETF analysis package) 
Hypertext Markup Language 
Hypertext Transfer Protocol 
Common Gateway Interface 


i 




WWW World Wide Web 


DREN Defense Research and Engineering Network 

NIPRNET Non-classified Internet Protocol Router Network 
NASA Numerical Aerodynamics Simulator Facility 

AERONET NASA Aerospace Network 
SIPRNET Secret Internet Protocol Router Network 

REFERENCES 

1. Thompson, J.B., “On-line Analysis for Propulsion Testing at Arnold Engineering Development 
Center,” Proceedings of the 42-th International Instrumentation Symposium, San Diego, May 1996 

2. AEDC Internet Homepage, http://info.amold.af.mil 

3. Cornell, Gary, and Horstman, Cay S., Core Java, Sun Microsystems, Inc., 1996. 

4. Flanagan David, Java In A Nutshell, O'Reilly & Associates, Inc., 1996. 

5. “Java applets gather remote data over the web,” Personal Engineering, November 1996. 

6. Brookshaw, Dr. Leigh, Graphics Package, University of Southern Queensland. 

7. Burger, J. L., "A Standards-Based Analysis And Display System," Proceedings of the 39th 
International Instrumentation Symposium, Albuquerque, New Mexico, May 1993. 



