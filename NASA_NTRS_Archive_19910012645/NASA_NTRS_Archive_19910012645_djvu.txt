^ 91-21958 

HEAVENS System for Software 

Artifacts 

Paul Matthews 

Bellcore Company 


The HE AVENS system is a workstation-based collection of software for analyzing, organizing and viewing 
software artifacts. As a prototype, the system has been u sed for visualizing source code structure, analyzing 
dependencies, and restructuring to simplify maintenance. The system has also been used in the early stages 
of software design to organize and relate design objects, maintain design documentation, and provide a 
ready-made framework for later coding. 





HEAVENS System for Software Artifacts 

PAUL MATTHEWS 
Bellcore 

Computer Technology Transfer Division 
Piscataway, New Jersey 08854 
paul@ctt.bellcore.com 
908-699-7461 


Hypermedia ’90 
Houston, Texas 
December 1990 



HE A VENS - IN THE BEGINNING 


Circa 1987 

Lots of software engineering documents. 
Documents are hard to relate. 

Useful information is buried and hard to find. 

+ 

Linking document parts. 
Workstation user interface. 

Hypertext strategy. 


HEAVENS - BRIDGING THE GAPS 










HEAVENS - SOFTWAREARTIFACTS 
Characteristics 

Software is relatively highly structured. 
Structure itself is a managed asset. 
Extension and maintenance are significant. 
Software is manipulated by power tools. 


KM 

Mm 

1W0 


HEAVENS - SOFTWAREARTIFACTS 



















HEAVENS - SOFTWARE ARTIFACTS 


Basic Hypertext Requirements 

Classify nodes and links. 

Visualization. 

Power tool attachments. 


HEAVENS - MCC C0A/A/EC770A/ 
GERM 

Provides many useful facilities: 
Node-and-link graphics. 

Text associated with graphical elements. 
External node-and-link schemata. 


Plug-in modules. 


HEAVENS - SOFTWARE ARTIFACTS 


Chosen for Study 

Initially: 

C language source code. 
Program configuration. 

Later: 

Object-oriented design. 


HEAVENS - C LANGUAGE 
Features 

Import / export. 
Dependency analysis. 
Automatic "make". 


13*0 



HEA VENS - C LANGUAGE [ 
Import / Export 


FILES HYPERTEXT 



rou 

Mo. 

17*0 


HEA VENS - C LANGUAG E 
Dependency Analysis 



KM 


1 7*0 


















HEAVENS - C LANGUAGE 



Purpose 


Record design decisions. 
Document object classes. 
Framework for coding. 


u*o 



HE A VENS - 0-0 DESIGN 



HEAVENS - 0-0 DESIGN 
Class Description Documents 


Class name: 
Superclasses: 
Subclasses: 

General Description: 
Member Variables: 
Member Functions: 


nm 






HEA VENS - HOW IT IS USED 
Best Selling Features 

C Language: 

Complexity assessment. 

OO Design: 

Class documentation. 

12*0 


HEAVENS - DISPLAY OVERLOAD 


HEA VENS_ - INTELLIGENT DISPLA Y 

Logical "Reasoning” 

Specifying complex operations. 

Query processing. 

Deriving new nodes and links. 

K)M 

Mm 

1300 

HEA YE NS - INTELLIGEN T DISPLA Y 
e.g. t Aggregation 







HEAVENS - INTELLIGENT DISPLAY 


Pattern Query 



HEAVENS - INTELLIGENT D ISP LA Y 
Prolog Experiments 


HEAVENS /Germ 


Selected manual operations 
on nodes and links. 

> 


< 

Proofs of how display content 
should change. 


HEAVENS / Prolog 


IW 






HEAVENS^ - SOFTWARE ARCHITECTURE 

Drivers 

Multiple hardware and software platforms. 
Extending functionality. 

Integration with other components. 


ran 

UMm 

lUO 


HEAVENS - SOFTWARE ARCHITECTURE 



ii m 















HEAVENS - SUMMARY 


Fine granularity. 

Types. 

Tool attachments. 

Logical reasoning. 
Architecture for extensibility. 


HEAVENS - FUTURg 
Busy Person Environment 

Clients demand ever increasing productivity. 

Software workers perform more diverse tasks. 

Tasks require more complex information. 

Doing it the (old) "right way " may not be humanly possible. 

KM 


12/M 



HEA\A EN^FUIVRE 
Workstation for the Busy Person 

Hot-spot identification. 

Signal what is urgent. 

Advice on resources. 

Intelligent automation. 


Collaboration support. 



Panel: Three Issues for Real- 
World Hypertext Projects 

David Gunning 

Human Resources Laboratory , Wright- Patterson AFB, OH 




INTEGRATED MAINTENANCE INFORMATION SYSTEM 



Wrlght-Pattsrson AFB, OH 










IMIS PHASE I: ELECTRONIC PRESENTATION 



Electronic Presentation System 

• Off-The-Shelf Computer 

• Presentation Formats for Interactive Display 

In-Shop Field Tests 

• Initial Test at Offutt AFB 1 984 

• Retest at Grissom AFB 1 985 

• Independent Navy Test 1 986 

Performance Results 

• 1 00% FI Success vs. 75% with Paper 

• Average Fault Isolation Time Halved 

• No False Removals 

• Technicians Preferred Electronic System 



IMIS PHASE II: FLIGHT LINE DIAGNOSTICS 



• Flight Lin* Diagnostic System 


• Portable Maintenance Aid (PMA) 


• 1 553 Aircraft Interface 


• Integrated Diagnostics / Tech Data Software 

• Authoring System for "Type C" Data 


• Flight Lin* Field Tests 


• Initial PMA Demo at MacDill AFB 

1988 

• F-1 6 Test at Homestead AFB 

1989 

• F/A-1 8 Test at Patuxent River 

1991 

• F/A-1 8 Test at Cedi Field 

1991 

• Content Data Model (COM) 


• Trl-Servlcs Specification 







CONTENT DATA MODEL 


On-Board Dtagnortka 


Ground Pr o n o t ing 


Authoring System 


Database 


NMdml 

JSZS. o JSSm 

environment 4 Ton Date 

t Elements 


Prasontation Systems 


m oter 



Content Data Modal 
Interchange Specification 


USING NEUTRAL, INTEGRATED DATA 


Dodicatod Data Fllao to Support SpocHle Praaaotatton Davteoa and 
SpodSc Uoar’a Information Roqulramonta (Include* rodundaney and 
formatting Information), 


Pa ck age at 
O- Laval Date 




Task Oriented 
Maintenance 


Training 
Course Work 


Checklists, 
Flight Manuals 


Scheduling, 
Parts Ordering 





Interactive Electronic Technical Manuals (IETM) 
Specifications 


• General Content, Stylo, Format, and Uaar Interaction 

General specification of the technical content, writing style, display 
formatting, and user interaction requirements for an IETM system. 

• Revlsable Data Baaa (Content Data Modal) 

Detailed specification of the data model (i.e., data entities, 
attributes, and relationships) required for a neutral database of 
IETM information. 

• Quality Assurance 

General specification of the quality assurance steps necessary for 
developing, validating, and verifying IETM data. 

• View Package Handbook 


IMIS PHASE III: FULL INTEGRATION 


• Fully Integrated Information System 

• PMAs + Maintenance Workstations 

• Interfaces with A/C, CAMS, SBSS, etc. 

• Information Integration Software 

• Detailed Requirements Analysis 

• Activity Model of Maintenance Functions 

• Data Model of Information Elements 

• Computer Systems Architecture 


Base-Level Field Test of IMIS Prototype 
Concept Applications Specifications 
















IMIS APPLICATIONS 


• Phase I: Electronic Technical Manuals 

• B-2 Improved Technical Data System (ITDS) 

• Phase II: Interactive Diagnostics 

• JSTARS Computerized Technical Order System (CTOS) 

• F-1 6 Type C" Retrofit 

• Army Contact Test Set for the M-1 Tank 

• Phase III: Fully Integrated System 

• ATF Integrated Maintenance System (AIMS) 

• A-12 Interactive Electronic Technical Manual System 




