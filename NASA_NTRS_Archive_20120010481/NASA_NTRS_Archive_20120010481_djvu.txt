

P Cq 




v c Q 


o 


0 


<3> v ~- 

\ e~ 


o* 

/\\ 

/ ll 

\ y 

~Qo 


Dennis G. Kapatos 
Cory Skradski 
J.D. Felkins (FELCO Solutions, Inc.) 

Date: June 6 


Creating Simple Admin Tools 
Using lnfo*Engine and Java 


planetPTC 

1 LIVE 



ESC Design Development Process Support Team 


• # 

planetPTC 

* I IUC 


The Engineering Services Contract (ESC) at Kennedy Space Center 
provides services to NASA for the design and development of flight and 
ground systems in support of manned space flight. The ESC process 
support team provides for efficient optimized design and development 
processes through development, configuration, and implementation of 
software tools, training, documentation and standards. The team of 7 
people supports over 200 engineers and design specialists using 
Windchill, Pro-E, NX, AutoCAD, and other design and analysis tools. 



Partnering To Engineer the Future 


2 



Agenda 




planetPTC 

1 LIVE 


■ Common Business Needs 

■ The lnfo*Engine and JSP Solution 

■ Process Overview 

■ Creating Info* Engine Tasks 

■ Creating JSP Pages 

■ Resources and Help 


NASA KSC 


3 


Common Business Needs 


planetPTC 


■ Get Information Out of Windchill: 

- Generate reports 

- Query Windchill for information and return it in a webpage 

- Exporting Windchill object information automatically to a 
third party application 

- Create a simple webpage for non-technical users to 
perform specific actions 

■ Create, Update, or Perform Actions on Many 
Objects At Once 

- Duplicating or renaming objects 

- Updating object contents, attributes, lifecycle states, etc. 

■ Perform Administrative Tasks: 

- Checkin or undo checkout all users’ objects at once 

- Correct or update Windchill Object links 

- Changing teams, domain polices, etc.... 



The lnfo*Engine and JSP $ 

Capabilities of lnfo*Engine and JSP 



• * 

planet ptc 

' l IVP 


■ lnfo*Engine 

- Perform many actions available in 
standard Windchill U! 

- Perform some actions not available in 
standard Windchill Ul 

■ JSP Pages 

- Provide a web-based Ul for custom tools 


5 


The lnfo*Engine and JSP Solution 


$ ♦ 

planetPTC 


Uses for lnfo*Engine and JSP 


■ How often is it used? 

- One-time use 

- Frequently performed actions 

- Automated tasks seamlessly integrated 
into Windchill 

■ Who can use it? 

- Windchill administrators 

- Specific groups 

- All users 



6 


Demonstration 


• * 

planetPTC 



Demonstration of lnfo*Engine with JSP 
■ Renaming many objects 



Process Overview 


Steps to Implement lnfo*Engine and JSP 


1 . Write lnfo*Engine Task (XML) 

2. Add XML files to Windchill 
codebase 

3. Write JSP page (HTML and 
JavaScript) 

4. Add JSP files to Windchill 
codebase 


• * 

planetPTC 

1 LIVE 



NASA KSC 


8 



Creating lnfo*Engine Tasks 

What is lnfo*Engine? 

■ lnfo*Engine - Provides a flexible, standard base foundation to automate 
specific tasks and transfers information to other third party applications. 
Info* Engine takes advantage of Service-Oriented Architecture (SOA) with 
the support for SOAP (Simple Object Access Protocol) and WSDL (Web 
Service Definition Language). lnfo*Engine tasks are in written in XML and 
do not require experience with Java. 

■ lnfo*Engine is the glue or underlying foundation of Windchill 


planet ptc 


NASA KSC 


9 



Creating lnfo*Engine Tasks 



Additional Information 

■ lnfo*Engine is installed in every Windchill installation and is free to use 
within the PTC products. 

■ No additional licenses are required unless using lnfo*Engine to connect 
with third party applications. 

■ PTC supports lnfo*Engine 

■ Does not require a skilled programmer or Java experience 

■ Easy to implement 


NASA KSC 


10 



Creating lnfo*Engine Tasks 
lnfo*Engine Architecture 




NASA KSC 


11 










Creating lnfo*Engine Tasks 


# # 

planet ptc 


Understanding Tasks and Webjects 

■ lnfo*Engine tasks are text-based xml files. They can control the retrieval 
and manipulation of data within the lnfo*Engine environment. Instead of 
developing a Java application or a JSP, a task can perform many of the 
same operations as Java applications can. 


■ A task includes Webjects to perform Windchill operations 



NASA KSC 


12 





Creating lnfo*Engine Tasks 

Understanding Tasks and Webjects 

■ The lnfo*Task compiler parses lnfo*Engine tasks and produces Java 
classes. This improves the performance of executing tasks by eliminating 
the need to parse and interpret a task each time it is called. It also 
facilitates embedding tasks in standalone Java applications and JSP 
pages. 

■ The task compiler produces the executable Java classes in three basic 
steps: 

1 . Parses task sources and generates Java code that implements the task. 

2. Calls a Java compiler to produce an executable class from the generated Java 
source. 

3. Calls a class loader to load and instantiate the classes produced by the Java compiler. 


# 

# # 

planet ptc 


NASA KSC 


13 


Creating lnfo*Engine Tasks 



planetPTC 

■ I IWC 


Structure of a Webject 

■ Webjects are the basic form to do most significant actions in lnfo*Engine. 
They are custom tag libs. Webjects supported by the Windchill adapter 
accept parameters that specify database user credentials and query 
criteria. 



* 


<ie : webject name = "Query-Objects" 
<ie:param name="IHSTANCE" 
<ie:param name="DBUSER" 
<ie:param name = "PASSWI>" 
<ie:param name = "type" 
<ie:param name="where" 
<ie:param name="where" 
<ie:param name="attribute" 
<ie : pa ram name="group_out " 
</ie : webject> 



D. User Name and Password 


type = "OBJ "> 

data="com. ptc* . pt c-training Windchill"/><— * 
dat a= "wc admin "/>■ 
data="wc admin "/> 

data="vrt . part . WTPart "/>•<— 

data="< lifeCycleSt ate=IirwORK) "/> 
data="( number =A* ) ”/> ^ 1 

dat a= "CADHame , name* . number .version. lifeCycleSt ate" delim=' 
data="object sSearched"/> A 


U— 




NASA KSC 


14 




Creating lnfo*Engine Tasks 


*• 


planetPTC* 

* I 1UE 


Webject Adapters 

■ Webjects are the basic form to do most significant actions in lnfo*Engine. 
They are custom tag libs. Webjects supported by the Windchill adapter 
accept parameters that specify database user credentials and query 
criteria. 


r 


c 

o 

E 

c <fl 

5 ® 

O Q. 

o 


< 


Type 

Webjects 

Description 1 

ACT 

Action 

Performs actions on data 

OBJ 

Object or Query 

Query the system 

GRP 

Group 

Manipulate Virtual Data Base (VDB) 

DSP 

Display 

Use data in VDB to display in HTML. This cannot be used in a 
standalone task but can be used in a JSP. 

IMG 

IMG 

Use data in VDB to create a JPEG image 

MGT 

Management 

Perform special activates such as throwing exceptions or getting 
properties 

WES 

Web Event Service 

Subscribe to and manipulate messaging topics 

MSG 

Messaging 

Subscribe to and manipulate message queues 

ADM 

Administrative 

Perform l*E admin tasks, such as reloading cached properties 


NASA KSC 


15 




Creating lnfo*Engine Tasks 


Running a lnfo*Engine Task 

■ The output of an lnfo*Engine task is in the form of XML. When running a 
task from the browser, the URL must include the host name and 
application URL prefix specified where l*E was installed. It also includes 
the /servlet/IE/tasks prefix, which directs the servlet to the task processor. 
And specifying the path where the xml task is located. 


# * 

planet ptc 


Host Name 

Prefix 

Servlet Prefix 

XML Path 

http://ptc-training.ptc.com 

/Windchill 

/serverlet/IE/tasks 

/Ext/test/queryObjects.xml 


L. 


http^/ptc trainin^.ptc.coni/Windchill/serviet/iE/tasks/exl/test/queryObjects.xnit Windows internet Explorer 


C http://ptc-tra«no.ptc.com/Windchil/scrvtet/IEAasks/ext/test/queryOb)ects.xml * | *t X 


P * 


Eck View Favorites look Hslp 


©» {search... 


& & ^hmi:«Ptc^a^.pte.com/WW*«/servteyiEfta5ks/. 


v Q, Search Web ' ^ Video | **& 0 0 ✓ 0 j 

- S3 <m ~ ±££*3* ’ & Tools • 


<?xml version =" 1.0" encoding ="UTF- 8* ?> 

<wc: COLLECTION xmlns:wc="http://www.ptc.com/infoengine/1.0"> 

- <wt. inf. container. WTContainer NAME="containers* TYPE="Unknown" STATUS="0’> 

- <wc: INSTANCE > 

<containerInfo. name >Slte</containerInfo. name > 

<obid >OR:wt.inf.container.ExchangeContainer:4:693271375- 1190160078187- 10483841- 
lOO- 150-168- 192€>ptc-training.ptc.com</obid> 

<class >wt. inf. container. ExchangeContainer < class > 

</wc: INSTANCE > 

- <wc: INSTANCE > 

ccontatnerlnfo .name >ptc</containerlnfo .name > 

<obid>OR:wt.inf-Container.OrgContainer:8970:693271375- 1190160078187- 10483841- 100- 
150- 168- 192©ptc- training. ptc.com </obid> 

<class>wt.inf.container.OrgContainer</class> 

</wc: INSTANCE > 


NASA KSC 


16 



Demonstration 


$ * 

planetPTC 



Demonstration of lnfo*Engine Task 

■ Update a objects attribute 

■ Modify Revisions of many CAD Document 

■ Updating Links between WTParts to CAD Documents. 


NASA KSC 


17 



Creating JSP Pages 


What is a JSP? 

■ Java Server Pages (JSP) is a core technology of J2EE (the Java 2 
Platform, Enterprise Edition) and solutions based upon EJB (Enterprise 
Java Beans). 

■ lnfo*Engine supports the development of enterprise custom Java 
applications and provides a JSP processor as an extension of the 
lnfo*Engine servlet engine. The JSP processor dynamically translates JSP 
pages into servlets. 

■ Usually, a JSP page is an HTML page with some additional JSP tags and 
some embedded Java code. However, inclusion of JSP tags or embedded 
Java is not mandatory, so a page containing only HTML is a legitimate 
JSP page. 

■ JSP pages that interact with lnfo*Engine usually contain a simple set of 
JSP tags and a set of custom lnfo*Engine tags that define the Webjects 
that are then executed when the page is accessed. 


planetPTC 



r> 

Creating JSP Pages % 


• * 

planetPTC 


What is a JSP? 

■ JSP pages can include HTML, Java Classes, Java Scripts, Scriptlets, and 
lnfo*Engine code (Webjects). 


■ JSP pages are resided on a server 

■ Avery simple example of a JSP page is shown below. 


HTML> 

<BODY> 

<% 

//This is a scriptlet. 

System. out .println ( "Evaluating date now" ); 
java. util .Date date = new j ava. util .Date () ; 

%> 

Hello! The time is now <%= date %> 

</BODY> 

</HTML> 


19 



Creating JSP Pages plan * tp # TC . 

•live 

Location of a Windchill JSP 

■ When lnfo*Engine is installed, the installer specifies an lnfo*Engine 
installation directory which determines where JSP pages must be stored. 

All lnfo*Engine JSP pages must reside under the codebase directory 
where lnfo*Engine is installed. 

■ All JSP pages are saved on the Windchill server at the below location. 

■ <Windchill>\codebase\infoengine\jsp\ 


NASA KSC 


20 



Creating JSP Pages 



Executing a Windchill JSP 

■ The URL to execute a JSP page includes the host name and Windchill 
application URL with “infoengine/jsp/” and the path to the JSP page. 

Example of executing a JSP page URL is below. 

http://train.ptc.com/Windchill/infoengine/jsp/examples/My_Simple.jsp 

When the file is executed, the Web Server passes the URL to the JSP 
processor. 


NASA KSC 


21 


Creating JSP Pages 

Creating a Simple JSP 

■ There are many IDE 
that help develop JSP 
pages. Some 
examples are Coffer 
Cup, Eclipse, and Net 
Beans or a developer 
could use a good text 
editor like Notepad++. 

■ To the right is a simple 
JSP page with two 
Webjects. 



<%@page language" "java" session«"false"%> 


<%Staglib uri= "http://wuu.ptc.com/infoengine/taglib/core" prefix” "ie"%> 


<ie:webject name” "Display-Table" type”"DSP"/> 


<html> 

<head> 

</body> 

<title>JSP Display</title> 


</body> 

</html> 


<ie:uebject naroe="Query-ObJects" type="OBJ"> 

<ie : par am 

name”" INSTANCE" 

dat a= "com. ptc. ptc- training. TJindchi 11"/ > 

<ie : par am 

name= "authorization" 

data=”S (6 SERVER [] AUTHORIZATI0N[0] ) "/> 

<ie : pararn 

name” "type" 

data="wt . part . WTPart"/> 

<ie:param 

name="vhere" 

data”" (lifeCycleState=INVORK) "/> 

<ie: par am 

naroe="uhere" 

data”" (number=A*) "/> 

<ie : par am 

name “"attribute" 

data="CADName, name, number, version, 

1 if eCyc leState, checkout Inf o . state, 
containerNaroe, type" delim=”,"/> 

<ie:param name="group out" 
</ie:webject> 

data=”objectsSearched"/> 

<ie:uebject name="Sort-Group" 

type="GRP"> 

<ie: pararn 

name-"GROUP_IN" 

data="objectsSearched"/> 

<ie:param 

name*"SORTBY” 

data” "name "/> 

<ie: pararn 
</ie: vebjeco 

name - "GROUP_OUT" 

data*"objectsSearched"/> 


NASA KSC 


22 


CD # * 





Demonstration 


planetPTC 



Demonstration of Running a JSP 
■ Running the My_Simple.jsp 




t http://pUHra»wiQ.ptc.con>/Wln(khi/rtoengjne/W)/e*«r()*es/f : efco_S«nple.|5p 

“ * P - 

Fie £dt View Fgvortes loots Met 

©- \itant.. •-<, Search Web - ^ Video ;«60 4,0 ✓ 0 J 

W http://ptt-trert 09 .plc cot*... i£http://ptt-trar*ig ptt.com/ EPOsptay ^JSPDuplay * ^ - Q W ' ’ > ’O 0 * 5 * 

1 “ ' “ . 

view-key version type masterRefer limber 

name checkoatlaf obtd class 

OR.^t.p«i.^TP«tMas*er 16*031693271 3?5- 

Desjgn ADesign Part 1190160078187-10483841-100-150-168- ACTUAT OR_LOCK_SL.PRT 

1 92 2ptc -naming ptc com 

VRwt partWTPart:164101693271375- 

actuator lock siprt dx 1190160078187-10483841-100-150-168- wt part WTPart 

1 92 'Qptc -training ptc com 

OR-wt part WTPartMaster 80480 6932* , 13?5- 

Design A Design Part 1190160078187-10483841-100-150-168- AIR FIL TER_C O\TR_4O0 

1 92 2ptc -tramm^ptccom 

VR.-wt.part WTP»t80642693271 375- 

aff_fflter_cover_400 c* 1190160078187-10483841-100-150-168- utpart WTPart 

192'gptc -training ptc com 

ORaaI part. WTPartMaster663 76^932"' 1 3"5 - 

Design A Design Part 1190160078187-10483841-100-150-168- ANT1_K1CKBACK_220 

1922ptc-trammg ptc com 

VRvrt part UTPart66566693271375- 

anbjodcback_220 dx 1190160078187-10483841-100-150-168- wtpart WTPart 

192Sptc-trammg ptc com 

ORrwtpart WTPartMaster8048 1 693271375- 
Design A Design Part 1190160078187-10483841-100-150-168- AL‘GER_BU 

192Sptc-trammgptc com 

VRsvt part WTPart 8067 469327 1375- 

auger bit 1190160078187-10483841-100-150-168- wt part WTPart 

192@ptc -training ptc com 

OR.nt pat WTPartMaster 1 64033.693271 375- 

Destgn A Design Part 1190160078187-10483841-100-150-168- AXLE_FASTENER_SL PRT 

192@ptc-trainingptc.com 

VRut part UTP«t 1641 18693271375- 

axle_fastener_sLprt ci 119016007818~-10483841-100-150-168- wt part WTPart 

192 Sptc -training ptc com 

OR-wt part )MPartMaster 164034 693271375- 

Design ADesign Part 1190160078187-10483841-100-150-168- AXLE_LATCH_SL PRT 

192 'gptc-training.ptc com 

VRtvtpart WTPart 164 12769327 1375- 

axle latch si prt c* 1190160078187-10483841-100-150-168- wt part WTPart 

1 92 'gptc - naming ptc com 

ORnrt part UTPartMaster 1 64035^9327 1 375- 

Design ADesign Part 1190160078187-10483841-100-150-168- AXLE_SLEEVE_SL PRT 

1 92 gptc -training ptc com 

VR-wt part WTP«t 164 109695271375- 

axlesleevesl prt dx 119016007818^-10483841-100-150-168- svt part WTPart 

1 92 ^ptc -training ptc com 


Done 

* V Trusted s*es © *M00% - | 


NASA KSC 


23 




Creating JSP Pages 


planetPTC 

' I IUC 


Using HTML and Webjects in a JSP 

■ The previous demonstration displays a table output of the Webjects results, 
but the table display is not what you want. The below images displays a 
HTML table to control the display. 


<html> 

<head> 

</body> 

<title>JSP Display</t it le> ic 

<br> 

<table border*" 1" cellpadding*" 2“ > 

<tr > 

<td>AU<INPUT type*checktoo>: ONCLICK*" selectAUL( this) “ value* checkbox narae=al lchecfebox></td> 

<td>Hame</ td><td>Humber</ tdxtd>Version</ td><td>Status</tdxt.d>State</td><c.d>Container</ tdxtd>Type</ td> 
</tr> 

<ie:forEach groupIn =r, ob jectsSearched" groupOut="row ,f > 

<tr> 

<td Xinput value*"" type*" checkbox" x/td> 

<tdxie : getValue name*” name "/></ td> 

<tdxie: getValue name* "number "/></td> 

<tdxie: getValue name* "vers ion"/ ></td> 

<tdxie : getValue name *" checkout Info . state rr /x/td> 

<tdxie: getValue name= r, lif eCycleState r, /x/td> 

•ctdxie : getValue narne =,, containerName fr /x/td> 

<tdxie : getValue name* ,, type rf /x/td> 

</tr> 

</ ie : forEach> 

<table> 

</body> 

</html> 


JSP File 
Webjects are 
located at the top 
of the page 


Page Results 


Ann 

Name 

Number 

Version 

Status 

State Container 

Type 

□ 

actuator_lock_sLprt 

ACTUAT ORLOCKSL PRT 

ADesign 

cl 

INWORK Super Lite Gotf Cart 

Part 

□ 

air_filter_cover_400 

A1R_FILTER_COVER_400 

A. Design 

c'i 

INWORK Drill - 400 Series 

Part 

_ □ 

anti_kickback_220 

ANTI_KICKBACK_220 

ADesign 

c'i 

INWORK Chainsaw - 220 Series 

Part 

□ 

auger_bit 

AUGER_BIT 

ADesign 

c./i 

INWORK Standard Parts 

Part 


axlefastenersLprt 

AXLE FASTENER SL PRT 

ADesign 

di 

INWORK Super Lite Gotf Cart 

Part 

□ 

axle_latch_sLprt 

AXLE_L AT CH_SL PRT 

ADesign di 

INWORK Super Lite Gotf Cart 

Part 

□ 

ajdesleevesLprt 

AXLE_SLEEVE_SL.PRT 

ADesign 

di 

INWORK Super Lite Gotf Cart 

Part 


NASA KSC 


24 




Demonstration 



Demonstration of HTML and lnfo*Engine in a JSP 

■ Displaying information using HTML elements 

■ Reviewing a complex JSP page 

■ Showing PTC JSP examples 


* 

planetPTC 

1 LIVE 


NASA KSC 


25 


Resources and Help 


• * 

planetPTC 



■ Adapter Guide: 

WCAdapterGuide.pdf 

■ User Guide: 

IEUsersGuide.pdf 

■ Java Adapter Development Kit: 

IEJADKGuide.pdf 

■ Java Naming Directory Interface 
Adapter Guide: 

JNDIAdapterGuide.pdf 

■ Felco Solutions Website: 

http://www.felcosolutions.com 


26 


