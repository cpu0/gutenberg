NASA Contractor Report 185151 


BEAM RIDER MODULE for an 
ARTICULATED ROBOT MANIPULATOR (ARM) 

Accurate Positioning of Long Flexible Manipulators 


M. J. Malachowsk i, Ph.D. Principal Investigator 

CCE - Robotics/Electronic Photography 

P. 0. Box 9315 

Berkeley, California 94709 


April 1990 


Prepared for 

Lewis Research Center 

Under Grant NAS 3 - 25917 


IVJ/NSA 

National Aeronautics and 
Space Administration 


(N A'' A-:. = - 

i tchla r r - 

p n ;> I T T JHI NO 

Find V ’ 1 ' ! " 
_ n t • r or i v'i> ) 


' i. > • A - i ' 

> ' i < . T F 1 >L ‘ I < <Aa”) Af. uUx AT r 

r { u rj^ FlLXI'(L r MANIPULATORS 
( r ,,1 1 uloso r onvor s i on 
i ar, ,, CSCt 0 V-. 


L>nc I jS 
02V4 71 1> 




TABLE OF CONTENTS 


TABLE OF CONTENTS 111 

LIST OF FIGURES v 

LIST OF TABLES v 

SUMMARY 1 

INTRODUCTION 2 

TRACK I OVERVIEW 5 

Positioning Detectors 5 

Beam Rider Module 6 

Active System 6 

Actuators 2 

Linear Voice Coil Motor 7 

Simplified Alternatives 8 

Mirror Mover 8 

Passive Beam Rider Module 10 

Beam Positioning Module 11 

Mirror Mover 11 

Motors and Controllers 12 

Encoders 12 

Distance Measuring Equipment 13 

Light Pulse Collision 13 

Time of Flight 13 

Interferometer 13 

Single Beam Configuration 14 

Lateral Displacement Prism 14 

Reciprocity 15 

Fiber Optics Beam Delivery 15 

Rotational Measurement Equipment 16 

TllAnr II - THE PHYSICAL ARM 18 

Elbow 1 ^ 

Shoulder Elevation Articulation 20 

Shoulder Azimuthal Articulation 21 

ARM III 21 

TRACK III - CONTROL 23 

Hardware 24 

Hardware parameters definition, 

design and specification 25 

1. High level control 25 

2. Control processing unit 26 

3. I/O Processing unit 27 

4. System memory subsystem 27 

5. Backplane, enclosure, and power supply 27 

6. Peripherals 28 

Software 2 ® 

Programs 30 

1. Device specification packages 31 

2. Device driver packages 31 

3. Action level packages 31 

4. Task level code 32 

5. Event level code 32 

6. Mission level code 32 

Target Dependent Programming 33 

iii 


PRECEDiNG PAGE BLANK NOT FILMED 



Control 35 

Adaptive Control 35 

Control Considerations 36 

Modeled System Behavior 38 

Stiffness 39 

RESULTS 42 

BR 42 

BP 42 

DME 42 

RME 43 

Elbow 43 

Shoulder 43 

Segments 44 

Hardware 44 

Software 45 

Adaptive Control 46 

Safety 47 

DISCUSSION 48 

Track I - Positioning System 48 

BR 49 

BP 50 

DME 50 

RME 51 

Track II - Physical ARM 52 

Elbow 53 

Shoulder 53 

Segments 54 

Track III - Control System 54 

Hardware 55 

Software 55 

Adaptive Control 57 

CONCLUSIONS 59 

CONCLUDING REMARKS 6 1 

APPENDIX A Segment Modeling/ Simulation Software 62 

APPENDIX B Hardware and Software Evaluated 66 

APPENDIX C ARM Model 75 

APPENDIX D Motor and Gear Model 87 

APPENDIX E Safety Assessment 98 

REFERENCES 103 

BIBLIOGRAPHY 104 

TABLES 108 

FIGURES 114 


iv 



LIST OF FIGURES 


Page in Text 

Figure 1 End tip displacement 2 

Figure 2 ARM configuration 3 

Figure 3 Sensor configurations 5 

Figure 4 Detector circuitry output 7 

Figure 5 Original beam rider configuration 7 

Figure 6 Linear voice coil motor 8 

Figure 7 Beam splitter beam rider configuration 9 

Figure 8 Mirror positioner 9 

Figure 9 BEI Fast steering mirror assembly 9 

Figure 10 Original DME plane mirror configuration 14 

Figure 11 Laser reference system 14 

Figure 12 Original RME scheme 16 

Figure 13 Preliminary ARM model configuration 19 

Figure 14 Mode contribution graph 1 19 

Figure 15 Mode contribution graph 2 19 

Figure 16A Base and Shoulder Assembly photographs 22 

Figure 16B Base and Azimuthal Motor Assembly 22 

Figure 16C Shoulder Elevation Articulation 22 

Figure 17 Software control system scheme 30 

Figure 18 Task scheduling scheme 32 

Figure 19 Robust control 37 

Figure 20 Adaptive control 37 

Figure 21 Identification/control 37 

Figure 22 Indirect adaptive control 38 

Figure 23 ARM III System configuration 45 

Figure 24a and 24b MOTGER model configuration 47 

Figure 25 ARM behavior with DC input 47 

Figure 26 ARM behavior with exponentially decay DC 47 

Figure 27 ARM behavior with ramp up DC input 47 

Figure 28 ARM behavior with ramp up DC and decay AC 47 

Figure 29 SIM1AC display for ramp up inputs 47 

Figure 30 Six degrees of freedom 48 

LIST OF TABLES 

Page in Text 

Table 1 Resonant modes for payloads 4 to 400 lb. 21, 39, 54 

Table 2 Segment model configuration 39 

Table 3 Modal frequency calculations 39 

Table 4 Stiff and flexible segment calculations 41 

Table 5 ARM MODEL data file 47 


v 




SUMMARY 


The preliminary design of a positioning system for a flexible 
Articulated Robot Manipulator (ARM) was developed, prototyped, and tested. 
The positioning system consisted of a laser Beam Positioning (BP) module and 
a Beam Rider (BR) module. The laser BP module was incorporated into the 
proximal articulation while the BR module was incorporated into the distal 
articulation. The two articulations were connected by a long hollow 
flexible segment. The concept required only a single laser reference beam. 
The system was designed for raillimetric positioning precision for each of 
six degrees of freedom over a ten meter range. 

Several physical ARMs were prototyped as testbeds for the laser 
positioning system. The physical ARM was designed with a no-degree-of - 
freedom, wrist, a one-degree-of-f reedom, elbow, and a two-degree-of-f reedom , 
shoulder, articulations; a flexible segment was used to connect 
articulations. Space rated or applicable technology was used; these systems 
were tested and evaluated under earth gravity and environmental conditions. 

An Intel 80386 based computer system was used for overall command and 
control of the ARM. The system was designed to operate under an ADA real- 
time operating system kernel. The software was of a hierarchical design; 
this programming structure was selected to provide a degree of artificial 
intelligence to the system. The software was designed for implementation on 
a dedicated VME bus based parallel processing multi-tasking computer system. 

A controller design was developed to position the ARM. The technique 
of Indirect Adaptive Control (IAC) was selected as the preferred controller 
mode of operation. Nominally, the laser reference beam was collinear with 
the segment. Forces acting on the physical ARM induced a mismatch between 
the position of the laser reference beam and the physical ARM's distal end- 
tip. The input to the controller was this end-tip mismatch under static and 
dynamic conditions. The output of the controller was the appropriate 
signals to control the torque of the motor moving and positioning the ARM. 

Initially, a mathematical model of the system was developed. 
Subsequently, a computer simulation model was constructed to predict the 
behavior of the system. The model served a dual purpose. First, the model 
was used to test and validate the mathematical assumptions made and the 
behavior of the physical ARM. Second, the model was to serve as the basis 
of the IAC. 

The model was designed to derive the contributions of the first three 
modes of vibration to the end— tip behavior. The model input variable was 
the motor driving torque as modified by the gearbox. Given the parameters 
of the system the model provided the behavior of the end tip response for 
specific inputs. By varying the input torque it was demonstrated that it 
was possible to minimize end-tip oscillations and, thereby, smoothly 
position the end-tip. 

More development is necessary to integrate these systems into a 
functioning robotic manipulator. All of the concepts necessary for 
implementation have been demonstrated. The feasibility of the approach has 
been validated. It is possible to significantly improve the utility of 
articulated robot manipulators through the use of long flexible segments. 


i 



INTRODUCTION 


There are numerous uses for articulated robotic manipulators (ARM^s) 
with long reaches and large load carrying capacities. The problem is that 
any material beam with a length L will bend when a perpendicular force is 
applied at the end. This will displace the end tip by an amount d from its 
expected position, Figure 1. 

When designing an ARM, there are two ways of dealing with this problem. 
The first is to make the segment, or beam, between articulations so stiff 
that, for the forces involved, the value of d is less than the positioning 
accuracy required. Therefore, d can be ignored. The corollary to this 
approach is that a massive segment is required to obtain this rigidity. The 
second approach is to calculate the value of d for any particular 
displacement force. These calculations are non-trivial at best and may not 
have a solutions at worst. In the latter case the equations of motion must 
be truncated and a best estimate made. The accuracy of the estimates must 
be more precise than the required positioning precision for this approach to 
work. 


Thus, the accurate positioning of long flexible manipulators is 
difficult. Because of the compliance and number of degrees of freedom 
inherent to these systems it is a formidable task to calculate the end tip 
position with precision. These calculations are possible for a static 
situation when the base position and all of the system variables and 
characteristics are known and well defined. For dynamic situations requiring 
real time control, calculations must be performed rapidly on changing 
variables. Therefore, for all but the most simple systems, the complexity 
of the calculations quickly exceeds processing power and the task of control 
becomes impossible. 

Several years ago we were funded by the Department of Energy to 
evaluate the feasibility of a laser tree trimmer (LTT). To function the LTT 
required millimetric positioning precision at distances of 10 to 20 meters. 
The beam was to be delivered through hollow segments, which would join the 
articulations, or joints. We developed a concept that used the laser beam 
both for cutting and positioning the beam delivery system. Basically, the 
laser beam was treated as an infinitely rigid structure and used to define 
the position of the end tip of the delivery system. Thus, the cutting beam 
became its own absolute reference system. 

To be meaningful the position of the end tip must be defined in six 
degrees of freedom. The impetus of this Beam Rider project was to develop a 
positioning beam rider module/system which would provide the position of a 
segment end tip with millimetric accuracy in six degrees of freedom. 

The specific NASA application of this positioning system was for an 
Articulated Robot Manipulator (ARM). The ARM would be suitable for use in 
loading and unloading experimental modules from the microgravity free flyer 
platform located in proximity of the Space Station Freedom. The goal of 
the project was, therefore, to develop the design of an ARM suitable for 
this function. 

To reach this goal a three tracked effort was undertaken. These tracks 


2 



were first, the positioning system; second, the physical ARM; and third, the 
control system. To be successful each track required novel developments and 
the use of emerging technology. The effort, as was envisioned, was unique. 
The successful development of this positioning concept opens a new area of 
robotic control and manipulation. This is significant because it is no 
longer necessary to restrict ARMs to short rigid, and heavy, segments just 
to gain micrometric positioning accuracy. 

The purpose of this project was to investigate the feasibility of the 
design of an inertia-less two segmented ARM. The ARM would have a ten meter 
reach and be capable of position a 100 kilogram payload under 
microgravimetric conditions with millimetric precision. Eventually, the ARM 
would be suitable for use in the space environment conditions of the free 
flyer of the space station. 

We proposed to develop a ground based prototype ARM suitable for 
testing and evaluating the concepts being developed for the space based 
ARM, Figure 2. The information, data and experience gained from the 
construction and operation of the ground based ARM was to be used to develop 
a preliminary design for a space rated ARM suitable for testing under 
microgravimetric conditions . 

The effort was divided into ten systems or research areas. These were: 
Track. I - Positioning System 

1. Positioning Beam Rider Module - The system that sits on a 
segment's distal end tip and tracks and monitors the beam position. 

2. Beam Positioning Module - The system that sits in the 
segment's proximal end and directs the beam at the distal end tip. 

3. Distance Measuring Equipment - The system that measures the 
length, or changes in length, of the segment. 

4. Rotational Measuring Equipment - The system that measures the 
rotation of the segment, end to end. 

Track II - Physical ARM 

5. Elbow - The single degree of freedom mid-joint or 
articulation of a two segment manipulator. 

6. Shoulder - The base joint or articulation with two mutually 
orthogonal axes of rotation. 

7. Segments - The physical connection between two articulations. 
Track III - Control System 

8. Hardware - Computer system and associated circuitry required 
to interface with the positioning system, the physical ARM, the 
operator, and to run the control programs. 

9 # Software - Instructions to the computer that let it recognize 


3 


current events and direct the motion of the ARM. 


10. Adaptive control - The program which senses the behavior of 
the ARM and modifies its behavior to perform the requisite tasks. 

In order to function the ARM requires the integration of these systems. Our 
approach was to develop each system separately but compliant to and 
cognizant of the requirements, parameters and characteristics of each 
system. Each system had to be modified to function under the constraints 
imposed by the other systems. The end result was a compromise between 
systems to provide the best overall performance. 


4 



TRACK I OVERVIEW 


The purpose of this project was to develop a Beam Rider Module (BR) 
suitable for incorporation into an Articulate Robot Manipulator (ARM). The 
concept under investigation utilized a pair of systems. The first was the 
positioning system and the second was the physical ARM. 

The initial portion of the positioning system was referenced at the 
shoulder base of the ARM and at the elbow articulation. Between these two 

points the system was nominally collinear but separate from the physical 
ARM. The positioning system served as an absolute point of reference while 
the position of the physical ARM was relative to this reference frame. The 
physical ARM could, therefore, be flexible between these two points. 

The elbow articulation was a rigid assembly. It connected the proximal 
and distal segments and positioning systems. Thus, the elbow must be stiff 
or rigid. The Elbow and wrist were connected by a flexible segment. 
Concentric to this was the positioning system; which served as the rigid 
frame of reference. 


Positioning Detectors 

Central to the positioning of a laser beam was the detector. The 
detector was a sensor sensitive to the wavelength of light produced by the 
laser. Five different sensor configurations were evaluated, Figure 3. 
These were: 

1. Rectangular Matrix - A matrix of sensing elements arranged in an 
x-y format. 

2. Annular Matrix - A matrix of sensing elements arranged in a polar 
coordinate sys tem. 

3. Quadrant - A 2 x 2 rectangular matrix 

4. Quadrant with orifice - A 2 x 2 matrix with a central orifice or 
hole. 


5. Lateral Effects diode - A nominally square sensor with connections 
at the edges; the output at each edge is proportional to the position 
of the beam on the detector. 

The rectangular matrix detector was the first to be evaluated. We used 
a charged coupled device with raster scanning. The output was digitized 
and stored as pixels in computer memory. In general, the beam would 
stimulate a number of pixels. Two tasks were required to determine the 

position of the beam. The first was to locate the stimulated pixels. The 
second was to determine the centroid of the beam spot. The problem factors 
to one of image recognition. The computational power require to solve this 
problem was considerable. Because of the large computational requirement 
this approach was determined to be unfeasible. 

The annular matrix suffered from the same basic problems as the 
rectangular matrix. However, because of the polar coordinate system, the 
output was more directly applicable and, therefore, required one less 


5 


transformation. Unfortunately, this configuration was not a standard 
commercial item and the cost of custom fabrication was excessive. 

The quadrant detectors worked well, were of quick response, and 
were, generally, inexpensive. The drawback of these detectors was they 
basically provide only the direction of movement and not much information 
on the magnitude of the movement. As long as the beam spot was smaller than 
any single sensor element, position displacement equal to the diameter of 
the beam can be extracted from the decoder circuitry. 

The quadrant detector with a central orifice worked well, were of 
fairly quick response, and were, generally, inexpensive. They suffered from 
the same lack of position offset information as did the quadrant detectors. 
Additionally, because of the large central orifice, their output was less 
linear, and they tended to have more dead space. In general, the size of 
the elements were larger than other quadrant detectors and, thus, their 
capacitance was larger and they had a concomitant loss in response speed. 

The lateral effects diodes had the best of all characteristics. They 
had a high spatial resolution, typically 2000 x 2000. They had a quick 
response time. They were insensitive to spot size and shape; their 
operation automatically integrates stimulus information to provide a single 
x-y position value. The major drawback was cost. A two centimeter square 
unit with a central one centimeter highly accurate linear region cost 
several thousand dollars. A second drawback was stray light. Because of 
the nature of its operation, any stray light striking the detector was 
integrated with the light from the beam. Subsequently, the apparent 
position of the beam at the output was shifted. 

We evaluated several lateral effects diodes from different 
manufacturers. We determined that the unit produced by Hamamatsu functioned 
well with HeNe laser light. Resolution was within that specified by the 
manufacturer. The unit maintained its accuracy for reasonable beam spot 
sizes and shapes, i.e., centroid shapes much smaller than the total detector 
size. 


Beam Rider Module 

Two sets of design schemes for the BRM were evaluated. One set was 
active systems that required actuator movement of an assembly that tracked 
the laser beam. The second set were passive systems that relied on optics 
and detectors to track and monitor the laser beam. Initially, to compare 
and evaluate these two types of scheme we planned to place the active system 
in the proximal portion and the passive system in the distal portion of the 
ARM. 


Active Systems 

The first active system concept evaluated used a quadrant detector with 
a central orifice. When the beam was aligned, it passed through the hole. 
The penumbra of the beam uniformly illuminated all four quadrants and 
produced signals of equal intensity from all four quadrants. When the beam 
shifts, the quadrants were mismatched in signal intensity. This mismatch 
information was converted to provide the x or y offset values. 


6 



The second system evaluated used a quadrant detector. A beam splitter 
was used to split a portion of the reference beam out to this detector. Its 
operation is similar to the previously described detector. 

We have prototyped electronic circuitry for these detectors. The 
circuitry was analog and, therefore, fast. Its performance, In general, 
exceeded the response times required to monitor third order modes of 
vibrations induced into the segments under consideration. The major problems 
were associated with the high frequency ability of the circuitry. There was 
a tendency for high frequency oscillations to develop and degrade the 
performance of the circuitry. The filtering capacitors required to bypass 
these oscillations tended to degrade the performance of the circuitry. The 
result was a balance between the need to prevent unwanted oscillations while 
maintaining the required frequency response. Thus, the final design was a 
compromise between these two factors. 

The outputs of the detector circuitry were a x value, a y value, and a 
signal intensity value, Figure 4. In operation, the x and y values were 
sent to the actuators which move the assembly which serves to position the 
laser beam. They were also routed to the computer to provide information 
about the position of the laser beam. The signal intensity value used by 
the Rotational measurement (RME) system. 

A number of designs were evaluated for the BR assembly. The initial 
requirements for this system were an x,y travel over a 5 cm diameter circle 
at a speed faster that generated at the distal end tip by the principal 
modes of vibration of the system. Additional constraints were subsequently 
imposed by the operation of the DME and RME subsystems. 

Actuators 

We have evaluated several actuator designs. Concepts evaluated were 
either electromagnetic or piezoelectric in nature. The electromagnetic 
actuators included rotational and linear motors, solenoids, and voice coils. 
A significant problem was the linkage between the actuator, the assembly, 
and the the ARM. Assembly linkage was either direct or through a mechanical 
actuator. 

The initial configuration consisted of two detectors, each with a pair 
of actuators, and a mirror. The reference beam entered the assembly, 
activated the detectors, bounced off of the mirror and return upon itself. 
Figure 5. 

The difficulty with implementing this design was to develop a scheme 
which would allow positioning in four independent degrees of freedom, xlyl 
and x2y2. We evaluated, trade studied, and ranked the possible 
actuator/linkage combinations. The preferred actuator design was a 
variation of a linear motor/voice coil; a linear multi-element voice coil. 

Linear Voice Coil Motor 

In operation a cylindrical magnet slid through a hollow central core. 
A stiff flexible wire connected the magnet to the BR assembly. Individually 
driven coils of wire were wrapped around the core. Each coil was driven 
separately, the magnitude and polarity of the current could be varied, as 


7 



required , to position the assembly* Colls could operate in tandem or 
opposed, as required, to generate the necessary positioning forces. 

We prototyped a hollow core 20 coil 10 turn unit which was 1.5 cm in 
length, Figure 6. Each coil had a bipolar drive circuit with a +/- 5 
amp current capability. Each coil's current driver was regulated by 
electronic circuitry which functioned as the controller. In operation the 
controller created a "waveform" . (The waveform can be represented as a map 
of current in each coil as a function of distance along the axis of the 
motor.) The waveform could be tailored to provide the optimum driving and 
holding force. (Example are sinusoid, triangular, or square waves.) The 
waveform was stored in memory and was reconf igurable. In operation, the 
waveform was transposed along the axis of the motor to move the magnetic 
slug and, thus, the assembly. 

As mentioned above the controller had two functions. The first was to 
create the required waveform and the second was to transpose the waveform. 
This transposition was used to move the magnet along the axis of the coil 
and thus position the beam rider. We designed a pulse width modulated 

driver capable of performing these tasks. Twenty integrated circuit chips 
were required on the interface board and the control required the dedicated 

use of an 8088 based computer system with appropriate I/O lines and 

interfacing. Position sensing was a separate set of circuitry. 

At this point an assessment was made as to the feasibility of 

continuing with this approach. While the design functioned well, the 
complexity and hardware requirements were deemed to be beyond the capacity 
of the project. Therefore, this approach was dropped. 

Simplified Alternative 

We have subsequently developed an alternative ARM III beam rider 
configurations. Because of the constraints involved, i.e., the mechanical 
linkages between articulations, it appeared possible to simplify the 
detector assemblies. Because of the attachment of the segment to the 
articulation at the proximal end, the angular offset at the distal end was a 
function of lateral displacement. Thus, a feedback loop involving a mirror 
on the distal end of a segment and a quadrant detector on the proximal end 
of a segment could provide information about the location of the distal end 
tip. 


Therefore, we should be able to measure mirror position relative to 
the articulation to define two angles to specify two degrees of freedom. 
Thus, for microgravity environments we could use a single quadrant detector 
at the base and an active mirror in the beam rider module. The current 
driving the mirror's positioning coils provided a method of measuring the 
deflection force. Unfortunately, on earth the gravitational force on the 
beam rider varied with position. Thus, driver current was ARM orientation 
dependent and a second detector was required. 

Mirror Mover 

To simplify the BR assembly we developed configurations In which the 
detectors were fixed and only the mirror would be required to move. The 
beam would be split by a beam splitter and the different portions of the 


8 


beam used for different purposes, Figure 7. Several mirror mover 
configurations, Figure 8, were evaluated, trade studied, and ranked. These 
were motor driven, electromagnetic, and piezoelectric. 

The highly ranked commercially available units were evaluated. Several 
units were found to be too expensive for this project. One possible solution 
was a Fast Steering Mirror (FSM) mover of the type built by the Ball 
Aerospace Company. They indicated that the requisite parameters can be meet 
by their units. These units appeared somewhat expensive. For $100 to $200k 
they could deliver a unit in 9 to 12 months. For $500k they could provide a 
unit more quickly. 

Micro Pulse Systems has developed a two axis piezoelectric mirror 
positioner which appears to feasible for use in the BR. They are in the $3- 
5000.00 range. Unfortunately, they will not be ready to ship until after 
the end of this project. Therefore, this was not a viable alternative. 

Two units were purchased and evaluated in house. The first was the TU 
- 216 two axis served 4 inch mirror assembly built by General Electric. 
This unit has a roll excursion of +/- 20 degrees and a Pitch of +/- 7 
degrees. It was evaluated for use in both the BR and the BP. For the BR 
there were several problems. First, it size and mass limited its response 
to the first and, possibly, the second modes of vibration of the physical 
ARM. Second, its geartrain had backlash which limited its high speed 
performance fine positioning utility. For the BP it had too limited a range 
of motion. 

The second was the LA08-05 A linear actuator built by BEI Motion 
Systems Company. Significant effort was required to make this unit 
operational. There were three needs; power supply/dr iver circuitry, 
positioner mounting assembly, and flexible pivot. 

The BEI unit consisted of two pieces. The base consisted of an 
assembly holding four magnets arranged in a quadrant. Four holes were 
spaced around the periphery. Two of these holes were tapped and were used 
to mount the base. The other two holes holes were used for guide pins 
during system assembly. A central orifice allowed the passage of the 
flexible pivot, Figure 9. 

The second part was the voice coil assembly. It contained four voice 
coils which slipped over the four magnets mounted on the base portion. A 
central orifice was used to mount the flex pivot. A mirror was mounted on 
the front surface of this assembly. 

Two +/- 0.5 amp current supplies were required to drive the positioner 
in two axes. A pair of regulated +/- 15 volt supplies were used to supply 
each driver circuit. A voltage controlled current amplifier was used to 
drive each pair of coils which position in one axis. Absolute linearity was 
required to ensure absolute positioning. Frequency response was greater 
than one kilohertz to allow control of third order modes of ARM vibration. 

The assembly holder performed two functions. First, it held the base 
portion of the positioner. Second, it held the flex pivot. A pair of holes 
through the holder allow passage of a pair of 2-56 screws which screwed into 
the base. A tapped (2-56) central orifice in the holder was used to hold 


9 



the base of the flex pivot assembly. 

The flex pivot consisted of three pieces soldered together. The base 
portion consisted of a threaded tube which screwed into the assembly holder. 
The voice coil end consisted of a 1/8 in tube. The top of the tube necked 
down to 7/64 in to pass through the central orifice of the voice coil 
assembly. The top of the necked downed area was threaded and a nut was used 
to affix the voice coil assembly to this tube. The center portion of the 
flex pivot consisted of seamless BeCu tubing obtained from Uniform Tubes 
INC. The maximum angular travel ranges from +/- 20 to +/- 50 milliradians , 
depending on the location of the joint between the flex pivot base and the 
BeCu tube. The maximum obtainable deviation was also dependent upon the 
stiffness of the tube. 

Assembly required the base portion of the pivot to be screwed into the 
assembly holder. The BeCu tube was then soldered to this. The base was 
then mounted to the assembly holder. A sixty thousandths inch spacer was 
placed between the base and voice coil assembly. The voice coil end of the 
pivot was mounted to the voice coiled assembly and slipped over the 
protruding BeCu tube. The two alignment pins were placed in the base to 
align the voice coil assembly. The BeCu tube was then soldered at the voice 
coil assembly end. The assembly holder was removed, the unit was 
disassembled and the spacers and pins were removed. The unit was 

reassembled and subsequently ready for use. 

For testing purposes the unit was controlled with a two axes joy-stick. 
A laser beam was reflected from the mirror onto a sheet of graph paper. The 
x and y drive currents were monitored on an oscilloscope. The beam 
position was then plotted as a function of input. 

In operation the unit was interfaced to the output of a quadrant diode. 
As the beam was displaced from the center position, a feedback loop was used 
to drive the mirror positioning unit to center the beam. In practice this 
was used to keep the reflected beam collinear with the incident beam. 

Initially, the system was unstable. This was traced to several sets of 
problems. One set involved instabilities and oscillations in the 
electronics. Several generations and revisions of the electronics were 
necessary to stabilize and compensate the circuitry. The second set was 
with the mirror mover. 

Some of the problems with the mirror mover were linked to the flex 
pivot. We evaluated many schemes for mounting and holding the pivot at 
either end and different solid and tube materials for the pivot. We were 
able to obtain a gradient of sizes of precision flexible tube which allowed 
the development of an adequate flex pivot. 

Because we still had problems with linearity and hysteresis, we 
disassembled and returned the mirror mover to BEI for evaluation. They 
cleaned and recalibrated the unit. The unit was returned in early July of 
1989 and was found to have improved performance. 

Passive Beam Rider Module 

The passive BR used a lateral effects diode to provide the x and y 


10 



coordinate position of the laser beam. The electronics were similar to that 
used for the quadrant detectors and produced the same signals. The 
specifications for a REVISION 2 design of the electronics for the lateral 
effects detector were finished. Parts have been selected which increase the 
circuit's performance and simplify the circuit calibration tasks. A printed 
circuit board layout/ tape-up was made which can be used to produce printed 
circuit boards in the future. 

To evaluate the linearity of the lateral effects diode we constructed a 
test jig. The jig consisted of a precision x-y table. The table was moved 
by stepper motors under computer control. The position of the drive shafts 
were sensed by medium resolution encoders. The resolution of the encoders 
was five times the resolution of the motors. The five micron accuracy of 
the system allowed us to map the linearity of the diodes to the values 

specified by the manufacturer. 

We conducted tests to determine the sensitivity of the diode and 
circuitry to laser beam spot size, uniformity, and intensity. We found that 
the positioning ability were in conformity with the manufacture's 
specifications. The unit nicely integrated various size and shaped beam 

spots to provide a single position for the centroid of the beam. 

We prototyped and evaluated the optics for the passive BR. The design 
of the optical components required for the lateral effects diodes was 
minimal. The difficulty was incorporation of elements for the DME and RME 
systems. 

We evaluated several optical configurations for the beam rider. We 

prototyped a simple beam rider for use on the distal segment tests. A pair 
of zoom lenses were configured to demagnify the beam over a 5 to 10 cm 
working aperture. The demagnified beam was incident upon the lateral 
effects diode. 

We have developed a more simple optical design suitable for use as a 
simple telescope. A pair of aspheric lenses can be used to demagnify the 
input aperture to a dimension compatible with the parameters of the mirror 
and detector. (These factors are a function of the deflection of the 

segment when it is in operation.) Spherical optics required a greater 
number of lenses and, therefore, more reflective surfaces, with a 
concomitant lose of signal. 

However, because the current DME signal is very weak, no focusing 

optical elements can be inserted in the beam path. ARM IV will require 

antireflection coatings and a dielectric mirror to improve beam transmission 
and reduce beam loses. 


Beam Positioning Module 

Based on the proposed positioning accuracy we determined the resolution 
required of the Beam Positioning (BP) module. For millimetric accuracy at 
10 meters this was found to be on the order of 5 arcseconds. We, therefore, 
specified resolution and repeatability of the components to be in the 1 to 5 
arcsecond range. 


Mirror Mover 


11 


"r *--“-***«« ocvci.<ii mirror movers which met our required 
specifications. These were evaluated, ranked, and trade studied. The top 
ranked units were produced by BEI motion control and Aerotech. BEI has 
produced a space rated unit for the space telescope project. BEI has a 
downgraded a comparable unit for earth based applications; it was too 
expensive to purchase for Phase II, but would Integrate well with Phase III. 

Aerotech produced a two axis positioner which was quite close to the desired 
specifications. 

The Aerotech unit had several drawbacks in terms of configuration and 
resolution. We negotiated with them for some modifications to the stock 
unit and for their selection of components from a production run which 
exceeded the nominal resolution and repeatability specifications. 
Subsequently, we purchased this unit. 

This two axis positioning unit was evaluated for two modes of 
operation. The first was to project a laser beam through a central orifice 
onto a mirror which would reflect the beam down the center of the segment. 
The second was to mount the interferometer launch optics directly on the 
positioner. Based on development of the Distance Measuring Equipment (DME) 
the second mode of operation was selected. 

Motors and Controllers 

Included with the Aerotech positioning unit were stepper motors and a 
reducing gear train. A pair of American Precision Industries CMD-310 
microstepper drivers were purchased to drive the stepper motors. Because of 

backlash In the gear train, a closed loop control system was determined to 
be required* 

Interface circuitry for the motor controllers was designed, prototyped, 
and tested. The electronic were set to respond to computer input or to be 
controlled by panel switches for step and direction. 

Encoders 

We identified half a dozen encoders which provided arc second 
resolution. These were evaluated, trade studied, and ranked. The top 
ranked unit was the Canon R-2A laser rotary encoder. It provided a 64k 
ncremental and a 256 gray scale output* The incremental output was run 
through an interpolation board to provide 1 arcsecond resolution* The gray 
scale output was available to provide 2 degree resolution in the event of 
power failure and during startup. 

A pair of the Canon encoders were purchased. These were mounted on the 
Aerotech positioner and coupled to the positioner positioning shafts. The 
unit was tested and evaluated. It was found to be within the system 
specifications. J 

Interface circuitry for the encoders was designed, prototyped, and 
tested. The output can be routed to the computer or to front panel display 
lights. The lights represent the bit count from the interpolation board; 
they provide a visual presentation of the beam position. This display in 
conjunction with the stepper motor control switches allow manual operation 


12 



of the BP. 


Distance Measuring Equipment 

Several concepts for measuring the length of the segments were 
evaluated. Because of the ultimate objective of space operation only 
systems which could function in a vacuum were evaluated. Three conceptual 
designs were produced. 


Light Pulse Collision 

The first design was the light pulse collision system. In operation a 
laser light pulse would be produced and split into two packets. One would 
be launched down the center of the segment and the other into a fiber optic 
routed to the distal end of the segment. At the distal end of the segment 
would be a rectangular block of a non-linear crystal, e.g., LiNbO. 

The light pulse traveling up the segment would enter from one end while 
the light pulse traveling along the fiber optic would enter the other. The 
path lengths would be adjusted such that the pulses would meet within the 
block. Upon collision the pulses would generate a harmonic light pulse 
which would exit the block transversely to the stimulus pulses. Detectors 
mounted along the side of the rectangle would sense the position of the 
pulse. This distance would correspond to segment length changes. 

The light pulse collision concept had several advantages. It would be 
an absolute measurement system with relatively few parts. Unfortunately, as 
the segment flexed, the alignment would be lost. Thus, aligning the beams 
to overlap became a major problem. Additionally, we were not able to locate 
anyone who had actually demonstrated this system. Work was terminated on 
this approach to concentrate on the other approaches. 

Time Of Flight 

The second design was the time of flight concept. Like LIDAR, a pulse 
of photons would be launched along the segment. They would be reflected at 
the distal end by a mirror, or concentrated into a fiber optic for return, 
and sensed by a detector. The time between the input and output pulse would 
be processed to provide an indication of the flight time and, thus, the 
distance. There were numerous advantage to this scheme and it should be 
seriously considered for future generations of the ARM. 

Unfortunately, for our purposes there were several major drawbacks. To 
provide the required measuring resolution would require a timing resolution 
on the order of 3 - 5 picoseconds. Commercially available components and 
systems would have cost $ 50,000 - $ 100 , 000 ; this exceeded the project 
budget. Recently, progress in GaAs devices and solid state lasers has 
reduced the estimated system price considerably. 

Interferometer 

The third system design utilized laser interferometry. A laser light 
beam is split in two. One beam travels along a movable path length, is 
reflected back to its source, and interacts with the other reference beam. 
As the path length changes, the phase between the two beam changes, which 


13 



causes fringes of light and dark. By counting these fringes it is possible 
to accurately, nanometers to microns, determine distance traveled. A system 
available through Coherent Radiation Laboratories was priced within the 
project's budget. 

A major problem was the need for the incident and return beam to 
parallel and separated by 1 cm.. Under normal operation, distance was 

measured to a retrof lector • The retrof lector reflects the beam parallel to 
the incident beam. To function the beam must be reflected and displaced by 
one cm from the incident beam. Lateral movement of the retroflector changed 
this spacing and the system stopped functioning. 

Because there was significant lateral movement of the beam rider we 
needed to modify the retroflector configuration. We evaluated several 
schemes for accomplishing this. 

Single Beam Configuration 

The most simple used a plane mirror to reflect the incident beam to a 
point close to the interferometer at the proper spacing, Figure 10. The 
difficulty was that this beam was not parallel to the incident beam. To 
correct for this angular error the beam was passed through a pair of 
rotatable wedges so that the exit beam was parallel to the incident beam. 
We determined that the required parallelism was less than 5 arcseconds of 
deviation. Within this deviant cone we found marginal operation. 

The second scheme used a piece of calcite to laterally displace the 
return beam from the incident beam. This scheme was polarization sensitive. 
The beam was rotated by a 1/4 wave plate before and after striking the 
mirror for a total of 90 degrees rotation. In principal this scheme would 

work and we were able to demonstrate it for small displacements. For a 1 
cm. beam displacement we required a 10 cm length of optical quality calcite. 
In actuality the high price and total unavailability of optical quality 
calcite of sufficient length made it impractical. 

Lateral Displacement Prism 

The third scheme used a pair of polarization sensitive beam splitting 
prisms. This system was similar in operation to the calcite system. We have 
called this concept the lateral displacement prism. The reflected beam was 
collinear with the Incident beam and subsequently displaced as required in 
front of the interferometer, Figure 11. 

There were two methods of construction for the lateral displacement 
prism. One was to cement two polarization beam splitting cubes together. 
The second was to use a parallelogram with two triangular prisms cemented to 
each end to form the rectangular lateral displacement prism. We solicited 
quotations for each configurations and determined that the first method, 
which used stock items, was the most cost effective. 

Although the use of the lateral displacement prism produced the 
requisite parallel displaced beams, the system would not function. We 
constructed a fiber optic break out box for the interferometer's outputs. 
The light beams from the red and green coded fiber optic leads must be 90 
degrees out of phase and of equal amplitude for the system to function. The 


14 



extra centimeter path in glass of one leg of the measurement beam was 
sufficient to alter the phase relationship of the beam. We found that this 
could be corrected by placing and additional 1 cm. beam splitting cube in 
the return light path. 


Reciprocity 

The phase change phenomena illustrates the principal of reciprocity in 
the DME system. As long as any transforming element effects both beams 
equally, the system functions. Transformation to either beam alone shifts 
the phase and must be compensated. An illustration of this principal in 
operation was our attempts to collimate the return beam. One purpose of 
collimating the beam was an attempt to pass the return beam through the 
center orifice of the quadrant detector. Our attempts to accomplish this 
were unsuccessful because this operation was performed on only one beam. On 
the other hand our attempts to demagnify the beam at the distal end tip 
before striking the mirror (this approach allows the use of a smaller mirror 
and spatial detector) were successful because we were transforming both 
beams, incident and return, equally. 

Fiber Optics Beam Delivery 

Our first interferometer used a standard configuration of a laser 
producing a beam which propagated out to a retroflector and was subsequently 
reflected back towards the laser. The interferometer head was mounted in 
the beam path perpendicular to the beam. The perpendicularity requirement 
made the alignment of the interferometer difficult. The need to fold the 
beam with a mirror at the shoulder articulation compounded the difficulty 
both in interferometer alignment and operation and in the configuration of 
the BP module. 

We decided that a preferred beam delivery system would use a fiber 
optic to transport the beam from the laser to the interferometer head. A 
more advanced design would use a fiber optic to return the beam from the 
distal segment end to the interferometer. The former concept should work 
without much difficulty because it does not violate reciprocity. 

We specified a 5 meter polarization maintaining fiber for use with our 
system. It contained integrated receive and launch optics at the ends and 
was armored. Basically, the cable functioned. Unfortunately, with physical 
movement of the cable, there was some transfer between polarization modes. 
Therefore, although the beam entered linearly polarized, it exited with two 
components, the magnitudes of which depended upon cable orientation. This 
problem was solved by placing a polarizer in front of the interferometer. 
However, the magnitude of the intensity of the incident beam was then 
dependent upon the orientation of the beam delivery cable. Therefore, the 
output was not constant and could not be considered so for the rotation 
measurement equipment (RME). 

The addition of the fiber optic delivery system significantly 
attenuates the beam intensity. We were able to operate the system with the 
lateral displacement prism over a 10 meter range. However, a 10Z 
attenuation of the beam caused a loss of function. This restricts both the 
use of additional optics in the beam path and the maximum range of rotation. 


15 



Ro tational Measurement Equipment 


Several schemes for this system have been evaluated. JPL is developing 
a high resolution angular gyroscope which uses interferometric and fiber 
optic methods to measure small angular variations. We have inspected their 
prototype and discussed the incorporation of their design into the ARM. 
Currently, this unit is still under development. We are tracking progress, 
although it appears as if several more years will be required before the 
unit is completely operational. 

The other schemes relied upon beam polarization. The technique was 
relatively straight forward. Basically, an analyzer was used to examine the 
polarization planes of the beam. Any rotation of the BR manifested itself 
as a change in intensity of the analyzed polarized beams, Figure 12. 

The incident beam from the interferometer was polarized. A double pass 
through a waveplate shifted this polarization. One analyzer was mounted in 
front of the interferometer. Any rotation of the BR shifted the plane of 
polarization, which was split by the analyzer and measured by our detector. 
These output signals were used to provide a measure of the rotation. For 
calibration the mirror mover was coupled to our rotational encoder which is 
capable of 2 exp 21 bits (one arc second) of resolution. The difficulty was 
integrating this system with the rest of the BR, the DME, and the data link. 
The final configuration of the DME system required a reconfiguration of the 
RME • 


Based upon the final design of the DME system a RME configuration was 
developed. The single beam passing down the segment passed twice through a 
quarter wave plate. This operation was required to rotate the beam 
polarization by 90 degrees and cause the double reflection in the lateral 
displacement prism and the resultant 1 cm. beam displacement. The operation 
of the quarter wave plate was orientation dependent. Any rotation of the 
waveplate caused an incomplete shift (less than 90 degrees) in beam 
polarization. Such an incomplete rotation resulted in a portion of the beam 
passed straight through the lateral displacement prism while the rest 
underwent the double reflection and displacement. Therefore, the intensity 
of the return beam to the interferometer was dependent upon the orientation 
of the distal quarter wave plate* 

When the distal wave plate was mounted on the distal portion of the 
segment, e.g., at the elbow, any rotation of the segment also rotated the 
distal wave plate. This rotation resulted in a change in intensity of the 
return beam to the interferometer. Fortunately, the effect around maximum 
was flat, i.e., rotation +\- 2 degrees about the maximum resulted in a very 
small change in intensity. For example, a rotation of 2 degrees resulted in 
a change in 2 mV from the sum amplifier of the quadrant detector. A 
rotation of 10 degrees resulted in a change of 100 mV. Unfortunately, this 
change was not linear. 

Therefore, while we had a means of measuring rotations, there were two 
problems. First, the intensity of the output or incident beam was of 
variable intensity due to movement of the fiber optic cable. Second, the 
change of beam intensity due to rotation of the distal wave plate was non 
linear. 


16 



To solve the first problem we resorted to the same Integrated circuit 
divider solution that was used in the quadrant detector decoding circuitry. 
A detector was mounted to intercept the light beam reflected at right angle 
from the lateral displacement prism as the incident passed through the 
prism. This beam served as the reference beam and provided an indication of 
the intensity of the incident beam. The sum signal from the quadrant 
detector (picked off of the compensating polarizing beam splitter placed in 
the return beam path) served to indicate the intensity of the return beam. 
Theoretically, for any given orientation of the distal quarter wave plate, 
the ratio between these two beams was constant even if the intensity of the 
input beam varied. 

In practice several other problems surfaced. First, the linearity of 
the two detector systems was not the same, i.e., the detectors were not 
matched in their response. Therefore, for a change in incident output beam 
intensity, the ratio did not remain constant. Solutions to this problem 
include matching the detector responses and adding compensation circuitry, 
or both. Second, the electronics were not optimized and the circuitry 
tended to be unstable. Solutions to this problem include redesign of the 
circuitry and adding compensation, or both. 

Once the ratio output is stabilized for variation of beam intensity, 
changes in the ratio value will represent rotation of the distal quarter 
wave plate. These values must then be mapped to angular displacement. This 
can be done in a computer lookup table. 

A further problem was the dynamic range of the detectors. Given the 
values of intensity variation with rotation around maximum, sensors with 
dynamic ranges of 7 or 8 orders of magnitude are required for arcsecond 
resolution. The best we have been able to obtain were in the 6 orders of 
magnitude range. However, with biasing, it may be possible to change the 
operating points efficiently to obtain the required dynamic range. 


17 



TRACK II - THE PHYSICAL ARM 


Our work started with the preliminary calculation of system parameters 
and physical attributes of the two segment, 3 degree of freedom ARM III. 
Next we constructed a single degree of freedom ARM, which was a modification 
of the testbed previously referred to as ARM II. Ultimately this structure 
served as the model for the elbow and distal segment. 

A model (SIMI, Appendix A) was created to determine rough estimates of 
the segment sizes for ARM III. Calculations were made which provided 
approximate estimates of the first three modal frequencies of a flexible 
segment 7 meters long and carrying a 100 kg. payload. These were the basic 
assumptions which we made on the segment sizing and the payload capacity of 
the segments of the proposed space station arm. 

The diameter of the segment was selected to meet several of the criteria 
and parameters of operation. We made a number of assumptions about payload, 
ARM mass and acceleration. The basic criteria was that the segment would 
not bend more than one diameter at maximum acceleration. We based our 

calculations on a cylindrical model. We determined that the smaller the 

1 S 7T ent » the thlCker the wal1 of the se S ment needed t0 be. 

The thicker the wall, the greater the mass of the tube. As the diameter of 

the tube increases, so does the total mass. A diameter of 10 - 15 cm was 
determined to be the optimal range. Wall thickness and material were 
selected to carry the requisite loads. 

In addition to possessing favorable dynamic characteristics, the 

uirh C A al th u® construction of the arm segments must be able to 

withstand the harsh environment of space. (For example, since large 

temperature extremes are common in space, the appropriate material should be 
somewhat immune to large changes in its dynamic character due to these 
temperature variations.) We prepared a candidate list of materials. We 
requested information on the above materials from manufacturers to evaluate 
the usability and availability of tubes of these dimensions. 

A tube "hich is 7 meters (23 ft.) long and 12.5 cm. ("5 in.) in diameter 
was not standard but could be manufactured by an extrusion process. Rough 
estimates of the prices of such tubes were about $250 for aluminum, $1250 
for titanium and roughly $100,000 for beryllium. Another candidate with 

e , Pr0P % Ct i eS arC r ? 8ln com P° site tubes, e.g., graphite composite. 
The advantage of the composite types of materials lay in their construction. 
Lay-up could be orientated such that both longitudinal and rotational 

stiffness were controlled. All of these materials were commonly used in 
s pace • 

Using SIMI, calculations were made assuming the use of these different 
types of materials — both common and exotic. Results of these calculations 
were that it was reasonable to expect the first three modes of vibration to 

H la * raQ * e ° f 4 f 0 13 ? HZ ‘ Ba8ed ° n the8e vaults, the segments were 
scaled to different lengths with different payloads while maintaining the 
same fundamental mode of vibration. In general, as length and mass were 
decreased, keeping the fundamental made constant, the frequency of the 
second and third modes increased* 

In addition to determining the above mentioned modal frequencies, 


18 



further calculations were made to determine the first three mode shapes and 
compare their overall contribution to the ARM's motion. Figure 13. Results 
of these calculations were plotted as two graphs, Figures 14 and 15. Each 
graph was a plot of the first three modes of an aluminum segment whose size 
and physical attributes were previously described. (Note that figure 14 
illustrates the relative sizing of the mode shapes which would result from a 
torque impulse of magnitude 1 applied at the base of the arm.) From this 
graph it was evident that the first mode of vibration contributions 
significantly dominated the behavior. 

Rough estimates on system size were provided by the above mentioned 
calculations. From these we developed the preliminary specifications for 
ARM III and gained a feeling for the magnitude of the driver requirements. 
For example, a 100 kg payload at 10 meters at 1 g is 1000 nt-m or 6000 ft- 
lb. of torque. Given the mass of the rest of the physical ARM and 
counterweights (counterweights are for ground based gravity operation) the 
torque requirements rapidly escalate to values 5 to 10 times this. 

Because of the ultimate space applications, the only motion drive 
sources suitable were electrically powered. Because of the required 
response times, we were limited to direct or geared electromagnetic motors. 
We collected and assessed data on available motors and gearing systems. 

To maintain adequate control of driver - ARM motion required a tight 
system, i.e., no backlash. We evaluated commercially available low and zero 
backlash systems. The gear systems suitable were traction drives and 
harmonic drives. We assessed the characteristics and trade studied and 
ranked the candidate gear systems. The harmonic drives produced by 
Harmonic Drive were ranked over those produced by Dojen of Dolan-Jenner due 
to greater mechanical ruggedness. 

ARM III required three prime movers, two at the shoulder and one at the 
elbow. We assessed the characteristics and trade studied and ranked the 
candidate motor systems. Brush and brushless DC motors were ranked highest. 
The motors for each of the articulations had slightly different 
requirements and, thus, specifications. 

Elbow 


The driver for selection of the elbow motor was weight. We sought to 
obtain the best torque to weight ratio. We selected Inland Motor of the 
Kollmorgen Corporation because of their ability to design to specification 
and experience in building space rated motors. The motor specified had a 
double shaft, one end fitted to a harmonic drive and the other to an 
encoder. Peak torque was on the order of 1600 oz.-in. 

The Inland motor was coupled to a Harmonic Drive ISR Series 4M 200:1 
speed reducer. This speed reducer was selected for two reasons. First, it 
was the greatest speed reduction - torque amplification unit available. 
Second, the housing and bearings had the capacity to handle the loads and 
torques exerted by the distal segment assembly and payload. Peak torque 
output, sub-second response, was on the order of 1700 ft-lb. 


Critical to the operation of the DC brushless motor was the motor 
controller and driver. We evaluated three options; build our own, buy a 


19 



stock unit, and order a custom designed unit. We designed and prototype 

robusf Qe ^r s< ° Ci f Ui , try ’ 6aCh Succes sive generation being more 

obust. The designs consisted of two portions, one was the controller and 
tne other was the driver* 

The controller portion receives user input commands and hall effect 
encoder outputs to determine current position and desired position. 
Decoding logic converted this information into necessary motor drive phase 
control and three sets of outputs, one for each phase. Based upon this 
information, a pulse width modulation circuit provided drive to the driver 
?h rC ?l try ‘ driv ® circuitry provided a current source or sink to each of 

the three windings of the motor. We successfully prototyped circuitry with 
the Motorola MC33034 brushless DC motor controller and the Sprague UDN-2937W 
3 - Phase brushless DC motor controller/driver to perform the controller and 
pulse width modulation functions* 

We had insurmountable problems with the driver circuitry. We evaluated 
discrete transistor and packaged power MOSFET designs with ultrahigh speed 
diode and snubber protection. We purchased the Gentron Powertherm ERM 133R- 
‘ * 8 ^ phaSe M08FET Package rated for 30 amps. The net result was to blow 

the output transistors in one or more of each driver. Failure analysis was 
inconclusive being relegated to electrostatic discharge failure or 
excessively high back EMF. 

We evaluated two commercial controller driver units. One was the SC 
402012 Pacific Scientific 3-phase motor driver and the other was an 
Automotion Incorporated LC-4 3-phase motor driver. Both of these units 
functioned, however, peak drive amps were limited to less than half of the 
maximum required peak amperage for the motor. 

We requested a quotation from Inland Motor for a driver suitable for 

* °£ 0 Model BDA5-24020-001 with 40 Amps peak current was 

priced at $4,250*00 with 8 to 10 weeks delivery time* 

Shoulder Elevation Articulation 

We purchased a PMI MC 19P high pulse torque, low inertia, zero cogging, 
low armature inductance DC brush motor for the shoulder elevation driver! 
This was coupled with a Harmonic drive size 8M 100:1 speed reducer - torque 
amplification unit to provide a peak output torque on the order of 1800 ft- 
Ids. at 100 amps input current. 

We have evaluated PWM, SCR, and linear drive controllers for this unit. 
Because of the initial planned restricted use of the ARM, reduced length and 
payload, we did not evaluate drivers with the full 100 amp peak output 
capacity. We evaluated an Apex PA-03 linear amplifier for driving this 
motor. It had a current capacity of +/- 30 Amps. We designed a voltage 
controlled current drive preamplifier stage suitable for analog input 
control. The operation was determined to be asymmetrical and had some 
instability around the zero operation voltage point. Although the operation 
was adequate, the amplifier was returned to the manufacturer for analysis. 
The analysis indicated that the unit was performing within Its 
spec! ications. Therefore, additional modifications were required of the 

circuitry to further optimize performance. 


20 



Shoulder Azimuthal Articulation 


For the azimuthal drive we have purchased a direct drive motor and 
controller from NSK. This unit had an 11 cm., 4.5 in., central orifice 

suitable for passage of the BP support segment. The motor has 180 ft. lb. 
of torque. The controller supported analog, RS-232 digital, and parallel 
port digital input. It had an integrated encoder positioning system with 2 
arcsecond resolution. 

The controller was semi-intelligent. It could be programmed to perform 
sets of operations on its own. It had primary and secondary servo loop 
digital filters which could be programmed to specific system modes of system 
vibration. 

The megatorque motor was interfaced to a RS-232 port terminal and the 
basic functions were checked. The motor was operated in a minimal load 
configuration in both the torque and velocity control modes. The controller 
was programmed Into a tight control loop suitable for stimulating the 
primary vibrational mode of the sys tera/segment. These operations suggested 
that it was possible to utilize this motor controller for performing 
preliminary system shakedown experiments. 

The analog drive control function was interfaced with a voltage 
controlled preamplifier. This amplifier was similar in design to the 
amplifier used to control the elevation motor controller. Together, these 
controllers were interfaced with a two dimensional joy-stick control. Use 
of the joy-stick allowed manual control of the two axes of the shoulder 
articulation. These inputs were suitable for interfacing with a digital to 
analog card on the VME bus computer to exercise computer control of the 
shoulder articulation. 


ARM III 

We have modeled vibrational modes for various segment sizes for various 
payloads. We first defined a set of two meter segments which have a primary 
mode of vibration consistent with the longer segment modes. We determined 
the behavior of these systems under acceleration and the behavior of the 
system under gravity. 

We determined the first, second, and third order resonant frequencies 
for payloads ranging from 5 to 400 lb. Table 1. As expected, with this 
weight change, the primary frequency varied considerably, approximately an 
order of magnitude. The second order varied by about 15 %, and the third 
order by only about 3 %. 

We selected a 34 Kg (75 lb.) payload capability for the distal segment; 
this should support the addition of the Oak Ridge joints. With 
counterweighting, the distal assembly, articulation, segment, beam rider and 
payload would mass about 182 Kg (400 lb.). 

A 9 cm (4 inch) diameter aluminum segment used for the distal segment 
would have about a 1 cm static displacement and resonant frequencies of 6, 
100, and 310 Hz. The same diameter steel segment used for the proximal 
segment would have a 2 cm static deflection and resonant frequencies of 8, 
120, and 395 Hz. 


21 



The component specifications and the above described parameters were 
used to shape the design of the shoulder articulation. We hired a 
mechanical engineering consultant to render the drawings and develop the 
mechanical specifications. The components were manufactured, assembled, and 
made operational, Figure 16. 

A. consideration of the design for the articulation was a reactionless 
freewheeling drive configuration. For this project the freewheeling drive 
would have been bolted to the frame. In the future the drive could have 
been connected to a flywheel. This latter configuration would have then 
been suitable for use to investigate a "reactionless" drive configuration. 

For the shoulder several options for counter rotating flywheels were 
examined. These would either attach to the harmonic drive unit or the 
motor. If the flywheel attached to the harmonic drive a pair of 2 meter 
diameter 500 Kg wheels would be required. This was determined to be 
unacceptable for the elevation axis. Because of the gear ratio of the 
harmonic drive 100:1 a flywheel mounted to the motor would be much smaller 
and spin faster. It was determine that the implementation of this option 
was beyond the scope of this project. However, the shoulder articulation 
was designed such that flywheels could be retrofitted at a later date. 


22 



TRACK III - CONTROL 


Much of this project was a problem in real time autonomous robotic 

control. Our basic method of approach was similar to that defined by Dr. J. 

S. Albus in "Brains, Behavior, and Robotics" (1). The methodology was 

modeled on the functioning of the human brain and, as such, had an inherent 
degree of artificial intelligence. 

This approach has been termed the hierarchical robot control system. 

The underlying structure of the system was one of task definition and 
prioritization. Unfortunately, tasks or actions which seem very simple to 
humans were incredibly complex to describe in a complete set of rules. By 
examining a goal and breaking it up into small units or events which must 
occur to attain the goal, we developed the necessary sets of rules. After 
analysis of the event units required for any problem of control, we found 
that certain events were generic, i.e., they were required events for 
attainment of most goals. The generic events were at the lowest level of 
the hierarchy. 

At the top level of the hierarchy were the complete undecomposed goals, 
the main program. In between the top and bottom levels were a number of 
intermediate levels. Each new level was created by further breaking down 
the previous levels' tasks. These intermediate levels were responsible for a 
number of functions. These were: 

1. System initialization 

2. Data acquisition 

3. Data decoding 

4. Information and data storage 

5. Data display 

6. Control processing 

7. Control input/output 

8. Task scheduling 

Below the generic procedure were the machine operating system and the run- 
time library. In general, the "power" or intelligence of the system can be 
considered to increased exponentially with the number of levels in the 
hierarchy. 

The hierarchical approach also facilitated modularity. Cost 
effectiveness was the root of adapting modular programming. Modules made it 
easier to develop and debug software because they were more manageable. 
Reusable modules in separate compilation package meant that one modules had 
been coded, and thoroughly tested, they never needed to be rewritten. 
Software developed for this project was designed with reusability and 
maintainability as prime considerations. 

Implementation of a modular approach placed numerous constraints on the 


23 



selection of hardware and software 


Hardware 


A significant amount of time and effort was spent in accessing and 
evaluating the hardware selected. Several criteria were generated by the 
parameters of the project. The first of these criteria dealt with the 
resolution of the system. The accuracy sought mandated at least 21 bits of 
resolution. Therefore, we needed a data path of at least this width, which 
meant migrating to a 32 bit data bus. The second of these criteria dealt 
with multitasking. Because of the multitude of tasks required, it would be 
a definite advantage to be able to multitask or perform rapid task switches. 
Thirdly, because of the nature of robotic control, a real time operating 
system was required. These criteria served as a starting position for 
hardware selection. 

Additionally, we identified eight general criteria of import in 
selecting our hardware. These were: 

1. Availability - In order to adhere to the project timeline, 
equipment had to be available as required for development and use. 

2. Flexibility - A wide variety of tasks must be performed by the 
controller; distributed processing works best in these situations. 

3. Support - Experience, expertise, availability and capability of 
product backers and promoters were important factors and caused major 
problems. 

4. Growth potential - Because of the rapid growth and change In this 
field we wanted a mature technology which could interface with new 
technology. 

5. Software availability - a large software base encourages more 
widespread use and acceptance of a system which, In turn, encourages 
more products. 

6. Processing power - Raw power, i.e., cycles per instruction, 
processor speed, and ability to interface with accelerators, 
coprocessors, or digital signal processors. 

7. Bus - The bus strongly influences system layout, Interconnection, 
processor support, ruggedness, and reliability. 

8. Pricing - Components had to be cost effective and within budget. 

Appendix B a list of the hardware evaluated. We trade studied and 
ranked these units. The top ranked central processing unit was manufacture 
by Intel, the 80386. The top ranked coprocessor was the Inmos transputer. 
The top ranked bus was the VME bus. The rest of the selection process 
involved selecting board level manufacturers who Incorporated these devices. 

We used the Intel processors, IBM XT, AT. and 386 clones on this 
project. The typical configuration was the CPU, a coprocessor, floppy and 
hard disks, extended memory, and appropriate I/O cards. The mainstay of 


24 



hardware was a 386 machine with a 64 k cache and 10 Meg of 32 bit RAM and 
the 80387 coprocessor. It had a 1.2 M floppy, 120 M hard disk, and 500 M 
WORM disk. It ran both MS-DOS and Unix. It was set up with a remote 

terminal link to the VME computer. For testing and experiments it used a 

MetraByte DASH board, A-D and D-A conversion, and a 32 bit wide digital 

interface card. 

Because not much was known about the size of data sets required for 
control and other parameters, we did not know what kind of throughput we 
needed for ARM III hardware. We could not wait till all parameters were 
known about the controller as there would not be enough time left in the 
project to select and implement a system. Therefore, we needed to specify, 
purchase and assemble the ARM III computer system based on a number of 

assumptions and incomplete information. After we procured the ARM III 
control system, there were still significant problems in implementing it. 

Therefore, because of the time constraints, we implemented the system 

without complete specifications. Furthermore, since the parameters effecting 
computing power were unknown, we had to implement a system with considerable 
flexibility Thus, we designed a system such that throughput could be 
increased without impacting the rest of the system. Our solution was to 

design a system with a front end that only needed to executes the high level 
control and supervise slave hardware. It also had the capability to perform 
the raid to low level control processing off line. 

Since it was the control processing units that required flexibility, 
the front end was fixed while the mid to low level processes were designed 

to be implemented as an expandable network of point to point connected 

computers. This solution minimized '* trauma** by Isolating the unknown and 
changing parameter problem logically and physically from the high level 

tasks. The high level tasks were developed without concern for the unknown 
parameters . 

Hardware parameters definition, design and specification 
1. High level control and system verification master computing unit 

Because we coded in Ada, we were restricted by compatibility with 
compiler hosts and targets. Based upon current availabilities and costs we 
trade studied the Intel '386, NSC '332 & '532 and the MC 68020 & '030. Only 
the most widely supported MPU's were applicable for the front end unit. 
There was not enough specific information on system load to justify ranking 
in terms of specifications and performance alone. The NSC alternatives offer 
a good set of basic system support resources on chip and OEM modules 
offered. These should be tracked for ARM IV. 

The 80836 was top ranked for front end use for many reasons. The 
flexibility of the addressing modes, larger address range, 64 k I/O address 
space and aspects of support for multi-tasking were high ranking attributes. 
The upward compatibility demonstrated by the company to date was important. 

Other attributes that had an impact on the decision was cost and 
availability of: 

1. evaluation boards for the product that were bus ready, 


25 


2. software and compilers, 

3. memory 

4. compatible storage and display controllers for peripherals, 

5. compatible boards or subsystems for control processing 

6. I/O boards and 

7. I/O processing boards. 

Even with all of this selection care there were significant problems because 
of the inability of manufactures to bullet proof hardware and software for 
the advanced technology being implemented. A second major problem was the 
redirection of companies after they had committed themselves to specific 
hardware and software. 

We top ranked Multibus II and VME bus for consideration. Multibus II 
implementation was more uniform. Multibus II also supported message 
passing. Message passing varieties of and extensions to VME were available. 
There appeared to be more future for Increased bandwidth and upward 
compatibility with the VME bus. A wider variety of products was available 
for the VME bus, often at a lower cost than Multibus II. While Intel was 
normally associated with Multibus I and II, we identified an 80386 VME bus 
ready board. Alternatively, an 80386 system board that was multibus II or AT 
compatible ready could be connected to a VME bus system through an adapter. 

Logistics favored the VME bus. The program at LRC operated by our 
technical monitor used the VME bus. The use of the same bus should 

facilitate later interfacing. 

We implemented control communication by interfacing through memory. 
This was via a hardware/software interface such that the control nodes 
processors command set appeared as an extension of the Master computing 
units instruction set. This required point to point links via one logical 
global memory which could exist in 2 to 3 physical locations. This was, in 
part, why the 80386 design used the protected memory scheme. 

We purchased the Force Computer SYS 80K CPU 386 VME bus 80386 based 
board for the system board. 

2. Control processing unit 

The ability to add more throughput without bus bandwidth degradation was 
important. It was part of the solution to the general problem encountered 
when a general purpose bus is used. We wanted to be able to Increase system 
throughput by bypassing the general bus. 

One way of doing this was to add an additional bus known as a "sub-bus". 
Multibus II did specify a sub-bus. The VME specification did not define a 
sub bus, however, there was an extension to the VME specification which 
does. 


26 



Another method of avoiding possible bus overload used a modular 
computing unit, e.g., the Inmos Transputers. Transputers were the top 
ranked coprocessor. They were designed for parallel processing, point to 
point connection, and system bus connection. Each Transputer contained many 
of the support elements on chip that were normally implemented off chip. 
This included four transputer links that could be hardware and/or software 
configured and connected to other transputers. These links were also 
available at the edge of the board for external connection. 

The Transputers could be purchased VME bus ready with different 
configurations, (number of transputers socketed for, amount of memory etc.), 
and were also available. There were other product lines that used the 
"building block" approach of Transputers but many aspects of the chip itself 
and the logistics of using it were very positive. 

The instruction set was small and specifically oriented to real time 
control. A real time kernel was micro-coded in the chip. Timers and delays 
were controllable down to 1 microsecond. One instruction cycle was only 50ns 
at 20MHz. Some instructions were interruptable during execution so that 
interrupt latency was very short. 

Because of delays in the availability and development of project 
hardware and software we did not reach the point where we were ready to 
implement the coprocessor units. Instead we selected the transputer as the 
preferred module and assumed that it would be available eventually. For 
current tasks we used the 80386 and 80387 off line with the assumption that 
they could be implemented on line in real time at a later date with the 
transputers . 

3. I/O processing unit 

There was a significant amount of I\0 required for the ARM. We broke 
this down into digital, analog to digital, and digital to analog. For the 
analog to digital we chose the MetraByte VMECAI board. This was very 

similar to their DASH board we had been using on the AT bus. The major 
difference was that it did not have digital to analog capability. For the 
digital and digital to analog capability we selected Xycom. We purchase 
their XVME 201 card with 48 digital I/O lines. We evaluated their XVME 505 
card with four channels of digital to analog capacity and suggest it use for 
future ARM development. 

4. System memory subsystem 

Because of conditions of memory unavailability and high cost, memory was 
a driving factor in computer hardware purchasing decisions. We have found 
that in recent months, versions of products were only deliverable in the 
foreseeable future if purchased with one or 2 MB of memory. Although the 
global memory was logically one block, using the 80386 it could be located 
in separate areas. We purchase the CPU card with 2 MB of 32 bit memory. We 
purchased the MM6230D memory board from Micro Memory Inc. with 4 MB on 
board. The board can accept another 4 MB on board and a daughter card for 
another 8 MB of 1024 k RAM chips. 

5. Backplane, enclosure/connectors & power supply 


27 


We purchased a 20 slot VME bus cage with dividers and 3u and 6u 
prototype boards from Electronic Solutions, We bought a Powertec, Inc, 
Model 19F - E00 - ABD 500 watt power supply. 

6. Peripherals 

The VME bus based system was called the target system while our 386 
based clone machine was the host computer. Programs were downloaded to the 
target from the host via a RS 232 port. We used a TeleVideo terminal to 
directly communicate with the target computer. 

Xycom manufactures an XT short-card adapter card. We did not have an 
opportunity to evaluate this card. There are several possible uses for this 
card. One is for the adaptation of the DME Interferometer controller card 
to the VME bus. The other uses are to adapt XT display and controller cards 
to the bus. 


Software 


Ada was chosen to be the programming language for this project because 
it enforces many of the structural requirements for real time programming 
and supports the development of a hierarchical robotic control system. 
Several attributes of Ada made it an especially useful language. Among 

these were strong typing, generics, and tasking. 

Typing refers to data type. In Ada each type of data was considered as 
unique and, therefore, must have its own specific set of operations. 
Because Ada was a strongly typed language, different versions of a 
subprogram module would have to be coded for each objects' type that we 
needed to pass to the module. The Generic feature of standard Ada avoided 
this. A generic module was a module which could accept any data type while 
still performing type checking. The process of instantiation of the generic 
module with a specific data type automatically created a version of the 
generic module that would accept that instantiated data type. Only one 

module template was required to be coded and versions of the module were 
created as needed with only one statement. 

Scheduling was require to coordinate the control tasks. This required 
the design of a scheduler. The methodology for scheduler design was 
heuristic, i.e., developing rules by which other set of rules could be 
selected for use. This was one of the reasons we used the task construct 
for scheduling in Ada. The scheduling package of modules was the collection 
of tasks that direct traffic within the system. 

A task was a process that runs concurrently with other processes. A 
task was not a compilation unit, as Ada packages were (a package is a 
compilation unit of related sub-program modules, including tasks). Tasks 

were structures that can be in the upper levels of the hierarchy as well as 

on a low level or nested within other tasks. They defined the 
interrelationships between events in terms of timing, importance, priority, 
or other rules or schedules that were necessary. 

Various structure, e.g., arrays of tasks, were formed so that the 
software we designed was easier to analyze, test, and debug. The built in 


28 



scheduling features of Ada improved the level of reliability of the software 
produced. 

Tasking was a great tool for preparing for coprocessor coordination. 
Provisions were made to declare particular high level tasks to coprocessors; 
the coprocessor was then viewed by Ada as a high level task. Tasks, as were 
other subprogram modules, were reusable. They were organized in compilation 
package for ease of reuse. Design of the scheduler package of tasks was 
implemented by first developing "production rules" and then determining an 
initial expected profile for the condition of the state table for the 
applicability of various production rules. Rules were the standard tool 
used to develop the "expertise" or "intelligence" of the system and were a 
set of ordered plans for producing the required results. 

Initially, we used a hierarchical system to determine the production 
rules. The condition of the expected state table, which indicated the 
particular production rule or rules to be executed, was estimated. 
Experiments were performed to analyze the tasking and state table, and 
determined the exact values of variables in the state table of a particular 
task. 


We determined that the preferred method of scheduling design on the 
macro level was to use the state machine. This was a non interrupt driven 
cyclic system, so that the program flow on the macro level was constant and 
did not allow any critical events to be missed by the system. This was true 
as long as the system had the appropriate resolution. System resolution was 
set using the timer on board the CPU board as part of the system 
initialization performed by the board support package and was basically a 
hardware function. Therefore, the software only needed to schedule and 
perform the tasks. When the execution speeds of the software were too slow, 
this was an indication of insufficient resolution, which indicated the need 
for a hardware fix, e.g., a smaller timer interval or more coprocessor 
power. 

We developed a parasitic scheduler, a temporary main program, which 
functioned as a dumb controller to coordinate the off line tests supervised 
by the host machine. The parasitic scheduler scheduled the experiment, feed 
off of the state table, and saved the data. We used this method to perform 
experiments with the system constant but changing the event variables. This 
was done without making changes to the software. 

Development of real time code was difficult. There were a large number 
of procedures which must be performed by the software; these were frequently 
complex interaction among modules. Besides being complex in interactions, 
because of the nature of the tasks, the flow patterns were continually 
changing. Debugging this code was difficult because of the interactions, 
the changing flows of interaction, and the large number of procedure which 
were considered. After debugging the code we applied the programs to the 
physical system using the host computer system. 

Our real time robotic control system performed a number of procedures 
The first was system initialization. This was a one time event which 
coordinated the various components, hardware, of the system. Hardware 
affected were the CPU, coprocessor, data linkers, memory, I/O cards and 
ports, and peripheral devices. Additionally, the physical ARM components had 


29 


to be initialized. Problems with the board support package for our target 
computer prevented any progress beyond this point on the target computer. 

The second procedure was data acquisition. Sensors transmitted data to 
the acquired data area. The next task was the decoding of the data format 
such that it could translated to the proper format for the next device. The 
decoded data was buffered or stored for access by the program procedure 
modules during run time and for analysis of the system off line. 

Off line functions were data analysis and model development for the 
future runtime. From analysis of the input parameters the controller 
determined the instruction which were outputted to the drive elements of the 
ARM. These instruction were translated and encoded for use by the various 
actuators. 

Finally, the workings of the program were displays such that the 
controller and the ARM could be monitored. These monitoring functions were 
performed internally and externally. Internal monitoring was required to 
keep the program on track and to provide breakpoints to evaluate program 
function. External monitoring was required to provide the operator with 
status information. 


Programs 

The software used for this project fell into two categories, acquired 
and written. The major acquired software packages were for the DME system, 
Matlab, Unix, and ADA. In addition, we acquired a variety of utility and 
upgrade packages. We programmed in ADA and wrote a variety of code to 
interface components and implement testing. The software generated was a 
basic set of tools which were designed to effect the implementation of a 
robust indirect adaptive controller. The general software control system 
design was developed, Figure 17. The tools also provided a mechanism for 
code additions and future alteration that will be required as more 
information is gained about the system. 

Software to run the DME was provided with the hardware. It ran on an 
8088 based machine. This system can be controlled as a task from the main 
program. Future developments would include rewriting the software in Ada 
and running the system from within the Ada environment as a task. 

The Matlab program was simulation software. We used this to model the 
system. We purchased the package which runs on the 386 with a 387 
coprocessor. We have formulated basic system models and an adaptive control 
model. The results of these simulations have been used to parameterize the 
system design. 

Although it was not validated, we used a Janus ADA compiler for several 
because nothing else was available. This approach allowed us to write 
code but, in some cases, had limited implementation. In December of 1987 
the Janus compiler passed the validation suite and we received a validated 
compiler in February of 1988. We found that validation had little to do 
with the operation of the compiler. The validated version was so full of 
bugs that it was unreliable and, therefore, unusable. 

We accessed, evaluated, trade studied, and ranked other Ada development 
systems. The top ranked system was that produced by Alysis. We ordered a 


30 



386 version in June 1988 but it turned out to be vapor-ware and we did not 
receive it until May of 1989. We did receive a 286 version of the Alysis 
compiler which we used to convert our Janus code and become familiar with 
the Alysis Ada environment. 

We needed a Real Time Kernel (RTK) for the operating system. Several 
new RTKs and RTK development kits were available for the 80386. The Intel 
IRMK and the Hunter and Ready VRTX/32 386 were the most suitable. The Alsys 
RTK was not sold separately from the cross development system which was too 
expensive for the project. 

We negotiated the purchase of the VRTX/32 386 RTK and board support 
package (BSP). It turned out to be vapor-ware; they delivered the VRTX/16 
RTK and BSP. In late March of 1989 the VRTX/32 was ready and delivered. 
The BSP was unusable and they decided to drop the development of the 
required BSP for our CPU board and the Alysis environment, instead switching 
support to the Telesoft Ada environment for 68000 systems. Because of the 
problems associated with the receipt of the Alsys environment, we were able 
to negotiate for a Beta copy of their 386 cross development system. 
Although still under development, a sufficient portion was available to 
initiate work on a BSP. We were able to make sufficient progress to prepare 
to download from the host to target computer. 

Most of our coding was of device drivers and low level primitives. This 
approach allowed us to implement basic system functions. We have designed 
the higher level programs. Our design follows the philosophy of the 
NASREM/NBS telerobotic control standard reference. 

We have a collection of packages that take input from detector devices 
and encoders and outputs to the motors. We used a program made up from these 
packages to test the lateral effects detector from Hamamatsu. 

The packages were : 

1. Device specification packages 

These were environmental specific device specifications. One was written 
for each device. They consist of global declarations of objects that were 
physically address ranges, port address ranges, values and/or structures 
that were transmitted to a device or its controller and other information 
required to use a specific device. 

2. Device driver packages 

These were packages of procedures and functions required to Initialize a 
particular device and to operate that device on the lowest level. Device 
drivers were located in the logical map at the level of primitives and used 
the objects defined in the corresponding specification to satisfy requests 
for device use by units on the level of actions. 

3. Actions level packages 

Units at the action level were concerned with calling units in the 
primitives level to exchange information, as well as initiating jobs related 
to requests. Action level units were coded for all the basic system 


31 



services on the application level of the control system but nothing has been 
implemented for run time kernel level system services. So far these services 
have been handled by a standard operating system in connection with the run 
time kernel for the compiler we were using at the time. These system 
services are: 

a. Display output, text based only 

A "print data" template was used and all critical data objects existed 
in multiple types that have been derived from the base type of the low level 
I/O type of the particular object. The user can specify the format of data 
without altering the time interval of the output operation, 

b. Permanent storage, standard disk drive storage 

Rate and size of page dumps and data representation structures have been 
defined. The storage package was a special case in that it was written in a 
manner that was specifically tailored to the peculiarities of the compiler. 
Some of the structures have to be redefined. 

c. Miscellaneous user interfaces 

4. Task level code 

We have designed tasking modules on paper but have not been able to 
adequately test tasking because of compiler difficulties. We have defined 
the task scheduling scheme, Figure 18. Task level units that will use the 
currently functioning sequentially linked units can be tested for 
performance and compared to the sequentially activated units once we have 
all units operating in the new APSE. 

5, Event level code 

We did not have the tools to implement multi-tasking and therefore event 
level programming was not appropriate at this stage of development. 

6. Mission level code 

Our "missions" have been to test various subsystems. We have assembled 
code from existing parts and written new parts as required for: 

1. Control of the coil driver for the BR 

This required levels 1, 2, and 3 for output of control of Interface 
circuitry and the output of wave forms. 

2. The lateral effects pin cushion detector testing. 

This task actually has involved a mission that was in some ways a very 
simple model of a typical two node control unit. The detector node was 
simplified in that it consisted of the detector only. In reality we may add 
one or two more devices used for sensing of other parameters, e.g., 
temperature. 

The actuator node consisted of two motors and two encoders. There was 


32 



no feedback from limit switches as there will be for ARM III from this node. 
In addition, the test used an x/y table and no vibrations were induced; it 
was not a realistic control node test. However, it did incorporate all of 
the support services required to implement control . 

3. BR module 

We tested and debugged the coil driver interface to the coil and 
completed testing and debugging the downloading of different data sets from 
the computer to the coil driver. Results were that the coil driver to coil 
interface functioned, as did downloading of various waveforms or data sets. 
We profiled timing attributes of the system. 

Based on calculations, which used estimated figures for the 80386 
machine at 16MHz, and assuming we were to write to each of 128 coils 
serially, we estimate that we could maintain update rates to the coil at 
frequencies below 7Hz. We investigated methods of offloading some of the 
cycle time into a parallel processing unit, ( which would be the required 
implementation for ARM III), to increase estimated response time. 

Target Dependent Programming 

Once the target system is bootable, then the software can be used to 
run the ARM. This consists of the main program ARMCON and the device 
drivers. A large portion of this software has already been written. What 
is required now is to tailor it to the environment and test and debug the 
software. 

Work to be done. 

Device drivers. 

Digital I/O card: The basic device driver routine has been written. 

It requires I/O port address specification be inserted and to then be 

compiled. The routine then must be tested and debugged incorporated into 

ARMCON. 

Analog Input card: The basic device driver routine has been written. 

It requires I/O port address specification be inserted and to then be 

compiled. The routine then must be tested and debugged incorporated into 
ARMCON. 

Analog Output card: The basic device driver routine must be written. 
It must then be compiled, tested and debugged incorporated into ARMCON. 


ARMCON 

A number of packages were used in this program. We have divided these 

into : 

1) the ones that are required for the target system and what work is 
required to make them operational and 

2) the ones which are running on the host system. 


33 


Work must be done on: 


(The BP (Beam Positioning) routines retain the mirror designator because 
they were initiated when we were planning to use a mirror to position the 
beam* We now have a fiber optic and launch optics that delivers the beam to 
the beam directly to the BP.) 

Mirror Azimuth: This routine receives input from a Canon encoder and 
directs the microstepper driver to reposition the beam positioner. 

Mirror Elevation: This routine receives input from a Canon encoder and 
directs the microstepper driver to reposition the beam positioner. 

Mirror test: This package uses the previous routines and other generic 
routine to test the BP module. With appropriate interfaces it will become 
part of the executable ARMCON program. 

Shoulder Status: This routine needs to be written. It receives as input the 
current status of the two shoulder motors. Inherent to this program are the 
positional limits for the segment movement. These exceptions limit movement 
to the acceptable operating envelope. 

ARM displacement: This routine needs to be written. It receives as input 
the current displacement of the segment from the reference beam. The input 
data is used to direct two activities. First, it is used to determine 
vibrations occurring within the system due to the forces, torques, exerted 
by the motors. Second, average displacement values are used to drive the BP 
to keep the reference beam centered in the segment (a closed loop low pass 
controller) . 

Shoulder Motor Torquer: This routine needs to be written. It receives as 
input user positioning commands. These are checked to verify they do not 
exceed operating limitations or the operating envelope. If the commands are 
valid they are routed to the motor drivers. 

The following routines have been written and are operational on the host 
system. 

User I/O: This routine accepts user input and gives the position of the beam 
positioner. It must be converted for use on the target system and modified 
to accept the required parameters. 

Armrun: This routine operates in conjunction with MATLAB. MATLAB uses the 
physical parameters of the segment to generate a set of solutions to the 
first three modes of vibration. This routine predicts system response given 
a set of input parameters, i.e., motor torque. This is a portion of the 
adaptive control, i.e., given a set of input parameters it predicts system 
behavior. 

In addition, in order to operate, a variety of generic routines are required 
Calendar - sets timing 


34 



Interrupt manager - manages interrupts 

Communications interface - manages interface protocol 

Unchecked conversion - error handling 

Unsigned - unsigned numbers 

Graphic functions: 

Graphics 

Graphing 

Graphics Library 

Mathematics Library 

Input / Output 
Text i/o 
Generic i/o 
Port i/o 
i/o service 
i/o exceptions 

Modifications and enhancement of the program now running on the host 
computer will be required. These need to be performed In conjunction with 
the testing and debugging of the routines and programs required for the 
target computer. 


Control 


Adaptive Control 

Adaptive control deals with the design of controllers which adjust to 
system uncertainties or time varying effects to ensure proper overall system 
performance. In this sense adaptive controllers are learning type 
controllers which monitor and learn about the unknown through input-output 
measurements of the unknown, a black box situation. In most cases adaptive 
controllers can be thought of as performing two functions. The first 
function is basically an identification process. The adaptive controller 
constructs a model of the unknown by looking at the response perturbations 
of the system stimulated by known input signals. The second function is, 
based on the most recent estimate of the unknown, to construct a 
controller which causes the system to behave as desired. Note that both 
identification and control occur simultaneously (or the identification could 
be completed first) so that, as the identifier zeroes in on the correct 
model, the control zeros in on the proper controller to achieve the desired 
response of the overall system. 

Adaptive control as applied to robotics is basically implemented as 
described above. Usually there exists a dynamic model of the manipulator, 
and generally, not every parameter of that model is known precisely. For 
example, friction coefficients may be difficult or Impossible to measure or 
mass element terms may change due to the handling of various sized, unknown 
payloads. Thus, adaptive control techniques are used to identify any 
unknown terms in the model and then update a given controller to account for 
the change in system parameters. 


35 



To illustrate the concept of adaptive control, it is beneficial to 
review a paper by Craig, Hsu and Sastry (2) entitled, "Adaptive Control of 
Mechanical Manipulators." In this paper adaptive control techniques were 
used in the control of rigid link mechanical manipulators. The structure of 
the controller used was defined by the computed-torque method of control. 
Application of their method required a precise model of the dynamics of the 
manipulator because the control torques to be applied at each joint were 
calculated by plugging the desired response of the manipulator into the 
model of the system. 


Specifically, most mechanical manipulators could be modeled by an 
equation of the form: 

T - M( (p) + Q((J) jCp > 

where <P was a vector of joint angles, M was an inertia matrix which was 


dependent on manipulator position, Q was a function which accounted for 
torques arising due to centrifugal, Coriolis, gravity and friction forces 
and T was the vector of torques applied at each joint. If one knew every 
system parameter in the previous equation, then, to solve the equation for 
the necessary torques, all that was necessary was to plug into the given 
equation the desired joint angles, velocities and accelerations. 


However, generally, not every parameter was known, thus, estimates for 
those parameters must be used. The adaptation came into play when one used 
the output of the real system and the model to make better and better 
estimates of the system's unknown parameters used in the model. It was the 
purpose of the previously mentioned paper to present a way to update 
estimates of the unknown parameters so that: 


1. the controller maintained the stability of the system, 

2. system performance improved, and 

3. the correct values of the unknown parameters were identified. 

We investigated the applicability of such techniques to the control of 
mechanical manipulators with flexible segments. 


Control Considerations 

We considered various ways to actively control the arm's end tip 
position through application of a torque at the base. Since accurate end 

tip positioning was the ultimate objective, it was logical to measure the 
end tip position and feed the position information back as the control 
variable. Such was the methodology used by Cannon & Schmitz in the control 
of a very flexible arm (3). In that paper an experimental set-up was 
described and analyzed. End tip position was measured by an optical sensor 

mounted above the arm. As the arm swung back and forth the optical sensor 
looked down on the arm and measured end tip position. 

This position information was fed back, compared to the desired 
position and the resulting error signal was fed through a controller which 
was designed by Linear Quadratic Gaussain (LQG) methods (4). Controller 


36 



design was based on a sixth order model and achieved good performance. 
Hence, end tip position sensing was an important measurement and could be 
used to actively control an arm. However, external sensors are sometimes 
impractical to implement. 

Therefore, we used a laser positioning system which measures arm end 
tip position through the use of a laser beam projected down the center of a 
hollow segment and detected the laser beam position at the end tip. The 
advantages to this type of end tip sensing were: 

1. no external apparatus was needed, 

2. one sensor for two axis of rotation - no transition problems 

between the multiple sensors that externally mounted sensing units 

required, and, 

3. measurements of the manipulator behavior were made relative to a 

common base. 

There were several configurations for laser mounting used on this 
project. The first had the laser mounted directly to the base of the single 
segment arm with the light beam shining directly down the center of the arm, 
ARM I. Under this configuration the laser coincides with the shadow beam 
and the end tip sensor measures directly the variable u (X ,t) — vibrations 
of the arm relative to the shadow beam — as defined in equations 1-6 of 
Appendix C, (ARM Model). This configuration was best suited for system 
identification and was simple to implement. 

The second mounting configuration was to isolate the laser mount from 
the arm and used an independently controlled mirror, laser beam positioner, 
which directed the a light beam down the center of the arm, ARM II and ARM 
III. Under this configuration the difference between laser and arm end tip 
positions was measured and fed back as the control variable — see figure 19. 
The controller was designed so that the tip of the arm would track the tip 
of the laser. This set-up was used for the actual moving and positioning of 
the arm. 

With the above described laser end tip positioning system a controller 
was designed which made the arm track the laser. The added constraint that 
the arm end tip not experience high accelerations, i.e., flex the segment 
more than one segment diameter, was also considered. We considered three 
basic design philosophies for the design of our controller. They were 
robust control design, direct adaptive control design, and 
identification/control design (indirect adaptive control). (Block diagrams 
showing the basic set-up of each type of control scheme as they apply to 
this situation are given in figures 19, 20, and 21 respectively.) 

The idea behind the robust control design was to account for all system 
uncertainties in the design of a single, fixed controller. System 
uncertainties take the form of parameter variations, such as the change in 
payload mass, and unmodelled dynamics, such as the truncated modes and other 
system characteristics not included in the model. Hence, it was a worst 
case design scenario. The problem with using such a design technique in our 
situation was that it tended to lead to an overly conservative controller 
(under certain circumstances the arm would move more slowly than it needed 


37 


to move). The conservativeness arose due to the fact that the controller 
would have to be designed to ensure proper arm performance when the arm had 
a large or small payload. 

The second type of a control scheme considered was adaptive control, 
(5). This type of controller was nonlinear and time varying. To implement 
this controller, first a model for the desired system response was chosen. 
Then, pre-filtering of the input and and feedback of the output were used to 
force the resulting input/output properties of the controller plus real 
system to equal the input/output properties of the chosen model. The 
parameters of the controller were functions of an error signal created by 
by taking the difference between the desired model output response and the 
controller plus real system output response. Update laws for controller 
parameters were chosen so that the just-defined error signal was driven to 
zero. Therefore, as real system parameters changed the controller 
parameters changed. Thus, the controller plus the real system always 
behaved like the chosen model. 

There were, however, some very restrictive assumptions needed on the 
real system in order to ensure proper performance of the adaptive 
controller. One, for example, was that we know the order of the system — 
the number of states. In our case the number of states was infinite and we 
could not implement an infinite dimensional controller of this form. Thus, 
direct adaptive control had some problems with application. Significant 
research would be required to modify this scheme for use on our infinite 
dimensional sys tem. 

More promising, however, was to use identification techniques, as given 
in Good (6), in conjunction with periodic control parameter updates. An 
identifier was placed around the real system to identify system parameters. 
Then, based on the value of those parameters, a controller was automatically 
designed and implemented. Since the system physical parameters changed only 
periodically, we updated the control parameters periodically. Thus, rather 
than continuously updating the controller, as was done in direct adaptive 
control, we only needed periodic updates, e.g., when a payload was picked 
up, of the control parameters. This generated a sequence of fixed 
controllers. Because this controller only adapted to a new situation 
indirectly as it occurred, this design was called Indirect Adaptive Control, 
Figure 22. 


Modeled Sys tem Behavior 

In order to predict expected system behavior we created a model of our 
system (Appendix C, equations 7-12) to calculate the first three modal 
frequencies of the system for rotation about the z-axis. We compared those 
modal frequencies to modal frequencies of several arm segment modeling 
configurations. Furthermore, we developed a model of the motor and gear 
box. Appendix D, which derived the transfer function between control voltage 
and torque to the segment. All together the arm segment configurations 

considered were? 


1. a non-rotating cantilevered beam with no payload. 

2. a non— rotating cantilevered beam with payload point mass mp and no 
payload rotary inertia; 


38 



3. a non-rotating cantilevered beam with payload point mass mp and 
payload rotary inertia Ip; 

4. a rotating beam with no base rotary inertia, payload point mass mp 
and no payload rotary inertia; 

5. a rotating beam with base rotary inertia Ih, payload point mass mp 
and no payload rotary inertia. 

6. a rotating beam with counterweights, base rotary inertia, payload 
point mass and payload rotary inertia. 

7. a rotating beam driven from a motor/gear box with counterweights, 
base rotary inertia, payload point mass, and payload rotary 
inertia. 

The last situation was the most complex of this series of models. 
This particular model was called SIMI and can be found in Appendix A. SIMI 
was used to generate the predicted behavior of a particular segment 
configurations based upon its physical parameters and characteristics. It 
was also used to scale the system. Thus, we were able to design systems 
with longer or shorter segments that would maintain the same primary mode of 
vibration and maintain similar response characteristics for the controller. 

For the first case above, the modal frequencies were calculated 
assuming a 5 lb. mass payload then a 10 lb. mass payload. The other system 
parameters were generated from measurements of the actual system and are 
given in Table 2. Results of the modal frequency calculations are given in 
Table 3. 


For the last case payloads in 1 to 100 Kg were calculated Table 1. 
Examination of this data reveals that for the segment of interest there is a 
primary mode under 10 Hz. In order to sense a particular mode one must 
sample at a frequency no less than twice that of the particular mode. Thus, 
for this system a sampling rate on the order of 400 - 800 Hz. would be 
necessary to sense the first 3 modes. 

Stiffness 


It was illustrative to make a few calculations to determine that we 
actually benefited by making the arm more flexible and accounting for those 
flexibilities in the analysis. As previously mentioned, every system has 
some degree of flexibility. Whether the flexibility was significant 
depended on the performance requirements. For space application it was 
beneficial to reduce overall system mass. Hence, we needed to determined if 
we could achieve a significant reduction in overall system mass by using 
lighter but more flexible materials while still maintaining reasonable 
overall system dimensions which allow the use of our laser positioning 
system. 

The following were some approximate calculations we made to provide a 
rough idea of what was occurring in this situation. 


39 



The assumptions we made were: 

1. The arm was massless in comparison to the size of the payload. 

2. The arm consisted of a single segment of length L. 

3. Beam deflections at the tip were governed by the equation, (7); 

= FL 3 / 3EI 

where F = ma 

m * mass of the payload 
a » maximum acceleration of the payload 
L = length 

E = elastic modulus of the beam 

I = cross sectional moment area of inertia of the beam. 

4. The maximum amount of stress experienced by the arm could be given 
by the following equation, (8); 

Q = M * ro/I 

where 

M = (mp * a * L) + (mb * a * L/2) 
mb = mass of the beam. 

5. System parameters were: 

L = 10 m 

a = 1x10 g = 9.81x10 m/sec 
mp = 100 kg. 

beam cross-section was cylindrical 
ri = beam inside radius 
ro « beam outside radius 

6. The maximum amount of allowable displacement for the "flexible” 
case was ri . 

7. The maximum amount of allowable displacement for the "stiff” case 
was 0.01 mm. 


40 



8. Material properties of the materials considered were: 




Aluminum 

Steel 

Fiberglass 

density, 

p (kg./m ) 

2770 

7830 

2081 

E 

(GPa. ) 

75 

200 

11.4 

maximum 

allowable 

OF (MPa.) 

365 

450 

(?) 


stress 


With the above assumptions an approximation for the first modal frequency, 
wl , was; 


wl = (3EI/L 3 mp) 1/2 


Considering only first mode deflections the following equations must be 
satisfied for the "flexible” case conditions and the "stiff" case 
conditions : 


ri =FL^ /3EI ro^ =.981*4/(3ri * E n)+ri flexible case 

.00001=FL 3 /3EI ro 4 =98100*4/( 3E f| )+ri stiff case 

The resulting beam mass was calculated by the following equation: 

mb = 10 (ro^ - ri^) p 

Using the above assumptions and formulae we calculated the maximum stress, 
outside diameter, first mode frequency and mass of the resulting arm for 
various arm inside diameters made of the specified materials for both the 
"stiff" and "flexible" cases results in the numbers given in table 4. 

Examination of the data in table 4 revealed that there was a 
significant savings in mass achieved by allowing the beam to be flexible, 
even if we compared materials which were light and flexible with materials 
which were slightly heavier but stronger. Furthermore, the resulting arm 
dimensions were reasonable. For example, an aluminum "flexible" arm with 
inside radius 1.5000 cm. and outside radius 1.5027 cm. had the mass that an 
aluminum "stiff" arm had and 1/50 the mass that a steel "stiff" arm had with 
comparable dimensions. Hence, we have achieved significant mass reduction 
by allowing a beam to be flexible. In addition, the ARM dimensions were 
reasonable enough to allow the use of the internal laser positioning system. 
It should be noted, however, that when a large mass moves at an extremely 
low acceleration, the system becomes very sluggish and has a low primary 
model frequency. 


41 



RESULTS 


We have developed a preliminary design for a flexible two segment ARM 
using space rated technology. Because of the need to test and evaluate the 
ARM under earth gravity conditions a number of compromises were made. In 
general, the technology employed for prototyping is upwards migratable to 
space conditions. 

We have identified the relevant parameters for the ARM. We have 
defined the pertinent parameters and defined the critical characteristics. 
Using this information we have specified and obtained the major critical 
system components. 

The ten major systems have been prototyped and tested. The 
interrelationships between systems was considered and designs and schemes 
developed which would allow each system to operate independently and jointly 
with the other systems. Considerable flexibility was designed into the 
systems to allow latitude in their implementation. Simplicity was sought 

for each system to minimize failure effects and to ease interfacing between 
systems . 


BR 

A beam rider (BR) module was developed that used only one active 
component, the mirror positioner. The mirror position was controlled via a 
feedback loop from a quadrant detector that was located on the 
interferometer assembly and also used by the rotational measurement 
equipment. The other elements were passive in that they did not move. A 
single photodetector was employed which had a high resolution, 2000 x 2000 
pixel, 10 x 10 micron, spot positioning capability. The photodetector 
automatically integrated the signal to determine the centroid of the spot. 
Beam spot diameter and size had no impact upon this ability as long as they 
were held constant. Signal processing was performed in real time using 
analog circuitry. A single optical component, a quarter wave plate, served 
to circularly polarize and unpolarize the beam and reflect the beam spot 
upon the detector. Thus, the BR module required only three elements and 
their associated electronics. 


BP 

A beam positioning (BP) module was developed that used a pair of high 
resolution microstepper motor/encoders . Motor operation and encoder read-out 
were setup for either manual or computer operation. Resolution, precision, 
and repeatability were all in the arc-second range. The greatest 
inaccuracies in the system were due to wobble and unorthogonallity of the 
two axes stage; +/- several arc-seconds. The overall system pointing 
accuracy was well within the one part in 10,000 required for millimetric 
accuracy at 10 m; it was closer to one part in 1,000,000. A 1.4 +/- 0.7 
degree power failure/system down - system up positioning accuracy was also 
provided by the system. 


DME 

A distance measuring equipment (DME) module was developed that had no 
moving parts and prealigned optical elements. The laser beam was delivered 


42 


to the interferometer using a single fiber optic. A single beam left and 
was retroflected colinearly to the interferometer assembly. Three optical 
fibers carried the interferometric information to the associated 
electronics. Submicron resolution was available from the system. 

RME 

The rotational measuring equipment (RME) module was the last system to 
be developed due to the need to finalize the configurations of the other 
systems. It utilized two photodetectors; one measuring the intensity of the 
output beam and the other the intensity of the return beam. The latter was 
a quadrant detector which also served as the positioning sensor for closing 
the loop of the mirror positioner unit. Because of the delay in 
implementing this system it was not possible to optimize its performance. 
There were deficiencies in the linearities and performance of the detectors 
and electronics. Resolution was, therefore, suboptimal, on the order of 
one part In 1000 to 3000. 


Elbow 


The elbow articulation was the basis for a single degree of freedom ARM 
testbed. A custom designed high torque— low weight brushless three phase 
motor was specified and obtained. A zero backlash 200:1 Harmonic drive 
gearbox was specified and obtained. The housings of these units were 
capable of mounting to the proximal segment and supporting the distal 
segment. The prototype motor and gearbox assembly were used to evaluate the 
performance of this combination and to determine the wind— up or spring 
constants inherent to the harmonic gearbox. This value was an Important 
parameter in the motor/gearbox model. 

Shoulder 


The shoulder articulation was the most complicated of the systems 
developed. It consisted of a base assembly situated on a tripod. The 
azimuthal motor rested on the base and was surrounded by outrigger bearings. 
The fork bolted to the top motor plate, which also rode on the outrigger 
bearings. The two arms of the fork extended upwards and had bearings 
mounted on each distal end. The yoke pivot mounted to the fork bearings. 
The yoke accepted counterweight plates on each side of the back of the 
assembly. The front of the assembly was flanged to accept the mating piece 
from the segment. The central portions of the fork and yoke were empty to 
allow placement of the BP. 

The shoulder required two different motors and drivers. The elevation 
motor was a DC brush motor coupled through a 100:1 harmonic gearbox. It was 
driven by a high current linear amplifier using a voltage controlled 
preamplifier. The azimuthal motor was a multipole direct drive annular 
motor with a semi— Intelligent controller which could be operated in analog 
or digital torque or velocity modes. The two motors were connected to a two 
degree of freedom joy-stick for manual operation. The gain in the 
preamplifiers was adjustable so as to be able to equalize the torques 
applied to each axis. 

Passing through the center of the azimuthal motor was the support 
segment for the BP. The shoulder and the BP support segment were each 


43 



bolted independently to a common base. The support segment was a rigid 9 
cm, (3.5 in.) diameter steel tube. 


Segments were designed to be of a non-critical design factor and 
interchangeable, i.e., the ARM was not sensitive in operation to any 
particular segment, only that the segments conform, in general, to a set of 
design parameters, and, in particular, design parameters determined by the 
particular task to be undertaken. The basic criteria for the selection of a 
segment was payload. (The payload, in this case, being the sum total of the 
"weight" applied to the distal end of a segment.) A minimum and maximum 
payload was determined for a segment. Two factors influenced these values. 
One was the frequency ranges of the modes of vibrations. The other was the 
range of travel on the counterweights required for operation. 

We selected segments for use dependent upon the payloads they were 
required to carry. Most of the testing was performed using a 5 m. ( 15 ft.) 
long 9 cm. (3.5 in.) diameter aluminum segment. The elbow design parameter 
called for a 34 kg. (75 lb.) payload at the distal end of the distal 
segment. The shoulder design parameters called for a 182 kg. (400 lb.) 
payload at the distal end of the proximal segment. The elbow and shoulder 
design parameters were based upon a two meter articulation-to-articulation 
separation and, therefore, were actually indications of the maximum torques. 
Longer segments would have reduced payloads and shorter segments greater 
payloads . 

Calculations were performed to compare a "flexible" and a "stiff" 
segment. There was a significant savings in mass achieved by allowing the 
beam to be flexible, even when we compared materials which were light and 
flexible with materials which were slightly heavier but stronger. For 
example, an aluminum "flexible" segment with inside radius 1.5 cm. and an 
outside radius of 1.5027 cm. had 1/20 the mass of an aluminum "stiff" arm 
and had 1/150 the mass that a steel "stiff" arm. 


Calculations were performed to compare segments made of five different 
materials; titanium, aluminum, E-glass/Epoxy , UHM Graphi te/ Epoxy , and 
Beryllium. For a 7 m. segment with a 10 cm. internal radius capable of 
carrying the same payload the following were obtained: 


Material Outside Radius (cm.) 


Weight (kg.) 


Titanium 11.06 221.31 
Aluminum 11.51 197.61 
E-Glass/Epoxy 11.93 181.14 
UHM Graphite/Epoxy 10.50 37.56 
Beryllium 10.44 35.89 


Hardware 

A 20 slot VME bus Intel 80383 based computer system was implemented. A 
Force CPU 386 main computer board with 2 megabytes of memory was used. A 
Micromemory board with 4 megabytes on board, expandable to 16 megabytes, was 
obtained. A Metrabyte VMECAI 16 digital I/O board, a Xycom XVME-201 analog 
input board, and one 6u and two 3u prototyping boards were purchased. A 


44 



Powertec, Inc power supply served to supply the system. A TeleVideo monitor 
and keyboard served for user I/O to the system. 

Sof tware 


A variety of software packages were used on the project. The computer 
had a ROM based Force Debug program which initialized the CPU board to 
protected mode and allowed user control of low level functions and debugging 
capability. Matlab, a matrix algebra program, was used for performing the 
modeling calculations. Programming was done in ADA. Initially, a Janus ADA 
compiler was used. We migrated into the Alsys compiler from the 286 to the 
386 version. Ultimately, we used a beta version of the 386 cross compiler to 
implement a real time operating system on the target computer. 

A Ready Systems VRTX 32 real-time operating system was purchased for 
the system. This was, ultimately, found to be unimpleraentable. This was 
because the board support package for our computer was not available and 
support for the Alsys environment was never developed. 

An assembly based board support package was written using the Phar Lap 
386 ASM/LinkLoc assembler for the Alsys 386 cross compiler. The package 
initialized the environment for the Alsys run time kernel. It initialized 
the clock and I/O ports and initiated the down load procedure. 

The low level device drivers were written using the Alsys 286 compiler 
environment. These included driver specification packages, device driver 
packages, and action level packages for the I/O boards. A variety of 
generic routines were generated. These were a Calendar to set timing, an 
Interrupt manager to manage Interrupts, a Communications interface to manage 
interface protocol, an Unchecked conversion to handle errors, an Unsigned to 
handle unsigned numbers, graphic functions, and mathematics library, and I/O 
routines . 

The high level programs were "mission” level code. These were written 
for particular "missions”, e.g., control of the linear voice coil driver for 
the BR module, for testing the lateral effects diode, and control of the BP 
module. 

A system design for ARM III was configured, Figure 23. At the top, 
using a single data format, were the: 

1. Main System Tasks 

2. Initialization Tasks 

3. High Level Control Tasks 

4. Low Level Control Tasks 

5. Internal Format Buffers. 

At the bottom, using variable data formats, were the: 

1. Device Buffers 


45 



2 . Interfaces and Filters 

3. Device Nodes 

A. Actuators 

1. shoulder 

2. elbow 

3. BP 

4. BR 

B. Encoders and Detectors 

1. DME 

2. RME 

3. shoulder 

4. elbow 

5. BP 

6. BR 

Intermediate to these system portions were the translation and filters. 
These were responsible for the interconversion of data from a uniform format 
to the device specific formats and vice versa. In addition, from this 
stage, was the interface to the data storage area. 

Adaptive Control 

An adaptive control program ARMCON was written to model the behavior of 
a single link flexible segment. Four steps were required for execution. 
These are explained in detail in Appendix I. The first was to run 
ARMMODEL. The second was to run MATLAB. The third was to translate the 
files for the fourth program, SIM1AC. The translated output of the 
simulation was presented as a graphic output to the screen. The screen 
graphics provide three moving displays. One was an emulation of the segment 
rotating about a center pivot. The second, coordinated with the first, 
provided an appropriately labeled graph showing end tip displacement 
response. (J2, from the normal position. The third was the DC driving 

voltage. Additional data displayed was the time after initiation, the 
endtip velocity, and the endtip acceleration. 

ARMMODEL had six options. These were: 

1. Input Values 

2. Calculate Coefficients 

3. Display Calculated Data 

4. Display Matrices 

5. Print Data to Disk (For Printer Output) 

6. Save Matrices for MATLAB. 

Input parameters were the: 

1. Base rotary inertia 

2. Tube inside radius 

3. Tube outside radius 

4. X-sectional inertia of beam 

5. Payload mass 

6. Mass/length of beam material 


46 



7. Elastic modulus of beam 

8. Length of beam 

9. Beam material damping coefficient 

The program calculated the coefficients and saved the matrices for use with 
MATLAB. 

The MATLAB execution had four parts. The first part, ARMMOD, modeled 
the behavior of the segment, base, and counterweight assembly. The second 
part, MOTGER, Figure 24a, modeled the behavior of the motor and gear box. 
The third part, COMBINE, combined these models and the fourth part, SIMCOMB, 
Figure 24b, allowed for the insertion of the operating parameter. A further 
MATLAB operation, TRANSLATE, translated the matlab product files to flat 
ASCII files for use with SIM1AC. 

SIMCOMB allows for operator input of the control voltage. Provisions 
have been made for a time varying DC voltage for the prime control and up to 
three decaying time and phase varying AC voltages at different frequencies 
for vibration control. A set of simulations was run for a 2 m segment. The 
input data was printed out as an ARM MODEL data file, see Table 5. 
Different input voltages were used to drive the model. Figures 25 and 26 
were examples of a single DC kick start and a DC kick start with an 
exponentially decaying signal. The step DC voltage starts exhibited a 
characteristic set of oscillations at the end tip. A exponentially ramped 
up voltage input, 1 - exp(-3t), provided a relatively smooth start, Figure 
27, however, a second order oscillation was observable. The addition of a 
quickly decaying, large amplitude, phased sinusoidal input, Figure 28, 
substantially reduced these oscillations. Further refinements were possible 
using AC inputs of various frequencies, phases, amplitudes, and duration. 

SIM1AC ran a simulation of the behavior given DC and AC input 
parameters. It was present as an updated animated moving graphics display. 
For a tuned adaptive controller, the ARM would exhibit the same behavior as 
that shown on the screen. Figures 29a and b were the SIM1AC final screen 
of the function shown in Figure 27 and 28; the end tip displacement was 
shown in greater resolution and exhibits ringing upon startup. Figure 29 b 
showed the effect of adding a second order decaying AC control voltage to 
actively damp the induced vibrations. 

Safety 


A safety assessment of the ARM was performed. A number of recommendations 
were made. A list of these is contained in Appendix E. 


4 7 


DISCUSSION 


W thin the results section of this report we have covered many topics. 
Let us first discuss why it was necessary to take into account the effects 
that compliance has on the behavior and control of a mechanical manipulator. 

The main reasons were derived in the presentation of a system model. These 
were : 


1. As positioning requirements become more precise the significance 
of compliance in the system increases and 

2. To reduce overall system mass it was necessary to use lighter and, 
therefore, more compliant materials. 

Because the major goal of this project was the precise positioning of 
long, flexible manipulators, there was significant compliance in the system. 
We avoided the approach of using a massive rigid body to precisely position 
the end tip. Instead we relied upon an essentially massless beam of light 
to act as our rigid frame of reference. 

This approach also facilitated the need to reduce overall system mass. 
Because of the need to launch the system into space, reducing system mass 
became a prime objective. The more compliant the system was allowed to be, 
the less mass that was required in the segment. Although the articulations 
were required to be rigid bodies, reducing the segment mass reduced the 
forces on the articulations and, therefore, reduce their massiveness. 

We derived a mathematical model of the system which took into account 
the flexure of the segment. Previous work by Cannon and Schmitz (9) 
demonstrated that the segment end tip position could be used in a closed 
loop feedback system to actively control the ARM. The experimental set-up 
used by Cannon's group required external sensors to measure end tip position 
for feedback control. However, external sensors are difficult to implement 
in practice. Therefore, we implemented a concentric laser positioning 
system to measure end tip position. This approach had several advantages: 

1. No external peripheral apparatus was required, 

2. A reduced number of sensors was required; there was no transition 
problems between multiple sensors that externally mounted sensing 
units require, and 

3. Measurement were made relative to a common frame of reference. 

Track I_ - Positioning Sys tern 

To be meaningful, we had to know the position of the end tip to six 
degrees of freedom, Figure 30. In other words, we were required to know the 
current position, three degrees of freedom, and point to a new location, 
three degrees of freedom. Such precise positioning was demanding under any 
set of conditions; we made it more difficult. We wanted to accomplish our 
positioning with a single laser beam. 

The simplicity of the concept of using a single laser beam was 
compelling. We evaluated a large number of single and multiple beam 


48 



positioning schemes. As a scheme became more convoluted and complex it was 
dropped. We distilled the essence of the various schemes into the final 
approach. The final design used one beam reflected within a cavity defined 
by the rigid bodies of each of two articulations. Theoretically, it was not 
even necessary for the two ends to be physically connected. In reality, the 
physical connection between the two ends defined the limits of operation and 
simplified design of the system. 


BR 

At the distal end of the segment was the beam rider (BR) module. The 
original design of the BR was a rather complicated affair, Figure 5. It 
used a pair of quadrant diodes with center orifices to monitor beam 
position. Beam displacement was used in a feedback mode to actively 
reposition the module in two dimensions. Two problems were defined for this 
scheme. The first was the need for a precise linear positioner and the 
second was for some mechanical linkage between the beam rider and the 
articulation. 

We evaluated the status of linear positioners and found nothing that 
met our requirements. Therefore, we developed a scheme for a multi-voice 
coil linear positioner with variable waveform drive capacity. Although this 
driver functioned well, the signal processing required to implement its 
motion was incredibly complex. Extrapolating from the 8088 based system we 
used initially to a 16 MHz 80386 based machine and to a 128 coil 
configuration, we estimated that we could update drive rates to the coils at 
frequencies at or below 7 Hz. Our design objective was in the 500 to 1000 
Hz. range. 

We developed a more simple scheme for the BR. We had identified some 
highly accurate, 2000 x 2000, pixel lateral effect diodes that avoided the 
image recognition problems associated with a CCD type matrix. The centroid 
of the beam spot was automatically provided and, within limits, the size of 
the beam spot was irrelevant, i.e., the beam spot was small compared to the 
size of the active surface of the diode. A beamsplitter could be used to 
split a portion of the beam to the diode and transmit the rest for the other 
positioning sensors. This portion of the system could then be passive, 
i.e., no moving parts. 

Our positioning concept required the retroflection of the incident 
beam. Originally, a mirror attached to the active BP would be positioned to 
do this by the linear positioners. With the elimination of the linear 
positioners an alternative scheme was required. The technical name for this 
unit was a Fast Steering Mirror. Three suitable units were identified, one 
was too expensive, one was not yet in production, and the third was 
purchased. 

The piezoelectric unit was not yet in production. Preliminary data 
from prototype units indicated that it was ideal for our application. It 
should be seriously considered for any future development in this area. 

The quadrant voice coil unit we used functioned after significant 
development effort. It had the frequency response required but required a 
lightweight mirror. The weight requirement affected the quality of the 
mirror and, therefore, degraded system performance. 


49 


The other element employed in the BR was a quarter waveplate. It had a 
triple duty. The polarized incident beam was split by mounting the plate at 
an angle. The split beam was reflected onto the lateral effects diode. The 
transmitted beam was circularly polarized. The circularly polarized beam 
reflected by the mirror was converted to a polarized beam orthogonal to the 
polarization of the incident beam. Rotation of the segment and, thus, the 
articulation and wave plate changed the efficiency of the orthogonal 
polarization conversion. This principal was used to measure rotation. 

BP 

We were fortunate enough to find a space rated BP unit with the 

required arcsecond pointing capability required. This unit, built for the 
Hubble telescope was ideal for our current and future space needs. 
Unfortunately, the cost of a ground based unit was that of our total 
equipment budget and, thus, beyond our means. Therefore, we had to develop 
our own unit. 

Initially, the BP was to position a mirror which would reflect the 

laser beam down the segment. For this concept to function, it was necessary 
to have a hollow central orifice in the azimuthal axis of rotation. This 

requirement restricted the drive and encoder designs which could be 

incorporated into the unit. Ultimately, we modified the laser beam delivery 
system such that the laser beam was delivered to the beam positioner through 
a fiber optic. This greatly simplified design considerations. The price we 
paid was in beam intensity. 


DME 

The DME was interferometric in nature. Polarized light was used so 
that, by detecting its orthogonal components, P and S, two signals were 

derived which were in phase quadrature. These signals enabled normal bi- 
directional counting techniques to be employed. Both signals consisted of 
sine waves which related to the path difference in the two arms of the 

interferometer. The sine wave was superimposed on a DC level, which was 

related to the light which does not produce interference. 

Misalignment of the system decreased the amount of light producing 
interference. This was seen electronically as a decrease in the sine wave 
component and a increase in the DC level. In order to trigger a counter it 
was essential to have a stable DC level. Two systems have been developed 
which overcome this problem. One was patented by Hewlett Packard. The 
other was based on a design developed by M. Downs and K. Raine at the 

National Physical Laboratory. The line was initially commercialized by 

Barns and Stroud in England. Subsequently, the line was purchased by 
Coherent Radiation Labs and, after several years, dropped by them. We used 
this latter system. 

In this system, plane polarized light from a single frequency 
stabilized laser was split by a single plate so that each beam had equal 
intensity. Each beam contained an equal amount of P polarized and 
S polarized light. The polarization content was achieved by rotating the 
plane of polarization of the laser to approximately 45 degrees. On 
recombination, the interference pattern could be viewed either in 


50 



transmission or reflection. 


Two quadrature signals were produced by examining the P and S 
components. By introducing a one-eight wavelength mica retardation plate, 
it was possible to retard either the P or S component by 90 degrees. An 
additional polarizing beam-splitter and selective polarizers were used to 
produce three signals, each having the same DC and AC levels but having 
phase angles of 0, 90, and 180 degrees. Subtraction of the 0 and 90 degree 
signals and the 90 and 180 degree signals results in two further signals. 
These latter two signals had a zero DC level and were in quadrature. Any 
changes in the DC levels did not affect the bi-directional counter because 
it was set at a trigger level of zero. 

The standard HeNe laser had three main limitations in its use in an 
interferometer. 


1. Multiple modes of oscillation, 

2. Frequency stability, and 

3. Sensitivity to optical coupling back in the laser cavity. 

Multiple modes were controlled by using a short tube which supported 
only two modes. These were linearly and orthogonally polarized. Laser 
stabilization was achieved by maintaining a constant distance between the 
laser mirrors. The tube was heated to adjust the cavity length so that, by 
using polarizing beamsplitter and photo— detectors , the intensity of the two 
modes could be adjusted and maintained equal. 

Normally, the use of re trof lectors and the displaced return beam 
eliminates the possibility of any coupling back into the laser cavity. For 
our application it was necessary to use a single beam. The beams were 
decoupled by utilizing the polarized nature of the beam. The lateral 
displacement prisms reflected and transmitted the S and P waves differently. 
Therefore, by rotating the plane of polarization by 90 degrees in the BR 
module, the input and output beams were decoupled. 

RME 

The RME also relied on beam polarization. Any rotation of the distal 
end tip affected the efficiency of the conversion of the S and P waves. If 
the return beam intensity was monitored, all other parameters held constant, 
changes in beam intensity indicated a rotation of the distal end tip. 

As previously mentioned, the output beam intensity varied because of a 
number of reasons. One of these reasons was the movement of the fiber optic 
delivering the beam to the BP during movements of the physical ARM. Because 
of the nature of operation of the DME decoding operation, it was not 
particularly sensitive to these intensity changes. On the other hand, the 
RME, which relies on beam intensity, was quite sensitive to these changes. 
Therefore, we needed to develop a scheme which would be immune to beam 
output intensity variations. 

The scheme selected was to measure the intensity of the beams up and 


51 



back from the segment. Theoretically, the ratio of these two should remain 
constant. In practice we encountered several problems. These problems 
related to the sensitivity, linearity, and dynamic range of the detectors 
and to the electronics. 

The Basic difficulty was the same reason that the scheme worked well 
for the DME. Small rotations about the optimal quarter wave plate 
orientation, impact the beam intensity very slightly. For example, about 
the optimal orientation, the return beam detector output amplifier produced 
a 12 volt signal. Rotations of one or two degrees resulted in a signal 
change of one or two millivolts. When a rotation was chosen further from 
the optimal operating position, the signal changes were more dramatic, i.e., 
hundreds of millivolts. Unfortunately, when operated far from optimum, the 
DME loses signal intensity and, thus, count. Additionally, coupling back 
into the laser cavity was possible. 

We have evaluated some high dynamic range, i.e., one to a million 
range, detectors from Dalsa. Initially, their responses were deemed to be 
too nonlinear over the entire range to be of use. However, we would require 
only a small portion of the entire range for rotation measurement. 
Therefore, the large dynamic range detectors could provide a solution. In 
operation, the two beams being analyzed would be coupled into fiber optics. 
The fibers would deliver the beams to the detector board with their 
integrated electronic circuitry. 

There were several electronic signal processing schemes which could be 
used to isolate the signal portion of the detector input, i.e., the changes 
associated with intensity variations. An automatic gain control circuit or 
a differential amplification circuit could be used. There were two problems 
which must be considered however. The first was if the dynamic range of the 
detectors currently being used was satisfactory. The second was that we 
need to work with the ratios of the up and back beams and not their absolute 
values. 


Track IJt Physical ARM 

The original design scheme for the ARM envisioned a hollow structure 
in which a light beam would pass from the base of the shoulder, through the 
elbow, and out to the distal end tip of the distal segment. The structure 
was a folded cavity with positioning mirrors located within the shoulder and 
elbow articulations. The elbow would have had a 90 degree freedom of 

rotation and the segments would be approximately 7 m. in length. 

The final design scheme for the ARM confines the laser beam to a single 
segment and used a solid articulation at the elbow. This design had the 
advantage of simplifying the positioning system in that it was no longer 
necessary to accurately reflect the beam through the elbow. Rather, the 
positioning system would be cloned for each segment. 

A second advantage to the new design was that it could use shorter 

segments. By increasing the freedom of rotation of the elbow to 360 

degrees, a pair of 5 m. segments could be used to obtained the desired 10 m. 
reach. An advantage to a sorter segments was in the amount of flex or 

compliance. The flex of the segment was proportional to the cube of the 
length. Therefore, shortening of the segment resulted in a segment with 64% 


52 



less compliance. This significantly decreased the rigidity required of the 
segment for a given payload positioned at the same rate. Decreasing the 
rigidity of the segment also decreased the mass of the segment and, 
ultimately, that of the entire system. 

Elbow 


The elbow articulation was the first one prototyped. It consisted of a 
yoke with the segment attached to one end and counter weights at the other. 
The yoke assembly balanced upon the shaft of the motor gear box unit. The 
assembly mounts above the plane of the proximal segment in order to have a 
clear field of rotation. Because of cabling the rotation was limited to +/- 
180 degrees. For safety sake, to avoid possible collision with the shoulder 
articulation, rotation was limited to +/- 170 degrees. However, because of 
budget and time limitations the connection between the proximal segment and 
elbow articulation was never implemented. 

To accommodate a reactionless drive requires a modification of the 
motor gearbox/harmonic drive coupling. There are two positions where a 
flywheel can be mounted. One location would rotate the flywheel at the rate 
of segment rotation while the other would rotate at the speed of the motor 
rotation. The latter would rotate 200 times faster than the former with a 
concomitant decrease in the required mass of the flywheel. If the motor is 
decoupled from the gearbox and surrounded by a flywheel, it can then 
free-wheel in reverse of the torque provided to the drive shaft. Therefore, 
the torque required to rotate the distal shaft is not transmitted to the 
proximal segment and the base. Thus, we have a reactionless drive. 

Douglas Rohn at NASA Lewis Research Center has developed several 
traction drives. There are several advantages to traction drives in the 
area of backlash. To accommodate traction drives required the latter 
design configuration for the ARM, since the traction drive designs tend to 
have solid centers, i.e., no central orifice,. 

Shoulder 


The shoulder was a robust assembly capable of dealing with the weights 
of the components required to function under earth gravity conditions. 
Among these are the massive counterweights required to balance the payload. 
Each prong of the yoke carries 102 kg. of counterweight for a total of 204 
kg. The yoke itself must act as a rigid body, therefore it was designed 
massive enough not to flex when subjected to the forces required to position 
the ARM. From here down the structure becomes progressively more massive at 
each piece had to bear the weight of the structures above it and contributed 
its own weight to the structure. 

One advantage to this massive structure is its inertia. Being massive, 
small forces and torques exerted upon it have little affect and tend to 
dampen. This dampening effect can further be aided by the use of 
vibrational isolation components. A number of these are available. 
Elastomers can be used between components and on the mountings. A sound 
dampening material can be applied to all of the free surfaces. Because of 
our desire to initially characterize the basic system, none of these steps 
have been implemented. 


53 



In general, the response of the assembly to vibration was small. The 
components most affected were the segments. This suggests that it may be 
desirable to coat them with vibrational dampening materials or to include an 
absorptive material in their construction. The BP support segment was 
especially susceptible to vibrations transmitted from the base. 

Segments 

We have characterized the requisite parameters for segment design and 
developed a program to model their performance. We have analyzed their 
performance as a function of length and of material. Based upon the 
objective of a 10 m. reach our design utilizes two 5 ra. segments. Because 
the articulations require some space, the actual length required of the 
segments was somewhat less than 5 ra. 

In the results section we presented data on the parameters for a 
stiff” and a “flexible” segment. We found that there was a significant 
savings in mass achieved by allowing the segment to be flexible. We also 
presented data on the required cross section for segments of different 
materials with similar length, inside radius, and payload capabilities. The 
most exotic materials, OHM Graphite/Epoxy and beryllium, were significantly 
lighter, only 20% of the weight of a more common material such as aluminum. 
Therefore, a flexible segment of an exotic material can easily be justified 
for space use even with the significant increase in the production cost over 
more common materials. 

Using the 5 ra. value we determined the principal modes of vibration for 
segments of different material. In scaling the system the primary objective 
was to match the primary modes of vibration between the segments of 
different length. An interesting phenomena was the behavior of the 
resonant frequencies with changes of payload mass. Table I presents data 
for aluminum and steel segments of the dimensions we used. The second set 
of data in the table was for a 9 cm. diameter segment of the type we used. 
Payloads modeled ranged from 2.27 kg (5 lb.) to 181.3 kg (400 lb.). with 
these different payloads the first mode frequency ranged for 3 to 18 hz., a 
500 % increase. The second mode ranged from 95 to 110 hz., a 16 % increase. 
The third mode ranged for 309 to 327 hz., a 6 % increase. The principal 
mode was, thus, determined to be of prime importance in scaling. 

Track III - Control System 

Our control problem for this project was one of real time robotic 
control. The real time aspect was the driving force behind hardware and 
software selection. Real time was used to define a time frame of action or 
response from the control system. In general, the response time had to be 
faster than any particular set of movements such that the system could react 
before any untowards event occurred. The second general timing factor was 
the bandwidth required to sample events. For example, it was necessary to 
sample at twice the frequency of an event in order to accurately determine 
the frequency of the event. Therefore, for a third order mode in the 400 
hz. range, sampling was required at 800 hz. Thus, a timing factor on the 
order of one millisecond was indicated. 

In order to increase the time of response, a mixture of analog and 
digital technology was used. In general, much of the low level control and 


54 



sensing was performed using analog circuitry. The mainstay of the position 
detection systems were the lateral effect diode and the quadrant diode. 
These each had four output signals. These signals were buffered, summed, 
subtracted, multiplied, and divided using analog components. This approach 
yielded microsecond response times. The greatest problems associated with 
this circuitry was the generation of unstable high frequency oscillations. 
Although a number of fixes were possible, we chose to degrade the response 
times to submillisecond to stabilize the circuitry. 

Most of the driver circuitry was analog. Motor or driver control 
signals were, in general, a voltage. A particular input voltage 
corresponded to a particular output current and, therefore, torque produced 
by the prime mover. Some of the driver circuitry was modified to act in a 
semi-digital fashion, e.g., the use of pulse width modulation. Conversely, 
some of what might be considered as digital technology, i.e., stepper 
motors, were operated in a more analog format, microstepping. Where 

possible, a feedback controlled loop was established using analog 
technology, e.g., the loop between the mirror mover and the quadrant diode. 

In a sense the control system was modeled after the human nervous 
system. Actions which required quick response were set in a reflex arc with 
information of the events that transpired being passed to the higher 
cognitive functions of the computer. The higher order functions were 
executed by the computer. These included mission level tasks such as 
predicting how the system would respond to a certain set of stimuli, i.e., 
modeling, planning and sequencing a set of moves to generate a path from 
point A to point B, tracking the path of the move and determining the need 
for midcourse correction, unilateral system shutdown, and communication with 
the operator. 


Hardware 


The computer hardware will be more useful in the future than it was in 
the present. The process of system definition, design, selection, and 
implementation of the target computer system consumed the allocated time and 
left none for actual operation. However, the host computer system was 
essentially identical to that of the target computer system. The major 
difference was that the host operated under the interrupt driven MS DOS 
while the target operates with a real time kernel. Thus, the work performed 
on the host was directly applicable to the operation of the target. 

The engineering impetus for switching to a VME bus was reliability. 
Because of the planned application of the ARM safety and reliability became 
an obsession with the engineers. The development of the dedicated computer 
system consumed resources in excess to its current utility. It was a much 
more difficult and complex task than was ever allocated for in the original 
proposal. However, given its current operational status and our boost along 
the learning curve, we are in an excellent position to implement the control 
system. Thus, the hardware is more of a Phase III tool that it was a Phase 
II tool. 


Software 


The availability of 32 bit microprocessors with their four Gigibyte 
address space allow for the creation of embedded systems incorporating truly 


55 



gargantuan programs. Popular programming languages are hard pressed to 
support programs forged with mega-lines of code, but Ada meets that 
challenge. NASA has adopted Ada as the official programming language of the 
Space Station Freedom Project, and expects the computerized system aboard 
the space station to require millions of lines of code. Ada appears to be 
the language of the future. 

Unfortunately, the development of the Ada language and its 
implementation has been slower than expected. The Ada development systems 
have been less than promised and their deliveries have lagged their schedule 
by years, i.e., vapor-ware. We adopted the Ada language over four years ago 
and have ridden this rocky path. 

Some of the strong points of the Ada language were the following: 

1. Top-down development 

2. Strong data typing 

3. Abstraction 

4. Information hiding and encapsulation 

5. Separation of specification from implementation 

6. Reusability 

7. Separation of physical realization from logical concepts 

8. Portability 

9. Modularity 

10. Readability 

We were able to make good use of the strong points of the Ada language to 
develop code. The code we developed years ago, using using a now obsolete 
development system and compiler, were upgradable to our present system. 
After a year of vapor-ware, we finally received our validated 386 compiler 
and programming environment. In summary, we have a great tool for Phase III 
but lacked what was actually required for Phase II. 

Fortunately, because of the vapor— ware problem, Alsys owed us a favor. 
Therefore, we were able to evaluate a beta copy of their 386 cross compiler 
(not released in a final form as of the date of this report). With this 
package we were able to design a board support package which should 
initialize the target computer to allow the downloading of the runtime 
executive program. While the executive does support Ada tasking, it does 
not support the tasking attribute of the 386 protected mode. 

MATLAB has lived up to its claims. This matrix algebra program was 
very useful for our model implementation. Unfortunately, we had 
difficulties implementing matlab from our programming environment. This was 
because our "386” Ada compiler was actually a 286 version and required a 287 
math coprocessor. MATLAB was a 386 version and required a 387 math 
coprocessor. Although our host computer supported both the 287 and the 387, 
we had to physically toggle a switch between the two. Therefore, we had 
to choose which of the programs would be run before turning on the computer. 

The Microport System V/386 Unix environment functioned well. It was 
utilized by the engineers familiar with Unix from their work at the 
University of California, Berkeley. It facilitated the transfer of programs 
from the university based computers. 


56 



We utilized both the Microsoft assembler MASM and the Phar Lap 
assembler, ASM/LinkLoc. Although MASM was quite functional it used slightly 
different terminology than LinkLoc. Because the real time kernels were 
written with the Phar Lab LinkLoc environment, this environment was required 
to effectively write the board support package and implement downloading. 

The DME program was something of an anachronism. It was written in 
basic and performed a variety of function not required for this project. We 
were able to obtain a source code listing. Therefore, we have the capacity 
to rewrite the program if required. Because of the defunct state of this 
product, a VME based board or a revision of the software does not appear 
likely. Currently, the system runs off of a dedicated 8088 computer system. 
The simplest solution to bring it onboard the VME bus is to use one of 
Xycom's XT short card adapter boards. 

The VRTX/32 was of no use to us. Originally, they shipped VRTX/16 and 
a board support package adaptable to the Force CPU 386. By the time they 
created the VRTX/32 support of the Force CPU 386 and the Alsys environment 
had been dropped. Creation of the BSP was beyond the abilities of this 
project. 


Adaptive Control 

We have analyzed how our system model could be used in the design of a 
controller for the active control of the ARM end tip position. The end tip 
position was controlled by the application of a torque at the base. It was 
noted that, because the model required an infinite numbers of dimension, it 
was necessary to truncate it. (An infinite dimensional system was difficult 
to deal with because it required an infinite dimensional controller.) 

We covered the concepts of robust control design, direct adaptive 
control design, and adaptive control design techniques for use in the design 
of our controller. It was determined that indirect adaptive control was the 
best option because a robust control design would lead to an overly 
conservative design, and direct adaptive control had technical 
implementation problems. 

We made some approximate calculations to determine if making an arm 
"flexible" as opposed to "stiff” really resulted in the desired objective of 
reducing the overall system mass. We found that for a 10 m. long single 
segment arm which could move 100 kg. payloads at microgravity accelerations, 
the mass of the arm could be reduced by a factor of roughly 20 by allowing 
it to be flexible. For higher accelerations the mass ratio was further 
increased. Another result of these calculations was that the mass of the 
segment, compared to that of the payload was not negligible. Therefore, for 
modeling, the segment mass needed to be considered. 

Preliminary to the design of our system, we modeled the behavior of a 
single segment flexible ARM. We developed a program to calculate the first 
three modal frequencies based upon a variety of input parameters. We 
compared this data for different configurations of base and counterweight, 
segment materials, diameters, and lengths, and payloads. We determined, for 
our design, sets of segments which would have approximately equal first 
modes of vibration and third order modes under 500 Hz. 


57 



The model was adjusted for a typical set of operation parameters. 
Simulations were subsequently run to predict the displacement of the segment 
end tip. The kick start simulation ran, as expected, with easily 
discernible modes of vibration. Soft start configurations had less 
pronounced oscillations. These secondary oscillations could be exacerbated 
or reduced by driving at the proper phase and frequency. Controlled wave 
shaped starts not only decreased the initial end tip displacements, but also 
reduced the energy channeled into secondary modes of vibration. 

In general, the model behaved as expected for simple conditions. Thus, 
in the general sense, we validated the model. We were not able to validate 
the model against the physical ARM; this would be the next logical step. 
There was some problem with model "run away" in the long term. This was a 
linear increase in the end tip displacement at a rate of 1 to 2 
raicrometers/second. We were not able to locate the source of this problem; 
we could add a linear term in the voltage formulation to compensate for 
this drift. 

The purpose of the simulation model was to form the basis of the 
indirect adaptive controller. The model appeared to be suitable for this 
function. The simulation model must be consolidated into a software package 
suitable for operation with the computer system. Initially, variables were 
hand entered; these would actually be derived from ARM sensors. The system 
must then be taught the proper or preferred responses to these stimuli, 
i.e., scaling factors and selection criteria. This would create the 
required smart or intelligent system. 

As we have previously mentioned the degree of artificial intelligence 
of a system depends upon the hierarchical level of the system. Our system 
requires a number of levels. These vary from the low level reflex closed 
loops to the higher level control and mission functions. Thus, our system 
can be considered to possess some intelligence. 

An expert system depends upon production rules to determine the best 
solution to a particular problem. We have developed a protocol to model the 
behavior of the system. The parameters of the model can be varied to 
produce a response similar to the actual responses of the system, 
validation. The validated model can be used to predict the response of the 
system. This ability provides a mechanism for path planning. Once the path 
has been determined, the model stores the parameters. At this point the 
model becomes the controller and drives the motors to move and position the 
end tip. 

The actual end tip position was determined by the positioning system. 
The physical placement of the ARM was an approximation to the desired 
position. This was because the resolution of the arm drivers was limited by 
mechanical factors to be much less than that required for the desired 
positioning accuracy. Therefore, it fell upon the positioning system to 

accurately determine the actual position of the end tip. Given the actual 
position, fine positioners on the distal end tip can be used to manipulate 
the payload into the exact position required. 


58 



CONCLUSION 


We have developed the preliminary designs for the critical systems 
necessary for a flexible two segment Articulated Robot Manipulator (ARM) 
using space rated technology. These systems were breadboarded , or 
prototyped, and tested and evaluated under earth gravity conditions. 

The principle goal of the project was to demonstrate the feasibility of 
using a laser beam for determining, with millimetric precision, the position 
of the distal ARM endtip in six degrees of freedom over a 10 m. distance. 
We developed a scheme which allowed as to accomplish this using only a 
single laser beam per segment. 

The second goal was to develop a control scheme which would allow 
active control over the Physical ARM based upon the laser reference system. 
We adopted a control theory which allowed for the positioning of the 
physical ARM based upon the distance d between the nominal static reference 
beam position and the actual reference beam position under dynamic 
conditions, the vector U2. We identified a type of controller, the indirect 
adaptive controller, suitable for the pick and place duty of the ARM. We 

constructed a model of the system which served both to define the needs of 

the physical ARM and act as the basis of the indirect adaptive controller. 

The third goal was to prototype the physical ARM in order to test and 

evaluate the requisite concepts. We prototyped three versions of the ARM. 

The first had a static base and was used to evaluate the properties of the 
segment. The second rotated with one degree of freedom and served as the 
basis of the elbow articulation. A zero backlash motor-harmonic gear box 
was used as the driver. The output torque of the unit was a function of the 
control voltage/motor drive current. The behavior of this unit was used to 
identify and define the motor-gearbox transfer function. The third version 
was the shoulder articulation. It rotated on two mutually orthogonal axis. 
The center of this articulation was hollow such that the laser guidance 
system could be located collinear with, but independent of, the physical 
ARM. 


We developed, defined, and breadboarded or prototyped ten systems for 
this project. Four of these were for the positioning system. Three of 
these exceeded the positioning requirements. These were: 

1. The Beam Rider Module - measured two dimensions, xl and yl, and 
retroflected the laser beam. 

2. The Beam Positioning Module - measured two angles which corresponded 
to two dimensions, x2 and y2, pointed the laser beam, and contained the DME 
and RME systems. 

3. The distance Measurement Equipment - measured changes in path length 
between the ends of the segment and provided the measurement of length. 

The fourth system was not optimized and provided only one-third to one- tenth 
of the desired resolution. This was the: 

4. Rotational Measurement Equipment - measured changes in rotation of the 
axis of the segment. 


59 



Three systems related to the physical ARM were developed and 
prototyped. These were prototyped using space ratable technology or 
materials. These were the: 

5. Segment - connected the articulations and supported the beam 
positioning module. 

6. Elbow - this was a single degree of freedom articulation located 
between the two segments and designed to hold one beam rider and one beam 
positioning module. 

7. Shoulder - a two degree of freedom articulation built around the beam 
positioning module. 

Three systems relating to the control of the ARM were designed, 
specified, and implemented. These were: 

8. Hardware - An Intel 80386 based computer system responsible for the 
overall control and operation of the ARM. 

9. Software - These were the programs which ran the computer, the ARM, 
and comprised the controller model. 

10. Indirect Adaptive controller - This program modeled system behavior, 
which duplicated the behavior of the physical ARM, and generated the control 
information necessary to move from one point to another. 

In addition, a variety of circuitry was developed and breadboarded to 
support the devices used in the various systems. These included: 

1. Lateral effects diode decoder circuitry 

2. Quadrant diode decoder circuitry 

3. RME diodes decoder circuitry 

4. DC brush motor controller and driver 

5. DC brushless motor controller 

6. Mirror positioner driver and controller 


Several other breadboards and prototypes were built, tested, and 
evaluated. These include a: 

1. A twenty coil linear voice coil positioner unit with associated 
circuitry, computer interface, and associated software. 

2. The lateral effects diode test jig drivers, controller, computer 
Interface, and associated software. 


60 



CONCLUDING REMARKS 


Using a concentric laser positioning reference system is a elegant 
solution the the problem of controlling long flexible manipulators* 
Significant reductions of mass are possible by using a flexible manipulator* 
Moving this concept from the laboratory to a production environment is 
nontrivial* Numerous difficulties remain to be resolved* The technology 
necessary for this transition is available. 

This project took the fist several steps required for the 

implementation of this concept. A period of testing and refinement of the 
various systems is required. No insurmountable obstacles lie in the 
development path, i.e., it is feasible. 

There is alternative technology available which would improve to 
performance of the various systems. Where appropriate, reference has been 
made in the text. There are, however, tradeoffs in adopting alternative 

technology, e.g., a time of flight DME system would require a different 

solution to the RME system. A large amount of time and effort was spent in 
developing a self-consistent set of system which would interrelate and work 
well together. 

The concept we have championed is feasible, its implementation is a 

challenge for the future. 


61 



APPENDIX A 


Documentation of the Segment Modeling/Simulation Software 


I. Overview 

There are three principle programs associated with the segment 
modeling/simulation software. These are: 

1) ARMMODEL.EXE and its corresponding source files. This program is 
given, as input, the physical parameters of the segment to be 
modeled. The core of the model was written in FORTRAN translated 
into Microsoft C. Functions were added to find the roots of the 
characteristic equation, output the resulting model's data to screen 
and printer, and to produce MATLAB-readable matrix files for the 
simulator. 

2) MATLAB FILES. These files are executed under the MATLAB environment 
and take, as input, the output matrices of ARMMODEL, as well as 
parameters specifying the duration of the simulation, the time-wise 
resolution of the simulation, and the voltages to the motor (DC and 
AC). MATLAB is a linear algebra applications program. The files 
originally produced a plot of end-displacement against time; Code 
was modified to output data describing segment travel and approximate 
endtip velocity and acceleration, for input to the ARMSIM program. 

3) ARMSIM.EXE and its corresponding source files. This program takes as 
input the model data from the MATLAB files and outputs to the display 
time-variant graphic and numeric representations of segment travel, 
endtip displacement, voltage, approximate endtip velocity and 
acceleration. 

II. Notes Regarding the Science behind and limitations of ARMMODEL 

The mathematical model implemented in ARMMODEL was designed based on a 
cantilevered beam (fixed at one end, payload at the free end) will 
approximate the true configuration (the beam's base fixed to a motor). As 
an approximation, if the base moment of inertia is large with respect to the 
mass of the payload then the two configurations probably generate model 
frequencies which are similar. If the mass of the segment is large compared 
to the payload mass the approximation degenerates. These relationships need 
to be determined experimentally based upon the actual system. 

ARMMODEL determines the first three resonant frequencies of a single 
segment in two dimensions. Rotational resonances are not modeled. 

III. Using ARMMODEL 

The executable file is ARMMODEL.EXE. Once run, the program displays six 
options : 

1) Input Values 

This option executes a procedure that prompts the user for input 


62 



parameters. Current/default parameters are displayed and may be 
retained by inputting a number less than zero. See below for 
explanations of each input parameter. 

2) Calculate Coefficients 

This option executes the procedures that calculate the coefficients 
of the output matrices used by MATLAB, as well as the resonant 
frequencies of the segment, based on the input parameters. Once the 
coefficients are calculated, the program displays all relevant data 
produced. In order to display all the data on one screen, the 
descriptors are rather terse; it is suggested that the data be viewed 
with Option 3 or 5. 

3) Display Calculated Data 

This option displays the data calculated by option 2. 

4) Display Matrices 

This option displays the matrices used by MATLAB (Matrices A, B, C) 

5) Print Data to Disk (For Printer Output) 

This option writes a file to disk that can be PRINTed or TYPEd at 
DOS. It is more verbose than the output of option 2 or 3. The user 
is prompted for a filename. 

6) Save Matrices for MATLAB 

This option writes the matrices to disk. The user is prompted for 
filenames, though MATLAB expects the filenames to be a. mat, b.mat, 
c.mat for the matrices A, B, C, respectively. 

The only option that needs elaboration is Option 1. Option 1 prompts 
for a number of input parameters, described below (all units are SI): 

1) Base Rotary Inertia - This value is the sum of: 

counterweight rotary inertia 
yoke rotary inertia 
payload rotary inertia 
segment rotary inertia 

2) Tube Outside Radius (in meters) 

3) Tube Inside Radius (in meters) 

4) Mass per Unit Length (kilogram/meter) 

5) Payload Mass (in kilograms) 

6) Elastic Modulus of Beam (in Pascals) 

7) Length of Beam (in meters) 

8) Damping Coefficient of Segment 


63 


IV. Using the MATLAB files 


NOTE: some familiarity with MATLAB is useful but not necessary. 

Once ARMMODEL has been run, and appropriate matrix files have been 
saved, the MATLAB files can be executed. Once in the MATLAB directory, make 
sure the matrix files are approximately named (am. mat, bm.mat, cm. mat). 
Enter MATLAB by typing 'matlab' at the DOS prompt. The files to be run, in 
order of use, are as follows: 

1) armmod.m - this loads the three matrices into the MATLAB environment. 

2) motger.m - this loads the data related to the motor/gearbox 
parameters /state space model. 

3) combine. m - combines the arm model (the three matrices) with the 
motor/gearbox model. You will be prompted to input the length of the 
segment. 

4) simcomb.m - this file runs the simulation. You will be prompted to 
input: 

a) tmin - the starting time (in seconds) 

b) tmax - the ending time (in seconds) 

c) tine - the time increment (in seconds) 

As an example, a simulation with a running time of ten seconds might 
have tmin = 0.00, tmax = 10.00, and tine = .01; MATLAB will generate a 
matrix, to be used in the simulation, something like this: 

t = [0.01 0.02 ... 9.98 9.99 10.00] 

You will then be prompted to input voltages: 

d) dc voltage - a numerical constant (i.e. 100) or a function 
of time (i.e. l/exp(-t)). 

e) ac voltages - up to three amplitudes and corresponding 
frequencies, (input zeroes if no ac input wanted). 

MATLAB will generate another matrix, whose i-th entry is the voltage at 
the time corresponding i-th entry in the time matrix. 

To run the simulation, the commands are entered in the following order: 

armmod 

motger 

combine 

simeomb 

MATLAB will then run the simulation, display a plot of end-tip 
displacement versus time, and write two files to disk: model. mat and 
header. mat. These two files contain the information needed by ARMSIM. 

Before these files can be used by ARMSIM, they must be translated into 
'flat' ascii files. To do this, leave the MATLAB environment with the 
'exit' command. 


64 



The files are translated from a MATLAB format to a flat ascii file 
through the program TRANSLATE, a MATLAB utility. Invoke the program by 
typing 'translate*' at the prompt. The use of TRANSLATE is self-explanatory: 
you will be prompted for input filename (model. mat or header. mat) input 
filetype (.mat) output filename (model.dat or header.dat) and output 
filetype (flat ascii). See MATLAB manual for more information. 

Once the files header. mat and model. mat are translated, you can run 
ARMSIM. 

V. Using ARMSIM 

The graphics used in ARMSIM require an IBM CGA-compatible graphics 

card. 


ARMSIM's executable file is called SIM1AC.EXE. To run, make sure that 
the files header.dat and model.dat are in the working directory. Type 
'simlac'. You will be presented with the program's graphics screen. Hit 
<RETURN> to start the simulation. Subsequent <RETURN>s will pause and 
continue the simulation. These are the only controls. 

The display is divided into three graphics windows and several text 
lines. The large, leftmost window displays a representation of the segment. 
The upper right window displays the voltage, and the lower right window 
displays the end-tip displacement. 

The text lines are labeled and include time, voltage, the length of the 
arc scribed by the endtip around the base, endtip displacement, and 
approximate endtip velocity and acceleration. 

When the simulation halts at time=tmax, you may exit with <RETURN>. 


65 


APPENDEX B - 

DSP HARDWARE ■ 

AT & T Technologies 
Dept. 50AL203140 
555 Union Blvd. 

Allentown, PA 18103 
1-800-372-2447 
WE DSP32C 


HARDWARE 

- PRODUCT: 

LSI Products Division 

TRW Electronic Components Group 

P.O. Box 2472 

La Jolla, CA 92038 

(619) 457-1000 

TMC3032/3033 


Bonschul International, Inc. 

11000 Cedar Avenue, Ste. 212 
Cleveland, OH 44106 
(216) 421-2380 
MSP320 

Def inicon Systems, Inc. 

31324 Via CXolinas, Ste. 108 
Wastlake Village, CA 91362 
(818) 889-1646 
DSI-32E 

General Instrument Microelectronoics 


Mercury Computer Systems, Inc. 
Wannalancit Technology Center 
6600 Suuffolk Street 
Lowell, MA 01854 
(617) 458-3100 (415)847-2025 

MC3200 

Metme Corp. 

4623 Morganford 
St. Louis, MO 63116 
(314)353-3869 
TMS320 


3080 Olcott Street, Ste. 230C 
Santa Clara, CA 95054 
(408) 496-0844 
DSP320C10 


Micon systems Co. 

1800 Avenue of the Stars, Ste. 10 
Los Angeles, CA 90067 
(213) 282-8570 


Micon's M8096-1 


Imapro U.S. Inc. 

P.O. Box 67 
Suffern, NY 10901 
(914) 368-2787 

Master Vector Processor Plus 
(MVP+) 

Intersil, Inc. 

10600 Ridgeview Court 
Cupertino, CA 95014 
(408) 996-5000 
IM29C325 


Micro Way 
P.O. Box 79 

Kingston, Mass. 02364 
(617)746-7341 
Accelerators XXX86 

Microstar Laboratories, Inc. 
2863 152 Avenue N. E. 

Redmond, Washington 98052 

(206) 881-4286 

DAP1200 


20 


Keithley Instruments, Inc. 
28775 Aurora Road 
Cleveland, OH 44139 
(216) 248-0400 
Series 500 

LSI Logic Corp. 

1551 McCarthy Blvd. 
Milpitas, CA 95035 
(408) 433-8000 
L64000 Series 


NEC Electronics Inc. 

10080 N. Wolfe Road, SW3 Ste. 360 
Cupertino, CA 95014 
(408) 446-0650 

Oki Semiconductor 
650 North Mary Avenue 
Sunnyvale, CA 94086 
(408) 720-1900 
M6992 

Omega Engineering, Inc. 

One Omega Drive, Box 4047 
Stamford, CT 06907-0047 
1-800-826-6342 


66 


Opto 22 

15461 Springdale Street 
Huntington Beach, CA 92649 
(714) 891-5861 
I/O System Components 

Paracom Inc. 

Bldg. 9, Unit 60 
245 W. Roosevelt Rd. 

West Chicago, IL 60185 
(312)293-9500 

Sota Technology, Inc. 

657 N. Pastoria Blvd. 
Sunnyvale, CA 94086 
MotherCard 5.0 

Spectrum 
240 H Street 
Blaine, WA 98230 
1-800-663-8986 


Systolic Systems, Inc. 
2240 North First Street 
San Jose, CA 95131-2310 
(408) 435-1760 
PC-100 

Texas Instrument Inc. 
P.0. Box 809066 
Dallas, TX 75380-9066 
1-800-232-3200 
VLSI 32-bit 

Weitek Corp. 

1060 E. Arques Avenue 
Sunnyvale, CA 94086 
(408) 738-8400 
ACCEL 8000 Series 

Zoran Corp. 

3450 Central Expwy. 

Santa Clara, CA 95051 
(408) 720-0444 
ZR34161 VSP, ZR33891 


386 

Altos Computer Systems 
2641 Orchard Parkway 
San Jose, CA 95134 
(408) 432-6200 
Altos 386 Series 1000 


HARDWARE 

DFE Electronic Data Systems 

5820 Stoneridge Mall Rd. Ste. 115 

Pleasanton, CA 94566 

(415) 847-2024 

TIGER-32 


American Micro Technology 
14751-B Franklin Ave. 
Tustin, CA 92680 
(714) 731-6800 

BBN Advanced Computers Inc. 
10 Fawcett Street 
Cambridge, MA 02238 
(617) 873-6000 
Butterfly 1000 

CCI 

17830 State Road 9 
Miami, FL 33162 
800-331-5150 

Computer Dynamics, Inc. 

2201 Donley, Ste. 365 
Ausstin, TX 78758 
800-722-8304 

Concurrent Computer Corp. 
197 Hance Ave. 

Tinton Falls, NJ 07724 
(201) 758-7000 
Series 3200 


Digital Research Inc. 

OEM Sales 

4401 Great America Parkway Ste. 200 
Santa Clara, CA 95054 
(408) 982-0700 

Dyna Computer Inc. 

3081 N. First St. 

San Jose, CA 95134 
(408) 943-0100 
SX386 

General Micro Systems, Inc. 

4740 Brooks Street 
Montclair, CA 91763 
(714) 625-5475 
GMS V0 7 

Hauppauge Computer Works, Inc. 

358 Veterans Memorial Highway, Ste. MSI 

Commack, NY 11725 

800-443-MATH 



Hertz Computer Corp. 

Perkin-Elmer 

325 Fifth Ave 

Data Systems Group 

New York, NY 10016 

2 Crescent Place 

(212) 684-4141 

Oceanport, NJ 07757 
(800) 631-2154 

Hyundai Electronics America 

32-BIT Minicomputers 

4401 Great America Parkway, 3rd 

FI. 

Santa Clara, CA 95054 

Plessey Microsystems 

(408) 986-9800 

22931 Triton Way 
Laguna Hills, CA 92653 

Intel Corp. 

(714) 855-4947 

3065 Bowers Ave. 

Santa Clara, CA 95051 
(408) 987-8080 

PMM 8M 

System 120 Real time 386 

Pro-Log Corp. 
2560 Garden Rd. 

JMI Software Consultants, Inc. 

Monterey, CA 93940 

P.0. Box 481 

(408) 372-7082 

904 Sheble Lane 
Spring House, PA 19477 

System 1 

(215) 628-0846 

TeleVideo Systems, Inc. 
1170 Morse Ave. 

Lloyd I/O Inc. 

P.0. Box 3568 

P.0. Box 30945 
Portland, OR 97230 

Sunnyvale, CA 94088-3568 

(503)666-1097 

Zaiaz 

Omega 68020 

2225 Drake Ave. 
Huntsville, AL 35805 

National Semiconductor Corp. 

(205) 881-2200 

2900 Semiconductor Drive 
P.0. Box 58090 

ZAIAZ 933 

Santa Clara, CA 95052-8090 

Zeos International 

(408) 721-5000 

530 5th Ave, NW Ste. 1000 

Series 32000 

St. Paul, MN 55112 
800-423-5891 

Performance Semiconductor Corp. 
610 E. Weddell Drive 
Sunnyvale, CA 94089 
(408) 734-9000 

ZEOS 386/M 

INTERFACES & BUSES 


G-64 

VME 

MULTIBUS I 

MULTIBUS II 

S-100 

STD 

UNIBUS 

Q BUS 

BIT BUS 

SCSI 

ESDI 

ST/506 

SUPER-BUS 

NU-BUS 

IBM/AT BUS 


IBM MICRO CHANNEL BUS 


68 



AT & T 

Dept. KB, 55 Union Blvd. 
Allentown, PA 18103 
1-800-372-2447 

Acromag 

30765 wixom Rd. 

Wixom, MI 48096 
(313) 624-1541 

Advanced Electronics Design 
440 Potrero Ave 
Sunnyvale, CA 94086 
(408) 633-3555 

Alcyon 

5010 Shoreham PI. 

San Diego, CA 92122 
(619) 587-1155 

Analog Devices 
One Technology Way 
Norwood, MA 02062 
(617) 777-4500 

Anasco 

42A Cherry Hill Dr. 

Danvers, MA 01923 
1-800-826-2726 

Applied Control Concepts 
6589 N Sidney PI. 

Glendale, WI 53209 
(414) 351-2550 

Arcom Control Systems 
Unit 8 Clifton Rd. 

Cambridge, U K 
0223 242 226 

Ariel Systems 
8545 Arjons Dr. Ste. I 
San Diego, CA 92126 
(619) 549-0134 

Auscom 

2007 Kramer Ln. 

Austin, TX 78758 
(512) 836-8080 

Basu 

c/o Dage Precision Industries 
2914 Scott Blvd. 

Santa Clara, CA 95054 
(408) 727-1932 


Beal Communications 
9794 Forest Ln., Ste. 246 
Dallas, TX 77801 
(409) 775-5009 

Bicc-Vero 

1000 Sherman Ave. 

Hamden, CT 06514 
(203) 288-8001 

Burr-Brown 
6730 Tucson Blvd. 

Tucson, AZ 85706 
(602) 746-1111 

Central Data 
1602 Newton Dr. 

Champaign, IL 61821 
(217) 359-8010 

Chrislin Industries 
31352 Via Colinas 
Westlake Village, CA 913662 
(818) 991-2254 

Ciprico 

2955 Xenium Ln 
Plymouth, MN 55441 
(612) 559-2034 

Clearpoint 

99 South St. 

Hopkinton, MA 
1-800-253-2778 

Communications Machinery 
1421 State St. 

Santa Barbara, CA 93101 
(805) 963-9471 

Compcontrol B V 
P.0. Box 193] 

Eindhoven, Holland 
31-40-124955 

Computer Modules, Inc. 

2348 C Walsh Avenue 
Santa Clara, CA 95051 
(408) 496-1881 

Data Translation 

100 Locke Drive 
Marlborough, MA 01752 
(617) 481-3700 


69 



Da tel 

11 Cabot Blvd. 

Manssf ield, MA 02048 
(617) 339-9341 

Dual Systems 
2530 San Pablo Ave. 

Berkeley, CA 94702 
(415) 549-3854 

Dy-4 Systems 

1475 S Bascom Ave., Ste.202 
Campbell, CA 95008 
(408) 377-9822 

Educational Microcomputer Syste 
One Clear Spring 
Irvine, CA 92715 
(714) 854-8545 

Electronic Modular Systems 
Capital Center Plaza, Ste. 109 
1325 Capital Pkwy. 

Carrollton, TX 
(214) 446-2900 

Eltec Electronix GMBH 
Galileo-Galilei-Strabe 11 
D-500 Mainz 42 P0 Box 65 
Uest Germany 
49(6131)50631 

Excelan 

2180 Fortune Drive 
San Jose, CA 95131 
(408) 434-2296 

Force Computers 
727 University Ave. 

Los Gatos, CA 95030 
(408) 354-3410 

GalilMotion Control 
1928A Old Middlef ield Way 
Mountain View, CA 94043 
(415) 964-6494 

General Micro Systems 
4740 Brooks St. 

Montclair, CA 91763 
(714) 625-5475 

Grant Technology, Computer Prod 
321 Billerica Rd. 

Chelmsford, MA 01824 
(617) 256-8881 


Graphic Strategies 
549 Weddell Dr. 

Sunnyvale, CA 94086 
(408) 745-6500 

Heurikon 
3201 Latham Dr. 

Madison, WI 53713 
1-800-356-9602 

High Technology Electronics 
303 Portswood Rd. 

Southampton SO 2 1LD 
U K 

(703) 581555 
Ikon 

2617 Western Ave 
Seattle, WA 98121 
(206) 728-6465 

ILC Data Device 
105 Wilbur PI. 

Bohemia, NY 11716 
(516) 567-5600 

Imaging Technology 
600 W Cummings Park 
Woburn, MA 01801 
(617) 938-8444 

Imagraph 

800 W Cummings Park 
Woburn, MA 01808 
(617) 938-5480 

Integrated Micro Products 
No.l Ind Est, 

Consett Co Durham DH8 6TJ 

England 

0207-503481 

Integrated Solutions 
1140 Ringwood Ct. 

San Jose, CA 95131 
(408) 943-1902 

Interactive Circuits & Systems 
3101 Hawthorne Rd., Ottawa 
Ontario, Canada K16 3V8 
1-800-267-9794 

Integrated Scientific Systems 
1181 Aquidneck Ave 
Middletown, RI 02840 
1-800-847-4797 


ms 


ucts 


70 



Interphase 
2925 Merrell Rd. 
Dallas, TX 75229 
(214) 350-9000 

Introl 

2675 Patton Rd. 

St. Paul, MN 55113 
(612) 631-7600 

IOtech, Inc. 

23400 Aurora Rd. 
Cleveland, OH 44146 
(216) 439-4091 

Ironies 

798 Casadilla St. 
Ithaca, NY 14850 
(607) 277-4060 

Iskra VME Technologies 
222 Sherwood Ave 
Farmingdale, NY 11735 
(516) 753-0400 

Logical Design Group 
541 Pylon Dr. 

Raleigh, NC 72606 
(919) 834-8827 


Matrix 

1203 New Hope Rd. 

Raleigh, NC 27502 
(919) 833-2000 

Matrox Electronics Systems 
1055 St. Regis 

Dorval Quebec, Canada H9P 2T4 
(514) 685-2630 

Mercury Computer Systems 
600 Suffolk st. 

Lowell, MA 01854 
(617) 458-3100 

Micro Memory 
9540 Vassar Ave 
Chatsworth, CA 91311 
(818) 998-0070 

Micro/Sys 

1011 Grand Central Ave 
Glendale, CA 91201 
(818) 244-4600 


Microdesigns 
1874 Forge St. 

Tucker, GA 30084 
(404) 493-6318 

Microproject 

4676 Admiralty Way Ste. 617 
Marina Del Rey, CA 90292 
(213) 306-8000 

Microproject V.V. 

Clams Sluterweg 125 

2012 WS Haarlem 

The Netherlands, 023-292084 

Microvoice 
23362 Peralta Dr. 

Laguna Hills, CA 92653 
(714) 859-1091 

Mini Computer Technology 
696 East Trimble Rd. 

San Jose, CA 95131 
(408) 435-2032 

Mizar 

20 Yorkton Ct. 

St. Paul, MN 5517 
(612) 224-8941 

Mizar/Kontron Mikrocomputer 
Oskar Von Miller STS 
8057 Eching B Munchen 
West Germany 
* 

Monolithic Systems 
84 Inverness Cir East 
Englewood, CA 80112 
(303) 790-7400 

Motorola 

2900 S Diablo Way 
Tempe, AZ 85282 
(602) 438-3501 

National Instrument 
12109 Technology Blvd. 

Austin, TX 78727 
(512) 250-9119 

NCR 

3325 Platt Springs Rd. 

W Columbia, SC 29169 
(803) 791-6800 


71 



Nectronix 

1372 McDowell Blvd. 
Petaluma, CA 94952 
(707) 72-2703 


Nimbus 

1420 N. Claremont Blvd. 
Bldg. 102-A 
Claremont, CA 91711 
(714) 625-0017 

Owl Computers 
640 Crest Drive 
Encinitas, CA 92024 
(619) 436-4214 

Pacific Microcomputers 
6730 Mesa Redge Rd. 

San Diego, CA 92121 
(619) 453-8649 

Parallax Graphics 
2500 Condensa St 
Santa Clara. CA 95051 
(408) 727-2220 


PEP Modular Computers 
00 N Bell Ave 
Pittsburgh, PA 15106 
(412) 279-6661 

Performance Technologies 
435 West Commercial St. 

East Rochester, NY 14445 
(716) 586-6727 

Phillps/Signetics Microsystem 
811 Arques Ave. 
sunnyvale, CA 94088 
(408) 991-3544 

Plessey Microsystems 
One Blue Hill Plaza 
Pearl River, NY 10965 
(914) 735-4661 

Psi Tech Inc. 

18368 Bandilier Circle 
Fountain Way, CA 92708 
(714) 964-7818 


Recognition Technology 
335 Fiske St. 

Hollis ton, MA 01746 
(617) 429-780 

saimet/Pascot 
17981 Skypark Cir Ste. B 
Irvine, CA 92714 
(714)261-5220 

SBE 

2400 Bisso Lane 
Concord, CA 94520 
(415) 964-5700 

Scanbe Unit of Zero Corp. 

3445 Fletcher Avenue 
El Monte, CA 91731 
(818) 579-2300 

Scientific Micro Systems 
339 N Bernardo Ave. 

Mountain View, CA 94043 
(415) 964-5700 

Stollmann 

Max-Brauer-Allee 79-8 
D-200, Hamburg 50 
West Germany 
040/389003-0 

Storage Concepts 
3198-G Airport Loop Dr. 

Costa Mesa, CA 92626 
(714) 557-1862 

Syscon 

3990 Sherman St. 

San Diego, CA 92110 
(619) 296-0085 

Tadpole Technology 
Unit 151, Science Park 
Cambridge, England 
0(0223)861688 

Tadpole Technology/ Pasco t 
17981 skypark Circle, Ste. B 
Irvine, CA 92714 
(714) 761-5220 

Thomson Semiconducteurs Microsy 
45 Av De V Europe 
78140 Velizy, France 
(1) 39.46.97.19 


72 



T L Industries 
2541 Tracy Rd. 
Toledo, OH 43619 
(419) 666-8144 

VME Inc 

560 Valley Way 
Milpitas, CA 95035 
(408) 946-3833 


VME Specialists 
558 Brewster Ave #1 
Redwood City, CA 94063 
(415) 3664-3328 


Wespercorp 
1821 E Dyer Rd. 

Santa Ana, CA 92705 
(714) 261-0606 

Xycom 

750 N Maple 
Saline, MI 48176 
(313) 429-4971 

Xylogics 

144 Middlesex Tnpk 
Burlington, MA 01803 
(617) 272-8140 

Zendex 

6700 Sierra Lane 
Bublin, CA 94568 
(415) 828-3000 


VME Microsystems International 
12121 NS Memorial Pkwy 
Huntsville, AL 35803 
(205) 880-0444 


ADA COMPILERS DATABASE 

Aetech Inc. 

Solana Beach, CA 


(619) 755-1277 

Alsys, Inc. 

1432 Main Street 
Waltham, MA 02154 
(617) 890-0030 

Alsys, Inc. 

Western Regional Office 
5000 Birch Street 
Suite 3000, West Tower 
Newport Beach, CA 92660 
(714) 476-3683 

Artek Corp. 

100 Seaview Drive 
Syracuse, NJ 07094 
(201) 867-2900 

Gould, Inc. 

Computer Systems Division 
Harris Corp. 

Computer Systems Division 
2101 W. Cypress Creek Rd. 

Ft. Lauderdale, FL 33309-1892s 

High Intensity Systems, LTD 
England 

Intellimac, Inc. 

6001 Montrose Road, 6th Floor 
Rockville, MD 20852 
(301) 984-8000 


Meridian Software Systems, Inc 
23141 Verdugo Drive, Ste. 105 
Laguna Hills, CA 92653 
(714) 380-9800 

Meridian Technology Inc. 

7 Corporate Park, Ste. 100 
Irvine, CA 92714 
(714) 261-1199 

Mikros Systems Corp. 

David Marguardt 

Marketing Director 

General Systems Corp., W. Coast 

815 Marilyn Drive 

P.0. Box 1114 

Campbell, CA 95009 

(408) 866-9455 

Oasys 

Federal Systems Group 
60 Aberdeen Avenue 
Cambridge, MA 92138 
(617) 491-4180 

SofTech, Inc. 

460 Totten Pond Road 
Waltham, MA 02254 
(617) 890-6900 

TeleSof t 

10639 Roselle Street 
San Diego, CA 92121-1506 
(619) 457-2700 


73 



OPERATING SYSTEMS 


Award Software, Inc. 

130 Knowles Dr. 

Los Gatos, CA 95030 
(408) 370-7979 
286/386 MODULATOR BIOS 

Interactive 

2401 Colorado Ave. 3rd FI. 
Santa Monica, CA 90404 
800-453-8649 

LSI Logic Corp. 

1551 McCarthy Blvd. 

Milpitas, CA 95035 
(408) 433-8000 

Lynx Real-Time Systems, Inc. 
550 Division Street 
Campbell, CA 95008 
(408) 370-2233 

Microsoft Corp. 

16011 NE 36th Way 
Box 97017 

Redmond, WA 98073-9717 
MS OS/2 

NASTEC Corpp. 

24681 Northwestern Highway 
Southfield, MI 48075 
(313) 353-3300 
Case 2000 

Oasys 

60 aberdeen Avenue 
Cambridge, MA 02138 
OASYS PC/VADS 
(617) 491-4180 

Orion Instruments, Inc. 

702 Marshall St., Ste. 614 
Redwood City, CA 94063 
(415) 361-8883 
UniLab II 


SoftLogic Solutions, Inc. 

530 Chestnut St. 

Manchester, NH 03101 
800-272-9900 
Software Carousel 

Softguard Systems, Inc. 

2840 San Tomas Expressway, Ste. 201 
Santa Clara, CA 95051 
(408) 970-9240 
80386 DOS 

The Software Link, Inc. 

3577 Parkway Lane 
Atlanta, GA 30092 
(404) 448-5465 
PC-MOS/386 


Sophia Computer Systems, Inc. 
3337 Kifer Rd. 

Santa Clara, CA 95051 
(408) 733-1571 
Microprocessor 

Tektronix, Inc. 

Case Division 
P.0. Box 1752 
Portland, OR 97214 
1-800-342-5548 

Telesof t 

10639 Roselle St. 

San Diego, CA 92121-1506 
(619) 457-2700 
VAX/ VMS 

Wind River Systems 
1351 Ocean Ave. 

Emeryville, CA 94608 
(415) 428-2623 


Relational Technology Inc. 
1080 Marina Village Parkway 
P.0. Box 4006 
Alameda, CA 94501-1041 
INGRES 

Recognition Technology, Inc. 
335 Fiske St. 

Holliston, MA 017466 
(617) 429-7804 
RTI Station 


appendix c 


Introduction 


ARM MODEL 


system dictates the^elative^ignif lcan^ T behavior of any mechanical 
of the system. As ^ ° f ^ Vari ° US physical Parameters 

the physical aspects of the system T* 3 K System in( ; reas es, more of 
comparison to tha increased performance r^l L^ t SyStem ' s resp °”“ in 

accurate poaitionlQg°of * ^delicate payloads' 0 " h" Space C0 perform careful, 
gravity experiments from the NASA ? space steM^ 38 ? e transfer of micro- 
will depend on the ability of designers to free ~ flyin S Platforms, 

assumed negligible effects In rnKm-f take into account previously 

system compliance In particular 1° SUCh 33 j ° int friction and 

need extremely high positioning ’ P C6 p bas ® d mechanical manipulators will 

relatively low ove^T LTTstL^ ° f ^ «•> — 

less mass into space, the additional u the obvlous benefit of lifting 

mechanical manipulator's mass are: ^ itS derlved from the decrease in 

1) the need for smaller actuators, 

2) quicker response and 


3 ) 


less energy consumption during operation. 


earth-based robots^Trfchieve^ ln tbe Same benefits for 

positioning and a reduction in overall d ° bJectives of accurate end point 

more sophisticated control schemes must bemused ^Lighte^'^t T “ d 
result in a more compliant system uh n! , Llghter materials usually 

requirements mean that system compliance Islo Yon^e^^ 

the effects that the flexibility of the re f° rt we wil1 anal yze and discuss 
the behavior and control aspects of the T “ 3e 1 gments of a robot arm has on 

shall first consider an an“lnVcal°Ldal T"*' T ° begIn " lth - “* 

into account the flexibility of tha ingle segment arm which takes 

of controlling such a system to ^ “ " U1 «*thods 

low acceleration constraints. aCCUCat<! end tlP p ° altl °'> la f! “"lor 


75 



2. Analytical Modeling of a Flexible Single Segment Mechanical Manipulator 

The basic set up is a flexible single segment arm capable of rotation about two axis which 
intersect at a point on the base of the arm. For the modeling of this system we make the fol- 
lowing assumptions: 

Al) Rotation about each axis is accomplished by independent torques applied at the base. 

A2) Arm segment response about each axis is assumed to be decoupled. 

A3) At the tip of the arm is a payload possessing point mass m p and no rotary inertia. 

A4) At the base is a mass possessing rotary inertia and about each axis of rotation 
respectively. 

A5) Shear effects and beam cross-section rotary inertia effects are negligible. 

A6) Elongation effects are negligible. 

Al) Tip displacement due to bending is small in comparison to the overall length of the beam: 
geometrically linear beam theory. 

A8) The beam experiences relatively slow rotational speeds: i.e. y 2 terms are negligible. 

A9) The beam material stress-strain relationship is linear. 

A schematic diagram of the physical system being modeled and the definition of specific quan- 
tities is given in fig.fl. Since it is assumed that the response of the arm about the two axis of 
rotation is decoupled, it is sufficient to model rotation about one axis. Thus, with the above 
assumptions, use of Hamilton’s principle in a manner similar to that given in [Simo] results in 
the following partial differential equation (PDE) and boundary value/initial value problem 
(BV/IVP) describing the behavior of the system. 


EIu 2 "'XX u t ) + m a u 2 (X u t)+ y X, m a - 0 

(1) 

EIu 2 \U) = m p ii 2 (U) + y Lm p 

(2) 

/„ y = T{t) + Elu 2 "(0,t ) 

(3) 

u 2 "(L,t) = 0 

(4) 

u 2 (0,r) = 0 

(5) 

u 2 'm = 0 

(6) 


76 




In the previous equations; 

u 2 (X l ,t) := displacement due to bending of the beam 
m a := mass per unit length of the beam 
I := beam cross-section moment area of inertia 
E := elastic modulus of the beam material 

\|/ ;= angle of shadow beam with respect to the X-axis (the XY axes form an inertial 
reference frame) 

I h := rotary inertia of base mass (can be l h t or /^) 

m p point mass of payload 

g := acceleration due to gravity 

superscript denotes derivative with respect to X\ 

superscript " " denotes derivative with respect to t 

Following a common convention we term the straight line segment at an angle vy with the X- 
axis and emanating from the origin the "shadow beam". The shadow beam is basically the 
position of the beam had it been perfectly rigid. Thus, u 2 (X\j) defines bending displacements 
relative to the shadow beam position. Also, note that eqn.(l) is applicable for all X) e (OX) 
while eqns. 2-6 define end point conditions. Furthermore, notice that Eqn.(2) is basically 
F=m*a applied at the tip, eqn.(3) is simply I h * y = £ Torques experienced at the base, 
eqn.(4) says there is no external moment applied at the tip, eqn.(5) specifies that there is no 
translation of the base and eqn.(6) enforces the cantilevered nature of the beam with respect to 
the shadow beam. In addition, eqn.(l) is basically the Eulcr-Bemoulli beam equation with the 
additional inertia term \\i X, m a to account for the rotating behavior of the beam. As was previ- 
ously mentioned, this model applies to both axis of rotation independently. Furthermore, 
models used for earth-based mechanical manipulators will include the gravity term g m p cos(\\f) 
on the right hand side of eqn.(2) when considering rotation about an axis that is perpendicular 
to the earth. For our analysis we neglect such a term; equivalently the axis of rotation is per- 
pindicular to the earth. 

Now that a model for the system has been established we will 

1) determine the system’s inherent properties from an analysis of the model and 

2) study how the use of this model impacts the design of a controller which will actively 
control end tip position by application of a torque at the base. 


78 



To simplify the derivation of a solution to our model we make the following transformation 
y(X,,r) := v X x + u 2 (X x ,t) so that rewriting eqns. 1-6 in terms of y gives: 


E 1 y""(X u t) + m a y{X x ,t) = 0 
E / y"'(L,t) = m p y(L,t) 
h y\0,t) = T(t) + E I y"(0,t) 
y"(L,t) = 0 

y( o.o = o 

y'(0,/) = y 


(7) 

( 8 ) 
(9) 

( 10 ) 

(ID 

( 12 ) 


3. Analysis of Model 


The above model is a PDE and BV/IVP. Solution to such a system of equations is typically 
arrived at using modal analysis. For background material on modal analysis techniques and 
definition of terms used in this section see [Mer.J. The real essence of modal analysis lies in 
the fact that any solution to a self-adjoint BV/IVP, such as the one above, can be represented 
by an infinite series of functions which separate time and spatial dependence. Specifically, the 

solution to the above problem can be given as y{X x ,t) = £/<*,) Thefts are called the 

•’eigenfunctions" of the system and define the "mode shapes". The *•« are referred to as the 
generalized coordinates". Then's are determined by solving the eigenvalue problem: 


m a ftX\) 

~E l ft" (L) = oif m p f t {L) 
-E l /"(0) = w? I h ft(0) 
f!\L) = 0 
ftO) = 0 


(13) 

(14) 

(15) 

(16) 
(17) 


In the above equations the (o?’s are real-valued parameters known as the "eigenvalues" while 

the G),*s are called the "modal frequencies". If we let 0? .•= co? m a / El then eqn.(13) has a solu- 
tion of the form 


f(X\) - C x . sm(p^j) + C 2 . cos(0^,) + C 3( sr/rACp^,) + C 4 . cosh($?C\) 

The four boundary conditions, eqns. 14-17, are used to solve for the 3 constants C* C 3/ and 
C 4i and establish an equauon for determining the 0,’s. The equation which determines the p.’s, 
and therefore the co/s, is referred to as the characteristic equation. The characteristic equation 


79 



for the above PDE and BV/IVP is: 

[$*l)/n p - m a 2 ][sinh($iL)cos( (3£) - sin(^)cosh(^iL)] 

+ $?If/n a [ 1 + cos($JL)cosh($jL)] + 2mjn^^in(^^)sinh{^ifS) = 0 

This equation must be solved numerically and, as mentioned, determines the modal frequencies 
which are infinite in number. 


In addition to the solution form just given, eqns (13) - (17) also have a rigid body solu- 
tion of the form 

/o(*i) = C 4i X] + C 3> . X\ + C 2i X, + c h 
Application of this solution to the boundary conditions yields f 0 (X{) = C 2( X t . 


The real benefit to using modal analysis techniques is that each f^X^g^t) pair contributes 
independently to the response of the system due to the effect of initial conditions or the action 
of the input function T(t). Hence, in order to determine the resultant response, y(X x ,t), one 


simply adds the "component" responses — the response of each mode. For this to be valid 
however, the modes must be decoupled and orthogonal to one another in some sense. For this 
problem the proper orthogonalization requirement is as follows: 

f/<C*i) rn a f t {X x ) dX x +f'( 0) l h f'( 0) +/<L) m p //L) = < J i. j= 0, 1. 2.... (18) 


When i*j it can easily be shown, using the boundary conditions imposed on the /j’s and ff s, 
that the above equation is automatically satisfied, and since as of yet the Cj.’s for the first solu- 
tion form and are unspecified, they are calculated to fulfill the above orthogonalization con- 
dition when i=j. Thus, with the given orthogonalization condition the solution can be calcu- 


lated and is simply given as y(X lf t) = £/<Xi) g,{t). 

M> 

To determine the g,’s one simply substitutes the series form of the solution, 

«o 

y(Xj,r) = £/<X t ) g t {t), into eqns. 7,8 and 9 and does some rearranging to get; 

i-0 


El £/r'(X,) g,(t) + m a ZMO g,<t) = 0 
-El ifr'(E) g,{t) + m p Zf{L) g t <0 = TO) 

«-0 t -0 

-Ei irro o) g,o) + o £y-'(0) m = o 

1-0 t-0 


(7a) 

(8a) 

(9a) 


80 



JM« 


Now multiply eqn.(7a) by#*,) and integrate from 0 to L; multiply eqn.(8a) by f } {L) and; mul- 
tiply eqn.(9a) by Adding the resulting three equations and using the relationships defined 
by the eigenvalue problem yield; 

L 

[ 1 ) m a fj(Xi) dX t +f/(0) l h f/( 0) +f,{L) m p fj(D] [ g,{t ) + to j g,<r)] = f/(0) T(t) j= 0, 1, 2 

(In the above manipulations we rather indiscriminately interchanged integration, summation and 
differentiation. For proof as to why this is ok see [Gar.].) Use of the orthogonality condition, 
eqn.(18), in the above equation then results in; 

Sj<0 + gp) = //(0) T(t) j=0, l, 2,... 

which is an infinite set of ordinary differential equations. Recall that in compact notation one 
can express the end tip position as 


xm = zm gt <t > 


F=0 


In addition, y'(O.r) - y. This too can be expressed in compact notation 


as 


V- X/,<0) g t (t) 

t=0 

Because of the choice of the orthogonality condition, both of the above quantities are outputs 
of infinite-dimensional, linear, time-invariant systems with completely decoupled modes, and in 
matrix form they are expressed as 


io(0 




gi(0 


g lit) 


82(0 

= 

HO 





r\ 


gdt) 



o 
1— -* 

c 

o 

o 

o 




0 

0 0 0 0 0 0 


no 


fo(0) 

0 0 0 1 o 0 


g i(0 


0 

0 o -g>i 2 o 0 0 


no 


A\0) 

0 0 0 0 0 1 


82(0 

+ 

0 

0 0 0 0 -(02 2 0 ■ 


HO 


fi( 0) 

• 




. 


m 


and 


81 


y(Lt) 


7o(L) 0 fi(L) 0 MV 0 . . .' 



/o(0) 0 /,( 0) 0 / 2 (i 0) 0 . . . 


*o(0 

M 

8iO) 
81 (0 
&(0 
8i(t) 


The above then composes our model of the system where T(t) is the input and y(L,t) and arc 
the outputs. Notice that the above model does not include structural damping terms. Such terms 
may be included here by simply adding the terms -2 w, to the (2i+2,2i+2) elements of the 
matrix containing the tops for i=l,2,3,... where £,• is the damping coefficient for the ? k mode. 


82 



Numerical Calculation of the System Model 

To numerically calculate the linear model just derived one needs to calculate the quanti- 
ties P ( , co ( , C j., C 2 ., C 3 and C 4 . From these quantities f t (L) and/,<0) can be calculated. 

The P,’s (and consequently the (0,'s) are calculated from the characteristic equation. Then 
the relationship p? = as-mJEl is used to get the <o,’s. 

To calculate C\., C 2 ., C 3 , and C 4 . we use the orthogonalizadon condition and the boundry 
conditions. 


+ Eqn. (17) gives that = -C 4 . 

+ Eqns. (15) + (16) give that 

C 2 . = bC 3 . and C\. — qCV 

*•1 J i 

where 

2m a sinh($ i L) - p?/ A (cay(p,L) + cosh($£)) . . (l+a)P?/* 

a := — and b := 

2m a jm(P,L) + pf/ A (cos(P/.) + cosh($ t L)) 2 m a 


+ To get the last remaining coefficient the normalization condition is used. Recall that 
this condition is 


L 

| m/(x) dx +/-(0)7* +fi(L)m p = 1 


Using our previous expressions for the coefficients we get 
/?(0)/ A = / h tf(a+l)Cl 


fi(L)m p = 4m, 


a rm(p,L) cosh($ t L) + sinhifijL) cos($jL) 


Cl 


cos( P/,) + cosh($JL) 
l m/iix) dx = Cl^ [^(Lp, - c<w(p,L)jm(p l L)) + b 2 (L p, + cos(p/.)sm(P,L)) 


+ (sinh($'L)cosh($£) - p£) + b 2 (sinh($ l L)cosh® l L) + p£) 


+ 2aZ>(sin 2 (P/,)) + 2a(sm(P i L)coj/i(p i L) - cos($,L)sinh($iL)) 


- 2ab(sin(fi i L)sinh^ l L) - cos($>^)cosh(^^) + 1) 


83 



+ 2d(swi(p i L).wn/i(pjL) + cos($£,)cosh(fi,L) - 1) 

- 2b 2 (sin($£)cosh(fi t L) + cos($ t L)sinh($JL,)) - 2b(sinh 2 ($JL)) 

Summing the above three expressions, setting that quantity equal to 1 and solving 
for C 3 gives the expression for C 3 .. 

Then to calculate /,< 0) and f t {L) we note that 

/ < <0) = (C 1| + C 3i )P 1 

and 

ffL) - C 3 .(a sin($ l L) + b cas((3/,) + sinh($ t L) - b cosh($ t L)) 


" "TUe 'S.'o >o w^ooe. 'Tt*a.ac , v£-r£n^ Huvr A »-£p> Be C«oc.unj3rrcci. 

u»>o c^ooe Xt> 


X, 

^ crr ^- C*"\©o€. To Otx" wo [“£ All. Otu^ 

^looeti /Wo Q. -r a d-ootejv 'T7 'TAe 

Co<M>x-T^ 



' r ^‘0 O^-r To 6 >»o€1 



84 



4. Considerations for the use of the Beam Model for Controller Design 

Most control design techniques can only deal with finite dimensional systems. Also, infinite 
dimensional controllers are difficult, if not impossible, to implement Therefore, the above 
model must be truncated to a finite number of states for use in the design of the controller. 
There are several techniques for determining a finite dimensional model from an infinite dimen- 
sional system. These techniques are nicely outlined in [Bal.]. For this problem, even when 
structural damping effects are taken into account, model order reduction will entail the exclu- 
sion of certain modes. Which modes to exclude will depend on; 

1) the sensitivity of the sensors, 

2) the responsiveness of the actuators, 

3) the frequencies of potential disturbances and 

4) the "quality" of the model. 

Even though we deemed the affect of compliance significant, we can not model its influence 
perfectly. Therefore, we had to make certain assumptions about the system in order to account 
for any type of compliant affects. As it turns out, the assumptions we made yield a model 
which is not necessarily representative of system high frequency behavior. This is because 
neglected effects like shear and beam cross section rotary inertia effects have a greater impact 
on high frequency modes. However, we feel that the model is good enough to be used for sys- 
tem analysis and controller design to achieve the desired system behavior requirements. We 
also feel that the model is valid in the bandwidth that disturbances are likely to occur namely 
low frequencies. Therefore, the reduced order model should include the lowest frequency 
modes. How many of those low frequency modes it needs to contain will probably be deter- 
mined by experimentation. 

Use of a truncated model raises a very crucial question concerning resultant controller imple- 
mentation. And that is; 

Given that the controller was designed for a specific set of modes, how will it respond to 
the modes it wasn’t designed for (i.e. the truncated modes) but are present in the "real" 
system? e.g. Will it destabilize any or all of the truncated modes ? 

Such a concern was addressed by Balas in [Bal ]. In that paper it was pointed out that the 
sensor and actuator dynamics play a key role. One way to provide for proper performance of 
the controller when implemented on the real system is to minimize the amount of interaction 
between the controller and the unmodeled modes. Since, in this case, the modes contained in 
the truncated model are low frequency, the best way to "shield" the controller from the high 


85 


frequency unmodeled modes is to make the sensor and actuator low pass. A low pass sensor is 
one which is too slow to measure high frequency variations and a low pass actuator is one 
which is too sluggish to excite high frequency vibrations. Thus, use of low pass sensors and 
actuators yields a system which is designed to sense and control low frequency vibrations. As 
mentioned, if disturbances are present they are likely to be low frequency thus the designed 
controller can damp them out quickly. So overall, our truncated model will contain the lowest 
frequency modes because that is the bandwidth of potential disturbances, the model is valid in 
that range, and the sensors and actuators can measure and affect those modes. 


86 



APPENDIX D MOTOR AND GEAR MODELS 


Motor Model 

The same basic principles are used in both the conventional permanent 
magnet DC motor and the brushless DC motor. The basic motor constants are 
also the same as long as some caution is used in applying the constants. 

A simplified electrical equation of a brushless DC motor is: 

V = IR + L dl/dt + K (E) w 1 


where 

I is the sum of the phase currents 

R is the resistance of a phase winding 

L is the inductance of a phase winding 

K(E) is the voltage constant of a phase winding over the conduction 

angle 

w is the angular velocity of the motor shaft 

These relationships hold well for the common brushless motor 
structures, although there are lower order effects due to mutual inductance 
between windings, overlapping conduction angles and unequal rise and fall 
times of current (due to differing charge and discharge paths). However, 
for practical applications eq. 1 is adequate. 

The dynamic equation for a motor coupled to a load is: 

K(T) I = (Jm + Jl)dw/dt + D + Tf + T1 2 

Where 

K(T) = torque constant of motor winding 
Jm = motor moment of inertia 

J1 = load moment of inertia 

D - viscous damping coefficient 

Tf = motor friction torque 

T1 = load friction torque 

In a brushless DC motor Tf is small, usually only due to bearing drag, 
the viscous damping coefficient is also very small, and both items can 
usually be ignored in dynamic performance calculations. 

Motor equations and Transfer function 

The motor impedance at stall is equal to a resistance, R, in series 
with a parallel combination of an inductance, La, and another resistance, 
Rl. When the motor rotates, the armature coils move in the stator magnetic 
field* The induced emf appears across the armature terminals as internally 
generated voltage (counter emf), Eg. Therefore, the equivalent electric 
circuit of the motor is the impedance at stall, connected in series to a 
voltage source, Eg. The physical explanation for this model is that Rl 
represents the losses in the magnetic circuit. This model was found to be 
accurate for the motor. However, the resistance Rl is usually larger than R 
(typical, about 5-10 times), and hence, the effect of Rl on the motor 
operation is insignificant. Therefore, it is possible to ignore this 


87 



resistance in most practical applications, and approximate the motor 
equivalent circuit by R, La, and Eg. Let the motor voltage and current be V 
and :1a, respectively. The relation between these variable is given by 

V = LaDIa/dt + RIa + Eg 3 

where lEg, the internally generated voltage, is proportional to the motor 
velocity;, w. 

Eg = K(E)w 4 

Equations 3 and 4 can be combined to give: 

V - La dla/dt + RIa + K(E)w 5 

Equation 5 is known as the electrical equation of the motor. 

Since the magnetic field in the motor is constant, the current produces 
a proportional torque: 

Tg = K(T) la 6 

;Let us denote the moment of the motor by Jm, and let Tf represent the 
constant friction torque in the motor. Also, denote all the viscous 
friction torques and other torques which are proportional to the velocity by 
Dw. Then, the opposing torque in the motor, Tm, is given by: 

Tm = Tf + Dw 7 

Now assume that the motor is coupled to a load. Denote the load moment 
of inertia by J1 and the load opposing torque by Tl. The relation between 
the torques and velocity is the following: 

Tg = (Jm + JI)dw/dt + Dw + Tf + Tl 8 

Equation 8 is the dynamic equation of the motor, and along with 5 and 
6, it describes the relations between the electrical and mechanical 
variables. This equation is based on a tacit assumption that motor velocity 
is the same as that of the load. 

For high-performance servo systems, since the mechanical parts of the 
system are elastic, they deflect under torque. Consequently, the 
instantaneous velocities of various part are different, and at some 
frequencies will be in opposite directions. This condition allows the 
system to store a large amount of mechanical energy, which results in 
noticeable angular vibrations. This phenomenon is called torsional 
resonance. 

For our purposes we represent the motor and segment as two solid bodies 
coupled by an inertialess shaft. (Further couplings for,e.g., a tachometer, 
can be denoted by additional values n = m, 1, 2, ....) Let us denote the 
moments of inertia and angular positions of the load and the motor by Jl, Jm 
and 01 and 0m, respectively. Also, denote the stiffness and damping factors 
of the shaft by K1 and Dl. Note that this model is an overall approximation 
and , hence, K1 and Dl may be influenced by characteristics of the motor 
armature, shaft, coupling, or the load. 


88 



In order to derive the dynamic equations for this system, let T1 be the 


torque delivered from the motor to Jl. The dynamic equations are: 

Tg = Jm 0m + D 9m + T1 9 

T1 = Jl 01 10 

The deflections of the shaft is describe by the following equation: 

T1 = K1 (6m - 91) + D1 (0m - 91) 11 

If we substitute 10 for torque T1 the dynamic equations become: 

Tg - Jm 0M + D 0m + Jl 01 12 

Jl 01 + D1 91 + Kl 01 = D1 0m + K1 0m 13 

Now consider the electrical equations 1 and 6 with: 

I = la and 


w = 9 

which describe the behavior of the system. To simplify the analysis, we 
substitute 6 and 12 and apply the Laplace transformation to all the 
equations. (The laplace transform of x(t) is x(s). 

(sLa + R)Ia(s) + K(E)s 9m(s) = V(s) 

-K(T)Ia(s) + (s 2 Jm + sD) 0m(s) + s 2 Jl 01(s) = 0 

( sDl + Kl) 9m( s ) - ( s 2 Jl + sDl + Kl) 01(s) =0 14 

Equations 14 are the motor model system equation and may be written in 
matrix form for simplification. For use in MATLAB we have rearranged these 
terms and let 1 = g for the harmonic drive gearbox flex, gr = gear ratio, 
and C = inertia and damping terms. 

I 

Let 10= 9 

0 

Thus: 


I -R/L -K(E)/L 0 I 1/L 

0 = K(T) / Im -Cg/Im gr 2 -Kg/Imgr 2 9 0 V 

0 0 1 0 9 0 


and 

I 0 = A iq 10 + B iq V 


where the output is: I 

0 

0 


89 



This operation is executed by MOTGER.M. 

The transfer function is denoted by G. From the Beam (segment) model: 

G ■ AmG + BmT(A) where T(A) is the torque delivered to the 

beam or segment. ^ is the rotation of the segment. 


? 

> 


Cm 

y 




This operation is executed by ARMMOD.M. 


BLOCK DIAGRAM OF MOTOR MODEL 
Tp 



Motor Transfer Function 
*t 

w Js(sL + r) Kt 

V m K e K t J(sL + r) + K e K t 

1 + 

J(sL + r) 

rJ L 

Let: T m = — r and T e = 

Kt r 

Then: 

1/K e 

(s T m + 1) (s T e + 1) 



90 




MODELING COMBINATION 


(Series of commands: motger, armmod, combine; to simulate, 

type: simcomb) 

MOTOR MODEL: (executed by motger.m) 


10 = 


I 
0 
L 0 




-R -Ke a 



- 


L L 

- 


" 1 ' 

i 



I 


L 

• . 


K t -C g -K g 




0 


Im iMgr iMgr 2 

0 

+ 

0 

.0 . 


0 1 0 

-0 - 


0 


= [A I0 ] [i©] + [B I0 ]V output is 


I 
0 
L 0 


BEAM MODEL: (executed by armmod. m) 
G = AmG + BmT a 


y 


Cy 

V 

= 

- - 



Cy 


= [Cm]G 


PUTTING THE TWO TOGETHER: (executed by combine.m) 


10 


A ie 

Act 

10 


B ie 

.6. 


. Ac2 

AMa . 

.G. 

T 

0 


91 



= [Ac] 


ie 

-G. 


+ [B C ] V 


ie 

y 

¥ 

¥ J 


Ia 

0 

0 

0 


0 

Cy 

Qj, 

Cy 


10 
I LG - 


= [Cd 


ie 

-G. 


Ta = * K g \|/ - C g¥ 

= ^0 + ^0 - KgCyG - CgCyG 


Aci = 


0 

0 


Ac2 = 


o ^b m ^b m 
0 


Aj^a = Am ' KgB M Cy - CgBjviCy 


U2 _ quantity 



-[QJ 


o 

10 

-G. 


which the end 

if 10 

Cy - LCy ] ^ J 


tip 


detector measpres 


92 



- - flex in harmonic drive 




93 





Motor Parameters 


L r = Inductance of motor = 4.1 mH +/-30% 

R = Motor electrical resistance = 1.788 ohms +/-12% @25°C & 2.48 ohms +/- 1 2% @125°C 
AT t = Motor torque sensitivity = 71.36 oz-in/A +/-10% 

K e = Motor voltage constant = 0.504 v-sec/rad 
J m - Motor rotor rotary inertia = .064 oz-in-sec 2 
V = Voltage to windings 
I A = Current to windings 

0, 8 = Motor angular position and rotational speed, respectively 
Tm = Torque generated by motor 

System Parameters 

d = Difference between laser end tip position and arm end tip position as measured by the sensor 

T K = Torque applied to the ARM 

C(s) = Controller 

g R = Gear box ratio = 200 

M k ( s) = Arm model (Torque in; end tip position, base angular velocity out) 

FjJ s) = Laser positioning system model 
G s (s) = Sensor model 
L = Length of segment 
V» c = Desired segment angular position 
= Laser angular position 

V*. = Segment base angular position and rotational speed, respectively 

Flexible segment model for modeling configuration 1; input: T, output: y and i> 


A = To 

1 

0 

0 

0 

0 

0 

ol 

! 0 

0 

0 

0 

0 

0 

0 

0 1 

i 0 

0 

0 

1 

0 

0 

0 

0 1 

! o 

0 

-“T 2 

0 

0 

0 

0 

0 1 

1 o 

0 

0 

0 

0 

1 

0 

0 1 

j 0 

0 

0 

0 

_w 2 2 

0 

0 

0 

1 0 

0 

0 

0 

0 

0 

0 

1 

L° 

0 

0 

0 

0 

0 

-w 

3 2 0_ 


94 


CSL 



r 

B = 0 

/o’(0) 

0 

A’(0) 
i o 
/ 2 ’(0)l 
0 

i/ 3 ’(0)i 

I — • 

C = T /q(L) 0 /j(L) 0 / 2 (L) 0 / 3 (L) 0 

o /o’(L) 0 /j’(L) 0 / 2 ’(L) 0 /g’(L) 

/ 0 ’(L) 0 //(L) 0 / 2 ’(L) 0 / 3 ’(L) 0 


A = 0 1 00 00 00 

-w 0 2 -2 f 0 w 0 2 0 0 0 0 0 0 

0 0 0 1 0 0 0 0 

, 0 0 -Wj 2 -2f 1 w 1 2 0 0 0 0 

0 0 0 0 0 1 0 0 

0 0 0 0 -0J 2 2 -2s 2 u 2 2 0 0 ! 

0 0 0 0 0 0 0 1 
0 0 0 0 0 0 V -2c 3 w 3 2 ! 


95 



HARMONIC DRIVE SPRING RATE CHARACTERISTICS 


These spring rates are found by fixing the input shaft and torquing the output shaft. 100% rated 
output torque @1750 rpm input of a 200:1 4M drive is 4100 in-lb (463.2 N-m). 


DEFLECTION 



Slope A: 1/K A = 345,000 in-lb/rad (38,979 N-m/rad) 
Slope B: 1/K B = 1.88 x 10 6 in-lb/rad (212,410 N-m/rad) 


96 





<L> 

> 




C 

a 

o 

o 

o 

cd 


O 

■o 

o 


'O 

3 

T> 

c 


cu 

e 

cd 

TD 

T3 

3 

cd 

bJj 

C 

•e 

Oh 


00 

cd 

O 


00 


cd 

co 


£ 

<L> 

-C 


H 



97 


CALCULATION OF END TIP POSITION 
















APPENDIX E - SAFETY ASSESSMENT 

Safety and Health Plan 

The Objectives of the Health and Safety Plan are to: 

1. Provide a safe work, environment for personnel. 

2. Prevent injuries 

3. Monitor compliance with Federal, State, and local Safety Regulations 
including OSHA. 

4. Provide a set of preferred responses to emergencies. 

5. Provide a means for recording and reporting accidents, incidents , and 
injuries to the administration and to the safety committee. 

6. Provide a set of Safety and Health requirements for subcontractors. 

7. Determine the structure of the Safety and Health Organization and 
Programs . 


Organization 

Implementation of the Health and Safety Plan will be the responsibility 
of the Health and Safety Officer. The Safety Officer will consult with the 
Laser Safety Specialist in matters of laser safety and with the safety 
committee as required. The Safety committee is open to all employees and 
will function as the forum for Health and Safety matters. The safety 
committee will meet as required to review injury reports and to evaluate and 
change the Health and Safety Plan. 

Responsibilities 

CCE recognizes the importance of the Safety and Health of its 
employees and will comply with Federal, State (OSHA), and local Safety 
Regulations. To demonstrate its commitment CCE will operate a Safety 
Program and employ a Safety Officer to oversee and manage the program. 

An injury report will be completed for all reported injuries. A copy 
of the injury report will be sent to: 

1. the Principal Investigator, 

2. the Safety Officer, 

3. the Safety File/Administration. 

The Safety officer will have responsibility for compliance with 
Federal, State, and Local Safety Regulations including OSHA. The Safety 
Officer will conduct a monthly inspection of the facilities. 

The Safety Officer is responsible for the evaluation of the safety 
aspects of incoming equipment and materials and recommending safety policy. 
Hazardous or dangerous materials and equipment will be logged in the Safety 
File along with recommended actions. 


98 



The safety officer will review injury reports, evaluate their cause 
and suggest rules, means, or procedure which could eliminate or reduce risk 
of future injuries. For serious accidents the Safety officer will convene 
the Safety committee and present the situation for their review. 

Laser Safety Program 

I. Laser hazard analysis and control. 

The safety procedure necessary for any laser operation vary with 

three aspects: 

1. Laser hazard classification 

2. Environment of use 

3. Operating personnel 

The safety procedures are best presented by relating them to the laser 
hazard classifications. 

II. Laser hazard classification 

Class I - The lowest powered lasers. These lasers are not considered 
hazardous even if the output laser beam can be collected by 80 mm 
collecting optics and concentrated into the pupil of the eye or if the 
radiation at its maximum possible concentration on the skin or eye will not 
cause injury at the maximum exposure duration possible during one day of 
laser operation. 

Class II - Those lasers which are only hazardous if the viewer overcomes 
his or her natural aversion response to bright light and continuously 

stares into the source. 

Class III - Those lasers which can cause injury within the natural aversion 
response time, i.e., faster than the blink reflex (0.25 s). They are not 
capable of causing serious skin injury or hazardous diffuse reflections 
under normal use. 

Class IV - Those lasers which present a "High Risk" of injury and can cause 
combustion of flammable materials. They may cause diffuse reflections that 
are eye hazards and may also cause serious skin injury from direct exposure. 

III. Safety precautions 

Class I - No user safety rules are necessary. 

Class II - 


a. Never permit a person to continuously stare into the laser source 
if exposure levels exceed the applicable permissible exposure level for the 
duration of intended staring. 

b. Never point the laser at an individual's eye unless a useful 
purpose exists and the exposure level and duration will not exceed the 
permissible limit. 

Class III - 


99 


a. Do not aim the laser at an individual's eye. 

b. Permit only experienced personnel to operate the laser. 

c. Enclose as much of the beam path as possible. Termination should 
be used at the end of the useful paths of the primary and any secondary 
beam. 

d. Shutters, polarizers and optical filters should be placed at the 
laser exit port to reduce the beam power to the minimal useful level. 

e. Control spectators. 

f. A warning light or buzzer should indicate laser operation. 

g. Do not permit laser tracking of nontarget vehicles or aircraft. 

h. Operate the laser only in a restricted area. Place a warning 
sign on the door. 

i. Place the laser beam path well above or well below the eye level 
of any sitting or standing observers when possible. Make sure that the 
laser is secure and that the beam travels only along the intended path. 

j. Always use proper laser eye protection if required. 

k. A key switch should be installed. 

l. The beam or its specular reflection should never be directly 
viewed with optical instruments without sufficient protective filters. 

m. Remove all unnecessary mirror-like surfaces from within 
the vicinity of the laser beam path. 

Class IV - 


a. Restrict personnel access. 

b. Operate only within a localized enclosure or in a controlled 
workplace. 


c. Eye protection is required for all personnel in the controlled 

area. 

d. Remote firing and viewing (video) should be used when feasible. 

e. Tracking systems should have positive stops to limit irradiated 
areas to predefined control areas. 

f. Beam shutters, beam polarizers, and beam filters should be used 
to mask or obstruct beams to limit use of laser beam to authorized 
personnel. 


g. Backstops should be diffusely reflec ting-fire resistant target 
materials where feasible. Safety enclosures should be used around work 
areas. Viewing systems used should ensure against hazardous levels of 
reflection of laser irradiation back through optics. 


100 



IV. Application of safety procedures. 

„ Ih m Sa£ ! ty Officer (SO) and the Laser Safety Specialist (LSS) are 
espons e or interpretation of safety controls and determining which 
control safety rules are applicable to the particular situation and 
environment. Specific safety guidelines are available in the Handbook 

it n.f ty .- With Lasers and other Optical Sources" by D. Sliney and :M. 
Wollbarsht, Plenum Press, New York (1982) or the "Laser Safety Reference 
°o y the Laser Institute of America. Performance standards for laser 

JIiSt c*? , cove \ ed in the Code f °r Federal Regulations (21CFR1040) and 
ANSI Z-136.1 (1986) Standard "Safe Use of Lasers" or their revisions. 

To use these rules the laser must first be classified. This is 
usually found on the manufacturer's label. If the laser classification 
cannot e determined from the label, the manufacturer's literature, of if 
the laser has been modified, then its classifications must be determined by 
calculations and measurements as detailed in the Handbook. 

i tL 1 hellum ~ neon lasers with an output power below 0.4 microW are 
c assified as Class I. Those with a power below 1 mW are classified as 
ass . Those with out puts of 1-2 mW and those with a power below 5 mW 
and an output irradiance below 2.5 mW/cm2 are Class 3A; others are Class 

3B. AH continuous wave lasers with an output above 0.5 W are classified 
as Class IV. 


A Laser Equipment Survey Form" will be completed for each laser in 
use and kept in the Laser Safety File. For Class III and Class IV lasers a 
c ? 8 ! r J astallatlon Surve y will be completed and kept in the Laser 

a j 6 A monthly safet Y inspection will be made of the installation 

and will be recorded in the Laser Safety File log. One copy of the Report 

File In ^ Ury f ° r aQy laSer related injury will be kept in the Laser Safety 


V. Laser Safety Training 

Laser safety training will be provided employees based upon the Class 
asers they use. A general orientation on laser hazards and laser safety 
will be provided to employees. The "Industrial laser Safety Program 
Management and the "Laser Safety" Professional Advancement Course Notes in 

the Laser Safety Reference Book" will form the basis for the training 
program. & 


Robotics 


The American National Standard Institute (ANSI) has safely developed 
a Se * j standards for industrial robot systems safety requirements. These 
standards are intended for industrial situations and are not necessarily 
appropriate or sufficient for space robots used in or for teleoperations. 
A complete analysis of the interaction of the ARM, spacecraft, astronaut, 
compu er, and hardware is required before promulgating specific safety 

standards for space or teleoperations. Analysis should be conducted for 
each situation and usage. 


We recommend that NASA comply with the 
ANSI/RIA R15. 06-1986 and the recommendations of 
ARM III operations. These recommendations are: 


appropriate portions of 
our safety consultant for 


101 


1. The main power disconnect should be outside the operating work 
envelope. 

2. The main power disconnect should be locked out prior to entering the 
barrier. 

3 . The personnel barrier gate should be interlocked and shut off all power 
and safe the robot if breached. 

4. A presence sensing should be installed on the barrier such as trip cord 
to an interlock switch to prevent inadvertent passage over the' barrier and 
as an emergency stop mechanism. 

5. The area should be posted with warning signs. 

6. The barrier should enclose the maximum potential reach of the robot 
through normal and potential failure sequences. 

7. The robot operator station must have an emergency stop switch of the 
mushroom button type. 

8. Provide means to prevent unintended motion of the robot while personnel 
are inside the barrier. 

9. Assure the barrier is high enough and strong enough to contain loose or 
flying parts. 

10. Prepare a written safe work and maintenance procedure. 

We propose that a physical means of separating personal from the 
restricted work envelope, a barrier, be in place before operation. A 
circuit, using hardware— based components, that overrides all other robot 
controls, removes drive power from the robot actuators, and causes all 
moving parts to stop, an emergency stop should be in place. Power supply 
to the physical ARM should be sufficient to prevent access during 
operation, the stopping process, and configuration failure. 

The ARM was designed to eliminate, where possible, the hazards 
associated with moving parts during assembly or operation. Because of the 
research nature of ARM III, special care is required to insure safe use. 
The ARM must be maintained and inspected before and after each use. 
Operating procedure review should be conducted prior and subsequent to each 
configuration modification. 


References 

ANSI Z-136.1 (1986) Standard "Safe Use of Lasers" 

Burton, J. /'Industrial robotics: Hazards, accidents, safety applications 

and advanced sensor technology" Professional Safety, 28—33, Nov. 1988. 

Code for Federal Regulations (21CFR1040) 

Laser Institute of America, "Laser Safety Reference Book" 

Sliney, D. and :M. Wollbarsht "Safety with Lasers and other Optical 
Sources" Plenum Press, New York (1982) 


102 



REFERENCES 


1. Albus , J. s. "Brains, Behavior and Robotics" 1981. 

manipulators "* College ^of* S ’ S / SSastry » ” Ada Ptive control of mechanical 
putators College of Engineering, U. C. Berkeley, Memo # M86/3, (1986) 

& * Sons ^ Inc?^ 3 l972 ! ^ R ’ Slvan ’ Optimal Control Systems, John Wiley 

Prentice-Hall Inc*, T* 8 L " S ‘ ^ ^ ptlve lijtering Prediction and Control , 
6. Ibid, Goodwin et. al #J 1984, 

7- Popov, E.P., M echanics of Materials, 2nd Ed., Prentice-Hall Inc, 1976. 

8. Ibid. Popov, 1976. 

9. Ibid. Cannon et. al. 1984. 


103 


Bibliography 


Ahmad, Shaheen, "Real-time Multiprocessor Based Robot Control”, _IEEE 
International Conf erence on Robotics and Automation , San Francisco, April, 
1986 ^ 

Allan, Roger, "Nonvision Sensors", Electronic Design, June 27, 1985. 

Allen, Peter K. , "Sensing and Describing 3-D Structure", IEEE International 
Conference on Robotics and Automation , San Francisco, April, 1986. 

Angermeyer, J and Kevin Jaeger , "MS-DOS Developers Guide” The Waite Group 

(1986) 

Asada, H. and T. Kanado, "Design of Direct-drive mechanical arms" Robotics 
Institute of Carnegie-Mellon university ADA 1266 347, 1981. 

Baillieui, John, "Avoiding Obstacles and Resolving Kinematic Redundancy , 
IEEE International Conference ori Robotics and Automation, San Francisco, 
April, 1986. 

Balas, M. J., "Trends in Large Space Structures Control Theory: Fondest 

Hopes, Wildest Dreams,” IEEE Tranasctlons on Automatic Control, Vol. AC-27, 
No. 3, June 1982, pp. 522-536. 

Bania, Christopher F. , and James C. Lin, "Theory and Implementation of a 
High Capacity 3-D Recognition System”, IEEE International Conference ori 
Robotics and Automation, San Francisco, April, 1986. 

Bronez, M. A. and Margaret M. Clarke, "Requirements Development for a Free 
Flying Robot - the “Robin"” Rockwell International Space Station Systems 
Division, 12214 lakewood Blvd. Downey, Ca 90241 

and . n . T 

Alberta Quin, NASA, Marshall Space Flight Center EL15, Huntsville, AL 

35812,1986 IEEE 

Brown, Michael K. , ”0n Ultra-sonic Detection of Surface Features”, IEE E 
International Con ference on Robotics and Automation, San Francisco, April, 

7986 ^ 

Cannon, R. H. and E. Schmidtz, "Precise Control of Flexible Manipulators,” 
Robotics Research; The First International Symposium, Edited by; M. Brady 
and R. Paul, MIT Press, 1984, pp. 841-861. 

Cernuschi-Frias, Bruno, et al., "3-D Object Position Estimating and 
Recognition Based on Parameterized Surfaces and Multiple Views , 
International Conf erence on Robotics and Automation, San Francisco, April, 

T986T 

Chester, Michael, "Surveying the array-processor landscape" s Electronic 
Products, 42, July, 1986. 

Chiu, Stephen L, et al., "Sensor Data Fusion on A Parallel Processor", JEEE 
International Conference on R obotics and Automation, San Francisco, April, 

1W 


104 



Dario, p. e t al. , "Geometrical Optimization Criteria for the Design of 
Tactile Sensing Patterns", IEEE Internation al Conference on Robotics and 
Automation, San Francisco, April, 1986. “ 

Doyle, J.C. and G. Stein, "Multivariable Feeback Design: Concepts for a 

Classical/Modern Synthesis," IEEE Transactions on Automatic Control. Vol . 
AC-26, no. 1, Feb. 1981, pp. 4-16. 

Elfes, Alberto, ‘Sonar Based Mapping and Nnavigation System", IEEE 
T^r natl0nal - Copference °£ Robotics and Automation, San Francisco, April, 


Ellis, R. E. , "Multiple-scale Measure of Static Tactile Texture", IEEE 
T?fi^ raatl0Pal Conference °E Robotics and Automation, San Francisco, AprlTT 


Garabedian, P.R., Partial Differential Equations. John Wiley and Sons Inc., 


Goel P. K. The inverse kinematics solution, closes-form dynamics 
simulation of adept one industrial robot" Proceeding of 1988 
International Conference on Robotics and Automation, 1688-1693, 1988. 


and 

IEEE 


Goodnic, S. E. and Y. Y. Lau "Adaptive Control 
Industrial Servo", PCIM 26-32, Sept. 1989. 


Algorithm 


Self-tunes 


Goodwin, G. C. 
Prentice-Hall 


and K. S. Sin, Adaptive Filterining "Prediction and Control . 
Inc., 1984. “ 


Haberman, N. A. and Dewayne E. Perry, 
Addison Wesley 1983 


’Ada for Experienced Programmers'* 


Hapgood, Fred, '’Inside a Robotics Lab: 
Technology Illustrated, April 1983. 


The Quest for Automatic Touch”, 


Hawker, J. S., 

Manipulators 

manipulators” 


R. N. Nagel, R. Roberts, and N. G. Odrey, "Mltiple Robotic 
Designing a task-oriented control system for multiple 
Byte 203-219 Jan. 1986. 


Haynes. L. S. and A. J. Wavering, "Real Time Control System 
Software, Some Problems and an Approach" Real-Time Control Group 

Hillls, W. D. , "A High Resolution Image Touch Sensor", The International 
Journal of Robotics Research. Vol. I, No. 2, Summer 1982. 

Hsia, T. C. , Adaptive Control of Robot Manipulators - A Review" IEEE 
IgHiHational Conference on Robotics and Au tomatlon, San Francisco, AprIT7 


Huang, Y. Y. , et al., "Region Filling Operations for Mobile Robot Using 
Computer Graphics", IEEE Internatio nal Conference on Robotics and 
Au tomation, San Francisco, April, 1986. ” — — 

Johnston, A. R. "Automatic guidance for lremote manipulator", NASA Tech 
Briev 9 - 4 - #74 1985. 


105 



Kent, Ernest W., et al., "Building Representations from Fusions of Multiple 
Views" , IEEE International Conference on Robotics and Automation, San 
Francisco, April, 1986. 

Koivo, A. J., "Force-Position-Velocity Control with Self-tuning for Robotic 
Manipulators", IEEE International Conference on Robotics and Automation, 
San Francisco, April, 1986. 

Kresselmeier , G. , "Adaptive Obervers With Exponential Rate of Conversion," 
IEEE Transactions on Automatic Control, Vol. AC22, 1977, pp. 2-0. 

Kreutz, K. "On nonlinear control for decopled exact exterrnal linearization 
of robot manipulators" NASA Tech Vrief 11—8 #114, 1987. 

Krogh, Bruce H. , and Charles E. Thorpe, "Integrated Path Planning and 
Dynamic Steering Control for Autonomous Vehicles", IEEE International 
Conference on Robotics and Automation, San Francisco, April, 1986. 

Lin, Xueyin, and William G. Wee, "SDFS: A New Strategy for the Recognition 
of Objects Using Range Data”, IEEE International Conference on Robotics and 
Automation, San Francisco, April, 1986. 

Luo, Ren C., and Wen-Hsiang Tsai, "Object Recognition Using Tactile Image 
Array Sensors", IEEE International Conference oti Robotics and Automation , 
San Francisco, April, 1986. 

Marcus, M. A. , "Ferroelectric polymers and their applications" Fifth 
International Meeting on Ferroelectricity, Penn State University, 1981. 

Mahalingam, Subbiah, and Anand M. Sharan, "The Optimal Balancing of the 
Robotic Manipulators", IEEE International Conference ori Robotics and 
Automation, San Francisco, April, 1986. 

Medioni, Gerald, and Yoshio Yasumoto, "Corner Detection and Curve 
Representation Using Cubic B-Splines", IEEE International Conference oil 
Robotics and Automation, San Francisco, April, 1986. 

Narerdrad, K. S., and L. S. Valavari, "Stable Adaptive Observers and 
Controllers," Proc. IEEE, Vol. 64, pp 1198-1208, August 1976. 

Palmin S. "New approach for the control of DC servo motors". Motion 3-13, 
Jan 1989. 

Pennwalt, "Kynar piezo film technical manual" Pennwalt Corp, Pa. 1983. 

Rajaram, S. and J. L Junkins, "Identification of Vibrating Flexible 
Structures," AIAA Journal of Guidance, Control, and Dynamics, Vol. 8, July- 
August 1985, pp 463-470. 

Schwartz, Lawrence M, "CD ROM offers cost effective alternative for large 
databases" Computer Technology Review75-83 , Winter, 1985 

Seraji, H. "Simplified linear multivariable control of robots", NASA Tech 
Brief 13-4 #89, 1989. 

Shu, David B. et al. , "Aprroach to 3-D Object Identification Using Ranging 
Images", IEEE International Conference oil Robotics and Automation, San 
Francisco, April, 1986. 


106 


Slotiae, J.-J. E. , "On Model and Adaptation in Robot Control", IEEE 
Interna tional Conferen ce on Robotics and Automation, San Francisco. AdtII . 
1986. ’ 

Son tag , Edwardo D. , and Hector J. Sussman, "Time-Optimal Control of 
Manipulators , IEEE Internat ional Conference on Robotics and Automation. 
San Francisco, April, 1986. 

Sundararajan, J. P., J. P. Williams and R. C. Montgomery, "Adaptive Modal 
Control of Structural Dynamic Systems Using Recursive Lattice Filters," 
AIAA Journal o_f Guidan ce, Control, and Dynamics, Vol. 8, March-Anril 1985. 
pp 223-229. ’ 

Vranish, John M. , "Magnetoinductive Skin For Robots", IEEE International 
Conference on Robotics and Automation, San Francisco, ApriTT 1986^ 

Wallace, W. et al., "Progress in Robot Road-following", IEEE International 
Conference on Robotics and Automation, San Francisco, April, 1986 . 

Waxman, Allen M. , et al, "A Visual Navigation System", IEEE International 
Confe rence on Robotics and Automation, San Francisco, April, 1986. 

Zhaung, X., and T. S. Huang, "From 2-View Motion Equations to 3-D Motion 
^f^ers * nd _ Surface Structure: A Direct and Stable Algorithm", IEEE 

International Conference on Robotics and Automation, San Francisco. Aoril. 
1986. ’ 

"A Report on the 12th ISIR in Paris”, Robotics Today, Vol. 4, No. 4, August 


"Touch Sensor Responds to Contact Pressure", NASA Tech Briefs, Summer 1981. 
"Touch Sensor for Robots", NASA Tech Briefs, Fall 1985. 

National Bureau of Standards (1986). 

Kwakernaak, H. and R. Sivan, Linear Optimal Control Systems, John Wilev & 
Sons, Inc., 1972. 

Meirovitch, L., Analytic al Methods in Vibrations, Collier-MacMallian 
Canada, LTD, 1967. ~ 


NASA Tech Briefs, Technical Support Package for "Finding Bright-Spot 
Coordinates in Television Images" Vol. 9, No. 1, MFS-25999 George C. 
Marshall Space Flight Center Marshall Space Flight Center, Alabama 35812 

/ i no \ r 


Popov, E.P., Mechanics of Materials, 2nd Ed., Prentice-Hall Inc., 1976. 

Rector, Russel and George Alexy, "The 8086 Book" Osborne/McGraw Hill 
Berkeley, Ca. 1980 


Simo, J.C. and L. V. Quoc, “A Novel Approach 
Beams Under Large Overall Motions — The Plane 
Laboratory Memorandum No. UCB/ERL/M85/63 
Berkeley, 1985. 


107 


to the Dynamics of Flexible 
Case," Electronics Research 
University of California, 



Results of Segment Modeling 


Material 
Outsidfe Radius 
Ins icje Radius 

Payload Mass 

: Aluminum 
: 2.917 cm 
: 2 . 6 1 9 cm 

Static Displacement 

Resonant 

1st 

Frequencies 

2nd 

(hz) 

3rd 

2.267 kg 

3 .95 

X 

10-3 

m 

8 . 38 

66 . 9 

207 . 5 

2.267 kg (-CW) 

3.95 

X 

10 l 

m 

8.94 

66.9 

207 . 5 

4.534 kg 

7 .92 

X 

10 _J 

m 

6.36 

64.9 

205 . 3 

9.068 kg 

1 . 58 

X 

10"? 

m 

4.68 

63.8 

204.0 

45.34 kg 

7 .92 

X 

10’? 

m 

2.17 

62.8 

203.0 

90.68 kg 

1 .58 

X 

10 ~1 

m 

1 . 54 

62.7 

202.9 

181.36 kg 

3 .16 

X 

10 _1 

m 

1 . 09 

62.6 

202.8 


Material 
Outside Radius 
Ins ide Radius 

Payload Mass 

: Alun inum 

: 4.5 cm 
: 3.92 cm 

Static. Displacement 

Resonan t 
1st 

Frequencies 

2nd 

( hz ) 
3rd 

2.267 kg 

5 . 78 

X 

10 3 

m 

*18.2 

110.2 

326.8 

4.534 kg 

1 .16 

> 

10"3 

m 

14.3 

104.3 

318.9 

9.068 kg 

2 .31 

X 

10"; 

m 

11.4 

100.4 

314.2 

45.34 kg 

1 .16 

V. 

10 ~? 

m 

5.59 

96.4 

309.8 

90.68 kg 

2.31 

X 

10 ~9 

m 

4.01 

94 . 8 

309 . 3 

181.36 kg 

4.62 

X 

10 -2 

m 

2 .85 

95.5 

308 . 9 


Material 
Outside Radius 
Inside Radius 

Payload Mass 

: Steel 
: 3.65 
: 3.25 

Static 

cm 

cm 

Displacement 

Resonant 

1st 

Frequencies 

2nd 

(hz) 

3rd 

2.267 kg 

5.68 x 

10_ 4 

m 

20.58 

147.2 

449.8 

2.267 kg (-CW) 

5.68 x 

10 ~ 

m 

21.8 

147.4 

449 . 9 

4.534 kg 

2.27 x 

io- 

m 

16.06 

141.6 

443 . 0 

9.068 kg 

4.55 x 

10 7 

ra 

12.04 

138.2 

439.3 

45.34 kg 

2.2 7 y 

1 0 — P 

m 

5 . 68 

135.12 

436.0 

90.68 kg 

4.55 x 

1 0 ~ ? 

m 

4.05 

134.7 

435.6 

181.36 kg 

9.09 x 

10 -2 

m 

2.87 

134.5 

435.4 


TABLE 1 


108 



Material 
Outside Radius 
Ptis ide Radius 


Payload Mass 


45.34 kg 
90.68 kg 
181.36 kg 


Ma ter ial 

Ou ts i d e Rad i u s 

Inside Radius 


Payload Mass 


45.34 kg 
90.68 kg 
181.36 kg 
181.36 (-CW) 


: Steel 

: 4.445 cm 
: 3 . 8S94 cm 


Resonant Frequencies (hz) 

Static Displacement 1st 2nd 3rd 


4 . 66 

X 

10 3 
o 

m 

8 . 44 

94.4 

299.7 

9 . 33 

> 

10_ 2 

m 

6 . 16 

93.0 

298.2 

1.87 


10 2 

m 

4 . 43 

92.3 

297 . 5 


: Steel 

: 5.8738 cm 
: 5.1594 cm 


Static 

Resonant 

Displacement 

Frequencies 

1st 

( hz ) 
2nd 

3rd 

1.57 

X 

10 -3 m 

_ q 

13.98 

127.2 

399 . 2 

3.13 

y 

10 j B 
_ q 

11.09 

124.5 

396 . 1 

6 . 26 

X 

10 J m 
_ q 

7 .57 

122.8 

394.5 

6 .26 

X 

10 J m 

8.12 

122.9 

394.5 


109 



Table 2 - System Parameters 


Length L 

ARM Segment 
Mass/ length 

Elastic 

Modulus 

Cross Section 
Circuular 

_ 

Payload Rotary 
Inertia, Ip 

Base Rotary 
Inertia, lb 

m 

Kg/m 

GPa 

OD cm 

1 

ID cm 

Kg.ra 2 

5 lbs. 

lOlbs. 

1.86 

1 

t 

11.0971 

1 

1 

1 



5.715 

1 

8.897 x lO -3 


5.557 


Table 3 - Modal Frequencies 


ARM Segment Modal Frequencies 

Modeling Mp = 2.267 Kg (5 lbs.) 

Configuration 

Modal Frequencies 
Mp = 4.534 Kg (10 lbs.) 


Wi 

W 2 

w 3 

Wi 

W 2 

»3 

1 

lb Mp 

O O 

7.34 

40.4 

124 

5.52 

39.2 


2. 

Mp 

a — — o 

26.0 

99.0 

220 

25.0 

97.0 

216 

3. 

1 o 

3.66 

39.7 

125 

2.71 

38.8 

D 

4. 

v, Mp, Ip 

1 o 

3.66 

39.2 

122 

2.71 

38.4 ^ 

i 

121 

5. 

s 

8.63 

54.1 

151 




110 






















STIFF” CASE “FLEXIBLE” fcASt 


Table A: Arm Sizing; Flex/Stiff 





. 

Material 

c i 

n 

Arm Mass 

Approx. 1 st Mode 

Max. Stress 


(cm) 

1 

(kg) 

" w i 

(Hz) 

(k pa.) 


1.0000 

1 C811 

1.103 

.00498 

3.9 

Fiberglass 

1.5000 

1.5178 

0.3503 

.00407 

B 


2.0000 

2.0057 

0.1491 

.00352 

13 


1.0000 

1.0136 

0.2383 

.00448 

23 

Aluminum 

1.5000 

1.5027 

0.0714 

.00407 

51 


2.0000 

2.0009 

0.0302 

.00352 

90 


1.0000 

1.0052 

0.2547 

.00498 

61 

Steel 

1.5000 

1 '-010 

0.0758 

.00407 

136 


2.0000 

2 0003 

0.0320 

.00352 

240 


1.0000 

2.5763 

33.6 

.0498 

0.23 

Fiberglass 

1.5000 

2.5406 

27.5 

.0498 

0.21 


2.0000 

2.5931 

21.3 

.0498 

0.19 


3.0000 

3.2931 

12.1 

.0498 

0.18 


1.0000 

1.6000 

13.6 

.0498 

0.60 

Aluminum 

1.5000 

1.8050 

8.77 

.0498 

0.58 


2.0000 

2. 1546 

5.59 

.0498 

0.62 


ISteel 


3.0000 

3.0501 

2.64 

.0498 

0.78 

1.0000 

1.3249 

18.6 

.0498 

1.5 

1.5000 

1.6349 

10.4 

.0498 

1.5 

2.0000 

2. >621 

6.21 

.0498 

1.6 

3.0000 

3,0191 

2.83 

.0498 

2.1 


table 4 


111 
















































































STIFF” CASE I “FLEXIBLE” CASE 


Table A: 1.5 g. ; Arm Sizing 


Material 


Aluminum 


Aluminum 



10.000 



15.000 


20.000 


10.000 


15.000 


20.000 


10.000 


20.000 


23.000 


10.000 



20.000 


23.000 


10.000 


15.000 


20.000 


23.000 


15.961 


Fiberglass | 15.000 | 17.186 

I 20.000 I 20.808 



11.635 


15.395 


20.129 


10.703 


15.152 


20.049 


86 085 


Fiberglass I 15.000 86099 


86.142 


86.189 


53.734 


15.000 53.800 


Arm Mass I Approx. 1 st Mode 


53.974 


54.164 


42.070 


42-206 


42.565 


42 946 



21871 


20927 


41078 


38284 


34728 


32361 


.0278 



112 

































































































ARMMODEL DATA - FILE: 2m22k9cm 
INPUT DATA 


DATA FILE 


Base Rotary Inertia: 55.87 
Tube Inside Radius: 0.0382 
Tube Outside Radius: 0.04445 
X-sectional Inertia of Beam: 1.39362e 
Payload Mass: 22.67 
Mass/Length of Beam Material: 4.02558 
Elastic Modulus of Beam: 7.5e+010 
Length of Beam: 2 

Beam Material Damping Coefficient: 2 


INPUT PARAMETERS 

DIAMETER - 9 CENTIMETERS 

-006 

WEIGHT - 22 KILOGRAMS 
LENGTH - 2 METERS 


OUTPUT DATA FOR BETA = 1 

Beta: 0.643195 

CC1: -0.008135 

CC2: 0.0161784 

CC3 : 0.0168967 

CC4: -0.0161784 

OMEGA (rads/sec): 66.6614 

OMEGA P (hz): 10.6095 

fipO : 0.00563545 

fil: -0.0065375 

fOpO: 0.0797364 

fOl : 0.159473 

OUTPUT DATA FOR BETA = 2 

Beta: 1.98818 

CC1 : -4.58246e-005 

CC2: 4. 65435e-005 

CC3 : 4. 66781e-005 

CC4 : -4 . 65435e-005 

OMEGA (rads/sec): 636.94 

OMEGA P (hz): 101.372 

fipO: 1 . 69679e-006 

fil: 5. 43e-006 

fOpO: 0.0797364 

fOl : 0.159473 

OUTPUT DATA FOR BETA = 3 

Beta: 3.54733 

CC1: -3.42374e-007 

CC2 : 3.43502e-007 

CC3: 3 . 43483e-007 

CC4 : -3.43502e-007 

OMEGA (rads/sec): 2027.65 

OMEGA P (hz): 322.711 

fipO: 3.93374e-009 

fil: -2 . 37056e-008 

fOpO: 0.0797364 

f 01 : 0.159473 


OUTPUT PARAMETERS 


MODE 1 


MODE 2 


MODE 3 


TABLE 5 
113 


Figure 1 End tip displacement 

Assume a physical cantilever segment of length L. A forc « F 
perpendicular to the central axis of the segment wili cause a 
d. The magnitude of d is proportional to F and to the stiffness 
segment. Typically, robotic manipulators use short, stiff segments to 
mtntm!ze dV preferably to a point where it can be neglected during 
operation. A long segment can be defined as a segment which has a value o 
d that becomes significant during normal operation and, ^erefore oannot 
neglected. Since, in general, the prediction or calculation of d is 
difficult, accurate positioning of long, flexible segments in real time is 
difficult. Our concept utilizes the fact that a light beam s per 
t\Ad Thus the light beam serves as an axis of absolute reference. The 
value* d is the distance between the light beam and the segment's distal end- 
tio position. Since, by using our methods, we can measure this value in 
"reartime" accurate positioning of long, flexible segments becomes 
feasible. (Real time is the sampling frequency required to observe the 

effects of induced modal contributions.) 



LASER BEAM RIGID BODY POSITIONING CONCEPT 



CM 

o> 

CO 



o 




• • 


GO 

GO 


CO 


APPLIED FORCE DISTORTS SEGMENT AND CAUSES END-TIP MISMATCH d 




Figure 2 ARM configuration 


We have designed a two-segment ARM. The shoulder articulation rotates 
and elevates. Concentric with the shoulder is a beam positioning unit which 
moves similarly. Both of these units are independently attached to the base 
reference point. The Beam Rider Module provides the vector position of the 
elbow with respect to the base reference point. 

The rotation of the elbow articulation is monitored by a high- 
resolution encoder. This information is used to define the elbow laser 
reference point for the second segment. The second beam rider module 
provides the vector position of the wrist with respect to the elbow 
reference point. 

A series of vector coordinate transformations is used to provide the 
position of the wrist end tip with respect to the base reference point. 
Thus, we can accurately specify the wrist end-tip position in real time. 


ARM CONFIGURATION 




Figure 3 Sensor configurations 

Four planar detectors were selected for evaluation. The first was the 
quadrant detector, with and without a central orifice. In operation, analog 
circuitry was used to detect beam movement; the beam was steered such that 
it was kept centered in the quadrant. This fast beam steering was necessary 
for the functioning of the DME and RME subsystems. 

The second was the rectangular matrix detector. Digital circuitry was 
used to process the detector information and provide an X-Y coordinate of 
the beam spot. Significant amounts of digital signal processing was 
required; it was determined that this detector configuration would on y e 
feasible at frequencies less than 30 hz. 

The third configuration was the annular matrix. This schema had the 
same limitations as the rectangular matrix. Additionally, it was not 
commercially available. Custom fabrication cost estimates were in the 30 to 
50 thousand dollar range. 


The fourth configuration was the lateral effects diode. This detector 
used analog circuitry to rapidly provide an X and Y value. It had 
sufficient resolution and linearity for our purposes. 



X-Y DETECTOR CONFIGURATIONS 



CO CD 





*V- 

11 .. .1—11. 

1 




£ CD -J 
Q 111 < 


CM 

X 



Z CM 


• • 


CO 

CM 

o> 

CO 

I 

00 

00 

I 


Q 

O 


00 

00 


CO 


FIGURE 3 



Figure 4 Detector circuitry output 

The output of the lateral effects diodes and the quadrant diodes was 
passed through a multistage analog signal processor. The first stage 
isolated the diode from the processing stages. Ideally, the magnitude of 
the charge produced was sampled; any current drawn limited the resolution of 
the devices. The four outputs were added, subtracted, and divided in such a 
manner that the +/- X and +/- Y locations of the beam were represented by 
the output voltages. The frequency response of the system was limited by 

capacitance factors inherent to the diodes and required to stabilize the 
circuitry. 



LATERAL EFFECTS DIODE 




CC CO 




Q CC 
CO o 

o — 



CM 

O) 

co 

i 

CO 

00 

I 

Q 

O 


CO 

CO 


Cfl 


CD 

CO 


FIGURE 4 



Figure 5 Original beam rider configuration 

The original beam rider configuration was an active positioning system 
using a pair of quadrant detectors and a retroflector. The 6R would fit 
within the segment and translate in the XI, Y1 and X2 and Y2 directions. 
The beam was to be reflected back down the tube. A major problem with the 
concept was the lack of high frequency responsiveness. A second problem was 
the loss of beam intensity when passing through the central orifice of the 
detectors . 



ACTIVE POSITIONING QUADRANT DETECTOR 




fiC o- 


"1 



00 £ 

UJ o 
Q UJ 

M LLJ 

Z O 





QC CO 




CD 

CO 

H— 

CO 


FIGURE 5 


Figure 6 Linear voice coil motor 

A linear voice coil actuator was designed as the actuator for the 
active positioning concept. The actuator had serial sets of coils. 
Sequential or simultaneous excitations of the coils provide the required 
linear travel and position resolution. The coil driver drove 256 coils with 
a positive or negative current. The value of the current in each coil was 
set by a multiplexing unit which addressed each coil uniquely by use of an 
8-bit code. The drive value was stored until reset. The wave from a wave 
generator determined which value was placed on which address line. The wave 
form was generated by the computer and represented a standing wave. The 
most appropriate standing wave pattern was generated and sent to the linear 
actuator. The complexity of the circuitry and the computer requirements 
made this scheme unfeasible. 



ACTIVE POSITIONING LINEAR MOTOR 




Figure 7 Beam splitter beam rider configuration 

A passive BR configuration was designed to provide the X and Y values. 
The final configuration used a variation of this design. A portion of the 
incident beam was reflected by the quarter wave plate placed in front of t e 
fast steering retroflector. The reflected split beam was incident upon the 
lateral effects diode which provided the lateral displacement value. 



NONMOVING, FOUR-DEGREE-OF-FREEDOM DEFINING SCHEMA 



UJ 






CD ui 

UJ CD 
CO z 



UJ UJ 


oo 

CM 

o> 

CO 

I 

00 

00 

I 

Q 

O 


oo 

00 


• • 


CO 


FIGURE 7 


Figure 8 Mirror positioner 

An active mirror positioning device was required to keep the reflected 
laser bean centered on the DME interferometer. The output of a quadrant 
detector, driven by a portion of the return laser beam split from the main 
beam, was used to position the mirror. Electromechanical, electromagnetic, 
and piezoelectric mirror drivers were evaluated. 



ACTIVE BEAM RETROFLECTOR ASSEMBLY 



• ENTIRE MIRROR POSITIONING MECHANISM 
MAY TRANSLATE IN X AND Y DIRECTIONS 



Figure 9 BEI Fast steering mirror assembly 

The BEI Fast steering mirror assembly was adopted for the final 
configuration. The mirror was positioned by a set of four voice coils 
arranged as mutually orthogonal pairs. Pairs of coils operated in push-pull 
configuration moved the mirror and kept the beam centered. 


LINEAR ACTUATOR MODEL NO. LAO 8- 0 5,- 

-MOVINC CO I L- 
-SmCo Magnet- 



PERFORMANCE DATA 

• PEAK FORCE (F p ) 

• FORCE CONSTANT (K p ) 

• BACK EMF CONSTANT (Kg) 

• MOTOR CONSTANT (K^) 

• CURRENT @ PEAK FORCE (l p ) 

• POWER S PEAK FORCE 25°C (P p ) 

• RESISTANCE 25°C 

• ELECTRICAL TIME CONSTANT 

• THERMAL RESISTANCE OF COIL 

• STROKE 

• CLEARANCE EACH SIDE OF COIL 

• MAX. ALLOWABLE COIL TEMP. 

• WEICHT MOVING MEMBER 

• TOTAL WEIGHT 


OZ. PER COIL 

OZ. / AMP PER COIL 

VOLTS /FT /SEC. 

OZ./VWATT 

AMPS 

WATTS 

OHMS PER PAIR 
MICROSEC. 
°C/WATT 
IN. ± 

IN. 

°C 

OZ. 

OZ. 


| WINDING 1 

A 

B C | D | 

0.6 




1.0 




. 085 




.63 




0.6 




0.9 




4.6 




7.0 




— 




.01 




.007 




155 


! 


.06 




.73 





FIGURE 9 




Figure 10 Original DME plane mirror configuration 

A laser interferometer was used for distance measurement. During 
operation the incident reference beam and the return beam enter the 
interferometer. The interference fringes produced by changes in distance 

were counted and used to indicate changes in distance. 

For operation a high degree of parallelism was required between the 

incident and the return beams. Initially, a pair of wedges was used in 

conjunction with the return beam to position it parallel to the incident 

beam. The sensitivity of the critical alignment of the wedges prevented the 
system from being a feasible final configuration. 



DISTANCE MEASURING EQUIPMENT-LASER INTERFEROMETER 





CO Uj h* 



s oc CO 
3 0 < 

O CD —I 

• • • 



RESULT IS ACCURATE DETECTION OF ANY CHANGE IN LENGTH OF ARM DUE TO APPLIED 
LOAD OR OTHER EFFECTS 

FIGURE 10 ^ „o 


Figure 11 Laser reference system 


The heart of the laser reference system was a lateral displacement 
prism. The function of the lateral displacement prism was to laterally 
displace the return from the incident beam by the 1 cm. required for 
operation of the interferometer. The prism was polarization sensitive, 
requiring rotation of the polarization of the laser beam by 90 degrees for 
operation. Since the interferometer was also polarization sensitive, the 
beam was required to be rotated 45 degrees after exiting and before entering 
the interferometer. Thus, during operation, the light beam experienced 

four sequential rotations of 45 degrees and, finally, was returned to its 

initial plane of polarization. 

Secondary reflections split from the incident and return beams at the 
lateral displacement prisms were used as signal for the RME system. The 
ratio between the two intensity of the two beams was a function of the 

orientation of the quarter wave plate mounted to the distal segment end tip. 

Thus, the value of the ratio, was a function of the rotation of the distal 

end tip of the segment. 



LASER POSITIONING SYSTEM 



o uj 




I 

c/T 

CO 



o 

DC 


fNj 

>» 


X 

I 


o 


OO 

o 

a> 



ac 

3 


O 


u 


I 


a a a “* — •* > \ 



FIGURE 11 



Figure 12 Original RME scheme 

The rotational measurement equipment (RME) system made use of the 
Dolarized nature of the laser reference beam. The original concept 
incorporated an active analyzer which would keep the beam lnt ^ s *^ 
constant. The analyzer would then rotate equally and opposite to 
rotation of the distal portion of the segment. 



ROTATIONAL MEASURING EQUIPMENT— BEAM POLARIZATION 





CD Z 



O UJ 

Q_ 00 
OO 

CD <C 

2 QC 
CO UJ 

3 rsi 



• • 


CM 

CO 

cn 

co 

i 

co 

00 

Q 

O 


00 

00 


CO 


FIGURE 12 


Figure 13 Preliminary ARM model configuration 

The ARM model was based upon a counterbalanced configuration. The 
portion between the central pivot point and the distal end tip was assumed 
to be flexible. The opposite end of the assembly, between the central pivot 
point and the counterweight, was assumed to be rigid. Initially, a pair of 
seven meter segments were used to obtain a ten meter reach. Eventually, a 
pair of five meter segments were used. Segments were scaled such that the 
fundamental mode of vibration remained relatively constant. 


full scale segment 



300 k* 


100 k* 


Tin * 

O 

100 k* 


feHU»d ! » l 3Jk iB j no lo*d md 100 k* ram, wtiftt ; 1327.1 k, m 


ratackni ipd. 

full load 

no load 

to ackicwo tip 

■tort ton] 

Rarttoro 

*pd of 5 nV»cc 

anaemia lb* 

muacBBlal* 

MBXaooaialJ* 

642 ipm 

1 2-6 x 10 Nm 

1*60 Nm 



2790 Nm 


ARM n TEST BED WITH FIBERGLASS SEGMENT 


-o 

zaflik* 


raattonal 

full load 

Mlad 

toachivna tip 

Rantovq 

Ruttara 

qxitXSmhoc 

nwaccai* 10 * 

toaaoal al| 


towacealalJ* 

®«u«ai*13* 

25.7 rpm 

• k 

913x10 Nm 
137 Nm 

27.7 Nm 
414Na 


-0-9 in »k-- 




I 

O" 

6.57 k* 


-0t93m 


Z04k* 


about pomi o 

Wl lad : 1732 kf m »l«lodU)tk l «»* w ,i < . 3 j Skji 


ARM n TEST BED WITH 7m A1 SEGMENT ,.5cm. 5.34cm 



k 1.75m > 

L i 


r 1 


7a — » 

n J 

1 "33m — — 




i 

3 

O 

634 k* 

1 

Sk * 


21.7 k* 

WlK»d.- Slkga ; BMattfJk, nwrMitft; 22«.7k« 


notional ipd. 

full load 

do load 

toadivve tip 

Rurttan, 

Rvtton] 

■pd of 5m/«ec 

max accel * 10 g 

ohk accal «1* 


“*■» accal "13* 

max accal - 13* 




632 rpm 

744x10 Nm 

315 Nm 


1116 Nm 

473 Nm 


ORIGINAL PAGE IS 
OF POOR QUALITY 


FIGURE 13 




Figure 14 Mode contribution graph 1 

The first three fundamental modes of vibration and the magnitude of 

their contributions uere plotted for the typical c °““*“ ratl ‘ 
fundamental mode had the most significant impact upon performance. 



. 04 First 3 Modes : 



FIGURE 14 


Figure 15 Mode contribution graph 2 

The first three fundamental modes were plotted at different magnitudes 
to produce normalized output. 



mode 



FIGURE 15 



0 nt' N lT L E P pHOTOGRAPH 

BLACK and VmITE PH 



Figure 16 A 


Base and Shoulder Assembly Photograph 


The shoulder uas a tut, axis articulation. The direct drive 

mounting S plate ^resting outrigger bearing posts, 

mounting plate resting y elevation motor and gearbox 

The yoke mounted on tne top of the f ° - counterweigh ted yoke assembly 

contained ^ttlcnment £.?T 

ZLST3 :ie^“ c=o S u^3e}houlder articulation 
was tne post tnat supported the Beam Positioning Modul . 



ORIGINAL PAGE 

BLACK AND WHITE PHOTOGRAPH 



FORK BASE 

OUTRIGGERS 
BASE PLATE 

TRIPOD 


Figure 16 B. 


Base and Azimuthal Motor Assembly Photograph 


The base plate rested upon a tripod which bolted to the floor. The 

direct drive azimuthal motor mounted upon the base plate. Six outrigger 
bearing support pillars were mounted around the motor assembly to provided 
additional lateral stability to the fork mounting plate. This arrangement 
protected the azimuthal motor bearings during full torque application by the 
elevation motor. The fork attached to the motor plate and supported the 
elevation drive and the yoke. The Beam Positioning Module support post 

mounted to the floor and was concentric with the azimuthal motor and 
assembly . 



Figure 16 C 


Shoulder Elevation Articulation Photograph 


The yoke mounted to the top of the fork. Tne DC motor and torque 

amplification zero backlash gearbox bolt to the fork. The output shaft 

si r f 3 !. 3 ? i VOt r lnt f0r 0ne Side 0f the yoke assernbl y- The opposite 
abaft Tha ? pT O. 1 ™' P» lnt »>= supported by a bearing assembly 
, * The yok “ bad Provisions for mounting of the segment on one end 

and the counter weights on the other. Two segment mounts were provided. 
One, closest to the axis of rotation, accepted the smaller diameter segments 
ana provided maximum segment length proportional to reach. This position 
use or single segment experimental configurations. The second 
approximately 25 cm. more distal, accepted the larger diameter segments 

dis^rsegme'nt ° f ^ W6ight of the elbow -ticulatio°n and 



Figure 17 Software control system scheme 


At the start o£ operation the system -as Initialized and user Input 
provided. The computer p o 1 1 e d t hes en s o r s to determine ^ of the 

operating organized "the requisite tests to 

accommodate the user Input commands. Once l co™ a nds““U outputted 
^0^“^ motion -as treated and 

revised ss required • 



START 


Aquire User 
Input 


System 

Initial i zation 


Sensors 


Aquire Data 


START 

OPERATIONAL 

CYCLE 


Data Decoding 
and j 

Translation i 


State 

Table 


Control 

Processing 


History : 
Internal 
Storage 


Control 

Output 


Display : 
User 

Interface 


Actuators 


SCHEDULER AND TASK QUEUE 


History : Video 



Software control system schemata 


FIGURE 17 













Figure 18 Task, scheduling scheme 

It was determined that the use of the state machine was the preferred 
design on the macro level. This was a non-interrupt driven cyclic system 
driven from the state table. The program flow at the macro level was 
constant and, therefore, no critical events were allowed to be missed. Thi 
condition held true as long as the timing of the sys tern was of the 
appropriate resolution. The system timing resolution was set by a hardware 
timing generator. The scheduler was the package of modules which consisted 
of the collection of tasks that directed traffic within the system. 








Figure 19 Robust control 

The idea behind robust control design was to account for all system 
uncertainties within a single fixed controller. Therefore, all parameter 
variations and any possible combination of variables 

incorporated into the initial controller. Such universal applicability 
to an overly conservative design. 






Fl : Transfer Function: Desired Angular Position, ^ q , to actual Laser Angular 

Position, ^ L , 

C: Transfer Function of Controller: 

Input; Measured Laser End Tip, Arm Segment Position Mismatch, d. 
Output; Torque applied at the base of ARM Segment, T. 

Mfl : Model of Arm Segment: 

Input; Torque applied at the base of Arm Segment, T. 

Output; Position of lArm Segment End Tip, Y(L,t) 


Robust Controller Block Diagram 


FIGURE 19 







Figure 20 Adaptive control 

Adaptive control was nonlinear and time varying. The desired system 
response model was chose, • Pre-filtering of the input and feedback of the 
output were used to force the resultant input/output properties of the 
controller plus the real system to equal the input/output properties of the 
chosen model. Such a scheme performed well when parameters were constantly 
varying. Continual re— adaptation under a static condition significantly 
increased processing overhead. 



Fl : Transfer Function of Mirror Movement Dynamics 

f L : Approximation of Fj, 

C A • Prefiltering Component of Adaptive Controller 
C B : Feedback Component of Adative Controller 


Note: 


Parameters in C^ and Cb are functions of d 
Mismatch between Laser and Arm Segment End 


the Measured 
Tip Position. 


Ma '• Model of Arm Segment 


Position 


Direct Adaptive Control Block Diagram 


FIGURE 20 











Figure 21 Identification/control 


The use of identification techniques in conjunction with periodic 
control parameter updates streamlined the control process. The controller 
needed only to consider the variables and parameters of import i.i a certain 
situation. The system only required re-tuning, or adaptation, when the 
parameters varied. Thus, it became an indirect adaptive controller. 




* I^^nsfer Function* ■ j 

Position, fL . ' osited Angular Portion. } „ . to actMl ^ ^ 


C: 


Transfer Function of Controller: 


Input; Measured Laser *• 

output; Torque applied at tW^.?"-^* *—t eh . d. 


M* • Model of Arm Seqment: 


Input; Torque applied at th^ u 

Output; Position of lArm Arm Se 9 ment - T. 

1Arm Se 9inent End Tip, Y(L,t) 


Identification/Control Block Diagram 


FIGURE 21 








Figure 22 Indirect adaptive control 


in order to design a controller for a model 

model of the system. In the case of the “ differential equations, 

consisted of a finite number of linear t0 th ’ base of 

The driving term, or Input, to this mod ,,, position of the ARM. 

the ARM, and the response, or output, was th P which must be 

Vie employed an Identifier to determine the nu.ber mo icUnts) 

included in the model and the model parameters (^g.^damplng^ ^ those 

" q l"«ate Th the id »“!,« er of t0 the coefficients In the differential equations 
yhich composed the model* 

From the model the actual ^“identif Jr's ^^parameter Estimates; as 
variables became functions of the identifier arm's narameters, the 

the Identifier obtained better estimates of th , »«•« the Ws 

controller became more finely tuned to the . OS. c B ompUance due to 

characteristics, e.g., a change In ® rm 8 , The identifier then 

heating or cooling, xould be sensed by the This 

changed the corresponding variables In system. An identifier 

linked^to^an^ in-1 lne^ont roller '^Jas referred to as an indirect adaptive 
control scheme. 



INDIRECT ADAPTIVE CONTROL SCHEME 





Figure 23 ARM III System configuration 


The ARM used a 32 bit VME based Intel 80386 processor for overall 
control and coordination. This 32 bit wide bus format was the single data 

format used by the high end of the system found at the top of the diag . 
This format was selected because it was wide enough to encompassed all 
the possible variable date formats used by the system. Local encoders, 
detectors, processors, and actuators were mixtures of variable resolutio 
(number of data bits required) analog and digital technology. For the low 
end of the system, bottom of the figure, the resolution and technology were 
selected as required to perform the requisite function. 


Storage kr 


± 

Shoulder 



ARM III System Configuration 

FIGURE 23 

























Figure 24a and 24b MOTGER model configuration 

Both open loop and closed loop systems were considered for the ARM. 
Figure 24 a is a block diagram of an open loop system consisting of the DC 
motor, gear box, and the flexible segment. Figure 24 b is the block diagram 
of the closed loop system which consisted of the DC motor, gear box, 
flexible segment, controller, and the end tip position sensor. From the 
closed loop block diagram the actual model system was constructed. The 
matrix algebraic model was constructed from the families of differential 
equations describing the segment assembly's modal behavior. (See page 94 
for symbol explanations) 
























Figure 25 ARM behavior with DC input 


After substituting the actual system parameters in the model, the model 
was run under various simulated conditions. This figure demonstrates the 
behavior of the endtip given an initial step start to a constant drive 
torque to the system. The model predicts the cla ” ic 

response expected to be exhibited by such a system. The dotted line is .e 
drive voltage and the dashed line the end tip response. 



end— tip respon 



FIGURE 25 


Figure 26 ARM behavior step DC input with decay 

After substituting the actual system parameters in the model, the model 
was run under various simulated conditions. This figure demonstrates the 
behavior of the endtip given an initial step start and 
exponentially decreasing to zero. The system exhibits the expected init 
harmonic oscillation which damps out with time. The dot 
drive voltage and the dashed line the end tip response. 




FIGURE 26 



Figure 27 ARM behavior with ramp-up DC input 

After substituting the actual system parameters in the model, the model 
was run under various simulated conditions. This figure demonstrates the 
behavior of the endtip given an initial step start to the system and the 
subsequent decay of the drive torque to zero. The dotted line is the drive 
voltage and the dashed line the end tip response. 




o 


FIGURE 27 



Figure 28 ARM behavior with AC and ramp up DC input 

After substituting the actual system parameters in the model, the model 
was run under various simulated conditions. This figure demonstrates the 
behavior of the endtip given a ramp up of the drive voltage, and, thus 
torque, to the same value as in figures 25, 26, and 27. Addlt ^ nall J; i “ 1 Jy 
innnt at a frequency close to the harmonic frequency and of a polarity 
Opposite to the ^Induce vibrations »as applied. The displacement soale -as 
anorder of magnitude less than that of the previous figures. The ^ nduce 
vibrations have been significantly reduced. The end tip returned 
to its starting position. This was the same stimulus/response modeled 
figure 29. The dotted line was the drive voltage and the dashed line 

end tip response. 



green= voltage 


FIGURE 28 



Figure 29 SIM1AC display for ramp up DC input 


SIM1AC provided an on line ’ on 'the lef presented 

around the 

updated at each tin interval. The “ 3 * hlstory of the drive 

seconds. The box In the upper right lower right provided a 

SiSS S* - e V nd 1U tlp a dlepTa Zf 

daupe’d to aero after 

several seconds • 




FIGURE 29 


Figure 30 Six degrees of freedom 

A two-segment ARM configuration maximized the work space 
accurately position the wrist end-tip platform of such an ARM in space 
required the definition of six degrees of freedom. Although a 1 va ^* ty mQ ° t 

coordinate systems would have met this criterion, we c °° S ® point was 

suitable for integration with the laser reference beam. The first point 
deterged by the® values XI, Yl, and Z. A secend point < Jbe ' bea . n 
angular offset due to the bend of the segment, was defined by x2 and * 
Th! angular value of rotation, about the Z-axis, defined the sixth degree ° 
Ir«do«! Togethec these values were used to uniquely specify posttiuns 

of the beam elder module (BID) on the laser reference beam. “ ™ 

ourDOse of the BRM to determine the mismatch between the laser referenc 
Team and the segment end tip, the vector d. This value uas used to 
accurately determine the position of the ARM. 



BEAM RIDER MODULE DEFINES SIX DEGREES OF FREEDOM 



FIGURE 30 



NASA 

National A*fonau(*ca and 
Spaca Administration 


Report Documentation Page 


1. Report No. 

NASA CR-185151 


Government Accession No 


4 T Beara S Rider for an Articulated 
Robot Manipulator (ARM) 

Accurate Positioning of Long Flexible Manipulators 


7. Author(s) 

M. J. Malachowski , Ph.D. 


9. Performing Organization Name and Address 

CCE Robotics/Electronic Photography 
p. 0. Box 9315 
Berkeley, CA 94709 


' 12. Sponsoring Agency Name and Address 

National Aeronautics and Space Administration 
Lewis Research Center 
Cleveland, Ohio 44135-3191 


15. Supplementary Notes 


3. Recipient’s Catalog No. 


5. Report Date 

April 1990 


6. Performing Organization Code 


8. Performing Organization Report No. 

None 


10. Work Unit No. 


1 1 . Contract or Grant No. 

NAS 3-25917 


13. Type of Report and Period Covered 

Contractor Report 
Final 

14. Sponsoring Agency Code 


Laser beam positioning and beam rider modules were incorporated into the 

long*" hollow ' flexible segment of an articulated robot -nipulator ARM). 

WsiL a single laser beam, the system determined the position of the distal 
Using a single x b » i oMsfnn . ln slx degrees of freedom, at 


nc-ina r single laser Deani, me sybiem uc , — r 

ARM end tip! with .illi.itric precision, in six degrees of freedo 
distances of # up to 10 meters. Preliminary designs, using space rated 
technology for the critical systems, of a two segmented physical ARM. wit 
4 in anH r dual decree of freedom articulation, were deve p > 
a roto n t g vDed and tested. To control the positioning of the physical ARM, an 
IZirell ^ adapt ive co^roller, which used the the mismatch between the 
oosition of the laser beam under static and dynamic conditions, was devised. 
tT Predict the behavior of the system and test the concept, a computer 

simulation model was constructed. A hierarchical art *“^* Uy oft !are 

real-time ADA operating system program structure was created. The sof wa 
was designed for implementation on a dedicated VME bus based Intel 80386 
administered parallel processing multi-tasking computer system. 


17. Ke' 


TOfsmaipWtor., 


Flexible Bodies 

cvw v cxvw , — r - 

Adaptive Control, Real Time Operation 
Laser Ranger/Tracker, Position 
Control Simulation, Controllers 


18. Distribution Statement 

Unclassified - Unlimited 
Subject Category 63 


19. Security Classif. (of this report) 
Unclassified 


20. Security Classif. (of this page) 
Unclassified 


21. No of pages 22. Price* 

180 , A09 


NASA foam 162* oct b 6 * For sa | 6 by t he Nation Technical Information Service. Sp — igfietd. Virginia 22161 



