Java PathFinder 

A Translator from Java to Promela 


Klaus Havelund 

NASA Ames Research Center 
Recom Technologies 
Moffett Field, CA, USA 
havelundOptolemy . arc . nasa . gov 
http : //ase . arc . naaa . gov/havelund 

Java PathFinder [2], Jpf, is a prototype translator from Java to Promela, 
the modeling language of the Spin model checker [4]. Jpf is a product of a major 
effort by the Automated Software Engineering group at NASA Ames to make 
model checking technology part of the software process. Experience has shown 
that severe bugs can be found in final code using this technique [1], and that 
automated translation from a programming language to a modeling language 
like Promela can help reducing the effort required. 

Jpf allows a programmer to annotate his Java program with assertions and 
verify them using the Spin model checker. In addition, deadlocks can be identi- 
fied. An assertion is written as a call to an assert method defined in a predefined 
Java class, the Verify class. The argument to the method is a boolean Java 
expression over the state variables. The Verify class contains additional tem- 
poral logic methods which allow to state temporal logic properties about static 
variables. Hence Java itself is used as the specification language. An application 
of Jpf is described elsewhere in the proceedings [3]. 

A respectable subset of Java is covered by Jpf, including dynamic object cre- 
ation, object references as first class citizens, inheritance, exceptions, interrupts, 
and perhaps most importantly: thread operations. Among major concepts not 
translated are: packages, method overloading and overriding, method recursion, 
strings, and floating point numbers. Finally, the class library is not translated. 


References 

1. K. Havelund, M. Lowry, and J. Penix. Formal Analysis of a Space Craft Controller 
using SPIN. In G. Holzmann, E. Najm, and A. Serhrouchni, editors, Proceedings 
of the ith SPIN workshop , Parts, Prance , November 1998. To appear in IEEE 
Transactions of Software Engineering. 

2. K. Havelund and T. Pressburger. Model Checking Java Programs using Java 
PathFinder. Appearing in International Journal on Software Tools for Technol- 
ogy Transfer (STTT), 1999. 

3. K. Havelund and J. Skakkebaek. Applying Model Checking in Java Verification. In 
R. Gerth, G. Holzmann, and S. Leue, editors, Proceedings of the 6th SPIN workshop 
(these proceedings), Toulouse, France , September 1999. 

4. G. Holzmann. The Design and Validation of Computer Protocols. Prentice Hall, 
1991. 




Retroreflective Focusing Schlieren (RFS) Image of Jet in Wind Tunnel 

April 6, 1992, 

J.T. Heineck NASA Ames Research Center 
Steven Jaeger, Sterling Software 

Situation: A high pressure air jet from a table top is blown upwards into a cross flow. The 
retroreflective material and source grid were placed outside the test section behind a 
window. The light source, camera, beam splitter and cutoff grid are mounted on the other, 
side of the wind tunnel. Light source was a xenon flash with a duration of I msec 
Conditions: Jet Mach number was 1 .07, the wind tunnel velocity was 1 70 miles per hour, 
wind tunnel temperature: 78. 9 0 F. 


Image by J.T. Heineck, NASA Ames Research Center. 


3 


For publication in an upcoming book titled “Flow Visualization: Techniques and 
Examples” published by the Imperial College Press. 

Reference: Photograph: “Retroreflective Focussing Schlieren (RFS) Image of a Jet 
in Wind Tunnel” 



