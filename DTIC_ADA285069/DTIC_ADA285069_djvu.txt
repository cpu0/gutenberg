AD-A285 069 

lllliiiliilli 




Carnegie Mellon University 

Software Engineering institute 


Quarterly 

Update 




January-March 1994 






Published as SEI-94-CDRL-103-1 by the Software 
Engineering Institute. The SEl is a federally 
funded research and development center sponsored 
by the Department of Defense under contract to 
Carnegie Mellon University. 

Approved for public release. Distribution unlimited. 
















Carnegie Mellon University 
Software Engineering Institute 


1Q94 

Quarterly 

Update 


I January - March 1994 


D7TC Qt/Ali.'V , 











This report is published by the Software Engineering Institute and 
fulfills the deliverables for SEI-94'103-1. 

The SEI is a federally funded research and development center 
sponsored by the Department of Defense under contract to Carnegie 
Mellon University. 

Approved for public release. 

Distribution unlimibed 







■ SOFTWARE ENGINEERING institute ■ 


CONTENTS 


Summary of accomplishments i 


Software Process 1 


Product Attribute Engineering 7 


Software Engineering Techniques 13 


Software Risk Management 19 


SEI Educational Products 23 


SEI Services 25 


Program Development 29 


Aooeasion 7or 

Dl.C TM 
Uup.r-,'; 

Ju i' . . 


Ey..- - 

pi ^ 


A'rr 




I 




■ SOFTWARE ENGINEERING INSTITUTE ■ 


Summary of Accomplishments 


This section provides a summary of accomplishments from January - March 1994. 


The SEI will host the next Software 
Engineering Symposium in August. See 
page 30 for additional information. 

The course entitled Introduction to the 
CMM was delivered to the pubKc. See page 1 
for more details. 

Version 0.2 of the Software Risk Evaluation 
(SRE) was published and has been under 
review by the originating Department of 
Defense office and other service and agency 
representatives since its publication. Page 21 
offers more details about the SRE. 

Academic Education project members are 
teaching four courses via satellite. See page 
23 for details. 

The Computer Emergency Response Team 
released six new advisories this quarter. See 
page 25 for a complete listing of the 
advisories. 


The course entitled Managing Technological 
Change was presented to the public. Turn 
to page 27 for more details. 

A Technical Assistance staff member 
participated in review and selection activities 
for the 16th International Conference on 
Software Engineering Tutorials Program. 
Page 27 offers more details. 

The next Visitor's Day will take place on 10 
November. See page 30 for further 
information. 

As of 31 March, the SEI has signed technical 
collaboration agreements with the SEI. 
Table 1 on page 31 lists these organizations. 

This quarter, the SEI produced 11 technical 
reports many of which are available via 
electronic distribution. For information on 
how to access these reports, turn to page 33. 


SUMMARY OF ACCOMF>LISHMENTS i ■ 






■ SOFTWARE ENGINEERING INSTITUTE ■ 


Software Process 


The Software Process Program focuses on improving the process of software development. 
Projects within the program are assessing the actual practice of software engineering in the 
defense community, training organizations to gain management control over their software 
development processes, supporting the use of quantitative methods and measures as a basis for 
process improvement, and developing improved methods for software process management. 


I Capability Maturiy Model 

The Capability Maturity Model (CMM) 
Project maintains stewardship over a model 
that software organizations can use to guide 
improvement to their techiucal management 
processes and their software process 
maturity. This model is continually updated 
to reflect evolutions in the state of the art of 
software engineering, total quality 
management, and other relevant areas of 
organizational improvement. It will elaborate 
on software development goals and practices 
that provide clear strategies for software 
organizations to grow and improve their 
capability. 

This quarter, the course entitled 
"Introduction to the CMM" was made 
publicly available and was delivered six 
times. The course is aimed at providing 
software process assessment and software 
capability evaluation teams with a working 
knowledge of CMM process area profiles and 
an vmderstanding of the process 
management problems that they encounter 
during a site visit. The course is also valuable 
to software engineering process group 


members who are leading software process 
improvements efforts. 

The CMM Project and other projects within 
the SEI are active in the International 
Standards Organization’s (ISO) Software 
Process Improvement and Capability 
dEtermination (SPICE) Project. The SEI has 
been selected as one of four technical centers 
for this effort and is responsible for 
coordinating U.S. activities. One member of 
the CMM Project serves as Technical Center 
Manager for the U. S. and is responsible for 
coordinating U.S. participation, helping set 
technical direction, and establishing 
schedules for the SPICE project. Currently, 
more than 50 individuals from more than 30 
companies are involved in writing and/or 
reviewing the various SPICE standards and 


index 

CAPABILITY MATURIY MODEL 1 

EMPIRICAL METHODS 2 

SOFTWARE PROCESS MEASUREMENT 3 

SYSTEMS ENGINEERING CAPABILITY MATURITY MODEL 3 

PROCESS RESEARCH 4 

CAPABILITY MATURITY MODEL BASED APPRAISAL 5 

SOFTWARE PROCESS REPORTS 6 


SOFTWARE PROCESS 1 







guide books. Another member of the project 
is convener of Task Group 10 for the U.S. 
Technical Advisory Group to ISO SC7, the 
subcommittee that has authorized SPICE to 
develop the draft standard. Through these 
two modes of involvement, the CMM Project 
is playing an active role in helping to ensure 
appropriate U.S. representation in the SPICE 
standardization effort and increasing U.S. 
participation in and awareness of the SPICE 
effort. 


H Empirical Methods 

The Empirical Methods (EM) Project 
develops, evaluates, and validates products 
(e.g., questionnaires, methods, and models) 
for use in baselining and measuring software 
process improvement. EM staff members 
manage the software process database and 
generate periodic reports on the status of 
software process maturity and results of 
software process improvement. 

EHiring the first quarter, major efforts were 
directed at completing the capability 
maturity model (CMM) vl.l-based maturity 
questioimaire, completing development of 
and commercializing the instant profile 
appraisal method, growing and enhancing 
the SEI software process database, and 
conducting an empirical study on the actual 
results of investments in software process 
improvement. 

The CMM vl.l-based maturity questionnaire 
underwent its final technical reviews this 
quarter. Drafts of the material that will 
accompany the questionnaire as a stand alone 
product were also produced. The 


questionnaire is expected to be available in 
the spring of 1994. 

Instant profile is a supplemental appraisal 
method used to rapidly check software 
process improvement between software 
process assessments. Data collection for this 
method relies heavily on a variant of the 
CMM vl.l-based maturity questionnaire. 
Work on the commercialization of the 
method is ongoing. 

The SEI software process database continued 
to gather data on the process maturity of 
software organizations. The database now 
houses reports from over 286 software 
process assessments, 11 instant profiles, and 
several alternative appraisal methods. An 
update to the community maturity briefing, 
which was presented at the 1993 SEI 
Symposium, was drafted. 

EM project members and members of the 
Software Process Measurement Project are 
working on a study of the results of software 
process improvement. A presentation based 
on this work was developed and will be made 
at the Software Engineering Process Group 
National Meeting in April. This work mcirks 
the begiiming of a larger effort to validate the 
CMM and document the benefits of investing 
in software process improvement. 

Other efforts within the SEI that are 
supported by EM project members include a 
market survey and analysis of software 
process assessment stake holders, 
questionnaire design work for the Joint 
Program Office and Risk Program, 
development of the CMM-Based Appraisal 
internal process improvement method, and 
technical work on the leadership through 


■ 2 SOFTWARE PROCESS 



quality customer value determination 
method. 


I Software Process Measurement 

The objective of the Software Process 
Measurement (SPM) Project is to promote 
and improve the use of measurement in 
managing, acquiring, and supporting 
software systems. The project is formulating 
reliable measures of the software 
development process and products to guide 
and evaluate development. To expedite 
Department of Defense and industry 
transition, the project is actively working 
with professionals from industry, 
government, cmd academia in encouraging 
organizations to use quantitative methods to 
improve their software processes. 

This quarter, a meeting was held with the SEI 
Measurement Steering Committee (MSC). 
The focus of this meeting was to review and 
discuss the new SEI course, "Engineering an 
Effective Software Measurement Program." 
In general, the course materials were well 
received and MSC members felt that this 
course would be a valuable contribution to 
the software community. 

During this quarter, project members 
completed an internal product review, a 
course pricing review, a project dry-run, a 
final dress rehearsal, and the first offering of 
the course, "Engineering an Effective 
Software Measurement Program." Several 
prefect members served as the instructors for 
the first on-site offering of the SEI 
measurement course and a video 
presentation was developed for use in the 


course by a former resident affiliate from 
Siemens Corporate Research 

Members of the project also delivered a 
presentation at the MITRE Software 
Engineering Economics Corderence in 
Virginia and conducted a full-day tutorial on 
"Engineering a Software Measurement 
Process for Your Organization" at the 
Association for Computing Machinery 
Computer Science Conference in March. 

This quarter, the project leader presented a 
briefing at the Pentagon to the Deputy 
Assistant Secretary, Communications, 
Computers, and Support Systems, 
Department of the Air Force, regarding the 
current thrusts of SEI software measurement 
activities, activities the SEI could imdertake 
to better support national initiatives, and 
ways in which the SEI could better assist the 
software community in adopting 
measurement practices, principles, and 
processes. 

SPM staff and members of the Empirical 
Methods Project completed case study write¬ 
ups in support of the task for obtaining 
results of software process improvement 
efforts from industry and government 
organizations. These case studies will be used 
in the development of a technical report 
summarizing the study of organizational 
process improvement efforts. 


H Systems Engineering Capability 
Maturity Model 

The Systems Engineering Capability 
Maturity Model (SECMM) Project was 
instituted in August 1993 in response to 
industry requests for assistance in 


SOFTWARE PROCESS 3 ■ 





coordinating and publishing a model 
analogous to the Capability Maturity Model 
(CMM) for Software for the systems 
engineering community. 

The SECMM Project will continue through 
December 1994 and has the following goals: 

1. To provide a prototype SECMM and an 
associated assessment method that 
support improvement of system 
engineering processes and provide an 
industry-wide frame of reference for the 
assessment of system engineering 
capabilities. 

2. To avoid conflict between the CMM for 
Software, other related standards, and the 
SECMM. 

These goals will be refined and elaborated by 
the SECMM steering group. 

This quarter SECMM project members 
established an architecture for the SECMM 
by developing the semantic and syntactic 
guidelines for writing the model, obtaining 
consensus within the collaboration related to 
planning issues such as review processes for 
remote work group reviews, and establishing 
and testing the communications 
infrastructure for the remote work groups. 

The project master plan, which delineates the 
processes used and the roles and 
responsibilities for the project, was released 
in March. In addition to its role in helping to 
guide the process of developing the model, 
the plan could be used by other similar 
collaborations as a guide for key processes 
related to remotely-distributed project work 
groups. 


Accomplishments of the first quarter of 1994 
include the documentation of the SECMM 
requirements, establishment of the SECMM 
development architecture, selection of a set of 
candidate key process areas (KPAs), and 
writing of the first draft KPA descriptions and 
base practices. Two author meetings and one 
steering group meeting were held in the first 
quarter of 1994, and several community 
events were attended where project 
information was shared with interested 
parties. Also this quarter, a National Council 
on Systems Engineering Capability 
Assessment Working Group meeting was 
held. This meeting was supported by 
SECMM project members. 


I Process Research 

The Process Research Project investigates the 
factors that limit software development 
performance by conducting research on the 
use of software process principles by 
individuals and small teams. This research 
seeks insight into the processes, tools, and 
methods that will be most helpful in 
improving the performance of software 
engineering professionals and their 
organizations. 

While early results indicate that the methods 
developed by this project offer significant 
benefits, they also demonstrate that 
substantial changes will be required in both 
individual and management attitudes and 
practices. It is thus expected that adoption of 
the method will be slow and that long-term 
improvement programs will be required. 


■ 4 SOFTWARE PROCESS 




The project has completed its early research 
phase and is now exploring more general 
application of the personal software process 
(PSP) methods. To facilitate development of 
an effective transition pltm, the project has 
established a two-track approach, one for 
academia and one for industry. The academic 
track concerns PSP introduction into 
university software engineering curricula. 
The industrial track is working with 
industrial software organizations to obtain 
early experience with the issues, problems, 
and benefits in using PSP principles in their 
work. Industrial work continued with 
Siemens Corporate Research in Princeton, NJ, 
and with Advanced Irdormation Services 
Corporation in Peoria, IL. 

This quarter, work progressed with Digital 
Equipment Corporation (DEC) on 
introducing the PSP methods. DEC selected 
several small prx^ect teams that have started 
the introductory PSP materials and exercises. 
DEC management allocated the engineers 
10% of their working time to work on the PSP 
materials. In a meeting in February, the 
engineers were positive about the PSP 
materials and described several ways in 
which this work could be incorporated into 
their projects. 

The project leader also met with an executive 
of Hewlett Packard (HP) Corporation who 
agreed to have some of the projects in his 
division introduce the PSP methods. The 
approach to be used with HP will be to 
conduct monthly meetings with the 
engineers to present the PSP materials, 
review the engineers' progress, and guide 
their further work. HP will assign a process 
specialist to support this work. 


V^^lth the addition of DEC and HP, the PSP 
development work on industrial transition is 
adequately established smd no further 
partners are being sought. 

The academic transition work includes 
courses currently being offered at McGill 
University, Embry-Riddle Aeronautical 
University, Bradley University, and Carnegie 
Mellon. Each of these universities is 
providing the project with student data, 
which will permit continuing studies on the 
value of the PSP methods and will facilitate 
the further development of transition 
materials. 


I Capability Maturity Model Based 
Appraisal 

The CBA project consists of the Software 
Capability Evaluation (SCE) and Software 
Process Assessment (SPA) projects. The 
project will maintain the current 
commitments of SCE and SPA, complete the 
Common Rating Framework (CRF), develop 
a common approach between the two which 
uses the CRF, and develop future CMM- 
based diagnostics using the CRF. 

The mission of the CBA project is to develop, 
transition, and support a CMM-based 
appraisal architecture and selected appraisal 
methods that are effective vehicles for 
meeting the needs of the software 
community. This merger was brought about 
to better meet community needs and make 
more effective and efficient use of existing SEl 
resources. 


SOFTWARE PROCESS 5 ■ 







This quarter, project members delivered SCE 
team training to 25 students from both 
government and industry. Preliminary 
review of critiques indicates a high level of 
satisfaction. 

The first drafts were completed of two 
documents that are essential to :he Interned 
Process Improvement (IPI) training classes— 
the CBA-.IPI Team Member's Guide and the 
CRF docviment. The documents are being 
used in pilot IPI classes; several more 
iterations will be needed to accommodate 
SCE applications and incorporate feedback 
from the pilot IPI class. 

A project member presented the CBA 
overview seminar at the U.S. Patent and 
Trademark Office (PTO) in February. The 
PTO will orchestrate a Washington 
presentation of SCE team training to serve a 
variety of Federed agencies. 

This quarter, a project member presented 
material on the application of the SCE 
method to select vendors in the commercial 
marketplace to the Ford Automotive 
Components Group. Ford will send two 
teams to April team training, and the SEI will 
enter into an agreement to support Ford as 
they apply the method. If successful, 
additional SEI products would be brought 
into Ford and the whole suite would be 
deployed across other Ford groups. 

This quarter, ten organizations were selected 
to perform CBAdPI field exercises. The SEI 
will participate on site with five of these 
organizations. 


This quarter, a project member presented a 
tutorial on "SCE Preparation; The Evaluators 
Perspective" at the 10th National Joint 
Conference and Tutorial on Software Quality 
and Productivity. 


Software Process Reports 

January-March 1994 

A Survey of Commonly Applied Methods for 
Software Process Improvement 
CMU/SE1-93-TR-27 

Process Guide for the Domain-Specific Software 
Architectures (DSSA) Process Life Cycle 

CMU/SEI-93-SR-21 

Instant Profile: Development and Trial of a 
Method to Measure Software Engineering 
Maturity Status by Whitney, et al. 
CMU/SE1-94-TR-4 


Software Capability Evaluation (SCE), Version 
2.0, Implementation Guide 
CMU/SEI-94-TR-5 


■ 6 SOFTWARE PROCESS 







■ SOFTWARE ENGINEERING tNSTITUTE ■ 


Product Attribute 
Engineering 


The objective of this focus area is to increase predictability and reduce technical risk in the 
development of software-intensive systems. The approach is to develop and demonstrate 
methods and tools for analyzing, predicting, and ensuring quality attributes of software¬ 
intensive systems. 

In the past, the Real-Tune Distributed Systems Program concentrated on "point solutions" 
addressing selected quality attributes, such as efficiency (rate monotonic analysis, Hartstone 
benchmark) and maintainability (Serpent user interface management system, structural models). 
The SEI is now addressing applications in which additional quality attributes such as reliability 
and portability are important. Future activities will also address metrics and tradeoffs between 
multiple quality attributes. 


I Open Systems Architectures 

The Open Systems Engineering Project 

includes three major efforts: 

• Standards activities that aim at securing a 
set of open standards for mission-critical 
systems with real-time and dependability 
requirements. 

• A software architecture based on open 
system components that is designed to 
enable mission-critical systems to be 
safely upgraded without having to shut 
them down and in spite of design and 
implementation errors in new software. 

• Education for program managers about 
the promises and pitfalls of using open 
system standards, and workshops for 
practitioners on state-of-the-art real-time 
and fault tolerant technology. 


Major activities in the standards arena are the 
development of a real-time distributed 
systems communication interface and the 
development of a new high-performance 
network standard for the U.S. Navy based on 
the asyi'.chronous transfer mode (ATM) 
standard. 

This quarter, project members supported the 
Institute of Electrical and Electronic 
Engineers (IEEE) Portable Operating System 
Interface (POSIX) IEEE P1003 project. Project 
members work with the Real-Time 


INDEX 

OPEN SYSTEMS ARCHITECTURES 7 
ENGINEERING MATURITY MODEL 9 
ADA 9X REVIEW 9 
SOFTWARE ARCHITECTURE ATTRIBUTE ENGINEERING 10 
TRANSITION MODELS 10 
PRODUCT attribute ENGINEERING REPORTS 11 


PRODUCT ATTRIBUTE ENGINEERING 7 ■ 







Distributed Systems Communications 
Working Group (P1(X)3.21), which is 
developing standards for the real-time 
domain. Project members are chair and 
technical editor for this group. As part of this 
effort, a requirements document has been 
developed and the IEEE has requested 
permission to publish as part of its Emerging 
Practices Series. 

As part of the paradigm shift to open 
systems, there is concern that application 
developers may not have visibility into the 
performance of implementations of 
standards. There is therefore concern that the 
integration of applications with 
implementations of open standards may 
have performance problems that cannot be 
identified until system integration. To 
minimize risk in the application of open 
system components, particularly in time- 
critical domains, project members have 
develop)ed a set of schedulability metrics. These 
metrics would provide applicatioi\s with 
behavioral knowledge of an implementation, 
without a vendor having to expose detailed 
design. The P1003.21 working group is 
investigating ways of standardizing 
schedulability metrics, and is working with a 
major vendor to perform a pilot application 
of their use. 

Project members continue to work in the area 
of formal description techniques in 
association with the POSIX effort. They are 
working with the newly-formed American 
National Standards Institute X3J21 
committee to support the development of the 
U.S. position on the Z language. 

In January, project members attended the 
High Performance Network Working Group 
meeting in San Diego and participated in the 


requirements and available technologies 
subgroups. The ATM study, which is 
sponsored by Next Generation Computing 
Resources, has been making progress on 
many fronts. First, objectives and strategies to 
support real-time traffic on ATM have been 
made explicit. Second, the first level of 
hardware changes that would be required on 
ATM switches to support real-time traffic 
have been drafted. Project members have also 
begun investigating the impact of these 
changes on buffer sizes in ATM switches and 
end-to-end latencies seen by application 
traffic. Finally, a paper that investigates the 
cascading effect of jitter and its schedulability 
impact in ATM networks has been 
completed. 

The current version of the uniprocessor 
demonstration has generated interest in 
many forums. The project has now received 
invitations from a majority of national 
conferences dealing with real-time and 
dependability issues. The existing prototype 
has been demonstrated to many visitors to 
the SEI, including the president of Texas 
Instruments Etefense Electronics Group; the 
chief of the Navy's information systems; and 
the program manager from the National 
Institute of Standards and Technology (NIST) 
Advanced Technology Program (ATP). NIST 
has expressed strong interest in transitioning 
this technology to the industry sector. 

The design of the project's application 
software architecture for the distributed 
version of the demonstration of fault-tolerant 
real-time systems is nearly complete. Both 
high- and low-level requirements were 
identified and documented. The interfaces to 
many modules—including the key modules 
of interprocess commuiucations, replacement 
unit, and many support modules—have been 


■ t PnOOUCT ATTRIBUTE ENGINEERING 





completed. In addition, prototyping of key 
modules has begxm, and many support 
modules have been implemented. The design 
of the hardware voting box has been 
completed and a circuit design is currently in 
progress. Design of the replacement unit 
modules and high-level manager modules of 
the simplex architecture is continuing. 

The two major activities of education are the 
development of a course for progr<un 
managers on the use of open standards 
(discussed on page 7) and the technology 
exchange workshops for reseeuchers and 
practitioners. 

The project was invited to give a presentation 
and demonstration at International 
Conference on Reliability and Quality in 
Design and the International Workshop on 
Configurable Distributed Systems. 


H Engineering Maturity Model 

This effort focuses on the development of an 
engineering maturity model (EMM) to 
complement the capability maturity model 
(CMM). While the CMM aims to stimulate 
the evolution of organizations to a 
continuously improving, controlled state, the 
EMM seeks to stimulate the evolution of 
product engineering practices used to predict 
and control properties of software artifacts. 
The CMM is typically used to evaluate the 
maturity of organizations; the EMM will be 
used to determine how practices can best be 
improved to gain better predictability and 
control over properties of software systems. 

During the next quarter, EMM project 
members will be investigating the utility of 


the EMM concept for a specific property of 
software, namely software performance. The 
goal is to develop a framework that can 
provide guidance for using, assessing, and 
improving the knowledge base that underlies 
performance engineering practice. An initial 
step in developing this framework is to 
survey the practitioner community to 
determine current best practice and uncover 
coimnon problem areas in performance 
engineering. Project members are working 
with the Risk Program to develop a 
questionnaire in the spirit of the risk 
taxonomy-based questionnaire. A first draft 
of the questioimaire has been developed and 
will be piloted within the SEI. 


I ADA 9X Review 

The SEI is supporting the revision of the Ada 
programming language in a variety of ways. 
One member of the techiucal staft is a 
participant in the Ada 9X Distinguished 
Reviewers Group, which is responsible for 
reviewing the ongoing revision work. This 
group meets periodically to review the 
progress of the revision. Another staff 
member chairs the Ada Compiler Validation 
Capability Review Team, which is 
responsible for reviewing the direction and 
content of the test suite that will be used to 
validate Ada 9X compilers. The SEI also 
supports outside experts who participate in 
the Ada 9X effort as distinguished reviewers 
and as Ada Compiler Validation Capability 
Review Team members. Finally, the SEI 
provides electronic mailing facilities to the 
Ada 9X project and to the Ada Joint Program 
Office, facilitating communication <unong the 


PRODUCT ATTRIBUTE ENGINEERING 9 ■ 




various groups interested in the Ada 
standard eind its revision. 

This quarter, meetings of both review groups 
were held, and docmnents pertaining to the 
efforts were reviewed. Comments on the 
draft standard were reviewed at an 
international meeting. 

Approval of the standard is expected in 
December 1994. 


I Software Architecture Attribute 
Engineering 

Traditionally, designers achieve non¬ 
functional qualities of the systems they 
design through ad hoc techniques. There is no 
systematic method for analyzing a design at 
an early stage to determine the quality of the 
resulting system. The goal of the Software 
Architecture Attribute Engineering Project is 
to develop quantitative methods for 
analyzing and predicting important qualities 
from software architectural description. The 
project is initially focussing on the qualities of 
modifiability and efficiency. 

This quarter, the project began work on 
establishing a training simulator testbed to be 
used both to explore simulator design issues 
and to test and validate models for predicting 
efficiency and modifiability. 

Exploratory work on the foundations of 
softweire architecture also continued this 
quarter. Project members prepared a tutorial 
on the architectural basis for evaluating user 
interface tools, to be given at the Computer 
Human Interaction Conference in April. 
Project members also prepared several 
papers, which will be presented at the 


International Conference on Software 
Engineering in May. 


H Transition Models 

The Transition Models (TM) Project 
integrates technology transition research and 
best practice into frameworks and develops 
planning tools and assessment instruments 
for: 

• Change agents who help organizations 
adopt new software engineering 
technology. 

• Researchers and new product developers. 

Transition Models products are based on 
research and experience (including tacit 
know-how) in technology transition, 
integrated and synthesized for use by the 

software engineering commimity. TM 

strategies include information dissemination 
and outreach (workshops, colloquia, 
courses), partnerships (co- development and 
co-evolution of materials), and the 
development of pull capability (working 
with technology receptors, especially 
software engineering process groups 

(SEPGs)). The ultimate goal is concurrent 
software technology transition: near- 

simultaneous technology creation, adoption, 
and application. 

A TM project member attended a meeting of 
the Coimcil of Consortia Technology Transfer 
Committee held jointly by Semiconductor 
Research Corporation and Microelectronics 
Corporation of North Carolina in February. 

Project members presented a paper "From 
Theory to Practice: Technology Transition at 


■ 10 PRODUCT ATTRIBUTE ENQINEERINQ 




the SEI," at the International Conference on 
System Sciences in January. 

Final analysis and documentation of findings 
for "Technology Transition PuU: A Case 
Study of Rate Monotonic Analysis (RMA) 
(part 2)" continues. This study reports on 
efforts to introduce RMA into several projects 
within a large software company. It describes 
lessons learned and success factors in the 
early use of the technology, including 
evidence in support of the "whole product" 
concept for technology trarrsition. An early 
version of a report on the case study of RMA 
entitled "The Role of Iirfrastructure in the 
Adoption of an Immature Technology" was 
accepted for presentation at the 13th World 
Computer Congress, Intenutional 
Federation for Iidormation Processing (IFIP) 
Congress '94. 

Two position statements ("Beyond Mature 
Technology: The Whole Product" and "Using 
A Focus Group to Determine Requirements 
for Change Agent Tools") were prepctred, 
submitted and accepted for the 4th IEEE 
Computer Society Workshop on Softw 2 ire 
Engineering Technology Transfer, to be held 
in conjimction with the SEPG national 
meeting. The TM project leader is also on the 
program committee for the workshop. 

TWo technical reports completed in 
I>ecember 1993: Technology Transition Push: A 
Case Study on Rate Monotonic Analysis (Part 1) 
and A Conceptual Framework for Software 
Technology Transition were made available for 
distribution. 

Diffusion, Tranffer and Implementation of 
Information Technology, Proceedings of the IFIP 
TC8 Working Conference, Pittsburgh, PA, USA, 
11-13 October 1993," edited by a project 


member, was published by Elsevier North 
Holland in March and includes 
approximately 30 contributions. 

An international working group on 
Diffusion, Transfer, and Implementation of 
Information Technology, proposed by project 
members and participants in the IFIP 
Working Conference of the same name, was 
approved by IFIP and will operate under the 
auspices of IFlP Techrucal Committee 8 (TC8) 
on lifformation Systems. 

The project leader was invited to prepare and 
present a paper, "The Challenge of Software 
and Information Technology Trar\sfer," at the 
IFIP TC8 Open Conference: Business Process 
Re-engineering: Information Systems 
Opportunities and Challenges, in May 1994. 

This quarter, project members travelled to 
Xerox to gather feedback on the use of the 
Transition Models process in the introduction 
of code inspections. 

A project member delivered a briefing on "A 
Conceptual Framework for Software 
Technology Transition" to the Industrial 
College of Armed Forces during their visit to 
the SEI. 


Product Attribute Engineering Reports 

Janua>y-Maich1994 

An Ada Binding to the SAFENET Lightweight 
Application Services 

CMU/SEI-93-TR-19 

This document is available via ancmymous FTP. See page 33 for additional 
information. 


PRODUCT ATTRIBUTE ENGINEERING 11 ■ 





Technology Transition Push: A Case Study of 
Rate Monotonic Analysis (Part 1) 
CMU/SEI-93-TR-29 


A Conceptual Framework for Software 

Technology 

CMU/SEI-93-TR-31 

This doounent is svaili^ via anonymous FTP. See page 33 for additional 
infonnatioa 


■ 12 PfIODUCT ATTRieuTE ENQINEERINQ 





■ SOFTWARE ENGINEERING INSTITUTE ■ 

Software Engineering 
Techniques 


The goal of the Software Engineering Techniques Program is to improve effectiveness and 
efficiency in engineering and reengineering of large software-intensive systems through 
increased use of engineering knowledge. We envision this to be accomplished through 
systematic application of product models supported by methods and automated by tools. Tire 
approach is referred to cis model-based software engineering. 

The program accomplishes this goal through four projects and through leverage of work in the 
Product Attribute Engineering Program. The Application of Software Models Project addresses 
the systematic creation of domain models and domain-specific architectures (dom<iin 
engineering) and their use in building applications (application engineering) with an emphasis 
on reuse and product line engineering. The Software Engineering Information Modeling Project 
addresses issues of capturing, representing, and making accessible through computer-based 
support increasing amounts of engineering mformation ranging from requirements elicitation 
and system understanding to engineering knowledge typically found in handbooks. The 
Computen-Aided Software Engineering Envirorunents Project focuses on automation of the 
software engineering processes and addresses issues of integration, interoperability, and 
adoption of environments. The Reengineering Center Project focuses on providing the 
practitioner community with a systematic approach to evolving legacy systems. It draws from 
the insights and results of other SEI projects, both within the program and within other 
programs, including Product Attribute Engineering and Risk, as well as from the external 
community. 


H Application of Software Models 

For systematic software reuse or 
reengineering, orgeinizations must invest in 
software assets such as domain-specific 
software architectures (DSSA) and models. 
As these assets evolve, the process for 
developing, maintaining, or reengineering 
software applications will allow mapping 
needs to existing software solutions rather 
them require a synthesis activity of building 
from scratch. This process will center on 
developing applications within a product 


family from a generic design founded on 
software and hardware architectures. 


This approach to software development is a 
component of the Model-Based Software 
Engineering (MBSE) approach being 


INDEX 

APPLICATION OF SOFTWARE MODELS 13 
SOFTWARE ENGINEERING INFORMATION MOOEUNG 14 
CASE ENVIRONMENTS IS 
REENGINEERING CENTER 16 
SOFTWARE ENGINEERING TECHNIQUES REPORTS 17 


SOFTWARE ENGINEERING TECHNIQUES 13 ■ 





promoted by the SEI Engineering Techiuques 
Program. The MBSE approach establishes a 
framework for relating several types of 
models: 

• Abstract models give us basic modeling 
concepts. They address questions such as: 
What is a domain model, what is an 
architecture, and what are the structures 
for reusable components? 

• Concrete models apply the abstract 
models by adding domain information. 
They include the domain model of a 
particular class of applications, a generic 
design, a collection of components, and 
an application generator. For a specific 
domain, the concrete models constitute a 
domain-specific software architecture, as 
has been defined by the DSSA Program. 

• Instances are the applications built upon 
the concrete models. 

The creation of abstract models is chiefly a 
research and development activity. The SEI 
has produced abstract models such as those 
that form the Feature-Oriented Domain 
Analysis method, the Object Cormection 
Update model, and the Object Connection 
Architecture model. The project also uses 
abstract models created by other 
organizations. MBSE includes a process for 
creating concrete models (domain 
engineering) and a process for using concrete 
models in the construction of applications 
(application engineering). 

Project members are currently developing a 
set of support services, training, and 
documentation for organizations wishing to 
develop a software architectures and models 
competence. Project members are currently 
refirung: 


• An overview briefing describing the 
evolution to MBSE. 

• An overview briefing on models and 
architectures to support design. 

• A multi-day tutorial/workshop on 
domain analysis. 

To support the development of these 
products, the SEI has established a Technical 
Collaboration Agreement with Bell Northern 
Research (BNR) Inc. Under the terms of this 
agreement, the SEI and BNR will jointly 
develop and pilot the training and its use 
within BNR. Project members have already 
held discussions with BNR sites at Research 
Triangle Park, North Carolina, and Montreal, 
Caruda, on possible transition. 


I Software Engineering Information 
Modeling 

The Software Engineering Information 
Modeling Project is investigating the 
creation, maintenance, and use of models that 
are critical to software engineering. The 
project is conducting research into the 
techniques and tools that will improve a 
software engineer’s ability to capture, 
represent, and access reusable software 
engineering information, knowledge, and 
models. Work continues to develop pilot 
technology that facilitates access to software 
engineering information. 

Project members continue to work with the 
Carnegie Mellon University (CMU) Robotics 
Institute researchers applying CMU work in 
speech recognition, natural language 
understanding, and image imderstanding 


■ 14 SOFTWARE ENQINEERINO TECHNIQUES 









technologies to aid in searching, browsing, 
and retrieving software engineering 

information from lai^e multimedia 

databases. 

Project members also completed a joint effort 
with Texas Instruments to develop 

multimedia engineering experience modules. 
The creation of these modules was based on 
ongoing project work to develop software 
engineering, multimedia, knowledge- 

representation techniques. 

This quarter, the project leader became vice¬ 
chair for the Institute of Electrical and 
Electronic Engineers-Computer Society 
(lEEE-CS) Technical Committee on 
Multimedia Computing and Systems and 
was appointed multimedia editor for the 
lEEE-CS Press. The project leader was also 
appointed to the editorial boards of the lEEE- 
CS Press; the lEEE-CS magazine. Multimedia; 
and Kluwer Academic Publishers journal of 
Multimedia Tools and Applications; and was 
appointed guest editor of the Association for 
Computing Machinery publication, ACM 
Transactions on Information Systems, 1995 
Special Issue on Multimedia Information 
Systems. Also this quarter, a Software 
Engineering Information Modeling project 
member was appointed secretary/treasurer 
of the lEEE-CS Technical Committee on 
Multimedia Computing and Systems. 


H CASE Environments 

The Computer-Aided Software Engineering 
(CASE) Environments Project is addressing 
the needs of many software engineering 
projects by helping them to make more 


effective use of CASE tools and 
environments. The main concerns of the 
project are to: 

1. Engineer CASE envirorunents from their 
constituent parts. 

2. Evaluate different CASE environment 
products, strategies, and technology 
trends to provide predictable, measurable 
improvement in software development 
organization. 

3. Adopt CASE environments into an 
organization in a cost-effective marmer. 

To address the first concern, project members 
continued work on carrying out leveraged 
experiments with representative samples of 
CASE enviroiunent technologies and 
strategies, for example: 

• Project members began examining the 
costs and benefits of two different 
strategies of CASE tool integration in 
support of a typical reengineering 
scenario by taking a selection of vendor- 
supplied reengineering and mciintenance 
tools and integrating them using two 
competing integration strategies: point- 
to-point using vendor-provided 
interfaces, and framework-based, using 
message passing technology. 

• Detailed experiments with an 
implementation of the portable common 
took environment have been carried out 
to determine the effectiveness of different 
strategies for its use. An example of this 


SOFTWARE ENGINEERING TECHNIQUES 15 ■ 







effort is the completion of an experiment 
looking at the use of different schema 
design approaches and their impact on 
system performance. 

The second concern is being addressed 
through a number of practical and conceptual 
means. This quarter, project members wrote 
several papers that scope the problem of 
evaluating a CASE environment and that 
suggest alternative solutions. One of these 
papers will be presented at the Software 
Technology Conference in April, and another 
at the Quality Software Development Tools 
conference in June. 

The third concern is being addressed through 
the transition of earlier project work on 
developing a guide to CASE adoption 
through an Institute of Electrical and 
Electroruc Engineers (IEEE) recommended 
practice in this area. In this quarter, a further 
draft of this recommended practice was 
developed. This draft will be discussed at an 
upcoming meeting of the relevant IEEE 
working group. 

In the area of Open Systems, one project 
member, in conjvmction with a member of 
another SEI project, completed a dry run of a 
protot)rpe for a three-day course on Open 
Systems. Much of the matericd for this course 
was developed this quarter and the dry run 
was attended by SEI employees and selected 
government persotmel from the Etepartment 
of Defense. The audience appreciated the 
material and made a number of valuable 
comments, all of which will be incorporated 
into the course. 

This quarter, significant progress was also 
made on the effort to analyze process 
enactment tools. A detailed analysis of a 
representative sample of the cxurrent process 


enactment tools has just been completed. As 
part of this work, a visit was made to an Air 
Force site that is making use of this 
technology in a significant software 
maintenance situation. Following this 
analysis, project members are now in a strong 
position to provide advice on the use of these 
tools and their likely impact on the software 
development practices of an organization. 
Project members intend to capitalize on this 
work in the coming months through more 
detailed experiments with this technology, 
and through working more directly with 
projects planing to make use of the 
technology. 


H Reengineering Center 

The Reengineering Center Project was 
initiated in the fourth quarter of 1994 and has 
the goal of capturing and improving best 
practice in reengineering legacy systems. The 
approach is to view reengineering of legacy 
systems as a software engineering problem. 
As such, the project draws from expertise, 
insights, and the results of existing work at 
the SEI and within the software community. 

Project members circulated the draft 
proceedings from its October workshop and 
are now preparing the proceedings for public 
release. A follow-up workshop is being 
plaruied to take place in May. This workshop 
will start with the issues identified by the 
October workshop and will present an initial 
agenda for the Reengineering Center, seek 
additional community input, and present 
selected issues for more follow up at some of 
the working sessions. 


■ 16 SOFTWARE ENQINEEniNO TECHNIQUES 




Software Engineering Techniques 
Reports 

January - March 1994 

Exploring Hypermedia Information Services for 
Disseminating Software Engineering 
Information 
CMU/SEI-94-TR-3 


This document is available via ancMiymous FTP. See page 33 hx additional 
information. 


A Practical Guide to the Technology and Adoption 

of Software Process 

CMU/SEI-94-TR-7 

This document is available via anonymous FTP. See page 33 for additicmai 
informa tioa 


SOFTWARE EMGINEERING TECHNIQUES 17 ■ 





18 SOFTWARE ENGINEERING TECHNIQUES 








■ SOFTWARE ENGINEERING INSTITUTE ■ 

Software Risk Management 


The objective of the Software Risk Management Program is to improve the management of risks 
that arise in the acquisition and development of software-intensive systems. The projects are 
focusing on processes and methods that enable the acquisition and development commuruty 
(managers and engineers) to make better decisions by: 

• Identifying risks before they become problems. 

• Commurucating risks in a positive, non-threatening way. 

• Resolving technical risk cost-effectively. 


I Team Risk Management 

The goal of the Team Risk Martagement 
Project is to establish a cooperative working 
envirorunent throughout all levels of a 
program, thus giving everyone in the 
program the ability and motivation to notice 
and handle risks before they become 
problenns. The project works toward its goal 
by developing a framework for acquisition 
and development that fosters cooperation 
emd partnership through cooperative or te<un 
processes, explicit methods to structure and 
sustain the processes, and supporting tools to 
aid practitioners and managers. 

The scope of this project is to develop and 
transition into practice a comprehensive set 
of software risk management products for 
effective support in managing the acquisition 
and development of large, software-intensive 
systems. The team risk management product 
set will focus on issues of modeling 
acquisition processes, developing team risk 


management methods to support these 
processes, and improving communications 
about risk within and between government 
and industry program offices. The primary 
emphasis is on enhancing the capability of 
the customer and supplier to manage risks as 
a team in software development. 

The project continues its strategic partnership 
with the Navy Program Executive Office for 
Anti-Submarine Warfare, Air Assault and 
Special Missions Programs. Currently two 
Program Executive Officer PEO(A) programs 
are actively installing team risk management 
into their programs. 

This quarter, the project team completed a 
quarterly team review with the government 


INDEX 

TEAM RISK MANAGEMENT 18 
TECHNOLOGY ASSESSMENT 20 
ENTERPRISE RISK MANAGEMENT 21 
SOFTWARE RISK MANAGEMENT REPORTS 22 


SOFTWARE RISK MANAGEMENT 18 ■ 








and contractor in March. In addition, project 
members supported the Navy PEO(A) by 
participating on a special task force to review 
laboratory requirements. 

The project team also started planning with a 
commercial client this quarter to introduce 
team risk management in a rapid 
development conunercial envirorunent, and 
presented the RTeam Risk Managements 
concept and methods to the Defense Systems 
Management College in the Management of 
Software Acquisition course in March. 


H Technology ASSESSMENT 

The Technology Assessment Project 
(previously known as the Risk Management 
Improvement Project) is focused on 
improving the state of the practice of 
identifying risks in the development of 
software-dependent systems in the 
Department of Defense (DoD) industrial 
conununity and in the commercial 
community. The project strategy is to work in 
a collaborative manner with key industrial 
comparries to develop, test, and transition 
risk identihcation methods for the 
development of software-dependent 
systems. 

The first goal of the Technology Assessment 
Prr^ect is to nrake the Taxonomy-Based Risk 
Identification process as practical and 
efficient as possible. To this end, a tailorable 
Taxonomy-Based Questionnaire will be 
produced. This product will take into account 
the characteristics of projects being assessed, 
including the domain, life-cycle phase, and 
type of project. 


The second goal of the project is to develop 
risk identification training material to be 
included in the risk identification training 
course for companies and appropriate third- 
party groups so they can apply risk 
identification methods, processes, and tools 
without the aid of SEI Risk Program 
personnel. 

The third goal of the Technology Assessment 
Project ^ to develop and populate a risk data 
repository. The risk data repository will be 
populated initially with data collected from 
field tests and risk assessments conducted by 
the SEI and strategic partners. The data in the 
repository will include common risks, risk 
mitigating actions, results, and lessons 
learned. Once obtained, structured, and 
analyzed, the data will also yield rich 
information on the relationships among risks, 
risk causes and attributes, and relative values 
of risks that will, in turn, be used to support 
the determination of risk ordering. The risk 
repository will provide reliable information 
on what risks programs have faced for 
particular situations and over their lifetime, 
and how they dealt effectively with those 
risks. The repository will provide a two-way 
avenue of information to clients and will 
become more robust over time as new 
information is received and validated. The 
repository is under development and is 
planned for release for DoD community 
usage in 199 S. 

Project members developed the Taxonomy- 
Based Risk Identification training material. 
The first in-house delivery of the training 
course occurred in January and revisions are 
being made based upon the feedback from 
the training session. 


■ 20 SOFTWARE RISK MANAGEMENT 






Project members also developed data- 
gathering methods to extend the Taxonomy- 
Based Questiormaire (TBQ) to domain- 
specific areas. Work is being done with two 
SEI projects (the Computer Emergency 
Response Team (CERT) and the Engineering 
Maturity Models (EMM) Project) to 
formulate interview questionnaires to gather 
data on system performance and system 
security risks and to extend the TBQ to in- 
depth coverage of real-time and security 
domains. Initial field work with the CERT 
and the EMM Project will begin in the next 
quarter. 


I Enterprise Risk Management 

Tlie Independent Risk Assessment Project 
broadened its scope and project title in 
January by becoming the Enterprise Risk 
Management (ERM) Project. This project 
assists government and acquisition activities, 
program management, software 
development, and software support 
managers in executing risk management 
within their applicable spheres of interest. 
This base is always associated with acquiring 
good software to perform tasks and to span 
all phases of the normal life cycle of software: 
concept, demonstration and validation (or 
Advanced Technology Demonstration), 
buying, development, and software support. 
Therefore, the principal focus of the ERM 
Project is aimed at the overall software 
acquisition life cycle. 

Initial project work, performed imder the 
project called Independent Risk Assessment, 
applied actual risk techiuques that had been 
developed within the SEI Risk Management 


Program to develop version 0.1 of the 
Software Risk Evaluation (SRE) and the 
conceptualization of the Independent Risk 
Assessment (IRA) mechanism. Both 
techniques are based on the software risk 
taxonomy that was developed within the 
Risk Program. The fundamental difference 
between the SRE and the IRA is that the IRA 
is designed for quickly looking into a specific 
software project and providing a 
comprehensive risk profile and the associated 
conclusions. The SRE, on the other hand, goes 
beyond the risk profile findings and assists 
users in creating reconunendations 
concenung found risks, developing a set of 
risk nutigation strategies for addressing the 
most important risks initially, applying 
resources in the most effective manner 
possible, and populating these strategies 
with specific activities that would be required 
to accomplish them. 

Version 0.2 of the SRE was published in 
February and has been imder review by the 
originating E)epartment of Defense office and 
other service and agency representatives 
since its publication. It is anticipated that the 
SRE Handbook, which will be published as a 
technical report, will be available by July 
1994. 

In the continuing development of the SRE 
mechanism, a series of program-level test 
cases have been arranged throughout ffie 
community of federal government that 
acquires software. These SRE events, 
conducted under the auspices of ERM project 
members, have now occurred in both 
government and commercial software 
development programs and projects. This 
work has led program offices in the 
E)epartment of Defense to request that the 
same SRE approach be studied for the 


SOFTWARE RISK MANAGEMENT 21 ■ 






feasibility of modifying it for application 
during the actual "buying" portion of the 
software life cycle. This work is being 
sponsored by the U.S. Army and should be 
available for full field tests within the year. 

The ERM Project has also entered into the 
feasibility phase of developing a predictive 
decision model/tool that will assist the 
acquisition source selection authority in the 
complex steps of deciding which contractor 
can best accomplish a program manager's 
goals and objectives. 


Software Risk Management Reports 
J anuary-March 1994 

An Acquisition Process/or the Management of 
Risks of Cost Overrun and Time Delay Associated 
xvith S<rfhvare Development 

CMU/SEI-93-TR-28 


■ 32 SOFTWARE RISK MANAGEMENT 






■ SOFTWARE ENGINEERING INSTITUTE ■ 


SEI Educational Products 


With the goal of helping end-users help themselves, SEI Educational Products works with other 
groups in the SEI to develop an integrated set of products and services for managers, 
practitioners, and educators. SEI Educational Products ensures that the results of SEI work are in 
a form that the software community can easily and effectively use to improve software practice 
and that educators can use to improve software engineering. 


I Academic Education 

The Academic Education Project focuses on 
the long-term development of a highly 
qualified work force. The project promotes 
emd accelerates the development of software 
engineering as an academic discipline. The 
project is developing model curricula and 
promoting the establishment and growth of 
software engineering programs, as well as 
working to increase the amount of software 
engineering content in computer science 
programs. The project produces educational 
materials that support the teaching of 
software engineering in universities. 

Project members are teaching the courses 
"Software Design," "Software Creation and 
Maintenance," "Software Verification and 
Validation," and "Software Corrstruction 
with Ada." These courses are taught via 
satellite through the National Technological 
Uruversity and are reaching over 120 
students in software development 
organizations nationwide. Video tapes of the 
courses will be available to universities and 
industrial organizations. 


Academic Education project members 
assisted Kansas State University and SUNY- 
Buffalo in establishing software engineering 
programs. 


H Curriculum Research 

In March, the project conducted two ludf-day 
faculty development workshops in 
conjimction with the 25th Technical 
Symposium on Computer Science Education, 
held by the Association for Computing 
Machinery (ACM) Special Interest Group on 
Computer Science Education. 

Approximately 20 college and university 
professors attended the workshops, which 
focussed on software requirements elicitation 
and software reuse. 


INDEX 

ACADEMIC EDUCATION 23 

CURRICULUM RESEARCH 23 

PROFESSIONAL EDUCATION 24 

SEI EDUCATIONAL PRODUCTS REPORTS 24 


SEI EDUCATIONAL PRODUCTS 23 ■ 



Also in March, the project leader was a 
panelist at the ACM Computer Science 
Conference, speaking on the issue of 
professional certification or licensing for 
softwcire engineers. 

The project published the educational 
materials package "Lecture Notes on 
Requirements Elicitation." These materials 
provide irdormation for instructors who pl 2 m 
to introduce the subject of requirements 
elicitation into their software engineering or 
computer science courses. The package 
includes instructor's guidelines, student 
handouts, transparency masters, and 
exercises. 


H Professional Education 

The Professional Education Project interacts 
with industry and government to increase the 
availability of high-quality educational 
opportunities for software practitioners and 
executives. The project produces video-based 
coiuse materials that are designed for 
practitioners' in-house education, and 
executive offerings design for decision 
makers involved in improvement efforts. 

The 7th Conference on Software Engineering 
Education was held in January. Over 20 
people attended the Master of Software 
Engineering Heads limcheon. Two birds-of- 
a-feather sessions were sponsored by the 
Professional Education project: "Software 
Process Improvement: A Curriculum 
Proposal" and "Software Design and 
Architechire: Discussion of Key Educational 
Issues for Design Practitioners." 

This quarter, the Program Committee for the 
8th Conference on Software Engineering 


Education was formed and the Call for 
Participation was produced. The conference 
will be held in New Orleans in the eeuly 
spring. 

The executive course entitled "Software 
Quality Improvement" was offered at the SEI 
in February. Also this quarter, the executive 
course "Software Risk Management" was 
presented. 

The executive course "Software: Profit 
Through Process Improvement" was 
presented in March via satellite, as a National 
Technologiccd University course. 

A new practitioner course "Software Design" 
was completed this quarter. A set of 
courseware (videotapes and an instructor 
guide) was sold to Logicon. Sets of 
courseware for the practitioner course 
"Software Requirements Engineering" were 
sold to Sandia National Labs and Harris 
Corporation. 

This quarter, 32 Technology Series videotapes 
were sold. 


SEI Educational Products Reports 

January-March 1994 

Lecture Notes on Requirements Elicitation 
CMU/SEI-94-EM-10 

This document is available via anonymous FTP. See page 33 for additional 
informatioa 


■ 24 S£l EOUCATK)NAL PRODUCTS 





■ SOFTWARE ENGINEERING INSTITUTE ■ 


SEI Services 


SEI Services works with other groups in the SEI to develop, deliver, and transition services that 
support the efforts of SEI clients to improve their ability to define, develop, maintain, and 
operate software-intensive systems. To accelerate the widespread adoption of effective software 
practices, SEI Services works with client organizations that are influential leaders in the software 
commuruty. SEI Services also promotes the development of infrastructures that support the 
adoption of improved practices, and transitions capabilities to government and commercial 
associates for use with their client organizations. 


H Computer Emergency Response 
Team 

The CERT Coordination Center was formed 
by the Advanced Research Projects Agency 
(ARPA) in November 1988 in response to the 
needs exhibited during an Internet security 
incident. The CERT chcuter is to work with 
the Internet community to facilitate its 
response to computer seciuity problems 
involving Internet hosts, to take practical 
steps to raise the community's awcueness of 
security issues, and to conduct research 
targeted at improving the security of existing 
systems. 

The following advisories were released this 
quarter: 

CA-9101 Ongoing NetwoikMonitoting Attacks 

CA-94<G Revised I^tdi for SunOS 

/usr/etc/rpc.mcHintd Vulnerability 

CA-91-03 l^A]XFeifoiTnanoeTcx)ls\folneiabilities 
CA^.04 SunOS 

usr/ucb/rdist Vulnerability 

CA-^-06 MDSOiecksuins 

CA^-06 WHtabie 

/etc/utnp vulnerability 


The first advisory, released in February, was 
written in response to a dramatic increase in 
network monitoring by intruders who were 
capturing passwords and installing "back 
doors" for future access to systems. The 
monitoring was imder way previously, but 
reports of the network monitoring attacks 
increased in a single week from a few isolated 
reports to indications that tens of thousands 
of systems may have been compromised. The 
advisory provided both a short-term 
workaround for the problem and 
recommendations for a long-term solution, 
including a discussion of one-time 
passwords. Follow-up activities continued 
throughout the quarter. Unlike most security 
incidents, this particular one received much 
media attention, and this prompted 


INDEX 

COMPUTER EMERGENCY RESPCMSE TEAM 2S 
ORGANIZATION CAPABILITY DEVELOPMENT 26 
TECHNICAL ASSISTANCE 27 


SEI SERVICES 25 ■ 








information requests from people who had 
not previously been involved with CERT. 

In March, the CERT manager was one of five 
experts who testified at the House 
Subcommittee on Science He<iring on 
Internet Security. The purpose of the hearing 
was to enable the subcommittee to evaluate 
the status of security on the Internet today, 
examine measvues currently available to 
ei\hance security, assess the effectiveness and 
degree of implementation of these measures, 
and identify obstacles to enhancing Internet 
security. 

This quarter, the transition efforts of CERT 
members included involvement in the 
following conferences and meetings: 

1994 Federal Information Systems Security 
Educators Association Conference. As an 
invited speaker, a CERT member presented 
"Security in the Internet: A Current 
Perspective." Hre focus was current intruder 
activities in the Internet and what CERT is 
doing to address them. 

Federal Networking Council Meeting. The 
CERT manager gave brief overview of CERT 
and a short discussion of the packet snooping 
activity that led to CERT Advisory CA-94:01. 

College Symposiiun Series of Colby College. 
A CERT member presented the tedk entitled, 
"How Advances in Commuiucations and 
Computer Technologies Have Affected the 
Seouity and Privacy of Users." The focus was 
on security models appropriate to Internet 
protection. 

Open Systems Security '94. A CERT member, 
an invited speaker, presented sessions on 
"Understanding and Using the Internet" and 


"Security Incident Planning: Resources and 
Responses." 

Global Networks Conference. The CERT 
manager presented a talk on network 
security and the work of the CERT 
Coordination Center. 

Internet Engineering Task Force Meeting. 
CERT had a representative in the Security 
Area Advisory Group. The CERT 
representative also attended the meetings of 
other security-related working groups. 

Forum of Incident Response and Security 
Teams (FIRST) Steering Committee Meeting. 
FIRST is a group of 26 incident response 
teams; the primary focus of the meeting was 
to resolve membership issues. Tlie committee 
also plans for the FIRST conference that will 
be held in Boston in the fall. A CERT member 
is program chair for the conference. 

In the first quarter of 1994, CERT received 
7,647 e-mail messages and 882 hotline calls 
requesting information or reporting 
computer security incidents. 

For comparison, during the first quarter of 
1993, CERT received approximately 3,450 e- 
mail messages; the volume of e-mail has more 
than doubled. 


I Organization Capability 
Development 

The Organizahon Capability Development 
(OCD) function supports SEI clients' 
software process improvement efforts by 
helping them develop the capability to 
manage the organizational aspects of 


■ 26 SEI SERVICES 







improvement at their sites. Services include 
organizational assessment, vision setting and 
dissemination, strategic plaiming, transition 
infrastructure development, executive 

consulting, cross-functional team 

development, managing technological 

change, and consulting skills for software 
engineering process groups. The go<d of the 
function is to provide to clients the self- 
sustaining capability of managing their own 
long-term improvement. 

This quarter, the SEI course entitled, 
"Managing Technological Change" was 
presented to McClellan Air Force Base (AFB), 
Scott AFB, Citibank, and to the public. The 
public offering was attended by 
representatives from the SEI staff and 
resident affiliates. An average of twenty-five 
people attended each class. 

The Consulting Skills Workshop was held 
three times this quarter, once at Scott AFB and 
twice for the public. The public offerings 
were attended by representatives from 
Standard Systems Center at Maxwell-Gunter 
AFB, Scott AFB, tmd Logicon, Inc. Fifteen 
people attended each workshop. 


H Technical Assistance 

The Technical Assistance (TA) function 
focuses activities with SEI clients who seek 
long-term support for their software 
engineering improvement efforts. Staff 
members provide support in planning and 
executing continuous improvement 
programs, including using business and case 
histories in software process improvement to 
illustrate benefits achieved. Also, the project 


promotes and latmches software process and 
technology improvement programs and 
coordinates clients' activities with the work 
of ditferent SEI projects. Staff members act as 
a bridge to technology groups, minimizing 
the effort and time required to successfully 
transition, adopt, and institutionalize 
emerging technologies and methods. 

Acting as Tutorials Committee co-chair, a TA 
staff member participated in review and 
selection activities for the 16th International 
Conference on Software Engineering 
Tutorials Program. More than 60 tutorial 
proposals were submitted as proposals; eight 
were selected for presentation. The 
conference will be held in Sorrento, Italy, in 
May 1994. 

As a panel chair, a TA staff member 
participated in planning activities for the 
aimual Software Technology Conference in 
Salt Lake City. Attendance is projected to 
exceed 2,000 participants for this April 1994 
coitierence. 

Members of TA and Program Development 
Division participated in an Air Force Materiel 
Command (AFMC) Software Engineering 
Process Group Workshop hosted by Tinker 
Air Force Base. The purpose of the workshop 
was to gather representatives from all AFMC 
Air Logistics Centers to discuss command¬ 
wide issues, compare lessons learned, and 
interact regarding software process 
improvement activities. A member of the 
Process program also attended to assist in 
discussions regarding 1994 assessment 
strategies, scope, and schedules. 

A member of TA led an Improvement 
Planning Guidelines kickoff meeting with 
support from Software Process, Risk 


SEI SERVICES 27 ■ 





Management, Organization Capability 
Development, and Leadership Through 
Quality programs to pursue interest in a 
generic guideline to assist customers with 
improvement planning activities. A first pilot 
of an Improvement Plaiming Workshop was 
conducted in March. 

TA members completed, coordinated, and 
published the Software Process Improvement 
Roadmap. It is the product of a strategic 
collaboration with Hewlett Packard (HP), 
based on the application of software process 
improvement practices and the lessons 
learned from SEI and HP experiences. 

TA members participated in the delivery of 
Software Risk Evaluations for Air Force, 
Army, and Navy customers; Software Process 
Definition training for an Air Force customer; 
Managing Technological Change training for 
an Air Force customers, and Internal Process 
Improvement training and appraisal for a 
commercial customer. 


■ 28 SEI SERVICES 







■ SOFTWARE ENGINEERING INSTITUTE ■ 


Program Development 


The vision of the Program Development Division (PDD) is to serve customer needs by being the 
voice of the customer to the SEI and the voice of the SEI to the customer. The PDD mission is to 
understand the key requirements of SEI customers, translate these into responsive SEI program 
specifications consistent with the SEI mission, and facilitate the effective transition of best 
software engineering practice into use. 

PDD accelerates the transition of new SEI software technologies and methods by disseminating 
information, providing mechanisms for collaboration and technology exchange, and offering 
customers the opportunity to participate in technical interchange meetings, workshops, and 
educational offerings. Efforts used to facilitate this transition include the Customer Relations 
information line, the subscriber program, the resident affiliate program, events such as the 
annual SEI Software Engineering Symposium and Visitor's Days, and distribution partners. 


The focus of the SEI subscriber program is to 
keep individuals abreast of current SEI 
course offerings, initiatives, products, and 
events. Since its inception in 1992, the 
program continues to show its commitment 
to the transfer of software engineering 
technology to SEI customers. This year, the 
program has attracted more than 1000 new 
members from industry, academia, and 
government. The following is a list of features 
and benefits that subscribers currently 
receive: 

• A subscription to Bridge quarterly 
magazine. Through Bridge, subscribers 
learn about SEI technical work, products, 
and services as well as customer 
experiences in transitioning technology. 

• The Annual Technical Review, which is a 
compendium of key technical work that 
the SEI performed within a given year. 


• Advance notice of newly released SEI 
publications. 

• A 10% discount on SEI technical reports 
through Research Access Incorporated. 

• Early notification of SEI conferences emd 
events. 

• A substantial discount at the annual SEI 
Software Engineering Symposium. 

• A complimentary copy of the Key Practices 
of the Capability Maturity Model, Version 1.1 
and the Capability Maturity Model for 
Software, Version 1.1, a $125.90 value. 

The $100 annual program fee covers the 
entire year from the date that the subscription 
is activated. The fee is subject to change. 
Department of Defense customers receive 
complimentary subscriptions. The program 
works on an individual basis and is extended 


PROGRAM DEVELOPMENT 29 ■ 






to those with a U.S. mailing address. If you 
have questions about SEI work or the 
subscriber progreun, contact Customer 
Relations (see 33 for contact information). 

Visitor's Day is hosted by the SEI three times 
a year to familiarize software practitioners, 
managers, and educators with the SEI. The 
next \^tor's Day will take place on 10 
November. \^itors must pre-register; walk- 
ins will not be accommodated. Registration 
forms are available from Customer Relations 
(see 33 for more information). 

The SEI will host its annual Software 
Engineering Symposium on 22-25 August 
1994 in Pittsburgh. This year the SEI is 
celebrating its 10th anniversary. The theme 
for the symposium is 10 Years of Improving 
the State of the Practice. This year's industry 
keynote specikers will look back on the past 
ten years and forward to the next 5-10 years 
and discuss relevant issues in terms of the 
state of software engineering practice. The 
symposiiun also plans to have 50 exhibitors 
this year. 

The symposium will showcase a variety of 
topics that are important to corporate and 
government organizations dependent on 
software engineering. For registration 
information, contact: 

Software Engineering Institute 
Events 

Carnegie Mellon University 
Pittsburgh, PA 15213-3890 
Phone:(412)268-6531 
FAX: (412) 268-5758 

For general symposium irtformation, contact 
Customer Relations (see 33 for contact 
information). 


Table 1 reflects those organizations that have 
active signed technical collaboration 
agreements (TCAs) with the SEI. A technical 
collaboration is a fixed-duration, well- 
defined collaborative relationship between 
one or more SEI projects and one or more 
industry partners. This form of collaboration 
involves a mutual commitment of resources 
to generate a demonstrable product. Those 
organizations with current TCAs are listed in 
Table 1. 

As of the end of March, the SEI has signed 
strategic collaboration agreements with four 
strategic partners. A strategic collaboration is 
a long-term, corporate-level relationship 
between the SEI and an industry 
organization. The relationship is 
characterized by a mutual statement of 
strategic intent and goals, and by the 
existence of a historical, multi-year 
association through resident affiliate 
sponsorship, masters of software engineering 
sponsorship, or several technical or other 
forms of collaboration. The cmrent strategic 
partners are listed in Table 2. 

Tables 3 and 4 list the organizations that 
sponsored resident affiliates during the first 
quarter of 1994. 

The SEI serves as a point of contact for current 
and emerging Software Process 
Improvement Network (SPIN) organizations. 
'Through participation in SPINs, people tap 
into existing SPIN organizations and learn 
how to start up a SPIN in a new geographic 
location. Tables 5 and 5 show the locations 
that have active SPIN organizations. 


■ 30 PROORAM DEVELOPMENT 





Table 1 

Organizations with 
current TCAs 


Table 2 

Strategic Partners 


TabieS 

Industry Affiliates 


Table 4 

Government Affiliates 


Allied Signal Aerospace 

Process Enhancement Partners, Inc. 

Applied Software Engineering 
Centre, Canada 

Siemens Corporate Research 

Bell Northern Research 

Software Productivity Consortium 

Computer Sciences Corporation 

Texas Instruments 

Harris Corporation 

Unisys 

Hewlett-Packard 

Universidad Politecnica de Madrid 
Spain 

Hughes 

University of Southern California 
Center for Software Engineering 

IBM Federal Systems Company 

Westinghouse 

Master Systems 

Xerox 


Hewlett-Packard 

IBM Federal Systems Company 

Hughes Aircraft 

Texas Instruments 


Computer Sciences Corporation 

Loral Federal Systems 
(previously IBM FSC) 

Pacific Bell 

SEMATECH 

GTE Government Systems 

Thxas Instruments 

Process, Inc. 

Unisys CARDS 

Hughes Aircraft Company 



Air Force: Electronic Systems Center 

Other DoD: Defense Logistics Agency 

National Security Agency 
International Government Exchange 
Applied Software Engineering Centre 


PROGRAM DEVELOPMENT 31 










Tables 

Domestic locations that have 
active SPIN organizations 


Washington, D.C. 

St. Louis, MO 

Colorado (Boulder and vicinity) 

Huntsville, AL 

Southern California 

Northern Los Angeles, CA 

Dallas/Fort Worth, TX 

Northern New Jersey 

Seattle, WA 

Cleveland, OH 

Boston, MA 

Phoenix, AZ 

Austin, TX 

Omaha, NE 

Bay Area (Northern CA) 

Albuquerque, NM 


Tables 

Intemationai locations that have 
active SPIN organizations 


Montreal, Canada 
United Kingdom 
France 


■ 33 rmOGRAM DEVELOPMENT 








■ SOFTWARE ENGINEERING INSTITUTE ■ 


Additional Information 


I How TO Order SEI Publications 

For information about purchasing SEI 
publications, contact one of the following 
organizatioiTs: 

RAI Reseaidi Access Inc 
800 Vmial Sheet 
Pittsburgh, PA 15212 
TelejAwne; 1-80(>685«10, 

FAX-(412) 682-2994 


NHS NatkrrialTedinkalliiforinatian Service 

US. Department of Commerce 
Springfield, VA 22161-2103 
Telephone: (703) 487-4600 


DTIC Defense Techrricalhrfonnation Center 
ATTN: FDRA Cameron Station 
Alexandria, VA 22304-6145 
Telephone: (703) 274-7633 


H How TO Get Additional Information 

For information about the subscriber 
program and other SEI offerings, contact: 

The Software Engineering Institute 
ATTN: Customer Relations 
Carnegie Mellon Uruversity 
Pittsburgh, PA 15213-3890 
(412)268-5800 

Internet: custoiner-relatians@sei. cnu. edu 


H How TO Obtain Copies of 
Electronic Documents 

Some—not all—SEI documents are available 
electronically, via anonymous file transfer 
protocol (FTP). Send electronic mail to info- 
nianage@sei.cicu.edu for information about 
obtaining documents via anonymous file 
transfer protocol (FTP) on the Internet. Be 
certain to include your telephone number in 
the event that we have difficulty contacting 
you by electronic mail. 


ADOmONAL INFORMATION 33 ■ 





34 AOOmONAL INFORMATION 








