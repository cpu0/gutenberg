Information Technology 



@ Sample Analysis at Mars Instrument Simulator 

A novel tool will optimize and validate science operation plans of the instrument on the surface 
of Mars with a turnaround time of a few hours instead of multiple days. 

Goddard Space Flight Center, Greenbelt, Maryland 


The Sample Analysis at Mars Instru- 
ment Simulator (SAMSIM) is a numeri- 
cal model dedicated to plan and validate 
operations of the Sample Analysis at 
Mars (SAM) instrument on the surface 
of Mars. The SAM instrument suite, cur- 
rently operating on the Mars Science 
Laboratory (MSL), is an analytical labo- 
ratory designed to investigate the chem- 
ical and isotopic composition of the at- 
mosphere and volatiles extracted from 
solid samples. SAMSIM was developed 
using Matlab and Simulink libraries of 
Math Works Inc. to provide MSL mission 
planners with accurate predictions of 
the instrument electrical, thermal, me- 
chanical, and fluid responses to scripted 
commands. This tool is a first example 
of a multi-purpose, full-scale numerical 
modeling of a flight instrument with the 
purpose of supplementing or even elim- 
inating entirely the need for a hardware 
engineer model during instrument de- 
velopment and operation. 

SAMSIM simulates the complex inter- 
actions that occur between the instru- 
ment Command and Data Handling 
unit (C&DH) and all subsystems during 
the execution of experiment sequences. 
A typical SAM experiment takes many 
hours to complete and involves hun- 
dreds of components. During the simu- 
lation, the electrical, mechanical, ther- 
mal, and gas dynamics states of each 
hardware component are accurately 


modeled and propagated within the sim- 
ulation environment at faster than real 
time. This allows the simulation, in just a 
few minutes, of experiment sequences 
that takes many hours to execute on the 
real instrument. 

The SAMSIM model is divided into 
five distinct but interacting modules: 
software, mechanical, thermal, gas flow, 
and electrical modules. The software 
module simulates the instrument 
C&DH by executing a customized ver- 
sion of the instrument flight software in 
a Matlab environment. The inputs and 
outputs to this synthetic C&DH are 
mapped to virtual sensors and com- 
mand lines that mimic in their structure 
and connectivity the layout of the instru- 
ment harnesses. This module executes, 
and thus validates, complex command 
scripts prior to their up-linking to the 
SAM instrument. As an output, this 
module generates synthetic data and 
message logs at a rate that is similar to 
the actual instrument. 

The mechanical module simulates the 
actions of a number of mechanical com- 
ponents of the SAM instrument. This 
module contains the valves, the pumps, 
and the Sample Manipulation System 
(SMS). The response of each of these el- 
ements is modeled to produce outputs 
of state variables (velocity, position, 
force, etc.) that duplicate the behavior 
of the real elements. 


The thermal module simulates the ac- 
tion of =60 heaters and their local ther- 
mal impact on the instrument. It also 
predicts the individual temperatures 
sensed by =70 thermistors and transmit- 
ted to the C&DH. 

The gas flow module simulates the gas 
dynamics (time-dependent pressures 
and gas flows) in the Gas-Processing Sys- 
tem (GPS) of SAM. The conductance of 
each gas transfer element (pipe, mani- 
fold, leak, pump, etc.) is dynamically 
computed as a function of the compo- 
nent dimension, gas composition, pres- 
sure, and temperature. 

The electric module captures the elec- 
trical behavior of motors, control boards, 
Bayard-Alpert gauges, detectors, valves, 
heaters, and all components that con- 
tribute to the instrument power profile. 

The behavior of each element of the 
SAMSIM model is reconstructed by ac- 
counting for all the relevant modules to 
that element. Complex components like 
pumps integrate contributions from 
modules to simulate the evolution of 
their command logic, rotor speeds, cur- 
rents, temperatures, and throughputs. 

This development was conducted by Mehdi 
Benna of the Center for Research and Explo- 
ration in Space Science & Technology 
(CRESST) at Goddard Space Right Center and 
Tom Nolan of Nolan Engineering EEC. Fur- 
ther information is contained in a TSP (see 
page 1). CSC- 165 66-1 


©Access Control of Web- and Java-Based Applications 

NASA’s Jet Propulsion Laboratory, Pasadena, California 


Cybersecurity has become a great 
concern as threats of service interrup- 
tion, unauthorized access, stealing and 
altering of information, and spreading 
of viruses have become more prevalent 
and serious. 

Application layer access control of ap- 
plications is a critical component in the 
overall security solution that also in- 
cludes encryption, firewalls, virtual pri- 


vate networks, antivirus, and intrusion 
detection. An access control solution, 
based on an open-source access man- 
ager augmented with custom software 
components, was developed to provide 
protection to both Web-based and Java- 
based client and server applications. 

The DISA Security Service (DISA-SS) 
provides common access control capa- 
bilities for AMMOS software applica- 


tions through a set of application pro- 
gramming interfaces (APIs) and net- 
work-accessible security services for au- 
thentication, single sign-on, 
authorization checking, and authoriza- 
tion policy management. 

The OpenAM access management 
technology designed for Web applica- 
tions can be extended to meet the 
needs of Java thick clients and stand- 


NASA Tech Briefs, August 2013 


21 



alone servers that are commonly used in 
the JPL AMMOS environment. The 
DISA-SS reusable components have 
greatly reduced the effort for each 
AMMOS subsystem to develop its own 
access control strategy. 

The novelty of this work is that it lever- 
ages an open-source access management 
product that was designed for Web- 


based applications to provide access con- 
trol for Java thick clients and Java stand- 
alone servers. Thick clients and stand- 
alone servers are still commonly used in 
businesses and government, especially 
for applications that require rich graph- 
ical user interfaces and high-perform- 
ance visualization that cannot be met by 
thin clients running on Web browsers. 


This work was done by Kam S. Tso and 
Michael J. Pajevski of Caltech for NASA’s Jet 
Propidsion Laboratory. For more information, 
contact iaoffice@jpl. nasa.gov. 

The software used in this innovation is avail- 
able for commercial licensing. Please contact Dan 
Broderick at Daniel.F.Broderick@jpl. nasa.gov. 
Refer to NPO-48435. 


© Tool for Automated Retrieval of Generic Event Tracks (TARGET) 

A generalized algorithm implementation is applied to scientific data sets for establishing events, 
such as tornadoes, both spatially and temporally. 

Goddard Space Flight Center, Greenbelt, Maryland 


Methods have been developed to iden- 
tify and track tornado-producing 
mesoscale convective systems (MCSs) au- 
tomatically over the continental United 
States, in order to facilitate systematic 
studies of these powerful and often de- 
structive events. Several data sources 
were combined to ensure event identifi- 
cation accuracy. Records of watches and 
warnings issued by National Weather 
Service (NWS), and tornado locations 
and tracks from the Tornado History 
Project (THP) were used to locate MCSs 
in high-resolution precipitation observa- 
tions and GOES infrared (11-micron) 
Rapid Scan Operation (RSO) imagery. 
Thresholds are then applied to the latter 
two data sets to define MCS events and 
track their developments. 

MCSs produce a broad range of severe 
convective weather events that are signif- 
icantly affecting the living conditions of 
the populations exposed to them. Un- 
derstanding how MCSs grow and de- 
velop could help scientists improve their 
weather prediction models, and also 
provide tools to decision-makers whose 
goals are to protect populations and 
their property. 


Associating storm cells across frames 
of remotely sensed images poses a diffi- 
cult problem because storms evolve, 
split, and merge. Any storm-tracking 
method should include the following 
processes: storm identification, storm 
tracking, and quantification of storm in- 
tensity and activity. 

The spatiotemporal coordinates of 
the tracks will enable researchers to ob- 
tain other coincident observations to 
conduct more thorough studies of these 
events. In addition to their tracked loca- 
tions, their areal extents, precipitation 
intensities, and accumulations — all as 
functions of their evolutions in time — 
were also obtained and recorded for 
these events. All parameters so derived 
can be catalogued into a moving object 
database (MODB) for custom queries. 

The purpose of this software is to pro- 
vide a generalized, cross-platform, plug- 
gable tool for identifying events within a 
set of scientific data based upon speci- 
fied criteria with the possibility of stor- 
ing identified events into a searchable 
database. The core of the application 
uses an implementation of the con- 
nected component labeling (CCL) algo- 


rithm to identify areas of interest, then 
uses a set of criteria to establish spatial 
and temporal relationships between 
identified components. The CCL algo- 
rithm is used for identifying objects 
within images for computer vision. This 
application applies it to scientific data 
sets using arbitrary criteria. 

The most novel concept was applying 
a generalized CCL implementation to 
scientific data sets for establishing events 
both spatially and temporally. The com- 
bination of several existing concepts 
(pluggable components, generalized 
CCL algorithm, etc.) into one applica- 
tion is also novel. In addition, how the 
system is designed, i.e., its extensibility 
with pluggable components, and its con- 
figurability with a simple configuration 
file, is innovative. This allows the system 
to be applied to new scenarios with ease. 

This work was done by Thomas Clune of 
Goddard Space Flight Center; Shawn Free- 
man, Carlos Cruz, and Robert Burns of 
Northrop Grumman; Kwo-Sen Kuo of 
Caelum Research Corporation; and Jules 
Kouatchou of TetraTech AMT. Further infor- 
mation is contained in a TSP (see page 1). 
GSC-1 6665-1 


© Bilayer Protograph Codes for Half-Duplex Relay Channels 

The proposed code is constructed by synthesizing a bilayer structure with a protograph. 

NASA’s Jet Propulsion Laboratory, Pasadena, California 


Direct to Earth return links are lim- 
ited by the size and power of lander de- 
vices. A standard alternative is provided 
by a two-hops return link: a proximity 
link (from lander to orbiter relay) and a 
deep-space link (from orbiter relay to 
Earth). Although direct to Earth return 


links are limited by the size and power of 
lander devices, using an additional link 
and a proposed coding for relay chan- 
nels, one can obtain a more reliable sig- 
nal. Although significant progress has 
been made in the relay coding problem, 
existing codes must be painstakingly op- 


timized to match to a single set of chan- 
nel conditions, many of them do not 
offer easy encoding, and most of them 
do not have structured design. 

A high-performing LDPC (low-density 
parity-check) code for the relay channel 
addresses simultaneously two important 


22 


NASA Tech Briefs, August 2013 


