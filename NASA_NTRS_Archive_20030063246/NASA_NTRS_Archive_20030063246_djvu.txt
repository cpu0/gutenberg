

I 



DEVELOPMENT STATUS 
AUTOMATION ADVANCED DEVELOPMENT 
SPACE STATION FREEDOM ELECTRIC POWER SYSTEM 

Feb. 7, 1990 


JAMES L. DOLCE 
JAMES A. KISH 
PAMELA A. MELLOR 
LEWIS RESEARCH CENTER, NASA 


21 



ELECTRIC POWER SYSTEM AUTOMATION 


The paramount objective for our power system’s operation is: to generate and 
dispatch electric power to the loads while maximizing Space Station Freedom’s 
productivity and without violating any constraints. The initial station operation will 
use dispatchers aided by human-interactive computational facilities to perform the 
necessary command and control tasks. These tasks constitute planning and 
decision-making activities that strive to eliminate unplanned outages. To make 
quality decisions, the dispatchers must have an acumen sharpened through years of 
experience. Space Station Freedom will adopt an intensive human command and 
control approach initially, but we perceive that in the long run there are 
opportunities to reduce our reliance upon skilled dispatchers and to make faster and 
more consistent on-line decisions by capturing this knowledge in expert systems. The 
use of such expert systems is shown in this figure. The gist is to perform a 

closed-loop command and control function using specialized expert systems to perform 
diagnosis, security analysis, and overall coordination; and to use conventional 
algorithms for power scheduling and command generation. To develop and 
demonstrate our automation design we will use the Lewis Space Station Freedom 
Electric Power Test-bed. 

The command and control cycle begins with a sample of data from the 
test-bed and from the Operation Management System (OMS). Test-bed data is 
processed by expert systems that recognize and classify the operating state of the 
power system and then proceed to perform specialized tasks based upon the results 
of the classification cycle. Operations Management System requests need no special 
classification software presently. 

The security analysis software assesses the overload risk from possible failure 
modes that have been identified beforehand. The system is judged secure if there 
are no contingencies that result in an emergency situation. Aboard our spacecraft, 
sudden loss of a power converter is an ever present contingency that produces an 
emergency state. Converter loss will always produce insecure operation and cannot 
be alleviated without shedding load. Insecure transmission outages, however, may 
be prevented by reassigning loads to other busses. These insecure operating 
conditions are translated into constraints upon the scheduling and distribution of 
power in the system. For source outages, contingency plans for load shedding must 
be produced; and for transmission outages, rerouting plans must be produced. The 
plan formulation and selection is performed by specialized software in the Arbiter 
expert system. 

The diagnosis software determines the most likely cause of abnormal operation. 
Like the security analysis software it generates constraints upon the scheduling and 
distribution of electric power. 

The Arbiter expert system software coordinates the Operations Management 
System requests, security analysis results, and failure cause diagnosis by specifying 
appropriate system operating constraints and electrical loads to a scheduling 
algorithm. The Arbiter software also determines which schedule and operating plan 
is to be used given the current state of the power system’s operation. This current 
plan is sent to command generation software which provides the interface between 
the Arbiter expert system and the computers used to operate the test-bed. 

The Scheduler software finds power profiles that maximize productivity and 
that satisfy the operating constraints stipulated by the Arbiter expert system. The 
resulting power dispatching schedules repose in memory awaiting selection by the 
arbitration software. 


ELECTRIC POWER SYSTEM AUTOMATION 



DATA 











AUTOMATION SOFTWARE FOR DIAGNOSIS 


Two expert systems are being developed for the diagnosis function: 

The First, APEX, has been developed in KEE for use with 20kHZ switchgear. 
It is a rule-based expert system that uses antecedent driven logic for generating the 
failure hypotheses and consequent driven logic for deducing the most likely 
hypothesis. An explanation facility is used to justify the failure cause analysis. The 
APEX software can accommodate both static and temporal data. The temporal data 
is used to identify incipient failures. The incipient detection is based on linear 
regression and correlation analysis. This algorithm finds ’’soft” failures by detecting 
graceful degradation in system performance. Rules are used to isolate the cause of 
the degradation. The addition of temporal data and detection produces an expert 
system capable of detecting anomalies such as: insulation breakdown in transformers, 
contact depletion in mechanical switches, and thermal conductivity degradation in 
power semiconductors. 

The second, TROUBLE III, is being developed in ART for use with the 
photovoltaic generation and nickel- hydrogen battery storage systems. It is an expert 
system system that uses set-covering rather than a series of if-then rules to encode 
the failure knowledge. In this software, a data base linking all known system 
failures to their known symptoms is built and searched to generate the failure cause 
hypotheses for observed symptoms. Rules control hypothesis generation and 
determine the most likely cause. The failure knowledge, however, is stored as data 
and in easily maintained. TROUBLE III uses a standard reliability analysis tool -- 
the failure modes and effects analysis — to produce the symptom and failure data 
base. Symptoms are detected using rule-based classifiers which process static system 
measurements. 


POWER SYSTEM AUTOMATION 



STATIC 

TEMPORAL 


AUTOMATED SOFTWARE FOR SCHEDULING 


Four algorithms are being investigated to perform the power scheduling 
functions: three use integer or mixed integer-linear programming and one uses a 
value-driven algorithm. 

The integer programming approach uses the WS Formulation (after its 
designers Washington and Sheskin) to represent preferences for load time profiles and 
their starting times. All variables are integers and the decision variables (when to 
6tart a load) are limited to values of 0 or 1. A cardinal value system for starting 
time preferences is maximized subject to operating constraints using an implicit 
enumeration technique encoded in a program named ZERON. 

The mixed integer-linear programs use either the Washington or the DiFilippo 
formulations to represent loads, the load’s usefulness, and the load’s startiug times. 
Both formulations use constraint equations with slack variables to apportion available 
energy among battery storage and loads, and use 0-1 variables to represent the 
choices. Both formulations use customized versions of a branch and bound search 
algorithm to maximize a productivity index. 

The value-driven resource allocation program uses a free-market economy 
model in which consumers (loads) bid for available resources and in which trade-offs 
among conflicting supply alternatives are governed by cardinal measures of value. 
Unlike the integer and mixed integer-linear programming methods, the value-driven 
paradigm schedules not only electric power but also all of the other resource 
providing subsystem aboard Space Station Freedom. The conceptual design of the 
allocation algorithm is complete and a report is available. A proof of concept 
simulation is in progress. 




o 






o 

GO 





3 

ID 

DC 

O 


o 


DC g 

O — 
O ^ 
DC 5 


o 

2 Z 

S o 

■g t £ 

^ n D> 
DC =d Ij 

o 2 o 

o i CO 

S= o 2 

h: o 

DC ^ DC 
LU ^ LU 

o > rsj 

LU 


DC 
< DC 
LU O 


• o 

DC I — 
LU CD 
CD z: 

LU =F 

z w 
Q S 

LU 

X 


2 5 


DC 

o 


o 

Q_ 

o 


co 

DC 

LU 

O 

CO 

Q 


o 

DO 

Q 


O 


hb DC 
Q CD 


O 

Z 2 

B 00 

5 o 

o ^ 

3 < 

Zj o 

< ^ 

LU g- 

o ^ 

3 LU 

o ° 

co 


DC O 
Z CO 
LU Z 

> O 

CC CO 

3 o 

LU 

m S 


GENERALIZED LAGRANGE MULTIPLIER SOLVER 


AUTOMATION SOFTWARE FOR CONSTRAINT INTERFACES 


Constraint interface software in the Arbiter expert system has been developed 
to convert outputs from constraint generating software into properly formulated 
scheduling problems. These constraint interfaces are for coordinating the APEX 
diagnostic expert system with the DiFilippo Formulation scheduler and for 
coordinating the OMS Request data base with the WS Forxnulation scheduler. 
Additional constraint interfaces will be developed as the automation design matures. 


POWER SYSTEM AUTOMATION 



POWER SYSTEM AUTOMATION NASA 



I 


DEVELOPMENT 


Two development paths are being pursued: The first uses the APEX 

switchgear diagnostic system and the DiFilippo Formulation scheduler to produce load 
shedding or reconfiguration commands for a small 20kHz test-bed. This test-bed 
(known as the 20kHz Brass-board) contains several pieces of switchgear and a 
network of microprocessors for gathering data and commanding the switchgear. The 
thrust of the development is to integrate expert systems with space power hardware, 
and to learn how expert systems behave in command and control systems. The 
second uses simulations to provide the behavior of the power system, its computers, 
payloads, and other station subsystems. The TROUBLE III diagnostics system, the 
WS Formulation scheduler, and the OMS request data base are being developed 
with these simulations. 

The knowledge gained from the 20kHz Brass-board experiment will be used to 
guide the automation software development by simulation. The final automation 
product, a combination of the best performing software, will be evaluated using the 
Space Station Freedom Power System Test-Bed. 


POWER SYSTEM AUTOMATION NASA 






ART/ADA 

A development effort is under way to produce Ada versions of the automation 
software described previously. The objective is to perform a comparative assessment 
of knowledge-based power system automation developed with LISP-based tools and 
the same automation developed with an Ada-based implementation of ART. 
Hardware and software have been procured and personnel from Lewis have been 
familiarizing themselves with the Ada and ART languages. The first application will 
be the conversion of the APEX diagnostic system into ART and then into Ada. 



POWER SYSTEM AUTOMATION IVJ/NSA 




RESPONSIBILITIES 


Funding for the automation development is provided by NASA OAST (Code 
R) and OSS (Code S). The Code R initiatives focus on technology development for: 
scheduling, diagnostics, cooperative problem solving using multiple expert systems (e.g. 
blackboard architectures), and human interfaces to expert systems. All of these 
technologies are applied to general space power systems with particular emphasis 
on the Space Station Freedom Power System. The Code S initiatives apply specific 
technologies to the Space Station Freedom Power System, viz., integration of 
automation products for diagnosis and resource allocation into the Space Station's 
power test-bed; and seek to identify the hooks and scars required for successful 
incorporation aboard the Space Station. 



POWER SYSTEM AUTOMATION NASA 




