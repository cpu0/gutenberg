NASA/TP-2002-211640 




Multi-dimensional Upwind Fluctuation 
Splitting Scheme with Mesh Adaption 
for Hypersonic Viscous Flow 



William A. Wood 

Langley Research Center, Hampton, Virginia 



April 2002 



The NASA STI Program Office ... in Profile 



Since its founding, NASA has been dedicated 
to the advancement of aeronautics and space 
science. The NASA Scientific and Technical 
Information (STI) Program Office plays a key 
part in helping NASA maintain this 
important role. 

The NASA STI Program Office is operated by 
Langley Research Center, the lead center for 
NASA's scientific and technical information. 
The NASA STI Program Office provides 
access to the NASA STI Database, the 
largest collection of aeronautical and space 
science STI in the world. The Program Office 
is also NASA's institutional mechanism for 
disseminating the results of its research and 
development activities. These results are 
pubhshed by NASA in the NASA STI Report 
Series, which includes the following report 
types: 

• TECHNICAL PUBLICATION. Reports of 
completed research or a major significant 
phase of research that present the results 
of NASA programs and include extensive 
data or theoretical analysis. Includes 
compilations of significant scientific and 
technical data and information deemed 

to be of continuing reference value. NASA 
counterpart of peer-reviewed formal 
professional papers, but having less 
stringent limitations on manuscript 
length and extent of graphic 
presentations. 

• TECHNICAL MEMORANDUM. 
Scientific and technical findings that are 
preliminary or of specialized interest, 
e.g., quick release reports, working 
papers, and bibliographies that contain 
minimal annotation. Does not contain 
extensive analysis. 

• CONTRACTOR REPORT. Scientific and 
technical findings by NASA-sponsored 
contractors and grantees. 



• CONFERENCE PUBLICATION. 
Collected papers from scientific and 
technical conferences, symposia, 
seminars, or other meetings sponsored or 
co-sponsored by NASA. 

• SPECIAL PUBLICATION. Scientific, 
technical, or historical information from 
NASA programs, projects, and missions, 
often concerned with subjects having 
substantial public interest. 

• TECHNICAL TRANSLATION. English- 
language translations of foreign scientific 
and technical material pertinent to 
NASA's mission. 

Specialized services that complement the STI 
Program Office's diverse offerings include 
creating custom thesauri, building customized 
databases, organizing and publishing 
research results. . . even providing videos. 

For more information about the NASA STI 
Program Office, see the following: 

• Access the NASA STI Program Home 
Page at http://www.sti.nasa.gov 

• E-mail your question via the Internet to 
help@sti.nasa.gov 

• Fax your question to the NASA STI Help 
Desk at (301) 621-0134 

• Phone the NASA STI Help Desk at (301) 
621-0390 

• Write to: 

NASA STI Help Desk 

NASA Center for AeroSpace Information 

7121 Standard Drive 

Hanover, MD 21076-1320 



NASA/TP-2002-211640 




Multi-dimensional Upwind Fluctuation 
Splitting Scheme with Mesh Adaption 
for Hypersonic Viscous Flow 



William A. Wood 

Langley Research Center, Hampton, Virginia 



National Aeronautics and 
Space Administration 

Langley Research Center 
Hampton, Virginia 23681-2199 

April 2002 



Available from: 

NASA Center for AeroSpace Information (CASI) National Technical Information Service (NTIS) 

7121 Standard Drive 5285 Port Royal Road 

Hanover, MD 21076-1320 Springfield, VA 22161-2171 

(301) 621-0390 (703) 605-6000 



Abstract 



Multi-dimensional Upwind Fluctuation Splitting Scheme with Mesh 
Adaption for Hypersonic Viscous Flow 

By 

William Alfred Wood III 

Committee Chairman: Bernard Grossman 
Aerospace Engineering 

(ABSTRACT) 

A multi-dimensional upwind fluctuation splitting scheme is developed and imple- 
mented for two-dimensional and axisymmetric formulations of the Navier-Stokes equa- 
tions on unstructured meshes. Key features of the scheme are the compact stencil, 
full upwinding, and non-linear discretization which allow for second-order accuracy 
with enforced positivity. Throughout, the fluctuation splitting scheme is compared 
to a current state-of-the-art flnite volume approach, a second-order, dual mesh up- 
wind flux difference splitting scheme (DMFDSFV), and is shown to produce more 
accurate results using fewer computer resources for a wide range of test cases. The 
scalar test cases include advected shear, circular advection, non-linear advection with 
coalescing shock and expansion fans, and advection-diffusion. For all scalar cases the 
fluctuation splitting scheme is more accurate, and the primary mechanism for the 
improved fluctuation splitting performance is shown to be the reduced production of 
artiflcial dissipation relative to DMFDSFV. The most signiflcant scalar result is for 

iii 



combined advection-diffusion, where the present fluctuation splitting scheme is able to 
resolve the physical dissipation from the artificial dissipation on a much coarser mesh 
than DMFDSFV is able to, allowing order-of-magnitude reductions in solution time. 
Among the inviscid test cases the converging supersonic streams problem is notable in 
that the fluctuation splitting scheme exhibits superconvergent third-order spatial ac- 
curacy. For the inviscid cases of a supersonic diamond airfoil, supersonic slender cone, 
and incompressible circular bump the fluctuation splitting drag coefflcient errors are 
typically half the DMFDSFV drag errors. However, for the incompressible inviscid 
sphere the fluctuation splitting drag error is larger than for DMFDSFV. A Blasius 
flat plate viscous validation case reveals a more accurate ?y'-velocity profile for fluctu- 
ation splitting, and the reduced artiflcial dissipation production is shown relative to 
DMFDSFV. Remarkably the fluctuation splitting scheme shows grid converged skin 
friction coefficients with only five points in the boundary layer for this case. A viscous 
Mach 17.6 (perfect gas) cylinder case demonstrates solution monotonicity and heat 
transfer capability with the fluctuation splitting scheme. While fluctuation splitting 
is recommended over DMFDSFV, the difl'erence in performance between the schemes 
is not so great as to obsolete DMFDSFV. The second half of the dissertation develops 
a local, compact, anisotropic unstructured mesh adaption scheme in conjunction with 
the multi-dimensional upwind solver, exhibiting a characteristic alignment behavior 
for scalar problems. This alignment behavior stands in contrast to the curvature 
clustering nature of the local, anisotropic unstructured adaption strategy based upon 
a posteriori error estimation that is used for comparison. The characteristic align- 
ment is most pronounced for linear advection, with reduced improvement seen for 
the more complex non-linear advection and advection-diffusion cases. The adaption 
strategy is extended to the two-dimensional and axisymmetric Navier-Stokes equa- 
tions of motion through the concept of fluctuation minimization. The system test 
case for the adaption strategy is a sting mounted capsule at Mach-10 wind tunnel 
conditions, considered in both two-dimensional and axisymmetric configurations. For 
this complex flowfleld the adaption results are disappointing since feature alignment 
does not emerge from the local operations. Aggressive adaption is shown to result 
in a loss of robustness for the solver, particularly in the bow shock/stagnation point 



IV 



interaction region. Reducing the adaption strength maintains solution robustness but 
fails to produce significant improvement in the surface heat transfer predictions. 



VI 



Contents 



Abstract iii 

Nomenclature xix 

1 Introduction 1 

1.1 Objective 1 

1.2 Motivation 1 

1.3 Background 2 

1.3.1 Fluid Dynamics Algorithms 2 

1.3.2 Mesh Adaption Strategies 5 

1.4 Course of Action 7 

2 One-Dimensional Analysis 9 

2.1 Domain 10 

2.2 Scalar Advection 12 

2.2.1 Linear Advection 13 

2.2.2 Non-linear Advection 17 

2.3 Scalar Advection-Ditfusion 19 

2.3.1 Heat Equation 19 

2.3.2 Combined Advection and Diffusion 21 

2.4 Systems 21 

2.4.1 Euler Equations 21 

2.4.2 Navier-Stokes Equations 27 

2.5 Finite Volume State of the Art 29 



vn 



3 Two-Dimensional Scalar Analysis 31 

3.1 Domain 32 

3.2 Advection 35 

3.2.1 Formulations 35 

3.2.2 Advective Timestep Restriction 40 

3.2.3 Bomidary Conditions 42 

3.2.4 Results 42 

3.3 Diffusion 58 

3.3.1 Formulations 58 

3.3.2 Diffusive Timestep Restriction 60 

3.3.3 Boundary Conditions 60 

3.3.4 Heat Equation 60 

3.4 Advection-Diffusion 61 

3.5 Benefits of Fluctuation Splitting 69 

4 Scalar Mesh Adaption 71 

4.1 Curvature Clustering 72 

4.1.1 Adaption Mechanics 73 

4.1.2 Adaption Procedure 81 

4.2 Characteristic Alignment 83 

4.2.1 Exact Advection Solution 83 

4.2.2 Adaption Strategies for Fluctuation Splitting 86 

4.3 Non-linear Advection 102 

4.4 Advection-Diffusion 106 

4.5 Recapitulation 109 

5 Two-Dimensional Systems 111 

5.1 Overview Ill 

5.2 Inviscid Formulations Ill 

5.2.1 Finite Volume 112 

5.2.2 Fluctuation Splitting 114 

5.3 Viscous Formulations 123 



vm 



5.4 Boundary Conditions 126 

5.4.1 Weak Formulations 126 

5.4.2 Boundary Types 129 

5.5 Temporal Evolution 131 

5.6 Verification and Validation 132 

5.6.1 Coding Strategy 132 

5.6.2 Inviscid Verification 132 

5.6.3 Viscous Validation 140 

5.6.4 Summary of Results 151 

6 System Mesh Adaption 153 

6.1 Overview 153 

6.2 Curvature Clustering 153 

6.3 Characteristic Alignment 154 

6.4 Mars Pathfinder 159 

6.4.1 Configuration and Conditions 160 

6.4.2 Benchmark Data 161 

6.4.3 Unadapted Baseline 166 

6.4.4 Solution-Adapted Results 193 

6.5 Discussion 220 

7 Summary and Recommendations 225 
A Limiters 229 

B Governing Equations 233 

B.l Compressible Continuum Gas Dynamics 233 

B.1.1 Vector Notation 234 

B.l. 2 Two-Dimensional/Axisymmetric Indicial Notation 235 

B.2 Linearizations 237 

B.3 Variable Transformations 239 

ix 



C Axisymmetric Source Term Integration 243 

C.l Inviscid 243 

C.1.1 Integration of Eqn. C.2 245 

C.l. 2 Integration of Eqn. C.l 246 

D Publications 253 

E Navier-Stokes Solver and Mesh Adaption Code 255 

F Non-linear Conservation Law Solver 339 

Bibliography 373 



List of Tables 



3.1 Grids and solution times for advection-diff'usion problem 64 

3.2 L2-norms (xlO^) of artificial and ph3^sical viscosities for advection- 
diff'usion problem 64 

4.1 RMS difference of solution outffow profile relative to grid-converged 

result 106 

5.1 Analytic thermodynamic states for converging Mach streams 134 

6.1 Matrix of grid dimensions for two-dimensional baseline cases 170 

6.2 Matrix of grid dimensions for axisymmetric baseline cases 179 



XI 



List of Figures 



1.1 Pictorial of "ideal" mesh for shock discontinuity and mesh resulting 

from gradient based clustering 6 

2.1 One-dimensional finite volume domain 10 

2.2 One-dimensional fluctuation splitting domain 11 

3.1 Finite volume computational domain for edge-based implementation. 33 

3.2 Flux quadrature for edge-based finite volume scheme 34 

3.3 Elemental triangular domain for fluctuation splitting 34 

3.4 First-order fluctuation splitting, uniform advection 43 

3.5 Second-order fluctuation splitting, uniform advection 44 

3.6 Second-order DMFDSFV, uniform advection 45 

3.7 Second-order fluctuation splitting, uniform advection 46 

3.8 Second-order DMFDSFV, uniform advection 46 

3.9 Second-order fluctuation splitting with compressive limiter 47 

3.10 Fluctuation splitting on unstructured mesh 48 

3.11 DMFDSFV on unstructured mesh 48 

3.12 Fluctuation splitting, circular advection 49 

3.13 DMFDSFV, circular advection 49 

3.14 Fluctuation splitting on unstructured mesh, circular advection 51 

3.15 DMFDSFV on unstructured mesh, circular advection 51 

3.16 Fluctuation splitting. Burgers equation 52 

3.17 DMFDSFV, Burgers equation 52 

3.18 Fluctuation splitting. Burgers equation, absolute error 54 

3.19 DMFDSFV, Burgers equation, absolute error 54 

xii 



3.20 Fluctuation splitting, Burgers equation, symmetric mesh 55 

3.21 DMFDSFV, Burgers equation, symmetric mesh 55 

3.22 Fluctuation splitting. Burgers equation, absolute error 56 

3.23 DMFDSFV, Burgers equation, absolute error 56 

3.24 Fluctuation splitting. Burgers equation, unstructured mesh 57 

3.25 DMFDSFV, Burgers equation, unstructured mesh 57 

3.26 Pure-diffusion problem error, diffusion terms from Eqn. 3.45 62 

3.27 Pure-diffusion problem error, diffusion terms from Eqn. 3.51 62 

3.28 Heat equation solution using finite element formulation 63 

3.29 Fluctuation splitting profiles on finest mesh, advection-diffusion prob- 
lem 65 

3.30 Fluctuation splitting grid convergence, advection-diffusion problem. . 66 

3.31 Fluctuation splitting and DMFDSFV for advection-diffusion problem. 66 

3.32 Convergence histories for advection-dift'usion problem 67 

3.33 Advection-diffusion results using Van Albada limiter 68 

3.34 Convergence rates using first- and second-order positivity coefficients. 69 

4.1 Edge swapping schematic 73 

4.2 Initial, poorly aligned mesh and solution 74 

4.3 First edge swap, with improved solution 75 

4.4 Second edge swap, with small solution improvement 75 

4.5 Reduction from 6 to 3 edges connected to node 76 

4.6 Four edges are the minimum that must be connected to node 0. . . . 76 

4.7 Schematic of node deletion 77 

4.8 Schematic of boundary node deletion 77 

4.9 Before point deletion 78 

4.10 After point deletion 78 

4.11 After point insertion 79 

4.12 After nodal displacements 80 

4.13 Starting mesh and converged solution, A = (1, 1) 82 

4.14 Adapted mesh with greatly improved solution 82 

4.15 Starting mesh and converged solution, A = (y, —x) 84 

xiii 



4.16 Converged DMFDSFV solution and mesh after three mesh adaption 
cycles, A = (y, —x) 84 

4.17 Optimal mesh and diffusion-free solution, fluctuation splitting, A = (1, 1). 87 

4.18 DMFDSFV solution on optimal mesh, A = (1,1) 87 

4.19 Fluctuation splitting optimal grid and solution, A = (y, —x) 88 

4.20 DMFDSFV solution on optimal mesh, A = (y, -x) 88 

4.21 Edge swap options for linear advection with fluctuation splitting. . . 89 

4.22 Starting mesh and converged fluctuation splitting solution, A = (1, 1). 91 

4.23 Exact solution obtained by fluctuation splitting after one edge swap 
cycle, A = (1,1) 91 

4.24 Starting mesh and solution for demonstrating fluctuation splitting node 
movement schemes 99 

4.25 Mesh and solution after four flxed-point mesh adaptions with fluctua- 
tion splitting 99 

4.26 Mesh and solution after four diagonal Newton mesh adaptions with 
fluctuation splitting 100 

4.27 Mesh and solution for circular advection problem after a single mesh 
adaption cycle with fluctuation splitting 102 

4.28 Initial mesh and DMFDSFV solution for non-linear advection case. . 103 

4.29 Mesh and DMFDSFV solution after three adaption cycles, non-linear 
advection case 104 

4.30 Mesh and fluctuation splitting solution after three adaption cycles, 
non-linear advection case 104 

4.31 Fluctuation splitting solution on curvature-clustering mesh 106 

5.1 Subdivision of triangular element into three quadrilateral integration 
areas 115 

5.2 Weak implementation of flnite volume boundary condition for node 0, 
imposed by specifying external state 127 

5.3 Weak implementation of fluctuation splitting boundary condition, im- 
posed by specifying external state at ghost nodes /o, /i 128 

5.4 Sample randomly distorted mesh used for solver verification cases. . . 133 

xiv 



5.5 Description of converging Mach stream problem. Flow from left to 
right, with oblique shocks, solid, and slip-line, dashed, emanating from 
trailing edge of splitter plate 134 

5.6 16 X 16 mesh for converging Mach streams 135 

5.7 Mach contours from fluctuation splitting on finest mesh 136 

5.8 Grid convergence rates for converging Mach stream case 136 

5.9 Convergence histories for converging Mach stream case 137 

5.10 Grid for diamond airfoil verification test 138 

5.11 Mach contours on diamond airfoil, M = 1.5, fluctuation splitting solu- 
tion 138 

5.12 Two-dimensional 10 percent circular bump mesh with isobars from 
fluctuation splitting solution at Mach 0.1 139 

5.13 Boundary layer profiles of tangential velocity extracted from three sta- 
tions on flat plate 141 

5.14 Boundary layer profiles computed using two diflerent viscous dual mesh 
definitions 142 

5.15 Boundary layer profiles of vertical velocity extracted from midpoint of 

flat plate 143 

5.16 Artificial dissipation production in the y-momentum equation 144 

5.17 Skin friction coefficients for Blasius flow 146 

5.18 Effect of viscous modeling on skin friction 147 

5.19 Hypersonic cylinder domain with fluctuation splitting solution 148 

5.20 Cylinder surface pressures 149 

5.21 Cylinder surface pressures on coarsened mesh 149 

5.22 Cylinder surface heat-transfer rates 150 

5.23 Cylinder surface heat-transfer rates 151 

6.1 Computational domain for axis3^mmetric Mars Pathflnder capsule. . . 160 

6.2 Axisymmetric capsule benchmark surface pressures 162 

6.3 Axisymmetric capsule benchmark surface heating 163 

6.4 Two-dimensional capsule benchmark surface pressures 164 

6.5 Two-dimensional capsule benchmark surface heating 165 

XV 



6.6 Fluctuation splitting K-velocity contours, showing carbuncle formation 

for two-dimensional capsule case 167 

6.7 Fluctuation splitting u- velocity contours for two-dimensional capsule 
case 168 

6.8 Incorrect forebody heating trend, two-dimensional fluctuation splitting. 169 

6.9 Stagnation point vortex 169 

6.10 Correct streamlines in stagnation region 170 

6.11 Two-dimensional capsule surface pressures: i-refinement with DMFDS- 



FV. 



171 



6.12 Two-dimensional capsule surface heating: i-refinement with DMFDSFV.172 

6.13 Two-dimensional capsule surface pressures: z-refinement with fluctua- 
tion splitting 173 

6.14 Two-dimensional capsule surface heating: i-reflnement with fluctuation 
splitting 174 

6.15 Two-dimensional capsule surface pressures: j-reflnement with DM- 
FDSFV 176 

6.16 Two-dimensional capsule surface heating: j-reflnement with DMFDSFV.177 

6.17 Two-dimensional capsule surface pressures: j-reflnement with fluctua- 
tion splitting 178 

6.18 Two-dimensional capsule surface heating: j-reflnement with fluctua- 
tion splitting 180 

6.19 Two-dimensional baseline capsule surface pressures 181 

6.20 Two-dimensional baseline capsule surface heating 182 

6.21 Axisymmetric capsule surface pressures: i-reflnement with DMFDSFV. 184 

6.22 Axisymmetric capsule surface heating: i-refinement with DMFDSFV. 185 

6.23 Axisymmetric capsule surface pressures: i-refinement with fluctuation 
splitting 186 

6.24 Axisymmetric capsule surface heating: i-reflnement with fluctuation 
splitting 188 

6.25 Axisymmetric capsule surface pressures: j-reflnement with DMFDSFV. 189 

6.26 Axisymmetric capsule surface heating: j-reflnement with DMFDSFV. 190 



xvi 



6.27 Axisymmetric capsule surface pressures: j-refinement with fluctuation 
splitting 191 

6.28 Axisymmetric capsule surface heating: j-reflnement with fluctuation 
splitting 192 

6.29 Axisymmetric baseline capsule surface pressures 194 

6.30 Axisymmetric baseline capsule surface heating 195 

6.31 Two-dimensional capsule surface heating after coarsening with curva- 
ture clustering 196 

6.32 Two-dimensional capsule surface heating after coarsening with fluctu- 
ation minimization 197 

6.33 Loss of shock capture due to coarsening, fluctuation splitting 198 

6.34 Two-dimensional capsule surface heating after swapping with curvature 
clustering 199 

6.35 Fluctuation splitting shock bulging at stagnation point after edge swaps, 
pressure contours 200 

6.36 Nodal displacements at shock using curvature clustering, original mesh 
shaded 201 

6.37 Two-dimensional capsule surface heating after moving with curvature 
clustering 202 

6.38 Two-dimensional capsule surface heating after moving with fluctuation 
minimization 203 

6.39 Windside vortices produced by fluctuation minimization nodal dis- 
placements 204 

6.40 Two-dimensional capsule surface heating after point insertion with cur- 
vature clustering 205 

6.41 Two-dimensional capsule surface heating after point insertion with fluc- 
tuation minimization 206 

6.42 Two-dimensional capsule surface heating after full adaption cycle with 
curvature clustering 208 

6.43 Two-dimensional capsule surface heating after full adaption cycle with 
fluctuation minimization 209 



xvn 



6.44 Coarsened axisymmetric mesh using fluctuation minimization 210 

6.45 Axisymmetric capsule surface heating after edge swapping with curva- 
ture clustering 211 

6.46 Axisymmetric capsule surface heating after edge swapping with fluc- 
tuation minimization 212 

6.47 Shock kinked in toward stagnation point at the x-axis after axisym- 
metric edge swapping with fluctuation minimization, velocity contours. 213 

6.48 Axisymmetric capsule surface heating after nodal displacements with 
curvature clustering 214 

6.49 Axisymmetric capsule surface heating after nodal displacements with 
fluctuation minimization 215 

6.50 Axisymmetric capsule surface heating after point insertion with curva- 
ture clustering 217 

6.51 Axisymmetric capsule surface heating after point insertion with fluc- 
tuation minimization 218 

6.52 Axisymmetric capsule surface heating after full adaption cycle with 
curvature clustering 219 

6.53 Axisymmetric capsule surface heating after full adaption cycle with 
fluctuation minimization 221 

C.l Subdivision of triangular element into three quadrilateral integration 

areas 244 



xvni 



Nomenclature 



Geometric and independent variables 

i,j Computational indices 

i, j, k Cartesian unit vectors 

J~^ Inverse Jacobian of the coordinate transformation 

Lj-ef Non-dimensionalizing reference length 

i Edge or element length 

n Outward normal vector 

r Distance vector 

S Generalized volume 

t Time 

X, y, z Cartesian coordinates, normalized by L^ef 

r Perimeter of generalized control volume 

(, 7] Curvilinear coordinates, normalized by L^e/ 

zu Axisymmetric logical flag, tu = 0, 1 

zUa Axisymmetric flag function, zUa = I — zu + wy 

Vt Generalized integration volume 

Dependent variables 

A Flux Jacobian in conservative variables 

A Flux Jacobian in auxiliary variables 

a Sound speed 

Cp Pressure coefficient 



XIX 



c 


Nodal update coefficients 


Cp 


Specific heat at constant pressure 


Cv 


Specific heat at constant volume 


E 


Total energy 


Ej. 


Error estimate 


e 


Internal energy 


F 


Flux function 


f 


Numerical flux 


H 


Total enthalpy 


h 


Specific enthalpy 


M 


Subsonic or supersonic matrix dissipation 


M 


Mach number 


P 


Pressure 


q 


Heat flow 


R 


Area-weighted residual 


s 


First Riemann variable: ds = dp — \dP 


T 


Temperature 


U 


Conserved variables 


u, v,w 


Cartesian velocities 


V 


Velocity 


V 


Primitive variables 


V 


Projected velocity 


w 


Auxiliary variables 


X 


Matrix of right eigenvectors 


X 


Right eigenvectors in auxiliary variables 


z 


Parameter vector 


a,/3 


Curvilinear advection speeds 


K 


Thermal conductivity 


A 


Wavespeed 


A 


Eigenvalue matrix 


ji 


Coefficient of viscosity 



XX 



p Density 

T Stress tensor 

T Objective functional related to RMS of fluctuations 

$ Artificial dissipation function 

(f) Elemental fluctuation 

(p Fluctuation of auxiliary variables formulation 

(})' Elemental artificial dissipation 

(})' Artificial dissipation in auxiliary variables formulation 

(p* Limited fluctuation 

Auxiliary symbols 

D Diagonal matrix 

/ Identity matrix 

M^ Symmetric averaging function 

Pr Prandtl number, Pr{?aY) = 0.72 

p, q Arguments of limiter 

Q Fluctuation ratio 

Re Reynolds number 

5R Gas constant, 5R(air) = 287 J/(kg-K) 

7 Ratio of specific heats, 7(diatomic) = 1.4 

e Eigenvalue limiting parameter 

£ Limiter parameter 

S Weight-factor matrix for fluctuation minimization 

V Finite element shape function 
ip Limiter function 

Operators 

V Gradient 

V^ Laplacian, V^ = V • V 

A Forward difference, A^x = Xj+i — x. 



xxi 



V Backward difference, VjX = Xi — Xi_i 

5 Central difference, SiX = |(xi+i — Xj_i) 

5'^ Second central difference, d'fx = AV^x = VAjX = x^+i — 2xi + Xi-i 

(-ijk Cyclic-permutation summation 



Acronyms 

COE Contributions from other elements 

DMFDSFV Dual mesh ffux difference splitting finite volume 

LHS Left-hand side 

RHS Right-hand side 

RMS Root mean square 

Subscripts 

E Element 

L Left-hand state 

R Right-hand state 

T Triangle 

U Upwind 

2U Second-order upwind 

oo Reference values (typically equal to freestream values) 

Stagnation value 

Superscripts 

i Inviscid 

n Iteration level 

suh Subsonic 

sup Supersonic 

V Viscous 

x,y,z Cartesian component of a vector or tensor 

^, Tj Component associated with a curvilinear edge 



xxn 



Over-bars are used to represent average values. Vector S3^mbols indicate vectors 
spanning multiple spatial dimensions. Bold face is used for vectors and tensors of 
systems. Subscripts of independent variables are short-hand for differentiation. Hats 
denote unit vectors. Tildes denote Roe-averaged quantities. 



xxm 



XXIV 



Chapter 1 



Introduction 



1.1 Objective 

The present dissertation seeks to develop a next-generation numerical aerothermody- 
namic predictive capability. High-fidelity howfield solutions are sought with increased 
accuracy and reduced analysis time, especially with respect to configuration changes. 
This is an effort to push the state of the art for aerothermodynamic analysis capability 
closer to being a usable tool for vehicle designers. 

Speciffcally, the multi-dimensional upwinding concepts of Sidilkover[l, 2, 3] as 
applied to the Euler equations of inviscid, perfect gas flows are incorporated into a 
consistent treatment of viscous and heating terms to solve the Navier-Stokes equa- 
tions of gas dynamics. A detailed analysis of the base algorithm is performed and 
applications to several validation cases are conducted. Also, aggressive unstructured 
mesh-adaption strategies are investigated in conjunction with the fluctuation splitting 
scheme. 

1.2 Motivation 

Current proposals for future United States access-to-space systems incorporate reus- 
able trans-atmospheric flight vehicles, performing a role similar to the space shuttle 
orbiter, seeking to minimize recurring costs. For efficient design and operation of these 



2 CHAPTER 1. INTRODUCTION 

vehicles aerothermodynamic performance predictions are required to high accurac}^ 
and in a timely fashion. 

The current computational capability to provide these aerothermodynamic per- 
formance predictions for complex vehicles is severely limited by total solution times, 
which include both domain discretization and flowfield evolution, measured in months. 
In order for high-fidelity aerothermodynamic predictive tools to play an active role 
in the design phase a leap in responsiveness must be made over the current state of 
the art methods, represented by dimensionally-split approximate Riemann solvers. 

An effective numerical aerothermodynamic predictive tool must be able to provide 
rapid analysis of vehicle aerodynamics and control surface effectiveness. To do so 
flowfield features, such as embedded shocks, shear layers, and boundary la3^ers, must 
be accurately modeled and solution domains must be easily generated for complex 
shapes, allowing rapid re-calculation with respect to geometry changes. 

The emphasis in aerothermodynamics on heat transfer and high-speed flows pro- 
vides additional challenges with regard to the accurate resolution of boundary layers, 
loss of accuracy with highly-stretched meshes, and convergence slowdowns associated 
with a disparity in information speeds between nearly stagnated boundary layer flow 
and hypersonic shock layers. 

To make the next generation of computational aerothermodynamic predictive tools 
responsive to the design phase a truly multi-dimensional, robust Navier-Stokes solver 
based on general unstructured domains is required. Advanced, aggressive conver- 
gence acceleration methods and the exploitation of distributed or massively parallel 
architectures are mandatory. 



1.3 Background 

1.3.1 Fluid Dynamics Algorithms 

The twin goals of improving both accuracy and efficiency have long been objectives of 
the computational fluid dynamics developers. Accuracy is typically addressed through 
the spatial discretization, with the Van Leer 'Ultimate' series of papers[4, 5] being a 



1.3. BACKGROUND 



driving force throughout the 1970's. In the domain of hypersonic appUcations, effi- 
ciency has been improved through the temporal discretization, with MacCormack's 
work standing out on exphcit predictor/corrector [6], imphcit line Gauss-Seidel[7, 8], 
and approximate factorization schemes[9], along with a notable extension by Can- 
dler to the LU-SGS scheme[10]. Several industrial solvers, such as GASP[11], have 
emerged from this finite volume legacy, such as the successful CFL3D code[12]. 

In his landmark paper, Roe[13], building on the work of Godunov[14], introduced 
an upwind, approximate- Riemann-problem solution technique for the one-dimensional 
Euler equations. The Roe scheme has been extended on structured meshes to multiple 
dimensions by decomposing the domain into locally one-dimensional problems aligned 
with the computational coordinates. Viscous terms have been incorporated and in a 
decade's time the structured Roe scheme^ for Navier-Stokes equations set the standard 
for continuum aerothermodynamics[15, 16, 17, 18]. 

Unstructured schemes have since been developed, seeking both much greater flex- 
ibility for complex geometries and a reduction in preferential solution directions 
aligned with computational coordinates. Notable contributions for the unstructured 
Roe schemes have been made by Barth[19, 20, 21, 22] and Whitaker[23, 24]. These 
approaches, however, still rely upon a locally one-dimensional, dimensionally-split 
algorithm at cell faces. 

A different tack has been taken by Fey[25, 26], who has advocated the method of 
transport for a true multi-dimensional treatment of the Euler equations. This method 
is more an extension of flux vector splitting concepts, an approach known to be more 
dissipative than flux difference splitting[17]. 

The advent of multi-dimensional linear advection schemes, termed ffuctuation 
splitting[27, 28, 29, 30, 31, 32], induced Roe to revisit his one-dimensional scheme. 
The ffuctuation splitting formulation is based on an unstructured triangulation and 
is local to each cell, suitable for application on massively parallel computers. A 
two-dimensional analog to the Roe scheme for the Euler equations has been devel- 
oped based on characteristic wave decompositions[33, 34, 35, 36, 37, 38, 39, 40, 41]. 
Unfortunately, these wave decomposition schemes have been of limited robustness 



^Includes extensions of the base Roe scheme to higher-order accurate discretizations. 



4 CHAPTER 1. INTRODUCTION 

and have not reached their full potential. Applications have also been made to the 
shallow- water equations[42]. 

Taking the wave decomposition idea to the extreme, some authors have applied 
fluctuation splitting to Boltzmann schemes for the Euler equations[43, 44, 45, 46]. 
These gas kinetic schemes are very expensive to run and show very modest improve- 
ments over dimensionally-split finite volume [47]. 

Diffusion terms have been incorporated into scalar fluctuation splitting schemes[21, 
48] and viscous terms have been added to the wave-decomposition models to solve 
Navier-Stokes problems[49, 50, 51, 52]. While the Galerkin approach to viscous terms 
appears compatible with fluctuation splitting for convective terms, these schemes suf- 
fer from a lack of robustness. Carette[51] states, "However, this scheme is not sat- 
isfactory at present in terms of robustness and convergence, and improvements in 
this respect is still subject [sic\ of current research." Even for the classical flat plate 
boundary layer problem Tomaich[50] reports, "...the agreement with the Blasius 
solution is rather poor." 

Sidilkover, who along with Roe established a strong link between fluctuation split- 
ting and upwind flux difference splitting flnite volume [3], has proposed an alternative 
multi-dimensional treatment of the Euler system [1, 2]. Rather than performing a 
wave decomposition to decouple the Euler equations, Sidilkover employs fluctuation 
splitting to treat the system of equations as a whole unit. In doing so he has been 
able to apply efficient multigrid[53, 54, 55] solution strategies to shock reflection and 
channel flow problems. Advantages of Sidilkover's method for the Euler equations in- 
clude: arbitrary triangulations, stability of Gauss-Seidel relaxation on high resolution 
discretization, compact stencil, second-order accuracy, and rotationally invariant ar- 
tificial dissipation. Among these, Sidilkover[55] claims, "The fundamental advantage 
of this approach is that it leads to a scheme that combines high-resolution and good 
stability properties." 

Sidilkover's fluctuation splitting scheme for the Euler equations has the promise 
to satisfy many of the cutting-edge aerodynamic requirements. It provides a truly 
multi-dimensional treatment of the governing system of equations in an unstructured. 



1.3. BACKGROUND 5 

compact, high-order algorithm suitable to distributed and massively parallel compu- 
tation. Being stable with respect to Gauss-Seidel relaxation, as opposed to Runge- 
Kutta[56] marching, opens the possibility of greatly improved multigrid convergence 
rates. Robustness appears to be improved relative to the wave decomposition models. 
What is lacking from the scheme to be an aerothermodynamic tool are the exten- 
sion to the Navier-Stokes equations, rigorous evaluation of robustness and accuracy 
relative to finite volume schemes on complex geometries, analysis of the effect of grid 
stretching, and critical determination of the accuracy and efficiency for heat transfer 
and skin friction calculations. 

1.3.2 Mesh Adaption Strategies 

Solution adaptive remeshing techniques have been utilized with some success for hy- 
personic flows on structured domains. A simple, effective approach developed by 
Gnofib[57] utilizes a spring analogy energy minimization to align the bow shock and 
cluster to the boundary layer. This approach works very well for entry forebodies, for 
which it was developed, but is more difficult to apply to complex vehicle shapes. The 
method also is unresponsive to embedded shocks or other shock-la3^er flow features. 

Harvey[58, 59, 60] has developed a mesh adaption technique that is sensitive to 
shock-la3^er features to obtain parabolized Navier-Stokes solutions over simple config- 
urations, e.g. cones, using a spring analogy based on Gnoffb's work. Unfortunately, 
defining relative clustering strengths for various flow features proved difficult, and a 
damaging lack of robustness is shown for three-dimensional leeside flowflelds[59]. 

Mesh adaption on unstructured domains ofl'ers a signiflcant benefit over structured 
mesh adaption — the ability to insert and delete nodes. Much of the research in this 
area has gone into global remeshing using isotropic cells[61, 62, 63, 64, 65, 66, 67]. 
Grids composed of (nearly) isotropic cells quickly become prohibitively large for hy- 
personic applications, where the capture of essentially one-dimensional flow features, 
such as shocks, results in refinement in all three dimensions. These methods typically 
employ gradient clustering, using a second derivative check on some or all of the de- 
pendent variables to define clustering strengths. This sort of clustering is intended 



CHAPTER 1. INTRODUCTION 



-•-•- 



• • 



Figure 1.1: Pictorial of "ideal" mesh for shock discontinuity (left) and mesh resulting 
from gradient based clustering (right). 



to reduce the interpolation error in a piecewise-linear data representation[68, 69], but 
is not necessarily driven by the flow physics, and can lead to excessive clustering or 
conflicting requirements in certain regions, such as a bow shock or stagnation point. 
Figure 1.1 presents an illustrative pictorial based on the results of Ait-Ali-Yahia[70] 
et al, where 18 cells were driven into the bow shock by gradient based clustering. A 
shock is pictured on the left side of the figure with an ideal mesh for a three-point 
stencil. On the right side is a mesh typically produced by gradient-based cluster- 
ing, which gathers more points in the vicinity of the discontinuity without providing 
sharper resolution. 

More recently, impressive results using anisotropic elements have been reported 
by Habashi[71, 72, 73, 74, 75, 76] et al. With that approach, all grid adaptions 
are local operations, as opposed to global remeshings. Highly-stretched elements are 
obtained, achieved by equating the interpolation error along each edge, again using 
a spring analogy minimization. The clustering is still driven by second derivatives in 
the solution. 

Roe [32, 77] has applied the concept of performing global mesh adaption via lo- 
cal node movements to a scalar advection problem using fluctuation splitting. His 
analysis reveals that a characteristic mesh results, with far fewer points required than 
gradient based clustering would imply. His method is based on the minimization of an 
objective function formed by taking derivatives of the fluctuation splitting scheme. A 
diff'erentiable high-resolution linear scheme, which cannot be monotonic[56], is chosen. 



1.4. COURSE OF ACTION 7 

For a complex fiowfield or for systems of equations it may not be possible to achieve 
a perfectly-aligned characteristic mesh, in which case the non-monotonic propert}^ 
would most likely be detrimental or even fatal to the solution. It is not clear how 
to extend the differentiability requirement to a high-resolution, non-linear monotonic 
scheme. 

Another attempt at mesh alignment has been performed by Trepanier[78] et al. 
While their scheme is unresponsive to characteristic lines, a wave decomposition model 
is used with an inviscid cell-centered finite volume solver to produce shock alignment 
of unstructured isotropic cells. Less success was demonstrated for shear alignment. 
One drawback of the method is the need to explicitly detect and classify flow features, 
which could hinder the extension to three dimensions. Similarly, Parikh[79] et al. use 
a wave decomposition in conjunction with a cell-centered finite volume solver to drive 
edge alignment, but with automated general feature detection. Unfortunately, their 
approach was able to provide only extremely modest benefits, in part because there 
was no mechanism for providing cell stretching. 

1.4 Course of Action 

A systematic approach to developing new methods is pursued. Current leading-edge 
technology is embraced and developed into a complete gas dynamics solver, applicable 
to reentry vehicles across their speed range. Throughout, the scientific method is 
followed, where new schemes are critically evaluated against the current state of the 
art. 

One-dimensional scalar advection is considered first, where the common ancestry 
of the upwind finite volume and fluctuation splitting paradigms is presented. Exten- 
sion to the incorporation of diffusive terms is presented, followed by the treatment 
of systems, for both the Euler and Navier-Stokes equations. The chapter culminates 
with the current state of the art in dimensionally-split schemes. Fluctuation splitting 
provides an identical discretization in one dimension. 

Two-dimensional scalar advection on unstructured domains is addressed next. The 
methodology for applying the dimensionally-split concepts in multiple dimensions is 



8 CHAPTER 1. INTRODUCTION 

shown. The different approach of ffuctuation splitting is highlighted, providing a truly 
multi-dimensional treatment. A critical comparison between the upwind hnite volume 
and fluctuation splitting schemes for scalar equations is performed. The extension 
to diffusive problems is developed, with emphasis placed on consistent incorporation 
into the fluctuation splitting framework while still maintaining formal second-order 
accurac}^. 

Novel concepts for mesh adaption are developed analytically for two-dimensional 
scalar problems, based on the physics of the solution rather than gradient-based 
clustering. Emphasis is placed on concepts that can be extended to systems. Demon- 
strations for simple basic problems and more challenging advection-diff'usion problems 
are performed. 

Systems in two dimensions are formulated for the Navier-Stokes equations, rep- 
resenting the crux of the development of the fluctuation splitting concepts. The 
treatment follows the lead of Sidilkover in treating the system as a cohesive unit, 
in contrast to the wave-model simplifications of Roe and Deconinck. Specialization 
to axisymmetric equations of fluid motion provide useful applications and consistent 
treatment of source terms. 

The mesh adaption strategies developed for scalar equations are reformulated for 
the fluid dynamics systems. The resolution of flowfield features is addressed, along 
with robustness and convergence of the adaption process. An automatic refinement 
procedure is sought whereby the solution is converged uniformly with mesh density. 

A critical aerothermodynamic evaluation of the fluctuation splitting algorithm and 
mesh adaption strategies are performed using the primary case of an entry capsule 
at Mach-10 wind tunnel conditions, for which prior experimental and computational 
data exists. 



Chapter 2 
One-Dimensional Analysis 



The current state of the art for solving the compressible Navier-Stokes equations, 
namely upwind flux-difference-split finite volume schemes, is developed on non-uni- 
form meshes in one spatial dimension. Upwind flux difference splitting, in particular 
the Roe scheme[13, 80], is considered the most accurate scheme for compressible 
Navier-Stokes applications[f7, f8], primarily because of the low levels of artificial 
dissipation introduced through the matrix dissipation model. The particular finite 
volume scheme considered in this dissertation can be described as node-based, median- 
dual mesh upwind Roe flux difference splitting finite volume with limited multi-di- 
mensional reconstruction, and will be abbreviated as DMFDSFV, for dual mesh flux 
difference splitting finite volume, throughout. 

The sections in this chapter progress from scalar advection to diffusion and then 
to combined advection-diffusion. Treatment of scalar equations is followed by the 
Euler and Navier-Stokes systems of equations. The fluctuation splitting approach is 
developed in parallel with the DMFDSFV analysis, and is shown to result in identical 
discretizations in one dimension. 

This chapter has a threefold purpose: to introduce DMFDSFV and fluctuation 
splitting basics, to develop the state of the art for the locally one-dimensional approx- 
imate Riemann solver used in the hnite volume algorithms, and to serve as a prelude 
for the multi-dimensional analyses, where fluctuation splitting offers new capability 
over the DMFDSFV extensions. 

9 



10 



CHAPTER 2. ONE-DIMENSIONAL ANALYSIS 



Linear data 
representation 



X-QiKlS 



i + 



i + 1 
(boundary) 



i + 2 
(ghost) 



Control volumes 
and centroids 

Nodes 



Figure 2.1: One-dimensional finite volume domain. 



2.1 Domain 



In one dimension the domain considered is a discretization of the .x-axis, either with 
uniform or non-uniform spacing between grid nodes, which are indexed by i. Depen- 
dent variables are stored at the nodes. 

In the node-based finite volume context a median-dual control volume is con- 
structed about each node by defining a cell face halfway between adjacent nodes. 
This convention is depicted in Figure 2.1, with the cell faces referred to as the ±| 
points. In the illustrative case of Figure 2.1, the i + 1 node is a boundary point, and 
the corresponding cell extends only from i -I- ^ to i -I- 1. The generalized volume of 
the median-dual cell is formed as x^^i — Xj_i for interior nodes or x^+i — x^^i for 
the boundary point shown in Figure 2.1. If the solution at the boundary nodes is 
specified, then there are two fewer interior finite volumes to solve than the number 
of nodes. If the boundary nodes are updated by the interior scheme, then there is 
a one-to-one correspondence between the nodes and control volumes, plus two addi- 
tional numerical boundary conditions, which may be implemented with ghost nodes 
{i + 2 in Figure 2.1) or specified boundary fiuxes. If the ghost node is used, it can be 
located co-incident with the physical boundary node, and does not need to have an 
associated control volume. A ghost node co-located with the physical boundary node. 



2.1. DOMAIN 



11 



Linear data 
representation 



« + 



i + l 
(boundary) 



x-axis 



Domain elements 
and centroids 

Nodes 



Figure 2.2: One-dimensional fluctuation splitting domain. 



without an associated control volume extends more easily to multiple dimensions with 
unstructured grids than would a formulation based upon physically locating the ghost 
node. 

Notice that for the nodal distribution depicted, which has non-uniform spac- 
ing, the cell centroids, denoted by x in Figure 2.1, do not coincide with the nodes. 
Barth[22] states that nodal storage in this case, referred to as mass lumping in a 
finite element context, only alters the time accuracy of finite volume schemes, and 
not the steady state solutions. In the present dissertation unsteady problems will 
employ uniform grids, though stationary problems are free to use non-uniform node 
distributions.^ 

Notice also the piecewise-linear representation of data in the finite volume context. 
Discontinuous jumps in the dependent data are allowed at cell faces. 

Figure 2.2 depicts the discretization of the domain for the fluctuation splitting 
approach. The data is now continuous and piecewise linear over elements defined 
by the nodes. The centroids of the fluctuation splitting elements are at the same 
locations as the faces of the finite volume cells. No special definition of a boundary 



^The use of uniform meshes to avoid degradation of time accuracy due to mass lumping is done for 
convenience. It is possible to compute cell centroids and use that location in calculations involving 
cell distances. Conversely, a cell-centered, rather than node based, data storage structure could be 
adopted for the finite volume discretization. 



12 CHAPTER 2. ONE-DIMENSIONAL ANALYSIS 

cell is required. The length of an element is, 

li^i+i = Xi+i - Xi = AiX (2.1) 

There are one fewer elements than nodes, and each element is associated with two 
nodes. Correspondingly, each interior node is associated with two elements, while 
each boundary node is associated with only one element. 

The data structure for fluctuation splitting shown in Figure 2.2 resembles a cell- 
centered finite volume layout, with a key difference that cell-centered finite volume 
stores the solution at cell centers, as opposed to at the nodes for fluctuation splitting. 
Additionally, it is emphasized that the fluctuation splitting data is C-0 continuous 
whereas cell-centered finite volume would have discontinuous jumps in the data at 
the cell interfaces. 

2.2 Scalar Advection 

A hyperbolic conservation law takes the form, 

Ut + V • F =0 (2.2) 

where U is the vector of conserved variables and F is the flux^ of these variables. 
Following Godunov[14], Eqn. 2.2 can be evaluated in an integral sense. 



Utdn =- V • F dn (2.3) 

n Jn 

If the control volume, 12, is fixed in time, then, 

Utdn =Sn\Jt (2.4) 



where the over-bar indicates a cell-average value. Using the divergence theorem the 
flux term can be evaluated as, 

V -Fdn = If-ndF (2.5) 

n Jt 



^The flux function F is a function of the dependent variables U, F = F(U). For some of the 
scalar cases F will also be a function of the independent variables, F = F{u, x, y). In such cases the 
flux will be in a variables-separable form, F = \(x,y)u. 



2.2. SCALAR ADVECTION 13 

where n is the outward unit normal to the control volume boundary, T. 

The one-dimensional scalar advection problem is obtained from Eqn. 2.2 as, 

ut + F, =0 (2.6) 

which can be written for a control cell as, 

SaUt = — F^ di} = Fieji face — Fright face (2-7) 

2.2.1 Linear Advection 

Linear advection is obtained from Eqn. 2.6 by choosing F = Xu. The advection speed, 
A, is taken to be constant. 

DMFDSFV 

Equation 2.7 is expressed for the finite volume about node i with mass lumping to 
the node as, 

Sm, = F^_i - i^+i - /,_! - /,+i = i?. (2.8) 

where the numerical flux, /, is a difference expression approximating the exact flux 
function, F. Choosing, 



Fi + Fi+i 
2 

results in a second-order central difference scheme 



/.+i = ^^^e^ (2.9) 



Ri = -5,F (2.10) 

The first-order upwind CIR[81] scheme is obtained by the choice, 

X+\\\ A-|A| ,^^^, 

Ui H — Ui+i (2.11) 



•"^2 2 ' 2 

_ Fj + Fj^i ^ |A 

2 2 

giving. 



■A,u (2.12) 



R, =-5,F+^-^d^u (2.13) 



14 CHAPTER 2. ONE-DIMENSIONAL ANALYSIS 



The first-order upwind is then seen to be the same as a central distribution plus an 
artificial dissipation term, 

*u = Y^lu (2.14) 

Second-order upwind is constructed following the MUSCL concept of Van Leer [5], 
where a linear reconstruction is performed on each finite volume. The numerical flux 
of Eqn. 2.11 is modified to be, 

/,+ i = -^—ul + -^—^R (2-15) 

where u\_ is the reconstructed conserved variable on the left side of the cell face and 
Mr is the reconstructed variable on the right side of the cell face. Following Barth[22], 
a limited reconstruction is performed on each cell as, 

Uface =Ui + ll)i{'^u)i ' Tface (2.16) 

The gradient is evaluated as a central difference, 

(Vu), = 1^ (2.17) 

The limiter function, ip, is employed to provide monotonicity of the solution, based 
upon positivity arguments. The limiter takes the form, 

, fP 

i) - 



where. 



V = — ^ — , q = (Vu), • r,±i 



The more restrictive of the ± choices is used for ip. Some popular limiters are pre- 
sented in appendix A. 

The discrete numerical flux (Eqn. 2.15) expands to, 

f h±\Mf _^iki+i, \ , A-|A| ( £,,,+, \ 

/,+ i = ^— U, + ^^Yg-^^Uj + ^— [Ui+l - ^i+l^^—^i+lU j (2.18) 

= ^ ^\u + ^p ( — (i,(F^A|M) - -^(),+i(F-|A|'u) 



2.2. SCALAR ADVECTION 



15 



leading to, 

R, = -S,F + $u + i?2u 

where the second-order correction is, 



(2.19) 



i?2u = ^-^(^S,.^{FMX\n)-^5,iF-\X\u 
-6i[FV\\\u) - - — 6i+i{F-\\\u 



4 V5,: 



S, 



+1 



(2.20) 



The residual (Eqn. 2.19) can be rearranged as, 
1 



Ri 



-kF 



h-U-T, — Fi-2 - ^i^iFt-i + ( ii,i+l- 



Si-i 



Si 



t.-u^ 1 F 



i+l 



Si-1 



+ 2'i/'iFi+i — ii,i+i— — Fi+2 



+ $ 



2U 



(2.21) 



where the artificial dissipation is now. 



$ 



2U 






i^: 



'i-1 



^Z 






, / /; '^'-1 , /; "^^+1^ '^i (I, I) \ 

'-'i+l 



(2.22) 



On a uniform grid and without limiting, the second-order residual (Eqn. 2.21) 
reduces to a low-truncation-error central difference minus fourth-order dissipation, 

Ri = s {-Fi-2 + QFi_i - 6Fi+i + Fi+2) + -5- {-ik-2 + 4m,-i - 6ui + 4u^+i - Ui+2) 

o o 

(2.23) 



Fluctuation splitting 

In the fluctuation splitting framework Eqn. 2.7 is evaluated over each domain element, 
without recourse to the divergence theorem. The element fluctuation is defined as. 



SnUt = 0E 



F^dn 



(2.24) 



16 CHAPTER 2. ONE-DIMENSIONAL ANALYSIS 



Assuming piecewise linear data, the fluctuation for the cell bounded by x, and x^+i 
is evaluated as, 

(/.,,,+i = -A / u, di = -£,,,+1 A-^ = -A,F (2.25) 

The elemental update, the LHS of Eqn. 2.24, is formed as, 

SnUt = it,i+i i '^^ j = -^Y^{u^^ + M,+iJ = (f)^^,+l (2.26) 

Partitioning the fluctuation into halves and distributing equally to the nodes yields 
the basic non-upwind elemental update formula, 

^— «*t=^— > -^u,+i, = ^- (2.20 

Assembling all the elemental contributions to the nodal updates, it is clear each 
interior node will receive fluctuation signals from the elements adjacent to the left 
and right. The nodal update is formed as the sum of these fluctuation contributions, 

^^U,, + ^—u,, = U,, = S,U,, = ^— + ^— (2.28) 



or, 

SzUit = ^ (2-29) 

A popular nomenclature convention for Eqns. 2.27 and 2.29 is to describe the elemen- 
tal distribution formula as, 

S^u^, ^ ^ + COE, 5,+iw,+i, ^ ^ + COE (2.30) 

where COE indicates a sum of similar contributions from other elements joining at 
that node. 

Expanding the nodal update formula (Eqn. 2.29), 

S^un = ~^'^~ ^'^ = -SzF (2.31) 

which is the identical central discretization as for DMFDSFV (Eqn. 2.10). 



2.2. SCALAR ADVECTION 17 



An upwind scheme can be constructed by introducing artificial dissipation in order 
to redistribute the fluctuation, 



(/)'e =sign(A)<^E (2.32) 

The upwind distribution formula becomes, 

5,., ^ ^^^^ + COE =^tlf±l^l^^sH^ + COE 

2 2 

5.,,..,,, ^ ^i±^ + COE = ^^M^+^^'S-W) + COE (2.33) 

Using the fluctuation definition (Eqn. 2.25) the nodal update is obtained as, 

which is identical to the first-order upwind discretization for DMFDSFV (Eqn. 2.13). 
A second-order scheme is easily obtained by adding the exact same DMFDSFV 
correction, i?2u (Eqn. 2.20), to the nodal update formula (Eqn. 2.34). 



2.2.2 Non-linear Advection 

Non-linear advection is obtained from Eqn. 2.6 by choosing the flux to be, 

F =- 
2 



(2.35) 



Define the Jacobian of the flux, 

A =Fu = u (2.36) 

so that, 

_d£_dF^du_ 

OX OU OX 

Equation 2.6 may be rearranged in non-conservation form, 

ut + F^ =ut + Au^ = {) (2.37) 



18 CHAPTER 2. ONE-DIMENSIONAL ANALYSIS 

DMFDSFV 

Following Roe[13], the analog to the numerical flux of Eqn. 2.15 becomes, 

/z+i = 2 ^^^ 2 ^^ 

= ^ —[UR-ui) (2.38) 

where A is the conservative linearization of the flux Jacobian, which in this case is, 

A..i = ^ (2.39) 

A first-order upwind scheme is obtained using piecewise-constant data, u\_ = Ui, and 
Mr = Ui+i. A second-order upwind scheme is constructed using the linear reconstruc- 
tion of Eqn. 2.16. The first-order residual may be written explicitly as, 

R, = -S,F + -^\u - —^^.u (2.40) 

Fluctuation splitting 

The elemental fluctuation is 

(j)^ =- F^dn = - Au^ dn (2.41) 

Jn Jn 

Assuming piecewise-linear data Eqn. 2.41 becomes, 

(pE = -A,+^A,u = -\F (2.42) 

An upwind scheme is created by introducing the artificial dissipation, 

(P'^ = sign(i,+ i)(/>E = -|i|,+ i A,u (2.43) 

The distribution formula remains, 

S.U., ^ ^i^ + COE 
S,+,u,+u ^ ^^^ + COE (2.44) 



2.3. SCALAR ADVECTION-DIFFUSION 19 



The nodal update is, 

^r^M, "2 + 2 

2 2 2 2 

= -5,F-^^\/,u + ^^\u (2.45) 

This is the identical update formula as for DMFDSFV (Eqn. 2.40). 

Expansion shocks 

The discretization of Roe's scheme allows for non-physical expansion shocks that 
violate the entropy condition. Harten and Hyman[82] proposed a commonly used 
method for perturbing the wavespeeds such that entropy is satisfied and expansion 
shocks are prevented. The correction is applied to any wavespeed that can go to zero 
at a sonic point and takes the form, 

where the perturbation scale is, 

e=max[o, (A,+i - A,), (A,+i - A,+i)] (2.47) 

2.3 Scalar Advection-DifFusion 

The governing equation for scalar advection-diffusion problems in one-dimension is, 

ut + Fx = {im^)x (2.48) 

2.3.1 Heat Equation 

Modeling of the viscous RHS in Eqn. 2.48 begins with a consideration of the heat 
equation, 

Ut = {pu^)x (2.49) 



20 CHAPTER 2. ONE-DIMENSIONAL ANALYSIS 

In the finite volume framework one approach to discretizing the viscous term is to 
construct a viscous flux, so that the nodal update becomes, 

SiU,, = (/iM^),+ i - iflu^),-i (2.50) 

where, 

/- X - (VM)i + iVu)^+l . . 

[^iu^),,+i =/i,+i ^ (2.51) 

with the gradients Vu defined by Eqn. 2.17. This approach leads to a five-point 
stencil. 

An alternative is to use a finite element discretization, which results in a three- 
point stencil. This approach is adopted both by Barth[22] and Anderson and Bon- 
haus[83] in a finite volume context and by Tomaich[50] in a fluctuation splitting 
context. 

A Galerkin finite element discretization, using mass lumping to the nodes, is 
constructed on the fluctuation splitting domain by integrating with the aid of the 
finite element linear shape function v (see Bickford §4.2.2[84] or Bathe §7.2[85]), 



SiUit = / Viipu^)^ dn (2.52) 

Integrating by parts, 

SiUi^ = Vt{fiu^)\l^l - I (yi)^{iiu^) dil (2.53) 

.In 

The shape function is the linear tent function, and is equal to zero at x^^i, eliminating 

the first RHS term of Eqn. 2.53. The remaining term is integrated over each element 

connecting at node z, 

E 

The dependent variable and shape function gradients are constant over the element, 
and taking the element-average viscosity coefficient the elemental contributions are, 

SiVdt ^ -ir—fli+k + COE 

St+iUi+i^ ^ -— ^— /i^+i -fCOE (2.55) 



yZ / ^xUxl-idn (2.54) 

17 Je 



2.4. SYSTEMS 21 

The nodal update is written, 

2.3.2 Combined Advection and Diffusion 

The combined effects of advection and diffusion in the governing equation (Eqn. 2.48) 
are treated by discretizing the advection terms as discussed in section 2.2 and adding 
the discretization of the diffusion terms of section 2.3.1. Recall, however, that the 
upwind advection discretization includes artificial dissipation, which can mask the 
physical dissipation. 

Perhaps the best approach for solving discretized advection-difl'usion problems, as 
suggested by Barth[21], is to include the maximum of either the physical diffusion 
term, as defined by Eqn. 2.51 or Eqn. 2.55, or the artificial dissipation, the second 
term of Eqn. 2.38 for DMFDSFV or ^ in Eqn. 2.43 for fluctuation splitting. 

2.4 Systems 

A hyperbolic conservation law for systems (Eqn. 2.2) is written in one dimension as, 

Ut + F, =0 (2.57) 

A decomposition of the flux function is sought such that the system can be expressed 
as a decoupled set of advection-diffusion equations. 

2.4.1 Euler Equations 

The one-dimensional Euler equations[86] for perfect gases, suitable for simulating 
non-reacting, low-Knudson-number shock-tube flows, are written as a conservation 
law (Eqn. 2.57) with, 

P 



U 



pu 
pE 



(2.58) 



22 



CHAPTER 2. ONE-DIMENSIONAL ANALYSIS 



(2.59) 



pu 
F = { pu^ + P 

puH 

The Euler equations have a form similar to the non-linear advection problem. 

The total energy and enthalpy are obtained from the internal energy and enthalpy, 

2 2 

The energy and enthalpy are related as, 

n = e-\ — 



The perfect gas equation of state is, 



P = pe(7 - 1) 



(2.60) 



DMFDSFV 

The numerical flux remains as in Eqn. 2.38, 

Fl + Fr |A| 



I 



i+i 



(Ur - Ul) 



(2.61) 



Roe[13, 80] constructs the conservative linearization for the |A|j^i matrix by intro- 
ducing the parameter vector. 



Z = y/p< u 

The i + I state is taken to be a linear average of the parameter vector, 

^ _Zl + Zr 

Taking the velocity and total enthalpy from the parameter vector, 



(2.62) 



Z2 

Zi 



H 



Z, 



(2.63) 



2.4. SYSTEMS 



23 



and defining the Roe-density, 





P = Vrpr 






(2.64) 


the Jacobian matrix is formed as, 








|A| =X|A|X- 


-1 




(2.65) 


The eigenvalues are. 








A = diag(M, u + a, 


u — a) 




(2.66) 


The right eigenvectors are, 








1 


1 




1 




X(i) ={ u \ X(2) = < 


u + a 


x(3) = < 


u — a 


(2.67) 


«2 

2 J 


H + ua 




H-ua 





The product X ^(Ur — Ul) results in the characteristic variables, 

2fi2 (ip - 2dP 



x-^(Ur-Ul) =x-Vu 



2a2 



dP + pa du 
dP — pa du 



The sound speed is. 



jP_ 
P 



7(7-l)e = (7-l)/^=(7-l)(^-^) 



Also note the grouping p du can be constructed as, 

pdu = ZidZ2 — Z2dZi 



(2.68) 



(2.69) 



(2.70) 



As for the scalar case, first-order spatial accuracy is obtained by taking the right 
state to be i -I- 1 and the left state at i. Higher-order accuracy is obtained using 
gradient reconstruction (Eqn. 2.16) applied either to each of the conserved variables 
(Eqn.2.58) or each of the primitive variables, which are. 



V 




(2.71) 



The nodal update is still formed as in Eqn. 2.8. The residual remains as expressed 
in Eqn. 2.40, but for systems rather than scalar quantities. 



24 



CHAPTER 2. ONE-DIMENSIONAL ANALYSIS 



Fluctuation splitting 

The Euler fiux (Eqn. 2.59) can be written in terms of the parameter vector, 

Z1Z2 

^ZiZs + ^^"2 

Z2Z3 



(2.72) 



Further, the derivative of the fiux is, 



dF 



Zo 



Zi 



rzlZs ^^Z2 2^Zi 

z. z. 



dZ 



(2.73) 



By assuming a linear variation of the parameter vector on each element, the 
fluctuation is obtained from Eqn. 2.41 as. 



F^dn 



FzZ, dn = -FzAiZ 



Deconinck[36] et al. show. 



FzA.Z = AA,U = A,F 



(2.74) 



(2.75) 



when the Roe-averaged forms (Eqns. 2.63 and 2.64) are used to obtain A. 
An upwind scheme is constructed b}^ adding the artificial dissipation. 



^E 



|AL-, iA,U 



(2.76) 



where |A| is defined in Eqn. 2.65. Employing the same distribution formula as for 
the scalar advection (Eqn. 2.44) leads to an update formula analogous to Eqn. 2.45, 
showing the equivalence between DMFDSFV and fluctuation splitting for the one- 
dimensional Euler equations. 

Before ending the fluctuation splitting discussion, it is desired to frame the arti- 
ficial dissipation in the form, 



(pE = sign(A,+ i)0i 



+ ±jyE 



(2.77) 



2.4. SYSTEMS 



25 



The difficulty lies in defining the matrix sign(A). One approach combines Eqns. 2.65, 
2.74, 2.75, 2.76, and 2.77 to form, 

sign(A)A =|A| = X|A|X-^ 

sign(A) =X|A|X-^A-i = X|A|A-^X-i (2.78) 

Sidilkover[l] offers an alternative to brute force matrix multiplications for evalu- 
ating Eqn. 2.78. Introduce the auxiliary variables, W, defined by the transformation. 



d\J =\JwdW 



where, 



dW 



with the first Riemann variable defined as. 



ds 
pdu 
dP 



ds = dp — 



The Jacobian of the transformation is, 



U 



w 



1 

u 1 

4 u 



1 I u 
7-1 ~'~ 2a2 



and its inverse is. 



^w 



i-(7-i)ij ii-m -(7-1)^. 

-u 1 

(7-1)^ -ij-l)u 7-1 

The element fluctuation (Eqn. 2.74) can be reworked, 

-Uw-U^iAUi,.U^^A,U 



4>E 



-AA,U 



-VwAA.W = U,4/(/)E 



where ^e is the fluctuation as computed for the auxiliary variables, 

^E = -^A,W 



(2.79) 



(2.80) 



(2.81) 



(2.82) 



(2.83) 



(2.84) 



(2.85) 



26 



CHAPTER 2. ONE-DIMENSIONAL ANALYSIS 



The flux Jacobian of the auxiliary variable formulation is obtained from the conserved 
flux Jacobian via the similarity transformation, 



A = U,l/AUw = U,l/XAX-iUw = XAX-^ 



>w-^^w 



'w 



(2.86) 



so the eigenvalue matrix, A (Eqn. 2.66), remains unaltered. The right eigenvectors 
are obtained from Eqns. 2.67 and 2.83, 







X 


= u,Vx 




1 


( \ 




A'(i) = < 


> 


A'(2) = <j a > 







a^ 

k < 


The inverse is easily computed to be. 






1 


X- 


-1 _ 


^ 2a 2a2 








n 1 1 

L U 2a 20? 



A'(3) 



(2.87) 



l«M 



(2. 



The flux Jacobian is evaluated from Eqn. 2.86, 



A 



M 
u 1 
a^ u 



(2.89) 



which corresponds to the following non-conservative form of the Euler equations. 



s^ + usj; =0 

put + upu^ + Pr =0 

Pt + a^pu^ + uP^ = 



(2.90) 



Having developed an alternative method for obtaining the elemental fluctuation 
(Eqn. 2.84), the artificial dissipation can be addressed (Eqn. 2.77). 



(/)£ = sign(A)0E = UwU^^sign(A)Ui^'(^E = ^w^'e 



(2.91) 



2.4. SYSTEMS 



27 



where, 

^'e = U^^sign(A)U,4^^E = sign(i)(^E (2.92) 

and with the aid of Eqns. 2.78 and 2.86, 

sign(^) = U^^sign(A)Uvv = U^iX|A|A-^X-^Ui^^ = X\A\A-^X-^ (2.93) 

Using the eigenvalue and eigenvector definitions (Eqns. 2.66, 2.87, and 2.88) sign{A) 
is evaluated to be, 

sign(^) : 



(2.94) 



sign^Mj 

I [s\gn{u+a) + s\gn{u — a)] ^ [sign(n+a) — sign(w, — a)] 
I [sign(M+a) — s\gn{u — a)] \ [sign({(+a) + sign('& — a)] 
By considering two cases, for subsonic and supersonic conditions, Eqn. 2.94 takes on 
simple forms, 

f M™^ if \u\ > a 

I M™'' if ImI < a 



sign(^) 



where. 



and. 



M 



sup 



M 



sub 



sign(u)/ 

sign(i() 
4 

a 

a 



(2.95) 
(2.96) 



(2.97) 



2.4.2 Navier-Stokes Equations 

The Navier-Stokes equations [87, 88] for the fiow of a perfect gas are written in one- 
dimensional conservation law form (Eqn. 2.57) with U defined in Eqn. 2.58 and the 
flux defined as, 

F = F' - F'' (2.98) 

where the inviscid flux, F*, is the same as the Euler flux (Eqn. 2.59). The viscous 
flux is, 

F" ={ r,, > (2.99) 

'^^xx Qx 



28 CHAPTER 2. ONE-DIMENSIONAL ANALYSIS 

Using Stokes' hypothesis the stress is, 

4 

Txx = ^I^Uj; (2.100) 

Fourier's law for heat flow gives, 

q. = -^n (2.101) 

The thermal conductivity is related to the viscosity through the Prandtl number, 

P, = ^ (2.102) 

where for air Pj. = 0.72[89]. The temperature is obtained from the perfect gas equation 
of state, 

T = -^ (2.103) 

The inviscid flux is discretized in the manner of section 2.4.1. The contributions 
from the viscous flux to the nodal update is obtained in a Galerkin sense using 
the system analog to Eqn. 2.54. No viscous contribution is made to the continuity 
equation. 

Using the linear variation of the parameter vector over an element, the velocity 
gradient is locally defined on an element [36, 34], 



Me =(-) = ^ - ^z^^ = ^ {\Z2 - uA,z^) = ^A,u = ^A,u (2.104) 

where, 

-2 / \/A + \/Pi+l ^ 



p = -z{ = ^ -l^-v^ j (2-105) 

is called the consistent density average. The viscous contribution to the momentum 
equation can now be expressed, 

4 4 _p 

-v^liu^ dn = -v^n^A.u (2.106) 

E 3 -3 P 

The first term of the viscous energy fiux is evaluated in a similar manner, 

4 4 _ p 

-VxtJ.uUx di} = -Vxiiu-AiU (2.107) 

E 3 3 p 



2.5. FINITE VOLUME STATE OF THE ART 



29 



The second term requires some manipulation. Begin by defining the temperature 
gradient over an element, 



(T. 



x)E 



where, 



[PRJ 


p 


(P. 
[p 

f) 


\ ~2 

Px\ _ a. 

p ) 73? 


I P 


A,p 
P 



7 



(2.108) 



(2.109) 



The heat flow contribution to the viscous flux is then obtained, 



'fR 



_ or ( \P A,p 



V, 



pcp a^ ( \P A,p 



>E 'm \ P p J "" Pr 7R\ P p 

The elemental contributions from the viscous terms is similar to Eqn. 2.55, 



(2.110) 



Ji LI jj 



P': 



i+i 



L 



i+l 





3p » 



+ COE 



|ulA,w 
3 p ' 



•Jj+iUi+ij 



IHa 



i 



«,«+! 







||A,M 



>+COE (2.111) 



As discussed for the scalar advection-diffusion equations, when solving the Navier- 
Stokes equations the maximum of the viscous contribution to the nodal update and 
the artificial dissipation from the inviscid flux discretization should be utilized. When 
the ph3^sical viscous terms are large enough, no artificial dissipation is needed. 

2.5 Finite Volume State of the Art 



The one-dimensional analysis of the Navier-Stokes equations represents the state of art 
for upwind fiux difference split finite volume schemes. Extensions of the unstructured 
finite volume method to multiple spatial dimensions relies upon solving a locally 
one-dimensional approximate Riemann problem across cell faces, an approach that 
looses some of the coupling present in a system of equations. Locally one-dimensional 



30 CHAPTER 2. ONE-DIMENSIONAL ANALYSIS 

solution techniques also introduce preferential grid-aligned wave directions that may 
not correspond with physical wave-propagation directions. 

The fluctuation splitting framework approaches the governing equations from a 
different perspective than finite volume, but is seen to result in identical discretiza- 
tions in one dimension for the DMFDSFV scheme. However, the following chapters 
show how fluctuation splitting generalizes to multiple dimensions in a more compact 
and coupled manner than locally one-dimensional finite volume schemes. 



Chapter 3 



Two-Dimensional Scalar Analysis 



Having shown the equivalence of the fluctuation splitting and DMFDSFV schemes 
for one-dimensional domains, the extensions to two spatial dimensions are considered. 
The present chapter analyzes the case for a single governing conservation law, 



Ut + V-F = V • (/iVf/) (3.1) 



to which steady-state solutions are sought. Systems, e.g. the Navier-Stokes equations, 
are deferred to a subsequent chapter. 

DMFDSFV is extended in an upwind, edge-based formulation for general unstruc- 
tured meshes with a multi-dimensional reconstruction. The crucial piece of the solver 
remains a locally one-dimensional approximate Riemann evaluator, as developed in 
chapter 2. This locally one-dimensional treatment of the fluxes results in increased 
production of artiflcial dissipation, particularly when discontinuities are not aligned 
with the mesh [40]. 

The extension of the fluctuation splitting scheme to multiple dimensions takes 
on the flavor of a node-based upwind residual-distribution algorithm, resulting in a 

31 



32 CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 

greater flexibility to propagate multi-dimensional wave phenomenon without dissipa- 
tion. Fluctuation splitting has a more-compact stencil than DMFDSFV for second- 
order accuracy and exhibits "zero cross-diffusion"^ in a grid-aligned condition. Fluc- 
tuation splitting is seen to grid-resolve advection-diffusion problems on coarser meshes 
than DMFDSFV. 

This chapter begins by defining the different elemental domain structures for 
DMFDSFV and fluctuation splitting. Then formulations are developed for the two 
schemes and applied to two-dimensional linear and non-linear advection model prob- 
lems. Observations are made about the effects in both schemes of grid orientation 
on the production of artificial dissipation. Discretizations for diffusion follow, along 
with results for the heat equation. The chapter concludes with an advection-diffusion 
test problem, revealing the improved accuracy and decreased solution times using 
ffuctuation splitting vis a vis DMFDSFV. 

3.1 Domain 

The DMFDSFV scheme is implemented for an edge-based data structure. The domain 
is discretized on an unstructured mesh of arbitrary connectivity. Control volumes are 
then constructed about each node. One common method for defining the control 
volumes is to use the median-dual mesh, shown as the dashed lines in Figure 3.1. 
For a triangulated domain, the generalized median-dual volume about a node equals 
one-third the sum of the areas of each triangle connected at that node, 

S, =^- J2 St (3.2) 

VT I ieT 

The fluxes into and out of the control volumes are efficiently computed as a sum 
of contributions distributed to the nodes from a loop over edges. For each edge, 
the fluxes through the control faces to the right and to the left of the edge, Fig- 
ure 3.2, are computed, with the convention that a positive flux is out of the control 



^ "Zero cross-difTusion" refers to the practice of adding artificial dissipation terms in the stream- 
wise direction only, as opposed to adding artificial dissipation in both the streamwise and cross- 
stream directions. 



3.1. DOMAIN 



33 




Node 

Unstructured grid 
Median-dual control volume 
■ Outward normal 
Quadrature point 
Current node 

Distance-one neighbor node 
Distance-two neighbor node 



2 l\ 




1 y 


,X 


„.>-'-~-L 


/x 


,1 X 


^v O/ 


A 1 




T ^^^ T 


boundary 



(a) Interior node. 



(b) Boundary node. 



Figure 3.1: Finite volume computational domain for edge-based implementation. 



volume surrounding the initiation node and into the control volume surrounding the 
termination node. The fluxes are evaluated at the quadrature points, and data is re- 
constructed from the nodes to the quadrature points, denoted by x, along the vectors 
r in Figure 3.2. 

For the special case of a boundary edge, shown in Figure 3.2(b), two fluxes are 
computed to the right-hand side of the edge, one for each associated node. 

The DMFDSFV scheme is referred to as a locally one-dimensional scheme because 
the fundamental Riemann problem is approximately solved normal to a face, with the 
solution going to either or both of two nodes only, connected by the physical mesh 
edge. The mesh edge and control volume face can have an arbitrary orientation within 
multi-dimensional space. The reconstruction step in general can be multi-dimension- 
al. 

In contrast to the edge being the fundamental computational element for DM- 
FDSFV, fluctuation splitting is formulated on a multi-dimensional simplex element. 
In two dimensions the simplex element is the triangle, while in three-dimensions the 
simplex is a tetrahedron. A pictorial of the domain nomenclature for fluctuation 
splitting is presented in Figure 3.3. Local curvilinear coordinates, {^,t]), are defined 



34 



CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 





(a) Interior edge. 



(b) Boundary edge. 



Figure 3.2: Flux quadrature for edge-based finite volume scheme. Solid bold line is 
physical mesh, dashed lines are control-volume faces. 




Figure 3.3: Elemental triangular domain for fluctuation splitting. 



3.2. ADVECTION 35 

on each triangle, parallel to two of the sides. A good choice of sides for the curvilinear 
coordinates to minimize computer round-off error may be the two most orthogonal 
sides. The fluctuation computed on a triangle may now be sent to one or more of 
the three vertices (versus two for DMFDSFV), allowing for a truly multi-dimensional 
distribution scheme. 

By definition, all elements are interior to the domain, so no special domain dis- 
cretization is needed for the boundaries with fluctuation splitting. However, numerical 
boundary conditions will still need to be applied at the boundary nodes to account 
for contributions from 'ghost' elements outside the computational domain. 

3.2 Advection 

Pure advection is obtained from Eqn. 3.1 when /i = 0, 

Ut + V-F =0 (3.3) 

This section extends the DMFDSFV procedure in a straight-forward manner from 
the one-dimensional analysis in chapter 2. Then the fluctuation splitting method is 
applied, in a formulation that now differs significantly from DMFDSFV. A tempo- 
ral pseudo-time marching solution procedure follows, including a positivity analysis 
yielding timestep restrictions. A statement on the boundary conditions concludes the 
analytic formulations, leading to results for both linear and non-linear test cases. 

3.2.1 Formulations 

DMFDSFV 

The traditional, locally one-dimensional, approximate Riemann solver hnite volume 
scheme[22] begins by integrating Eqn. 3.3 over the control volumes and applying the 
divergence theorem, 

"^ Utdn =- I F-ndY (3.4) 

n .It 



36 CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 

Using mass lumping to the nodes, similar to an explicit finite element treat- 
ment [85], the temporal evolution is evaluated on a time-invariant mesh as, 

^U,dn =S.^^§-^iur^'-Uf,) (3.5) 

The discretization of the convective flux, F, is performed using Earth's imple- 
mentation[22] of the upwind, locally one-dimensional, approximate Riemann solver 
of Roe[13] by constructing the numerical fluxes as a combination of the flux function 
and artificial dissipation, 

I F-hdT ^Y. //aceAr = -R, (3.6) 

faces 

The numerical flux at the face is analogous to the one dimensional form (see Eqns. 2.12 
and 2.38), 

fface = 2 {F^n + Font) " " - $ (3.7) 

where the artiflcial dissipation provides the upwinding (see Eqns. 2.14 and 2.38), 

$ = ^\A ■ n\{Uout - U,„) (3.8) 

Out and in refer to states on the outside and inside of il. at the face. The flux 

Jacobians are defined, 

dF^ dF^ 

where A = A^'i + A^j, F = FH + F^j, and the tilde indicates the conservative 
linearizations at the cell face [13]. 

Piecewise linear reconstruction from the nodal unknowns to the cell faces as in 
Eqn. 2.16, repeated here, 

Ufo,ce =L\ + ^pVU-r (3.10) 

provides second-order spatial accuracy in smoothly-varying regions of the solution. 
Median-dual gradients of the dependent variable, Vf/, are obtained from the un- 
weighted least squares procedure outlined by Barth. Following Bruner and Wal- 
ters[90], the limiter is supplied an argument equal to half the argument Barth uses, 
namely, 

(TTmin/max JT \ 
A — (3.11) 

'2(\/TJ ■ jAjnin/max j 



3.2. ADVECTION 37 

where f/™'"/™«2: jg ^j^g minimum (resp. maximum) oiUi and all distance-one neighbors. 
The most restrictive limiting from choosing the minimum or maximum is used. 

In casting the limiter argument in this form, Bruner equates the Barth limiter 
with Superbee, for a limiter argument less than or equal to one. For the full domain 
of the argument, the non-symmetric Barth limiter takes the form, 

{0 |<0 

2£ if < 2 < i (3.12) 

/ ^>^ 

q - 2 

for the limiter cast as Eqn. 3.11. Many limiter functions exist, and several of the 
more popular versions are detailed in appendix A. 

The DMFDSFV fiux evaluation needs to be performed three times for each inte- 
rior triangle, once for each edge of the triangle. For linear advection at a uniform 
advection speed Eqn. 3.8 requires 4 multiplication/divisions and 2 additions/sub- 
tractions. Equation 3.7 requires 4 each multiplications and additions. Ignoring the 
work required to compute the nodal gradients and limiter, which varies based upon 
the mesh connectivity, the reconstruction, Eqn. 3.10, requires 6 multiplications and 
4 additions per face. Equation 3.6 adds one more multiplication per face, bringing 
the total operation count for DMFDSFV per triangle to 45 multiplications and 30 
additions. 

Fluctuation splitting 

The Narrow Non-Linear (NNL) fluctuation splitting scheme is presented as a slight 

re-interpretation of the work of Sidilkover and Roe[3]. The current interpretation 

is as a volume integral over triangular elements, without recourse to the divergence 

theorem. The discretized equations, however, are identical to Sidilkover's. This form 

of fluctuation splitting employs a general limiter function for determining the residual 

distributions. 

Integrating Eqn. 3.3 over an element, where i2 is now the area of the triangular 

element, 

^ Utdn =- I V-Fdn (3.13) 

n .In 



38 



CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 



For linear variation of the dependent variable over the element, the temporal evolution 
is (see also Eqn. 2.26), 

St, 



Ut dil = SjUt = ^(f/i, + L\ + Us,] 



(3.14) 



where Ui, U2, and ^'"3 correspond to the three nodes defining element U. 

Using the local curvilinear coordinates {^, t]), defined in Figure 3.3, the divergence 
of the convective flux can be transformed, 

9 .^ .. d_ 
dy' 



V-F =F;^ + Fy = -iF.i) + -{F-j) 



(3.15) 



_d_ 

dx 

d_ 

■ 9y . 



Sx f]x 



■9? 
. dr] . 



V-F = UF ■ i)^ + ^y{F ■ i)e + ^AF ■ ^)v + VyiF ■ 3), 
Introducing the inverse Jacobian of the coordinate transformation, 

J = Xf:y^ - x^y/: = — 

and the invariants of the transformation. 



Kx 
Vx 

Eqn. 3.17 becomes. 






J-1 



4 

Vy 

his 



x^ 



J- 



ni-J 
ns-j 



(3.16) 
(3.17) 

(3.18) 



(3.19) 



(3.20) 



V-F = — (^ni-F^ - ng-F.J = ^ \^ni-AU^ - h^-AU^ 

If F is linear or quadratic in U, then for a linear variation of U over the element, 

V-Fdn =aA^U + pAr,U (3.21) 

where the difference operators are A^U = U2 — Ui and A^f/ = F3 — U2 and the 
advection speeds are, 

a =jnrA, p = -j-hs-A (3.22) 



3.2. ADVECTION 39 



A is now the conservative linearization over the entire triangular element[36]. 
The advective fluctuation can be defined, 



V-Fdn (3.23) 

n 



The fluctuation can be split, 



,/, =(/.? + (/.'' (3.24) 



where, 

# =-aA^U, (/)" = -/3A^f/ (3.25) 

Following Sidilkover[l] the scheme is extended to second-order spatial accurac}^ 
by repartitioning the fluctuation through the use of a symmetric limiter function, 

0*^ =<l>' + cf^MQ) = ^'[^-^) (3.26) 

f" = (^v - (l)^4,{Q) = d)^ {I - ^(Q)) (3.27) 

with, 

Q=-^ (3.28) 

In practice, if an averaging function, M^, exists for the desired limiter, it is numerically 
advantageous to compute M^{<p'^, — </)^) = (jfip{Q), avoiding the need to evaluate Q 
explicitly. 

This critical step, allowing the redistribution of the fluctuation, is what principally 
distinguishes the multi-dimensional fluctuation splitting scheme of Sidilkover from a 
locally one-dimensional extension of Riemann solvers. There is no analog to this in 
the formulations of chapter 2. 

Upwinding is achieved through the introduction of the artificial dissipation terms, 

/ =sign(a)(/.*^ f =sigxi{l3)(p*" (3.29) 

Combining Eqn. 3.14 with a distribution scheme for Eqn. 3.23 and summing over 



40 CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 



all elements, the contributions to nodal time derivatives can be written in the form, 

SiV\, ^ ^{cj)*' -((>'') + COE 

S2U2, ^ ^if' + ({>'') +'^{d>*" -^''") + COE 

SsUs, ^ ^{cl)*" + /') + COE (3.30) 

or in a more compact form, 
1 



SiUif ^ 



«-(3 - ^)(r + (-l)V' ) + (-4 + 5^- z^)((/)*" - (-l)V' ) 

+ COE i =1,2,3 (3.31) 



where COE stands for contributions from other elements containing these nodes. 

The distribution requires 4 addition/subtractions and 3 multiplication/divisions. 
Upwinding requires 2 multiplications for each term of Eqn. 3.29. Ignoring the cost of 
evaluating the limiter function, as was done when counting the DMFDSFV operations, 
one more multiplication and addition are performed in each of Eqns. 3.26 and 3.27 and 
for each term of Eqn. 3.25. Finally, a and fj, Eqn. 3.22, each require 4 multiplications 
and one addition for a total operation count of only 19 multiplications, versus 4-5 for 
the DMFDSFV scheme. Only 10 additions per triangle are required by fluctuation 
splitting, versus 30 for DMFDSFV. 

3.2.2 Advective Timestep Restriction 

Both schemes are formulated as either Gauss-Seidel or Jacobi time-relaxation algo- 
rithms. 

The nodal updates for the discrete system can be formed as a sum of contributions 
from all nodes. 

ur^' = E ^^^^ = ^'^'^ + E ^^^^ (3.32) 

For positivity[56] each of the coefficients in Eqn. 3.32 must be non-negative. 

In the finite volume context the nodal update (Eqn. 3.32) can be rearranged into 



3.2. ADVECTION 41 



the form of Eqn. 3.5, 

f (f/r^* - ui) = £(c, - in + f E^.f^. (3-33) 

For the upwind, edge-based algorithm considered here, each ^Cj will be related to 
a positive-definite coefficient equal to zero for outfiowing faces and related to the 
wavespeed for inflowing faces, yielding the restriction At > on the timestep. The 
remaining term can be expressed, 

|^(c,-l) =-5]c, (3.34) 

k about i 

where the cj. coefficients are also positive-definite, either zero for inflowing faces or re- 
lated to the wavespeed for outflowing faces. Rearranging and imposing the positivity 
constraint, q > 0, yields the timestep restriction, 

1 - ^ Vcfe = c, > (3.35) 

k about i 

At < ^^ (3.36) 

2^k about i ^ 

For fluctuation splitting, the nodal updates are assembled from Eqn. 3.31 as, 

§-^iUr^'-Ut) =J2^M-U.) (3.37) 

In this case the Cj coefflcients are formed as contributions from the fluctuations in 
the triangles to both the left and the right of mesh edge Tj. The positivity restriction 
on At is found to have a similar form as for flnite volume (Eqn. 3.36), 

At < ^' (3.38) 

Local time-stepping based on positivity is shown to yield stable, yet non-conver- 
ging, solutions in some second-order cases (see section 3.4). Robust convergence is 
obtained by using the flrst-order c's in Eqns. 3.36 and 3.38, even for second-order- 
accurate spatial discretizations. This is similar to the common practice of using a 
flrst-order Jacobian discretization in a time-implicit scheme. 



42 CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 



An implicit scheme can be constructed for fluctuation splitting by linearizing the 
flux in time, 

ft+At ^ ft ^ X' {U'^^' - U') (3.39) 



The spatial discretization remains the same and the coefficients of the LHS of Eqn. 3.37 
are changed from the scalar ^ to the operator, 

£ + aA5 + /3A, (3.40) 

A full implicit scheme would require inverting the sparse matrix corresponding to 
the operator of Eqn. 3.40. Since both A^ and A^ operators use a nearest-neighbor 
compact stencil, creative re-ordering of the nodes could pack the implicit matrix into 
a banded diagonal of average bandwidth 6. Another strategy is to use a variant of a 
red/black coloring, here grouping the nodes into three sets because of the triangular 
connectivity. The three sets of nodes would then be integrated with a line Gauss- 
Seidel strategy, where the matrix to invert has been reduced to a simple diagonal form 
for each set of nodes. The present dissertation does not implement a fully-implicit 
temporal integration. 

3.2.3 Boundary Conditions 

Explicit Dirichlet inflow boundary conditions are employed. Advective outflow bound- 
aries are treated for free convection through the boundary nodes, allowing boundary 
nodes to be handled in the same manner as interior nodes. 

3.2.4 Results 

Linear 

The linear advection equation is obtained from Eqn. 3.3 for a flux function F = XU, 
yielding, 

Ut + V-iXU) =0 (3.41) 



3.2. ADVECTION 



43 



u = 1 



0.5 T 



u = o 






-0.5 



X = (1,-1) 

Contour 
spacing: 
0.05-0.95 
0.1 increments 



Figure 3.4: First-order fluctuation splitting, uniform advection. 



A divergence-free advection velocity is considered, such that V-A = 0. Equation 3.41 
can then be written. 



Uf + X- vu 







(3.42) 



The appropriate averaged flux Jacobian for linear advection is simply A = A, 
where A is evaluated at the quadrature points for DMFDSFV and at the element 
centroid for fluctuation splitting. 



Uniform advection 

Uniform advection of the Heavyside function at —45 degrees, A = (1, —1), on a cut- 
cartesian mesh is shown for flrst-order fluctuation splitting, second-order fluctuation 
splitting, and second-order DMFDSFV in Figures 3.4-3.6, respectively. The mesh 
is shown as the dashed background, and equally-spaced contours vary on [0,1], the 
minimum and maximum solution values. The spread of the contour lines with spatial 
evolution is indicative of the amount of dissipation introduced into the solution by 
the discretization of the convective terms. 



44 



CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 



1 57 



U= 1 



u = o 




x=(1,-1) 

Contour 
■ spacing: 
' 0.05-0.95 

0.1 increments 



Figure 3.5: Second-order fluctuation splitting, uniform advection. 



Second-order fluctuation splitting is seen to be greatly superior to first-order, as 
expected, reproducing the exact solution in this case with no introduced dissipation. 
Also, fluctuation splitting represents a significant reduction in numerical diffusion ver- 
sus the corresponding DMFDSFV scheme, with both results employing the Minmod 
limiter. 

However, the "zero cross-diffusion" results of Figure 3.5 with fluctuation splitting 
are misleading. In Figure 3.7 the advection velocity has been rotated counter clock- 
wise by 90 degrees on the same grid. Clearly, the artificial dissipation introduced by 
the fluctuation splitting scheme has been increased. 

The corresponding DMFDSFV solution is shown in Figure 3.8. While the change 
in contour spreading for the DMFDSFV scheme between Figures 3.6 and 3.8 is less 
dramatic than the change in spreading for the fluctuation splitting scheme in Fig- 
ures 3.5 and 3.7, the fluctuation splitting results still exhibit less diffusion than the 
DMFDSFV results, comparing Figures 3.7 and 3.8. 

Employing the compressive Superbee limiter with the fluctuation splitting scheme 



3.2. ADVECTION 



45 



u = 1 



u = o 




x=(1,-1) 

Contour 
spacing: 
0.05-0.95 
0.1 increments 



Figure 3.6: Second-order DMFDSFV, uniform advection. 



yields the results of Figure 3.9. In this case the discontinuity is confined to a 2-3 cell 
stencil, and does not grow in space. Applying the Superbee limiter to DMFDSFV 
cannot eliminate all artificial dissipation for this case, as is possible with fluctuation 
splitting. The DMFDSFV results (not shown) corresponding to Figure 3.9 spread the 
discontinuity over four cells by the outflow boundary, with a continually broadening 
trend. 

However, while it is possible to use the Superbee limiter with fluctuation splitting 
for this case, compressive limiters can be unstable on different grid orientations. For 
example, no degree of compression is stable for the case of Figure 3.5. This potential 
for instability is related to global positivity, as discussed by Sidilkover and Roe[3]. 

The effect of using a general unstructured grid is investigated in Figures 3.10 
and 3.11. The unstructured grid in this case was generated using Vgrid[91, 92]. 
The fluctuation splitting solution exhibits less dissipation, but is not as smooth as 
the DMFDSFV solution. While the fluctuation splitting scheme preserves contact 
discontinuities over larger spatial ranges than the DMFDSFV scheme, fluctuation 



46 



CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 



1 


p- 




- ;. ?-. ?. 


;. y?. 7.y ~f y- / 




-.; 






; X ; ■■ ;/■• J 'i^ /'•/■ 




....:a. 


■■■.■■ ■■■-.v 'r 


::U...:.:L.^..^ 


§M 








\ j/ '. . yr '/-^ 




-'■f-. 


'•j.-; '-■jv; '-'\ 


-h7/y^ 




■ ■■ ■■■^- 


'f.-; ^^r:--^. 


^;:i^^ 


Y 






W^^p^ 






-J. 






..■-y. 


0.5 


■■■■■■r. 




^^^ 


K 


^"'^ 




...,,. 


^...::,.J..^..jy' 


tJo^it^ 


■■■;■:■ 


'■Vv; '-^ 


u -0 


%MM0^ 


^;^jf^^^:r^ 


■jv; 


■■fv; ■■■^ 












'f 1 J T / /'^^^^^ ^ ' 


i^-^""^ ' ' 








^/ 


y / /* 7 /'• / ' • 


7^. "r. "i". 


"i". 


V. 




///r-J/T^-- r- 


-^ ; "-- ; '•. ; "•- 








Im 


/yk^-'y,^. 


- - - 




■■Vv ■■■ 






///- 






=^i 'A 'm '■! ■■ 'm '■! ■■] 'm ■■! 



X = (1,1) 

Contour 
spacing: 
0.05-0.95 
0.1 increments 



U= 1 



-0.5 



Figure 3.7: Second-order fluctuation splitting, uniform advection. 



1 rr 



U = 




X = (1,1) 

Contour 
spacing: 
0.05-0.95 
0.1 increments 



Figure 3.8: Second-order DMFDSFV, uniform advection. 



3.2. ADVECTION 



47 



1 rr 



0.5 - 



U = 






U= 1 



-0.5 



X = (1,1) 

Contour 
spacing: 
0.05-0.95 
0.1 increments 



Figure 3.9: Second-order fluctuation splitting with compressive limiter. 



splitting does not appear to degenerate gracefully with regard to extreme coarsen- 
ing of the unstructured mesh for this test case. This behavior could have negative 
implications for applications employing multigrid convergence acceleration. 



Circular advection 

Circular advection is achieved by setting A = [y, —x). A decaying sine- wave input 
profile is used, 

\2 



U{x,0) 



[e smvrx 



Results for the two schemes, using the Minmod limiter, are presented on the worse- 
case cut-cartesian mesh in Figures 3.12 and 3.13. Again, the fluctuation splitting 
results are considerably less diffusive than the DMFDSFV solution. 

The circular-advection problem is also applied on an unstructured mesh. The 
input profile for this case consists of both a top-hat function and a decaying sine 
wave, allowing comparisons between the schemes for both sharp discontinuities and 



48 



CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 



u = o 




X = (1,1) 

Contour 
spacing: 
0.05-0.95 
0.1 increments 



Figure 3.10: Fluctuation splitting on unstructured mesh. 



u = o 




X = (1,1) 

Contour 
spacing: 
0.05-0.95 
0.1 increments 



Figure 3.11: DMFDSFV on unstructured mesh. 



3.2. ADVECTION 



49 



1 r 



0.5 - 



U = 





























i^-j 


_.... 




"■:/ 


3 






f 


1 


^ 

1 


■■1/ 


/■\ 

/■■■■■■■^ 


>-r 


-^ 


#- 


-^ 


■■f\l 


^ 


-^ 


i 


''A 


1 






L 


J 


= ( 


e"s 


in 


JIX^ 


-0.5 

2 


X 












X = ( y, -X ) 

Contour 
spacing: 
0.025-0.375 
0.05 increments 



Figure 3.12: Fluctuation splitting, circular advection. 



1 rr 



U = 




X = ( y, -X ) 

Contour 
spacing: 
0.025-0.375 
0.05 increments 



U = (e" sin jix)^ X 



Figure 3.13: DMFDSFV, circular advection. 



50 CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 



smooth gradients. The input profile is, 



e^'^sin(27rx)) 


-0.5<x<0 







-0.6<x<-0.5 


0.4 




-0.8<x<-0.6 







-l<x<-0.8 



U{x, 0) 



Results for this case are displayed in Figure 3.14 for fluctuation splitting and Fig- 
ure 3.15 for DMFDSFV, both using the Minmod limiter. Fluctuation splitting per- 
forms significantly better at preserving the top-hat distribution. Fluctuation splitting 
also does a better job of maintaining the minimum and maximum values of the sine 
distribution, though both schemes do well on the smooth gradient portion of the sine 
wave. 

Non- linear 

The non-linear advection equation is obtained from Eqn. 3.3 for the flux function 
F = (^, U). In non-conservative form the equation is written, 

Ut + UU, + Uy =0 

A coalescing shock problem is considered, with an anti-symmetric input profile. 



Ui-l,y) =U{0,y) = 
U{x, 0) = -2x - 1 on X = (-1, 0) 

The exact solution to this problem contains symmetric expansion fans on the sides and 
a compression fan at the inflow that coalesces into a vertical shock at {x, y) = {—^, |). 
The first mesh is cut-cartesian containing 26 x 26 nodes. The fluctuation splitting 
and DMFDSFV solutions, both using the Minmod limiter, are presented in Fig- 
ures 3.16 and 3.17. Both algorithms exhibit the same grid dependence on the amount 
of artificial dissipation as seen before, with the left-half solutions having more diffu- 
sion than the right halves, due to the grid orientation. Both methods perform the 
same in the compression-fan region, coalescing into a shock to within the accuracy of 
the input-profile discretization. 



3.2. ADVECTION 



51 



u = o 




X = ( y, -X ) 

Contour 
spacing: 
0.025-0.375 
0.05 increments 



Figure 3.14: Fluctuation splitting on unstructured mesh, circular advection. 



u = o 




X = ( y, -X ) 

Contour 
spacing: 
0.025-0.375 
0.05 increments 



U = U = 0.4 U = ^ U = (e^' sin(2jix)f 



Figure 3.15: DMFDSFV on unstructured mesh, circular advection. 



52 



CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 



u = o 






Contour 

spacing: 

-1-1 

0.1 increments 



U = 



U = -2x-1 



-0.5 



Figure 3.16: Fluctuation splitting, Burgers equation. 



u = o 




Contour 
] spacing: 
' -1-1 

0.1 increments 



U = 



U = -2x-1 



Figure .3.17: DMFDSFV, Burgers equation. 



3.2. ADVECTION 53 

The shock is more sharply defined by fluctuation splitting than by DMFDSFV. 
Figure 3.16 has the correct shock speed, with nearly the entire gradient captured in 
one cell thickness. In contrast, Figure 3.17 shows a slightly incorrect shock speed when 
using DMFDSFV, as the shock progresses to the left beyond the coalescence point, 
even though the discretization is conservative. The incorrect shock speed results from 
a non-symmetric distribution of the dependent variable to the left and right of the 
shock, caused by the excessive artificial diffusion generated on the grid-misaligned 
(left-hand) side. 

Contours of the absolute value of the error are presented in Figures 3.18 and 3.19. 
Errors from both computed solutions show a lack of symmetry, again reflecting the 
grid dependence of the artificial diffusion terms. The error levels from fluctuation 
splitting are less than from DMFDSFV. The shock curvature in the DMFDSFV 
solution at the coalescing point is clearly visible in Figure 3.19, resulting in significant 
downstream errors in the shock location as compared with the fluctuation splitting 
errors. 

This problem is repeated on a 25 x 25 mesh with symmetric diagonal cuts, favor- 
ably aligned with the advection directions. The fluctuation splitting and DMFDSFV 
solutions, Figures 3.20 and 3.21, are in good agreement. Plots of the absolute error 
contours. Figures 3.22 and 3.23, show fluctuation splitting to be a little more accurate 
than DMFDSFV for this case. 

The flnal mesh for this case is a truly unstructured triangulation containing 
847 nodes and 1617 cells. The nodes are clustered to the outflow boundary, with 
an arbitrary bias towards the left-hand side, introduced merely as an additional chal- 
lenge for the schemes. The fluctuation splitting solution is presented in Figure 3.24, 
showing very accurate and crisp shock resolution and good symmetry in the solution 
contours despite the mesh-clustering bias. In contrast, the DMFDSFV solution in 
Figure 3.25 has a more-diffuse shock and again an incorrect shock speed, with the 
outflow shock offset to the left of x = — |. The DMFDSFV solution is also somewhat 
less symmetric than the ffuctuation splitting solution. 



54 



CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 



1 ft;.-.- 




0-1 

0.1 increments 



Figure 3.18: Fluctuation splitting, Burgers equation, absolute error. 




;.::'; Contour 
V.;"' spacing: 
■ ■■ 0-1 

0.1 increments 



Figure 3.19: DMFDSFV, Burgers equation, absolute error. 



3.2. ADVECTION 



55 



u = o 




Contour 

spacing: 

-1-1 

0.1 increments 



U = 



U = -2x-1 



Figure 3.20: Fluctuation splitting, Burgers equation, symmetric mesh. 



u = o 







.■■:,■':(•■ :.-':,/':.-':.7.-':,-'/r*i pTY'.:'-.\.:''.:'\--.:'-V'. :•.:'•. 






/\ /'].■'., ■''.]■' •..■''.} '..■'•..■/'./ ' \\\'-:\'-'--'-'\' •-'■'■\ ■■'■'•-'■'■ ■ 




























,■■ 


.-■;.■):.■■;,•/;.•■:./;,-■;/:.■■!/ \:\:Y'-.:\.:' ■.:!•. :■•.:[•. :'•,:'■. 






r' '/h /'■.['/■■' \ rl/ ■.■/./ ' ■'■\s\"\.'\.\.'\\ :■'■:■'-. 






/\A\/ i'\/j/\.f./.t''./A k''''\'''\-'''-\'''' V '-'V '■■''• 




:■■ 


,•';.^:.■7,•';.7:.■■i/-';.•/.■■i/' A;'-X''"\;'''V'''-S '■■{■■""■■ ■■ 












■ '/' '■'i' 7 ■''/■' /' ■'/■■' ' ■■ V' N A"' \' "V"' V "■ "■ 




,•' 


/ 'Y '■ A. y'y '■ f \ rf- /f/ •. .j [v. :''^'\X;.:'\:'M'.: v. :''!;■■■■'•. 


0.5 




iSiiilif; :SpiS||'fe;'- 










:•;; 


WlmS^S^Mm-^ 




^' 


i r J 'J TJ ' /' '' "' ''/'//rlh \'\v\\\S^' '"' ■\'V\v\.\i \' " 




•'■/ 


^'^9 




ri' 


wM^f''/^^^ 




§SM^M'1'-M:- ^-l- l:l:MwSSB 



Contour 

spacing: 

-1-1 

0.1 increments 



U = 



U = -2x-1 



-0.5 



Figure 3.21: DMFDSFV, Burgers equation, symmetric mesh. 



56 



CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 




Contour 

spacing: 

0-1 

0.1 increments 



Figure 3.22: Fluctuation splitting, Burgers equation, absolute error. 











































:•• 


/:/:.■"■/:/:/:/:.■':/:/: 




























,■■ 


.■"..■':.■'../'..■':.■''..■"..■':.■''..■". 






v.:'-. :•.:'•,:■■. 


















































































M^^^^^^ 


;;.;::;:\|;:;:: 




m 














-','-' 


K;^^;^r:^;;-^c:^iy;;S§^ 


^}\: ■::•:: '.':■. 


VV-vMv- 


.■'f. '■.■'■.■':.■'■,■'■.■'■ ..Z/^' ..■'■.■'■' \ 




■■.:'-,:'\:-\'', 


■:h::-\:y^^^ 




:;v;;;;R;|:; 




.■L^..^,->j/j;/^;..- :,.•:,.• ;,:..•:'., 


■■'■■'■•■ •■^V&.'';/A-' '• 


~} 


7;. Tyi^yHj^. ■■;,-';,■■:.•■ ;,-•;.■:■. 


■•,:■.:■■,:■■.:•. :^SX^VV-.:\,: ■. 




























^^^;y;:^;^;;--;:';:-^;yi'^^' 




"■■■■^^i 




F'..;':.-':.-';..-':.-':,-"..-':.-;:.-".. ■'{'■. 


"■■ r-' ■-■ T '•■ ■- 


;-.:'-,:'v^H 



Contour 

spacing: 

0-1 

0.1 increments 



-0.5 



Figure 3.23: DMFDSFV, Burgers equation, absolute error. 



3.2. ADVECTION 



57 



u = o 



-1-1 

0.1 increments 




U = -2x-1 



Figure 3.24: Fluctuation splitting, Burgers equation, unstructured mesh. 



u = o 




Contour 

spacing: 

-1-1 

0.1 increments 



U = 



U = -2x-1 



Figure 3.25: DMFDSFV, Burgers equation, unstructured mesh. 



58 CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 

3.3 Diffusion 

The model diffusion equation, the well known heat equation, is obtained from Eqn. 3.1 
when F = 0, 

Ut =V-(/iW) (3.43) 

Lacking cross-derivative terms, the heat equation suffers somewhat as a model for the 
Navier-Stokes equations. 

Two methods for evaluating the dift'usion term are detailed. The finite element 
form has a more compact stencil and will be shown to be more accurate. Either dif- 
fusion discretization can be used with either advection discretization, and in practice 
the finite element diffusion treatment is preferred with both the fluctuation splitting 
and DMFDSFV advection schemes. 

3.3.1 Formulations 

Finite volume 

In flnite volume form, with the aid of the divergence theorem, Eqn. 3.43 becomes, 

/ Ut dn = J) iiVU • h dF (3.44) 

Discretizing the RHS of Eqn. 3.44, in a manner similar to Eqns. 3.6 and 3.7 (see also 
Eqns. 2.50 and 2.51) yields, 

j iiVU -hdr ^ 5^ I (VL^„ + VUout) ■ n Ar (3.45) 

faces 

where in refers to the state inside the control volume and out refers to the state 
on the other side of the face from the control volume. The diffusion coefficient is 
averaged over the length of the face. The gradients from Eqn. 3.10 are not limited 
before averaging at the control-volume faces in Eqn. 3.45, as suggested by Anderson 
and Bonhaus[83]. 



3.3. DIFFUSION 59 



Finite element 

A finite element treatment, similar to Tomaich[50], is employed. Begin by integrating 
Eqn. 3.43 over an element, where 12 is now the area of the triangular element, 

/ Ut dn = I V-(/iV[/) dn (3.46) 

Jn Jn 

The diffusive fluctuation is defined, 

(jf = I y . (^Vf/) di^ (3.47) 

Jn 

Assuming piecewise-linear data and an element-averaged diffusion coefficient leads 
to a diffusive fluctuation of zero for the triangular element. Introducing the linear 
nodal shape functions Vi., such that 'Yli^i'^i — 1; the elemental diffusive fluctuation 
can be expressed 0" = Yll^i 9l = 0' where 

(/,^ = / f,V • (iiVU) dn (3.48) 

Jn 

Integrating by parts (analogous to Eqn. 2.53), 

f/,^ = / v,i2^U -ndT- I i^VU • Vv, dn (3.49) 

Jr Jn 

The boundary integral in Eqn. 3.49 will cancel for interior nodes on summing con- 
tributions from neighboring elements. For linear variation of U over the element the 
remaining volume integral can be evaluated analytically, 

^^' =^i2 ^y^^^ ^^^ = ^ (3.50) 



(' ~ 

^ 5Z Ujijfiyh, J ^dn = -^Yl Ujijfiyh, (3.51) 



where // is the element-average diffusion coefficient. 

The physical dissipation is then distributed to the nodal updates as, 

SiL\ ^<pl + COE (3.52) 



60 CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 



3.3.2 Diffusive Timestep Restriction 

Continuing the positivity discussion from section 3.2.2, restrictions on the timestep 
are sought to maintain positive coefficients c, in Eqn. 3.32. 

Unfortunately, the hnite element formulation for the diffusive terms (Eqn. 3.51) 
cannot be guaranteed to preserve local positivity on obtuse triangles (see Earth [22]). 
Considering only the contributions from the current node, the coefficient for the 
diffusion term can be written, 




(3.53) 



The resulting timestep restriction is. 



At < -^ (3.54) 

^T 4S't 



In a similar manner the timestep restriction from Eqn. 3.45 is, 

^^ < ^ m^rr (3.55) 

3.3.3 Boundary Conditions 

For the diffusion terms a Neumann outflow boundary is applied with zero gradient 
normal to the boundary (Vf/-n = 0), achieved by setting the boundary integral in 
Eqn. 3.49 to zero. 

3.3.4 Heat Equation 

The heat equation (Eqn. 3.43) test problem, a steady-state boundary value problem 
on the unit square in the second quadrant, is taken from Tomaich[50]. The Dirichlet 
boundary values are, 

U{-l,y) = U{0,y) = sin(^y) 

f7(x, 0) =0 U{x, 1) =- sin(7ra;) 



3.4. ADVECTION-DIFFUSION 61 



The analytical solution on x = [—1,0], y = [0, 1] is, 

Uix.y) = — - — [sinhfyrfx+l)) sinfyry) + sinlL(7ry) sin(7r(a;+l))] 
smn 7T 

Both diffusion discretizations, Eqns. 3.45 and 3.51, are compared on a 438-node 
unstructured mesh. Figures 3.26 and 3.27 plot the absolute value of the error in 
the converged solutions using Eqns. 3.45 and 3.51, respectively. A carpet plot of the 
solution, using the finite element formulation, is presented in Figure 3.28. 

The finite element treatment is clearly more accurate, and is used to discretize 
the diffusion terms for both DMFDSFV and fluctuation splitting in the following 
section. The average-gradient results in Figure 3.26 appear to exhibit a decoupling 
mode, similar to odd/even decoupling for structured meshes. 



3.4 Advection-DifFusion 

When considering combined advection and diffusion problems, rather than adding 
both physical and artificial dissipation terms, it is advantageous to only augment 
the physical dissipation with as much artificial dissipation as is necessary to ensure 
monotonicity of the solution. That is, if the physical dissipation term is larger than 
the computed artificial dissipation, no artificial dissipation is needed. 

This rationale can be implemented with fluctuation splitting, for example, by 
modifying the fluctuation distribution (Eqn. 3.30) to be, 

SiUi, ^ ^ + max j -^, (/)5' j + COE 

SsUs, ^ ^ + max (^, A + COE (3.56) 

Similarly for DMFDSFV, the artificial dissipation term in Eqn. 3.8 can be compared 
with the physical dift'usion term. 



62 



CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 




Figure 3.26: Pure-diffusion problem error, diffusion terms from Eqn. 3.45. 



0.5 7i. 



:/, -■■ •-,:■■ v'l ■■■/ kl_ 



-0.5 



...^ ^. ;i, — y. — r7 



:l> 



Contour 
spacing: 
0-0.02 
0.002 incr. 



;>-■- 0.5 



Figure 3.27: Pure-diffusion problem error, diffusion terms from Eqn. 3.51. 



3.4. ADVECTION-DIFFUSION 



63 




0-1 



0.5 
0.75 % 



Figure 3.28: Heat equation solution using finite element formulation. Contour incre- 
ment is 0.1. 



Smith &; Hutton problem 

The final scalar test case is a linear advection-diffusion (Eqn. 3.1) problem due to 
Smith and Hutton[93]. The flux function is F = XU, with, 

A ={2y{l-x'), -2x{l-y^)) 

The streamlines for this problem, while not truly circular, are similar in orientation 
to the circular advection problem. The inflow profile is, 

U{x, 0) = 1 + tanh(20x + 10) 

The diffusion coefficient is chosen to be a constant, n = 10"^. The domain is the unit 
square in the second quadrant. No closed- form solution is known to the author for 
this problem. 

A sequence of ffve unstructured meshes is considered. The meshes have no pre- 
ferred clustering or stretching and have nominal node-spacings of 0.1, 0.05, 0.025, 



64 CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 



Mesh Nodes Fluctuation Splitting DMFDSFV 

(CPU seconds) 



A 


134 


< 1 


< 1 


B 


495 


1 


1 


C 


1,928 


5 


8 


D 


7,529 


64 


145 


E 


28,915 


760 


1880 



Table 3.1: Grids and solution times for advection-dift'usion problem. 



Fluctuation 


Splitting 




DMFDSFV 


\W\h 


\m\2 


Mesh 


PII2 


ll<^1|2 


(art.) 


(phys.) 




(art.) 


(phys.) 


1274 


215 


A 


1918 


190 


597 


265 


B 


640 


176 


192 


161 


C 


144 


119 


54 


76 


D 


46 


66 


13 


36 


E 


18 


36 



Table 3.2: L2-norms (xlO^) of artificial and physical viscosities for advection-diffusion 
problem. 



0.0125, and 0.00625, labeled as Meshes A-E, respectively. The number of nodes for 
each mesh, along with the solution times for both fluctuation splitting and DMFDSFV 
on a 195 MHz SGI RIOOOO CPU are listed in Table 3.1. 

L2-norms of the artificial and physical viscosities computed using both fluctuation 
splitting and DMFDSFV are presented for each mesh in Table 3.2. Notice that the 
norm of the artificial dissipation for both DMFDSFV and fluctuation splitting drops 
lower than the norm of the physical dissipation on Meshes D and E. However, the 
norm of the physical dissipation is smaller for DMFDSFV than fluctuation splitting on 
each mesh A-D. The physical viscosity is driven by the solution curvature, suggesting 
fluctuation splitting maintains the solution profile sharper than DMFDSFV on the 
coarser meshes. A comparison of outfiow profiles will soon verify this interpretation. 

Evidence of a grid-resolved fluctuation splitting solution is seen in Figures 3.29 



3.4. ADVECTION-DIFFUSION 



65 



1.25 



0.75 



0.25 



FS,,^=10' 
FS,,^=0 
Inflow profile 




Figure 3.29: Fluctuation splitting profiles on finest mesh, advection-diff'usion problem. 
(FS = fluctuation splitting) 



and 3.30. The fluctuation splitting solution on Mesh E at the outflow boundary is 
presented along with the inflow profile and the corresponding pure-advection [fj, = 0) 
fluctuation splitting solution in Figure 3.29. Because the pure-advection solution 
is seen to replicate the inflow proflle, the fluctuation splitting artiflcial dissipation is 
insigniflcant on this mesh, and hence further grid reflnement would not appreciabl}^ 
change the solution. Plotting only the fluctuation splitting results with respect to 
grid reflnement. Figure 3.30 shows a convergence of the outflow profile by Mesh C for 
fluctuation splitting. 

The accuracy of fluctuation splitting and DMFDSFV are compared in Figure 3.31, 
where the outflow solutions from fluctuation splitting and DMFDSFV are plotted for 
Meshes C and E. Taking the grid-converged fluctuation splitting Mesh-E solution to 
be the true solution, it is clear that fiuctuation splitting reaches the grid converged 
solution on a coarser mesh than DMFDSFV. 

Computational efficiencies of the two algorithms are compared in Figure 3.32, 



66 



CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 



2 & 



1.75 



1.25 



0.75 



0.25 - 



:::::- 








- 


\X. 




Mesh 


: ~ 


"^^^ '^K 





A 


- 


^\ X 




B 




- 




. _ _ _ 


C 
D 


- 


\ \ 




E 




~ 


\ \ 






_ 


\ \ 






- 


\ \ 






- 


\ \ 






" 


"^ \ 








\ \ 






- 


\Nj 


... 




- 




v^ 




— 




V-N^ 




" 




\ ■ \ 








V". \ 




I 




\' "^ 








X- ^ 




- 








- 




^.. \ 




- 




>ii^-... 


X 








■^^ 










- 




^O 


^ ^ . — ^ 










- 






^^^^■=fc:^l^ 


" 1 


1 1 1 1 1 1 1 1 1 1 1 1 1 


1 1 1 1 1 1 1 1 


1 1 ^^^f^^==^^^ 



1.35 0.4 0.45 0.5 0.55 0.6 0.65 



Figure 3.30: Fluctuation splitting grid convergence, advection-diffusion problem. 



1.25 



0.75 



0.25 



FS, Mesh E 
FS, Mesh C 
FV, Mesh E 
FV, Mesh C 




0.65 



Figure 3.31: Fluctuation splitting and DMFDSFV for advection-diffusion problem. 
(FS = fluctuation splitting, FV = finite volume) 



3.4. ADVECTION-DIFFUSION 



67 



I Res I 



FV, mesh E 




2000 



CPU (sec) 



Figure 3.32: Convergence histories for advection-diffusion problem. (FS = fluctuation 
splitting, FV = finite volume) 



where the L2-norm of the residual is plotted versus CPU time for the fine-mesh 
fluctuation splitting and DMFDSFV solutions, along with the fluctuation splitting 
convergence history on Mesh D. The Mesh-E fluctuation splitting solution converges 
in 760 sec. The corresponding DMFDSFV solution takes 2.5 times longer than fluc- 
tuation splitting, due, in part, to the need to reconstruct gradient information at 
each node with DMFDSFV for second-order spatial accuracy. However, considering 
the solution time to reach a given accuracy, it is more reasonable to compare the 
fluctuation splitting solution time on Mesh D to the flnest-mesh DMFDSFV solu- 
tion. The fluctuation splitting Mesh-D solution took only 64 sec, a factor of 29 times 
less than DMFDSFV on Mesh E, and still shows better accuracy than the flne-mesh 
DMFDSFV solution. 

An even greater speedup is seen with fluctuation splitting in conjunction with the 
Van Albada limiter, where now the Mesh-B solution over-plots the curve from the 
flnest grid, shown in Figure 3.33. The corresponding DMFDSFV result using the 



68 



CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 



1.25 



0.75 



0.25 



FS, minmod, mesh E 
FS, van Albada, mesh B 
FV, van Albada, mesh B 




Figure 3.33: Advection-diffusion results using Van Albada limiter. (FS = fluctuation 
splitting, FV = finite volume) 



Van Albada limiter on VIesh B is included, and clearly falls short of the fluctuation 
splitting accuracy. The DMFDSFV case was repeated with the highly-compressive 
Superbee limiter with little improvement in accuracy. The solution time for fluctua- 
tion splitting on VIesh B is about one second, yielding a speedup factor of 2-3 orders 
of magnitude over DMFDSFV. 

The flnal set of results addresses convergence issues while pushing the positivity 
limits. Figure 3.34 compares two convergence histories for the second-order fluctu- 
ation splitting on Mesh B. The non-converging, though stable, convergence history 
is the result of using strict positivity arguments to set the timestep (Eqn. 3.38). 
The resulting solution is bounded and approximately correct but oscillatory. Limiter 
"ringing" is the cause of this behavior, with the higher-order discretization for the 
implicit matrix reducing the diagonal dominance, and hence stability, of the Gauss- 
Seidel iteration. 

Full convergence is achieved by using first-order positivity coefficients, which are 



3.5. BENEFITS OF FLUCTUATION SPLITTING 



69 



I Res I 



Second-order positivity 
coefficients 




100 



Iteration 



Figure 3.34: Convergence rates using first- and second-order positivity coefficients. 

not dependent on tlie limiters. The resulting local timesteps will not be as large as 
true second-order positivity would allow, but are more robust. 

3.5 Benefits of Fluctuation Splitting 

Fluctuation splitting and DMFDSFV schemes have been compared in detail as ap- 
plied to scalar advection, diffusion, and advection-diffusion problems. The fluctuation 
splitting scheme is seen to introduce less artificial dissipation while treating advection 
terms, allowing for more accurate resolution of weakly dissipative advection-diffusion 
problems. The ability to resolve solutions to these problems on coarser meshes makes 
the fluctuation splitting scheme the preferred choice over DMFDSFV. 

Linear advection test problems were utilized to investigate the dependence of 
artificial diffusion production on grid orientation. Both fluctuation splitting and 
DMFDSFV are shown to exhibit grid dependencies, but with fluctuation splitting 
producing less artiflcial dissipation on all grids considered. 



70 CHAPTER 3. TWO-DIMENSIONAL SCALAR ANALYSIS 

A non-linear coalescing shock problem further explored grid dependencies as cases 
were constructed that result in incorrect shock speeds for DMFDSFV. Fluctuation 
splitting shows correct shock speeds for all grids and provides tighter shock capturing 
than DMFDSFV. 

An advection-diffusion problem with small ph3^sical dissipation (diffusion coeffi- 
cient of 10~^) was considered where the reduction in artificial dissipation with fluctu- 
ation splitting results in a significant accuracy improvement over DMFDSFV. Con- 
vergence times were compared, showing a speedup of 2.5 for fluctuation splitting over 
DMFDSFV on identical grids, using a point Gauss-Seidel relaxation. However, a grid 
convergence study shows fluctuation splitting has better resolution of the solution on 
a coarser mesh than DMFDSFV does on finer meshes, resulting is a speedup of 29 
for fluctuation splitting over DMFDSFV. 



Chapter 4 



Scalar Mesh Adaption 



Mesh adaption strategies, for use in conjunction with the discretization and solution 
procedures discussed in chapter 3, are sought for two-dimensional scalar problems. 
Mesh adaption seeks to reduce to a minimum the number of nodes needed to obtain a 
desired level of solution accuracy. Implicit in this objective is the optimal placement 
of the retained nodes for a "most-accurate" solution. 

Many authors[61, 62, 65, 66, 67, 94] prefer to maintain isotropic (or nearly so) 
elements while performing unstructured mesh adaption. Their belief is that the ac- 
curacy of the solvers degrades on anisotropic elements. However, the use of isotropic 
elements will lead to excessive mesh densities when resolving phenomenon with dis- 
parate length scales in multiple dimensions, e.g. plane shocks or boundary layers. 
A contrasting approach is to employ anisotropically stretched elements, a technique 
long used for structured meshes [57, 70]. More recently, highly anisotropic elements 
have been demonstrated with unstructured grids[71, 74, 91, 95]. 

Two primary techniques are commonly used to perform mesh adaptions. One is 
to perform a global remeshing[96], where the adapted mesh is unrelated to the initial 
grid. This method works well when the adapted mesh will be significantly different in 
character from the initial mesh and usually employs an efficient grid-generation code 
to accomplish the adaption, with the initial solution driving the placement of source 
terms for the grid generator. 



72 CHAPTER 4. SCALAR MESH ADAPTION 

An alternative strategy is to form the adapted mesh from a series of local opera- 
tions on the initial mesh, based upon the local solution. This approach is very efficient 
when only a smaller fraction of the total grid requires refinement. Also, local opera- 
tions can allow for more control over the adapted grid and can be more robust than 
global grid generators. On the other hand, global remeshings can produce smoother 
grid distributions than can local operations. The present dissertation will pursue the 
local adaption strategy, as opposed to global remeshings. As before, unstructured 
triangulated domains are considered with the solution values stored at the nodes. 

This chapter begins by introducing the current state-of-the-art for anisotropic local 
refinement for finite volume solution methods as advocated by Habashi[71, 74, 75, 76]. 
Then a consideration of the behavior of fluctuation splitting methods on general 
meshes is presented. From this, a framework for local, anisotropic mesh refine- 
ment is developed in conjunction with the multi-dimensional fluctuation splitting 
scheme. The behavior of the new fluctuation splitting adaption strategy has a feature- 
alignment flavor, rather than feature-clustering like current methods, implying a re- 
duction in the required number of nodes, and hence solution times, for non-linear 
problems. 



4.1 Curvature Clustering 

Current state-of-the-art for unstructured mesh adaption is based on a posteriori error 
estimation [61, 62, 65, 66, 67, 69, 71, 74, 75, 76, 97, 98, 99]. The error estimates 
can be derived either by looking at the leading truncation error terms in the spatial 
discretization or by considering the solution interpolation error. In practice, either 
approach reduces, for second-order-accurate spatial discretizations, to a check on the 
curvature of the solution. Nodal positioning is then driven to equate the scaled 
second derivatives along all edges. If isotropic cells are desired, the magnitude of 
the local curvature inversely dictates the element sizes, while for anisotropic adaption 
directional derivatives can be used to stretch elements. 



4.1. CURVATURE CLUSTERING 



73 






Edge in bold 
is not candi- 
date for swap- 
ping. 



Edge in bold 
is candidate 
for swapping. 



Edge has been 
swapped. 



Figure 4.1: Edge swapping schematic. 
Habashi[76] defines the a posteriori error estimate on an edge to vary like, 



\Er\ ^ 



t 



Qj.2 



(4.1) 



or as "the edge length squared times the second derivative of the solution." In the 
finite volume context, one simple and efficient way to construct an edge-based error 
estimate along edge 01 is. 



\Er\ ^ 



VUr^^-VU,.^^ 



t^Ol 






VUi-VUo]-roi 



(4.2) 



The edge-based finite volume scheme detailed in chapter 3 already performs the gra- 
dient computations, making the error estimate a trivial computation. 



4.1.1 Adaption Mechanics 

Edge swapping 

One simple method to improve a mesh is to swap edges between nodes, altering the 
local connectivity. If the triangles to either side of an edge form a convex quadrilateral 
(Figure 4.1) then that edge is a candidate to be swapped. If the error estimate for 
the swapped connectivity is smaller than for the current edge connectivity, then the 



74 



CHAPTER 4. SCALAR MESH ADAPTION 



Y 







\ 


\ 


\ 




\ 


\ 


\ 




\ 


0.8 


\ 


\ 




\ 


\ 


\ 




\ 


\ 




\ 


\ 


\ 


\ 


\ 


\ 


\ 




\ 


\ 


0.6 




\ 


\ 


\ 




\ 


\ 


\ 


\ 


\ 




\ 


\ 


\ 






\ 


\ 






0.4 


\ 


\ 




\ 


\ 


\ 




\ 


\ 


\ 




\ 


\ 


\ 


\ 


\ 


\ 




\ 


\ 


0.2 






\ 


\ 




\ 


\ 


\ 




\ 




\ 




\ 


\ 




\ 


\ 








\ 


\ 


\ 


\ 


\ 


\ 




\ 


\ 


\ 



-1 -0.8 -0.6 -0.4 -0.2 

X 



Y 




Figure 4.2: Initial, poorly aligned mesh and solution. Solution contours vary on (0,1) 
with 0.1 increments. 



edge is swapped. In practice, an error threshold is employed to avoid limit cycles in 
smooth regions of the solution. 

The edge swapping procedure is demonstrated in Figures 4.2-4.4. The problem 
statement is linear advection of a shear discontinuity with A = (1, 1) and a uniform 
inflow on the left boundary f/(— 1,?/) = and uniform inflow on the bottom bound- 
ary f/(x, 0) = 1. The DMFDSFV scheme is used and reconstruction is performed 
using the compressive Van Albada limiter. The initial mesh is poorly aligned. 
Figure 4.2(left), and the resulting solution shows significant contour spreading. Fig- 
ure 4.2(right). Successive global edge swapping sweeps, Figures 4.3 and 4.4, improve 
the solution, reducing the contour spread. 

Excessive dissipation is created in the bottom left inflow cell for this case, where 
the diagonal is not swapped with the present routine. Node insertion, to be discussed 
presently, will be able to handle cells such as these, where the edge swapping logic 
breaks down. 



4.1. CURVATURE CLUSTERING 



75 



Y 




Y 




Figure 4.3: First edge swap, with improved solution. Solution contours vary on (0,1) 
with 0.1 increments. 



Y 




Y 




Figure 4.4: Second edge swap, with small solution improvement. Solution contours 
vary on (0,1) with 0.1 increments. 



76 



CHAPTER 4. SCALAR MESH ADAPTION 




Figure 4.5: Reduction from 6 to 3 edges connected to node 0. 




Figure 4.6: Four edges are the minimum that must be connected to node 0. 



Point deletion 



If all edges connected to a node have an error estimate, Eqn. 4.2, less than a threshold 
value, then that node can be removed. Once a node is flagged for deletion, the number 
of edges emanating from that node are reduced via edge swapping, as depicted in 
Figure 4.5. Usually, the number of edges connected at a node can be reduced to 
three, though Figure 4.6 shows a case where the minimum number of connected 
edges at the node is four. 

The removal of one node also eliminates two triangular elements and three edges. 
A schematic of the actual removal process of an interior node is depicted in Figure 4.7 
for both the three and four edge connectivity cases. The removal of a boundary node 
with three edges connected, depicted in Figure 4.8, eliminates one triangular element 
and only two edges. 

The objective of point deletion is to minimize the number of grid points while 
retaining the same accuracy. In practice, bookkeeping of node/cell/edge numbering 
is the most difficult part of the point deletion process. 



4.1. CURVATURE CLUSTERING 



77 





-^ 




(a) Three edges connected. 



(b) Four edges connected. 



Figure 4.7: Schematic of node deletion. 




-^ 




Figure 4.8: Schematic of boundary node deletion. 

A numerical example of point deletion is presented for the 45° linear advection 
example. Figure 4.9 shows a grid and converged DMFDSFV solution to which the 
edge swapping routine has been applied. The point deletion routine is then applied, 
resulting in the grid of Figure 4.10. The solution on the reduced mesh remains 
unchanged from the finer-mesh solution. 



Point insertion 

Point insertion can be considered to be the opposite procedure of the four-edge con- 
nectivity point deletion, shown in Figure 4.7(b). If the error estimate along an edge 
exceeds a given threshold, then that edge is flagged for refinement. A new node is 
added at the midpoint of the edge, two new cells are defined, and three new edges 
are created. The aim of point insertion is to increase solution accuracy, albeit at an 
increased computational cost due to the additional mesh nodes. Use of the local error 
estimator allows for selective refinement and results in fewer nodes than would be 



78 



CHAPTER 4. SCALAR MESH ADAPTION 



Y 




Y 




Figure 4.9: Before point deletion. Solution contours vary on (0,1) with 0.1 increments. 



Y 




Y 




-1 -0.8 -0.6 -0.4 -0.2 -1 -0.8 -0.6 -0.4 -0.2 

X X 



Figure 4.10: After point deletion. Solution contours vary on (0,1) with 0.1 increments. 



4.1. CURVATURE CLUSTERING 



79 



Y 




Y 




Figure 4.11: After point insertion. Solution contours vary on (0,1) with 0.1 incre- 
ments. 

produced by a global refinement. 

The familiar numerical example of this section is continued by applying the point 
insertion algorithm to the solution and mesh last shown in Figure 4.10. The locally 
refined mesh, with most of the refinement occurring near the inflow boundary where 
the greatest artiflcial diffusion is produced, is shown in Figure 4.11, where 13 new 
nodes have been introduced. The solution shows improved accurac}^, particularly in 
the reduced spreading in the lower left corner. 



Nodal displacement 

The fourth local adaption technique considered is nodal displacement. Neither the 
number of nodes nor their connectivity are altered, but their spatial location is op- 
timized. The nodal displacement concept mimics the Gauss collocation quadrature 
points familiar in calculus, and hence seeks to improve solution accuracy without 
increasing computational cost. 

The approach taken here uses the spring analogy, similar to the techniques pre- 
sented by Gnoffb[57] and Ait-Ali-Yahia[70] et al. The springs are taken to be the 
mesh edges. The spring constants are the edge error estimates. A minimization is 



80 



CHAPTER 4. SCALAR MESH ADAPTION 



Y 




Y 




Figure 4.12: After nodal displacements. Solution contours vary on (0,1) with 0.1 
increments. 



then sought for a potential energy formed as, 

yj - \Er\j f^j j is all distance 1 neighbors to node 



(4.3) 



The minimum is obtained by setting the derivative to zero, giving the requirement, 

Y,\Er\,ro,, =0 (4.4) 

j 

where 0' indicates the new, minimum energy position of node 0. Holding the edge 
error estimate constant during the displacement, an updated position vector can be 
obtained, 



^\Er\j {roj + fo^o) =0 
j 

Y.j\Er\jroj 



'^oo' — — '''O'O 



(4.5) 
(4.6) 



J2j\Er\j 

Equation 4.6 gives the position vector pointing from the current location of node 
to its adapted location. This adapted location is an attempt to optimally equate the 
scaled error estimates over all edges connected to the current node. Since the error 



4.1. CURVATURE CLUSTERING 



81 



estimates are held constant during the local adaption step, an iterative process is 
required to obtain the optimal nodal positions. 

The nodal displacement routine is applied to the results in Figure 4.11, completing 
one global iteration of the full mesh adaption suite for unstructured meshes, consist- 
ing of nodal displacements, insertions, and deletions and edge swapping. Solution 
improvement, shown in the tighter contour clustering in Figure 4.12, particularly 
toward the upper right, is demonstrated using the point movement technique. 



4.1.2 Adaption Procedure 

Following the recommendations of Dompierre[71] et al. and Habashi[76] et al., the 
nodal displacement technique is used as a smoother between applications of the other 
three adaption operations. Also, close coupling between the solver and the mesh 
adaptor is to be maintained. 

The overall solution strategy therefore follows: 



1. 


Solve on initial mesh. 


2. 


Swap diagonals and iterate solver. 


3. 


Move nodes and iterate solver. 


4. 


Insert nodes and iterate solver. 


5. 


Move nodes and iterate solver. 


6. 


Delete nodes and iterate solver. 


7. 


Swap diagonals and iterate solver. 


8. 


Move nodes and iterate solver. 



Steps 4-8 are repeated until convergence of the entire process. 

The entire solution-adaptive procedure is applied to the 45° shear problem using 
the DMFDSFV solver with the Van Albada limiter. The initial grid, containing 



82 



CHAPTER 4. SCALAR MESH ADAPTION 



Y 





\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


0.8 


\ 




\ 


\ 


\ 


\ 






\ 


\ 


\ 


\ 




\ 


\ 


\ 




\ 




\ 


0.6 


\ 


\ 






\ 


\ 


\ 


\ 






\ 


\ 




\ 


\ 


\ 


\ 


\ 




\ 


0.4 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 




\ 


\ 


\ 


\ 


\ 




\ 


\ 


\ 


0.2 


\ 


\ 


\ 


\ 


\ 


\ 




\ 


\ 


\ 


\ 


\ 




\ 


\ 


\ 




\ 




\ 




\ 


\ 


\ 




\ 


\ 


\ 




\ 





Y 



-1 -0.8 -0.6 -0.4 -0.2 

X 




Figure 4.13: Starting mesh and converged solution, A = (1, 1). Solution contours vary 
on (0,1) with 0.1 increments. 



Y 




Y 




Figure 4.14: Adapted mesh with greatly improved solution. Solution contours vary 
on (0,1) with 0.1 increments. 



4.2. CHARACTERISTIC ALIGNMENT 83 

121 nodes, and the solution on this mesh are shown in Figure 4.13. After only four 
complete adaption cycles, the mesh size has been reduced to just 103 nodes while 
capturing a very accurate solution, as seen in Figure 4.14. While the mesh adaption 
is highly anisotropic, the solution remains well behaved. 

A demonstration of the method is also performed for a case with a variable ad- 
vection velocity, namely the circular advection problem. The inflow profile contains 
a linear ramp between f/ = on a; < — 0.7 and L^ = lona;>— 0.6. The initial mesh 
is the same as for the shear case, containing 121 nodes. The solution on this mesh 
is excessively smeared. Figure 4.15. Three mesh adaption cycles were performed, re- 
sulting in a final mesh having 146 nodes. A significant improvement is again seen in 
the resulting solution. Figure 4.16. 

4.2 Characteristic Alignment 

4.2.1 Exact Advection Solution 

While anisotropic adaption to reduce a posteriori error estimates represents current 
state-of-the-art for unstructured-grid finite volume algorithms, it was shown in chap- 
ter 3 that there exists a better scheme for multi-dimensional advection than DMFDS- 
FV, namely fluctuation splitting. The question arises as to whether an edge-based 
error estimate, which is by the definition of an edge a locally one-dimensional indi- 
cator, is an appropriate adaption criteria for a truly multi-dimensional scheme. This 
section explores the development of candidate multi-dimensional adaption criteria 
that fit within the framework of the four local anisotropic adaption operations — edge 
swapping, point insertion, point deletion, and nodal displacement. 

As a starting point, posit that an optimal mesh is one with the least number of 
nodes on which a positive scheme can obtain a solution free from artificial dissipation. 
The artificial dissipation terms for fluctuation splitting, cf)' and (/)'" in Eqn. 3.29, 
were seen to scale with the limited fluctuations, cf)* and (f)* in Eqns. 3.26 and 3.27, 
respectively. For a locally positive scheme the limited fluctuations are bounded by 
the total cell fluctuation. Thus, driving the cell fluctuation to zero will eliminate 



84 



CHAPTER 4. SCALAR MESH ADAPTION 



,-1 -0.8 -0.6 -0.4 -0.2 0, 



1 -0.8 -0.6 -0.4 -0.2 0, 



Y 





\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


0.8 


\ 




\ 


\ 


\ 


\ 






\ 


\ 


\ 


\ 




\ 


\ 


\ 




\ 




\ 


0.6 


\ 


\ 






\ 


\ 


\ 


\ 




\ 


\ 


\ 




\ 


\ 


\ 


\ 


\ 




\ 


0.4 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 




\ 


\ 


\ 


\ 


\ 




\ 


\ 


\ 


0.2 


\ 


\ 


\ 


\ 


\ 


\ 




\ 


\ 


\ 


\ 


\ 




\ 


\ 


\ 




\ 




\ 




\ 


\ 


\ 




\ 


\ 


\ 




\ 


\ 



-1 -0.8 -0.6 -0.4 -0.2 

X 



Y 




Figure 4.15: Starting mesh and converged solution, A = {y,—x). Solution contours 
vary on (0,1) with 0.1 increments. 



■0.6 -0.4 -0.2 0, 



Y 




Y 




Figure 4.16: Converged DMFDSFV solution and mesh after three mesh adaption 
cycles, A = (y, —x). Solution contours vary on (0,1) with 0.1 increments. 



4.2. CHARACTERISTIC ALIGNMENT 85 

artificial dissipation production, and vice versa. 

Combining Eqns. 3.22, 3.24, and 3.25, the cell fluctuation is, 

d = -|ni -1(6^2 - f/i) + 1^3 -1(6^3 - U2) (4.7) 

or, 

(j) =- [iifiiUi - {hni + 4n3)f/2 + hn3U3]-A (4.8) 

Noting the vector identity X^j^^ ndi = 0, the fluctuation can be expressed in compact 

notation, 

1 3 

9 =i^Y.^hkn^-A (4.9) 

Recall from the notation for an element's geometry. Figure 3.3, that edge i is the edge 
on the opposite side of the triangle from node i. If the cell-averaged flux Jacobian, A, 
is parallel to side i, then fii-A = 0. In the context of mesh adaption, assume that 
an edge, say without loss of generality edge 3, is aligned to be parallel to A, then 
from Eqn. 4.7 it is clear that the fluctuation, and hence the artificial dissipation, goes 
to zero as U2 — > Ui. Note that this condition for a vanishing fluctuation holds true 
irrespective of the value f/3. 

The known solution to steady advection is that the solution remains invariant 
along the characteristics. A coupled solution-adaptive strategy is apparent — the adap- 
tion aligns one edge of each cell with the discrete counterpart to the characteristic, 
namely A, and the fluctuation splitting scheme converges to an exact advection so- 
lution by equating each downstream node of an aligned edge with the value of the 
upstream node. Eflbrts along this tack follow, though not without some lingering 
questions. What of the non-linear problem, where characteristics vanish at a shock? 
How can systems of equations be handled with multiple or imaginary characteristics 
defined on each cell? What about combined advection-diffusion problems where the 
exact solution no longer remains invariant along characteristics? 

By way of demonstration that in fact fluctuation splitting does compute the exact 
solution to multi-dimensional linear advection problems when the grid is aligned such 
that each triangle with non-zero gradient has one edge parallel to the cell-average 
advection velocity, the two cases employed with the curvature clustering adaption are 



86 CHAPTER 4. SCALAR MESH ADAPTION 

considered. The 45° shear case can be captured using a mesh with only 6 nodes, none 
of which are on the interior. The optimal mesh and fluctuation splitting solution 
are shown in Figure 4.17. Contrast these results with the mesh-adapted DMFDSFV 
solution to this problem in Figure 4.14. Fluctuation splitting in this case produces 
a more accurate, diffusion-free solution on a mesh 17 times smaller. A DMFDSFV 
solution is performed on this optimal fluctuation splitting grid, yielding the results 
of Figure 4.18, where 30 percent of the shear discontinuity has been smeared by the 
outflow boundary. 

For the circular advection problem a mesh is constructed containing 10 nodes, an 
order of magnitude fewer than were in the adapted DMFDSFV results of Figure 4.16. 
The fluctuation splitting mesh and solution are shown in Figure 4.19, where the inflow 
profile is exactly mapped to the outflow boundary. The mesh is called 'optimal' 
for this case because it contains the fewest points required to convect a diflusion- 
free solution. However, the solution representation on the interior of the domain is 
exact only in a discrete sense. Note that while the DMFDSFV solutions used the 
compressive Van Albada limiter, the fluctuation splitting solutions were performed 
with the non-compressive Vlinmod limiter. The DMFDSFV solution on the optimal 
fluctuation splitting grid is shown in Figure 4.20, where it is clear that signiflcantly 
more nodes will be required to achieve reasonable accuracy. 

These test cases suggest a tremendous potential for highly accurate fluctuation 
splitting solutions on extremely coarse meshes, when properly aligned. 



4.2.2 Adaption Strategies for Fluctuation Splitting 

The fundamental strategy for optimizing a mesh for fluctuation splitting solutions to 
linear-advection problems is to align one edge of each triangle with the cell-average 
characteristic direction. Translating this requirement into a systematic logic for local 
adaption is not straight-forward, particularly for a variable advection velocity when 
one edge cannot simultaneously be aligned with the characteristics in the elements to 
both the right and left of the edge. 



4.2. CHARACTERISTIC ALIGNMENT 



87 



Y 




Y 



_i I I i_ 



-0.8 -0.6 -0.4 -0.2 



X 



X 



Figure 4.17: Optimal mesh and diffusion-free solution using fluctuation splitting, 
A = (1, 1). Solution contours vary on (0,1) with 0.1 increments. 



Y 





-1 -0.8 -0.6 -0.4 -0.2 

X 



Figure 4.18: DMFDSFV solution on optimal fluctuation splitting mesh, A = (1, 1) 
Solution contours vary on (0,1) with 0.1 increments. 



CHAPTER 4. SCALAR MESH ADAPTION 



Y 




Y 




X 



X 



Figure 4.19: Fluctuation splitting optimal grid and diffusion-free solution, 
A = (y, —x). Solution contours vary on (0,1) with 0.1 increments. 



Y 




Figure 4.20: DMFDSFV solution on optimal fluctuation splitting mesh, A = (y, —x) 
Solution contours vary on (0,1) with 0.1 increments. 



4.2. CHARACTERISTIC ALIGNMENT 





(a) Misaligned mesh. 



(b) Aligned mesh. 



Figure 4.21: Edge swap options for linear advection with fluctuation splitting. 

Edge swapping 

Consider the 45° shear advection on a unit square, Figure 4.21. For this problem 
A = X = (1,1) for all cells. The choice of diagonal perpendicular to A, Figure 4.21(a), 
constitutes a poorly aligned grid. The other choice of diagonal. Figure 4.21(b), creates 
a perfectly aligned grid. For the misaligned grid the cell fluctuations can be computed 
using Eqn. 4.9, 



</-. 



-(2f/i - U2 - U4 



h = 7;{U2 + U4-2U3 



(4.10) 



and their sum is (I)a + (1>b = Ui — f/3. 

For the grid-aligned case, the fluctuations are, 



(bn 



\iU. 



Ih 



4>A + 4>i 



which leads to the observation, 



(4.11) 



'>A + (pB = (t>a + (l>b = '^^a 



(4.12) 



Clearly, swapping the diagonal does not in itself reduce the total fluctuation. Yet it 
is known that fluctuation splitting will obtain the exact solution on the aligned grid 
and a diftused solution on the misahgned grid (recall the results of section 3.2.4). 



90 



CHAPTER 4. SCALAR MESH ADAPTION 



Still seeking a link between mesh alignment and fluctuations, consider the RMS 
of the fluctuations. It is postulated that the RMS of the fluctuations is less on the 
aligned mesh than on the misaligned mesh. The proof proceeds from Eqn. 4.12, 



'/>A + 0B = 2^ 


a. 




(4.13) 


(Pl + 2(f)A(l)B + (l'l =^l 


(4.14) 


(^l + fs =^l-2(l)A^B 


(4.15) 


= ^{m-4<i>A<i^B)+m 


(4.16) 


1 

~ 2 


\((1>a + 4>bV , , , " 
V 2 y 


+ 20^ 


(4.17) 


(l>l + fB = 2 (<^i - 2<^A</'B + (t>l) + 2^1 


(4.18) 


= \{ct>A-(t>Bf + '24>l 


(4.19) 


>'^4>l 


= <^l+<t^l 




(4.20) 



The use of the RMS of fluctuations to guide adaption for scalar problems has 
been proposed by Roe[32, 77]. The fluctuation splitting solver Roe employs is of the 
non-positive type, and for general solutions suffers from extreme dispersion errors. 
Also, nodal displacements are the only adaption operation demonstrated. 

A demonstration of the present edge swapping is performed for the 45° shear 
problem. The initial grid and fluctuation splitting solution are shown in Figure 4.22. 
The fluctuation splitting solution on this mesh is similar to the one obtained using 
DMFDSFV in Figure 4.13. However, after just a single edge swapping sweep the 
exact solution is obtained by fluctuation splitting, Figure 4.23. DMFDSFV was not 
able to match this accuracy from fluctuation splitting even on the highly adapted 
mesh from Figure 4.14. 



Point deletion 

Point deletion for a fluctuation splitting grid mimics the procedure previously dis- 
cussed in the finite volume context. If all elements connected at a given node have 



4.2. CHARACTERISTIC ALIGNMENT 



91 



Y 





\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


0.8 


\ 




\ 


\ 


\ 


\ 






\ 


\ 


\ 


\ 




\ 


\ 


\ 




\ 




\ 


0.6 


\ 


\ 






\ 


\ 


\ 


\ 






\ 


\ 




\ 


\ 


\ 


\ 


\ 




\ 


0.4 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 




\ 


\ 


\ 


\ 


\ 




\ 


\ 


\ 


0.2 


\ 


\ 


\ 


\ 


\ 


\ 




\ 


\ 


\ 


\ 


\ 




\ 


\ 


\ 




\ 




\ 




\ 


\ 


\ 




\ 


\ 


\ 




\ 





Y 



-1 -0.8 -0.6 -0.4 -0.2 

X 




Figure 4.22: Starting mesh and converged fluctuation splitting solution, A = (1, 1) 
Solution contours vary on (0,1) with 0.1 increments. 



Y 





\ 


\ 


\ 


/ 


/ 


/ 


/ 


/ 


/ 


/ 


0.8 


\ 


\ 


/ 


/ 


/ 


/ 


/ 


/ 




/ 


\ 


/ 


/ 


/ 


/ 


/ 


/ 


/ 




/ 


0.6 


\ 


/ 


/ 


/ 


/ 


/ 




/ 




/ 


/ 


/ 


/ 


/ 


/ 


/ 




/ 


/ 


/ 


0.4 


/ 


/ 


/ 


/ 




/ 


/ 


/ 


/ 


/ 


/ 


/ 


/ 




/ 


/ 


/ 


/ 


/ 




0.2 


/ 


/ 


/ 


/ 


/ 


/ 


/ 


/ 




/ 


/ 




/ 


/ 


/ 


/ 


/ 


/ 




\ 




/ 


/ 


/ 


/ 


/ 


/ 




\ 







Y 



-0.6 -0.4 -0.2 



-0.6 -0.4 -0.2 



X 



X 



Figure 4.23: Exact solution obtained by fluctuation splitting after one edge swap 
cycle, A = (1, 1). Solution contours vary on (0,1) with 0.1 increments. 



92 CHAPTER 4. SCALAR MESH ADAPTION 

small or vanishing fluctuations, then that node is a candidate for deletion. Edge 
swapping is performed to reduce the number of edges, and hence cells, connected to 
the node, under the restraint that the RMS fluctuations of the swapped configura- 
tions must remain small. If the number of cells connected at the node can be reduced 
to three, then the node can be deleted if the fluctuation remains small in the triangle 
formed by the agglomeration of the three connected elements. If four elements remain 
connected at the node, the point may be deleted if the RMS fluctuations remain small 
in either of the two possible agglomerations from four triangles to two triangles. 

When the point deletion algorithm is applied to the advected shear results seen 
in the edge swapping demonstration. Figure 4.23, the minimum optimal grid and 
associated exact solution, presented in Figure 4.17, are obtained after a single loop 
over the domain. 

Nodal displacement 

A scheme for displacing nodal coordinates to minimize RMS of fluctuations about 
the node has been presented by Roe[32, 77]. The development presented by Roe 
uses the same minimization scheme to evolve the solution as is used to drive the 
nodal positioning. That type of fluctuation splitting solver has a central difference 
flavor and is not monotonic. The present procedure incorporates the upwind, non- 
linear fluctuation splitting algorithm detailed in section 3.2.1 with some of the mesh 
movement strategies of Roe. The development also bears some resemblance to the 
adjoint equation adaption schemes of Anderson[98] and Venditti[99]. However, the 
adjoint schemes seek to evaluate changes in global parameters with respect to an 
error estimate computed on a coarsened mesh for a flnite volume solver, while the 
present technique is entirely local and does not employ a coarsened sub-mesh and is 
speciflcally for a fluctuation splitting discretization. 

At a given node, the nodal displacements are computed as a flrst step and then 
the solution is updated at the new nodal location via a local point-implicit inversion. 
In this manner a global mesh movement sweep can be accomplished in conjunction 
with a single Gauss-Seidel iteration of the solver. In this section the current node to 
be moved is globally numbered node i. Within each triangular element the nodes are 



4.2. CHARACTERISTIC ALIGNMENT 



93 



locally numbered 1-3. Derivatives in y are omitted when they exactly follow from the 
derivatives in x. 

The functional to be minimized is defined at the node as a sum of contributions 
from all cells surrounding the node (equivalent to Eqn. 13, p. 248 in [77]), 



T 






2 ^^ 

VT9i 



(7:)t5t^t 



oE-T'/'T 



(4.21) 



The weighting factor, Sj, is a positive scalar, generalizing to a symmetric, positive 
definite matrix for systems. The functional is thus a sum of positive semi-definite 
contributions from triangles containing the current node. 
The derivative of T with respect to a nodal coordinate is. 



9T, 
dxi 



E 



2 dx 



^ + Sx'/'y 



dxi 



(4.22) 



Note that the derivatives in Eqn. 4.22 represent the change in solution values as 
the discrete mesh is perturbed, and as such are to be interpreted in the context 
of variational calculus, and not as spatial gradients according to the more-familiar 
multi- variable calculus. 

The minimization of T can be performed using a fixed-point iteration to force the 
derivatives to zero, 

dT 
dxi 
dT 

dxi 

Equation 4.24 can be combined with Eqn. 4.22 in the form of a distribution method 
of steepest descent. 



,n+l 



A"a;, 



(4.23) 
(4.24) 



A"x,- 



<^2 9S 



'EjUJj- 



2 dxi ' " ' dxj 

Convergence can be enhanced over the fixed-point iteration by using a Newton 
scheme. Expanding the gradient in an approximate Taylor series. 



dXi 
oyt 



n+l 



n+1 



dT " ,„ d dT 
—- + A"x,^— ^— 

OXi OXi OXi 

dT " , „ d dT " 
■— + A"x,^— ^— 
dy^ dx, dy. 



An ^ dT 

+ ^ yi 

dyi dxi 



+ A"y, 



d dT 

dyi dy, 



(4.26) 

(4.27) 



94 



CHAPTER 4. SCALAR MESH ADAPTION 



leading to the form, 



A" 



.y^ 



d''T 


d^r 


fax 


dxf 


dxidiji 


-1 J 9x, 


a'^r 


q2j- 


1 ax 


dxidy-i 


^yf 


\dy. 



(4.28) 



In [32], Roe suggests neglecting the off-diagonal terms in Eqn. 4.28. 
Second derivatives of the objective function are. 



92 T 



.2 



9a; 



92 T 
dxidyi 



T 



E 



2 a2z 



b'jd' 



2 dxj 



+ 2(1)- 



T^T 



95t d(j)j 
dxi dxi 



+ 



dxi 



+ 



^T(n- 



dx'j 



(4.29) 



(pi 



d(f)j d'^j ^ dB.-j d(j)-j\ (/)j 9^St , ^ d<p-j d(^j 



dxi dyi dxi dyi 



+ 



2 9xi9yj 



+ '^T 



dxi dyi 



+ 4>j^j 



dxidyi 



(4.30) 



The fluctuation can be manipulated from Eqn. 4.9 as. 



<^ = P [Ui{y?, - 2/2, X2 - X3) + U2{yi - ys, X3 - xi) + U?Xy2 - yi, xx - X2)\-A 



2 



{{U2 - Us){y„ -X,) + {Us - L^i)(y2, -X2) + {U, - U2){ys, -xs)]-A (4.31) 



The spatial derivatives take the form. 



d(j) 


1 


0X2 


2 


d(^ 
dy2 


1 

~ 2 



3 (94 ^ ~(9/"/- 

(D\ - Us) Ay + 5] f//,n, • ^ + E ^^-^^^ --4^5^ 



{Us - U,)A^ + V U,i,n, • 1^ + V ^,n, -1^ 
^ ' ' ' 9y2 p^ 9y2 



(4.32) 



(4.33) 



The derivatives of the cell-averaged flux Jacobian will depend upon the particular 
flux function. However, since ^ is a weighted average of three nodal values. 



dA 



Id A. 



(4.34) 



dx2 3 dx2 
For uniform advection, ^ = 0. For circular advection, |^ = (0, — |) and |^ = (|, 0). 



For non-linear problems, in general. 



dA 



IdUo 



8x2 3 8x2 



(4.35) 



4.2. CHARACTERISTIC ALIGNMENT 95 

In keeping with the Gauss-Seidel update philosophy, only the derivative of the 
solution value at the current node is retained in the last term of Eqns. 4.32 and 4.33. 
That is, if the current node is designated node 2 of the triangle under consideration, 
then 1^ = 1^ is retained while |^ ~ #^ ~ is assumed. 

aX2 OXi OX2 OX2 

Evaluating |^ directly from the high-resolution non-linear fluctuation splitting 
scheme is impractical. Limiters such as Minmod are not continuously differentiable, 
and while the Van Albada limiter is differentiable its use does not lead to a con- 
venient explicit form from which to evaluate ir^. As an approximation to -tt-^ for 

J^ axi ^'^ axi 

the non-linear scheme, derivatives are sought using linear distribution schemes. Two 
linear choices for fluctuation splitting are to use a linearity preserving (second-order 
spatial accuracy), non-monotonic distribution or an upwind, monotonic first-order 
distribution. The linearity-preserving, non-monotonic scheme is of the Lax-Wendroff 
t3^pe[100], and tends to produce dispersion waves in response to nodal displacements. 
This behavior tends to under-predict the change in solution value at the perturbed 
node relative to the fluctuation splitting scheme employed herein. 

The linear upwind scheme is obtained from the present fluctuation splitting scheme 
by discarding the limiter. This scheme exhibits a dependency on the numbering of 
nodes within a triangle. To alleviate this dependency, the approximation to |^ is 
built by looping over all cells connected to node i and renumbering the nodes within 
each triangle so that the current node is designated as node 2 of the triangle. It 
is emphasized that the linear upwind scheme is not used in the calculation of the 
solution, but only employed to provide an estimate of the solution variation with 
respect to nodal displacements, providing the forcing functions for the mesh adaption. 

The distribution to node 2 of a triangle using the linear upwind scheme is obtained 
from Eqns. 3.22-3.30, with (j)*"^ = ^^ and (j)*" = (f)", as, 

a+iUi - U2) - p-{Us - U2) = a+Ui + {r - a+)U2 - p'Us (4.36) 

where, 

± a±\a\ 1 ± sign(a) , P±\P\ 1 ± sign(/3) 
a = -^— = a ^ [5 = ^— = /i ^ (4.37) 

Assembling all contributions from the surrounding cells of the form in Eqn. 4.36 and 



96 CHAPTER 4. SCALAR MESH ADAPTION 

solving for the steady state value of the current node yields, with U2 = Ui, 

/7,5](«+-r) =^{a+L\-p-U^) (4.38) 

T T 

The variation of the nodal solution with respect to nodal displacement can now be 
evaluated as, 

Recall that the solution at surrounding nodes is held fixed during displacements of 
the current node. 

The derivatives of the functions in Eqn. 4.37 are defined, 



da+ f a<0 dfr I If /3<0 



dx 




It « 


>o 


, Eqn. 3.22 leads to, 




da 

0X2 


Ay 

2 


+ li.n. 


oA 

0X2 


op 

0X2 


Ay 

2 


- \hn. 


oA 

0X2 



dx 



Ox 1 /3 > 



(4.40) 



0y2 2 2 Oy2 

op A^ \„ ^ oA 

7r^ = -V-o^3n3-T— 4.42 

0y2 2 2 Oy2 

For non-linear problems an implicit relation arises for -rr^ and |^. One option is to 
neglect the derivatives of A in Eqns. 4.41 and 4.42. Another option would be to lag 
these same terms from the previous iteration level. 

Second derivatives of the fluctuation with respect to variation of a nodal location 
follow from Eqns. 4.32 and 4.33, again incorporating the approximation |^ ~ |^ ~0, 

9V /.. rr.OAy „^ OAOU2 4. 70'^U2 ^rr^,^ 0\A ,_^, 

oi =a''.-ty^ + f.nr-^ + |„,.4^ + X:i',^,V^ (443) 

0'^4> ,rr r-^OA'' „^ OAOU2 h . ^O^^V^ ^rr^T-^ 0\A ,_,, 



4.2. CHARACTERISTIC ALIGNMENT 



97 



dx2dy2 



(Us - L\) 



dA"" dAy 



dx2 dy2 



+ kn2- 



2 dA dU2 

- + 



+ t2h2-A 



--, d'^a 



dx2dy 



dy2 dx2 dx2 dy2 

3 

+ Y.UA 



l-jllj ■ 



J=l 



d'^A 
dx2dy2 



(4.45) 



Second derivatives of A are developed in an analogous manner to its first derivatives. 
The second derivatives of the solution at the current node with respect to varia- 
tions in the position of the current node can be developed from the hrst derivative 

0, 



expression in Eqn. 4.39, again with the approximation |^ 



dU3 



dX2 



dx'i 



E' 



a 



fr 



T 



|2„,+ 



f/l 



d'a 
dx'i 



d'f5 

1^3 



#e(^ 

dxi ^ \ dxi 



dxf 

dfj- 
dxi 



u.E 



|2^,+ 



da 
dxf 



d^(3- 
dxf 



(4.46) 



dxidy, 



E("" 



8- 



E ^' 



2^,+ 



d'a 



U, 



d^p- 



m 

dyi 



E 



dxjdyi dxidy, 

da+ dp 



my 

rlnr- ^-^ 



dXi 



dxi 



dxi 



t'.E 



2^,+ 



d a 



da+ 
dyt 
d^p- 



dp- 
dyz 



dx.dy, dxidy. 



(4.47) 



The remaining derivatives to be specified follow from Eqns. 4.41 and 4.42, 



d^a 

dxi 


dAy 1 , ^ d^A 
dx2 2 dx2 


d^a dA^ 1 , . d\A 
dyl dy2 2 dyl 




d^a 1 dAy 

dx2dy2 2 dy2 


19i^ 1„ . d^A 
2 dx2 2 dx2dy2 


d^p 

dxi 


dAy 1 , ^ d'^A 
dx2 2 dxi 


d^P dA'' 1 ^ d^A 
dyl - dy2 2^'''' dyl 




d^i 1 dAy 


1 dA"" 1 „ . 92^ 

foT7o 



dx2dy2 2 9y2 



2 9x2 2 dx2dy2 



(4.48) 



(4.49) 



CHAPTER 4. SCALAR MESH ADAPTION 



For E, Roe[77] chooses Sj = ^, for which the derivatives are, 

dEj_ 1 dSj 

d'^Ej 2 fdSjY 1 d'^Sj 



dxf Sj \ dxi J Sj dx] 
d'^Ej 2 dSjOSj 1 d'^Sj 



(4.50) 
(4.51) 
(4.52) 



dx^dyi 5*4 dx^ dyi S'f dxidy^ 
The area of a triangle is, 

5't = - [xi{y2 - ya) + X2{yi - yi) + 2:3(^1 - ya)] 

leading to the derivatives, 

dSj ys - yi dSj Xx - X3 



9x2 2 9y2 

and. 



(4.54) 



2 - ;,.. -.^... -0 (4.55) 



5x2 ^yi dx2dy2 

This choice of weighting emphasizes fluctuations on the smaller cells. 

An alternative is to weight all cells equall}^, with St=1. Two other obvious choices 
for weighting are Et=5't, emphasizing fluctuations on the larger cells, and Ej = -f^-, 
for even stronger emphasis on the smaller cells. The derivatives for this latter case 
are, with Eqn. 4.55, 

dEj 2 dSj 



0Xi ^-'t ^'^i 

d'^Ej 6 (dSj 



dxi ^1 V ^^« 
d'^Ej 6 dSjdSj 



(4.56) 



(4.57) 



(4.58) 



dxidy, S\ dx, dy, 

The fluctuation splitting node movement techniques are evaluated for the familiar 
circular advection problem of the present chapter. One cycle of point deletion results 
in the grid and solution of Figure 4.24. The grid contains 70 nodes. 



4.2. CHARACTERISTIC ALIGNMENT 



99 



Y 





1 


0.8 


0.6 


0.4 


0.2 


c 














/ 


/ 


0.8 


< 


/ 


/ 


/ 


/ 


^ 


/ 


/ 


/ 




0.6 


/ 


/ 


/ 


/ 


/ 




/ 


/ 


/ 


/ 


/ 


/ 




/ 


0.4 


/ 


/ 


/ 




/ 




/ 


/ 


/ 






/ 


/ 


/ 


0.2 


/ 




/ 


/ 


k 






/ 


/ 


/- 




/ 


/- 











Y 



1 0.8 0.6 0.4 0.2 

X 




Figure 4.24: Starting mesh and solution for demonstrating fluctuation splitting node 
movement schemes. Contours vary on (0,1), with 0.1 increment. 



, 1 0.8 0.6 0.4 0.2 0, 



Y 




Y 




Figure 4.25: Mesh and solution after four fixed-point mesh adaptions with fluctuation 
splitting. Contours vary on (0,1), with 0.1 increment. 



100 



CHAPTER 4. SCALAR MESH ADAPTION 



Y 




Y 




Figure 4.26: Mesh and solution after four diagonal Newton mesh adaptions with 
fluctuation splitting. Contours vary on (0,1), with 0.1 increment. 



Applying the flxed-point iteration strategy for four node movement cycles results 
in the mesh and solution of Figure 4.25. This fluctuation splitting solution shows 
a somewhat improved accuracy over the optimally adapted DMFDSFV solution of 
Figure 4.16, despite a mesh with fewer than half the number of nodes. The flxed-point 
procedure is found to be a slowly converging technique. To improve the response, 
local iterations and/or over-relaxation can be applied. Unfortunately, the amount of 
over/under-relaxation for optimal convergence is problem and grid dependent. For 
the results of Figure 4.25, an over-relaxation factor of 10 was used with Ave local 
iterations per global adaption, with St=1. 

Employing the full Newton strategy to improve the convergence of the minimiza- 
tion procedure has not been encouraging for this case. Numerical stiffness due to a 
vanishing determinant in Eqn. 4.28 is the culprit, a condition that is likely to worsen 
for flner grids. 

However, the diagonalized Newton scheme proves robust and fast for this case, 
without the need for either local iterations or a tunable over/under-relaxation param- 
eter. Four cycles of the diagonal Newton scheme (St=1) yield the grid and solution 
in Figure 4.26. The mesh adaption is clearly more aggressive than for the flxed- 



4.2. CHARACTERISTIC ALIGNMENT 101 

point scheme, achieving slightly improved resolution of the solution at the outflow 
boundary. 



Point insertion 

Additional nodes are created by subdividing edges, in a manner similar to that de- 
scribed in section 4.1.1. However, instead of using an edge-based error estimate, the 
fluctuations in the cells to either side of the edge are used to trigger mesh refinement. 
If the magnitudes of the fluctuations in both cells, or the only cell for a boundary 
edge, exceed a threshold, then the edge is split by adding a new node at the edge 
midpoint. 

The various operations for performing mesh adaption in the fluctuation splitting 
context are combined as a series of sequential steps to form a complete adaption cy- 
cle. The steps are arranged in the same order as is enumerated in section 4.1.2. The 
complete fluctuation splitting mesh adaption is applied to the circular advection test 
problem for a single cycle. The initial mesh and solution were previously shown in 
Figure 4.15. The resulting mesh, containing 96 nodes, is shown in Figure 4.27(a). The 
associated solution, showing very good accuracy, is in Figure 4.27(b). The fluctuation 
splitting solution-adaptive procedure achieves slightly better solution resolution in a 
single adaption sweep than the state-of-the-art hnite volume solution-adaptive pro- 
cedure was able to obtain in three adaption cycles on a mesh with 50 percent more 
nodes. Thus, the present fluctuation splitting adaptive scheme is more than three 
times as fast as the hnite volume scheme which utilizes a posteriori error estimates. 

Note, however, that the 'optimal' fluctuation splitting mesh from Figure 4.19(a) is 
not achieved with only one adaption cycle. In fact, it appears that for this variable- 
velocity advection problem the local adaption strategy falls short of achieving the 
globally-optimal mesh. A retreat is therefore made from the goal of globally-optimal 
mesh adaption, and instead the present method seeks a consistently-improved solu- 
tion/mesh combination with each adaption cycle. 



102 



CHAPTER 4. SCALAR MESH ADAPTION 



Y 




Y 




(a) 



(b) 



Figure 4.27: Mesh and solution for circular advection problem after a single mesh 
adaption cycle with fluctuation splitting. Contours vary on (0,1), with 0.1 increment. 

4.3 Non-linear Advection 

The two solution-adaptive schemes, a finite volume solver with adaption based on 
edge error estimates and a fluctuation splitting solver with adaption to minimize 
fluctuations, are applied to the two-dimensional non-linear advection problem of sec- 
tion 3.2.4, repeated here. 



Ut + UU, + IT 



U{-l,y) =/7(0,y) = 



= 

U{x, 0) 



-2x 



To avoid the problem of a doubly-defined node at (—1, 0) and (0, 0), the inflow corners 
are set to f/ = 0, and thus the expansion at the inflow is linearly distributed between 
the corner points and the first node in from the corner, along the y-axis. 

The DMFDSFV scheme with edge error estimates is applied without modification. 
The initial mesh. Figure 4.28(a), contains 121 nodes. The DMFDSFV solution on this 
mesh. Figure 4.28(b), is very diffused and exhibits grid-induced asymmetries. Three 
full cycles of solution adaption are applied, nearly doubling the mesh density to 



4.3. NON-LINEAR ADVECTION 



103 



Y 





1 








0.5 








C 




\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 






\ 


\ 


\ 


\ 


\ 




\ 


\ 


\ 




\ 




\ 


\ 


\ 


\ 






\ 


\ 




\ 






\ 


\ 


\ 








\ 


0.5 


\ 








\ 


\ 


\ 






\ 


\ 


\ 




\ 


\ 


\ 


\ 


\ 




\ 




\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 


\ 






\ 


\ 


\ 


\ 


\ 




\ 


\ 


\ 




\ 




\ 


\ 


\ 


\ 






\ 


\ 




\ 


\ 




\ 


\ 


\ 


\ 


\ 




\ 



Y 



X 




(a) 



(b) 



Figure 4.28: Initial mesh and DMFDSFV solution for non-linear advection case. 
Contours vary on (-1,1), with 0.1 increment. 



237 nodes. Figure 4.29(a). The solution on this mesh shows a dramatic improvement. 
Figure 4.29(b), for shock thickness, shock speed, point of coalescence, and preservation 
of extremum in smooth regions. Note, however, that there is some asymmetry between 
the expansion fans toward the top of the domain, that the shock is not entirely 
straight, and that the compression fan begins to coalesce into a shock at y = 0.4, 
instead of at y = —0.5, the correct location. 

The fluctuation splitting adaption scheme is also applied for three cycles to the 
same problem and initial grid. The solution on the initial mesh is similar in char- 
acter to the DMFDSFV solution in Figure 4.28(a). The adapted mesh, containing 
206 nodes, and corresponding solution are shown in Figure 4.30. The adapted fluctua- 
tion splitting solution, using 14 percent fewer nodes, exhibits slightly greater accuracy 
than the adapted DMFDSFV solution, particularly in the expansion fan symmetry 
and shock coalescence point. One feature that is better resolved in the DVIFDSFV 
solution is the extremum between the compression and expansion fans on the lower 
right-hand side. The fluctuation splitting shock is wider at the coalescence point but 
then has comparable crispness to the DMFDSFV result and is a little straighter with 



104 



CHAPTER 4. SCALAR MESH ADAPTION 



Y 




Y 




(a) 



(b) 



Figure 4.29: Mesh and DMFDSFV solution after three adaption cycles, non-linear 
advection case. Contours vary on (-1.1), with 0.1 increment. 




(a) 



(b) 



Figure 4.30: Mesh and fluctuation splitting solution after three adaption cycles, non- 
linear advection case. Contours vary on (-1,1), with 0.1 increment. 



4.3. NON-LINEAR ADVECTION 105 

increasing y. The fluctuation splitting shock at the outflow is ever so slightly offset 
to the right from x = —0.5, the correct location. 

The DMFDSFV and fluctuation splitting meshes, Figures 4.29(a) and 4.30(a), 
have similar character in the expansion and compression fans. The fluctuation split- 
ting adaption does not cluster as many points to the shock, resulting in overall 14 per- 
cent fewer nodes. This fact that the fluctuation splitting adaption scheme can resolve 
crisp shocks without excessive clustering normal to the shock may have favorable im- 
plications when considering fluid dynamic problems with extremely strong shocks in 
the vicinity of more subtle, though still important, features, such as an entropy layer. 

While adapting to the non-linear problem, it became necessary to include an 
eigenvalue limiter in the fluctuation splitting algorithm to prevent expansion shocks. 
The one-dimensional eigenvalue limiting of Harten and Hymen (see section 2.2.2) is 
extended to multiple dimensions by searching for expansions in the ( and t] directions 
separately. Combining Eqns. 3.25-3.29, the artiflcial dissipation terms can be recast 



/ = -\a\A^U + sign(Q)7V/^, (/>'" = -\P\Ar,U - sign{P)M^ (4.59) 



\a\ and |/3| are then limited as in Eqn. 2.46 with the parameter e (Eqn. 2.47) deflned 



1 

Ho.) = 2 ™^^ 

1 

Hli) = 2 ™^^ 



Q, tihi-{A- Ai), lihi-{A2- A) (4.60) 

0, 4n3-(i2-l), knrCA-A^ (4.61) 



respectively. 

As a final note to this section, the fluctuation splitting solver is applied to the 
adapted mesh previously used with DMFDSFV, from Figure 4.29(a). The fluctuation 
splitting solution on this mesh is shown in Figure 4.31, as a demonstration that the 
fluctuation splitting solver still works on a mesh adapted to solution curvature. 



106 



CHAPTER 4. SCALAR MESH ADAPTION 




Figure 4.31: Fluctuation splitting solution on curvature-clustering mesh. Contours 
vary on (-1,1), with 0.1 increment. 

4.4 Advection-DifFusion 

The two solution-adaptive schemes are applied to the Smith & Hutton advection-dif- 
fusion problem of section 3.4, starting on the 1928-node Mesh C. The finite volume 
adaption with clustering based on edge error estimates is applied without modifica- 
tion, resulting in a 619-node mesh. The RMS difference between the solution profile 
at the outflow boundary for the adapted DMFDSFV result and the grid-converged 
solution profile from the previous chapter is listed in Table 4.1 along with the RMS 
difference for the DMFDSFV solution on the unadapted mesh C. Two cycles of mesh 
adaption have been performed, reducing the required number of nodes by two-thirds 
while improving the RMS outflow resolution by 28 percent. 

The incorporation of physical diffusion into the adaption strategy utilized with the 



DMFDSFV Fluctuation splitting 



adapted 
unadapted 



0.0208 
0.0288 



0.0063 
0.0068 



Table 4.1: RMS difference of solution outflow profile relative to grid-converged result. 



4.4. ADVECTION-DIFFUSION 



107 



fluctuation splitting scheme requires some modifications. A check on the magnitude 
of the dift'usive fluctuations in the surrounding cells is added to the criteria for deleting 
a node. For edge swapping, the RMS of the diffusive distributions are added to the 
RMS advective fluctuations to determine the optimal connectivity. An edge is split, 
adding a node, if the diffusive distributions sent to the end nodes of the edge exceed 
a threshold value. 

For nodal displacements, the advective fluctuation on a cell, Eqn. 4.31, is modified 
to include the diffusive distribution sent to the current node, c/)^ defined in Eqn. 3.51, 
repeated here. 






' T -0 "7 / ("7 / f/'i 



(4.62) 



The additional derivatives to be added to Eqns. 4.32 and 4.33 take the form. 



dxo 



dy2 



"45t 



"45t 



\ dji 1 dSj 



,dlh 



nd.. 5.9..yS^.¥.n.-n. + ^^^ + (.3-xO(f.^.-f/3) 



(4.63) 



1 dn 1 dSj 



,dU. 



ji dy2 5't 9y2 / ^ dy2 



(4.64) 



where the assumption |^ ~ |^ ~ has already been applied. The second derivatives 

^ OX2 aX2 ■-' '^^ 

of the diffusive distribution follow as. 



9^0^ p£l d^U2 

~45t dxl 



dx\ 



+ 



+ 



4// 5*7 



dX2 



fi dSj 
45| dx2 

1 d'^jl 



4St dx^ 



+ 



+ 



1 dfi 

4Sj dx2 



,o dU2 , 



// ( dS^ 



2 4^2 5^2 453 y Qy.^ 

1 9^_^aST\ d^ 
// dx2 Sj 8x2 J dx'^ 



3 

E 



xi){Ui-Lh 
Ujljl2fij-n2 

(4.65) 



108 



CHAPTER 4. SCALAR MESH ADAPTION 



d'cpl 



pii d'U2 ( n ds- 



dyl 45t dyl 



+ 



1 9/i 
AS\ dy2 4^9^ 



il^ + (ys - yi){i\ - Us) 
(yy2 



+ 



Ajl.Sj \dy2 



1 d'^n ji d'^Sj fi ( dSj 



ASj dyl AS\ dyl AS\ \ dy 



3 

E 



Uj£j£2nj-h2 



+ 



1 dft. 1 dSj 

Jj, dy2 Sj dy2 ) dy 



(4.66) 



d^(t>l 



fiei d'U2 



dx2dy2 45*7 dx2dy2 

1 dp, dfi 1 



+ 



jj, dS-\ 



1 dfj, 



45f 9x2 45t dx2 



^dlh 



+ 



'dy2 

p dSjdSj 
ifiSj dx2 dy2 45*7 dx2dy2 45*1 dx2dy2 45*1 dx2 dy2 



+ [y?, - yi){Ui - L\) 



9^/i jj. d'^Sj 



T.u,¥'- 



j=i 



^,i8p 



1 95t 



// 9y2 •S't dy2 J dx 



2nj-n2 



(4.67) 



The derivatives of the cell-averaged diffusion coefficient scale like, 



dfi 

dX2 



ldn2 



d'^fi 1 d'^iJ,2 



3 dx2 



dxl 



3 dxl 



(4.68) 



The variation of the dependent variable at the current node with respect to the 
nodal position also needs to be modified to account for the diffusion terms. The 
steady-state value of the current node, Eqn. 4.38, now becomes. 



u,Y,(»^-r + 



ASj 



E 

T 



a'^Ui — 13 Us 



45t 



{Uiiini + Usi3ns)-h, 



(4.69) 



and the variation, Eqn. 4.39, is replaced by. 



dxi 



T 
p 



r + 



ASj 



EU'.^-f'^- 



dxi 



dxi 



45t 



i^ 



1 dp 1 dSj 
p dxi Sj dxi 



[UiiiUi-hi + Uo/sUs-hi) + {x3 - Xi){Ui - U3) 



,, V- fda+ dB- if dp 



?/i 95t 



^-^ \ dxi dxi ASj dxi ASj dxi 



(4.70) 



4.5. RECAPITULATION 



109 



The second variations of the dependent variable, Eqns. 4.46 and 4.47, become. 



dxi 



E 



a 



+ E 

T 



[r + 



jii] 



f/i 



45t 
dxf 



-u.Y. 



dxi 



a 



r + 



ML 



U-- 



,^-2,(L,-^3)(.3-xO|-(4 



' dx, 



E 



jL 

dxi 



a 



r + 



ML 



(4.71) 



dxidyi ^ V 



45t 



-^«E 



52 



■^ 9xi5y, 



?^r^f«"-r+^^' 



T 






45t 



T 



a+ - /3- + 
dxidyi 



45t, 
92 /i^- 



f/. 



dxidy, 



.(^^-•^^)|-(ii)+(^^-^^^^V45x 



9y,: 4^ Sxj 



a 



r + 



4S't 



(4.72) 



The RMS differences of the solution profiles at the outflow boundary relative to 
the grid-converged result are in Table 4.1. Although the fluctuation splitting solution 
on the unadapted 1928-node mesh is good, one cycle of mesh adaption reduces the 
number of nodes by a factor of 2.8 to 695 nodes, while still producing some (7 percent) 
improvement in accuracy. 



4.5 Recapitulation 

Current state-of-the-art for anisotropic unstructured mesh adaption based on a poste- 
riori error estimates is implemented in an edge-based structure in conjunction with a 
finite volume solver. This type of adaption results in meshes where the node densities 
are clustered to regions of high curvature in the solution. Significant improvement in 
solution accuracy is verified using this technique on scalar model problems. 

Recognizing the remarkable property of the discretized fiuctuation splitting scheme 
that multi-dimensional advection can be solved exactly when one edge of each cell 



no CHAPTER 4. SCALAR MESH ADAPTION 

is aligned with the characteristic direction, a different mesh adaption scheme is pro- 
posed. Retaining the mechanics for performing only local operations, i.e. point inser- 
tion/deletion, edge swapping, and nodal displacement, a solution-predictive approach 
is chosen in favor of a posteriori curvature clustering. The concept of aligning cell 
edges with characteristic directions is generalized as a minimization procedure to al- 
low extension to diffusion problems and systems. Extending this process to non-linear 
problems leads to a multi-dimensional implementation of eigenvalue limiting. 

It is seen that while performing a series of local optimizations does lead to glob- 
ally improved solution accuracy and reduced grid sizes, in general a truly globally 
'optimal' mesh is not achieved in a reasonable number of adaption cycles. However, 
the solution-predictive adaption in conjunction with the fluctuation splitting scheme 
does provide moderately more accurate solutions on smaller meshes for comparable 
number of adaption cycles versus the DMFDSFV solver with adaption driven by error 
estimates. 

Considering extensions to three-dimensional hypersonic flow applications, perhaps 
the most promising difference between the two adaption strategies lies in their treat- 
ment of shocks. For the a posteriori adaption, the number of nodes clustered to the 
shock grows as the shock strength grows, which could lead to a bow shock dominating 
the adaption for hypersonic problems. In contrast, the minimization of fluctuations 
tends to merely align the grid with the shock, leaving the points outside the shock 
largely unaffected. 



Chapter 5 
Two-Dimensional Systems 



5.1 Overview 

The fluctuation splitting and DMFDSFV discretization schemes detailed in chapter 3 
for scalar advection-diffusion problems are extended in the present chapter to the 
system of equations governing the compressible fluid dynamics of a dilute, ideal gas 
for two-dimensional and axisymmetric flows. First, the mass, momentum, and energ}^ 
equations for an inviscid fluid, termed the Euler[86] equations, are formulated in both 
the fluctuation splitting and finite volume contexts. Then, the system is extended to 
include the effects of viscosity and conductivity as the Navier[87]-Stokes[88] equations. 
The formulation of the upwind fluctuation splitting scheme for the two-dimensional 
and axisymmetric Navier-Stokes equations is a leading-edge research area. 

The chapter concludes with veriflcation and validation of the schemes. A brief 
discussion of the coding strategy is included, immediately followed by a veriflcation 
of the code using the test cases and methodology of Shinghal[101] and Roache[102]. 
The validation cases range from the incompressible flat-plate to a Mach-17 cylinder. 

5.2 Inviscid Formulations 

Spatial discretizations are developed for the Euler equations using both the DMFDS- 
FV and fluctuation splitting schemes. The two-dimensional development is extended 

111 



112 



CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 



to cover axisymmetric problems through the additional appropriate radial derivatives, 
treated as source terms. 

The non-dimensional system of equations are taken from appendix B, Eqn. B.9, 
with F'' = B'" = as. 



tI7„Ut + V-(tZ7„F 



wB'' 



(5.1) 



with, 



U 



f p\ 

pu 

pv 

\PEJ 

pu pv 

pv? + P puv 
pvv pw^ + P 
puH pvH 

B'* =(0,0,P,0)T 

tz7 is a logical switch between two-dimensional [zu = 0) and axisymmetric 
equations and Wa = I — tu + wy is toggled by w between 1 (tu = 0) and y 



(5.2) 



(5.3) 



(5.4) 



5.2.1 Finite Volume 

Integration of the dependent variables over the control volume about node i is per- 
formed as. 



Wa\^t di^ = ZUaSjVi 



(5.5) 



a, 



For two-dimensional Wg, = 1, while for axisymmetric Wa can be either taken as 
^a = Vi, for mass-lumping to the node, or as the y- value of the centroid of 12^. 
The axisymmetric source term, B', is simply evaluated at the node as, 



B'dn =5,b; 



(5.6) 



5.2. INVISCID FORMULATIONS 



113 



The discretization of the fluxes follows the development of section 3.2.1, with the 
only modifications being the inclusion of zUa (equal to 1 for two-dimensional or the 
y- value of the quadrature point on the face for axisymmetric) and the definition of 
the artificial dissipation in Eqn. 3.8, which is. 



* =i|l-n|(UR-UL) 



(5.7) 



where by convention the right state is to the outside of the control volume while the 
left state is to the inside. 

In an analogous manner to the conservative one-dimensional linearization of sec- 
tion 2.4.1, the parameter vector, Z = ^/p [1, u, v, H]'^, is linearly averaged, 
Z = |(Zl -I- Zr), to provide the quantities. 



Z2 






Zr 



and the Roe-density remains from Eqn. 2.64, p = y/p\_pR. 

The projected flux Jacobian is decomposed as in Eqns. B.37-B.40, 



(5.8) 



|A-n| =X|A|X-^ 



(5.9) 



with A given in Eqn. B.38 and X given in Eqn. B.40. 

The product X~^(Ur — Ul) is expressed analogously to Eqn. 2.68[23], 



X-I(Ur-Ul) =x-^du 



2B 



( 2a^dp - 2dP \ 

2a^{7tdv - ri^du) 

dP + pa dV 

V dP- padV ) 



(5.10) 



where the projected velocity is V = V-fi and the averaged speed of sound for a perfect 

gas is. 



S2 ^ (.^ _ iw ^ 



~^9 ~^9 

U + V 



(5.11) 



114 



CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 



5.2.2 Fluctuation Splitting 

In the fluctuation splitting context, the parameter vector is taken to vary linearly over 
each element. The assumed linear variation limits the scheme to second-order formal 
accurac}^, but will allow for a positive formulation when combined with a non-linear 
distribution. Caraeni, Caraeni, and Fuchs[103], basing their work on the published 
formulations from the present report, use a quadratic variation of the parameter 
vector to derive a formally third-order scheme. That scheme, however, cannot be 
positive, a critical requirement for the robust computation of strong shocks. 

For a perfect gas, changes to the conserved variables can be related to changes in 
the parameter vector as. 



d\J =VzdZ 



U; 



2Z, 











Z2 


Zi 








Zs 





Zi 





ry 4: 


ry Z 


':'z. 


'-Zi 



(5.12) 



(5.13) 



Integration of Wa^Jt over an element leads to a mass matrix, 

WaVtdQ = WaVzZtdn (5.14) 

m Jn 

If mass-lumping to the nodes is employed, introducing temporal, but not spatial, 
errors, Eqn. 5.14 can be distributed to the nodes as in Eqn. 3.14, so that the sum of 
all contributions to node i equals Wa^SiUif. 

While some authors insist on upwinding source terms [3, 104], the present analysis 
considers an upwind distribution to be inappropriate for the axisymmetric source 
terms, which arise from purely geometric manipulations. The axisymmetric source 
term can be distributed to the node in a mass-lumped analogy as. 



Wa,Si\Ji 



wSiB' 



(5.15) 



which is equivalent to the finite volume treatment of Eqn. 5.6. A modification of this 
distribution is to send contributions weighted by the averaged values, 

St. 



"^wi ^i 'J it 



w—Bj + COE 



(5.16) 



5.2. INVISCID FORMULATIONS 



115 




Figure 5.1: Subdivision of triangular element into three quadrilateral integration 
areas. Dashed lines are the median-dual mesh. 

A more rigorous treatment integrates the source term analytically, based on a 
linear variation of the parameter vector. The only non-zero inviscid source term is, 



B'^ =P= - — - ( Z1Z4 

7 



Z2 + Z^ 



(5.17) 



The integration over the triangular element is divided into thirds along the median- 
dual boundaries, as in Figure 5.1, so that. 



i} = Qi + 1^2 + ih 



(5.18) 



The subintegrals are then distributed to the nearest node. Notice that the subdivided 
integration elements, ^^1-3, are quadrilaterals, whereas the original element was a 
triangle. The distribution formula is thus. 



zu^,S,V,, ^ w I B'dn, + COE 



(5.19) 



The integration of the source term over 12^ is expanded in detail in appendix C.1.1. 
Integration of the inviscid flux is performed as. 



v-iwaF'] dn= / zuaV-F'dn + w / F'' dn 

n ^ '^ Jn Jn 



(5.20) 



116 



CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 



The y-component of the fiux function can be written in terms of the parameter vector 
as, 



F'" 



ZiZs 

Z2ZS 

- {ZiZ, 

Z3Z4 



Z| + ^(ZiZ4-^ 



(5.21) 



A linear variation of the parameter vector over a triangular element can be represented 
as, 



Z(x,y) 



1 



2St 



e.jkZj [{x - Xi){yk - Vi) + {y - y,){xi - a^fc)] 



(5.22) 



where eijk is the cyclic-permutation summation operator. The hnear variation can 
also be written in the element-local (^, rj) coordinates, referring to Figure 3.3, as. 



Z(e, r?) = Zi + i(Z2 - Zi)e + f (Z3 - Z2)r? 

«-3 ti 



(5.23) 



The domain is on < r? < |i^ and < ^ < £3. The Cartesian coordinates map 
similarl}^. 



x{^^ri) =xi + —l\^x^ + —\xrj 

<-3 <-i 



(5.24) 
(5.25) 



Some general integration rules can be developed for linear variations over the trian- 
gular elements: 



dl2 =Sj 



X dO. = Sjx 



xy dVl = Sjxy 



St /__ 1 ^ 

— \xy-^2^x,y, 



(5.26) 

(5.27) 

(5.28) 



5.2. INVISCID FORMULATIONS 



117 



The cell- averaged value is, 



Xi + a;2 + X3 1 






(5.29) 



The last term of Eqn. 5.20 is distributed to the nodes in a manner similar to the 
source term. 



^u,S^V,, ^-w j ¥''di\ + COE 
In, 



(5.30) 



The integration rules from Eqns. C.16-C.20 are used to evaluate the integral, leading 
to, 

3 

I4Z1Z3 + 11(^1,^3 + Z1Z3,,) + 9Z1.Z3,, + Y, ^1.^3, 



Z1Z3 di\ 



St 



n. 



144 



i=i 



(5.31) 



for the continuity equation. The integrals for the other governing equations follow 
directly from Eqn. 5.31. 

The remaining term to evaluate in Eqn. 5.20 is the inviscid fluctuation. 



Jn 

ill 



25*7 Jn 
1 



25*7 Jn 
where dF' = F^ dZ and, 



^ I ti7„(nrF|-n3-F;) di} 

zUa(^iini-FzA^Z-ishs-FzA,,Z] dU 



(5.32) 



Z2 Zi 



-^z. 



^ z 






^3 




-1 



7 



z. 



7 
Z2 



Zi 

Z2 

-^2 ■^Z 



Zz 

z^ 



z?, 



-^z. 





7 -^ 



Z2 




^^1 



(5.33) 







Z\ z% 



(5.34) 



118 



CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 



The integration rule Eqn. 5.28 allows for the direct evaluation of Eqn. 5.32 as, 







-Wahni- 



+ ^^ahn^- 






j=i 



a 



'^ 1 Z^" 1 ^-^ ZUa, -> 



AjZ 



A,Z 



(5.35) 



Noting that A = Fz Z^ and, 



2v^ 



1 

-u 2 

-w 2 

-H + {j- 1) (u2 + ■7;2) -2(7 - 1)^ -2(7 - 1)?.' 27_ 



(5.36) 



with the tilde-averaged quantities defined as. 



U =U(Z) 



A^U = UzA^Z 



A,U = U^A,Z 



(5.37) 



leads to the fluctuation expressed as. 



4> = --ZUahfll- 



+ ^^ahn^- 



l-ifl-ly^A, 



0^ + 0" 



Equation 5.38 includes the approximation, 



A^U 



A,U 



(5.38) 



A, ^F^^.Z^ 



(5.39) 



A transformation of variables can be made to the auxiliary variables so that, 



4> = \5w4> 



(5.40) 



5.2. INVISCID FORMULATIONS 



119 



with XJw given in Eqn. B.61. The similarity transformations developed in section B.3 
lead to, 







-Wahni- 



+ ^^ahn^- 



A-i U-iES^^. 



3 ^ ZUn 



Wa; -i 



^ 4 I -^ -^ 5Z ^ ' A 



J=l 



-Wa (a A^W + ;9 A^ W 



A^W 



A,W 



(5.41) 



with A. = W[/AUvF and, 

where W[/ is given in Eqn. B.62 and, 



Wz = v^ 



O _H_ _!/_ 

1 





-V 



V 



1 



A„W = Wfr A„U = W7 A„Z 



6^^»? 



Z^T?^ 



(5.42) 



7/1 






-Z2 

-Z3 

using the relation. 



2Zi 



"-^H -2^M -2:^?; 2:^ 

7 7 77 

7-1 7, 7-1 7 7-1 7 



70^ * 70^ ^ 



7a 



T^3 



^1 






Zi 



7-1 
7a' 





^^1 










(5.43) 



/l = C-nT 



7-1 



The projection of A. has the simple form, derived as Eqn. B.54, 



n 



■A 



V 













VI 


nT 


= 





a'n 


V 





V 

V On'' 

V vy 

0^71"" a^n^ V 



(5.44) 



(5.45) 



120 



CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 



where the projected velocity is V = h-V. The generalized advection speeds are, 



a 



-ni- 



/3 =--nr 



incorporating the approximation, 






(5.46) 

(5.47) 



Aj =WfjAj\Jw 



(5.48) 



Linearity preservation for second-order spatial accuracy is obtained by limiting 
the fluctuations componentwise. 



</>: 



*« 



+ <^XQ,) = ^W1-V 



'j ' ^j "^y^i 



Q, 



(5.49) 

<^*" = ^ - ^] i>iQ,) = ^ {\-w {Q,}) (5.50) 

where the second equalities hold for symmetric limiters. The limiting ratio is, 



Qj 



^1 



In vector form, Eqns. 5.49 and 5.50 can be written, 

- *? , - f 

(f) = D«0 

4) = DV^ 



(5.51) 



(5.52) 
(5.53) 



with 



D« = diag (l - ^ (^] ^ D" = diag (1 - ^ {Q,)) 

Upwinding is achieved through the introduction of artificial dissipation 

0' = sign(a)0*' = -WaM„B^M-^\a\ aJw 
0" = sign(/3)0 '" = -WaM^Ty'^M/\f3\ A^W 



(5.54) 



(5.55) 
(5.56) 



5.2. INVISCID FORMULATIONS 



121 



where Mq, = sign(Q;) and M^ = sign(/3). The absolute values of the generalized 
advection speeds are developed using the following decomposition, which is exact for 
the two-dimensional equations but approximate for the axisymmetric form, 



a = —ni-A= —XAX 



(5.57) 



where A and X are defined in Eqns. B.38 and B.57, respectively. The absolute value 
is then defined as. 



\a\ 



2 ' ' 



(5.58) 



Expressions for the sign of the generalized wavespeeds are developed from. 



leading to. 



M. 



\cx\ = Mo,a 
M„ = X\A\A~^X~^ 



M„ =sign(V„)/ if |V„| > a 

sign(V„) 

nl sign(V„) -n^n^sign(V„) ^ 

-nlnls\gn{Va) ?ifsign(Va) ^ 







an? 



aril 



where Vq, = hi-V. Similarly, defining |/3| as, 

4 



\/3\ =-^Af|A|A' 



leads to. 



M, 



sign(V/3) 






M^ =sign(V^)/ 



nl sign(V^) 



if|V;,|>a 



-n 



x„y 



n^sign(V/3 



n^rzl sign (V^) 
nfsign{Vfi) 







n| 



am 



aun 



(5.59) 
(5.60) 



(5.61) 
if|V„|<a, (5.62) 



(5.63) 



(5.64) 



if|V^|<a (5.65) 



122 



CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 



where Vp = n^-V. Mq, and M^ have the property, 



M,-i 



M, 



(5.66) 



Eigenvalue hmiting for the suppression of expansion shocks can be introduced into 
the expression for \a\, Eqn. 5.58, by limiting |Ai| = IA2I = |V|, IA3I = |V + a\, and 
IA4I = |V — a| in the manner of Eqns. 2.46 and 4.60. If the limited eigenvalue is 
expressed as. 



I A 



lim 



:|A|+A, 



(5.67) 



then the additional artificial dissipation for eigenvalue limiting in the ( direction to 
be added to Eqn. 5.55 is, with A+ = ^Aaj + AaJ and A~ = |(Aa3 — AaJ, 



-Wn 



Aai 

nfA+ + nf Aa, n^,n\{A+ - Aa,) ^A" 

nlnl{A+ - Aa^) nf A^, + nf A+ ^A" 

an^A- an\A- A+ 

while the eigenvalue limiting in the 7] direction takes the form, 



A^W 



(5.68) 



-\-ZUa- 



Aa 








nf A+ + nf Aa2 



nlnl 







771^3 (A^ 



Aa- 



A2; 





^A- 



(A+-AaJ nfAA,+n^A+ ^A" 



077,3 A" 



anlA~ 



A^ 



\W 



(5.69) 



The fluctuation is distributed to the nodes using a simple extension of the scalar 
distribution, Eqns. 3.30 and 3.31, 



S2V2, ^ 

53U3, <- 

or in a more compact form. 



^(0*^ + /) + i(r' + 0'") + COi? 
l{4>*" -cj>"') + COE 



(5.70) 



5,:U,: 



7(3 - i){(t>*' + i-iycp') + (-4 + 57 - i'){<P*" + (-1)'0'": 

+ COE 7=1,2,3 



(5.71) 



5.3. VISCOUS FORMULATIONS 123 



where Eqn. 5.40 is used to define, 






0* = 'Uw4> , 




= Vw4> 


<p*" = IJw^ , 




= \Jw<P 



(5.72) 
(5.73) 

At the 15*'' AIAA Computational Fluid Dynamics Conference Prof. Philip Roe[10o] 
suggested including the radial distance, Wa, within the definition of the parameter 
vector. Further reflection reveals that \/ro^ is the proper term to consider. This 
approach has the potential to avoid some of the explicit integration by parts in this 
section and allow for cleaner expressions for many of the combined axisymmetric/two- 
dimensional relations, such as Eqn. 5.35. However, the flux function F is no longer 
just a function of state but also of position, so that the gradient can no longer be 
expanded as V-F = F^-VZ, which could lead to complicated expressions again. 
Also, the consistent incorporation of this redeflnition of the parameter vector into 
the viscous discretizations is not straightforward due to the difficulty in expressing 
all terms as explicit quadratic products of the parameter vector. 

5.3 Viscous Formulations 

The complete set of governing equations for the motion of a two-dimensional or ax- 
isymmetric viscous fluid are presented in appendix B as Eqn. B.9, 

ti7„Ut + V-(ti7„P) =V-{waF'')+zuB'' -zuB'" (5.74) 

Integrations of the conserved variables, inviscid flux, and inviscid axisymmetric source 
proceed as developed in section 5.2. 

Integrating the viscous flux over a triangular element leads to the viscous fluctu- 
ation (see Eqn. 3.47), 



0" = / V-{waF'')dn (5.75) 

Jn 

The nodal distributions are developed in a flnite element sense by integrating by parts 
as the extension of Eqn. 3.49, 

0^ = / v.w^F" -ndT- I w^F" • Vv, dU (5.76) 

Jr .In 



124 



CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 



For interior nodes the boundary integral in Eqn. 5.76 will sum to zero and the volume 
integral is integrated analytically for a linear variation of the parameter vector, 

3 



VZ 



^JZ^A 



■2St 



hj Vfj 



j=i 



2S^ 



(5.77) 



^'=^.. 



The viscous flux is, 



tu^F" • hi dil = —^ F • n; 





T 



Rp 



with the shear-stress tensor defined, 



IJ, 



W +{V'V 



\kVT + VtJ 



-* -^\T 2 ^ ^ 



-V-VI 



(5.78) 



(5.79) 



(5.80) 



Struijs[34] et al. have shown that derivatives of primitive variables can be consis- 
tently represented in terms of the parameter vector gradients as. 



VV =V7VZ 



(5.81) 



where, 



and. 



V, 



2Zi 








-* 


1 

Zi 





-t 





1 

Zi 



L 7 



-■^z. 



-^z. 



-^z. 









(5.82) 



V =V(Z) 



ZI 

Zi 

la 

Zi 



\^[z,-z,-\[zl + zl)]) 



(5.83) 



5.3. VISCOUS FORMULATIONS 



125 



Further, the consistent temperature gradient is, 



VT 



VP PVp 



pVP - PVp] 



pR p^R Rp^ 
The viscous fluctuation is then distributed to the nodes as in Eqn. 3.52, 



S,\J,, ^clf,+COE 



(5.84) 



(5.85) 



An alternate approach to integrating the viscous flux is obtained by using the 
divergence theorem, 

/ V-{waF'')di^ = i wJ^'-ndY (5.86) 

where i^i is the generalized control volume containing node i, with two-dimensional 
area equal to Si, and F, is the boundary of Qj. 

Haselbacher[106] et al. have recently presented an approximate treatment for in- 
tegrating Eqn. 5.86 on two-dimensional unstructured grids, which they relate to the 
thin-layer approximation of the Navier-Stokes equations presented by Gnoff'o[16] for 
structured grids. The method preserves positivity for the Faplacian and is transparent 
to grid topology. 

The development begins with the expression. 



/ 



F'-n 



Re 










\ 



\KVT-h + p ^{'^ ■¥){¥ -n) + ^VV^ -h - uVvi + vVu-i J 



(5.87) 



where t is a tangent vector with components (— n^, n^). Haselbacher's approximation 
neglects all tangential terms and approximates V-T/ ~ n^Wu-fi + vyVv-fi. Using the 
notation m„ = Vu-n, etc., and including the axisymmetric terms gives the approxi- 
mation. 



V-V 



Vn-fl + W- 

y 



(5.88) 



126 CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 



leading to, 



F^-n -' ^ 



Re 



Vj + ln^ {Vn-n + w\ 



\ 



(5.89) 



V^T„ + v-Vn + \v-h (v;-n + w^)) 

A further simplification aligns n with the nearest mesh edge for faces of F on the 
interior of the domain, so that terms such as m„ reduce simply to the difference in 
nodal values divided by edge length. Also, Wa is chosen to be the midpoint of the 
edge. 

Including one more approximation, namely replacing the length V of the median- 
dual face with the length of the associated containment-dual face, has the effect of 
canceling some of the errors for very high-aspect-ratio cells introduced by assuming 
n is edge-aligned. For low-aspect-ratio cells, the containment dual is the same as the 
median dual and the true n is closely aligned with the mesh edge. This implementa- 
tion is similar to the suggestions of both Barth[22] and Haselbacher[107], yet retains 
the global median-dual implementation required by a distribution scheme. 

The viscous axis3^mmetric source term has only one non-zero entry, 

i?r =^U--V-A (5.90) 



3i?eo„ V y 

Integrating using the Haselbacher approach leads to, 

Mass lumping to the node for the first term yields, 

/ ^dil =ii,Si"- (5.92) 

Ju, y yi 

while the second term is evaluated at edge midpoints. 

5.4 Boundary Conditions 

5.4.1 Weak Formulations 

Boundary nodes may be updated either strongly, where the nodal solution values are 
simply assigned a priori, or weakly, where the solution values at the boundary nodes 



5.4. BOUNDARY CONDITIONS 



127 




Interior 



Exterior 

I = Boundary state 



Reconstructed state 



Figure 5.2: Weak implementation of finite volume boundary condition for node 0, 
imposed by specifying external state. Quadrature points denoted by X's. 



are relaxed in time using the same formulations as for interior nodes. 

For finite volume, the weak boundary implementation specifies the solution state 
to the outside of boundary faces, then allows the approximate Riemann solver to 
construct the appropriate fluxes through the boundary faces. See Figure 5.2 for an 
illustration of the weak finite volume boundary condition. The solution state to the 
inside of the boundary face can be set from either a first- or second-order reconstruc- 
tion from the node. For some cases, second-order reconstruction to boundary faces 
has led to localized oscillations in the solution convergence at boundary nodes. 

Weak formulation of the fluctuation splitting boundary condition is developed 
using fictitious "ghost" nodes, one for each boundary node, as shown in Figure 5. -3. 
Considering the scalar case, the positioning of a ghost node such that the edge con- 
necting the ghost and boundary nodes is parallel to the advection velocity results in 
a boundary fluctuation of, 



^6co = 7:^oiA-hoi{Uf^ - Uo) 



(5.93) 



for node of Figure 5.3. Observe that this formulation is independent of the physical 
location of the ghost node, so the ghost node can be chosen to be infinitesimally close 
to the boundary node it supports. The solution state at the ghost node remains to 



128 



CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 



/oO II Acq 
/ll II Aci 



Interior 




noi 



Exterior 




1 



/o, /i are ficti- 
tious nodes for 
sending bound- 
ary fluctuations 
to nodes resp 1. 



/o 



/i 



Figure 5.3: Weak implementation of fluctuation splitting boundary condition, im- 
posed by specifying external state at ghost nodes /o, /i- 



be specifled, and can be varied node-to-node. The associated artiflcial dissipation is, 



Cn =sign(^-noi) 



^bco 



and the resulting distribution is. 



^of^^o, ^^{0bco + (1>U + C0E 



(5.94) 



(5.95) 



Since no account of the ghost cell area is made in forming the dual area on the LHS 
of Eqn. 5.95, a scale factor on [^, 1] can be applied to the distribution. 

The extension to systems follows by analogy. The boundary fluctuation is deflned. 



4>b 



zu 



ao 



ioiAbco-noii^fo -Wo 



bco n 

with the artiflcial dissipation, 

^hco =sign(Aco-^oi)0bco 



(5.96) 



(5.97) 



Additional dissipation for the suppression of expansion shocks is added to Eqn. 5.97 



5.4. BOUNDARY CONDITIONS 



129 



following the form of Eqns. 5.68 and 5.69 as, 








nfi(AA3 + AAj 

n^in^i(AA3+AAj 

an^i(AA3-AAj 







n^;(AA3 + AA,: 
an^i (Aa3 - Aa4 





^(Aa3-AaJ 

=f(AA3-AAj 

(Aa3 + AaJ 



The distribution to the boundary node is then formed as 



lvw{kco + 4>'i>J+COE 



(W;„ - Wo) 

(5.98) 
(5.99) 



This system treatment is only approximate, as the cross-fluctuation does not van- 
ish when V \\ /qO, as in the scalar case, but reduces to the term. 



(5.100) 



Strictly, there should be some cross-coupling with the neighboring boundary nodes. 
However including the term from Eqn. 5.100 requires explicitly locating the ghost 
nodes, which can be impossible for certain geometries. 

The distribution to node 1 is formed analogousl}^, substituting for 1 in Eqns. 5.93- 
5.100. 
























^/o 
















5.4.2 Boundary Types 

The freestream boundary condition is enacted by specifying a complete, constant 
thermodynamic state and velocity vector. By using the weak boundary enforcement, 
this one boundary condition covers the four permutations of subsonic or supersonic, 
inflow or outflow. 

The inviscid wall boundary is implemented by mirroring the primitive variables, 
either across the face for DMFDSFV or at the node for fluctuation splitting. 



130 



CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 



Viscous walls define a no-slip velocity and a specified wall temperature. The zero 
velocity at the wall causes the viscous axisymmetric source to be zero. 

Both the full viscous flux and the approximate thin-layer flux of Haselbacher 
reduce to, 

1 



F'-n 



R. 



0, iiV„, kT^ 



(5.101) 



at a wall, since V , VV , and Vn-fi go to zero. Deflning the heat transfer into the wall 
according to Fourier's law, 



Qu 



Rp 



-T 

■J- 77, 



and the wall shear stress. 



I" -V 



allows the Eqn. 5.101 to be written as. 



F^-n 



Rp 



[0, r^, Qw] 



(5.102) 



(5.103) 



(5.104) 



where the minus sign results from the choice of an outward unit normal, n, to the 
control volume, which points into the wall at a boundary. 

The solid wall is enforced weakly, by specifying the wall shear that will drive the 
flow momentum to zero and the heat flux that will drive the solution temperature to 
the desired wall temperature. An advantage of this weak approach is that wall heat 
transfer and skin friction are solved for directly, rather than as a post-processed least- 
squares reconstruction. Using an explicit update, the wall heat flux can be isolated 
as, 

WaS 



Qn 



T^a J2 Ti, 

Similarly, the wall shear is. 



At 



{Ui-U,e{T^))+RHSl 



+v 



(5.105) 



tJ7aI]r« 



At 



iU2,Us) + RHS'^%^ 



(5.106) 



5.5. TEMPORAL EVOLUTION 131 

On the axisymmetric axis the control- volume centroid for Wa in Eqn. 5.5 is used for 
the temporal evolution, to avoid a singularit}^ in the nodal update. The DMFDSFV 
axis condition is implemented by setting all fluxes to zero through the axisymmetric 
axis. For fluctuation splitting the axis is treated in the same manner as an inviscid 
wall, but with the radial term set to the cell centroid to ensure the numerator in 
the distribution contribution goes to zero faster than the denominator from the LHS 
time evolution. These implementations of the axis3^mmetric axis are observed to 
work well in practice except at the stagnation point on the axisymmetric axis, which 
is a singularity in the fiowheld as well as a mathematical singularity. The deficiency 
observed with the weak boundary implementation at the axisymmetric stagnation 
point is a lack of preservation of massflow, where the velocity vectors sometimes 
allow a slight leak into or out of the domain, depending upon the particular flow 
conditions. 



5.5 Temporal Evolution 

Solutions at the nodes are updated using an explicit forward-Euler LHS. A Jacobi 
relaxation strategy is followed with local time stepping. 

The CFL (Courant[108] et al.) criteria for explicit schemes is adapted for use with 
the node-based unstructured scheme. The inviscid timestep is defined by the most 
restrictive time for signal propagation, at the eigenvalue speeds, between adjacent 
nodes, 

Ato = mm -^ = mm -^ I (5.10^) 

Vl^o-roil + aidj \\VQ-fQi\ +aQ \\foi\\ j 

where the current node is node and i takes on nodal values for each distance-one 
neighbor of the current node. 

The viscous timestep restriction is taken to be an approximation based upon the 
positivity analysis for the scalar case, Eqn. 3.54, assuming order-1 Prandtl number, 

Ato = 45oPoi?e^?R (5_^0g^ 



132 CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 

The stability and convergence of axisymmetric solutions is found to be enhanced 
by scaling the timestep for points near the cylindrical axis by the maximum of either 
the node height or the square root of the median-dual area. 

The more restrictive of the inviscid or viscous timestep is used to scale the nodal 
update. 

5.6 Verification and Validation 

5.6.1 Coding Strategy 

The code is written using a literate programming[109] style that blends source code 
(written in C) with documentation (KTfTJX) in the same file. Maintaining close physi- 
cal proximity between the code and documentation aids the debugging process. Mod- 
ularity is emphasized, with individual functions being verified using sample inputs 
prior to being linked with the main driver routine. 

Verification of the complete solver is performed in stages using a methodology 
derivative of Singhal[101]. A variety of canonical cases are constructed, including 
grid distortions, that are designed to exercise combinations of the various functions 
that comprise the complete solver. Validation is the application of the solver to 
complex flowfields with comparison to benchmark data. 

5.6.2 Inviscid Verification 

Distorted mesh 

The first verification case simply passes a uniform flow through a distorted grid, with 
success being the preservation of uniformity to at least six significant digits. The 
domain is initialized to stagnant conditions with freestream flow impulsively applied 
at the boundaries. A variety of flow angles were tested on —180° < AOA < 180° for 
subsonic, transonic, and supersonic Mach numbers. Regular, high aspect ratio (100), 
skewed (2° < 6* < 175°), and randomly distorted (Figure 5.4) meshes with 121 nodes 
were used. Initial runs were instrumental in refining the treatment of eigenvalue 



5.6. VERIFICATION AND VALIDATION 



133 



Y 



0.5 - 




Figure 5.4: Sample randomly distorted mesh used for solver verification cases. 



limiting for fluctuation splitting as described in sections 5.2.2 and 5.4. All final runs 
were successful for both DMFDSFV and fluctuation splitting. 



Converging Mach streams 

Thermodynamic routines are verified by considering converging Mach streams, in- 
clined at ±10°. The upper stream is at Mach 2.3 while the lower stream has Mach 1.8. 
The two streams have matched densities but a temperature ratio of 1.0812, resulting 
in a horizontal slip line behind the oblique shocks. A complete description of the 
analytic solution appears in Figure 5.5 and Table 5.1. 

A sequence of four meshes, with a refinement ratio of 1.5, is considered. The 
meshes are triangulated from 16 x 16, 24 x 24, 36 x 36, and 54 x 54 grids. The 
triangulated 16 x 16 grid is shown in Figure 5.6. The finer meshes cover the same 
domain and are constructed similarly to the shown mesh. 

A Mach-number contour plot for fluctuation splitting on the finest mesh is shown 



134 



CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 



State A 
Mach = 2.3 
AOA = -10 




State B 
Mach = 1.8 
AOA = 10° 



Figure 5.5: Description of converging Mach stream problem. Flow from left to right, 
with oblique shocks, solid, and slip-line, dashed, emanating from trailing edge of 
splitter plate. 



State 


p, kg/m^ 


T, K 


P, kPa 


V, m/s 


A 


1.2 


300 


103.34 


798.6 


B 


1.2 


324.7 


111.73 


649.9 


C 


1.813 


356.7 


185.62 


723.7 


D 


1.718 


376.4 


185.62 


563.7 



Table 5.1: Analytic thermodynamic states for converging Mach streams. 



5.6. VERIFICATION AND VALIDATION 



135 



Y 



7\?S?\7\?S?\7S? 


?S?S?S7S?S'/S?S? 


7\?V\?\?\?\?V 


05-7^7^?\7^?^?\7^7 


7!i?y\7^?\/\?^? 


7yy\7yy\7y 


7S7y^7S7VS7S? 


0- ?Vy\7v\7\?S? 


7\7v\7\7S?\7\7 


7^?y^7S?V\7S? 


?S?S?\?\?\?\?S7 


°'-7S7y^7S?V\7S7 


7VV^7VV57V 


7\7v\7s7v\7v 


1 7S7\7S7S7S7\7S7 



0.5 1 

X 



Figure 5.6: 16 x 16 mesh for converging Mach streams. 



in Figure 5.7, showing crisp discontinuity resolution and the correct post-shock Mach 
numbers. The shock angles for all eight cases, i.e. DMFDSFV and fluctuation splitting 
on each mesh, are measured to be correct within ±1°. The L2-norms of the primitive- 
variables error at states C and D are plotted versus the characteristic mesh size in 
Figure 5.8. The slopes of the regression lines are indicative of the order of accurac}^ 
with respect to grid convergence of the two schemes for this test case. DMFDSFV 
exhibits second-order convergence, as expected. Unexpectedly, fluctuation splitting 
shows super-convergence for this particular case. True multi-dimensional upwinding 
is likely the source of the exceptional fluctuation splitting accuracy for this purely- 
supersonic flow. Supplementing the graphical determination of the grid-convergence 
rates, the equations presented by Roache[102], based on a Richardson extrapolation, 
yield average grid-convergence rates of 3.0 for fluctuation splitting and 2.1 for DM- 
FDSFV. 

Temporal convergence rates are plotted in Figure 5.9, with timings performed on 
an IRIS RIOOOO platform. All cases were run using the Minmod limiter and a Jacobi 



136 



CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 



Y 




M = 1.91 



M = 1.45 



Figure 5.7: Mach contours from fluctuation splitting on finest mesh. 



logio 1 1 £'?''" or I 



2:1 slope 



"El 



o. 



3:1 slope 



login Vnodes 



Figure 5.8: Grid convergence rates for converging Mach stream case. Circles = fiuc- 
tuation splitting, squares = DMFDSFV. 



5.6. VERIFICATION AND VALIDATION 



137 



L2 (residual) 




10" 10' 

CPU seconds 



Figure 5.9: Convergence histories for converging Mach stream case. Fluctuation 
splitting solid, DMFDSFV dashed. Coarsest mesh on left, finest on right. 



update strategy with local time steps. Fluctuation splitting was run with a unity CFL 
number, while best convergence for DMFDSFV was found for CFL=0.7. Fluctuation 
splitting runs at 145 jis per node per iteration, while DMFDSFV runs at 165 //s per 
node per iteration. 



Diamond airfoil 

A verification of the inviscid wall boundary condition is performed on a diamond airfoil 
at zero angle of attack and Mach 1.5. The flow deflection is five degrees. The grid 
is shown in Figure 5.10. A Mach-number contour plot using fluctuation splitting is 
shown in Figure 5.11. The corresponding DMFDSFV solution, not shown, is visually 
indistinguishable from the fluctuation splitting solution. The analytic drag coefficient, 
based on chord length, is 0.02760. The fluctuation splitting drag coefficient is 0.02638, 
for a 4.4 percent error. The DMFDSFV result has an error of 6.6 percent from a drag 
coefficient of 0.02579. 



138 



CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 



Y 




Figure 5.10: Grid for diamond airfoil verification test. 



Y 




Figure 5.11: Mach contours on diamond airfoil, M = 1.5, fluctuation splitting solu- 
tion. 



5.6. VERIFICATION AND VALIDATION 



139 



Y 




Figure 5.12: Two-dimensional 10 percent circular bump mesh with isobars from fluc- 
tuation splitting solution at Mach 0.1. 



Circular bump 

A subsonic two-dimensional verification is performed on a 10 percent circular bump 
at Mach 0.1. The 1389-node mesh with isobars from the fluctuation splitting solution 
is shown in Figure 5.12. A true incompressible inviscid flow would have symmetric 
isobars fore and aft, and zero drag. The fluctuation splitting drag coefficient, based 
on cord length is 0.0058. DMFDSFV predicts a drag coefficient more than twice as 
large, 0.0128. A lower fluctuation splitting drag coefficient is indicative of lower levels 
of artificial dissipation in the solution for this case. 



Sphere 

In a similar vein, Mach 0.1 axisymmetric flow over a sphere is tested on a 1369-node 
mesh. The drag coefflcient, based on frontal area, is 0.43 for DMFDSFV but 0.56 for 
fluctuation splitting. Contrary to expectation, the increased artiflcial dissipation in 
the DMFDSFV solution creates enough of a total pressure loss to nearly eliminate 
separation on the leeside, whereas the leeside increase in pressure toward the centerline 
in the fluctuation splitting solution does produce a sizable separation region, and in 
this case a larger drag coefficient. As with subsonic bump case, true incompressible. 



140 CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 



inviscid flow should theoretically produce zero drag. Both solvers converged to stead}^ 
solutions for this case. 

Cone 

The hnal inviscid veriflcation is for an 11-degree semi- vertex-angle cone at Mach 1.5. 
The well-established Taylor-Maccoll[110] method for the conical supersonic Euler 
equations predicts a drag coeflicient, based on base area with no base pressure, of 
0.7795. The fluctuation splitting solution, which converged seven orders of magni- 
tude in 38 seconds, predicts a drag coefficient of 0.7785, for only a 0.13 percent error. 
The DMFDSFV solution, which took 13 percent longer at 43 seconds to reach seven 
orders of magnitude residual convergence, predicts a 0.7754 coefflcient, for an error 
of 0.53 percent. 

5.6.3 Viscous Validation 

Two canonical viscous validation cases are considered: a subsonic flat plate and a 
hypersonic cylinder. Steady laminar solutions are obtained using the Haselbacher 
thin-layer viscous treatment with containment-dual modification as described in sec- 
tion 5.3. 

Flat plate 

The classic Blasius[lll] flat-plate boundary layer problem is solved on a rectangular 
domain. Mach 0.3 flow enters 2 units upstream of the plate leading edge, which is 
located at the origin. The plate is 4 units long, ending at an extrapolation outflow 
boundary. The upper boundary is 1.2 units above the plate. The Reynolds number 
is lOl 

The meshes are obtained from a structured grid containing 37 equally-spaced 
points parallel to the plate, 12 points upstream of the plate and 25 points on the 
plate, and 41 points normal to the plate. The vertical grid spacing at the wall is 
0.001 units with an exponential stretching as described in Ref. [112], placing approx- 
imately 20 nodes within the boundary layer. The unstructured mesh is formed from 



5.6. VERIFICATION AND VALIDATION 



141 




0.25 0.5 0.75 




0.25 



0.5 0.75 



(a) Fluctuation splitting. 



(b) DMFDSFV. 



Figure 5.13: Boundary layer profiles of tangential velocity extracted from three sta- 
tions on flat plate. 



the structured grid using diagonal cuts in an alternating pattern. Two coarser meshes 
are similarly constructed by successively deleting every-other node in the wall-normal 
direction, leaving 10 and 5 nodes, respectivel}^, in the boundary layer for the medium 
and coarse grids. 

Boundary layer profiles of u are extracted at a; = 1,2,3 from both the fluctu- 
ation splitting and DMFDSFV solutions and plotted versus the Blasius solution in 
Figure 5.13. The boundary layer scaling variable is defined as. 



V =y 




(5.109) 



142 



CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 




0.25 



0.5 0.75 




0.25 



0.5 0.75 



(a) Containment dual approximation. 



(b) Strict median dual implementation. 



Figure 5.14: Boundary layer profiles computed using two different viscous dual mesh 
definitions. 



Both solution sets match the Blasius profile, indicating well-developed flow with ad- 
equate grid resolution on the finest mesh. 

Figure 5.14 shows the effect of using the containment-dual approximation in the 
Haselbacher thin-layer viscous treatment. Boundary layer profiles of u are again 
extracted at x = 1,2,3, with both solutions being run with fluctuation splitting. 
Figure 5.14(a) is the same as Figure 5.13(a), while Figure 5.14(b) uses the strict 
median-dual definition for the viscous terms. For the highly-stretched grid elements 
used in this case, it is clear that the containment-dual approximation provides im- 
proved boundary-layer resolution, while omitting the approximation leads to a profile 
that is "too full." 



5.6. VERIFICATION AND VALIDATION 



143 




Blasius 



Fluctuation splitting 

DMFDSFV 



J I I I I I I I I I I I I I I I I I L. 

"O 0.25 0.5 0.75 



'VR, 



V\/ ttpX 



Figure 5.15: Boundary layer profiles of vertical velocity extracted from midpoint of 
flat plate. 



The ti-velocity profiles from the fluctuation splitting and DMFDSFV solutions 
are compared in Figure 5.15, both extracted from the plate at a; = 2. The fluctu- 
ation splitting solution comes much closer to matching the Blasius profile than the 
DMFDSFV result. Excessive artificial dissipation is produced by the DMFDSFV 
scheme in the y-momentum equation, which suppresses the ti-velocity below the ana- 
lytic value. The artiflcial dissipation contributions to the y-momentum equation are 
plotted for both fluctuation splitting and DMFDSFV in Figure 5.16. The vertical 
scale has been enlarged by a factor of 30 to zoom in on the boundary la3^er in Fig- 
ure 5.16. Clearly, DMFDSFV is producing signiflcantly more artiflcial dissipation 
than fluctuation splitting over the length of the boundary layer. 

For this essentially incompressible case, the suppression of the vertical velocity 



144 



CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 



Y 





-M/M/MA A /Ma /MA /!\ IMIh /\\ /M/M/i\i/i\i/M/i 




-/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \/ \: 


1 


-k AiAiA A AiA AiA A AiA A AiAiA AiAi/ 
























































































































































-/ 
















/ 


\ 








\ 










/ 










\ 




\ 










/ 














-:\ 






/ 




/ 






\ 


/ 






\ 


/ 




/ 






\ 




\ 






/ 




/ 


\ 




\ 




\ 






/ 






0.05 


4:-- 






/ 




i- 
7 






■:.. 

\ 


7<i> 


( 


7 




)*( 




■:.. 

\ 




<i7< 










< 




<>k 


/ 









JllilliiillH lilllilliiiiiHIiil lilllilHiUililililllilliii IHIiiillilililliilliiillH lilllilliiillH iiillilllillliiliiillH lllllilli; 

1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 



1 

X 



(a) Fluctuation splitting. 



Y 




0.05 - 



(b) DMFDSFV. 



Figure 5.16: Artificial dissipation production in the y-momentum equation. Eleven 
contours spaced equally on 0-0.0005. 



5.6. VERIFICATION AND VALIDATION 145 

due to excessive artificial dissipation is manifested by an increase in skin friction co- 
efficient, as shown in Figure 5.17, where the friction coefficient increases with running 
length for DMFDSFV, but not for fluctuation splitting. Recall that DMFDSFV is 
continuously producing artificial dissipation over the length of the plate while the fluc- 
tuation splitting dissipation is restricted to the leading-edge region only. Figure 5.17 
presents data from all three grid refinement levels. The DMFDSFV results degrade 
dramatically with coarsening of the mesh, but the fluctuation splitting results remain 
relatively invariant with mesh resolution, all the way down to only five nodes in the 
boundary layer. 

The medium-mesh DMFDSFV solution was repeated using the full Navier-Stokes 
treatment, rather than the thin-layer equations. No change in the skin- friction results 
are seen over the first half of the plate, Figure 5.18, though there is an 8-percent 
improvement toward the end of the plate. Solving for the full Navier-Stokes terms 
requires 11 percent more CPU time per iteration. 

Cylinder 

The opposite end of the Mach-number spectrum is used to validate heat-transfer 
calculations, in this case for a cylinder of 1 m radius in Mach 17.6 flow. The perfect-gas 
assumption is a poor physical model for these extreme conditions, V^o = 5 km/s, Poo = 
0.001 kg/m^. Too = 200 K, T^.^h = 500 K, but the case provides a severe test of the 
algorithms under a re-entry scenario. Results are compared against the LAURA[15, 
16, 113] benchmarks.^ The LAURA code is well-established as a structured-grid 
hypersonic solver. Also included in the LAURA benchmark data is a solution using 
the unstructured-mesh finite volume solver FUN2D[83]. The FUN2D code employs 
the same basic inviscid and viscous discretization strategy as the present DMFDSFV 
scheme. However, differences exist between the two codes in their eigenvalue limiting 
and their flux limiting, where FUN2D uses the Venkatakrishnan limiter[114] while the 
present DMFDSFV scheme is using Minmod. Also, FUN2D uses a strong boundary 
enforcement as opposed to the weak formulation and the FUN2D heating rates are 
post-processed from the temperature field rather than using the heat flux directly 



^http : //hef ss . larc . nasa . gov/ 



146 



CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 



Cf\/ReX 



Blasius 
Fine mesh 
Medium mesh 
Coarse mesh 



TurufuSSSfS^^ 



"Hiuiiflitfjpjff-Ni.rfn.n.1 



X 



(a) Fluctuation splitting. 



Cf\/R, 



X 



..-.^•" V 



J" - 



■v- 



Blasius 
Fine mesh 
Medium mesh 
Coarse mesh 



X 



(b) DMFDSFV. 



Figure 5.17: Skin friction coefficients for Blasius flow. 



5.6. VERIFICATION AND VALIDATION 



147 



Cj-yJReX 






Blasius 

Thin-layer Navier-Stokes 



- - Full Navier-Stokes 



X 



Figure 5.18: Effect of viscous modeling on skin friction. 



from the RHS discretization, as is used here. 

The unstructured grid for this case was obtained by simple triangulation of the 
LAURA grid, which has 65 nodes perpendicular to the surface, clustered to the wall, 
and circumferential nodes spaced every 3 degrees. Only the forward-half of the cylin- 
der is solved, as shown in the mesh and flowfield solution of Figure 5.19. 

The surface pressure coefficient is plotted versus rotation angle from the stagna- 
tion point for both the fluctuation splitting and DMFDSFV solutions, along with the 
LAURA and FUN2D results in Figure 5.20. The LAURA, FUN2D, and fluctuation 
splitting curves all over-plot, and the DMFDSFV solution nearly over-plots, being 
1 percent low at the stagnation point and slightly high by a similar amount 90 de- 
grees away. The calculations were repeated on a grid coarsened by a factor of four 
(skip of two in both structured-grid directions), with surface pressure results plotted 
in Figure 5.21 along with the fine-mesh LAURA solution. The coarsened fluctua- 
tion splitting surface pressures retain good agreement, and the DMFDSFV solution 
matches over most of the cylinder, with minor exceptions again at the stagnation 



148 



CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 



Y 




Y 



1- 



-1- 




Xj I I I I I I I I I 

-10 1 



X 



X 



(a) Grid. 



(b) Pressure contours. 



Figure 5.19: Hypersonic cylinder domain with fluctuation splitting solution. 



5.6. VERIFICATION AND VALIDATION 



149 



Cti 



Rotation degrees from stagnation point 



Figure 5.20: Cylinder surface pressures, solid = fluctuation splitting, LAURA, and 
FUN2D, while dashed = DMFDSFV. 



G„ 




Rotation degrees from stagnation point 



Figure 5.21: Cylinder surface pressures on coarsened mesh, solid 
dashed = fluctuation splitting, and dotted = DMFDSFV. 



LAURA, 



150 



CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 



jV^ 




Rotation degrees from stagnation point 

Figure 5.22: Cylinder surface heat-transfer rates, solid = LAURA, dashed = FUN2D, 
and dotted = fiuctuation splitting. 



point, 1 percent high on this grid, and at the 90 degree point. 

Surface heat-transfer rates for LAURA, FUN2D, and fluctuation splitting are 
shown in Figure 5.22. Both of the unstructured-mesh solutions show elevated heat- 
ing at the stagnation region, with fluctuation splitting being 30 percent higher than 
LAURA while FUN2D is 50 percent higher. The DMFDSFV solution is shown in 
Figure 5.23, predicting stagnation heating rates more than double the LAURA pre- 
dictions. Also included in Figure 5.23 is the fluctuation splitting solution on the 
coarse mesh, which is seen to produce heating rates closer to the LAURA solution 
than DMFDSFV does on the fine mesh. While the basic DMFDSFV and FUN2D 
schemes are ostensibly the same on the interior domain, the significant differences in 
boundary implementation and limiting detailed at the start of this section are the 
reasons for the differing heat transfer predictions between the codes. 

The hne-mesh solutions were repeated using the full Navier-Stokes treatment, and 
no changes in heating levels were observed. 



5.6. VERIFICATION AND VALIDATION 



151 



jV^ 



- / \ 




Rotation degrees from stagnation point 

Figure 5.23: Cylinder surface heat-transfer rates, solid = LAURA, dashed = DM- 
FDSFV(hne), and dotted = fluctuation splitting(coarse). 



5.6.4 Summary of Results 



Six inviscid test cases verify and compare the fluctuation splitting and DMFDSFV 
implementations. Both schemes are able to maintain uniform flow on a severely 
distorted mesh. DMFDSFV displays the design order of accuracy, second-order, for 
converging Mach streams while fluctuation splitting surprisingly displays third-order 
accuracy for this case. Fluctuation splitting is more accurate than DMFDSFV for 
the diamond airfoil, circular bump, and supersonic cone, but DMFDSFV is more 
accurate for the sphere test. Timings reveal fluctuation splitting runs 10-12 percent 
faster than DMFDSFV per node with the present algorithms. 

The two viscous validation cases are an incompressible flat plate and M = 17.6 
cylinder. On the flat plate fluctuation splitting produces significantly less artificial 
dissipation than DMFDSFV and provides much better skin friction predictions on 
coarse meshes, down to only five points in the boundary layer. Both schemes produce 
excellent surface pressures for the hypersonic cylinder and fluctuation splitting does 



152 CHAPTER 5. TWO-DIMENSIONAL SYSTEMS 



better for surface heating, though neither unstructured scheme predicts heating as 
well as the structured-mesh benchmark result. 



Chapter 6 

System Mesh Adaption 



6.1 Overview 

The adaption strategies detailed in chapter 4 for scalar advection-diffusion problems 
are extended to the Navier-Stokes system of equations. For the first time, the fluctu- 
ation minimization strategy for mesh adaption is developed for two-dimensional and 
axisymmetric systems, and is compared with the curvature clustering adaption that 
is representative of the current state of the art. 

This chapter's application case is a Mach-10 wind tunnel simulation of a sting- 
mounted Mars capsule model. This case has previously been studied by Hollis[115] 
using a structured-grid adaption strategy, and the resulting agreement with experi- 
mental data for the sting heating was "found to be highly dependent upon grid res- 
olution and grid quality" in the wake. The structured-grid approach to this problem 
required an extremely fine mesh with extensive adaptation by hand. The challenge for 
the unstructured-grid techniques will be to obtain comparable accuracy using fewer 
grid points with fully automated adaption. 

6.2 Curvature Clustering 

The local, anisotropic adaption strategy based upon a posteriori error estimates is 
extended directly from section 4.1. In extending to the system, Eqn. 4.2 generalizes 

153 



154 CHAPTER 6. SYSTEM MESH ADAPTION 



to, 



\ r I 



vui-zg^-vuo-z:^ 



toi 



^2 



VUi-VUo -roi 



(6.1) 



A scalar value for the error estimate is required, with a simple choice being to just 
take the L2-norm of the error vector. Also, the error does not necessarily need to 
be formed from the conserved variables, but could alternatively be formed from the 
primitive variables, the Mach number as Habashi[76] does, or even a derived quantity 
such as heat transfer. 

The basic operations remain point deletion, edge swapping, point insertion, and 
nodal displacements. These procedures are applied sequentially in the order listed, 
with the solver iterating on the solution between each of the four steps, constituting 
a complete adaption cycle. A tolerance can be set for thresholds to define when the 
mesh is sufficiently adapted. 

While the explicit use of nodal gradients in Eqn. 6.1 makes this style of adaption 
naturally symbiotic with the DMFDSFV scheme used here, there is no restriction 
against using curvature clustering with the fluctuation splitting solver. Also note 
that Eqn. 6.1 is written in vector notation, and so can be applied directly in three 
dimensions just as it is used here in two spatial dimensions. 

6.3 Characteristic Alignment 

Chapter 4 demonstrated that fluctuation splitting is an exact solver for linear ad- 
vection on a characteristically-aligned mesh. Adaption for characteristic alignment 
was developed as an automated, anisotropic local-operation strategy in sections 4.2 
and 4.4. Applications to non-linear and advection-diffusion problems showed that 
alignment with characteristics was approximated, but not fully achieved, by the au- 
tomated local scheme. For the Navier-Stokes system, true characteristic alignment is 
not a physically valid ideal due to the presence of multiple and/or imaginary charac- 
teristics. However, the automated local anisotropic adaption strategy is extended here 
with the objective of achieving solution improvement with fluctuation minimization 



6.3. CHARACTERISTIC ALIGNMENT 155 

as the agent to obtain characteristic-driven alignment in supersonic regions consistent 
with mesh enrichment in the subsonic regions. 

As with the scalar case, the analogy to the edge error estimate is formed from 
the fluctuations, both inviscid and viscous, in the cells adjoining the edge. For ax- 
isymmetric cases the fluctuation is scaled by the inverse of the cell-centroid y value. 
Additional weighting by the inverse of the square root of the cell area is found to 
balance the contributions from neighboring cells of disparate sizes. 

Point deletion 

Nodes are flagged for deletion if the sum of the L2-norms of the fluctuations in all 
surrounding cells is below a threshold. Edges are swapped in an attempt to reduce 
the number or edges connected at the node to three or four to match the canonical 
point-removal patterns. If the local connectivity is too complicated for the automated 
pattern matching, the node is simply left in the domain. During a typical cycle, on 
the order of only 10 percent of the nodes that had been flagged for deletion will be 
left in the domain because of localized complicated connectivity. 

Point insertion 

An edge is split, adding a node, if the sum of the I/2-norms of the fluctuations in the 
cells to either side of the edge exceed a threshold. The cell fluctuations are weighted 
in the same manner as was described for the point deletions. 

Edge swapping 

An edge is flagged as a candidate for swapping if the RMS of the fluctuations in the 
cells to either side of the edge exceed the target threshold. If the swapped config- 
uration maintains a physically valid grid, then the RMS of the fluctuations in the 
swapped cells are computed. If the swapped configuration has a smaller RMS value 
then the edge swap is performed. 



156 



CHAPTER 6. SYSTEM MESH ADAPTION 



Nodal displacement 

Mesh movement for the system is driven by the minimization of a functional, just as 
for the scalar case. The system extension of Eqn. 4.21 is, 



T 



(6.2) 



The functional T can be expressed in terms of either the conserved or auxiliary 
fluctuations, as the minimization of one implies the minimization of the other. The 
derivative of T (see Eqn. 4.22) is formed using the chain rule as. 



9T, 
dx,. 



-y 

T 



— aj(f)j + (f)j— 0-r + 0T"T^ — 



dxi 



dxi 



dxi 



(6.3) 



Having defined the gradient of the functional, the method of steepest descent from 
Eqns. 4.24 and 4.25 can be applied directly to drive the nodal displacements. 

The weighting factor Hj is a symmetric positive-deflnite matrix. Weighting each 
equation equally without regard to cell sizes results in Hj = /, while inverse area 
weighting yields Hj = -^I. The derivatives of Sj for these and other area-weighted 
choices have been covered in Eqns. 4.50-4.56. 

The cell fluctuation can be rearranged from Eqn. 5.41 (two-dimensional terms) as, 



^ =oS^A--^W, 



(6.4) 



j=i 



where Wj = W^Z^. Following Eqns. 4.32 and 4.33, the derivatives of the fluctuation 
are. 



90 


1 


dX2 


2 


90 
dy2 


1 
~ 2 






i=i 



dy2 



dy2 



(6.5) 
(6.6) 



6.3. CHARACTERISTIC ALIGNMENT 



157 



The flux Jacobian of the auxihary variables is, 



A =VI + 



dA 





0? 

i 

o?i o?j 



(6.7) 



which leads to the approximation ^ ~ ^I. As was done for the scalar case, it is 
assumed that moving a node does not change the solution at the other two nodes of 
the triangle, so that the variation of the cell-average flux Jacobian scales like one-third 
the variation of the velocit}^ at the node being moved, |^ ~ If^-^- 

Similarly, the variation of the Jacobian of the transformation scales like one-third 
the nodal variation, -^^ ~ ||f^' ^^"^ ^^ neglected as a sub-principle term relative to 
the change in solution value. 



9W, 
dxo 



OXo 



(6.8) 



Since the solution is locally assumed to vary only at the node being moved, i.e., 
0, 



9X2 



9X2 






i=i 



dxo 



W- 



dZ2 
dxo 



(6.9) 



The remaining term to evaluate is ||2-. The steady-state distribution can be 



written, 



Y, [(/ + M,) a - (/ + M^) P] W^Z2 

T 

= 5] [(/ + M,) aW^Zi - (/ + M^) ^SW^Zg] (6.10) 



or. 



Y, (a+ - /3+) W^Z2 = Y («^W^Zi - /3+W^Z3) 



(6.11) 



158 



CHAPTER 6. SYSTEM MESH ADAPTION 



where, 



a 



f3' 






Differentiating while freezing the Jacobians leads to, 

' dx2 
doc+ 






dxo 



W^Zi 



dxo 



(6.12) 
(6.13) 



W2Z3 (6.14) 



Y, («+ - ^^) W. 






E 



doc'^ 



dx-} 



■Wz (Zi - Z2 



9/3^ 



9X; 



■W^ (Z.3 



5Z2 

9X9 



5] (a+ - ^+) W, 






(6.15) 
(6.16) 



Neglecting the subsonic blending on M« and M^ allows q;+ and /3^ to be expressed 



ctS, 



a 



with derivatives, 
9a+ 



9X9 



a, V„ > 
0, V„<0 



0, V„ < 



/3' 



dxo 



/3, V;,>0 
0, V/3 < 



(6.17) 






, V, >0 



0, V« < 



(6.18) 



The derivatives of oc and /3 remain as Eqns. 4.41 and 4.42. 

9X2 ' c'X2 



Having determined ii^.^ ^ii follows from. 



dtt 



d{y^u) — ud{^/p) 



dv 



diVpv) -vd{yfp) 



(6.19) 



The concept of fluctuation minimization extends directly to three dimensions for 
point deletion and insertion. The idea of edge swapping extends as face reconnec- 
tions amongst tetrahedra in three dimensions which is more complicated due to the 



6.4. MARS PATHFINDER 159 

increased degrees of freedom and geometric connection possibilities. The functional 
for nodal displacements, Eqn. 6.2, is written in vector notation and so can be applied 
directly to three dimensions. However, not only would the derivatives of the fluc- 
tuation splitting scheme need to be reformulated, but the basic fluctuation splitting 
scheme itself would need to be worked out in detail to move to three dimensions. 

A three-dimensional alignment strategy has been employed by Beeman and Pow- 
ers[116]. That method starts on an attached shock and projects downstream, trying to 
remain on the shock. This involves iterating an assumed shock shape and an implied 
body, iterating until the implied body matches the true surface. Open questions 
remain on how to start on detached shocks and how to handle embedded shocks. A 
significant drawback mentioned by the authors is that, "[The method] far enough 
downstream will eventually become unstable." 



6.4 Mars Pathfinder 

The demonstration case for the system adaption is borrowed from the Mach-10 wind 
tunnel tests of Hollis[115, 117, 118], which investigated the aerothermodynamic envi- 
ronment experienced by a payload in the wake of an aerobrake. For his dissertation, 
Hollis specifically looked at the effect of grid adaption on sting heating for his model. 
Using a structured-grid finite volume solver, a mesh of 125 x 357 = 44,625 nodes was 
required to get reasonable pressure and heating-rate agreement on the sting. Addi- 
tionally, this fine mesh required extensive and time consuming adaption by hand to 
sufficiently resolve the wake flow. 

Using the Hollis data as a benchmark, the present study seeks to achieve compara- 
ble results on an automatically-adapted unstructured mesh. Significant time savings 
can be achieved primarily by automating the adaption procedure, but also reducing 
the solver iteration and convergence times if the unstructured approach requires fewer 
grid nodes for the same resolution. 



160 



CHAPTER 6. SYSTEM MESH ADAPTION 



Y, in. 



3 .5 



2 .5 




1.5 - 



0.5 



X, in. 

Figure 6.1: Computational domain for axisymmetric Mars Pathfinder capsule. 



6.4.1 Configuration and Conditions 



The axisymmetric wind tunnel model of the Mars Pathfinder capsule consists of a 
spherically-blunted 70-degree sphere-cone. The radius is 1 in. and the nose radius is 
I in. The shoulder radius is ^ in. and the aftbody angle is 40 degrees. The base 
radius is | in. The sting is 4 in. long with a radius of || in. Figure 6.1 shows the 
boundary of the computational domain. 

The freestream conditions for the NASA Langley 31-Inch Mach 10 Air Tunnel, 
corresponding to a nominal Reynolds number per foot of 0.5x10^ ft~^, are: P = 69 Pa, 
T = 53 K, p = 0.0045 kg/m^, and u = 1416 m/s. The wall temperature is taken 
to be a uniform 300 K. Historical experience with this tunnel at these conditions 
indicate that laminar perfect-gas calculations are adequate for comparison with the 
experimental data. 



6.4. MARS PATHFINDER 161 



In addition to the axisymmetric configuration, the present study also considers 
a two-dimensional version of the problem, using the same geometry and freestream 
conditions. 



6.4.2 Benchmark Data 

For the axisymmetric configuration Hollis has provided the experimental heat-transfer 
data along with numerical heat-transfer and surface pressure results. The numerical 
results were generated using the NEQ2D code of Candler [119]. A second set of numer- 
ical results were obtained for the present study using the LAURA code of Gnoffb[15]. 
Both of these codes are structured-grid finite volume solvers. Surface pressure co- 
efficients from the numerical results are shown in Figure 6.2 and heat-transfers for 
all three datasets are in Figure 6.3, where the size of the symbols is indicative of 
the uncertainty in the experimental data reported by Hollis, ±7%. The forebody 
pressures are in agreement between NEQ2D and LAURA, but the aftbody pressure 
agreement is weaker. The computed heating rates match the experimental data, aside 
from an irregularity in the LAURA result at the stagnation point, along the body to 
a running length of 3 inches, which is located on the sting. Hollis speculates that the 
free shear layer in the wake may be transitioning at the point where the experimental 
and computational heating rates diverge on the sting. 

For the two-dimensional configuration, the axisymmetric grid was enlarged to be 
125 X 513 = 64, 125 nodes so as to capture the bow shock due to the greater shock 
stand-off distance. A LAURA solution was obtained for this case, and the results of 
grid convergence in the body-normal direction on pressure and heating are shown in 
Figures 6.4 and 6.5. Surface pressures are largely converged with 129 points in the 
body-normal direction, and certainly by 257 points. A similar statement applies for 
the heating, except in the vicinity of the stagnation point. The heating prediction at 
the nose continually increases with each grid doubling. 



162 



CHAPTER 6. SYSTEM MESH ADAPTION 



Cf 




Cp 



s, in. 



(a) Heatshield. 




s, in. 



(b) Aftbody and sting. 



Figure 6.2: Axisymmetric capsule benchmark surface pressures, solid=NEQ2D, 
dashed=LAURA. 



6.4. MARS PATHFINDER 



163 



1 




s, in. 



(a) Heatshield. 



PodV^ 




s, in. 



(b) Aftbody and sting. 



Figure 6.3: Axisymmetric capsule benchmark surface heating, symbols=experiment, 
soUd=NEQ2D, dashed=LAURA. 



164 



CHAPTER 6. SYSTEM MESH ADAPTION 



Cf 




Cf 



s, in. 



(a) Heatshield. 




s, in. 



(b) Aftbody and sting. 



Figure 6.4: Two-dimensional capsule benchmark surface pressures, solid=513, 
dashed=257, dotted=129, dash-dot=65 points normal to the surface. 



6.4. MARS PATHFINDER 



165 



1 




s, in. 



(a) Heatshield. 



PodV^ 




s, in. 



(b) Aftbody and sting. 



Figure 6.5: Two-dimensional capsule benchmark surface heating, solid=513, 
dashed=257, dotted=129, dash-dot=65 points normal to the surface. 



166 CHAPTER 6. SYSTEM MESH ADAPTION 

6.4.3 Unadapted Baseline 

Prior to performing any adaption, both unstructured DMFDSFV and fluctuation 
splitting schemes were used to obtain solutions on triangulated versions of the struc- 
tured meshes, as an indication of a target accuracy for the adaption strategies. During 
this process, a number of problems and sensitivities were encountered. 

As a general note the explicit single-stage time integration scheme used here is 
severely restricted in the stable timestep for high-Reynolds-number viscous problems. 
A structured-mesh solver, such as the LAURA code, would typically alleviate this 
stifthess by employing an implicit solver. Another option would be to use a parallelized 
strategy. However, both the development of an unstructured implicit solver for the 
present schemes and the parallelization of the schemes were considered beyond the 
scope of the current work. As a consequence, viscous solutions for the capsule on the 
fine meshes required weeks of CPU time on a desktop PC. 

Since both the DMFDSFV and the fluctuation splitting schemes are implemented 
at the nodes, the timestep on the axisymmetric axis vanishes, slowing temporal con- 
vergence. The radial term in the timestep determination is chosen at the median-dual 
centroid for nodes on the axisymmetric axis, rather than at y = 0, allowing for a more 
realistic wave propagation on the axis. The solutions are observed to remain tempo- 
rally stable with this implementation while yielding much faster convergence rates. 
Yet, the axisymmetric axis is always observed to converge slower than the rest of the 
flowfleld, due to the radial weighting on the control volume. In general, axisymmetric 
solutions take two to three times longer to converge than an equivalent two-dimen- 
sional case because of this axis singularity efl'ect. 

The carbuncle efl'ect. Figure 6.6, reared its ugly head for some cases, typically on 
meshes that are flne in the streamwise direction but very coarse in the body-normal 
direction. Although the carbuncle efl'ect is a known deflciency^ in the structured 



^The carbuncle effect was first reported by Peery and Imlay[120] for a Mach-6 cylinder as an 
unexplainable "protuberance" in the bow shock at the symmetry plane. Later work by Roberts[121] 
and Quirk[122] reveal the mathematical basis for the production of spurious solutions for grid-aligned 
shocks with the Roe flux difference splitting scheme. As Quirk reports, "[Pjarallel to the shock, Roe's 
scheme will not add any dissipation via the contact and shear waves, to counteract perturbations 
that appear through the acoustic waves; this appears to be a recurring theme whenever Roe's method 
fails. It is interesting to note that if Harten's entropy fix is applied to the contact and shear waves, 



6.4. MARS PATHFINDER 



167 




Carbuncle in bow shock. 



Figure 6.6: Fluctuation splitting u-velocity contours, showing carbuncle formation 
for two-dimensional capsule case. 



Roe solver, its behavior in unstructured schemes has not been as well characterized. 
Lowering the CFL number by three orders of magnitude did not change the solution, 
verifying that the phenomenon was not instability induced. Similarly, re-running 
time-accurately produced the same behavior, strongly suggesting the phenomenon 
was not transient induced. The traditional fix for the Roe scheme involves adding 
dissipation through eigenvalue limiting. The present schemes were being run with 
thin-layer viscous terms and eigenvalue limiting on V ± a only. Switching to full 
viscous terms and limiting all eigenvalues both served to reduce the occurrence of the 
carbuncle effect. Figure 6.7. 

The last problem encountered was that the surface heating at the stagnation point 
had the wrong trend, dropping toward zero heating. Figure 6.8 shows the forebody 



any shortcoming of Roe's scheme is invariably cured. However, there is no justification, either 
physical or mathematical, for applying this fix to these waves, it is just a convenient method for 
introducing an amount of artificial dissipation into the scheme." 



168 



CHAPTER 6. SYSTEM MESH ADAPTION 



Moo = 10 




Figure 6.7: Fluctuation splitting u- velocity contours for two-dimensional capsule case. 



heating on a two-dimensional 63 x 129 mesh using fluctuation splitting. Note the 
dramatic drop in heating at the stagnation point, contrasted with the benchmark 
data of Figure 6.5(a). Looking into the flowfield for an explanation of the heating 
trend a recirculation bubble is found at the nose, Figure 6.9, which physically should 
not be present. The cause of this stagnation recirculation proved extremely time 
consuming to identify and it was unexpectedly found to be a grid-induced feature. 
The unstructured meshes for the unadapted cases were initially created by a simple 
triangulation of the structured grids. All quadrilateral cells were cut in the same 
direction, and this bias in the diagonals along the axis boundary produced a shift 
in the stagnation point off the axis. Repeating the calculations on a biased grid 
covering both the upper and lower half-planes removed the vortex but still shifted 
the stagnation point. The cure for this problem was to remove the grid bias by 
alternating the diagonals in the derived unstructured meshes, yielding the vortex-free 
solution in Figure 6.10 for the same case as is shown in Figure 6.9. 



6.4. MARS PATHFINDER 



169 



PooV^ 




5, m. 



Figure 6.8: Incorrect forebody heating trend, two-dimensional fluctuation splitting. 



Y, in. 




X, in. 



Figure 6.9: Stagnation point vortex. 



170 



CHAPTER 6. SYSTEM MESH ADAPTION 



Y, in. 




X, in. 



Figure 6.10: Correct streamlines in stagnation region. 



32 X 65 


32 X 129 






63x65 


63 X 129 


63 X 257 




125 X 65 


125 X 129 


125 X 257 


125 X 513 



Table 6.1: Matrix of grid dimensions for two-dimensional baseline cases. 



Two-dimensional 



Viscous solutions for the two-dimensional capsule were computed using both fluctu- 
ation splitting and DMFDSFV discretizations on a sequence of unadapted grids as 
listed in Table 6.1. 

Results using only 32 points to define the surface were generally under-resolved for 
both schemes. Results for 63 and 125 surface points are compared in Figures 6.11-6.14 
using 257 points normal to the body. 

DMFDSFV surface pressures, Figure 6.11, overlap the benchmark results on the 
forebody for both grids. Aftbody pressure agreement is poor for 63 surface points. 
The solution improves by going to 125 points, though the pressure coefficient is still 
over-predicted by a factor of 2. The heating trends for DMFDSFV are reversed 



6.4. MARS PATHFINDER 



171 



Cf 




Cf 



I. 
; \ 



s, in. 



(a) Heatshield. 



/ 



/.' 



/' 



/ 



s, in. 



(b) Aftbody and sting. 



Figure 6.11: Two-dimensional capsule surface pressures: z-refinement with DMFDS- 
FV, solid=63, dashed=125, dash-dot-dot=benchmark. 



172 



CHAPTER 6. SYSTEM MESH ADAPTION 



1 




s, in. 



(a) Heatshield. 



PodV^ 




s, in. 



(b) Aftbody and sting. 



Figure 6.12: Two-dimensional capsule surface heating: i-refinement with DMFDSFV, 
solid=63, dashed=125, dash-dot-dot=benchmark. 



6.4. MARS PATHFINDER 



173 



Cf 




Cf 



s, in. 



(a) Heatshield. 




s, in. 



(b) Aftbody and sting. 



Figure 6.13: Two-dimensional capsule surface pressures: i-refinement with fluctuation 
splitting, solid=63, dashed=125, dash-dot-dot=benchmark. 



174 



CHAPTER 6. SYSTEM MESH ADAPTION 



1 




PodV^ 



s, in. 



(a) Heatshield. 




s, in. 



(b) Aftbody and sting. 



Figure 6.14: Two-dimensional capsule surface heating: i-refinement with fluctuation 
splitting, solid=63, dashed=125, dash-dot-dot=benchmark. 



6.4. MARS PATHFINDER 175 

from the pressure trends. Figure 6.12 shows that the coarser-mesh forebody heating 
is in poor agreement with the benchmark. The finer mesh improves the heating 
prediction, but is still more than 20 percent higher than the benchmark over much 
of the heatshield, especially at the shoulder. The aftbody and sting heating rates are 
reasonable on both meshes. 

Fluctuation splitting surface pressures, Figure 6.13, are in very good agreement 
with the benchmark data, both fore and aft. The 125 surface point mesh is in par- 
ticularly good agreement, over-plotting the benchmark over all but the tail end of 
the sting. Fluctuation splitting surface heating. Figure 6.14, is in good agreement 
for both meshes, with the finer mesh providing better resolution at the shoulder. 
The glaring weakness in the fluctuation splitting solutions is at the stagnation point, 
where the heating spikes 40 percent higher than the benchmark. Further, the known 
correct heating trend at a stagnation point calls for the heating to level off, as the 
benchmark results do, rather than spike, as with the present results. 

Grid convergence trends in the body-normal direction, for 125 surface points, are 
shown in Figures 6.15-6.18. 

The DMFDSFV surface pressure grid convergence is shown in Figure 6.15. On 
the forebody excellent agreement with the benchmark is seen for all but the coarsest 
mesh. On the aftbody and sting, only the solution from the mesh with 129 points 
normal to the body is in good agreement with the benchmark. The trend with 
refining the mesh is toward increasing pressures on the aftbody, and the solutions do 
not appear to be converging toward the benchmark result. The DMFDSFV heating 
with grid refinement is shown in Figure 6.16. On the heatshield the solution from the 
j=129 mesh provides the closest match to the benchmark, while the 257-point result 
is not too much worse. The solution from the coarsest mesh is wildly unresolved and 
the result from the finest mesh is disappointing. On the aftbody, again the coarsest 
mesh is under-resolved. The three finer meshes do appear to be converging with grid 
refinement and have reasonable agreement with the benchmark. 

The fluctuation splitting surface pressures. Figure 6.17, show good grid conver- 
gence trends, with both of the two finest meshes matching the benchmark over the 
entire body, and none of the grids produced terrible results. Fluctuation splitting 



176 



CHAPTER 6. SYSTEM MESH ADAPTION 



Cf 




Cf 



s, in. 



(a) Heatshield. 




s, in. 



(b) Aftbody and sting. 



Figure 6.15: Two-dimensional capsule surface pressures: j-refinement with DMFDS- 
FV, solid=513, dashed=257, dotted=129, dash-dot=65, dash-dot-dot=benchmark. 



6.4. MARS PATHFINDER 



177 



1 




s, in. 



(a) Heatshield. 



PodV^ 




s, in. 



(b) Aftbody and sting. 



Figure 6.16: Two-dimensional capsule surface heating: j-refinement with DMFDSFV, 
solid=513, dashed=257, dotted=129, dash-dot=65, dash-dot-dot=benchmark. 



178 



CHAPTER 6. SYSTEM MESH ADAPTION 



Cf 




s, in. 



(a) Heatshield. 



Cf 




s, in. 



(b) Aftbody and sting. 



Figure 6.17: Two-dimensional capsule surface pressures: j-refinement with fluc- 
tuation splitting, solid=513, dashed=257, dotted=129, dash-dot=65, dash-dot- 
dot=benchmark. 



6.4. MARS PATHFINDER 179 



32x45 


32x89 






63x45 


63x89 


63 X 177 




125 X 45 


125 X 89 


125 X 177 


125 X 353 



Table 6.2: Matrix of grid dimensions for axisymmetric baseline cases. 

heatshield heating, Figure 6.18, also shows good grid convergence trends, with both 
of the two finest-mesh solutions matching the benchmark well except at the stagna- 
tion point, where the 513-point results do better but still have a spike of 15 percent 
at the symmetry line. Heating results in the wake region also show some grid conver- 
gence trends, though the finest mesh resolves an additional wake vortex on the sting, 
producing an inflection in the data. The coarser meshes actually match the bench- 
mark better on the aftbod}^, before elevating on the sting where the finer meshes, and 
the 257-point result in particular, do a better job of matching the benchmark. 

The two-dimensional unadapted baseline results are chosen to be the solutions on 
the triangulated 125 x 257 mesh. The fluctuation splitting solutions on this mesh 
were as good as on the finest mesh but with half the points. For DMFDSFV the 
125 X 129 mesh produced results generally as good as or better than the baseline, 
though the results are difficult to interpret due to the lack of clear grid-convergence 
trends. The baseline surface pressures and heating rates are shown in Figures 6.19 
and 6.20. Both solvers match forebody pressure with the benchmark. Fluctuation 
splitting also matches the benchmark pressure on the sting, while the DMFDSFV 
baseline over-predicts the pressure in this region. The fluctuation splitting forebody 
heating matches the benchmark well except as previously discussed at the stagnation 
point. The DMFDSFV forebody agreement is not as good. However, both schemes 
yield comparable aftbody heating rates. 

Axisymmetric 

Viscous solutions for the axisymmetric capsule configuration were obtained on a se- 
quence of unadapted meshes formed as triangulations from the structured meshes 
used for the benchmark computations. The sequence of grids is listed in Table 6.2. 
All of the axisymmetric solutions to be shown suffer from irregular heat transfer 



180 



CHAPTER 6. SYSTEM MESH ADAPTION 



1 




s, in. 



(a) Heatshield. 



PodV^ 




s, in. 



(b) Aftbody and sting. 



Figure 6.18: Two-dimensional capsule surface heating: j-refinement with fluc- 
tuation splitting, solid=513, dashed=257, dotted=129, dash-dot=65, dash-dot- 
dot=benchmark. 



6.4. MARS PATHFINDER 



181 



Cf 




Cf 



s, in. 



(a) Heatshield. 




s, in. 



(b) Aftbody and sting. 



Figure 6.19: Two-dimensional baseline capsule surface pressures, solid=fiuctuation 
splitting, dashed=DMFDSFV, dash-dot-dot=benclimark. 



182 



CHAPTER 6. SYSTEM MESH ADAPTION 



1 




PodV^ 



s, in. 



(a) Heatshield. 




s, in. 



(b) Aftbody and sting. 



Figure 6.20: Two-dimensional baseline capsule surface heating, solid=fluctuation 
splitting, dashed=DMFDSFV, dash-dot-dot=benclimark. 



6.4. MARS PATHFINDER 183 

patterns at the axis stagnation point, true for both the DMFDSFV and fluctuation 
splitting formulations as here implemented. The stagnation point surface pressures, 
however, are well behaved. The difficulty with the heating appears to be a result of 
applying the weak form of the boundary conditions at both a mathematical singular- 
ity, the axisymmetric axis, and a surface flow singularity, the stagnation point, for the 
node-based schemes. Cell-based, rather than node-based, schemes or strong bound- 
ary enforcement formulations might not experience similar stagnation point heating 
difficulties for the axisymmetric cases. These heating irregularities are conflned to 
the stagnation node and immediate neighbor nodes. 

As with the two-dimensional results, the axisymmetric solutions using only 32 
points to deflne the surface were under resolved. Results using 63 and 125 points 
to deflne the surface are presented in Figures 6.21-6.24, all with 89 points in the 
body-normal direction. 

DMFDSFV surface pressures. Figure 6.21, overlap the benchmark results on the 
forebody, especially on the finer mesh. Aftbody pressures are poorly resolved on the 
coarser mesh. The finer mesh reasonably matches the benchmark except right at the 
shoulder where the overexpansion is missed. DMFDSFV heating trends with stream- 
wise refinement are shown in Figure 6.22. The forebody heating is much improved 
on the finer mesh, though still 20 percent higher than the benchmark over most of 
the heatshield. The stagnation point heating is over-predicted by as much as 40 per- 
cent on both meshes and the peak heating on the shoulder is greatly over-predicted. 
However, on the aftbody and sting the finer mesh results are in very good agreement 
with the benchmark results. The coarser mesh under-predicts the wake heating. 

Fluctuation splitting surface pressures for streamwise grid refinement are shown 
in Figure 6.23. The forebody pressures are the same for both meshes, but are 3-5 per- 
cent lower than the benchmark, except at the stagnation point where the benchmark 
is matched. Aftbod}^ pressures match the benchmark extremely well for both grids. 
Forebody heating with fluctuation splitting, Figure 6.24, matches the benchmark 
fairly well except for over-predicting the shoulder heating spike and the stagnation 
point maximum. The finer mesh does a better job at the shoulder but results from 
neither mesh are particularly encouraging at the stagnation point. The fluctuation 



184 



CHAPTER 6. SYSTEM MESH ADAPTION 



Cf 




Cp 



s, in. 



(a) Heatshield. 




^^ -y 



s, in. 



(b) Aftbody and sting. 



Figure 6.21: Axisymmetric capsule surface pressures: i-refinement with DMFDSFV, 
solid=63, dashed=125, long-dasli=NEQ2D, dash-dot-dot=LAURA. 



6.4. MARS PATHFINDER 



185 



1 




^ " 'v v/ 



^C)t)Dt0 




-^^^-^^ 



s, in. 



(a) Heatshield. 



PodV^ 




s, in. 



(b) Aftbodj' and sting. 



Figure 6.22: Axisymmetric capsule surface heating: i-refinement with DM- 
FDSFV, solid=63, dashed=125, long-dash=NEQ2D, dash-dot-dot=LAURA, cir- 
cles=experiment. 



186 



CHAPTER 6. SYSTEM MESH ADAPTION 



Cf 




s, in. 



(a) Heatshield. 



Cp 




s, in. 



(b) Aftbody and sting. 



Figure 6.23: Axisymmetric capsule surface pressures: i-refinement with fluctuation 
splitting, solid=63, dashed=125, long-dash=NEQ2D, dash-dot-dot=LAURA. 



6.4. MARS PATHFINDER 187 

splitting heating results on both meshes provide excellent matches with the bench- 
mark data on the aftbody and sting. 

Grid convergence trends in the body-normal direction, for 125 surface points, are 
shown in Figures 6.25-6.28. 

DMFDSFV forebody pressures match the benchmark on all grids. Figure 6.25. 
However, the aftbody and sting pressures do not show grid convergence. The best 
match with the benchmark comes on the grid with 89 points normal to the body. It 
is disappointing that the pressures deteriorate on the hner meshes, with the details 
being washed out perhaps by a different separation pattern in the wake. The DM- 
FDSFV forebody heating. Figure 6.26, also fails to show a good grid convergence 
trend, with the results deteriorating on the finer meshes. The two coarser meshes 
provide the best agreement, with the 89-point results being smoother than the 45- 
point solution. Still, the forebody heating is over-predicted by 20 percent over most 
of the heatshield and by more at the stagnation point. On the aftbody and sting only 
the 89-point solution provides good agreement with the benchmark data. 

Surface pressure trends with grid refinement in the body-normal direction using 
fiuctuation splitting are shown in Figure 6.27. The forebody pressure is grid con- 
verged on all meshes, but slightly under-predicts the benchmark results. Aftbody 
and sting pressures on all meshes show excellent agreement with the benchmark solu- 
tions. Forebody heating with fluctuation splitting. Figure 6.28, shows good agreement 
over most of the heatshield for all but the 45-point mesh, which itself is only 20 per- 
cent elevated. As usual the stagnation point heating is largely in error. Heating in 
the wake shows good agreement for all but the finest mesh, where the heating on the 
sting shows an unexpected inflection point. 

The axisymmetric baseline solutions are chosen to be the results on the triangu- 
lated 125 X 89 mesh. The fluctuation splitting solutions are consistently grid con- 
verged on this mesh, and the DMFDSFV results on the mesh are generally the best, 
often better even than on the flner meshes. The axisymmetric baseline pressures are 
presented in Figure 6.29. On the heatshield the DMFDSFV solution overlaps the 
benchmark pressures, while the fluctuation splitting result is steadily 3 percent low. 



188 



CHAPTER 6. SYSTEM MESH ADAPTION 



1 




s, in. 



(a) Heatshield. 



PodV^ 




s, in. 



(b) Aftbody and sting. 



Figure 6.24: Axisymmetric capsule surface heating: i-refinement with fluctuation 
splitting, solid=63, dashed=12o, long-dash=NEQ2D, dash-dot-dot=LAURA, cir- 
cles=experiment. 



6.4. MARS PATHFINDER 



189 



Cf 




s, in. 



(a) Heatshield. 



Cp 




s, in. 



(b) Aftbody and sting. 



Figure 6.25: Axisymmetric capsule surface pressures: j-refinement with DMFDS- 
FV, solid=353, dashed=177, dotted=89, dash-dot=45, long-dash=NEQ2D, dash-dot- 
dot=LAURA. 



190 



CHAPTER 6. SYSTEM MESH ADAPTION 



1 




PodV^ 






.7 







s, in. 



(a) Heatshield. 



"x^v'X^ I 




s, in. 



(b) Aftbodj' and sting. 



Figure 6.26: Axisymmetric capsule surface heating: j-refinement with DMFDS- 
FV, solid=353, dashed=177, dotted=89, dash-dot=45, long-dash=NEQ2D, dash-dot- 
dot=LAURA, circles=experiment. 



6.4. MARS PATHFINDER 



191 



Cf 




s, in. 



(a) Heatshield. 



Cp 




s, in. 



(b) Aftbody and sting. 



Figure 6.27: Axisymmetric capsule surface pressures: j-refinement with fluctua- 
tion splitting, solid=353, dashed=177, dotted=89, dash-dot=45, long-dash=NEQ2D, 
dash-dot-dot=LAURA. 



192 



CHAPTER 6. SYSTEM MESH ADAPTION 



1 




s, in. 



(a) Heatshield. 



PodV^ 




s, in. 



(b) Aftbody and sting. 



Figure 6.28: Axis3^mmetric capsule surface heating: j-refinement with fluctua- 
tion sphtting, solid=353, dashed=177, dotted=89, dash-dot=45, long-dash=NEQ2D, 
dash-dot-dot=LAURA, circles=experiment. 



6.4. MARS PATHFINDER 193 

On the aftbody and sting it is the fluctuation sphtting solution that provides an ex- 
cellent match to the benchmark. The DMFDSFV solution is generall}^ good except 
for missing the overexpansion pressure drop at the shoulder, seen as the pressure min- 
imum at s = 1.2. The baseline surface heat transfer rates are shown in Figure 6.30. 
The fluctuation splitting heating on the forebody is in very good agreement with 
the benchmark data except at the stagnation point, where the match is poor. The 
DMFDSFV result generally over-predicts the forebody heating, except for a region 
between s = 0.2-0.4 near the nose, where the agreement with the benchmark data 
is very good. Heating levels at the stagnation point and shoulder are both greatly 
over-predicted. Both schemes match the benchmark heating datasets on the aftbody 
and sting. 

6.4.4 Solution-Adapted Results 

The adaption mechanisms, point deletion, edge swapping, nodal displacements, and 
point insertion, are applied one at a time, using both the curvature clustering with 
DMFDSFV and the fluctuation minimization with fluctuation splitting, to assess the 
effect of each individual component. Then a full adaption cycle is applied using a 
strategy based upon the results of the individual adaption tests. 

Two-dimensional 

For point deletion the starting solution is the converged baseline. The baseline mesh 
has 32,125 nodes, and the objective is to remove points while maintaining the accuracy 
of the baseline solution. Both schemes were able to remove 10 percent of the nodes 
(3284 nodes for fluctuation minimization and 3366 for curvature clustering) causing 
minimal change to the solution. The nodes were predominantly removed from the 
freestream. A further 10 percent of the nodes were removed (3157 for fluctuation min- 
imization and 3076 for curvature clustering), for a total of 20 percent of the nodes 
deleted from the initial grid. The heating rates for both schemes are essentially un- 
changed. Figures 6.31 and 6.32, but both schemes have trouble maintaining the bow 
shock capture due to the further loss of freestream points, as shown in Figure 6.33 for 



194 



CHAPTER 6. SYSTEM MESH ADAPTION 



Cf 




s, in. 



(a) Heatshield. 



Cp 




s, in. 



(b) Aftbody and sting. 



Figure 6.29: Axisymmetric baseline capsule surface pressures, solid=fiuctuation split- 
ting, dashed=DMFDSFV, long-dash=NEQ2D, dash-dot-dot=LAURA. 



6.4. MARS PATHFINDER 



195 



1 




^ " 'v v/ 



^8^^^ 




s, in. 



(a) Heatshield. 



PodV^ 




s, in. 



(b) Aftbodj' and sting. 



Figure 6.30: Axisymmetric baseline capsule surface heating, solid=fiuctuation 
splitting, dashed=DMFDSFV, long-dash=NEQ2D, dash-dot-dot=LAURA, cir- 
cles=experiment. 



196 



CHAPTER 6. SYSTEM MESH ADAPTION 



1 




PodV^ 



s, in. 



(a) Heatshield. 



s, in. 



(b) Aftbody and sting. 



Figure 6.31: Two-dimensional capsule surface heating after coarsening with curvature 
clustering, solid=baseline, dashed=10% removed, dotted=20% removed. 



6.4. MARS PATHFINDER 



197 



1 




PodV^ 



s, in. 



(a) Heatshield. 




s, in. 



(b) Aftbody and sting. 



Figure 6.32: Two-dimensional capsule surface heating after coarsening with fluctua- 
tion minimization, solid=baseline, dashed=10% removed, dotted=20% removed. 



198 



CHAPTER 6. SYSTEM MESH ADAPTION 



Y, in. 




X, in. 



Figure 6.33: Loss of shock capture due to coarsening, fluctuation splitting. 



fluctuation splitting with fluctuation minimization. A similar problem also occurred 
using DMFDSFV with curvature clustering. The removal of more points causes rapid 
solution deterioration due to the failure of both schemes to properl}^ capture the bow 
shock on the coarsened meshes. 

For evaluating the edge swapping adaption the starting mesh has half as many 
points as the baseline, about 16,000 nodes and 50,000 edges, with the goal of realizing 
an improvement in the solution. Curvature clustering was used to swap the 538 
edges (approximately 1 percent) with the largest error estimate. These edges were all 
located in vicinity of the bow shock. The resulting heat transfer rates show only minor 
changes from the starting solution. Figure 6.34, without showing a clear progression 
toward the benchmark dataset. Edge swapping with fluctuation minimization is not 
beneficial for this case. About 1 percent of the edges were swapped but the resulting 
fluctuation splitting solution does not converge due to ringing of the bow shock near 
the stagnation point. Figure 6.35 shows pressure contours in the stagnation point 
region. Notice the irregular contours downstream of the shock. The difficulty in this 



6.4. MARS PATHFINDER 



199 



1 




PodV^ 



s, in. 



(a) Heatshield. 




s, in. 



(b) Aftbody and sting. 



Figure 6.34: Two-dimensional capsule surface heating after swapping with curvature 
clustering, solid=start, dashed=l% swapped, dash-dot-dot=benchmark. 



200 



CHAPTER 6. SYSTEM MESH ADAPTION 



Y, in. 







X, in. 



Figure 6.35: Fluctuation splitting shock bulging at stagnation point after edge swaps, 
pressure contours. 



solution is that the bow shock is making discrete jumps across grid lines, induced by 
swapped edges at the shock. The unadapted bow shock more closely follows the grid 
lines at the y = symmetry plane. Recall that this mesh was originally well-aligned 
with the bow shock from the structured-grid solvers, and the effect of edge swapping 
on a more random unstructured mesh may be different. Also, on a finer mesh, such as 
is used for the baseline solutions, the smaller grid spacing at the shock might lessen 
the detrimental effects of discrete jumps in the shock location. Edge swapping was 
tried again for fluctuation minimization, this time only swapping half a percent of 
the edges, but still produces the same disappointing results. 

Nodal displacements are tested using the same 16,000-node mesh as was used to 
start the edge swapping, also with the goal of improving the solution toward the 
baseline. Curvature clustering was used to move 1717 nodes with the largest error 
estimates, about 10 percent of the nodes. The total distance moved was 10.34 in., the 
average distance moved was 0.006 in., and the RMS distance moved was 0.0095 in. 
Nodes were moved in the shock, at the shoulder, and in the forebody boundary layer. 



6.4. MARS PATHFINDER 



201 



Y, in. 




X, in. 



Figure 6.36: Nodal displacements at shock using curvature clustering, original mesh 
shaded. 



A close-up of movement at the bow shock is shown in Figure 6.36, where the original 
mesh is shaded. Observe that the movement is not aggressive, but rather produces 
a gentle clustering toward the shock. Surface heating rates for this case are shown 
in Figure 6.37, where a minimal change in the solution is seen. Displacing nodes 
with fluctuation minimization moved 1827 nodes a total distance of 0.7488 in., for an 
average of 0.0004 in. and RMS of 0.0015 in. The fluctuation minimization movement, 
while moving a few more nodes than the curvature clustering, moved the nodes much 
smaller distances. Again, the movement occurred at the shock, near the shoulder, 
and in the forebody boundary layer. Surface heating rates for this case are shown 
in Figure 6.38. The solution has been made much worse on the forebod}^, while not 
much change is seen in the wake. Investigating the solution reveals that a windside 
vortex pattern has emerged. Figure 6.39, that is causing the lower heat transfer rates 
on the heatshield. The solution was run a further 800,000 iterations with no change 
to this windside vortex pattern. 

Point insertion is tested on the unadapted 16,125-node mesh, seeking to add 



202 



CHAPTER 6. SYSTEM MESH ADAPTION 



1 




PodV^ 



s, in. 



(a) Heatshield. 




s, in. 



(b) Aftbody and sting. 



Figure 6.37: Two-dimensional capsule surface heating after moving with curvature 
clustering, solid=start, dashed=10% moved, dash-dot-dot=benchmark. 



6.4. MARS PATHFINDER 



203 



1 




PodV^ 



s, in. 



(a) Heatshield. 




s, in. 



(b) Aftbody and sting. 



Figure 6.38: Two-dimensional capsule surface heating after moving with fluctuation 
minimization, solid=start, dashed=10% moved, dash-dot-dot=benchmark. 



204 



CHAPTER 6. SYSTEM MESH ADAPTION 



Y, in. 




X, in. 



Figure 6.39: Windside vortices produced by fluctuation minimization nodal displace- 
ments. 



20 percent more nodes. Curvature clustering added 3154 nodes, producing the heating 
results shown in Figure 6.40. On the forebody, there is improvement in the stagnation 
point region, but worsening near the shoulder. On the aftbody and sting the heating 
moves somewhat away from the benchmark result. Fluctuation minimization added 
3299 nodes, with heating results shown in Figure 6.41. On the heatshield the heating 
levels rise markedly toward the benchmark result, but exhibit a high-frequency oscil- 
lation of signiflcant amplitude. There is not much change in the heating in the wake 
region. 

For the full adaption the starting solution is taken on the triangulated 125 x 129 
mesh with 16,125 nodes, half the number of nodes used to generate the baseline 
unadapted solutions. The intention is to look for an improvement in the coarse mesh 
solution without increasing the number of nodes. Based upon the results of the 
component adaption tests, the strategy for an adaption cycle is to delete 10 percent 
of the nodes, swap 1 percent of the edges, move 5 percent of the nodes, and then 
insert back in 10 percent of the nodes. The solution is re-converged between each 



6.4. MARS PATHFINDER 



205 



1 




PodV^ 



s, in. 



(a) Heatshield. 




s, in. 



(b) Aftbody and sting. 



Figure 6.40: Two-dimensional capsule surface heating after point insertion with cur- 
vature clustering, solid=start, dashed=20% inserted, dash-dot-dot=benchmark. 



206 



CHAPTER 6. SYSTEM MESH ADAPTION 



1 




PodV^ 



s, in. 



(a) Heatshield. 




s, in. 



(b) Aftbody and sting. 



Figure 6.41: Two-dimensional capsule surface heating after point insertion with fluc- 
tuation minimization. solid=start, dashed=20% inserted, dash-dot-dot=benchmark. 



6.4. MARS PATHFINDER 207 

step of the adaption cycle. 

The curvature clustering cycle proceeded by deleting 1637 nodes, swapping 444 
edges, moving 696 nodes a total distance of 6.23 in., and adding 1599 nodes. The 
resulting heat transfer plots are shown in Figure 6.42. On the heatshield the stag- 
nation region heating has been improved and is now in excellent agreement with the 
benchmark. There is no further change in heating over much of the forebody between 
s = 0.2-0.9, but the heating spike at the shoulder is more tightly resolved. In the 
wake region there is little change in heating on the aftbody, while the sting heating 
is increased, trending away from the benchmark. 

The fluctuation minimization adaption successfully removed 1601 nodes, but ran 
into trouble again while swapping. Windside vortices were spawned in the stagnation 
region by an oscillating bow shock. In an effort to damp the solution the CFL 
number was reduced by an order of magnitude, without producing an improvement 
in the solution or eliminating the vortices. The number of edges to be swapped was 
reduced to | percent, but the same vortices and oscillating bow shock appeared. 
For this case edge swapping was omitted and the adaption cycle continued with the 
nodal displacement step, where 706 nodes were moved a total distance of 0.7 in. 
Finally, 1638 nodes were added, yielding the results of Figure 6.43. The forebody 
heating is generally improved toward the benchmark solution, although there is a 
high-frequency oscillation in the data starting at s = 0.6. Heating in the wake is only 
slightly changed, though the aftbody heating is improved to match the benchmark 
between s = 1.2-1.8. 

Axisymmetric 

The axisymmetric adaption component testing starts from the the baseline solution 
and mesh, which contains 11,125 nodes. The intention is to remove nodes without 
altering the surface heat transfer rates. About 10 percent of the nodes were success- 
fully deleted without impacting the solutions using both curvature clustering, 1029 
nodes, and fluctuation minimization, 1079 nodes. A close-up of the fluctuation split- 
ting mesh is shown in Figure 6.44, where it can be seen that most of the nodes are 



208 



CHAPTER 6. SYSTEM MESH ADAPTION 



1 




PodV^ 



s, in. 



(a) Heatshield. 




s, in. 



(b) Aftbody and sting. 



Figure 6.42: Two-dimensional capsule surface heating after full adaption cycle with 
curvature clustering, solid=start, dashed=adapted, dash-dot-dot=benchmark. 



6.4. MARS PATHFINDER 



209 



1 




s, in. 



(a) Heatshield. 



PodV^ 




s, in. 



(b) Aftbody and sting. 



Figure 6.43: Two-dimensional capsule surface heating after full adaption cycle with 
fluctuation minimization, solid=start, dashed=adapted, dash-dot-dot=benchmark. 



210 



CHAPTER 6. SYSTEM MESH ADAPTION 



Y, in. 



X, in. 
Figure 6.44: Coarsened axisymmetric mesh using fluctuation minimization. 



removed from the freestream while a smaller amount are removed from the wake re- 
gion. Further point reductions were tried, and the curvature clustering successfully 
removed another 1136 nodes with minimal change in the surface heating. However, 
removing 1081 more nodes with fluctuation minimization leads to the problem of a 
loss of shock capture, as was seen in the two-dimensional results of Figure 6.33. In 
this case, the solution deteriorates to an unacceptable level because of the bow shock 
blowout. 

Edge swapping is started from a mesh four times coarser than the baseline, tri- 
angulated from 63 x 45 = 2835 nodes, looking for the heating predictions to improve 
toward the baseline results. The mesh has 8290 edges, and 78, about 1 percent, 
with the largest error estimates were swapped using curvature clustering. Figure 6.45 
shows the initial and adapted heating rates compared with the baseline solution. The 
edge swapping produces only marginal changes in the heating rates. Fluctuation 
minimization swapped 88 edges and also shows minor changes in the heating. Fig- 
ure 6.46, except at the stagnation point where the adapted heating is dramatically 



6.4. MARS PATHFINDER 



211 



1 




s, in. 



(a) Heatshield. 



PodV^ 




s, in. 



(b) Aftbody and sting. 



Figure 6.45: Axis3^mmetric capsule surface heating after edge swapping with curvature 
clustering, solid=start, dashed=adapted, dash-dot-dot=DMFDSFV baseline. 



212 



CHAPTER 6. SYSTEM MESH ADAPTION 



1 




s, in. 



(a) Heatshield. 



PodV^ 




s, in. 



(b) Aftbody and sting. 



Figure 6.46: Axisymmetric capsule surface heating after edge swapping with fluctua- 
tion minimization, sohd=start, dashed=adapted, dash-dot-dot=fluctuation splitting 
baseline. 



6.4. MARS PATHFINDER 



213 



Y, in. 




X, in. 

Figure 6.47: Shock kinked in toward stagnation point at the x-axis after axisymmetric 
edge swapping with fluctuation minimization, velocit}^ contours. 



raised well beyond the correct result. Looking at the bow shock in the vicinity of the 
nose, Figure 6.47, a sharp kink in toward the body is seen along the axisymmetric 
axis. This kink in the bow shock elevates the pressure along the axis and causes the 
significant stagnation point heating over-prediction. 

The nodal displacement tests start from the same 2835-node meshes and solutions 
that were used to start the edge swapping check. Five percent of the nodes were 
moved using each scheme without producing a noticeable change in the solutions. 
A second pass of node movement was made, this time moving 10 percent of the 
nodes. Curvature clustering moved the nodes a total distance of 2.88 in. with an 
RMS of 0.017 in. The movement was performed at the bow shock and in the forebody 
boundary layer. The results, shown in Figure 6.48, show minimal change with a slight 
smoothing of the prediction on the heatshield between s = 0.2-0.5. With fluctuation 
minimization the nodes were moved a total distance of 0.18 in. with an RMS of 
0.0015 in. Most of this movement was in the shock near the axis. Figure 6.49 shows 
basically no change to the heating levels due to the nodal displacements. 



214 



CHAPTER 6. SYSTEM MESH ADAPTION 



1 




s, in. 



(a) Heatshield. 



PodV^ 




s, in. 



(b) Aftbody and sting. 



Figure 6.48: Axisymmetric capsule surface heating after nodal displacements with 
curvature clustering, solid=start, dashed=10% moved, dash-dot-dot=DMFDSFV 
baseline. 



6.4. MARS PATHFINDER 



215 



1 




s, in. 



(a) Heatshield. 



PodV^ 




s, in. 



(b) Aftbody and sting. 



Figure 6.49: Axisymmetric capsule surface heating after nodal displacements with 
fluctuation minimization, solid=start, dashed=10% moved, dash-dot-dot=fluctuation 
splitting baseline. 



216 CHAPTER 6. SYSTEM MESH ADAPTION 

Point insertion is applied to the coarse 2835-node mesh using both schemes to add 
10 percent more nodes. Curvature clustering added 283 nodes at the shock and in the 
windside boundary layer, but does not change the surface heating appreciably, Fig- 
ure 6.50. Fluctuation minimization added 287 nodes, also in the shock and windside 
boundary la3^er. While the average heating levels on the forebody remain roughly the 
same. Figure 6.51 shows a wild oscillation in the surface heating has been introduced 
with the additional nodes. The sting heating shows a small reduction, but does not 
exhibit a clear improvement. 

For the full axisymmetric adaption procedure a cycle is defined similar to the 
cycle for two dimensions. Starting from a converged solution on a mesh with half the 
number of nodes as the baseline, 125 x 45 versus 125 x 89, 10 percent of the nodes are 
deleted, 1 percent of the edges are swapped, 5 percent of the nodes are moved, and 
then 10 percent more nodes are added back. The solution is re-converged between 
each step of adaption. 

Curvature clustering deleted 560 of the 5625 nodes, primarily from the freestream 
but also from the wake and in the sting/vehicle juncture. Of the 14,941 remaining 
edges, the 150 with the largest error estimates were swapped. These edges were 
located in the bow shock and in the forebody boundary layer. Then the 253 nodes 
with the largest error estimates were moved. These nodes were also in the shock 
and forebody boundary layer. The nodes were moved a total distance of 1.2 in. with 
an RMS of 0.007 in. Finally, 570 nodes were added, enriching both the shock and 
the boundary layer. The results of the adaption cycle are shown in Figure 6.52. 
Essentially no change in surface heating is seen due to the adaption, other than a 
smoothing of the originally oscillatory data on the sting. 

Fluctuation minimization ran into problems with deleting nodes from the starting 
mesh for the full adaption test. Deleting 10 percent of the nodes proved to be too 
aggressive, leading to a loss of the bow shock capture. So the adaption cycle was mod- 
ified to only delete and insert 5 percent of the nodes, rather than the original target of 
10 percent. Deletion was successful removing 263 points entirel}^ from the freestream. 
Edge swapping was viable for this case as 159 edges were swapped. The problems en- 
countered during the two-dimensional edge swapping were not encountered with the 



6.4. MARS PATHFINDER 



217 



1 




s, in. 



(a) Heatshield. 



PodV^ 




s, in. 



(b) Aftbody and sting. 



Figure 6.50: Axisymmetric capsule surface heating after point insertion with curva- 
ture clustering, solid=staTt, dashed=10% inserted, dash-dot-dot=DMFDSFV base- 
line. 



218 



CHAPTER 6. SYSTEM MESH ADAPTION 



1 




s, in. 



(a) Heatshield. 



PodV^ 




s, in. 



(b) Aftbody and sting. 



Figure 6.51: Axis3^mmetric capsule surface heating after point insertion with fluc- 
tuation minimization, solid=start, dashed=10% inserted, dash-dot-dot=fluctuation 
splitting baseline. 



6.4. MARS PATHFINDER 



219 



1 




s, in. 



(a) Heatshield. 



PodV^ 




s, in. 



(b) Aftbody and sting. 



Figure 6.52: Axisymmetric capsule surface heating after full adaption cycle with cur- 
vature clustering, solid=start, dashed=adapted, dash-dot-dot=DMFDSFV baseline. 



220 CHAPTER 6. SYSTEM MESH ADAPTION 

axisymmetric case. The nodal displacements were performed primarily at the shock 
with a small amount moved in the boundary layer, for a total of 268 nodes moved a 
distance of 0.22 in., RMS of 0.002 in. Point insertion added 280 nodes, mainly at the 
shock but also a small amount in the forebody boundary layer. The results of the 
adaption cycle are shown in Figure 6.53. Most of the heatshield remains unchanged 
except for an improvement between s = 0.3-0.7 and a change in the stagnation point 
trend from being a large under-prediction to being a large over-prediction. Heating 
in the wake is largely unchanged other than an increase at the tail end of the sting. 



6.5 Discussion 

The primary new development of this chapter is the extension of the characteristic 
alignment mesh adaption strategy to the Navier-Stokes system of equations by a 
generalization of the fluctuation minimization formulas originally developed for the 
scalar advection-diffusion equation. Particular emphasis is placed on formulating the 
nodal displacement forcing functions for the upwind, positive, linearity preserving 
fluctuation splitting distribution scheme consistently in both axisymmetric and two- 
dimensional coordinates. 

The main test is a hypersonic, perfect gas wind tunnel case for a Martian probe 
model, configured for both the real axisymmetic geometry and the corresponding 
two-dimensional geometry. In considering the unadapted results, the two-dimension- 
al baseline solutions for both fluctuation splitting and DMFDSFV are obtained on the 
125 X 257 mesh, the same mesh for which the LAURA benchmark is grid converged, 
aside from at the stagnation point. The fluctuation splitting surface pressures are 
in excellent agreement with the benchmark while the DMFDSFV surface pressures 
match the benchmark on the heatshield but do not match well in the wake. For the 
forebody heating fluctuation splitting shows excellent agreement with the benchmark 
aside from at the stagnation point while the DMFDSFV result is consistently high. 
The aft heating is about the same for both schemes, reasonably agreeing with the 
benchmark. 



6.5. DISCUSSION 



221 



1 




s, in. 



(a) Heatshield. 



PodV^ 




s, in. 



(b) Aftbody and sting. 



Figure 6.53: Axisymmetric capsule surface heating after full adaption cycle with fluc- 
tuation minimization, solid=start, dashed=adapted, dasli-dot-dot=fluctuation split- 
ting baseline. 



222 CHAPTER 6. SYSTEM MESH ADAPTION 

For the axisymmetric unadapted results, the baseUne solutions for both unstruc- 
tured schemes are obtained on the 125 x 89 mesh, which is a factor of four coarser 
than the mesh that Hollis had to use to get good results with the structured finite 
volume code NEQ2D. DMFDSFV surface pressures are excellent on the forebody, 
very good on the aftbod}^, but a little high on the sting between s = 2.5-3.5. The 
fluctuation splitting pressures are a little low on the forebody and excellent in the 
wake, splitting the difference between the two benchmark datasets. The fluctuation 
splitting forebody heating is an excellent match with the benchmark, aside from at 
the stagnation point. DMFDSFV over-predicts the forebody heating. Both schemes 
produce an excellent match with the benchmark in the wake, splitting the difference 
between the two computational benchmarks on the sting. 

In testing the component adaption techniques point deletion is the most beneficial 
tool. Coarsening works well removing up to about 20 percent of the nodes, but when 
taken too far leads to a loss of the bow shock capture, and a rapidly deteriorating 
solution. The other adaption techniques generally have minimal or negative impacts 
on the solution, with the exception of point insertion with fluctuation minimization 
where a little solution improvement occurs. Curvature clustering produces nodal dis- 
placements on the order of ten times larger than fluctuation minimization for the 
same number of points moved, but the fluctuation splitting solutions on the con- 
torted meshes are less robust. The lack of robustness is usually caused by distortions 
to the bow shock near the symmetry axis. Common failure modes are an oscillating 
shock shedding windside vortices or a steady shock kink producing unexpected pres- 
sure contours and surface heating spikes. The root cause is that the local, compact 
adaption techniques employed here are mis-aligning the mesh with the bow shock. 
The typical behavior is that the fluctuation splitting scheme is more sensitive to grid 
perturbations introduced by the fluctuation minimization adaption in corrupting the 
solution, but is generally more accurate than DMFDSFV on suitable meshes. The 
component tests indicate that the mesh adaption for systems can not be nearly as 
aggressive as was possible for scalar equations. 

For the full adaption cycle in two dimensions with curvature clustering the heating 
in the stagnation region and at the shoulder improves, the sting heating is worse, and 



6.5. DISCUSSION 223 

the rest of the vehicle sees no change. With fluctuation minimization the forebody 
heating improves but becomes oscillatory, the aftbody is the same, and the sting 
improves. For the axisymmetric case the curvature clustering cycle does not change 
the magnitude of the heating but does smooth the initially rough heating on the sting. 
Fluctuation minimization produces some improvement over a quarter of the heatshield 
but also makes the sting heating a little worse at the tail end, leaving the rest of 
the heating unchanged. Although heat transfer is a variable of primary interest for 
aerothermodynamics and may be a first consideration for driving the adaption criteria, 
the present results emphasize that for blunt-body hypersonic aerothermodynamics 
the bow shock placement is critical to the forebody heat transfer rates. Due to the 
strength of the hypersonic bow shock, discrete jumps in shock position from one node 
to another produce significant pressure disturbance waves which strongly aft'ect the 
flowfield in the subsonic bubble and can overwhelm more subtle adaption within the 
boundary layer. 

To conclude, the adaption techniques do not significantly improve the solutions, 
the adaption effectiveness is not consistent, and the solutions display a lack of robust- 
ness. Point deletion works the best, but is risky if applied too aggressively. These 
results indicate that the extension of characteristic alignment based adaption from 
scalar problems to the Navier-Stokes system is not straightforward due to the non- 
uniqueness of the characteristics and the complexity of the fiowfield features which 
are not adequately modeled by the minimization of a single functional based upon 
fluctuations as formulated here. 

These local adaption strategies are designed to be synergistic with the compact 
solvers, and are attractive candidates for parallelization, but the present results may 
be indicating that the adaption requires a global view to introduce a level of smooth- 
ness. Dr. Peter Gnoffo[123] has suggested reworking the adaption strategies to in- 
crease the support of the discretization stencil. Such an increased stencil may allow 
for the introduction of smoothing parameters or other grid-quality controls, but at the 
expense of requiring more than nearest-neighbor communications, complicating an}^ 
extension to a parallel computing strategy. The upper limit on an increased stencil 
would be a fully implicit treatment. 



224 CHAPTER 6. SYSTEM MESH ADAPTION 

As a post-note to this chapter, Yamaleev and Carpenter[124] have recently pre- 
sented a very detailed mathematical analysis of the effect of grid adaption for super- 
sonic blunt bodies in the context of second and fourth-order structured finite volume 
schemes. They specifically consider nodal displacements and point insertion, conclud- 
ing, "The grid refinement study shows that for the second-order scheme, neither grid 
adaptation strategy improves the numerical solution accuracy. . . " For the fourth- 
order scheme the situation is worse because, ". . . the design-order error component 
drastically increases because of the grid nonuniformit}^." A consensus on adaption 
guidelines for general supersonic flows with captured multi-dimensional discontinu- 
ities remains elusive, for both structured and unstructured meshes. 



Chapter 7 

Summary and Recommendations 



This report addresses the suitabiUty of fluctuation splitting for hypersonic aerother- 
modynamics. A desirable aerothermodynamic solver must be robust in the presence 
of strong shocks, meaning that the solution must remain stable and positive with- 
out radiating dispersion or phase errors. The desirable scheme must also be of high 
accuracy to resolve the derivative quantities heat transfer and shear stress, and thus 
should be non-diff'usive. The classic approach to reconciling these two criteria is the 
construction of a non-linear second-order scheme with reduction to first-order in the 
vicinity of captured discontinuities. Perhaps the most popular of these schemes for 
unstructured meshes is finite volume with Roe upwind fiux difference splitting and 
limited linear reconstruction (referred to as DMFDSFV here). A drawback to this 
scheme is the reliance upon a locally one-dimensional approximate Riemann solver 
even when applied in two and three dimensions. Fluctuation splitting possesses the 
benefits of the traditional scheme and adds a truly multi-dimensional upwind distri- 
bution. But the discussion of a flow solver independent of the computational domain 
is only of academic interest, so this report also seeks to develop a mesh adaption 
scheme in conjunction with the desirable solver to improve the results and reduce the 
expense of analyzing a vehicle geometry. 

The fluctuation splitting scheme considered here had been introduced by Sidilkover 
as the optimal compact zero-cross-diffusion solver for linear hyperbolic equations, 
with an extension to the two-dimensional Euler equations on Cartesian grids. The 

225 



226 CHAPTER 7. SUMMARY AND RECOMMENDATIONS 

formulation lacked eigenvalue limiting, an axisymmetric derivation, and a viscous 
coupling, had not been demonstrated on a general unstructured mesh, was untested 
for non-linear advection-diffusion, had not been applied to a hypersonic problem, had 
not been used to calculate heat transfer, and had never been evaluated relative to the 
current most popular strategy — DMFDSFV. The evaluation of fluctuation splitting 
begins by proving the equivalence of DMFDSFV and fluctuation splitting in one 
dimension along with a strategy for viscous coupling to the inviscid flux distribution. 
Then the extension of both schemes to scalar two-dimensional problems is detailed to 
underscore the fundamental differences between a multi-dimensional upwinding and 
the locally one-dimensional treatment, with particular emphasis on the production of 
artiflcial dissipation. The superiority of fluctuation splitting over DMFDSFV for both 
linear and non-linear advection-diffusion is demonstrated and a new mesh adaption 
strategy for scalar problems is developed to exploit characteristic alignment with 
fluctuation splitting. This adaption scheme maintains the fully local, compact stencil 
of fluctuation splitting to allow for future parallelization and use on computer clusters, 
and is able to produce accuracy and efficiency gains for the scalar problems. 

The details of extending multi-dimensional upwind fluctuation splitting to a prac- 
tical aerothermodynamic solver for the two-dimensional and axisymmetric Navier- 
Stokes equations are detailed and a suite of veriflcation and validation cases compares 
the fluctuation splitting and DMFDSFV schemes. Fluctuation splitting is still to be 
preferred over DMFDSFV for the system of equations, more so for viscous problems 
than inviscid, but the difference is not as dramatic as is seen for the scalar model 
problems. While ffuctuation splitting should certainly be considered as a viable alter- 
native to DMFDSFV when selecting algorithms for code development, the differences 
in capability demonstrated here are not signiflcant enough to obsolete existing codes 
based upon DMFDSFV technology. 

The characteristic alignment mesh adaption strategy is extended to two-dimen- 
sional and axisymmetric systems as a generalized form of fluctuation minimization. 
The practical implementation for systems proves to be very difficult, and in the cur- 
rent adaption framework only the point deletion strategy is recommended. None of 



227 



the other adaption components produce significant accuracy improvements and of- 
ten lead to a loss of robustness of the solver. For inviscid or subsonic flows where 
heating is not an issue, perhaps the current adaption could be of use. For aerother- 
modynamics though, the local adaption strategy as it is currently presented is not 
recommended. 

Parallelization of the fluctuation splitting scheme appears to be attractive because 
of the compact stencil. The weak implementation of the boundary conditions devel- 
oped here should be an enabling mechanism for exchanging boundary data between 
partitioned sub-domains in a parallelized scheme. Another significant operational im- 
provement could be made by casting the fluctuation splitting in an implicit scheme, 
with either a point-implicit or colored strategy the most likely format. Two-equation 
field models for turbulence appear to be the best path for extending the current fluc- 
tuation splitting formulation to Reynolds and Farve- averaged flows. One remaining 
significant unknown for fluctuation splitting with regards to aerothermodynamic ca- 
pability is the inclusion of thermal and chemical non-equilibrium. In particular, the 
transformation of the flux Jacobian to auxiliary variables may not yield an easily 
factorizable system. Appendix B expresses the linearizations and transformations in 
terms of a general gas, but all the details of such an extension need to be worked out 
before a fair assessment of implementing a non-equilibrium scheme can be made. 

Modifications to the adaption strategy for increased robustness should relax the 
constraint that the adaption be as compact as the solver, focusing on some form of 
increased stencil as a means to introduce smoothing. Perhaps, though, a completely 
different adaption strategy is called for, something with a scaffolding analogy by which 
the bow shock, embedded shocks, vortices, and other inviscid phenomenon are framed 
with lines or shell elements while the gaps in the mesh framework are filled in with 
an unstructured triangulation. Whatever adaption strategy is pursued, the present 
results underscore the need for excellent bow shock alignment as a prerequisite to 
boundary la3^er refinement for the hypersonic blunt-body problem. 



228 CHAPTER 7. SUMMARY AND RECOMMENDATIONS 



Appendix A 
Limiters 

A limiter is a function used to limit the ratio of two values, satisfying, 

^(0) =0, yj{l) = 1 (A.l) 

A symmetric limiter is defined by. 

Symmetric limiters can also be expressed in terms of symmetric averaging functions, 
M^,, obeying, 

q^p(^^ =M4p,q) = M4q,p)=pi^(^) (A.3) 

A limiter that can achieve a value greater than unity is termed a compressive limiter. 

Degenerate limiters 

Two degenerate, non-symmetric limiters, satisfying only one of the constraints in 
Eqn. A.l, are useful. The hrst order limiter, ib = M^ = 0, is emplo3^ed to limit a 
scheme to first order spatial accuracy. In contrast, an unlimited scheme results from 
the choice -0 = 1. 

229 



230 



APPENDIX A. LIMITERS 



Minmod 

The Minmod limiter[125] is a non-compressive, symmetric limiter defined as, 

-0 I - ) = max(0, min(l, p/q)) 
or, 






pq<Q 

p/q if I p I < I q I 

1 |p| > l^l 



(A.4) 



(A.5) 



The associated averaging function is, 

M^{p,q) = 



pq<0 

P if 1^1 < kl (A-6) 

q \p\>\q\ 

The Minmod limiter is the non-compressive limit of a generalized limiter of 
Sweby[126]. Minmod is achieved by setting the parameter e = 1. The upper limit on 
£ is the Superbee limiter[127], £ = 2. 






max[0, uiin^ep/q, 1), mm{p/q, 



(A.7) 



t 



pq<0 

ep/q - I P I < 1 9 1 

1 if I J? I < I (? I < e I p 
p/q \q\^\p\^ £\q\ 

£ £\q\^\p\ 

pq<{) 

£p £ I P I < I <? I 

M{p,q) =<( q if \p\<\q\< £\p\ 
p |<?|<|p|<t|9| 

£q £\q\^\p\ 

Similar, non-symmetric limiters have been proposed b}^ Chakravarthy[128], 

'p 



(A.8) 



(A.9) 



^ 



max[0, Tam{p/q, e)] 



(A.IO) 



231 



and Barth[22], 



V! ( - ) = niax[0, m[n{£p/q, 1)] (A. 11) 



The upper bound on these hmiters is 1 < e < 2. 



Van Leer 



The harmonic Van Leer limiter[4] is a symmetric compressive Umiter with an upper 
bound of 2. 

'p\ _ f+lf I _ p<i+\pq\ 



^'1- 



1+lfl q'+\PQ\ 



'g 



\p\q + p\q\ 
\p\ + \q\ 



li^l+klf 

\p\ + \q\ 


(A.12) 




(A.13) 



Van Albada 



The Van Albada limiter[129] is a symmetric, differentiable compressive limiter with 
an upper bound of 1.18. 

'^[qj 1 + 2^ p^ + e^ + q^ + e^ ^ ^ ^ 

M, = ^'l-'/l^ltf (A.15) 

p^ + q^ + 2£^ 

For this limiter the small parameter, e, serves to reduce the limiting in smooth 
regions. Assuming 0{1) variations over a normalized distance, this parameter is 
scaled as e^ ^ I? , where £ is the mesh spacing. 

Van Albada presents the averaging function as in Eqn. A.15. Limiter-function 

forms have been presented corresponding to this averaging function in popular sources, 

such Hirsch[125]. Denoting the ratios p/q by r and e/q by s, the limiter presented in 

these sources is, 

(r + l)r 

r^ + 1 

which, lacking e, differs from Eqn. A. 14, 

^ {r + l){T + s^) 
^^ ' r2 + l + 2s2 



232 APPENDIX A. LIMITERS 

The more popular forms of this limiter do not turn off in smooth regions, thus missing 
an essential feature of the original Van Albada formulation. 



Appendix B 



Governing Equations 



B.l Compressible Continuum Gas Dynamics 

The Navier[87]-Stokes[88] equations of mass, momentum, and energy conservation for 
compressible gas dynamics are presented. The formulations are in terms of Cartesian 
coordinates, but include an axisymmetric source term,^ B, which is set to zero for 
two-dimensional and three-dimensional applications. 

The derivation of the equations assume a Newtonian stress-strain relationship, 
Stokes hypothesis on the bulk viscosity, Fourier's law for heat conduction, no body 
forces, and no external heat addition. 

Non-dimensionalization is performed for the following quantities as: length, Lj-ej-, 
velocity, V^o, time, Lref/V^, energy, V^, density, p^, pressure, Pc<,\% viscosity, jioo, 
temperature, Too, thermal conductivity, PooV^/Too, and gas constant and specific 
heats, K^/Too. 

The Reynolds number appearing in the non-dimensional equation is defined, 

R,^ =P^L^22LllL (B.l) 

A'oo 



^The axisymmetric source terms were derived from the orthogonal curvilinear formulations of 
Back[130] and Anderson, Tannehill, and Pletcher[89]. 

233 



234 



APPENDIX B. GOVERNING EQUATIONS 



B.1.1 Vector Notation 

The system can be expressed in conserved variables as, 

Ut + V-F = —ujB 
where F = F* - F", B = B* - B^ and, 

f p\ 



U 



R, 



\PEJ 

( PV \ 

pV^V + PI 

V PVH ) 

( ° ^ 

— r 

ynVT + Vr) 



T = p 



v^F+fv^y) -^V-VI 



B' 



( 



' pv ^ 

pvV^ 

\pvHJ 





B*^ 



Re^y 



\ 



(B.2) 



(B.3) 

(B.4) 

(B.5) 
(B.6) 
(B.7) 

(B.8) 



[M^; + v.)-|v(H-(o,t)Tj 

\KTy + pV-iVy + Vv) - lV-V{pv) - IpvV-VJ 

Tu is the axisymmetric flag, equal to unity for axisymmetric equations and equal to 
zero for Cartesian equations. 

Alternatively, Yu[131] shows the equations can be written, 

tI7aUt + V-(tZ7„F) =WB' 

where, 

zUa = 1 — zu + zuy 



(B.9) 



(B.IO) 



B.l. COMPRESSIBLE CONTINUUM GAS DYNAMICS 



235 



and 



B'" 



B' = B'* - B'" 

B'* = (0, 0, P, 0) ^ 

' ^0,0,^-|/.V.f,0 



(B.ll) 
(B.12) 

(B.13) 



Re^ V"'"' y 3' 

Also, when using the form Eqn. B.9 the divergence of the velocity in the viscous 
terms, F" and B'' , is replaced by, 

V-y ^-Lv.(^„y) = v.f + ^^^ = V-V' + — (B.14) 

^a ^a y 

B.l. 2 Two-Dimensional/Axisymmetric Indicial Notation 

The axisymmetric source terms are included in braces {}. 
Continuity: 



Pt + {pu)x + {pv)y = {pv} 

^aPt + ^a{pu)x + ^a{pv)y = -Zu{pv} 
^aPt + -^aipu)x + i^apv)y =0 

Momentum-x: 

{pu)t + {pU^ + P)x + {Puv)y 



(B.15) 

(B.16) 
(B.17) 



[H{2UX - Vy)]x + \ll{Uy + Vx)\ 



Re^. I 3 



W ( 1 

+ — <^ -puv + — - 

y { Rco 



p{Uy + V^) - -{pv). 



(B.18) 



^a{pu)t + ^aipU^ + P)x + -^aipuv) 



Re^ V3 



[P{2UX - Vy)]x + [ll{Uy + V^)], 



+ w < —puv + 



Rp 



p{Uy + V^) - -{pv). 



(B.19) 



^a{pu)t + ^a{pu'^ + P)x + {^aPUV 

1 /2 



Rp 



^Wa[p{2Ux - Vy)]^ + [WaP{Uy + V^)] ^^ 



2w 



{pv}, (B.20) 



236 



APPENDIX B. GOVERNING EQUATIONS 



Momentum-y: 
{pv)t + [puv)^ + {pv^ + P)j 



1 / 2 



+ — 

y 



-pv^ + 



Rp 



2 Apv 

^^Vy - -{pv)y - - — 



(B.21^ 



^a{pv)t + ^a{puv)x + tI7Q(pw^ + P)j 



— ^ f [/"(% + ^''x)]x + l^il^C^Vy - Ux)]i 



+ tu< —pv + 



Re 



■ 2 Apv 

2/^'^V- gl/^'^Jy- 3 — 



(B.22) 



ZD , ( 2 



+ 



2tI7 



< 2pvy - pyv - 2— I (B.23) 



Energy: 
{pE)t + {puH)^ + {pvH)y 



Re 



('^J^Jx + [l^-l-yjy + 



yU ( -u{2Ux - Vy) + v{Uy + V^) 



+ 



p ( u{Uy + V^) + -v{2Vy - U-r) 



2 

-1 
3 



(B.24) 



+ - <^ -pvH + — - 



4 

-{u{pv)^ + v{pv)y) - -pv{u^ + ?.v) 



2 

3' 



^a{pE)t + VJaipuH)^ + Wa{pvH)y 






\f^J-x)x + (^-'j 



y/y 



+ 



yu ( -w(2mj; - ?.'y) + i;(?Xjy + v^) 



p [ u{uy + v^) + -f (2t;jy - u^) 



(B.25) 



+ tt7 < —pvH + 



Re 



nTy + p{u{Uy + l^j;) + 2VV y) 
4 



{u{pv)^ + v{pv)y) - -pv{u^ + ?.v) 



B.2. LINEARIZATIONS 



237 



^a{pE)t + rUaipuH)^ + {vJapvH)^ 



Rp 



^a{l^T^)x + i^af^T, 



yiy 



+ ^n 



P ( gW(2Ma; - Vy) + V{Uy + W^ ) 



2w 



Wali [ u{Uy + V^) + -v{2Vy - U^) 



{{imv)^ + {nv'^)y] 



(B.26) 



B.2 Linearizations 



The inviscid fiux Jacobian is defined as, 



For a general gas in two dimensions with, 



9U 



dP 



ti- 



the Jacobian is, 



dP 



dpu dpE ' 







dP 



dP 



dpv dpE 



A'^ 



Pp - u^ u{2 - P, 



1 





PpE 

uv V u 

2i 



u{Pp-H) H-u'PpE -UvPpE u{l + PpE) 



(B.27) 



(B.28) 



(B.29) 



A^ 



1 

—uv V u 

Pp-V^ -uPpE v{2-PpE) PpE 

,,2; 



(B.30) 



y{Pp-H) -uvPpE H-v'PpE vil + PpE) 
The projection of the Jacobian onto a unit vector can be written in compact notation. 



A-n 







n 







Ppn^-VV'^ VI + V^n-ffVPpE n^Pps 
V{Pp -H) Hh- VVPpE V(l + PpE) 



(B.31) 



238 



APPENDIX B. GOVERNING EQUATIONS 



where the projected velocity is V = V-h. 

Speciahzing to an ideal gas with an equation of state, 

{puf + {pvf 



P = (7 - l)pe = (7 -l){pE 



Pn 



^-^v\ 



2p 

PpE = 7-1 



where F^ = V -V = v? + v"^, the Jacobian becomes, 



A'^ 



A^ 



The projected Jacobian is, 







1 










^-'V u" 


-<1 - 3) 




-v{j - 1) 


7-1 


—uv 


V 




u 





u{'-^V^ - H) 


H-u\j- 


1) 


-uv{j- 1) 


JU 










1 





—uv 


V 




u 





^'-'V v' 


—u{j — 1) 


- 


-v{j-3) 


7-1 


yC-^V^ - H) 


—uv{'y — 1) 


H 


-v^j-1) 


JV 



A-h 



n-^ 



n' 







-uV + ^y^n'' V — (7 — 2)1*77," un^ — (7 — 1)^'^'' (7 — l)n'' 
-vV + ^V^n^ vn'' - (7 - l)uny V - (7 - 2)vn^ (7 - 1)71^ 
y (^V'2 - if) Hn'' - (7 - l)t<V i/n^ - (7 - l)vV jV 



The eigensystem for the projected Jacobian is formed as, 

A-n =XAX-i 
The eigenvalues are, 

A =diag(V,V,V + a,V-a) 
with the sound speed defined, 

P 



(B.32) 
(B.33) 



(B.34) 



(B.35) 



(B.36) 



(B.37) 



(B.38) 



(B.39) 



B.3. VARIABLE TRANSFORMATIONS 



239 



The associated eigenvectors are the columns of X, 



X 



1 





1 


1 


u 


-ny 


u + an'' 


u — an 


V 


n" 


V + an^ 


V — an 




vn^ — uvy 


H + aV 


H-a\ 



L 2 



(B.40) 



B.3 Variable Transformations 

Transformations of the dependent variables can be performed from the conserved 
variables, Eqn. B.3, to the primitive variables. 



V 






satisfying dU = U^^dV, dV = VudlJ. and \Jy^ = Vu- 
transformation matrices are. 



Vv 



Vr 



1 

V^ 




pi 

^ pV /- 



iT/T 



Pn 






yppE PpE 





ij 

p 



While a perfect gas assumption leads to. 



U, 



Vr 



p 



1 
V^ pi 

— P^ — . 



iJ 

p 



2^y2 _(^^_i)y ^_i 



(B.41) 
For a general gas, the 



(B.42) 



(B.43) 



(B.44) 



(B.45) 



240 



APPENDIX B. GOVERNING EQUATIONS 



The projected fiux Jacobian, Eqn. B.31, can be transformed as, 



n-Ap =Vrf A-n U 



(B.46) 



For a general gas, Eqn. B.46 leads to. 



fi-Ai 



V pn 

VI 

p[P,-P,E(.V^-H)]h V 



p 



(B.47) 



while the perfect gas version is. 



h-Ai 



V pn 

VI W 

p 

jPh V 



(B.48) 



Introducing the auxiliary variables such that. 



dW 



( ^' ^ 

pdV^ 

[dP ) 



(B.49) 



where ds = dp—-^dP, a transformation from the primitive variables can be introduced 
satisfying dV = Ww dW, dW = Wy dV, and V^^ = Wy, with. 



V 



w 



1 ^ 



w. 






',' 











1 


1 





a 





pi 











1 



(B.50) 



(B.51) 



B.3. VARIABLE TRANSFORMATIONS 



241 



The projected flux Jacobian can be transformed accordingly, 

n-A =Wv{n-Ap)Vw 

V {1 - j,[P, - P.EiV - H)]} h O' 
VI n^ 
[P, - P,e(.V^ - H)]h V 

V 
VI n^ 
a^fi V 

The eigensystem of Eqn. B.54 can be expressed as, 



h-A = XAX-^ 



where the eigenvalues remain the same as for Eqn. B.38, 



A =diag(V,V,V + a,V-a) 



and the eigenvectors are, 



X 



1 
















h^ 


n'^ 


n^ 







—n^ 


h^ 


h^ 










a 


—a 




1 














n^ 


-n^ 








1^" 


|ny 


1 

2a 





1^" 


2"" 


— 7 


1 

la 



X-' 



The conversion from conserved to auxiliary variables is, 

dW = Wy dV = Wy V[/ dU = Wc/ dU 



(B.52) 
(B.53) 

(B.54) 



(B.55) 



(B.56) 



(B.57) 



(B.58) 



(B.59) 
(B.60) 



242 



APPENDIX B. GOVERNING EQUATIONS 



For a perfect gas, these matrices are, 



U 



w 



1 \ 

V^ I ^V'T 

Yl V 1 To 

2 7-1 T 



)_ To 
T 


V 1 
ft ft 

/ 


y-lT/2 

2 ^ 


-(7-l)F 7-1 



w. 



where the enthalpy is obtained from the total enthalpy, 

h =H - — 



and the stagnation temperature is defined, 

1 + 



To . , 7^^^2 



(B.61) 



(B.62) 



T 



(B.63) 



(B.64) 



Appendix C 

Axisymmetric Source Term 
Integration 

C.l Inviscid 

The perfect-gas inviscid axisymmetric source term can be written either in the form 
of Eqn. B.7 as, 

B = ^Z (C.l) 

y 



or in the alternate form of Eqn. B.12 as, 



B' = [0, 0, P, 0]^ = [o, 0, 1^ {z,Z, - M±^^ 







(C.2) 



The parameter vector, Z, is assumed to vary linearly over a triangular element Q. 
The integration of B over Vt is performed by subdividing Vt into thirds along the 
median-dual mesh, as depicted in Figure C.l. Notice that each sub-element Vli is a 
quadrilateral over which the parameter vector varies linearly. Also, the area of each 
Vti is one-third of the area of the triangular element, 

dil, = Sn, = Y (C-3) 



243 



244 



APPENDIX C. AXISYMMETRIC SOURCE TERM INTEGRATION 




Figure C.l: Subdivision of triangular element into three quadrilateral integration 
areas. Dashed lines are the median-dual mesh. 



A linear variation, say of the m element of Z, can be represented as, 



Zm{x,y) 



2St 

1 

2SV 



{am + bmX + Cray) 

<^ijkZm, [{x - Xi){yk - yi) + {y - yi){x^ - Xk)] 



where, 



(C.4) 



«m = Z^^{x2yi - 3^32/2) + Z^.,{x^yi - xiys) + ^^3(^1^2 - X2yi) 

^ijk-^mj\Xkyi -^iyfcj 



(C.5) 



bm = Zmi{y2 - Vs) + Z^^iys - yi) + Z^^^iyi - 2/2) 

= f^tjkZm, {yk - yi) 



(C.6) 



Cm = Zmi{x3 - X2) + Z„,,{xi - X3) + Z„^^{x2 - Xi) 
^ijk^mj\Xi X],) 



(C.7) 



In this appendix, Cijk is used to represent the C3^clic permutation summation operator. 



C.l. INVISCID 



245 



C.1.1 Integration of Eqn. C.2 

The only non-zero term in Eqn. C.2 is B'^ = P. The integration over a quadrilateral 
sub-element can be broken out as, 



Pdih 



7 



Z1Z4 di\ - ^^ / Zl + Zl di\ 



m, 7 Jn, 27 j^ 

For a linear variation of Z, a typical term of Eqn. C.8 can be written, 

'n, 



(C.8) 



1 



2 , {ara + hmX + CmV) (a„ + bnX + c„y) di\ 
J a, 

+ {bmCn + KCm)xy + hjinx'^ + C^CnV'^] di\ 



45|,^ 



Equation C.3 leads directly to, 



^m^l'n d^H 



St 



-ClfYlUfl 



(CIO) 



Q, 



The remaining integrals in Eqn. C.9 are evaluated using a bilinear mapping to a 
unit square in {(, rf) space. Introducing the notation i— and i+ to represent the node 
clockwise/counter-clockwise, respectively, from node i on triangle Q., ie, 



i i+ 



3 1 2 

1 2 3 

2 3 1 



the mapping from (x, y) to (^, r?) is. 



x{^, ri) = ri + r2.^ + ro,-q + n^r] 
y{C,v) = h + t2( + hT] + U^r] 



(C.ll) 
(C.12) 



where the coefficients are. 





1 


2 


3 


4 




r 
t 




\{yi+-yd 


\{X,- -Xi) 

Urn- -Vi) 


\{-x,- + 2xi 
i(-y,_ + 2y,- 


- X^+) 

-yi+) 



246 



APPENDIX C. AXISYMMETRIC SOURCE TERM INTEGRATION 



( runs from node i, ^ = 0, to the midpoint of side ii+, ( = 1. t] runs from node i, 
7] = 0, to the midpoint of side ii—, rj = 1. {(, i]) = (1, 1) corresponds to the centroid 
of i}. The inverse Jacobian of the transformation is, 



J-i 



x^y,] - x^y^ 



St 



l-gle + r?) 



and a transformed differential area element is, 

dn, =J-U.^df] 
Using the triangle centroid coordinates. 



X 



y 



yi + 2/2 + ya 



3 " 3 

the integrations in Eqn. C.9 take the following forms, 

xdili = -rriTx + bXi) 
n, 36 

c 

ydi\ = i^i^y + ^yi) 

n.: 



36 



^xydil = fl^ 



Uxy + ll{xiy + xyi) + 9xiy, + ^ x^y^ 



j=i 



Sj 



x^ dili 
a, 144 



14x^ + 22xiX + 9a;- +^^x] 



3 



y' dn. 



Q.i 



^iuf + 22y,y + <dy^ + Y,y] 



U4 



j=i 



(C.13) 

(C.14) 

(C.15) 

(C.16) 
(C.17) 

(C.18) 
(C.19) 
(C.20) 



C.1.2 Integration of Eqn. C.l 

The integration of the axisymmetric source term, as given in Eqn. C.l, over a quadri- 
lateral sub-element is, 

1 



J^m. ^^ 'z 



Q, y 

~i: I 7. (^3 + hx + C3y) (a™ + h^x + c^y) dVti 



(C.21) 



454 Jn.. y 

BTi + BT2 + BTs + BTi 



C.l. INVISCID 247 



where, 



and, 



5T2 =^i£!!L±^ /■ ^di\ (C.23) 

BTs ='-^lyd^h (C.24) 



5T4 = —2- / - [asttm + {asbm + a^h) x + hb^^x^] di\ (C.25) 

"i'^T in, y 

Equation C.3 leads directly to the hrst integral, 

BT, = ^25t ^^-'^^ 

Using the same bilinear mapping to (^, i]) space as was described in the previous 
section, Eqn. C.23 can be written, 

•1 fi 



2 = -^2 / / (^^i + ^2^ + '^s?? + rit^t]) I 1 — \—didri 



hCm + &mC3 ^^^^^ ^ -^^ (,^^ ^ ^^^ ^ 5^^] 



(C.27) 



2885t 
Similarly, Eqn. C.24 becomes, 

5T3 = ^^ [24ti + 11 {h + h) + 5t4] (C.28) 

BT^ in Eqn. C.25 is further simplified, 

BTi = BTii + BT42 + 5T43 (C.29) 

where. 



45| in, y 



5^41 =^ / -d.i\ (C.30) 



BTi2 = T^2 / - d^^^ (C-31) 

Sns =^-^ljdn, (C-32) 



248 



APPENDIX C. AXISYMMETRIC SOURCE TERM INTEGRATION 



to, 



Using the coordinate mapping in Eqns. C.11-C.12 to transform Eqn. C.30 leads 



-1 fi 



245x70 Jo h + tii + hii + uiii 

245t [io "^ V ti + hv 



d^drj 



t2 + ^4?? 



6 — rj ^ drj 



t2 + til] 



U 



In 



1 + 



u 



(C.33) 



Options for evaluating the remaining integral in Eqn. C.33 are to expand the natural 
logarithm in a series expansion as, 



In 



ti + t2 + {h + U)ti 

h + hrj 

(X) ^ 

+ 2y^— 

^^ 2n-l 

n =1 



h + h 

(ts + U)f] 



2{ti + t2) + {t3 + U)r], 



2n-l 



hr] 



2ti + ts7]. 



2n-l 



(C.34) 



or to resort to a numerical integration scheme, such as Gaussian quadrature. 
Equation C.31 can be transformed as, 



BT 



42 



Q3^m + Omh 

245t 



1 /-.I 



JO 



Ti + r2^ + ro,ri + rj^rj 

1^+H + hv + U^ 



{3-^-T]) d^ dr] 



asbm + amh 1'^ 1'^ 1 

245t io Jo {ti+t3V) + {h + Uv)^ 



(C.35) 



• { (ri + rsT]) (3 - r?) + [(r2 + r4r?) (3 - 77) - (ri + ra??)] ^ - (r2 + r4r/)^^ } d^ dr] 

The components of Eqn. C.35 are evaluated as, 
(ri + r3T]){5-T]) 



1 



^ (ri +r37/)(3-7/) ^^ / t2+t47? ^ 



^ ['^ (r2 + r4r/)(3 - rj) - (ri + rar/) 
Jo 



(C.36) 



(^1 + ta??) + (^2 + Uv)i 



-^ d( dr] 



3r2 - ri 



In 



+ 1 



+ (3r4 - r2 - rg) 
1 



1 

u 



In 



+ 1 



^"4^2 , I I ^4^2 

7rr + -^ In 1*2 + ^4! 



''4 JO 



In 1*2 + *4??| (i?? 



^ [(r2 + r4r/)(3 - r/) - (ri + rgr/)] (*i + t^r]) (t2 + Urj 

ni 



(t2 + Ur]f 



h + hr] 



(C.37) 



+ 1 dr? 



C.l. INVISCID 



249 



1 rl 



^2 + l'4'll 



"^ r2 + r^T] (1 _ ti + tsT] 

t2+t^T] [2 t2 + til] 



fd^dT] 



^ _ h + hr] j^ fh + t2 + ih + 14)?? 



2ti 



I2 



r4 rit2 

'4 



2^4 2^4 



r2ti r2ti 



df] 



^2 



+ 



r2h + rjti 

I4 



In 



+ 1 



+ 



^2+^4 



^4(^2 + ^4) ^2^4 

r4z 



14 L 



t2 + U- 2t2 In 



^4 



+ 1 



(C.38) 



(.9 



t2+t4 



Finally, Eqn. C.32 is transformed to, 

24SjJo io ii + ^2^ + %^ + *4e'7 ^ ^ 

•1 A'l 1 



245x70 Jo h + hi + hv + U^v 



{(ri + r3?7)^(3-r/) 



(C.39) 



+ [2(ri + r3r?)(r2 + r4T?)(3 - ry) - (ri + r?,rif] ^ 
+ [(r2 + TiTifi?) - rf) - 2(ri + r3r/)(r2 + r4r?)] ^^ - (r2 + ^477)^^^} d^dr; 

-BT431 + i?T432 + ST433 + -Br434 



where. 



BT. 



b.h '■' 



^■i^m 



431 



24St U •''■ ^ '''"'''' " "' (i *a + «+L + «. 



dr? (C.40) 



ST, 



432 



h h l'^ 

[2{ri + r^ri){r2 + r4r/)(3 - r?) - (ri + rsr?)^] 



245t 







e^e 



ti + t2^ + hri + U^ri 



df] 



(C.41) 



BT, 



433 



™ [(r2 + r4?7)^(3 - r]) - 2(ri + r3r]){r2 + r4??)] 



245t 







e^de 



h + t2C + hr] + US,ri 



df] 



(C.42) 



BT. 



434 



hbrr^ f\ , ^2 / /"' ^^ ^/^ 

245x70 U ^i + ^2e + t3r/ + t4er? 



dr/ 



(C.43) 



250 



APPENDIX C. AXISYMMETRIC SOURCE TERM INTEGRATION 



Integrating Eqns. C.40-C.43 with respect to ^ and then r], where possible, yields, 

= ^ r <^-+;f;'^-"> In (ji±M + i) A, (C.44) 

245x70 t2+Ur] yti+tsf] J 



BT 



432 



hbm r [2(^1 + r3r]){r2 + r4r?)(3 - r?) - {n + TsT])'^] 



245t 



t2 + tiTj 



^ _ h + h?] j^^ f h + Uv ^ ^ 



t2+Ur] yti + tsT] 
hbm { 6rir2 - rl t^ 



drj 



245t 



U 



n — + 1 

^2 



6rir4 + 6r2r3 - 2rir2 - 2rir3 / ^2 , 
H 1 In 



^2 



+ 



6r3r4 — 2rir4 — 2r2r3 — r 



u 



2 ^4 V ^4 



+ 1 



(C.45) 



^4 13 ^4 



2 ^4 \ ^4 



^2 



"^ [2(ri + r3r/)(r2 + r4r/)(3 - r?) - (ri + r3r?)2] (ti + ^37?) 



{h + t4ry)2 



h + Uv , , , , 
m I \-l ] df] 



BT 



b,h 



3'Jm 



433 



^ (r2 + r4?7)^(3 - f]) - 2(ri + r3T]){r2 + ^477) 



t2 + ^4?? 



(ir? 



ST, 



4331 



245t jo 

1 ^1 + hT] 

^^|5T4334+Sr4332 + y^ ^^^- 

•^±^lnf^i±M + i),a (C.46) 
[(3r2 — 2rir2) + (6r2r4 — r^ — 2rir4 — 2r2r^)rj 



t2 + ^4?? 



3r| — 2rir2 



+ 



2*4 

4 



u 



+ 1 



+ (3r4 — 2r2r4 — 2r?,ri)iif — r\rf''\ dr] 



Qr^n - r^- 2rir4 - 2r2r3 / ^2 , 
H II In 

2*4 \ ^4 



t2 



+ 1 



3r| — 2r2r4 — 2r3r4 



2*4 



2 *4 V *4 



2*4 



^4 



2 *4 \ *4 



^2 



u 



+ 1 



(C.47) 



C.l. INVISCID 



251 



BT. 



4332 



'' h + tsv 

it2+uvy 



h /"2rir2 - 5rl 



+ 



+ 



[{5rl — 2rir2) + (6r2r4 — rl — 2rir4 — 2r2r?^ri 

+ (3r4 — 2r2r4 — 2r?,ri)iif — r\rf''\ drj 



t2 + U 

ti{rl + 2rir4 + 2r2r3 - 6r2r4) + t3(2rir2 - 3rf) / U_ 

^4 V ^2 + ^4 

ti(2r2r4 + 2r3r4 — 3r|) + t3(r| + 2rir4 + 2r2r3 — 6r2r4) 



+ ln 



fc4 



l2 



(C.48) 



^2 + ^4 ^4 



u 



+ 1 



+ 



^1^4 + ^3(2r2r4 + 2r3r4 - ?>rl] 
■2tl 



U 



t2+U 



^4 V ^2 + ^4 ^4 



2^ In 



u 



+ 1 



+ 



3tl 



^4 — 2^2 



,t 



^9 



2— m 



+ 6i 1 + 

^2 + ti ^4 \ ^2 + ^4 ^4 



u 



+ 1 



and, 



ST. 



&3&m [^ (^2 + ?'4??)' 



434 



245t Jo *2 + ^4?/ 



1 h + Ut] 



3 t2+ tiJ] 

245t 



1 h + t3r] ( ti +hrj ( t2 + tiri 



2 t2 + t^T] 

BT4341 + BT4342 + -BT4343 



t2 + Ur] yti+tsf] 



drj 



(C.49) 



+ 



r' {r2 + ririY{ti+h'nf ^^ fh + Uji \ 

Jo {t2 + Uvy ""[h + hv ) 



drj 



BT, 



4341 



1 [^ {t2 + ri-rfy 



-1 

3tl 



^2 + tiTI 



r2ri + Y + 



drj 

r2U - ^4^2 
t4 



r4 + 



r2t4 - r4t2 
U 



In 



u 



+ 1 



(C.50) 



252 



APPENDIX C. AXISYMMETRIC SOURCE TERM INTEGRATION 



BT 



4342 



■^ {r2 + r4r]y{ti+t3r]) 



m 



{t2 + Urif 
+ 



drj 



2r2?'4ii + rh. 



2 ''3 



2*2(^2 + ^4) 
rlU + 2r2rih 



+ 



2t\ 



+ 



rlt. 



4''3 



4*4 



t2 + U 



2tl 

2*2*4 + ^4 

^2 + ^4 
*i 



In 



^2 



^4 



*2+t4 



2*2 In 



t4 



+ 1 



4*2 + 2*2*4 



*2 



14 



^4 



+ 1 



-BT4343 — — 



(r2 + r4?7)2(*i+*37?)^ ^ 

Jo {t2 + UvY "^ 

_ r|*f(2*2+*4) r|*i*3 + r2r4*f 

2*2(*2 + *4)2 *2(*2+t4)2 



+ 



r2*2 + r|*2 + 4r2r4*i*3 /^3 _ *2(3*2 + 4*4 

2 (*2 + U)^ 



2*t 

_ r4*3(r2*3 + 7-4*1 



-In 



r|*| 
2*t 



*4 
14 

■*4 - 
14 



2*^ — 9*2 — 12*2*4 



- + 1 



(i2 + ^4)^ 

4*2*1 + 9*^ + 12*3*4 



+ 3*2 



2-,„ 

2 



(C.51^ 



(C.52) 



^2 



-QtU^ 



In 



^2 



Appendix D 



Publications 



The following publications have resulted from this dissertation. 

Journal articles 

• W. A. Wood and W. L. Kleb, Diffusion Characteristics of Finite Volume and 
Fluctuation Splitting Schemes. Journal of Computational Physics, v. 153, n. 2, 
pp. 353-377, August 1999. 

Technical reports 

• W. A. Wood, Equivalence of Fluctuation Splitting and Finite Volume for One- 
Dimensional Gas Dynamics. NASA TM 206271, October 1997. 

• W. A. Wood and W. L. Kleb, Comments on the Diffusive Behavior of Two 
Upwind Schemes. NASA/TM-1998-208738, October 1998. 

Conference papers 

• W. A. Wood and W. L. Kleb, Diffusion Characteristics of Upwind Schemes on 
Unstructured Triangulations. AIAA Paper 98-2443, June 1998. 

• W. A. Wood and W. L. Kleb, On Multi-dimensional Unstructured Mesh Adap- 
tion. AIAA Paper 99-3254, June 1999. 

253 



254 APPENDIX D. PUBLICATIONS 

• W. A. Wood and W. L. Kleb, 2-D/Axisymmetric Formulation of Multi-Dimen- 
sional Upwind Scheme. AIAA Paper 2001-2630, June 2001. 

Future publications are anticipated for the following topics: the placement of 
eigenvalue limiting within the fluctuation splitting context from chapters 3 and 5; 
the weak formulation of the boundary condition for the upwind fluctuation splitting 
distribution scheme from chapters 3 and 5; and the adapted and unadapted capsule 
results of chapter 6. 



Appendix E 

Navier-Stokes Solver and Mesh 
Adaption Code 



The source code, written in C, for the two-dimensional and axisymmetric fluctuation 
splitting and DMFDSFV Navier-Stokes solvers along with the curvature clustering 
and fluctuation minimization mesh adaption schemes is included. The codes are 
actually written as the text documents shown here, and are converted to executable 
code by a Perl script as part of a Makefile compilation. 



255 



256 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



COI^GOCOOiOOT— 1^— IC^OJCOCO 



; Pi M 



o -■ 



' H a ^ i? : 






t: ^ ^ n; n3 p: T- 

' o _ ^ _^ ^ ri 

1 ^ a a !-: o o ;= 

. j_ P P g ^ CC ^ 



t= -^ +^ OJ 



cu OJ oJ ^ OJ cu nj 








a -o o Pm 


< H 




U < h-i 




cn 


S-ii-s.g- 


OJ CO 


fl 




CO CO 


4^ 


u 


~ "^ 


n 


ra ,-H -M CO 
K ^ ^ ^ 




n 








frt nj io cu ^ c; cu 



-f. ^ ll^ ll^ a ci ^ m -^ < ■< 















a & 







3 ^ 




-Q -O 


rf) 




< 


i-l 


<! < 


m 






Oi o 




,— 1 -M 


S 



'13 O 






U H 



a 


H 


> 


^ 


a 








^ 




-"■I 


r^ 


O 


-T^ 


'Tf 


^ 





O 


4^ 




O 




r,|l 








<; 


(-J 


^ 


C) 


l:^ 


< 



S K^ s 



o 






51 



o 



<; cc^ 



[— ( 






i -^ 


>-^ 


tB ^ 






X 


^ ^ 


^ 


^ 






^ 


§ 



o 





•^ 




J^ 


_o 


fcO i^ 




i 






"i; 


i ^8 










1 




hC 




!= 






a 








"« 8 








cn 


II 


















^ 




cc 




"~ II 








.s 




o " 










a 


*0 T* 












Oi I-' 




^ 




a 


^, 


a V 




tH 




5" 


8 






a 




1^ 


»-^ 


?,^ 8 "s 




a 












nj 




.2 


II 


8^ 














^ 




s 


_a 


■^ ^ 










&c 






^ 




s 




II >-i 
a; 
















OJ 












a 




.3 


g 


1 --'^ 






i 


J^ 


o 
1^ 


^^ 






"o 


1 


i 


^^' 


-M 




O 


c 


o 


II 1 


o 




zn 




OJ 






O 


.^ 
S 
^ 


s 


"3 


5^8 


en 
< 


<: 


- 


o 


If 



257 



\^ OJ - 



o o o o 



o 


l-A 


3 


PTI 


=3 






'i 


II 






&> ^ 


^ 







_ J w 

'S ^ ^ 
3 ^ S 



rtSS 



P^ CO CO 



O 



* to tj , M 

T3 ^ ei pi •- 

s - S ^ ^ 





cd '-^ 


■n; 






t t^ 

tx] b <l 

CO -^ iC 


^g6cco6g6cco6g6cco6o6c6 


#s 


o 


■en Oi o 



a -3 g • 
o -^ o 

•3 B m . 



H S 5 ^; 

m ^ ^ ^ 
g ffi ffi tS 



S .Si . 



■so, 
■ Q ^ ■ 

:^ (_) • 



S- ri :^ nj 

O "ri -5 "^ 

> -^ t^ "^ 

_S ^ m ^ 



^ r: J^ 



ra CO 'z^ ' 
O* W fe i 






m 



?8 ^ 






S E^ fe 



S P ^ o 



H 






T3 ■ 
<1 
















-i; 




Oi 




o 


"P 


H 


_o 




-a 


i_ 


"— &c 








T". 






o 


g 
3 










'+^ 


cu ^ 


Cti 


n-' 


ri 


-o 




n 


r,i 


n 














ti cfl 


fe 






t^ 


cn O 


C/J 


W 


C/5 



o o 



Oi O O Oi cu 
Oi "^ O Oi cu 



O Oi cu 



>^ ^ (M CO 


,? -1 ^ ^ 

O oi a; o 


<I GO CO GO 



1— i^^i— i^^i— i^^i— 1^^ 



258 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



■H a !D C3 u 



-O <U =H rH I 



Id cl m bo < 



T3 HH iH fl m r 



in T! Q) (d 

<u ^H u m 



m CN o 



+J -H >v 



Id Id 3 +J 
Q, Q, a, m 

d d S 0) . 



>. 


is nj 







o 




ctf 


^ q; 


ffi 


-£'.2 




■S 53 



■ ho .Q =H J3 



jd -H q -H 



+J-H(djHJdfHjH'0 



<UiV(DV<U<U<U(l)(DV<U<U!U 



3 P =1 3 3 



3 3 3 3 



cl333clclS333clcld 



fl: fl: B: B: : 



tt fl: B: fl: 



d CI fl 3 3 -H 



in ^H M tH ^H 



U U U U U U U 



Sh O O O O 



0) 0) Oh -P <U 



^ Q) 4J ^ 



I +J -H QJ <U -H 
, jj ho bO 

t5 "O tJ t3 



0**3 



QJ <U Q) +J ^ 



ho "O t! ho 



0**3 



I ho ho m 
1 T3 13 







CO ^ O t— OO OO 



1> 



: ° 3 



2 2 ^ 



H > O , 



3 ^ ^ 



^ ,-H ^ ^ ,-H 

C^ C^ CJ C^ C^ hJ 



a .Si ^ .^ ^ .-t= ^ 
ni ^ ^ _o S ;= m 

I— I C^ CO ^ lO ^ 1-— GO < 



^ H 



J^ oo 
CO 








o 


-d 












rt 










.2 


n; 


Vj 






















q; 












W 


o 








o 


-d 


fcO 








rrj 


-d 








-=>£> 




o 








.3 


"c 


m 








t> 
























"o 


S 


ri 




* 




cu 




& 








o 


rS 


jj 




bO 






t 


fi 




S 




cu 


^ 



ri 








'S 


■^ 










cu 


Is 


-^ 




(0 


fl 


-d 


B 


M 




HH 


.2 


S 




O 














* 








S-H 






a 


.2 


s_ 


^ 


^ 






a; 


c 


fcO 


Tl 1 




-q 
c 


1 


si 





4J 4J S 1) 



Uh W rt Q) 



T3 -a ^ fi) 



Uh 33 O- tH 



a 
o 
o 

a 
■3 



S ^ 



^ (u 0) ;3 I 



^H OJ QJ d rH tH 



&, ho £1 HH ft 



« n; fe 
^ "d -^ 



259 























ho hO 


■r" ?o h 



tH Jh ^ Cl -H 



ffl ^ S > fij 



W Cl S tH ■ 



+j+J^H<ui:li:l<uho 
m m OJ ho -H -H T) ^^ 



hJ 4J +J > 



<U ft dn Cl 4J 



> +J T! > 



W3 O O ■ 
I O O 

OJ o to 



I O O O O ■ 



1000000000 



Pl <U t! -H -H 



ft ft ft +J 



I J^ ^ ^ ft ( 



.D A A ^ ,£: 

■ Id =1 13 Id d 



I 'C '^ 'C 'C 'C 



B s B e e 

■H S 



"O "O t3 t3 nJ 

S CI CI CI S ■ 



C!PlClClClE-<E 

a) tu <u <u 0) 0) 

IrHiHiHrHrHrH+J+J 

=ifl;id3poo 

.t3'0'Ot!t1t3'H'H 



. -O Cl Tl CS 



Oh 
I 



260 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



S '6 ° 



I3 .a 



■H >% m 
tH H -H 



rH ft m 
Or o 

U m 

= Tl > 

m S T3 



"-■ rill <U O 



flj q: 3 0) Jh 



3 5f ^ -.S § ^ -S S, g. '^ -S 1 •; 

^.| 8 S'^ JS ;ti § ■" ^ g S ? -S 

Srt'^ 00)10= oomjiltuo d ^ 

^ c bH>-H b-idua, sh — 

2& Om> T30m<u-T3 &o 



omrHQ) su-H da 



n-i m I— 1 to Tl 
■H =1 .H -H fij 
1—1 O >— I t! M 



nj td (^ id Tl 
13 t5 "O TJ o 
CLh Oh &• ft Ci 



B S S CI -^ 



^.2 "e; 
-^ it^ t^ 



o c/^ 



Cfi 



i5 +^ a; o- T) 

.3 --,n p y Bh 



a 



3 ^ ^ 









Jh ro to 
+J - <u 



" 3 tj 



w o 



MO 

■— ■ Id b- 



261 









E e an ,a <u 






iH (DM 



ft 13 rH 



^^C3Sls|3SIS'a 
■P I 0) V <U <U V D 
ft^BC3ClClC3CJ 
* -P I I I I I 

ft ^H ^H in ^H in ■— ■ 
q: +j +j +j +j -p 4-1 I 

T!'— ' ftftftftft'H 



^H CI B S rH O 

P I 0) 0) dJ P 

ft ^^ Cl 13 U P 

» P> I I o 

Cl, U U ^^ £1 

iH 4J +J tH I 

rH ■-^ ft ft -H 



J3 <U 
P P 

SH ^H 



P> H -J B- 















P 


































T) 




T) 


h 




0) 




<D 


■P 



a 
(5 



o 
a 

3 
Ph 



■p 










in 


M 






S t; 


























rs 






































U. 




■H 


























>-l 




IH 






u 


II 






















+ 







ft 












'■P 


d 


ft 


13 
r-\ 


^1 




^ 
















U 






t> 








0) 


rti 


o 










.]_, 


ft 




^ 


^ 




















p 










































> 


A 


0) 




E 


■p 
















0) 




to 


i3 





































w ts w w 



o 
Q 

I 

M 



a 



o 



ft ° 



[u <]; =H -H 



262 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



•a t3 



a 



Q 
m 
m 











1 "O 

















ho Ph ho +J 0) 



I iH "H iH tH 



■H "O <U Q -H 

Ma a 

3 w pa 



— U ru — 



-O <U 4J Tl 0) ,Q 



in in 



1 '^ g £. " S> ^ ^ ^ ■- 



A (DA II <U<U<UtH 

+ II I bO I U U fl 0) 

+ QJ T3fl) QJ AAAA 

) Ui 1> ho 0) ho ho I I I I 

OJhO'O 113 "O <U<UQ)(l) 

hOTJOJ GO) QJ hObO&ObO 

T3 OJ I O I I "O T! Tl T) 

(DIM +Jm g <U<UQ)(l) 



j:j j:j J3 .i:3 



^ .g^ 



Q) -H O 03 



ho bO t3 Q Cl Cl 



*0 

Oh 



a 
*o 

Oh 



<u w c3 q 



263 



^ ^ 



-o CN « s a. 



0) fU -P cs cl 



-a T! --■ S M — ■ cl 



ft ^ 



Ph -H Or 



— +J 

t3 ■-' ft 



264 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



^ f- cu q; 



.2 o -Ti""^ 
^ = S ^ 



CD oi a^ 
"§ "S c 



-^ fe S 



--■ m Ph <u 



— -"■ho 



ho t3 0) 
t! Q) ho 



A A Q) ho 

I I m ja T3 ■ 

_ OJ dJ <U Id) 

<U ho &0 ho Oh .C I 



ho ,0 -O "O t! 
"O I OJ dJ <U 

<u S A .2 ,0 



-a CI is s --^ 





-y 


p^ a q; 








^ 1^ -a 








-d +^ 






.2 


"^ ^ "d 








Oi ri 








^^ "^ 


















-u 


s^? 






aj 


;^ 






M 


-^ 




V] 




" ^ a; 








K :g 




i-i 


CD 




QJ 


^ 4^ g 




ac 








XI 










I 






••B 


"^ S +^ 




XI 


ffl 

XI 


-d 


tBJ^ 




-d 


. bound a 
en loop 
Ige {the 








.£ ^ i 




13 


rt 




ffl 
in 
in 


1 


oi 5; ^ 





Ch <U <U 

# cs cs 

^ CI CI 



■— ■ cs 



in -= ^ 



I " t3 T) 

I C = o o 
loess 

■ -H .^ A A 
1 +J HH I I 



■- hO 



g 0) 13 ■ 



■ Q) S 



a. s Q) >s 1— 1 1— 1 



§^ 



<u Ed V iQ I 



. 4J rH 0) OJ <U 
M O Jh Jh in Jh 



1—1 <u <u ja 



S^ SJa qxis^ Sja SJa q^ 



O -H ho -H bO -H ho 'H 
S "O Tl t3 

tu <U <U V 0) V <u 



<U <U V 0) 



OJ ^H ^^ M 



ho a, s 0) 



I ho B 

Q) -— ■ t3 o ' 

ho 0) OJ -P 

t3 0) ,Q -P 



^ =H £1 ja 



265 



IV > O T) T) 

0) o o 
u -O -O S S 



<u <u S S .A .2 



r-\ S I 



CO <U Q) O 



<: ^ 



■— ■ U fi) J3 



266 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



d 3 p =1 Id 

Or Cb CLh C^ Oh 



■H ^H iH 
U «3 to 



A" 


-^" 


^ 


^ 


^ 






4J 






















































ill 






'-^ 


■-^ 


■"^ 






































































































> 






h^n 


hn 


a. 


a: 


fl) 


0) 


0) 


<D 
























































u. 


u, 


(4 


Uh 


Oh 


1 


1 


1 



3 P =1 Id 
d cl B c3 d 



C3 


d 


d 






« A -H 
< 1 


■H 


■H 


■H 


■H 




" 


" 




■H 




■H 




lO 


d 


- 




" 








t 


st< 














}-i 


LO 


LJJ 


L/J 


L/J 


in 


















>S 












T) 


Tl 


S-; 




w 
















•;r- 






a 


e 


J!, 










>S 




T! 




T) 


Tl 


s^ 




T) 


Tl 


s-s 


5^ 


5-s 


V 








s-s 




>S 


>S 


J!, 






flj 




T) 


Tl 


Tj 








d 
















a. 










































n 


bH 




> 










■H 
































































C3 


d 


d 




u 




d 


d 


d 


d 


d 






^H 
































































LIh 


p. 


u. 


-^ 


■^ 


*; 


a. 


i-M 


(4 


Uh 


Uh 


•^ 


^ 


St< 


^ 
































^ 


st< 


^ 




o 




^ 


^. 


^. 


^ 


^ 


^ 


o 


O 


o 


o 


o 


o 




C^- 


— 


o 


o 


o 


o 


o 




w 




^■1 


■H 


w 


■H 




cc 




w 


■H 


■H 


w 


■H 


m 


oj 


Ci:i 


cc; 






























































Uh 


Uh 


Uh 








rS fan 


Uh 


Ub 


Uh 


Uh 


■H 









«■— ■O'-' ■- "; I-- E-'CN'— ■O'— ■ 

-■H-m /^ ■«( fl3->-)=-'H-'H 

o+j->-)+j = d ~— 'o+j-i-i+j 

-clwc3 = +j.tH-d--^d 

■H .H Cri -H *-■ _ <U -H +J -H .H Pi 'H 

^^HOtH m O <« d^^HOfn 

CtJU-ttHli+J CVl 4J -HaJU-ttHOH 



Csl -H 



03 T) 
O O 
U- S 



■S >i to fi) " d fl 

O to £1 0) HH 

Qi d Si Qj ^ - I 

Is J a il. -si 

PH pH d S M ^H ^ 



rH T3 ,u nJ ho 



C O+J+JU QUhUh [iH&lbHfcUHUHfcH&lbHUH "POJ +J dd" Tj+J <U+J -P -H 

*i:r^j:3dd4Ja)0 d^n ^+j* nJdrHdd^ 

TJ+J'-^U-U-mu i-S iH+^ ^TI+J^U-BU-UhUh 



267 



01 

a 

O 

< 



3 

I 



Id ^H N 4J 



P -H -a =H 



268 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



0) fij 4J A rc ^ II 

"— ' r— I t! (d I rt g t/1 






O --■ I 






g's^ 



tH >-■ S Ph 



^ ho fU ■— ■ 






BO 



ft ^ 






II SIS 

L5^ II ^1 

<i ? i\ 

K ^1 II 



rt 




« 


» 


^ 






4l4ii 


^ 


^§1 












icj 


tM 


g ^ OJ 












S .£ 





I-Ie^ 


jH 


j:j 


j3 


Ici 






-M 


s E-i 






+J 




JS 


men: 


fl 


n3 




fi) 


■H 




s s? 


01 


? -iS OJ -^ 




ffl 


r-\ 


(d 


JS 


M j:^ f- 


< S5 ? 


^ 


e 




j:i 


rH 


+J +J ^ 


m 
< 


IIW 


■S 


-§ 


•S 


« 


■s 


T) T) X 


fl 


Id 


3 


3 


p 


3 3 = 




iH 


iH 


rH 


rH 


rH 


rH rH r- 




•o ^ ^ _ 












U U L 



LO O 

o ■ 
o o 



zn A •-f =H 



JCNUrHrH+J+JQJ rv . '-^ tuO^iJ 



■H -H -H -H -H -H 'H -H rH 



269 



no 


O 


-d 


S 




pi 


■^ 


-^ 


CO 





w 



'—''—' h ^H 



fH E ^ ■-■ 



lil 



urn I -^ 










n 


.^ 












rH 


o 


si 






'B 


> 










(4 






















4-" 



to y a 
g 3 .3 



;3 -a +J Tl 






0) V o 

1_1 L^ PI 



o t^ 

o -q 



.3 +^ 



s-a 



m + vi 

o. 1— 1 + 
Id ro 



a; 























M 












l-i 


H 



rii 


,__, 




















frt 






























,cl 





td ■-^ -H I 



S !« 1— 1 □■ ■- 

3 O CO - r 

tH S '—'■-- I— 1 T-H f 

■H +J ro L 

I g j^ # 1-1 w 

■p a LO Id M 



§--S 



ho ho 0) "— ' 



Ed u 



W CO +J 

U bJ o 

S S rH 

" - HH 

o o ■— ■ 









270 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



.2 ^ 

ft s 

^ i- 

01 ts 









< 11 






?1 


v= 


;= 


'n! 


en 


^ 


fl 


n 





+-• 










cd 




;= 


'-t— 










;= 




^ 


^ 










bfi 




T3 


q=! 


W 


a; 






3-' C ^ j:3 J3 S ■ U 



fHOimft ^ fljm3poptH I-h c1hII=hi 

i-\ " ...... ... ... 

a; q; u 0) 

_______ ^^, rHOJrH 

3 P ^ ^ 3 3 IptTC a;i:>^ 






to fij rH ho ^-^ 
UUUUUUUU I F-^ .QOOO HH rH-HQ)T3'H 

■H -H -H -H 'H -H -H -H _; ^ ^ O 



U 



271 



t3 t3 13 TJ 

^^ tH ^H ^H 



C3 i_i i_i 



(d CO 



■S ^ 



Ch o iQ a. 



■H "O ■ 



t3 t3 T3 TJ 

ti a a a 



t3 t3 13 TJ 

^^ tH ^H ^H 



<u (u 0) V n iQ 

ho bo ho ho .g ^ 

CO CS (M tH CO Ui 

<u Q) 0) dJ s; E S-" I 

t3 13 13 13 M I— I .-^ 

o o o o Q Q W 

CI CI a s s s E ■ 



T-\ r-i m m 

+j +j +j +j II II ' 

(0 fi) (fl [fl 



ro ro I— 1 





























rN 






























j:3 


A 


in 


<n 




















ffl 


























fl 


rti 



(d S >— ' T) U 



1-1 








































CM 


CLh 


in 


<n 










j:3 


JS 


LIh 


p. 



' T3 TJ 1^ r 



> w QJ ^ ^ 



CO m 



T3 T) ^ [n 



a 
a 



a 

'a 
'B 
a 
.2 

U 



t3 ca" fi) 0) 



3 

OS 



T3 
O 

a 



<u iQ a. 



"S 'id 



3 rH i>g ^ * 



E 13 ja ja -H 



^ 


o 




rH 




t-1 






M 


















































rH 


rH 
































13 


T) 




3 


3 













iStjTinwwcocomtji 



272 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 






CS IT) ro tH T-H CS 
<U Q) 0) fU QJ <U 

ti a a a ti ti 






<U Q) 



nj \j w w w '•iJ i\J iv 

hObOhOhOhObO.^ -d, 



II +1 ■^ ^ O Ul I COCS-rHrOCNT-lWWW T-HCSCO II. 

A'Hm ml tJdibH S'-Cl <UQ)a)fU!U<UEEK'-r^rHrHrH iHrH, 

■HII-H q; g --■rHaJrH TiTl'aTj'O'OMI-ll-l^ iHrH 

■i-)l CJ p^^ iHrH-OrH OOOOOOQQQWIIIIII (DO) 

tH-w -h IO-C3- UPlU wwwM AAI 

I O 5i H W tiJ /-N II II II II II II CS CS (M Q I— 1 I— 1 I— 1 III 

W II II -^ <i! S S ro g g g s 'H -H -H C3 a ■ 



idi— 1 2 0.00 Othcnco Oi-iOTHO'-ic|cqO'-icsr) 

mtH h O"" "aj(u<u I — ^1 — II — II — II — II — ^■ii't3'a--p+j+j 

I— I ro O-H-H ■HTJ'OT! t-\ r-l Oi C^ m CO -HflJlOfi) 

w>, ^--■■-' --■OOO 4J4j+j+j+j4J||||||wj-j-j3 



0) 0) w 






rn 


m 


3 3 




W CO w 

C3- ca- o- 




















































fN 


CO 




■o 


T! Tl T3 












t3 


T) 









J^ -H ^ B 



e Cct -H 

Id o e 



S i-i ■ 

- -H L 
O I— I 



' Pi M 
o 

rS fan 





O 


■H 


ft 




w 


J^ 


^ 


rill 


























U 




S, 


O 




o 
























































s 




ft 






■H 




M 




























■P 






























■H 


M 


— 


ft 


0) 




m 







273 






"O (0 (d nJ N 



•§ ■s S ^ ^ ' 



+J 


+J 


'^ 


o. 


+j 


+j 


+j 






























•M 














* 


* 


* 




* 


* 


* 












































+ 






H 


+ 







T3 ,^ .1^ 



e g ^^ Q) 0) fU 

n] flj fij +J +J +J 

Ih ^ Or (U 0) V 

fl ffl ■ y y § 

dn O, m fi) (D to 

■ ■ ^^ tH tH ^H 

m to fij fi) (fl tO 

IH ^ > Cb Oi Oh 

nj ffl A ■ ■ ■ 

A A CO tH tH ^H 

I I <u (d nl Ed 

CN ro t! > > > 



I— 1 'H N II II II 

■H I—' I 

>— ' N (0 1—1 I— 1 I— 1 



M 


+J 




A" 


— 


^" 






1-1 


tH 


T-H 


tH 


^ 


^ 


„ 


^ 


rs 


ro 








IS! 


M 


IS) 






























































r=! 


r=: 






























































































+j 


















































































































































frt 










■H 


-p 


■H 


tH 


fN 


ro 



W 1— 1 >— ' 



CS (M CN CN 



T-l T-H CO ro (M CN 

+J +J +J +J +J -P 

fd cO cO (^ cO (^ 

mill 

T-l T-H CO CO (M CN 



O O O O 



O O O O 



ma I— 1 1—1 1—1 I— 1 
>— I +j o o o o 



■§ ^ ^ 



■§ ^ ^: 



CO CS ■-' - 



: A ^ ho ho 



CS (M CN CS (M C^ 



|3 S 3 s s 



<U Q) 0) 0) 



IS |3 







M 


■H 


,_, 


■H 






S 


CIh 


^ 


a. 














p 


frt 




1^, 


« 


^ 






































> 


> 


tb 









J >— ' tH CS >— ' >— ' tlj 

1 1-1 i-" "-I 1-1 1-1 s, 



J >— ' CO CO >— ' >— ' 



: A ^ ho ho 



M M I-! « 



tdfl;i33>!>>|> 



"O t3 TJ 13 
IN] N N IS) 

"O t3 t3 13 



N N IS) 

13 13 



w w w w □■ r 






1—1 1—1 1—1 1—1 O 13 



13 13 13 13 
> > > > 
13 13 13 13 



274 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 






H -^ s^ 



Or (d 

■ > 

t-< I 

CO Xi 



^ -c -z^ ^ 



irsi 



^ ° 



C3 Q S B ' 



S -H ■-' E CM 



O O --■ O O 



II ■-' c ^ - 
£i a r-\ o : 



in U 

Id =1 

E S - 

■— ■ + - 






■H tH 

■H > 



j:^ a, T-H 



■o < ^ '^ ' 



=H SH T3 "O 



E- T) 1— 1 r 



O 
ffl 

u 



3 --^ -H q; 



^ .^ S a; g 



in <1 s •:; .s - 






+ 



^ -H 113 > Tl 



fl 


._-H H 





Si a 






+J 




ctf 


rt "H; 


3 


"rt ^ 


ctf 


^ ? 


;> 


-C q; 


w 








13 


c ^ 





■n 3 


U 


i; ° 





M 


M 




















+J 


rH 


U) 












IS! 












+J 









j:^ J3 j:3 ^H 



^ E-" ^ +J M 






dCiBCSdClSClB 
■H -H -H -H 'H -H -H -H -H 



I 

a 
H 

li 
u 

J2 






.y rt cu 



cu o ?; 






lO w i3 =a 3 









^ > > e 



!h ^ M ^ A 



•5 -5 



=1 T) P =1 d 



U tj O U t3 I 



275 



ft? 



+ 



ft? 



& a; 

S •- 






s Bl 



m U m ^ A 



<u cl 1=1 'H > I 



^^ g T3 t3 'H ^H >> 



dicl 0) B a -^ m •-• 



O WW 



+ + + + 



^ Oi 



Q) M 0) ;3 - 



5b^ 



1> qs 






w tn w d 



Tl 1— 1 O I— 1 



O .H 

'— ' CI 



bO B t3 S 



fl ^H ■-- ho 



■ -H Q) di 

E B U)^ 

<U g Q) i-3 



flj s --■ ^ 



B Q) B * -O 



;3 +J T! Tl +J 



II a. n] iQ 

■H 'H ^ 

■H =H 
Oh -H r 






276 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



(M 1—11—1 









ft ft T) rH 

I I S rH 

T3 T3 o <u 

(0 to S u 

ho ho * ■^ 






ho -H -H ho 



+ 






QJ 1— 1 L 

> 1-1 r 



^ B > > e 



■H -O -H ■ 



I CN ho ho CS 



^ a a a a 



-k" 






tJ o 



> d 3 3 S 



S: 1-1 1-1 1-1 1-1 

- -H -H -H 'H 

■H O ^ CN C^ 

O^ tb tb bn tb 



■H s -a 3 

1 1— 1 d, o 



Q c a -^ m -^ 



^ ^ o 



il "^ CD 



Si E! d 3 ■— ' 



a 


n: 





;-^ 










rt 




3 








U 




13 


rt 


q=l 


o 














-irf 


|t^ 








£/:! S .a _ I 



x O — I ^ 



^ i 



11— 1 rHi:OftQhOm--T! 

iro -fl3C3- IS^^BH^^ 
I"— 'ftgUTi'— 'furo lo 
i[oefHSfi)si>iH'ao 
■■H ojoi— iM (0-H nJfljtj 

IftE-iritLnhO+JTjft^HCl 
I ho 

IrHrHiHrHrHrHrHrH'arH 



CT^ 1— 1 ^H cr 



■'O'O'TJtJ'OTJ'OOTS 



^ o c 

9 aj t^ 






277 



a 
.2 

u 
fa 



;5 



CO £ 



ffl pq tH q in 

■H Q m T3 ft 



■H E -H q , 



in ,fl H iH 



<U<U(l)(DV<U<U<U(l)(DV<U 



j3 j3 p p j3 j3 j3 



3 P =1 Id 



qqqqqqqqqqqq 





.-H 


'O 


^ 


aj 


aj 


^ 






















r1 


_o 














H 




^ 




q; 








-rt 


-aO 


> 


o 












3 


QJ 


+^ 








M 
















m 






























_a 


K 




'~' 


O 


9^ 






^ 




cu 


J-j 


+^ 








m 


a; 














o 




-S 




aj 


R 






.2 




-d 


> 

-d 


O 


C 






3 




^ 


!>• 


■qS 






















,o 


n') 


T. 


H 




p 






















_a 


-d 


iiD 


a; 


^ 


rt 








^ 




■^ 


^ 


tj 




a 


g 




1 


"d 


'o 








1 




i 


o 


1 


o 

II 

■p 


g 



















o 


3 

m 


-^ 


^ 


o 


■P 




g 


-S 


H 


S T^ 


-o 


o 


O 


o 


1—1 


a 


^' 




O 




5h 


a 



£i £1 £1 'D Ql 



w w w CO CO 















■H 


■H 


N 


* 


11 


H' 


(1> 


(,, 


q, 


Tj 


Tl 


T) 


T) 


T> 












q 


q 


q 


q 


q 



<U +J -H CT^ 



9 


9 


* 


'? 


* 


11 


ni 


(i> 


r, 


,, 










































3 


3 


2 


CO 


CO 



O O o -^^ o 



3 td iH 

.. (V) w w w u 

1 ■ - m iH HH I 

O O J3 +J -P flj 

- (0 q q q 

II -H iH -H -H +J 

■— ' ^H in <U 



278 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



<U <U Q) ID dJ 
<U <U Q) 0) dJ 

^H ^^ tH tH ^H 



I J p 1_1 w 

U <U tJ T-H tH O 

nj <U Q -I-) rH [n 













n3 


=3 


u 




JLJ^ 






























a 












w 
















CJ 


S' 


t3 


=1 


^ 


en 


^ 




T) 




o 








^ 




u 


^ 




.2 








.i 


> 


(M 


XI 



<u 


E3 :3 


tf 


"5 "^ 










a 




<u 




^ 


^ -a 


OJ 


lO a; 




.=r o 


-M 










11 










C-J 


3 aj 


50 


r^ "+3 



T 13 W 

O O- 
t3 td 



^ 


^H 


hO 


hO 


















■- 




■- 




B 


























3 


3 


3 


3 


^ 


•i 


tH 


^ 




.. 








.- 




^ 


T3 


t3 


T3 


T3 


h3 




P 




















"^ 


* 




* 






c 


B 




















u" 










.^J 










M 


M 






>j 


>. 






M 


« 


>> 


>. 


a 










S 


3 






2 


3 






T3 


t3 


T3 


T3 


T3 


T3 


O 








>> 










^ 


















U 




T3 


t3 


tj 


u 








II 




II 




C 


B 


T) 


T) 


cri 








a; 


05 






+ 


+ 


+ 


+ 


T3 






M 










* 




■a! 














rt 










=3 


=3 






t3 






1 










M 


^ 






C3- 


ca- 


M 


« 


Gr 








B 


B 


B 


B 


!-i 


c 


B 






CO 


w 


T3 


13 


W 








cr^ 


CT^ 


cr^ 


CT^ 


o 


■H 




















w 


B 










rH 






S 


II 




II 




II 


II 


C3- 


CT^ 




















+ 


+ 


+ 


+ 


+ 


+ 


u 


lii 
















OJ 


QJ 














s 




e 


s 


e 


e 


cd 


tH 


(M 


hO 


hO 
















=3 


3 


3 


3 


3 


t3 












e 


e 








o 


CS 


B 


B 


B 


B 












3 


s 












T-l 


(M 


tH 


(M 







II 


CN 


CS 


B 


B 


B 


B 


B 


B 


B 












^ 




















cs 


cr 


II 












e 






















T-l 






(M 




p 




II 
















3 












c 


a 








1-1 


(M 




CN 


cs 


cc; 


Tl 


l-\ 




rH 








(M 


M 


>. 










CN 


cs 


o 












mi 



B, B, 3, B. 



3 3 3 3 
B B 3 B 



B B 3 B 



(UQJ+Jmm mm >v S-'^Hi— iS-'M 

TJ-Ouin^H U U - b QrHg'-^'a 

oo3nJflJ m a T-\ ra P5A3W£0 

AA+JAA AA ^, 3<UT-llilhO 



6 ^ 
•■ 'o 



279 






1 5^ 



■H j:^ 

w O 



ho -H -O 






t r-i d, [H 



0) OJ ho 



~^ cu q; 

^•" .£ -B 

"a '^ --2 

:a ^ E 



^ g 



ho O CT^ dJ I— 1 



?^ S ^ 






<1 B 



&^ rH rH -P 

+J iH iH B ^ 

S-- II w w ft M 































































































































































o 


l-l 


— 








rf 

















































a; — - l>j 



H "^ 



hJ o 



e -! ^ -y 



■-'■—■ ft 



> -2 



TJ Id Cl Tl "-~ B OJ 
O +J O fi) M -H +J 
B ffl -H M (0 ho OJ - 



2 l> 






g iH e 13 O 



td B c^ a^ 



, — I OJ 

aj > 



Tl •-{ ■ 













. 






,_, 


T3 




0) 


<i; 
















































XI 


A 


XI 


£i 




■-^ 


,t^ 




UJ 



oo33=i=i;dfi 
U tj Tl T3 t3 -O "O 



&. a " ^H -H ffl 



^; o 



280 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



Sq- 






hO 


bO 


'n 


















ro 


> 


> 






















rn 


rn 


















Tj 












































































Ui 


UJ 





O 3 3 t! 



tj tn w w 



0. 



CO 









o 



o iQ a. D- 



53 .2 



"do 1— ' 



4J CO 

rt o 





o 
& 


rt 


'^ 1^ 








fi P^ 






H 


-c . 
















• ^ ^ 






fcU 


o o^^ 


fl 


u" 


o 




^ 


3 




"g o_3 

a; (K O 






_r- Oi f> 


tu 


o 






;= 


s 


4= 


O .'= ^^ 


cti 






■sss 


1 




c 


^ 0; 53 


;= 


+- 


+^ 


■g 53 g; 


a 


OJ 


'c 




& 


;— H 


5 S'S 


^ 
<£ 


o 
O 


"Sh 


i 8 



C O 
■H fa 





+^ 


& 










[— 










<1 




o 




rt 


■e 




:r' 




g 


1^ 




> 


















rkn 




^ 


r-° 




c 


+ 




^r" 


o 


0) 


^ 


Tt; 






+ 


1 


C 




; 


^~ 


II 



(1) 

o 
> 

(1) 



- ^H fH C fH S ' 



g Cl M C « ■ 



m > (H > 



o <u o o 



cl C C S T) 



CM CLh 



e (d (0 

e bo ho 



I 00 .H ti ^ 



ho > > O 



cl cl B T3 . 



p-a- 



281 



O Or CM 



O Oh Oh 



■3 =3 



o^ .2 

§1 



a 
.2 






4^-0^4^ 



I— 1 <]; d 






S S <u CM 



a, T) cl 4J - 



O -H 

- +J 



'H Pi -o "O 



I 

Oi 

s 

to 



■3 s ^ 
■a .g's 

^■3 § 



^ZS 



^ 




■- 


Tl 


a 




ho 


ho 


























































a 








r-\ 


rf 












■H 


<U 




d 


Tl 


a 





^ 


II 


































■H 


4J 


T! 


r-\ 






d 


d 



282 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



t3 'H O O +J "O tH 

,— iQ)i_i ;d>> I— lOJ'— ' 

■H > O -H > T-l 



i-\ i-\ <V Q) 

03 m > > 



<u q: 



flj (0 tH Jh ho 

dl Or CM CLh T3 



•^ -tS U U eJ 
03 m v Hi U 



"X ^ 


ro 


-" 


^ 


O 


rn 


-" 


ro 


-" 


^ 


O 


rn 


































rH 








iH 










■^ 








■^ 


-^ 


.=i 












w 




._- 




^_. 




.^ 




._- 


















•H 









<U <U B S [fl -O -H 03 'H Pi -H Oi -1-1 U5 ■" u; -i-i tc 
d d F-j ^ V'^C^bnOibH CMtb Ontb CMbn CMtb 



a 


^ 




OD 





bD 




1 


15 


C 




-r 


ft 






\— 




r| 




<l 


rn 






e 










Q 


n 




u 


, 1 






i 


rt 


tr 












u 


"Tl 






td 




.■ 


^ 


■^ 


C 


.- 


CO 










< 


O, 


-n 












0) 


rr 


c: 




H 


T3 




3 


n; 


e3 




^ 




"^ 




OJ 


n: 














•a 


-a 


_^ 




^H 


q; 


-^ 




























i> 


^ 






;o 


w 


r-i 





> > fl * ho e 

iH iH ^ fl 0) V 

WW r-\ •- r-\ -^ > LO 

- " (U * +J LO :j^ 

Oi-H -"O*--^ -H to [V 

>.>. M^^ SCO r^^ 

ho bo "-IS -H ■ Q* 

- U U !> rH ft rn B 

w > > - J- II '— ' + 



u zn ui 



B 



-hOhOQiTJiH q * II 






Fh iH iH 

O W W O 

- O T-H -H 



B 



< 



- □■ i__i 1—1 

CI. o. o. 

^- 1, ' ' 



■H cs cs e 23 



B .a' 



■HiHi— i&OdJOO PnlOflhO Mil— II 

"ClHt3XTlT)-i-l>U hO=H-H3 13 O 

Fh flMja^-. +j^i— II 

(BU<UQ)(l)"US-' .Q'-^a.Tl* fl rH 

T3rH<UrHrHrH-H(U -Q^H inllffl 

FHXI>,fljaja>S -H r^ Tie 

0;3rHd33+JrHp+J flffl^H 

ooooooqoqpi 3 .ho 



283 



1—1 1—1 <u 



^ o ^ . 



CN O q; 0) 



I I— 1 ^H q; 0) 



T-H CS O (M (M ^ 



"O t5 '^^ "O ' 

rH rH U rH rH CN rH , 

■H -H tH -H -H J -H ■ 

+J +J o +J +J W +J 

> > 1=1 > > > > 1 



O I— 1 mH 

II 1—1 o 

I— I +J 

■I-) -H m 

1—1 -H 

II X Tl 



CSCSiMOirococoir) 



, O -r-j w 



o w o Id w m w 



T) 03 [iH a. 






a 



><1 


Cb 


C 


_C 


s 










£ 






-2 


Oi 




■rt 




+^ 








T-! 


^n 













cfl 


■-l. 




pq 


^ 




-a 



rH 


P 




























> 


d 


d 






+ 


* 


* 


;: 


A" 
















































> 


> 







^ g ^ 




^^ "^> 














■ - > » * 










i^ll 






1— 1 # T) T! 

rO iH rH 














^^ 




n-1 in 1— 1 1— 1 








^^ 










II 


c^ 









* CN > 


> 




















II 


/^ * 1—1 


CO 














0) (M C^ > 


> 



+ I 



0) > 0) <u 



o o o o ^-^ 

# 1—1 1—1 1—1 1—1 IH 

rH rH rH tH +J 

1— 1 ffl (0 > > s 

th e e -H 

■— ' ^H ^^ ■-' "-■ ^H 

^ o o a,^ a,^ ft 



" 2 M ri rt 

"-~ ^H o <u q; 

> PI T) T! 



c ^ ^ ^ d 



1 CN ro 

i fl rtl 



1-1 -O tH 

O ■- -H C 

1—1 4j 

!>< O > I 



O O 1-1 -rH 

X X X !!< 



284 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



. A A ■-■ Pi 

I I u <« 

o o oi t3 

S S <a 13- 













u 
























a> M 



<u j:3 0) ^ 



<U > > > Jh 



■H O 1-1 (M CO 

<u > > > > 



o -^ •-■ u 



. > > > > u 



m 


o 


> 


> 


jH 


Fi 


S U 




1-1 


















































d 




o 


o 


M 




hO t3 












> 


d 


II 






A □■ 
1 W 




cs 


II 




m 


fil 






p 


























































<i; 


UJ 


> 


> 


* 


M 








> 


> 



. T) T3 rH rH , 



O OJ — I 



I > 
I > 



T3 ^ " 



5; o ^ 
-^ ■ - c 



■Q <U "O =H 0) > 



iH 4J (d Jh 



rH 


r-i 


^ 


m 






i_i 


■H 




rH 




« 


- 1— 1 
































bC 




g 














* 








■H 






































> 


,£: 


> 




■n 




£1 




a. 


D 
































T) 










d 




d 


















ro 


■n 


ro 




> 




T3 


tb 






^ 



























4J O O O 



bo a 



285 



o m 



■H "O "O 

ft > f 



O U 

T) CI O 



ho CQ O "O 



O ■----■ Jh 



Pi ^ Tl (M CO 
D t^ W * 0) OJ 



> O 1-1 (M I 

<U > > > I 



cl cl cl '—''—' <u 



. T3 T) rH rH , 



o ~a 



O g 
^H bo 



T3 <V "— ' 



o j^ m ^ 



Q) > > > > Jh 



■H O 1-1 ro [fl 

1—1 1—1 1—1 QJ 

<U > > > Jh 



286 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 






ho <U Ci ^ 



flj 4J t3 +J 



§ S 



(0 (0 r-\ a 



S4j.HrHp|fl3-H moJ 

rH ■ T3 U ■ +J Is 

■ m +J fU M Id +J -H 

M ^^|>Ml^^^ S'h 

d ■ (0 Sh 'H "H (0 -HO 



■HMMS-PiHiH ^HhO 



2 T1 



|3 1—1 1—1 

I u: w I— 1 

■H O- C3- CO 





3 .^ 






.^^ 


























'>^ 


t>^ 








<l 








II 




II 




O C 




M 




[^ 








<l 


11 


<] 


K° 


i3 


'>4' 


1 


c d 


<1 








II 




II 


t>^ 


^ 3- 


K^ 








<l 


tl s 


-^ 



flj (0 m 0) 



d. > 






0) 






2 

3 


.. 






<u 


<u 




+J 




0) 






^'" 1-^ 














3 




(M 


cs 


to 




(0 










ffl ^ 




(M 






3 




< 


CN 




















ja 1—1 






N 


T) 


T! 


0) 




d 




■H 


=H 


m 


SH 


+J 


Id 




T! 


ffl o 












TS 


hO 














« 






+J 


■H Cl 








s 


d 




> 




O 




■H 






1 




£i 




d. > 


"■^ 


■^ 


X 


T) 


T! 


a 


fl 


■s 




M 


M 


M 


M 


SH 


HH 


■H 


(0 


<U <u 








<U 


q: 


0) 






fU 




















■H 


+J 












T) 




















■d ,2 




(0 


> 


£i 


£i 


j:i 


> 




A 


> 


> 


> 


> 


> 


> 


> 


> 


Id d 


+J 




iH 





a 


3 


rH 




d 


iH 


r-t 


rH 




rH 


rH 


rH 


r-t 




Ci 


































T) T! 




HH 


W 


T) 


T! 


Tl 


m 


U 


t3 


CO 


CO 


CO 


CO 


CO 


CO 


CO 


CO 



rH ^ P S S 



= II ^ 



P ini p-i Is :^ 



H ^ 



fl 
























.2 
















































-M 




* * 


* 










* 




* 




o 
























3 




1 












P 








fa 
















^ 




<u 




bO 




+J hJ 












Ch 


m 


■ff 




a 




C7^ CO 
















<u 






[fl a. 








<a 






V 










u 








> 


t^ 


Ch 


+J 


T) 




'-5 


+J 


Is >-j 


+J 






■H 


Tl 


^ 


e 




^ 


T3 


s s 


'm 






^^ 


3 











^ 


T3 


ft Q 








H 


Tl 


nJ 


■H 


CQ 




ft 






















13 






* * 


* 










* 




* 


-Q 


Cfi 


^-. 










^~ 


"-^ 




"~-. 




a 







































Id 








M 


■^ 




^ 


2 


J3 




Id 


g 




Id 




Q 




A ^ 








j:j 




~JS 


in 






J3 


JS ■ 


■d 






+j 


m 




OJ 






3 






■H 




Id 


(0 




e 


+J 








^ Id 








E 


i 


u 




Id 


OJ 




to 


+J o 
fl rH 


■C3 


fi) 


j:j 


■H 


^ 


e 




u 


^ 


e -H 




j:i 




H 


+j 


+j 




£i 




3 




V V 


^ 
















CT) 


1 1 


0) 
T3 




•§ 


•s 


■S 


•§ 


« 


■s 


■s 


■S 


fH 



p =1 d d 



d d d P d d 



r" t^ o 






l> 




ddddddddddd 

■H -H 'H -H -H -H -H -H -H -H 'H 



<r 


< 


-^ 


-? 


B 


tl 


"Wl 


"WI 



287 



■H n3 




. : 




I— 1 Ico 


.-H Ice. 


1 +J 




o o 












* * 


S 


+ 


1 


- 3 




O (M 








ts 1 
1 nJ 

■H +J 




r-\ r-\ 


£ 


^4'- 


^%§- 




























o 


>-( 1-^ 


^ 1^ 






U U 












(0 a 


"£ 


1 


1 


" 2 




J3 £l 










(0 lO 


II 


II 


ffl m 




■H -H 












i "^ 


s 


^d 


'"q" 














CO CO 
















II II 








o cs 




* * 


s 






e g 


W 


^ 








o- 


1—1 -H 


"B 








tJ 


■H >— ' 








o cs 


s 




o 






d d 




(M 1 










o 














4-1 1 








:s 3 




1 la 








T) T! 




■H +J 


^ 








cd 


M fU 






■a! -a! 


o 




a; 






d d 


b 


rS 









1 






fii 


rN 






1 




















d 


^ 






4H 


frt 


^H 


5^ 


4-" 






































































SH 




< 


to 






IS 


•s 


N 


■H 


"^1 


















































d 






d 








y 




d 


5^ 


M 
















II 








































:=: 




p 










S^ 


rs 




to 


>. 




■H 




■p 


fN 












M 


M 


=1 




















































































r/i 






« 










































UJ 


•-? 




S 


X 


f-; 


•— 


■P 





1 (d --■ 

1 -H a; 

tH o 

rS e-" tu 



a w s: 



TJ T3 TJ T5 

^ M ^ ^ 



ho ho bo ho 



t3 t3 T3 t5 

d d d d 



TJ T3 TJ TJ 
^^ M tH ^H , 



e s e s o cs 



Or CM o n 1—1 1—1 



O cs T3 Tl 



d d -^ ^ 



< 


<f 




■■^ 


o 




II 





;:^ o O' o 



tJ ts 'is T} ^-^ "^^ i 

o o o o C^ cs 1 

d d d d Q S ■ 

in i-\ 

^ ■§ ' 



O O CS CS O CS o 

d d d d rH rH tLH 



288 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



ho -P ho 

■H -H -H 



O 



'[I 






Q) — - 






O c: ^ 
O i-H O 






j?|h 



^°|h^ 



O 



+ + 

4- + 



o T 

tM + CO 



fi) I— 1 I— 1 I— 1 r 



^ HH 



,_, 




^ 


■H 




























Tl 


p^ 






0) 






















1 


p 




nl 










1^ 




o 






" 


Ub 





(3- + + + 






: -H M Oi SH SH "H ' 

I Pi =H Pn 









o 



r ^ < 



Ph 4J 1—1 

n3 ^ O I— ' 



O CS M 0) 



73 ro CO O O >— ' 



ro CO j3 4J 
1—1 1—1 a, 0) 
o cs iH ja 



itl 
I 



^ 



m Pi M 
CM o 



US I m -H 



■H O 
4J O 



IQ 1-j 0) tb 



a; '^ 
"^ o 



289 



=1«=1» 



TJ c 






1_1 
































o 




s; E 


■rH O 1 




























































































































in 


CN T-H 


t3 l^l CN 


o 




o 


































i-i 






-^ 


In: 




+^ 


l> 
















■qS 










j_^ 


^ ->,^^ 


IV 


OJ 




l> 


6 


cT 








ci- 


S 


t3 








u 


_s 


"W.!i 



Ik. 



a5 ^ 



I-l I-l ^1-11—1 

O Q) O tH KJ I— 1 I— I 

T: r-\ 1—11—1 t)_, -H T-H 

ja 1—11—1 1—11—1 

3 o o ^ s; E 



CN CN CO CO 1-1 (M CO 
' CN 'in '^ CS CO CO CO 

E E E E E E E 









1— ' flj 1— 1 

■P M ■>-) 

QJ I 1—1 



W -O "O 
U i=l ^ 



M + -H 3 



o O >. ' '^ 



=^ ^ '^ Ar 



pi o o o 



a; S CI fiJ 





m 


^H 


T) 




m 


^ 


"it 


'm 


■H 
■P 


d 




"m 


















g. 


in 


in 






frt 


























































n 




.Q 






■H 


























































































CJ 








':3 






















































iH 
























Is S <u +J 






O ^^ M tH 
tb Or Cb CL< 



290 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



a; .7- 






bC' +^ C '^ 



^ o =: "^ O 



C3 a; -^ _a^ ^ 



a 
.2 

■-3 
a 
o 
o 



a 
a 

o 



" (c +^ '^ -r^ 



a; ° *- 
13 E3 ■ 



^ I °l^ 



oj a; -; o • 

"g-=c 8 S;J 



o^ 









eh 



'-^ 



+J fH OJ fH 









Cl, > ti (0 






Pi >-• 

O N 



M 
















^ 
















































































































LSI 


bU 


T! 


Ub 


"'"' 













































,£: 


^ 


.a 


,£: 


£i 




■— ■ 







^ a 





J^ 


a 








T! 


PJ 


PL, 








T! 




1 




Ui 


"— ' 













































r-^ 


T) 


tb 



291 



03 c3 



-O +J t! -P 



V <u i 
^H in ' 

I I 1 



B 1-1 e r-1 



cl j:3 J3 Jh ■ 



a' « ^ i » 

fij w w ^^ w 



m o th CN ro u flj 

1_1 1_1 l_l 1_1 n] <]; 

0) SH SH "H SH SH ^H 



a; CI p; c3 



w cs w cs 



tH I— 1 I— 1 I— 1 ^ 



fiJ 1— 1 I— 1 I— 1 I— 1 ^ 



<U m SH SH HH ^H 



> S S o w I w 



g ts O ro 



0) 0) SH "H 



<U Cl 'H ^H 



<u B iH q: c! 
B flJ <u -H 

Pv Or (d 



Id) » .H 
I Tl W >— ' 



=H ft W "— ' 



- - IhOEriW-H -u 

=h3 S-HiH <U-H Cl'HH (d>H 

UUdJQJ <U!U<i;<U Or 

0) (UrHrH'OrHrHrHiH+JlM 
>>J2£l}~l£i£l£i^ (d 0) 



■ tJ U tJ "O "O 13 I 



rH ho bo ~- 



Tl (M W 
F 0) S E 
I ja ^H i-i 



M tH q 03 



I -H (d 

■— ' -H 

I Pi ft 



292 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



t: . v -c 2; 



: >. c 



11—1 flj fi) 



= V. ^ 



sf^ 



43 g Oi K ^^+ _ e p -H ■- !h In 

n; y r- rH -hT^^ -, , O Jh .-~. flj fi) 

t^ ^ _c ^ "s^ I — ^ " e ■— ■ ^H M 

_^ o --g ^ o + ""^ ^'"^ ^ " ''^ ^ I . . 

F! e3 T- !^ "t-i S II 1-2? 0) ,Q "H u u 

-^ -; c --^ ~ — " ^ ^ . . ^ o +1 



^ ^ + 





pj 





+^ ( 






















^r 


a; 


s 




fl 


-a 


Qi 


F i 










-tj 




n, 






n 






a 


OJ 

-C3 


Oi f 


hj 


n; 


i- 


+" 


0) 


^ 


'— ' 


( 


3 


ST 


.2 


1 ■ 


a 


& 


a 












M 


.S 




< 




c 


.2 


O; J 






-n 




































i> 


H 







+ 



-< T3 - <!) <U <U " 



;3 <U <U Q) + I 

O Id Id 3 

t3 iH iH rH CM (M 

rti ffl fi) e s 



>— ' >— I + ci ca- 



O CN Cl CS C3 



(D(iJUJ^-^- CI-l-'-Hi-J-l-'i— 'tJT-l u< 

hObO&O ■H[0n3O-fi3C3''— '"— 'uu I 

■H -H -H II II rH s B CO e W q S rtl ffl hJ 

<U <U Q) 

V) II II II II II II II II II II II 

II II II n p 

3 a 1-11-11-11— 11— 11-11-11-11-11— 11-1 

T-HCSCOrH-H O-rHO'-ICSCSrOrO'-ICSr) 

ESSftS i_ii_ii_ii_ii_ii_ii_ii_ii_ii_ii_i 

■H-H-H I I 1—11— 11— 11— 11— 11— 11— 11— 11— 11— 11— 1 

iHrHrHijij ooT-\T-\T-\c^T-ic^mcon 

iH iH rH rH rH 'H -H 'H -H -H -H -H -H 'H -H -H 

33333 +J+J-P+J+J+J+J+J+J+J+J 

00000 e^cit^ffi^ffifficit^ffi^ 

TjTiTiTj'a eseeeeseEss 



^ +j ■- 



T) 


u 


m 






j^ 


i_] 










































<W 


<W 




> 


C3 


Kl 


































3 


■H 






T) 


a. 


n! 


^ 


^ 






c 


M 
















M 




r/ 


































































































■p 


1 


+J 






'-' 






^ 
































































































































p 












II 


II 




TJ 




r^ r 










fa 






































a< 


u 




> 


> 


^— 


rti 


to 


"^ 


T! 


tb 





I HH o ■- g a, hoi-i o s -p 

Ipjl— I f^ .HW-^ll ■H-HLL.rHfH 

I>1— iS-'OW rH<UW+ m'— ' =H(d 

I 0■-^C^■ >C3' m 'H -^ ■ ■ 

!■— 1— iWlltd <ufi)lili— 1 [i3>cOq:(U 



I -H Oi b] rH Oi 

' j:3 O O 

; ft [n ■-' b- 



293 



+ 



M ^H 1—1 






iH Q) ft ft in ,fl 
I T3 e S 13 'H 



Cu O ■-' 



<U a. Or ft 



0) O OJ ^H 



a 


& 


o 












fT( 




3 








crt 


-a 


> 


— ; 


W 


iS o 


a 


S "^ 




o -^ 


f5 


o ^ 






0^ 




u 




^H 


ij -^ 


Hi 


V- rt 





^ cu 


C/) 








u 


>.s 








as 


0^ 


O J 



^ 



o 



ft +J fU 

g u +J 

V 0) Ch 

■P > -H 



S T) CI 
V ft <U 









■ ^ !h H £1 4J 



<U <U Q) 0) 



J3ppj3j3j3gp 



dciBdclcISc! 

■H -H -H -H 'H -H -H -H 






zn +3 



t5 (fl t5 "O lO Ch I 



J3 ,£3 ,Q <u <u ^ ^ 



3 13 13 T) T! 



P t3 w 



t3 -o s S o -a : 



294 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 




^ 3 



B .2 



O CO O ro 









Q) 0) S I — I B I — I 



^ M ^ ^ 

Or CLi CL< C^H 



^ M ^ ^ 



d c c C3 



<U <U I— 1 I— 1 



ClClTlT3^HhO^HhO 





to 




4J 


+j 


g 


° 


S 


nj 


i 


fl 




t; 














B 




B 




Oi 




1 


1 


e 


e 


e 




1 
















a> 




0) 






■:p !^ 








Q) 




ho 




ho 




^ 








bO 


ho 


A 








^ 


pd. 






s 












LO 










1 








rH 






5 cc 




<U 


<u 


j:i 


j:) 




o 


rH 


o 






CO 


hO 


bO 


d 


d 


fU 




fl) 


























■£ "^ 


o 










II 










to a 








II 














P"^-d 




<u 


<u 
















_S g 


T) 










o 
















o 


T-l 












B 


II 








e 










2i -a 










rH 


to 
















.£3 


rH 


rH 


u 




CJ 






"^ 'S 


£5 


d 


d 


Q) 


0) 


t3 




T3 





g g fij ho < 



d in In E 



■ --^ tH d >^ 



J3 £, 



B ^ 



^ 



3 

o 



rt ^ 



& .3 
00 u o 



+ 



W 



.- e. 



d TS 



■H ja 



(0 S T) T) 



295 



fti— 1 



<U q; 1—1 



1—1 CS 

i_i ja 

Or -H 



1/3 (fl 1—1 -a 



- 1-1 1-1 



0) o 
ho bn 



-1-11-1 Id 



CI p; oi 
<u o o 

ho fan b- 



1—1 rtl 

■H 

to CO 

CO <u 

O in 

- 

■H O 

O <U 









T3 


a 


s 












& 


^ 


cc 








5 




^ 


a; 


s 














-c 










s 




^ 














CO 


w 


3 








« * 




^ 




S 














II 



















1 


























/ 


:5 


"^ 


l4- 





a; 






/ 

















/ 


" 


.5 




"g 


"*^ 




ffl 


/ 


"Q 






^ 








/ 






=< 








^H <U 


/ 








"oD 




ffl d 


/ 


& 
g 





-5 


s 




iH 
■H 13 




O 


S 


l4- 









4J Cl 






cu 





p 


_ 




















« * 




















^ 


"2 


:^ 





_. 






t 


. 




"a; 


en 


1 


s 




m 


















o 


s 


05 


-d 


^ 


?S' 




iH 








3 


^ 






d 




CO 


■-3 






^ 










ni 


_aj 








T! 






_2 












v^ 




"bO 










\ 








-c 








\ 






3 






rfj 


QJ m 


\ 




.5 




iC 









N 


O 


cu 


i 




a; 





iH iH 


1 


' o 


cu 


j^ 


1 








"> 







-c 


S 


'S 


T) t3 




-5 


cu 


:^ 


a; 


CC 


"d 






_o 


jg 


:^ 


« 


+1' 


;=] 


QJ 




en 


§ 




(K 


§ 


^ 


^ 














1' 





















a; 


cu 


-d 
5j 















cn 






T) 




CO 




1 


^ 
^ 


c 


■H 
> 



I I 
■H ,Q 






bfl 










-' 


a 












q=i 










-^ 












:=i 


^ 


c; 


b?" 


n" 


>>? In? 














ifi 




fe 


LN 


1?^ 




a 




t-,^ a 






^1 














^1' 


13 


s 








+ 


-^ 










?^" 














3 






' — . 






















M^ 


a 











a 
o 

a 



296 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



X 
u 



-o I e 
II 



II 



■H O tH 



1—1 1—1 Jh flj ^^ m Jh 

th tb ,2 "H Or 0) ^ 



.2 

O* 

H 

bO 
fl 

> 
o 

O 



d 3 p =1 Id Id 



d d B c3 d d 

■H -H -H -H 'H -H 
fl: fl: tt tt fl: fl: 





q=i 


' ' 




-d 


^ 




^ 


= g +S: 




t> 


"-'b & 






















■^ 


CL, 




s 


- + S^ ^ 




1^ 


^"-, ^ 1. 






^ 


X 


3 


II 


fe 


ini 


fc. 


u 






a 












3 


> 




W 


J! 




■« 












> 


^-H 










Q> 






rfl 


O 




a 













U 


ini 















'77 


CN 


■i^ 


cs 


r? 


ro 






> 


> 


> 


> 


N 


IS) 






* 


* 


* 


* 


* 


* 


'^ 


c^ 


■^ 


■^^ 


cs 


cs 


1-1 


cs 


II 


^ 


II 


t3 


!=> 


=3 

II 


N 


II 


o 


^ 


o 


^ 


o 




o 




o 


o 


■;:; 


';^ 


cs 


cs 


r? 


m 


tb 


tb 


tb 


tb 


tb 


tb 


tb 


tb 



297 



- 


CO 


CS 


o 


N 


N 


'^ 


CS 


K 


CO 


ro 


CO 


■^ 


';!;' 


•77 




N 


N 
























vH O ■- ■- rO T-H CS O ■- CS -rH ■- ■- CO --1-1 
NNOONNNNONNOONON 



CNj .- o ■- ■- CS 1-1 ■- ro T-H CS O ■- 
NONOONNONNNNO 



Oi-ICSCOO'-ICSCOOi-ICSrOO'-ICSCO O'-HCSCOO'-ICSrOO'-ICSCOO 

OOOo'^'^'^'iHCSCSCSCSCOCOCOCO OOOo'in'^'^^CSCNCSCSCO 

0000000000000000 '^'^'^'^'^'T^'T^'^'^'^'^'T^'T^ 



298 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



<u ^ d 0) 



o ■— ' '—''—' ho ^ 

^ V oj 13 -o -a ^ 

+i ,^ -o Sh fH 0) CD 

'■^ r-\ S 5 S "' S 

-^ U OJ S E +J r#, 

X +^ * W) o o ^ 

2:i,.^^rH ^ hObOl-1 

rrj ^3 ^ Q) =a II'—' O 

WroQ-o -a I — II — II — I ui , 

^,q;i— I '^ mmmo i; 

Q!»ChCS '— ' (UdJtUB 

CU,i— ' m --TtTSTII rt 

.tj-drem.. Qj OOOT3 2 

^2'^-Sj o rHCSCB O 

^"n;0|j 1=1 <ut3t3t3 --^ 

JU +^ _ 1=1 II OJ u ^ II II TJ rt 

^ fTi 2i * 0) II II ■- <u +J I— I I .12 

iH-^.^ ho II hO=H-H O 

•3+^Q)T3 +J<U 'OflJ'— '+J X 

' "^-"dd) I — iJnho <ijrH(i)i — ii n; 

5iSC g:m Q'— ''Hoj L^T3rH o'— ' T3 op 

-^ 3r^ ^ -^ g^^'" Qj'^S'^^^i a; 

rr-^ Q)* OiSrHflJ hOIIAVtUfUS . 

^rn- bO OAQJbO -Ol.-^hOhOO Q, 

'^SdS'^ T1" tulUT! !B<U<UCST3t3 U n^ 

P5i"C iho Cuhoil m-OTSOII I S 

B^q; t1t3 O-OQJm ■H<u<u-mm^ ,^ 

_ □■ iH 0) O OJ ho -H j:3 I I -H -H -H o C/J 



rt o ^ 



^ -P +J Pn r^ M 

■H i-^ O 





S-n 


l^ 
















a 


K-^ 






l> 




-a 
















fl 


_Q 







a 


^^ 








-kJ 






9- 






ctf 






T! 






< 


O 










,£3 






ctf 






^ 


'^ 




ctf 






ffi 


a 





.2 
a 



.Q fi) ^H ^ B-H .Q 4J 



<U <]J Q) 0) 






^ ^H ----SI bHwrnho -H <u (i)[n 



-^ j:^ 



O 1=1 q T) 



ggpj3j3j3gppj3j3j3 '-V ^ rHCUfU^ 



t2 H ?^ — 



ho t3 fl hJ 0) 0) ,Q 



ttttttttttttttttttttttfl: 



O O g J O O J 



299 



T) H Cl ■-' 



dx' 



ho ,-. iH dJ 
A ^ bD U 



U 'H 0) bJ 



0) 0) + <U 



a 1=1 d n] d B 







































^ 






M 




^ 


Si 






■H 


^ 


■H 




■H 


■H 


c; 


=u 






^ 


'-' 


^ 


IJ 


^ 


^ 
























































iH 








































S 


S 


S 


II 


S: 


S 


II 




ti 


o 


O 


O 


to 


o 


o 


XI 


M 


\a 


■H 




■H 




■H 


■H 


































































ti) <u ^ ^ 



■ Tl <U t3 <U 



=H ho I 



.i—i+j .-<ijOi-l(M 



<U Q) 0) 13 "O ho 






t! t3 ho ( 



T3 S S <U 



. -a +J +J +J 






I— 1 I— 1 I— 1 o ■ 






<U <U 0) TJ "O "O 



flJQJdJSSClrHrHr 

SCCSSClrHrH, 



0) ho ho ho 



o o-P-P-PXlXlXlE 
Ch cI'h'H'H hOhOhOl— I 

<U Q) 0) tH tH tH p 

II II hJ hJ J 03 03 Pi g 



>— I tj o u u u o 

QJ +J +J +J +J -P +J 



S Cl 4J 4J +J 



a) xj +j +j 



tb tb tb iQ th tb 






§ s" 

^ O r- 

a OJ +^ 

a-r: i_ 

ri ^ aj 

"3 3 aj 
o O !- 









■H g ho <U 



8^ 



i^ 



a; 
-Q 

a; 
bC 






ri ^ +5 



"^ .i ^ 



bD i-i (0 Cl 



<U 3 d 0) 



d ^ ,g ,a 0) 



■^ ■? ^^ -5 



cr'ii d auTJ-O+J 3 3 



<U +J 0) ho 



S -p fi XI 






I w d w d 



T) t! Ti s : 



Tl "O tj Tl 



■d U 13 |3 13 13 
o o o 0) o o 

t ci B a 1=1 d d 



300 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



-a 

0) 



0. 
cS 

S 



S ri n3 B 





1 






hn 






















# 


1 


































-P 






























iH 




















iH 


rH 




T) 


T) 


iH 


rH 



--■ + S CI 



'oD iTi L 



ft Ci. E B 



r^'H^^hOl^'H^^&o 



O <u bo 0) ho I 



- - ho <U ho 



<U <U Q) +J 



d d ci ft 



us 

■ II hJ I 











0) 






ft 


rH 




II 


<u 




ho 


rH 


<u 




II 




p 












OJ 


hO 


hO 


ho 


ho 




rH 




ft 






ho 


m 




<U 








pi 


^ 




S 




0) 


s 


ho 












ft 








to 






■p 












ho 








g 








+J 


+J 


+J 












OJ 


4J 




JS 






rH 




fU 






0) 








■P 


j:j 


j:j 


j:3 


^ 






■H 




u 


u 




to 


ho 




a 


rH 




.J 


05 




bO E 




d 




ho 


ho 


bo 


ho 










+J 


to 






■H 


d 








rH 








tb 




rH 






■H 




■H 






P 




0) 




hJ 




a; 










rH 


rH 










■H 


.J 


oi 


p; 


oi 


oi 




iH 




+J 


e 








rH 




> 




+J 












E 




rH 


rH 


rH 


rH 








s 










^H 


rH 


> 




+J 




U 


u 








U, 


!h 


rH 


rH 


rH 


rH 










e 


e 




<u 




OJ 


<u 


^^ 


M 


0) 


pi 


p 






0) 


1 


















e 






p> 


U 




U 


^H 


ft 




d 








0) 




-o 


fH 


U 


u 


tJ 


o 


u 








e 


y 


OJ 


4J 


s 


■P 


ft 




d 




fU 


0) 




Tl 




T) 


fH 


■P 


+J 


4J 


+J 


+J 




B 


ho 


s 


bO 


e 


S 


d 


S 


oi 


1 


m 


M 


pi 


p 




d 


T3 


to 


<u 


V 


<u 


<u 


(U 


0) 




0) 




ho 


+j 


e 


^ 




■P 


.M 


J^ 


d 










II 




II 


■P 


+J 


+J 


+J 


+J 




ho 


p 




j:3 






fU 




d 




d 




rH 


rH 






II 




















■H 


+J 


bO 




rtl 


hO 


nj 










rH 






0) 






fH 


















j:j 


■H 


ho 












rH 










bo 


P) 


pi 






CO 










HH 


<-i 


ho 


oi 




fH 




M 




4J 




+j 








Tl 


ft 


ft 






E 












rH 




rH 


p> 


rtl 


^ 


nj 




j:j 


+J 




1 








to 


to 


fH 














kJ 




p; 








hO 


1 


■H 


hO 




ho 




OJ 






T3 


-o 






Q 










rH 




rH 




OJ 


rH 




r-\ 


<u 




Q) 




hO 


ho 






to 


to 






s 










rH 


O 


r-t 


O 


ij 


rH 


a; 


r-\ 


hJ 


p; 


hJ 


S 


to 


« 


cs 






1 


T) 
















P 




+J 














rH 




U 


iH 








jH 






> 








o 


u 




tJ 












rH 


rH 


rH 




fU 


0) 


o 


■H 






ft 




<u 










p 


<u 


+J 


0) 


OJ 




fU 


1 


<u 


<u 


Q) 


0) 


> 


> 








OJ 


ft 




> 








■H 




+J 




+J 


u 


■H 


u 


■H 


u 


tj 


O 


u 


to 


« 


■H 






Q 


rtl 




ffl 










0) 




q: 






fH 




in 


p 


4J 


+J 


+J 


1 






O 






|3 




■H 








C^ 


p 




+j 




m 


4J 


m 


■P 


to 




m 


m 


fU 


0) 


C^ 


U 


~— ■ 







0) 

o 
u 

be 



<U <U Q) 0) - - 
P +J +J P) 03 Oh 



CJ- w w csj 



r„ •§ 



) "—I ^^ 



301 






0) 
O 

a 



<]; 4J T3 ft 



Ph a. "d .£3 






t3 s 



<]J bo ^H ^H 



o 

ft 



O 



s ri a -p 



■H cl -a ■- Id 



■P <U Q) tj 
<U (h Ci 0) 
iH So ho C3 , 



O bo 0) OJ 















tin 


hn 


hn 






























































a 








































































O. 










<u 


Q) 
















■p 



flj fij T3 13 -O ■ 

rH rH C 13 S '&. ■ 



d C C CIh 



<U Q) +J +J -P 



u u P a 



<U Q) 0) tH 



fi) e s e e 



^H fi) ho ho ho ho / 



tH'H'H'H'H hOhOhOhom 
+J a) 0) Qj <u .H 'H 'H tH 'H 
QJrHrHrHiH ^^ U U U >■ 



OQJUUUUUUU 



ho WW 



13 S w Q, 



5; ^ =1 



rH rH (0 

rH rH -H 
11 Q) U 



rH ^H 
.. T) -O 



ho <U Tl 13 S S S 



^ ^ P £ ■ 



0) t3 <u tj <u <u ■ 



rH ^^ tH q 



0) V <u <u 



: T3 T) T! fl CI CI |3 

a s cl cl'— ''^'-^'— ' 



fi)!u<u<u<u'a<UT3a) 



B d d d 



ooooQ)<u<u(i)p;3 



d d d d 



0) t3 <U T! 



<U M ^ ^ ^ 



,i>j ,y ^ Jll 



0) V P Jh 

"t ho HH ho 

A OJ -H 

I rH i-l 



fl)!U<U<UOOOOT3T5'0'0 

£i£i£i£is3sisifi a d d d 



302 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 






ci 


a. 


ci. 


CQ 


u 


pa 



■ m ho 

r-\ U 



O QJ I— I T3 I 

q: ho O o 

ho T) '— ' C 



cs pa ■-^ 

Cl -a! =H 
Or QJ -H 



<U CS O tJ CS A 



hn 
















































































O. 


d 


cu 


cu 


C3 



Or V 0) C^H U 



Or U II 
II Q) U 



I "O ^^ Q) ft ■- 
o cr (d m dJ 



O 

D. 

a; 

a; 
'a; 
Q 



pa pa 



- <i! < cs 

I CQ d <U d 






rH <U <U Q) 

rH "O ho Tl +J 

oj o t! o q 

u s w s: -H 



303 



?? 



1—1 '■•a 



M M M M M 



T3 














- 














































Q) 




r-\ 


r-\ 




p 












(U 




T3 t3 








^ ^ 



-o cl ■- 0) 



ti Oi <v a 



* td ■- <u 



Cr' T! rH ho T3 



I— 1 I— 1 I— 1 1— 1 O. 



ft ft Ph O. +^ 



SH SH ho bO ■— ' 



fi <U 



(M ro 1—1 



CS I— 1 I— 1 r 



ft ft ft ft ! 



ft tb 



<U ft ~— ■ 



+J fl <« tj 






II ho r 



CQ U U U 

< < CQ pq tj pa u 
(UdjQjuuuu 

u 

oauupqtjou^ 



e s s ft ^ 



tH ho ho ho ho - 






^H ^^ tH ^H TJ 



tH w w w 



ho ho ho iH iH rH rH 
13 t5 "O <U <U 0) fl) 



rS <U -H 0) 



a^ 






304 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



tJ O Q Q 



■-■■ ^ <UQfi3o<CQ 



- " -U ^ 1—1 ~-.-ou 

OQ<p| ^ tJQQ<C|q 

"c'^'— ■ t!q _5 ti a ti a ■-: ^ 

I) O O T3 rH rH 

wwwhp drt O -^ •-• -^ -^ r-\ r-\ 

rtcso "r-i cQ rifirtcioo 

lll+J I— ll-l < llll+J+J 

eesi oi— ' oj eseeii 

OOOOJ 1— l(l),-N OOOOQJO) 



an P, <U O I 



C1hPh£1iFh CLjCLhC^Fh 



m 


HH 


SH 




T! 




K 




=H 


=H 


HH 


=H 








<u 


q: 






1 


1=1 




Ci 


i-i 












ci 


a 




bo 


bo 


Q) 


0) 


fU 




d 


A 


Q 




rH 


rH 


rH 


rH 












bO 


hO 


ho 


B 




1 


S 




rH 


rH 


rH 


rH 


e 


e 


ro 






Tl 


T3 


t3 






pa 






















pa 


<"l 


""l 


1 




pa 




O 


^ 


"l 


"l 


"l 


"l 


HH 




O 


" 




J^ 


^ 


^ 




q: 




■H 


CQ 


i4 


M 


M 


Jd 












fi) 


(0 


to 


M 










«3 


fi) 


(d 


(0 


J^ 


^ 








Q) 


0) 


fU 








ai 


OJ 


<U 


Q) 


0) 


<U 


O 




Pi 




■H 


U 


U 


^H 








o 




^H 




u 








o 






£i 


J2 


A 


ji 


■H 


<v 


tb 




,£: 


j:i 


£i 


,£: 


jH 


A 


tb 







dn &, Or r— 1 

e e e p, 



JhJhQ) <U r-ihOSHi— ibO=H 

bO bO bO ■- ■- .... ho .. .. .. .. II ^ .H dJ O 'H <U 

■H-HTli— 11— 1 r-ir-i "Oi— ii— i r-ii— i II '—'^H'H ■— i^HrH 



Q) O (M 



U Q Q 




n 








0) <U 


OJ 


<D 



OOOtH in IDOJ <U<U 

1 — 11 — ^1 — ^opaQs-'paQ ocQQs-'paQ pan ii i— in n 

dn &, &, Cl < U <U < O Cl < U <U < U < II II II II U II II II II 

BSS'— '(Ufu m ta <v ^-r^ -^^ ^ n> mojo) <upa 't-'CQ tuQ s-'Q 

!B<U<U'H rH (USH r-t <<CQ (U<pa< UUCa (UUQU 



T3 
O 

a 



305 



cS 

-a 
a 

3 

o 

J2 
CS 
0) 

Q 






Tl 


Tl 




































iH 










4J 


S 


bJ 


U 



Cl bO C 0) 



■a! <U pa 0) 



td + SH iH 



<U Q) <U Q) ■ 



<U <U <U (I) 
ho CO bO CO 



S^ ho ho bo ^ 



"3 <u fi) 0)1 — II — II — ^'Hi — II — II — I' 



iH t|_l '"' HH "^ "O "O 

<u iQ (u ni Ch Ch d 









hoseeeesee! 

hOhObObObOhOhOhO- 



<U +J Q) +J ■ 



e ^^ e tH 



bo •—' ho ~— ■ 



(I) *_. ■^ ■^ ■_--_. ^_. 



■H -H 



<U V 0) V 

d ci B C3 

(0 (d £fl tfl 

d 3 p =1 

t3 t3 13 t5 

io id £fl ro 

■H -H -H -H 

t3 t3 13 t5 



^^ tH ^H ^H 



is 13 13 13 



ho ho ho ho 



S-- <U 



0) ^ 0) ^ 



ho HH ho HH 
0) 13 -H 13 -H 
ho V V 



■a 'a 'a 



^ ^ Jd J^ rilj rill 



306 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 






Q, C rt +J QJ C 

^ -H .H Q ho 

n; Q).. fl tuhOQJ t3 

r^ .i: I 0) -H I tj I t3 , . ^^., , . .. _ 

UC rHhO_ CUQJ+J < rn^'r^ ICQ-U&pflj 

bC .aajQ) o-PrH ■— ' '^>> ■hc3u(bqj't3 

_ o*fl J -Ha, m _s-H_: rH***lU-- 



hn 


^ ^ 


T3 




n; rt 




o 


fi 




cfl 


fi ^ 






4J 


rt - 








a; J^ 






s u td pa s -H 



CS (M 1—1 



-WW ho 

- ^ d u V 

_ > > ^ 



1-1 I-l 1— 1 -H fl 



fij Tl T3 t3 -H 
rH 1=1 B S ft ^ 



Z^ w w ho I I 

^ T! Tl <U Q) 0) 







+j 


m 






< 




























































=H 


m 


cl 


3 


S 




''i 


^ 


II 


































































t3 


.J 


o 


J;;* 




^ 












■H 




















q: 


(V 




1 


1 


1 


H 




<i; 



^^ ho ho ho ho - 



^^ w w w 



,£:j:ij:jCCV[ritLH ClB ^^j:jth 



1 " 






ho bo bo ,- 



307 



ft i_i i_i i_i d, 



<U <U 0) +J 



CLh C3 ti 






■^ ■—> tU (]i 



0) -H 



bObObOhOhOhOhOhO — r-t r-\ 



a a a a 



rHCCSMwww www 

iH c e s -p 



I— I I— 1 I— I pq rt a s 



tJ "O "O (0 



CI CI C3 ^H =1 



d d d iH 



■J u 


" 


B 


" 


" 


" 


S m 








■H 


4J 


























D O 








































































1 1 


A 
CQ 


CQ 


O 


A 


O 


U 


■§ 


■g 




■H 


Vl 



O Q Q Q Q 



hO > 
A flJ 



ho ho bO bO > 



O U U U O tJ tH 



Tl T3 rH ■--■ <U 



> > 



-d ^ 



^s'a 



05 d ■-' u- 



q; (I) w o O O 
T! Tl Oi s d d 



Q S-- CQ Q 



308 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



g II S II g 

II =H T3 "H ^ 

II Q) O (U _j 

^ s i, s tq 



■HA a 

— S u 

g " ■ a 



OJ +J ho ~ o 

-O -H -H S 2 







ho 


ho 






q: 




hO 


<u u 


OJ 




t! 


Tl 


Q 


T) 




A 


Tf 




ho 




<U 


Q) 


U 






1 






T) 








s 


d 




0) 


A 


1 fU 


OJ 














hO 




<U ho 


1 




4J 


+J 






ho 


Tl 


d 


ho T) 










u 




T! 


<V 


V 


-a dJ 


■P 




<u 


Q) 


Q 


ho 




A 


ho 




1 




T! 


Tl 


O 


T) 




1 


Tf 












S 


<U 




d 


V 


1 d 


T) 




d 


Ci 






d 






d S 










H 






ho 




<U ho 


1=1 




e 


e 


■a! 


d 


ho 


Tl 


=a 


ho T) 


1 












t! 


<v 


d^ 


-a dJ 


Q 




^^ 


u 


a. 


ho 














=H 


m 


o 


T) 




0) 


CQ 


w "^ 








1 


o 












SH 


pa 


M 


J^ 


hJ 




=H 


r-\ 




■H rH 


1 












■H 


<v 




■H dJ 


,y 








u 














■^ 


si 


j:3 


^ 


■H 




r^ 


■H 





Tl ■- ■- Q "O O 

a "-■ ^ d d o 



-=; J .3 



1— 1 0) < I— 1 I— 1 2 

O J3 ^ O T-H ^ 

Q) TJ II OJ <U P 

' Tl T) "O "O IT^ 

, o (0 u o o rj 

G ^ d d ^-' 



ho ■- 

T) d 



O +J ^ ■— ■ 



i: CQ Q Q Q Q 

<1! U U U O 

■-^ £1 J3 ^ ^ ,Q 



0) fU Q <U 



■a U Q TJ 

- O CQ U O 

Q d d d d 



fij (fl w ^ ^ I 













T) 


Tl 




Tl 








'T^ 






d 


d 


d 


n 
















































UJ 



d <U • 



fHTiTiTiTi idddd 

idddd rHEsee 









i-\ 






















ho 


hu 




n 


u 




^^ 


^ 


'^ 


^ 


■H 


'H 


'"i 


■H 








1 




■H 




m 


m 




11 


H 


H 


H 








■a 




























11 


M 


M 


M 














d 


d 




0) 










HH 


XI 


Si 


XI 


XI 


XI 






rS 




^ 


Si 


j:j 


jd 


■H 













" 


w 


SbS 


hO 


" 


" 


W 


ho SH 


'l 


" 


" 


W 




0) 


rH 


in 


O 


■^ 


M 


T) 


T) 


Tl 


Tl 




K 


T) 


0) 








E 


Tl 


0) 


Q 






E 






1 








Q 














V 






O 






(U 


rH 


U 


o 








T) 


r-\ 


rH 


<u 


Q) 


s 


d 


d 


d 


d 


0) 


i 


1 
T) 


iH 


rH 


Q) 


<u 


g 


Tl 


l-\ 


fU 


0) 


<u 


g 


^ 


■3 


rH 


<U 


T3 


Tl 


o 


a' 


s 


B 


e 


Tl 




T) 






Tl 


T) 




Tl 


rH 




T) 


Tl 












d 


d 














o 


03 










o 












o 




II 










■H 


}-l 


^H 




^H 


d 










d 


d 








U 


d 


d 




pa 














SH 


SH 


HH 


■H 










A 






■H 


II 














U 


U 


u 


tj 


o 


C^ 








































CQ 


CQ 


CQ 


pa 


pa 


o 


^ 


rill 


,i»1 


.M 


pa 


(^ 


< 






< 




cc; 


Q 


Q 




Q 


Q 


cc; 














tb 


O 








< 


o 


Q 


Q 


Q 


Q 


Q 


o 


O 


U 


SH 


U 


O 


o 


HH 
























tb 












bH 












bH 














rS 


Xi 


XI 


X 


X 



309 



I CS bo 

i ^ § 



ho ho ho '~ 



iH ^H ^^ bO 
' Q) (0 (0 U 



■6 fi) <1J <U ■— ' 
o Q) ^H ^^ X 
Cl IH rtl (0 < 



I Tl S Bo' 



O Q) E E Q) 



rH hO 3 ■ 

O W U 
CS CS -H ■ 



<i; <U bo 



-P -P S S 






+j S: CM oi 



+ -SgMJfiJfflfiJbO 
■H I I tU I Q) <U <U tH 

■-'■-'[^J[0hOhJ^^^^^^(d 



iS iiO 






O iC 

o o S 






ho -a T! -H 



ho -H O ^-^ 
' T! ■-' [n iJ 

O 0) > 



a; 








. , 


6 










s 


;^j 




T! 


Tl 




































ri 




\£ 






























Q) 




cc 


.M 


^ 


r-\ 


^ 




o 


■H 





^ 0} m ■- 



O ^^ 4J fij ' 



d M 1) >^ 



T3 
O 



•2 g 

b "9 



310 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



Of 





«] 


^ +3 




fl 


^ S 












t B 








u 






fl 


-^ o; 








01 


03 






-kJ 


.9 B 


a 


S 


o "^ 


-J 


1-1 


^S 







D. 










,.•■ 


CV 




CIJ 














D-, 


H 


^ 










q; 






r-i 


^J. 



:s I,- 



1 s 



s 5 



II 



s s ^ s 



C C3 C3 t^ 



S <1 






II 


o 


o 


rv 


0. 


u. 


c 


+ 


+ 


+ 


o 


(> 


^1 


u. 


CL, 


o- 





MO- 






J 
a 



T) rH -H 



d w u ft 



) S TS 

o OJ 
ho OJ 



U -H 4J +J 
■H fij Q) 0) 



S Cl -H Q) 0) 



■HE (0 



S T3 






311 



o a, □■ o- 



_i + 







o 


1 


■2 -2 

n3 flj 








^iJ. 


V V 






cr 


1 




o 




* 


* 


# 


■p 


M 


a. 


CIh 







+3 o 


-d 
















s 


'S p 


^ 


"OC O 




hJ 


.3 "S 










<u 




^n 


3 




-d 


g 


^ O 




fi 


!? ^ 


ID 






bc 


S "ri 





H 






o-lcy 



?! 



0, O 



0- o 



1, O^ 



VI \ 

:^VI vr 



-cyC-; 



1, o- 





o 




eye, '3; 










II 

0^ IC? 


I," 



(1) 


Hi 




ii 














































M 


p 




M ■ 


u 


yn 


n 




^ 


a 



312 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



I— I Q) 



fl ^ 



■H ^H OJ ho 



hJ q: Tl 0) 






iH (d S -H in 



Id ^^ "O CS 



01 
bJO 

o 



in +J o m 0) -H 
in (0 r-\ (d J3 in , 
<u g m ja +j E-" 



<U<U(l)(l)!B<U<U<U(l)fl)!B<U<U!U<U 



j3 j3 p p j3 j3 j3 



3 P =1 Id 



ClClCiBC3ClClSC!BC3ClCltiCl 



fl: fl: B: B: : 



a fl: B: fl: fl: 



^ T) ■— ■ U tJ 3 



&.S 



C3 --■ XI 
o =1 

■H +J O 



fl) QJ <U <U <U 



'n'O'O'TjTj'O hO.Q 



--.>>>>>>, 






f^ 








































^ 












o 


-a 






a; 


a: 


rH 


ft T3 


















H 


H 




T) +J 



ft ^H +J 



in d d V , 



'bb 



o 



o H (d isi 



Id ^ XI ^ 



<U <U 0) 0) 
"O t3 t3 13 

3 3 3 3 



3 3 3 3 

■H -H -H -H 
fl: fl: fl: tt 



a; 
> 



c5 .a "5 

^ rt ^ p: 



4J (U +J ^H 



oj o; q: 3 1 ft 




a; 


3 3 3 tH rH ■ 


i-\ 


^ 


3 3 3 (d rH V 




o o o ft 0) T) 


> 


cd 






u 




EC 


^ 


B e B Ti --■ +j 


1 


O O O rH 0) A 


B 






< 


ho bo bo +J -H rH 


^ 








1 1 1 1 -H a, 




Qi 


rH rH rH rH S U 


(d 





rH rH rH rH -H 




oj o; q: 0) ^H II 




fri 


u u u u ft 




www 1 M 


(d 








o; 


+J QJ 

^ 1 T) 


T3 


bc 


w ^ ■"" 


rH 


TJ 


> +J +J 


■H 


H 



hO www 



I > fU rH 

I " Id -p 
0) Csl M 



S tH ft ft 



& 1^ -y -^ 



J tj CM fc 



d 0) 0) 1—1 



c ^ 
o; O 



313 



% rt e s Ph 



fc 'lz. 



S-- O [IH 



m a. o 






=1 o o 






O O J 




rri 




















*■ H M 






^ s pa 







M.2 

^3 



f^ -SS 



j 3 0) fu OJ +J 

I Oi T3 T3 "O -H 

i O O O O rH 

) tb C Ch Ch CLh 



+J > w w w 



^H b- I >-■ 



rH o 0) q s 



C (0 



314 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



So > 



- m to t3 <u ■ 

+J 0) -H in , 



■p 


iH 








■H '.d 












+J ■- 
























+j ■- 
































1=1 











■H i: 










o O 


j:3 -^ 


































































>. - 




>v - 


l>^ 




>. 


>> II 




>-, 


>, 


>, 






a. o 


ft - 


ft 


ft 




ft II 




















































































■p 


+J 






i?. 












+J cs 


+J ■— ' 












































































































«3 






^ 


■H >— ' 


tH +J 


hO 'H 


m 


•-\ 


ft rH 


u ft 


+J 



<ucla}Bvclvi=l<ud(U'H 



d c3 c3 d 



c3 d c3 c3 d d d 



oj ffl rt rt 'H <u 1=1 
S dJ "O d ro 0) 

rt ^ rH -H rH d rH 



a; i-i M ft w 



d d d d d d d 

■H 'H -H -H 'H -H -H 

^H in ^H in ^H ^^ tH 

ft ft ft ft ft ft ft 



rt nj 








c; q; 








q=l i^ 




fcO cu 




rt _a 




S ~^ 




fcO ^ 












rt q; 




'c y 


^ 


\>- ^ 
















5 o 

















ft ^ 



ci; 


c> ^ ^ 


fl 


& nj :^ 






J 


c; O -!:3 






Tl 






rt^ o 



§s- 



o 





» 






M-l 


+J 






d 




„ 








rH 




' 


',! 




+J 










f,n 








o 




























































































































-P 
















+J 






■H 


























■H 






































































-P 




+J 
















































































































































































































& 






































h 




Tl 






ft 


■iJ 




ft 










U 


^ 




























fn 




la 




N 












































■H 


+J 












































































































fn 








































































































UJ 


ft 


4J 




to 


a 


= 




m 


m 


m 


7n 




m 


m 


m 


m 


+j 


■H 




+j 






(d 














































































































































































































































iH 


IH 


M 












■H 


























S QJ 













315 



ho ^H ^^ 
in <U <U 



OJ <U <U 

e ft & 



<U <U Q) tH j-i 



■H o 

e 

•V 0) 



I -a .a 0) 0) I 



&. e 13 S rH 



<U <U V 0) 



ft ft ft ft ft ft ft 



^H ^^ tH ^H ^H 



T) T! > > 



(dBOJQJTj'OflJfiJ 






J3 J3 J3 J3 J3 j3 J3 
<U (D tU <i; Qj dJ d) 

E s B e e e s 



- 


- 


- 


- 


- 


- 


- 




^ 


'^ 


c- 


'^ 


^ 


^ 


^ 


^ 


'^ 
























































































































































































+J 


P> 




























































In 




ffl 


B 






1 








K 


Uh 












































































































HH 


fa 




-'-' 


> 


> 


r 


1 


J3 


_!D 


_<D 


? 


■p 




_fi3 


fa 


='^ 


n> 


l" 


l" 


n' 


d" 


n" 


w 


d" 


n" 


q" 


d" 


n" 


i" 


l" 


n' 


d" 


13 


;3 


d 


3 


P 


=1 


fl 






=1 


;3 


=1 


fl 


;3 


d 


3 


P 










































































> 










!i 














> 














































































































































4-> 


4-" 


-p 


-p 


■M 


■p 


■p 




■P 


■p 


{^ 


■P 


{^ 


p 


-p 


-p 


■P 


- 




=H 






SH 


HH 


^ 


- 




■H 




HH 




=H 








■H 




■H 


■H 






■H 




■H 




■H 




■H 




■H 


■H 




<U 


<u 


(U 


0) 


OJ 


OJ 




OJ 


<U 


fU 


OJ 


<U 


q: 


(U 


0) 


HH 


iH 


iH 


rH 


rH 


^ 


iH 




SH 


rH 


rH 


i-\ 


rH 


rH 


r-\ 


rH 


rH 





































QJ Cl Q) (0 P 






01 



<U d <U C 
P P 3 S 



3 SH 



3 


"5 .2 


ft 


"i S^ 


1— 1 




T! 


rt ^ 


ctf 


rt a 




c § 




ft o 



P, ^H a, tH Oh -H Oh -H 



■H ^H -H tH -H 



■H P% 



316 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



Or -P 



g 

z 



5^ CJ 



lU -^ hp- 



= (0 = tU ■ 'H OiUS =Q)=<U iH 

■—■£■— ''HO+J rtOi ■-^pJ'^=Hi-l+J 

■HmtflS OJ'H'HfiJB 

+J — +J m A 'H —-—■[« +J — -P m A -H 

Cirt h SHrHClCl ^H 

■H ■-^ -H --■ Ph ■-' -H OJ -H ■-- 'H ■-^ ft 

^H =H tH SH ' ■ ....... 



rS O, -H d, ■, 









P 


















d 


d 


d 


ti 












d 




ti 


>-, 




i>^ 






















3 




ti 


















ti 


cs 




CN 



kJ 


fa 


kJ 


- 










U 




o 


Ti 


















>, 


d 


i>^ 


T) 



















0) w 

ft d 



d d 
Ph a. 



U t3 



317 



TS 


^ 


S 


> 


■H 












u 






■H 


_■- fl 





g 


o 


'^H a. 




"S 


.2 


» 


II II '" 


n 


Sc' 


& 




1— 1 Tl 'in 




bbf 


fl 


CO -H CO 


■^ 




+J 


^ M ^ 










<U hO 0) 


'3 


-^ 


J § 


-^' 


T! fl 1=1 


1— 1 




fl 


e * iH 








V 






"3 


&_^ 


^H 


^ tLJ ^ 



ho S 
B O 



u 0) hb 0) th hb 

0) fl fl fl fl fl 



^ ,_. t^ ,_. , 



; -o Qj <u Ti 



in ^H Q) 0) 



o 



> 

o 
O 



0) 

I 



be 



^ M 



CD w 



fl ffl ^^ S --■ 



J3 Jh fl ^ 

3 to tH S ^ 

o j:3 tH 3 'H 

T3 u 0) fl -H 



318 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



O ^ 



- TO +^ W SH (0 -H 

OO '"' --1311 ,.™" 



S e ■- ■■ HH "^ ■- 'cl ■- S^ 

l+J+J(T]rHS+J(d =T-I *y? 

+J+J<U;3-H-HQ) WW |_L| 



d 0) 

3 u 



319 



s s 



ti a a ti 



O 1-1 CN ro 
OJ V V <u 

> > > > 



■- i-i i-i u 



g "O t3 tJ 



ti d d ci 



B ^ 



a u 1-1 1-1 L. 



Ph c^H c^ a< 



|3 S 3 B 



o o 



HH £1| Or V 



> > !> > 



"O t5 "O "O 
d § § d 



> > > > 



d d d d 



u a iH 



O CU r- 





f^^ 


p 1^ 




iT^ N 










rt 


T3 i^ 




c 


nj ■-- 






a; ."t^ 














rt 


q; - 




c 


c3 t^ 






M ^ 




t 


O 1 




s. 


■3 2 












^ "S 




g 








^ ^ 






o ^ 




-^ 


CJ ^ 




rt 








c3 -Zl mJ 




rt 






o "^ ■- 






_Q • r; 




rt 


_ ^J -- 




g 


S|| 








q 








o ■ .- ^ 




rt 


J rt p. 




C 


3 o fe" 








ft 


K 


-^ ^ ^ 


p 


c; 


~^ .^ "te 


i 


~*^ 




a 


ig 








3 


o 






M ? -2 


bO 


-§' 




.s 


fcO 




-M 




.2 ^ o 


s 


rt 


_M +^ ;>) 



CTJ 



o P=l -d £ 



(13 <U O 



T) T! d ^^ I 



+J 0) OJ QJ 



tb fH 13 t5 "O ■ 



m rt a. 5^ 

- .S J c. c, • 

-— ■ QJ 4J +j 

MH j:3 d d 



d o o a, e 



O 1-1 (M CO cl d 



+J Q) 0) 0) 



■H M tH ^H 



d a. CM clh cih B S 



<u M ^ ^ 



T) 










M 


d 








H 
















d 


d 


> 


u. 


■H 














































d 


d 














































+j 


+j 


+j 


+J 




T-l 














P 


p 


p 


p 




rH 
















^H 


^H 


in 


III 


fil 


CIh 


a. 


CIh 


Oh 


s 


Ls 



> > > > > 



O O O O O O M 

d d d d d d j:i 



' in ^H ^H in ^H M 

(^ (^ C^ (^ (T3 (l3 

; !> > > > > > 

! M 

' 0) <u 0) <u <u <u (d 

I d d d d d d .CI 



320 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



3 
O 



a h 



?8 



II 



Oh 



^ fi) s 



fi) 3 ^ 



B V 



E- 






>> 

O 

a 



<U <U Q) 0) 
"O t3 t3 TJ 
Id d 3 3 



d d 3 c 

■H -H -H -H 
fl: fl: fl: tt 



ST 



■H -H C 



iH fi) 3 ^ 






O M 13 ^ 



H — +J -H 
■-^ ■-' ft ft 



f: + 
1^ + 



-P j:3 ^ 



+J fi) * 0) OJ 



t, ^ 



•5' ^|. 



+J ^ w 



.H -H 3 



f s 






321 



y « i 



? VI 



[-1^ 

X 



B -^ 



322 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



Oh 






^ 



hlh^ 



O — 
^ O 

3 ^ 



b 

^ 



O H 



rH (0 



l;5'|l>? + 



■^l"^ II S' 



> ko a: 
II "* II 

IN) -e 



323 



Q, lJ 



o 


o 


fri 


o. 












Csl 


Kl 


> 


+ 




^ 


^ 


1 


m 


•^ 










t 


















^ 


!=> 


=3 


■-' 


t^^ 



Csl IN] <U N 



o o o 

ISl Csl tsl 



m 


II 


m 


Csl 


tsl 




,_, 




II 
























ft Csl 


o 


tH 


CN 






tH CS CO 

> > > 



+ 



^ LJ- 



N 1, 



S '^ + 



+ 



^ 






<U <U 0) 0) 
"O t3 T3 13 

Id d 3 p 



d d ci B 

■H -H -H -H 
fl: fl: fl: tt 



t 



■ O O ' 

■ > > ; 



O 1-1 (M ro 






M -H O 



324 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



1 (-^ 


.^ 


+ 


O O ^ ?J 


IM 


—i 1 


O ^ O 3 


+ 


II 


- s s^h 


II 


F^lh 


, , 


??|h 


|,_| 




^ 1 





o 


o o 


-1^. 


o o 


1 


o -| r, 


-]f 




rl 



<\ 4 



lO 




<1 


+^ 














;o 




rT\ 


p: ^ 



■-I— 1 I— II— 1 I— iCSi— II— 1 

, .. .. O ■- ■- O 1-1 ■- ■- -H i_] O 1-1 ■ 

CMi— 1 i__]i_i I— I [^ I— I I— I 



O-rHOlCOOTHCSCOO-rHOlrOO'-ICSrO 






> 



> 


w 


5 














bU 






























Tt 


















hn 


JJ 


jj 




3 


s 



H~; 



11^ 



.!i o 






^1" 3 = ^ 

I I "li- 
^ H 



^ 



I I J- 



II ^ ^m+J(Ug CO T-l Oi O rOi-ICSO 

I I I O Tl U rH +J •-{ IS] |sg isi Csi .-._............ Csl Cs] Csl |sg 



M 


-£: 


a 


<1^ 


4 


OJ 






-a 






^ 






















lO 




o 



t^ ^ 



fi) 0) M 4-1 



M 



CSCSOlOl'— II— I >— ' >— ' -H' 

'H'H'H'HISItvlOOISlOISlO'H' 



--^Q th oi-ioiroO'-icscnoTHiMroO'-icsir) 

1—1 "S E I— II— II— II— ii-ni— II— II— II— II— II— II— II— ii-ni— II— 1 

cnoo <th oooO'-i'-i'-ii-iiMCNiMOirorocoir) 

t-g-H NNNNNNNNNNNNNNNN 

II Ci: I I I I I I I I I I I I I I I I 

OCN tHCN 3Btl|S|3S3gtl|Sg|S|3|33B 



325 



a 
.2 

u 



T3 1-1 w 






O 









ES^ 



ro T-H CS O 

I— 1 N N N N 



CS O O O 



O 1-1 (M ro O T-H CS 


IT) O tH CN 


ro O 1-1 CS IT) 




O O O O -H T-H T-H 


1-1 (M CN CN 


(M CO ro CO IT) 



S Oi bO fan 






326 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



.- T) ^^ Tl U 



<i; ho Q) ho 



ho ho ■"■ O ■-' O 



I ■^^ Qj ho <i; ho 



£, ti ^ <-! ■■ 



ti a 
a. s CM s 



<U <U Q) 0) 
"O t3 t3 13 

d d ci B 



=1 S d ci 



c3 c3 d d 



d +J iQ ^ 





























a 














a 








^5 


^ 


^ 


2 










































































































iH 


iH 


rH 










iH 


iH 


rH 




















r) 












V 


fe^ 


w 


" 


" 


■"■ 





fH e s ^ 



d d -p 3 



S: w 

1—1 C3- 

1—1 w 



Q) 1— 1 pi 


























rH 




d 










































t>^ 
























ft U 






d 






















o 


UJ 









Tl ^ T) tS 



P pl i_i i_i 



■-; ft e 1-1 1-1 



a. a 

'H II 
3 0) 



s -a 



327 



M b] 

a; s 
<« o 



d, =H ft I 



■a Q iH T) V Ci 



5-2 ^^ 0) ^H 



fl Id fan CS 



fH Q Pu SH 



113 t3 a. o m 



^ h e -p 



I ■— ■ m — (d - 



P +J h Id M 3 ^H 

u t>:i Ph a. Or ft clh 



&.oSM(dMSS 
>j o fl = <u rt 0) I I 
+JO \ ■^ ti ■^^ a X X 



113 U Q) Cl =H 



. 5 ^ 



<u -::^ 



W CO ft 



>j J e 0) ts 1 

M B -H U O 4 
[H fe +J HH ft I 



j3 J3 j:3 ho m =H 






ClClCCC3c3ClCl 
■H -H -H -H -H -H 'H -H 











tin 


1^ 




T> 
















1} 


Tf 







c 


(.J 


















* 




* 


* 










in 


U 


u 




J3 


T) 




IT) 


>-l 


H-l 


ti 


p 



■ [H tLH +J T3 ' 



-^ w 



. ■^ cu 



1) ^ 

SI 1 


> 


> 


M 




^ 


^ 


* 


■ e 


E 


E 


S 










-S -H 




■H 












T) 


T) 


T! 


Tl 




j:j 


fi 


JS 


D a 


d 


d 


d 


H 


^^ 


u 


u 


SI O 














1 


' C3 


d 


d 


d 


E 


E 


e 


e 


-s 








■H 




■H 


■H 


* 




» 




T) 


T! 


Tl 


T) 


1) 








d 


d 


d 


d 


SI 1—1 
















. o 




cs 


2 


d 


d 


ci 


q 


























» 






* 


1) > 


> 


> 


> 












■H 




■H 










■ +J 




+J 


+J 


o 




cs 


ro 


-S -H 




■H 


■H 










Q 


E 


E 


s 


iH 


iH 


r-\ 


rH 


D -H 




■H 










rH 


SI ^H 


in 




U 


113 


113 


a 


(0 


■ ft 

-; ■ 


ft 


ft 


ft 


S 


3 


B 


s 


U 


" 


^H 


M 


^H 


" 


u 


u "^ 


m 


113 




iH 




113 




£0 t: 


- > 


> 


> 


> 


> 


> 


> 


> X 














A 




n OJ 


<u 


<u 


Q) 


<u 


<u 


0) 


0) a: 



'ddddddddd 



0) -H 



328 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



33^ 

C ^ 



C 13 



■H 


O -H 


CM +J +J 


^^ 


^ 


■fl 


1 


■H 


Ih 


iH ^^ 


+J o o 




rH 


T3 


!h 


a 


o. & 


3 rH rH 




(d 






Oh 


SH 


+J =H 


O CL< CIh 






a 


3 


■H 




IJ 


■— ' +J +J 




II 




03 








HH S =1 








o 




^ 


^ 




q: 


J^ 




bH 


ro 






C3 w w 


tj 




0) 






o 


■H O 


■H HH SH 






T3 




O 




+J 


tH +J +J 




+j 




O 




■H 


Cl -H 


CM C C3 






B 


O 


■H 




■H ■-^ 










>J 




C^ 


U Pi 


tH ^H 






-i^ 




C^ 


o 


a. o 


CM CIh 




(d 


u 


^ 


o 


bH 


■H fan 


HH SH 




Tl 


fl 


d 


bH 



<]i 


i> -a 


E 


Is 






o 


"T3 i-J 






Ph 


n: H 


, 1 


a; o 


(T| 




^ 








rn 




;3 




O 





S +j (0 m 



O T) cl -H 

rH cl <U tH 

I 'H CM 



a; -i^ 
iM O O 



OJ 


H 


U f 








h 


r; 


1 rt 


a 


fc 


-C3 'w 












^'H 


3 















S O 


172 


rt 



cl rH j:^ ^ S , 
Q) CM ^^ ^ E-" ■ 
CM +J = : = 



bH fH fH Cl 



w 






CM 










CM 


CM 




CM 


CM CM 


CM 






















■M 










































































■P 











































































T3 t3 



329 



O 



ho ho * ^ 

0) fU I— 1 o 
J3 ^ CO u 



S is C 

ft ft * 
>_• oi ■ 

I— 1 O 



o o 



O 



l,E5, 






I W -H ^H t! 



in tj -H t! 



td tH =H 1=1 ■ 



'H S 'H S 



SH Id SH ;3 



Q-Om >0'HO'H 

O -+J^H -+J --P 

O -H Cl 0) -H Cl -H S 

J w .H m w .H w .H 

I p; tH 13 03 in 03 in 

[iJO qijOO OhO dn 



O 

O 



o 
O 



TO 

r-H 



U CO - ft 113 

J 1— 1 .H +J +J +J ■ 

M <u Tl C mm 

[n t! O -H -H QJ I 

O J3 ^H ■ 

u e QJ u ^ . 

113 flj 3 (0 ^ -H 



■p 

§-^ a 

-a 3 

- 5^ ^^ 

M -a m 

U 5^ (13 

=a = iH 

- - ^^ 

. j> 4J 4J 

T) O -H 

=a &, + 



330 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



<u m u 



* iH 0) t3 > > ■ 

rH ho O 



t3 ho <U t! 






01 




T! 




3 




1 1 

o 


rfl 


fl 


fi 


1— 1 


n 










crt 


a 


t) 


0) 


n 


T3 


hJ 






iH 


IM 


(N 


CM 


M 



T) 


■H 


■^ 


^ 


0) 


T3 


,H 


m 


> 


(d 




5 


+J 


ho 


OJ 




<U 


Q) 








rH 


ho 




0) 


d 




B 


0) 


s 


0) 


t3 


ho 


<U 


4J 


O 




> 


<U 




-a 




T) 




e 




-a 




rH 


U 


-o 


hO 


<U 








+J 


o 


U 




1 
















tJ 


T) 










(0 










fH 


^^ 


^ 


s 




T3 






U 










e 










O 












CIh 






T! 


3 










CL< 


a 




fH 


^^ 


^ 






+J 


to 








rH 


hO 




+j 


3 


(0 






U 


^^ 


^ 






c 


ts 


hO 




+J 




T) 


^H 




rH 


s 


s 


0) 


o; 


q: 


0) 


T3 


OJ 






T) 


hO 


d 




OJ 


i-l 


<u 


HH 




fU 


1 










T) 






OJ 


T) 
















> 










B 




a< 


>. 


1 






3 


T) 






tH 


^H 








(0 












■P 




a. 






<u 








e 


^ 


.13 


.£3 


j:i 


0) 


C3 


T3 






a. 








ho 


^^ 


^ 


^H 






o 






> 




(0 




rH 


flj 


■H 




13 


T) 




U 


^H 


E 


rH 




rH 


rH 






s 


=1 


CIh 


s 


^^ 


■H 




<U 






0) 


t>H 


hO 


ho 


hO 


hO 


S 


CIh 


cr^ 


u* 






4J 


> 


T) 


T) 


,£: 


j:i 


T3 


t3 


T) 


■a 


t! 


Tl 




T) 






T) 


T) 


T! 


Tl 



rH Tl T! 



!>>TlTl>l>>>>>-H|>-H-H!>>>> 



■H 'H 3 3 ■ 



33clcl333dClcl333C33clcl3 sh <u (Ud 33 

^^i^^^^^^^^^^^i^^^^^^^^^^^^^^^i^^^^^^^ -H CS( ho Tl-H r-\ r-\ 



+J+J+J-P+J+J4J a ■~~. r<M 

tDdJOJlBdJflJQ) tt"^ CN 



C 3 



^H ^^ ho ho 

ffl (0 I— 1 I— 1 A A 

> > O O I I 

I I T) t3 I— 1 I— 1 







hO hO 0) <u 














hO 


hO 





S^fifi 



■^ -^ 0) 



T) Tl ■-' 



1—1 <U 






331 



■H fH ^H fU bo S 



I I -r: .1 

I -H +J H 

I rH CL, 



ft B S ■ 
U o 

Tl U U 



4J 4J j:3 

CI -H CI 



Id -H fi) p 



Cl Cl (0 -H Jh 



q: cl -h St) 



rH (d S in in 



vi ti S, u • 



(d 0) cl > ffl 



+J ^ V CI d OJ 

to q; bo 'H 'H t) 

■H +J Tl O O O 

JH -H 0) ft ft cl 



+J Ci 4J ft 4 



3 T3 OJ rH , 

o o E o I 

Tl S U CO 



d +j ja 0) 



3 p =1 d =1 u 

tH ^H ^H in ^H U 















rj 


D 


































ft ft ft ft 


ft 


4J 





^ +J +J +J p 



-P 0) V <u 



<u rH m ho 



^H tj O 0) 



ho ho ( 
T3 t3 1 



d d Cl CI d d 



d d d d d d 

^H ^^ tH ^H ^H h 

<i; <u v 0) V oj 



dJ (U 0) 0) 



M SH Jd 0) 

II M ^ . 

ft ft ft v A 

■H 'H -H tH +J 

,^ ^ Jd jd I 

M m m +J 0) , 

I I I I -p 

I p p p ft 0) 



ja ^ XI ^ ,fl 

p 3 p d d d 



drHrHrHd-Hddd 
■H m SH SH 'H P -H 'H -H Tl T3 t3 "O T! 

dddddddddddddd 



<U 0) 0) V <U V 

p p p p p p 

M M I-! « M « 

<U 0) 0) V <V 0) 



^H ^^ tH ^H ^H 

<u q: 0) 0) - 








hn 


hn 








II 


Q) 


II 








rH 












'^ 


tf 


0) 




j-i 


P 



o rH ja ho 

d <u IT) 

II u ft 0) 

<u I o I 

T) ft P ft 

d p Q) p 

II bO II 

■- rH Tl 0) 

<i; rH Q) ho 



<U rH rH d d <U =H 

e -H -H O g 

(0 HH SH -H 0) flj P 



I HH <U ft 



p d p d 



^^ -H -H -H 



u tj d ho e ^H 

(M CN O t! (d (0 

S S ja <u tH 



p p <U ho 



fH T3 0) IH 



■ - ■- flj T! -H SH 

rH 0) d o e I 

rH ho T) S -H 0) 



w < :s g . 
o 03 u p S S S ' 



O Pn O E-" w H ■-' 



d --■ ^ 



gOOTlOhJOO 



■^ tsi b3 -^ , 



sj a 



td ij ■— ■ W ■-' 

td U HH W =H 



d d d d 



fl: fl: tt tt 



> ^ 



d d d d d 



<U ^^ -H -H -H ■ 

g 

flj ^^ tH ^H ^H 



xl XI XI J3 



d d d d d d d 



■H fH tH ^H ^H 



T) CS 0) 0) I 



TJ <U S-" '■ 



UlilUSWI/!T3cn 



^ XI .Q P P d 
* p d ^H in ^H 



aeea &e ea 



332 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



CO 
. Tl O 



^H tH -H P 



e E 0) ft 



O O fH 0) S "O 

■H "O tH +J 0) tH tH 



nj <u _ 

CltJ3U u -OhOCl 



§ § *" 



3 



iQ d ^ B 



■H T3 



g (0 (d 0) 
<u -p E Oi 

fij e s 



0) St) S t) 'H 



■^ -"^ - "^ ^ i 



I T! bo rH T) 








■- 




■- 




■- 


■- 




■- 




n 


^ 


■H 


'o 


■H 


S 


'o 


+J 


ffl 


d 

■H 


Tl 


T) 


T) 


^ 


T) 


2 


"D 


























> 


> 


> 




> 




s 
















d 








jH 


13 




































d 




d 






hJ 


> 


E- 


^H 


e 












fU 


OJ 








0) 




ft 




4J 






1 


rH 




OJ 


<u 








1 










T) 




ho 


rH 








T) 


T) 








U 




e 




e 


hO 


+j 


s 


e 


e 


S 


e 








rH 




a 


■H 


T) 




bO 




rH 




■H 


■H 












T) 


ffl 


■H 




■H 


■H 














fU 


SH 




<u 


Tl 


c 


^H 


+J 


> 


^ 


< 




u 




u 


OJ 




T! 


Tl 


T) 


T) 


T) 






j:3 


1 




^ 


1 


d 




Q) 
















SH 




SH 






d 


c 


c 


d 


d 


s 


< 








d 








M 


:s 








^ 




1 


■a 


1 


■s' 
















O 


(d 






d 


OJ 


T) 


Tl 


Tl 




+j 


+J 


P 


4J 


0) 


rilj 


M 


^ 


rH 


d 


c 


c 


d 


d 


H 




E 


Oi 






ft 


T) 


Tl 


Tl 


(d 










rH 






0) 




OJ 
























+j 




ffl 


m 


fi) 


+j 




h 






3 


+J 




h 




in 


« 


<u 


^ 


0) 


^ 


OJ 


<U 


+J 


+J 


+J 


ti 


w 


* 




* 






:s 


|3 


s 


3 


tJ 


W 


^ 


^ 


JS 




« 


,£: 


j:i 


j:) 


A 


£1 


.a 


(0 


(d 


£d 




T) 


tJ 








T) 


T) 


T) 


Tl 


Tl 


Tl 


T) 


T) 


T) 


T) 


T) 




d 


3 


s 


=1 


13 


d 












ij 


T) 


rH 


bO 












■H 












T) 














iH 


rH 


rH 


■p 








<U 


Tl 


























T! 


Tl 


T) 


T) 


T) 


Tl 










> 


bH 


s 


o 


U 


> 


> 


> 


> 


> 


> 


> 


> 


> 


> 


!> 


s 



T3 o d 



U W 






rHhOrHBdddrH 



jTj'OTj'O'OTSTj'a.Q * (J 



oddcdddddd Sdddddcddddddddddddddddddddd 



M M 






i_i 1— 1 td 



333 







m 




M 






















iH 


















O 


Vi 


T3 



1—1 p 1—1 1—1 

1—1 jh o a, 

cs +J M w 

CS m 

iH B Q) 0) 























T) 




^^ 


u 


nj 


u <u 


<u 


<a 


^ 


ho iH 



•9 -5 






B d <u (u B s 

in ^H iH iH ^H M 

■p +J d 3 +j +J 



o 


j:j 






A 
















s 


iH 


rn 




^1^ 
































































kJ 


d 




B 


B 




















































tt 


ft 


tt 









43 



334 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



J3 £l 

S =1 

T3 t3 



T I— 1 i-i i-i cr ^ 

■ ■ J i_i i_i tJ ho 



!=> N > > 



"O tJ "O "O S ' 



jaj3^j:5H.aja^ 



t3 t3 13 .Q 






> ^ t3 IN] W 0) n 

S iH p 

<u <u oj <u 1— I ja Is 

rH rH rH rH N 3 '-' 

,Q ,fl ^ ,fl T! O ISl 

Id Id 13 Id I Tl U 

O O O O 3 (0 

"O tJ "O "O t3 " Sh 

> hO 

w .^ ■^ ■^ ^ 

■a ^H OJ <U rH Tl U 

<u <u !> > i: tH 0) 

> +J -H 'H S o > 



^^^^^^J:^H^^|I!^^ 



^H ^^ tH ^H ■ 



CirHfHfHrHrHrHrHfHfHrHfH 

■H33=ifl|dd3p=i|d=i 



CiCc3tiClclclB 



bn ^ ^ ^ 



^H ^^ tH ^H 
<U <U V 0) 



C3 d C3 
^H in ^H 
V <U V 



<U T! "O ^H 



> > > > > 

d d c3 d d CI B 



^H ^^ tH ^H 

<U <U V 0) 






dJ (U 0) 0) 



dJ (U 0) 0) 















<u 


q: 








CM 


a< 






> 


> 


3 


















rH 














w 


W 








> 


> 
















rH 


























o" 










w 


w 






bO 


bO 


■H 






o 












> 






>. 


>> 




d." 












bO 


ho 




w 


> 

rH 


> 


^^ 












T) 






+J 




0- 


Q) 


0) 






W 


m 






w 


> 


> 
















rH 




■rH 








Tl 


<u 


T! 






■P 


U 


o 






ho 




W 


w 






M 






T) 












bO 


bO 


0) 


<U 








t3 








> 


^ 


tj 


O 


















M 


M 






<U 


q: 








bO 


hO 




T) 


> 


> 


m 


<U 








> 


h 








hO 


M 






r-\ 










T) 












W 


m 


o" 


<U 




> 

rH 


> 


m 


U 






4J 


T) 












o" 




■H 






W 


w 


o 


O 


d 


d 


Tl 




tj 






■p 




























pa 




O 






T) 


<u 


q: 


0) 




o" 


9 


s 


t3 


h 


> 


> 


> 




M 


































^H 


T! 








U 


w 


W 


CO 


ffl 


^^ 


> 


> 


> 














rH 




<-\ 










1 


tj 


W 


w 


m 


« 

















tJ U5 w 


O- td 



I S '-'XI 

; '— ' ^ -H 

J I— I -H Jh 



o^ a". ? ? 



^ T) d &, (fl n-i 

t3 o o m w 

dJ S .Q <U (DC? 

fU I > rH td 

ft ^ ,fl (0 ja S 



u tH q d S SH 

O -H rH +J 

m 4H S a. (0 t-' 

(0 tH -P 

bo (d (0 fi) 0) 'H 

e S S ft m 

^ § S § S d 

■H S S ra 0) fu 

fij bo ho bo +J t3 



) T) (0 
■ > > 

J T) Tl 



[H rH Q) 0) 



■H 'H -H -H 'H 
> > > > > 

d d d d d 



EG SH 1 

T) t3 ' 



fij E K E eg 



U <U Q) 0) <u H) fU 

iQ d d d d d d 

E -H -H -H -H -H -H 

=H HH SH HH HH SH 

<U (U 0) <U 0) V 

--^ fl: fl: tt fl: tt tt 



335 



< 2 



■H Id <U +J 



* -H ^- 
' T3 LO 



CO 



« S3 



■ M B: U : 



■ a, J < J Q J ■ 
E; tb ij tb I bn I 
O U [iH U J I 



ro CN 



<U N 0) + 
e ■-' S ^ 
<U + 0) ft 



■-^ ^ S O^ r 



ft ft iH 



+J ■— ' +J ft 



I " ho ft 



<U t3 S T) ^ 



■ CS 0) 0) ^H 



-O ho t! (d 



^^ tH ^H ^H 



d c3 c3 d 



336 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



If 5 

• 3 fc. S 



o 


a -^ 
5^ 


1^ 




?s 






"3 ^ 


Hoc 














O .Oi 


oJ *^ 




o - 


^■-^ 


^s 


^ ^ 


« ? 


T3 '•-' 


— : o 


^ K 


^ i^ 






§■ -g 


S s 


B ^ 


O ^ 





S3 o 

a; 

en S 

^ 1 



■=1 o 



m T3 ■ 



o ^ 



oi rHuoJE +J T-H-es-UT-i^iic) -p ^S^^ P-aso^S^'cn 

■-■III « rt o;^- Q)Su«-su^-e9- <u rH ^ Hl3x2-<_a-<-ccC'PSP 



&, ft ft -O Or ■-' Ill^WPi wu-^SU fli 

<UfHfHfH >>;C| &&&«■■"■ 4J ft ft'-' p«ft Ld 

Phoboho -HTJoMfuOJajm «* ■■-.->.■■ -e^y-N OJ- oi 

(0 <B G> ■& 'O-udJjH^HiHft-H BoSO-ucI ft H+jS .W 

rHiii p|^+J+JhohotiO-H!>g o-og-o-S o-o H-H 



-T-7 WJ G(j 



ft ft 

ho ho 











1 




^ 




+j ■■ 


ft 




























-P 






















































































rr{ 




rn 












d ft 


rn 




UJ 


4J 




(0 

c 


M 




T' 


- 


O rH 




u. 
































ft 




ft 


^ 


JH js 


in 


























T) 


ft 


"! 


ft 


> 


ft 


> 


9. 


9 i> 







w O [n 



*e»(d'-N prH w-93- > -HUhprtJ 

(U-rH n3- 'H ftOJClCOtu 

CiClrHU ■» esq T) BCO-H'-'U 



U WW----' hOO -lijlij 

03 >jHj<U-93---OrH*JJ 

Vi Ml— ITl «rH- MhH 

^■■[iHbHOSaJ ■»-HPn[n 






337 



o a 



•^ CO 



Q -H 



^ .^ 


^ 


'+3 


<| 


O 




+^ 




>. J 


r; • 


a ^" 


^ 


ai 


I— ' 






1^ 




-^ 


^ £ 


5 J, 
1^ 


O 


o 


1 

GO 

o 




"a ^ 
^ .5 




-e 


& 


1^ 


=3 -i^ 


!<: 


o 


t 


> . 


^^ 


1^ 


^ 




H 












aj ^ 


m 




^ 


si 








&£■ 


% ^ 












-T- ^ 


= 









OS ~U 






O as 



[2^ 



lis 



338 APPENDIX E. NAVIER-STOKES SOLVER AND MESH ADAPTION CODE 



Appendix F 

Non-linear Conservation Law 
Solver 



The source code, written in Fortran, is presented for the fluctuation splitting and 
DMFDSFV algorithms to solve scalar conservation law problems. Non-linear advec- 
tion and linear advection-diffusion can both be treated in two dimensions. The grid 
pre-processor code follows the solver code. 



.339 



340 



APPENDIX F. NON-LINEAR CONSERVATION LAW SOLVER 



a 

Qi 

a 
o 
U 



QO ^ 20 — 



— iH 



O ^ ^ ^- 00 



HH M hj 



-S .9 









Z g 
S ^ 



p 






a 



> 



o 
en 



o 



U2 


<; a^ 


° l:::^ 


B a 


^ 


.3 -1, 


^^fc, 




a . 


•^ -^ 


q > 


5 


s + 


§ 


2S ^ 





o 



, a ^ p; - 



0^ ?^ 'o 'j:^ 



S r; cc d I 
o ^ ;^ -^ t 






^ 


'^ 




n 


iO 


& 




P 







c 




1 







-n 


r; 


T' 


r- 


■J. 


p 


a; 


-a 


h 


i; 


^ 


clT 


br 


P 


s 












p: 


^ 




c:; 


^1 "- 


iO 


-^ 


"a 


-1^ 


<1 


s 


cc 


^ 


p 







































cfl 


n 














— 


bi 


Tl 


« 


a; 



3 -^ rt 5: 
3 ^ S ° 

= = •^12 !: 



a !i £ "P 






a; ^ +€ +^ 







•^ 


c 


-^ 




& 


a; 


'oj 


n-' 


i 


-n 





a; 




Srr^ 





a 

en 
< 


.2 

a 



l> 

;i 

l> 

II 

i> 

+ 


5; 
H 

g 

8 

.2 




1 

H 
3 


s 

5b 
a; 


13 






C 
-5 


1 
c 






1 
& 


a; 
a; 


-a 


6: 




1 
c 
.c 

c 
13 



+ 



341 



o o 
o o 

CO OS 



c "^ -c "d a o ^ ' 



a; cu OJ .^ fl t; . 



rt E 



p c o o c 



a; cu OJ cu 



^ri^^^^^ri^ 









o a; "d "d J2 . 



S g g 



342 APPENDIX F. NON-LINEAR CONSERVATION LAW SOLVER 






S ^ ,." Ik 









^ rt "13 s i; o bc .-t^ -g ^ - — ^ — ' =- ^ ^" 23 i^ '^ « -^ ^> i; ^" n "^ N - ■^ 



s^ 



o rt 






Id ^ 3 'H t! (d 



e e 






^ -rt -rt :i) bD cl !- d t> i> ^ .^ .^ .9i .5:^ .:= .:= .2 .:= d r- ^ ^d 



u 



■P -H 



0) T3 

tH ft 
ft P 










01 












0) 




0" 







■H 
















CD 




m 




ft 


QJ 


+J 


T) 













p 






d 








II 


II 


+j 


5 




05 






II 








tH 


C3 


ti 




■H 


hO 








«3 


(d 






T) 


13 










e 




0) 




QJ 


ffl 


T) 






rti 


bo 


m 


+J 


+J 












S 


■H 




to 


fl 


rtl 


bO 




nJ 


M 








B 


=1 


.13 




:s 






<u 




4J 


^H 






,£i 












■H 








+J 


.D 






■H 




e 


+J 


=1 


hO 




0) 








to" 




rH 




T) 


ffl 


iH 



<U4JjHStOtO!UOUOfl),Q 

4J(d -H «oumuuq 

fiJMO) cItOu -hmB^ 

QJnJSOJQJrH fH>-Hfl)S 

jHMrH-HeQJ!UiH<U >bO 









' 






+J 
























^H 






rn 


SI 


M 




























































































(J 







fce=H S bo> !>9j:5 oi-ndaJJ-j 3 fl idfuPn P-h 



lOT-icsro^Lnto -1-iOTH.HgT-icsoi-i^HU 



:H s e H 



343 



m 3 3 -H -H 



S 5 



tn' 


s s^ 


B g 


+ 




.3 >> 


jr 


t; o 








II 


liO 'H 


■n tj 








+ 


^ 1 








Ph S 



M W 0) CN 



Q. O ;= s=; 

^ o « & 

■ O C C 

i2 ^ H H 



S - B OJ rtl ■ 
■H 0) -H e 'H 

e -H -a 



(13 t! fl -H q ^ QJ 



fin 



Oh S -H in 



g ^ 

rt s 



o 
> 

a 



w d p 'u ti ti 



o o o o o 



■-q ^ ^ 



a; o w 







































p 




« 


W) 




■^ 




.a 














































■H 




iH 


iH 


d 


u 



e -H pi ci ■ 



344 



APPENDIX F. NON-LINEAR CONSERVATION LAW SOLVER 



■H Cl +J Tl 0) 



+ <U fi) tH 



cr 



=H 



1 = o 



^H T! 0) T3 



<U Cl 4J CO 



«D C «D W 



■H 0) 0) * ■— ■ ' 
g ft T3 * fl 



m w ho ■— ■ "O Tl 
■H p OJ M O O ■ 

> T3 T) ^ ci a 



ho --■ S 



■H 
4J + 



T) B > > Tl 



ho +J ^ 



^H M Tl CT^ '■ 



ti <v a a 



o Tl hO 



0) 0) ^-^ (fl 



Cl fiJ 4J SH 



T1>>T)t3B^hM 



i; 53 fx. 

S go 



^" o a; 



^ ^ .b K 








•s 




















II 


'■Pi 


c^ 




te? 


S 


1^ 
II 



% £ ;:: 



-a cs cs ^ 



















^■^ 


# Id 






















^^ 






how 












m 


^ 


m 


> T) 


^^ 


bU 








C3 



w 



= < a 



a: 

b 

II 



T) e > > 



P3 i^ TH 

Use 
J3 c s 






T) 'H 

rt -a 



ho a ■-■ --^ 

II (I) ho 



Tl bo C t3 ■ 



e ^^ tH 'IP 



bO 



345 























to 












































































bU 


Q) 




b: 


- 


d 



^ ro CN CS t3 ^ 



Ol -H CN CS . 



a 

o 
Q 



Cl -P QJ -H 



CLh 


C3 
C3 




* 


'? 


* 


S 


s 


s 


0) 


OJ 


QJ 



CI cs 

-P CI 
fl -H 



q w ^ w , 



QJ >j OJ <U M 0) ~— ■ 



"=-" §" gs:;:;:; 


^ n3 


J5 w w w 


d 


^^ 


t-I^-^^IIvHIIt-Ii-ItHt-I 
CSCSOICNt-HCSt-IOIOICNCS 




T-H T-l 1-1 T-H 

cs cs cs c^ 


II 


CN 



CI T) ■ 



t3 t3 "TJ t5 






^ M ^ ^ 



iH Q) C 



e ,«=. q 7:! 



w w CH * C ^ 



rH ■ 



WW rt 



|3 3 +^ 



346 



APPENDIX F. NON-LINEAR CONSERVATION LAW SOLVER 



1 
























a 


o- 








' 


-^ 


ti. 


■^ 






c^ 


CJ 


^ 






rt 
























~ij- 




.-^ 
















^ 


j 


c. 




a 


+ 




3 


o- 


^ 


ri 


=^ 














t^ 


cu 






<5 




t^ 


tH 






^t 


1 




D. 


> 




■-^ 


o 


■D* 


o 




+ 


CJ 


-^ 


j:^ 




c^ 


d 






o 





(^ 2 









^ 


^ 










































^ 


<]; 


+ 




























tTo 


























" 


'"' 




II 






































SH 















II 



II 



tH ^H -H _C 



+ + 






M « OJ ^H 



LO in 
o o 



fcc c 



1 — I n3 TS 



ft 
o 

u 
3 




&. iH Q) CO 



. . 6 

(M to C 

3 -H 



3 =H tH 3 



l-^ ICJ 
+ 



Id ICJ 










nJ - T) 




^ - 




















* >v .Q 



l-^ ICJ 

I 



ro « rtl ffl CS 



ho TJ O O ho -H 



o ^ 



1 " 






>. 


P 


'a; 


II 






05 


-1^ 


S 


h 






?" 


P 


1 








* 


-^ 


1 








CD 






^ 








g 


^ 


1 


















4J 












■H 
















n; 








|3 


o 


1 


3 


3 


CN 




c 


1 


T-l 


CN 










^ 


3 








^ 






hO 


o 


^ 




* 












JS 


fl 


o 


15 


STr, 




CLh 


+J 


d 


en 


^ 




rH 


V 


ho 








nJ 


^ 


c3 




n; 










Oi 








II 


S 




!J 
















■H 


+J 










I-! 


OJ 


■H 


+? 


s 



347 



ho ■— ■ -H 



3 

O 



O o . 



\ <0 ej ti 
j E I ho 

I 3 -H ' 



1^ ffl T! -H 
■H ^H ■-' O 

ho T! -H T3 



fe l> 



(1) 



T3 

fi 
o 
u 
(1) 
en 




nj CN .Q OJ .a CO 



S w + w + w + w 



■H 3 -H S 



L03L03LnSL03 



nj CO flj cs fi) 



348 APPENDIX F. NON-LINEAR CONSERVATION LAW SOLVER 



-a s 0) cl ci 

O O CN -H -H 



N N . 



'X3 -H •—' Q) (M I 



-O fl3 ^^ fi) 0) 



































































N 


N 





13 M tH Jh 
■H Q) 0) tS 



13 8 







0) 


l-) 


r> 














































■H 


















ho Cl 




■H 


i-J 


.-' 





^_, ■ WT-H'-'pflMa 

OH ^^O Q) -HtOQ) 

m ^ T3 -r-i -r-j cl II CS II S e to 

(fl w w ho d -H 

tH 13 13 ffl <U -H Jh II II t3 



'^ '"' g Is T) T) 





T) 




3 


=1 


















T) 






to t3 






B 


in 


u 


^H 






0) 




ho 


hO t3 


g 





^M 


7^ 


■H 




II 




II J- 


a 


M 


>_. 












































1 




















■H 


i^ 




















CIJ 


■H 


l^l 


-' 


■H t! 
































C 


^'y 


-^ 






















o o o o o 



^ ^ ^ ^ ^ cl --■"-■ 

ceciclB ii-Hcs+Ju 

■H -ri 'H -H -ri ■-^ fi (0 OJ ' 



(0 « -O "O 

































CS 


CS 






























d 




















































d 






















:^ 


CS 












M 


M 
















^ 


CS 






■^ 


^ ^ 




Ph 




















































CIh 
























T-l 








































CS rH 














CN 




=H 


=H 












N 


N 




d 


d 


d 


d 






■H 


=H 








■H =H 




kJ 










^ 






r-\ 












T) 






rH 


0) 


rH 

■s 


i 








'"' 




.J 


CS 


» * 












(M 


N 










CS 


CS 




CS 














































CN 


£> 


CS 








* 
* 




* 


* 




* 


* 


* 


* 




CS 

rH 


5 


CS 






* 


55 


















cs 


CS 






























CS 


CS 








CS CS 












''"' 


Q 


HH 




CS 

r-\ 




^. 


'"' 


CS 


CS 


^^ 


^„ 




^„ 


^„ 


CS 


CS 




rH 


CS 

rH 


CS 






''^ 


rH r-\ 












^" 


^ 


'"' 


^ 


^ 




M 


jiT 


^ 


M 


^'" 


,M 




jj" 


^" 


M 


,M 




rH 


^ 


^ 






CS 


' ' 




















CS 
































CS 






















N 


cs 








N 


N 


N 


N 




N 




N 


N 


N 


N 




CS 
























(M 


>v 


cs 










>> 




>j 


>v 








>5 


>v 






CS 
























d 


« 




cs 


CS 






M 


M 


« 








M 




« 






rH 


CS 


CS 








rH CS 














T) 






T-l 




T! 


Tl 


T3 


t3 


T) 


■o 




Tl 


T) 


T) 


T) 
















■H =H 










d 








iH 


r-\ 


























d 




rH 


r-\ 








rH rH 
















cs 








+ 


+ 


+ 


+ 


+ 


+ 




+ 


+ 


+ 


+ 




CS 






















j3 


d 


































j3 


rH 












» * 










+j 




>v 
































+j 


rH 














d 












T) 






CS 
































CS 






CS 




fU 
























CS 


■rH 


CS 




CS 




rH 


CS 


■rH 


CS 














CS 




^ 








IT) 


ho 
























d 










CO 
















+j 




■^ 


■"■ 




3 


? 


^ 


^ 


T-l 




^ 


^ 


^ 


^ 


^ 


^ 




^ 


^ 


^ 


^ 




rH 

rH 


^ 


^ 






* 


2 3 








cs 












rH 








CS 


CS 


CS 


CS 








CS 


CS 


















o 




„ 




bO 


^ 


^ 


^ 


^ 






rH 


rH 


rH 


CS 


rH 


rH 


■"■ 


HH 

rH 


SH 


SH 
r-\ 


rH 


bO 


^ 


^ 


^ 






■^ 


w w 






^ 


M 




* 


* 


* 


» 


* 
















CS 












* 


» 


* 






■r-) 


II II 


CT^ 


OJ 


.^ 


._, 


o 


s 


s 


s 


s 


s 




" 


" 


" 


" 


" 


" 


'■"^ 


" 


" 


" 


" 


o 


s 


s 


s 




§ 


.^ 


,^ ,~, 


fU 


d 


S 


1 


6 














■^ 


■^ 


'^ 


'^ 


■^ 


■^ 


d 


■^ 


'^ 


'^ 


■^ 


a 










^ 


rH CS 










(d 


0) 


OJ 


0) 


<u 


Q) 






CS 




CS 




CS 






CS 




CS 


ffl 


Q) 


<u 


<u 










2 


■^ 


■H 


■H 


■H 


+J 


■H 


+J 


■H 


+J 


■H 
■H 


"■"> 




"'"' 




■■"= 




II 


"■^ 




"■"= 




Tl 


+J 


4J 

■H 


+J 


HH 
■H 


■^ 


II 


d d 


■H 


II 


II 








^H 




^H 


M 
















d 












U 


^H 






II 




Tl Tl 












s 


ts 


\s 


s 


3 


T) 








CS 


CS 


CS 


r-t 


rH 






CS 




3 


s 


3 


Tl T) 




+J 


ffl (0 




M 




cs 














d 






CS 


CS 














■H 










d 






^H ^^ 






■>-) 




■H 














rH 


r-i 


rH 




rH 


rH 


T! 


rH 


rH 


rH 




■H 








0) T) 




Tl 


ho hO 



349 






3 3 



tH 0) -H Cl 



13 T) 4J Id - 



U ho in ^H -H j:^ 






ffl (0 > e S 



w - ho in 



«3 CO to to ■ 



IS |3 3 B 



l-s S 



' CN SH lO ho T) to tH 



^H fi) ■--■ ■-^ ■ 



(M -H II ho ■-' 



ft SH -O g Or 



fN 


rs 


.^ 


■r-) 


.,— 1 


* 






































Tl 


Tl 












































■H 














































































hU 


In 







ho ^-^ +j w w 



(d fij -H -1—14 



"P ■"■ =H 



S Tl ho ho 



feb S) "^ 



■ ho ho 



Id -H ^ 



■ CO ■-- ^ 

• » M ' 

ho Q) - 



0) O O flj q: 



ad) to to 

I lO 'H 



350 APPENDIX F. NON-LINEAR CONSERVATION LAW SOLVER 



.2 
'3 






O +2 



CD ii -£3 



CI - CI -a 







^ ^ -S 














O T) 








t?nw 


epen 
e las 
a.pp 


a T) 


















^^M 





■H p 
CI ^ 



§ II 






351 






1, 

II 

S7 



CL, a, C, 



C CL, 1, 



=- 5 ^ 



O CL, Cy 



=. s ■ 



a-lc 



0," 



a -J a; 



a; c 






.H g,. 



<U -H 0) -H 



■H 113 



3 
ft 



fi ti -r^ P 



H V OJ <U 



352 



APPENDIX F. NON-LINEAR CONSERVATION LAW SOLVER 



OJ -" ^ 











o .si 








M ^ 


O 






O •■ 





:=: ^ a p ^ 






cl, O 

:w\n- 






Cy _ 



C-IO 



vi^vi^- 



; O-CL, : 



d (d 
ho ■-' 

■H Cl 



1,1^ 








O' 


O^ 




+ 


+ 




^ 


C^ 




II 


■cv 




o 


rv 


CL, 


o- 


tl, 


C- 


+ 


+ 


+ 


+ 


o 


s: 


rv 


rj 


CL, 




CL, 


o- 




II 




^ 


t|o 


Cy 

CL," 


+ 


+ 


■^ 


C^IO 


^ 







CL,|0- 



CL,!©- 



o 




+ 


(M 


u. 


+ 










^o 


e? 


+ 


+ 


CL, 


CL, 



+ 


+ 


^ 


Cy 


cv 


3 






+ 


+ 


L> 


n> 




■a 




'<JJ 




■^j 


+ 




+ 


s. 




^ 




a 




^ 




ci 


O 




cl; 


rt 




<-| 






^ 




/ 







o 




rr^ 




o 








CO 


rr 


















a. 












o 


u. 


















> 




JJ 
























> 


(0 






m .3 



353 



01 
O 

u 

ft 



Wi 






—7 Q) -H 



nj 




+^ 




'^ 


'^ 


















T) 


ho 






0. 




15 




■^ 


tH 
















■H 


B 


T! 




3 




oi 




ho 


'm 








^ 


^ 


^ 


B 


■H 


„" 


„" 




^ 






t> 




0) 


+J 














QJ 




ro 


CO 











O 




T3 


B 














j:j 












+i 




& 




B 




'-I 


cs 


m 


■^ 


Ol" 


CO 


+J 


" 


'-I 


'-I 




S 


a 




O 

o 


Ci 


ho 


■H 


■H 


■H 


■H 


■H 


■H 


CN 


■^ 


T) 


hO 




=3 









,£S 


a 


OJ 




^H 


M 


U 


U 










T! 




O 








+J 




T) 




+J 


+J 


+J 


+J 


+J 






B 








*-4^ 












■H 




■H 








QJ 
















_c 


-^ 


T3 


B 


,^ 


^ 


._, 


^ 


,_, 


^ 


hO 


^ 


^ 


^ 




^ 


^ 






o 


B 




B 


B 


B 


0) 


fl) 


OJ 












S 




fcC 








CN 


cs 


CS 


Ol 


(M 


CN 












a 








CN 
















s 


s 


s 






+J 


-^ 


CT^ 


■^ 


B 

■H 


■H 


■H 


■H 


■H 


■H 


■H 


a 










T^ 


;3 






II 




II 


II 




II 




II 




OJ 


0) 


<U 








u 


a 
























+J 


■p 


+J 


=H 




"& 


> 








cs 


CO 




(M 


CO 


S 








■H 


CU J 


Cfi 








<U 


<u 


Q) 


0) 


0) 


0) 












aS 








bO 


+J 




T3 


T3 


Tl 


hO 


hO 


ho 




ts 


H 


s 


Tl 


Q) 


=1 






B 


+J 








t3 


T3 


T) 










B 


^ +2 


> 


.2 


o 








B 


B 


B 


0) 


fl) 


OJ 










Q) 


&* -G 




































11 




2 




m 


T3 


























■« 




^p 






























q^ Td 


<l 


s 
































Q§ 



354 



APPENDIX F. NON-LINEAR CONSERVATION LAW SOLVER 



in ^H bO 

■P <U (0 Q) 0) 



Si- 



9^3 









s 


n 








|81 


m 




?p5i-s 




tH 








3 ^^5 



S.2a 



H t3 'H 'H tH tH 3 +^ O 



ol 8 



5 > 




S S 13 -H 



■H ho N 1^ QJ <U 






ffl n3 t3 C 







































iH 


■H 
























■H 


















r-H P 


■H 




tN 



E 2 



ho =1 h 



355 



- s 



3 ro (TO 



~ 13 t3 

. -H -H 

I I I 

CO n 



+j e =1 s 



- ■— ■ ■-^ M 



■H 'H ho ho 



ho ho 



w ._- tH 



hO fl 






'-' 0) ho N N 



g is |3 -g ^ 



■ ho ho 



&, -H S 



J2 



g:„ 



en -- 

fe -1 =^ 
5 E I. 




ho -H 
T3 + 
0) ro 

e ^ 



ho + + ho + 



^^ 0) T3 CN - 





fN 


' 


1 


^ 














Tl 






■n 














a 






Cl 




















d 
















fl 




ffl 












u 




II 


Ih 


ho 



. O m ■— ■ ■-^ 



CO S -H 
" ft 



356 APPENDIX F. NON-LINEAR CONSERVATION LAW SOLVER 



O; — - 

IS g 






hO T3 




hn 




































a " 










- hn 




















o T3 
















































































■H 






II 










rs 


^^ 


































a 




d 


T! 



te 






■s a 
s i'' 

l> -9: 
Si 

II 







h!) 
























■H 




tH 
































^H 






Tj 














in 




hn 


■H 


<i; 


+ 












hO 







lOO-HS-H ww-rHg. 



.2 S 


4J 


3 
T3 


=1 o 

t3 S 


&^ 


« 


s s 


6,^: 


■H 


t= P 




S 




'S g) 


ho 


ho--' 


'S g)Ln 


hO 






hO 


ho M 


-o 






T3 t- 


t! 








* 0) 






* OJ 




tH 


* 


* > 




* 


* > 


O 


■H 


ri O 


■H 






« * 






« # 




c & 




Lfl 


LA II 


> 




LO II 


> + 


S 


bO 






to >v 






03 >. 


^^ 


^ '5b 


Tl 


O 


O '-~. 


T3 !> 


O 


O /^ 


t3 !> S 












fl 5 






03 h U 


d 


o; w 






II OJ 


U T) 


II 


II 0) 


^H T) m 


ho 


l-l 






T) 


hO fl 




T3 


ho nJ u 


T! 




M 


>. o 


Ih 


M 


>, o 




<u 


1^ 


CS 


> 


> ti 


■^ hO 


> 


> e 


^ ho II 




<V 


(0 


a ■— ■ 




m 


fi) --■ 






■H 


T3 


t3 -P 




13 


T3 +J 










(0 


lO M 






fi) m 






-S -^ 




^ 






^ 


M -H 








hO 


ho V 


to 


hO 


hO > 


u 





.3 a s^ 



a> 

U Si 



V ^ ^ ^ ^ ^ 
"O +J +J +J +J +J 



T-H CS IT) T-H (M ro 
<U <U Q) 0) dJ QJ 
■a T! Tl ho ho ho 



+ 






Tl 




CN 


CN 




CS 


CS 


to 




<U 




Tl 




CO 


CO 




CO 


CO 


flj 




<V 




T) 














to 








d 




OJ 


<U 




Q) 


0) 






j:^ 




d 




Q) 


0) 




OJ 


<U 






jd 




d 




<u 


Q) 




Q) 


0) 




a" 








(M 


hO 


hO CS 


hO 


hO 












CS 


hO 


hO CS 


ho 


hO 






+j 






CN 


ho 


hO CS 


hO 


hO 


^H 




m 


cs 




T) 


T) 




Tl 


T) 


to 








m 




Tl 


Tl 




T) 


TJ 


flj 






m 






Tl 


Tl 




Tl 


T) 


to 


a" 


c 


ho 


0) 




















ho 


Q) 




















ho 


OJ 


CN 














0) 




ho 




w 


w 




w 


w 










ho 




w 


w 




w 


w 




CS 






ho 




w 


w 




w 


w 




W^ 


^ 


13 


Tl 




N 


N 




N 


N 




* 


CN 


Tl 


Tl 


■H 


N 


N 


■H 


N 


N 




* 


CO 


T3 


T) 




N 


N 


■H 


N 


N 




+J 








>v 


>. 




>, 


>> 


3 


* 








tH 




>> 


^H 


>v 


>. 


3 


* 










>, 


>, 


U 




>> 


3 




B^ 


w 


+J 




M 


+J 


M 


M 


g 




TJ 


3 


w 


+J 


M 


M 


+J 




M 


g 




T) 


^ 


w 


+J 


M 


M 


+J 


M 


M 


g 








N 




T) 


T) 




Tl 


T) 








N 


■H 


Tl 


Tl 


■H 


T) 


TJ 








N 




Tl 


Tl 


■H 


Tl 


T) 


;:i r^' 




+J 


















+ 


d 


4J 


















+ 


d 


+J 


>v 
















l'^ 


■^ 


■H 


1" 


^ 


* 


* 


<S 


* 


* 


* 


e 

■H 




■H 


1" 


i 


* 


* 


5 


* 


* 


* 


s 

■H 




■H 


■s 


^ 


* 


* 


s 


* 


* 


* 


1 


T3 


> 
















LO 


T) 


u" 


> 
















LO 


Tl 


u" 


> 
















Hi 




C 




* 


■H 


CN 


'-H 


■H 


CS 


1-1 


CS 


d 






* 


■H 


CS 


1-1 


■H 


CS 


1-1 


CS 


d 






* 


■H 


CJ 


1-1 


■H 


CS 


1-1 


CS 




" 


,^ 


^ 


CO 


ro 


^ 


^" 


^^ 


o 


cs" 




" 


,^ 


j^ 


^" 


^^ 


* 


cs" 


cs" 


o 


Co" 




" 


,_^ 


« 


cT 


cs' 


j^ 


co" 


co" 


o 












OJ 


<u 




Q) 


0) 




OJ 






CS 




Q) 


0) 




OJ 


<u 




Q) 






CO 




<u 


Q) 




Q) 


0) 




-Q- 


i:j^ 




0) 




hO 


ho 




hO 


hO 


+ 


ho 


ho 




Q) 




hO 


hO 




hO 


ho 


+ 


hO 


ho 




OJ 




ho 


hO 




hO 


ho 


+ 


0) 




Tl 


(M 


T) 


T) 


<rO 


Tl 


T) 




T) 


QJ 




Tl 


CO 


Tl 


Tl 




T) 


TJ 




Tl 


0) 




T) 




Tl 


Tl 


CS 


Tl 


T) 








hO 
















e 




TJ 


hO 




















T) 


ho 






















fl) 


^ 


T) 






Tl 






3 






<U 


^ 


T) 






T) 












fl) 


^ 


TJ 






T) 












T3 






N 


N 




N 


N 




N 


d 


Tl 






N 


N 




N 


N 




N 


d 


T3 






N 


N 




N 


N 






ho 




3 


d 


>v 


>. 


^ 


>, 


>> 




>v 






3 


d 




>> 


^ 


>v 


>. 




>, 






3 


^ 


>, 


>, 


d 




>> 






0) 


a 








M 




M 


M 




M 




d 






M 


M 






M 




M 




d 






M 


M 




M 


M 






T3 




■— ' 


3 


T) 


T) 


3 


Tl 


T) 


II 


T) 






■— ' 


3 


Tl 


Tl 


3 


T) 


TJ 


II 


Tl 






^-^ 


3 


Tl 


Tl 


3 


Tl 


T) 


II 



d d d 0) 






o - 



+ 



^ ^ 'K .2 



Ak 



cr 


=J 


+ 


^ 


p" 


.cq 








■^ 



Ci 






*^ 


+ 


CM 




cq 


Ch 






+ 






c 






Cl 




















c 


!^ 


s 


^CQ 



+ 



+ 



357 



01 

o 



o £ ?^ 
O iC Eb 



II 



B fi 



B ^ 



0) 0) LO LO 



@ tl V OJ 



U- Uh "O S 3 



CS 

ft 

3 

"Is 

O 



—H -H T) 



^ w Id <U LH 



' -O "O -H Tl 



358 APPENDIX F. NON-LINEAR CONSERVATION LAW SOLVER 



1-1 CN ro (TO to 
fl) QJ <U <U <U 



U II "H II 4-1 II II II II II 

■H -H -H I 

a p =1 Id Id 3 ■ 
wci<ua(ui3Scicia 



359 







i=l 'O 




































<i} 


flj .H 







^ o 



1=1 


11 


^^ 


^ 


















n 
















" 


o 


H-l 


fcb 



01 
01 
ft 

O 



n> 


■H 


o 


Ci 


6 


C3 


Tl 




hfl 


frt 






















13 






■n 














.Q 




fil 


■"■ 


















T! 







<U Or Cb -^ 



■H <U Q) 
<U £1| Or 



=H Tl t3 ho 



<U Or Ol ^ 



iH TJ "O ^ 

0) ft Oh — . 



360 APPENDIX F. NON-LINEAR CONSERVATION LAW SOLVER 



Pi 











s 




bH 


bH 


bH 


b] 


S 




bH 


bH 


bn 



bJ U bJ 
hJ hJ ij 



m 




ro 


st< 


LO 


" 


II 


U 


J4 

d 




!'. 


II 


!'. 


0) 




W 


CO 


W 


a 






■H 




IT) 


^ 


LO 






kJ 


kJ 


hJ 


(0 


W 








W 


w 


W 






bn 


fc 


b; 


^H 


ij 








hJ 


hJ 


ij 


HH 












b- 


hO U 


+;^ 




bj 


bj 


bj 


+J 














d a; 


<u 














C3 


d 


d 


'H 




■H w 


















■H 








iH >— ■ 


.q' 




d 


d 


d 












0) 










■H 






j:) 




b] 


u 


U 


J3 




Ph ^ 
















kJ 


kJ 


hJ 


+J 




B ■ 


<u 




bl 


u 


bQ 




+J 




M 






U 




> 




hJ 


hJ 


ij 


^ 


^H 


bH 


bH 


bn 




03 


u 






M 




i-i 


c 


fl 










W 




e 


■is 


bn 


bn 


bn 




+J 


in 




^^ 








<u 


d 








lj 
















03 




^ 


^ 


^H 






HH 


■H 


=H 






j:^ I^ 




e 










=1 


® 










u 1^ 




d 


m 


HH 


SH 


tt 


t3 








tt 






tt 


T! 


© 


® 





ex d «3 u w iH -. 

^CJ .H"".H+J'. -mrH Ml 





qH 




m 




,:»j 


Q hJ J 


rt 



6 « 



H 6 



bn bH 



361 



2 S S 

OJ qi :C 



c?5 q a 






C3 


Tl 
























Uh 



u u 

a; Pi 

CO CO 



O 












Pi 3 



a < 



o -c 



pq :t2 ^ ;q 2q ^ 






ti .3 






+1 en & 



+^ IS . 



III 



,, o 






^14 



C 3 a 

„ S B 

^ ^ ffi 

S5 .^ P 



c: CO 



I o ^ 






■p 


3 










o 


o 


T) 


.. 




ffl 


3 


*" 




+J 










cri 


oi 


s 


tH 




+J 


^^ 


>: 














CO 


CO 


y 




■H 


q: 


(d 




















03 




U 


p; 


s 


■P .-^ 
■ U 




u 


CLh 






» 


«. 


<u 


CO 


g 








OJ o 




o 








s 


Ci 






a. 








!> Oi 


+J 


oi 








■H 














1 


■H Q. 




a. 


o 










d 


■H 










■P ■--■ 


(0 




oi 


N 




u 


u 




> 




a. 


a. 


CM 




d 




£ 






hJ 


J 


T) 


t3 










nj 


■H 








+J 




M 


d 




OJ 


^H 




^ 


CN M 


cs 








^H 


tb 


tb 








bO 


ho 


bO 


a <u 


a. 


CM 






ffl 






fi. 


C3 


« 






® 


4J 






+J 


CT^ 


+J 


U 


tH 


<u 




iH 






1 


CIh >q 


a. 


'> 


(0 


CIh 








Q 












U iH 




Tl 






e 


=H 


m 




Ch 











362 



APPENDIX F. NON-LINEAR CONSERVATION LAW SOLVER 



§ g 



n 


a 












a 


^ 


.Sii 










cs 




ro 
















v 












"S 






d 




rt 




d 












r-\ 


















N 




N 




N 


CS 




























>v 




>. 


■H 


>> 


hO 




















S 








« 




M 




M 


d 
























N 




N 




N 












■P 


















>> 




>J 






1 


•-\ 


CS 






ho ro 
















M 












0) 


d 


d 


d 




d 


d 


d 






■^ o 






































cs 


IT) 


^ 


cs 


■^ 


CS 


'~' 


CS 


+j 


■H 


■H 


■H 


CS 
ho 


■H 


■H 


■H 






cu ~*^ 








cs" 




Co" 






ho 


II 


II 


II 


d 




II 








p a 


■H 




+J 


d 




d 


+J 


d 


























u 




h 




^^ 












rH 












d 


d 


u" 




cr^ 




a^ 




T-l 




cs 


ro 


OJ 




cs 


IT) 






cs 


cs 














hO 


























N 








N 


B 




















CU M 




■H 


II 


>v 


II 


>. 




>> 


0) 




■H 








■H 
















« 




M 




M 


rH 




















o ^ 


II 








CS 




CO 






d 


d 


d 


■H 


d 


d 


d 


SH 




§ .3 
6 £ 






ho 




ho 




hO 






cs 


cs 


cs 




cs 


cs 








cs 


IT) 


d 




d 




d 
























d 


d 


0) 




0) 




q: 














■H 




■H 


T3 


t3 


-^ a; 


























rH 








d 






■H 






» 




« 




» 


■H 


















t3 

d 


CJ _Q 

> '5b 

3 ^ 



d 0) 



CS CS t3 

■H U 

















-a 












H 


rt 
rt 


ri 



a ° .ri S S 






nj 


1 
















ri 






'•^ 


_o 




T^ 












cfl 




o 




























ffi 


t; 














'cd 


;= 


H 



p 



CD 



O 



<1 c^ 



o 


S 


0) 


25 


o 


% 


o 








Oh 




0) 








Oh 





o 



; -c nS -^ -^s 






1S s -s -= 









a li 








1 


3 "2 




o 


1 


^ 


^ 


5i ^ 


M o 

8 < 


a> 





< 


Q 




g 


Q 



u ho d 
■H <u ho 
ho +J fi) 



3 

a 



^ as 



a; o 



o 

o 



+ + 

CN CM 

S C ■ 



t3 t3 

C3 C 



-S CN CM -H S 

+- " -H . 

;i; o o 10 o I 

ip s c s u ■ 



CM CM CM CM 

13 T5 TJ T5 

a a a a 

■H -H -H -H 

a a a a 

"O "O "O "^ 

B 1=1 C a 



S +J +J ft SH S 



t3 t3 



+J Or 4-1 ■ 



B 1=1 C a S 



Tl CM CM CM CM 

ci a ti p a 



363 



O Q td Q 



" to to «D «3 



■' _ T) +3 -H 



.-H "O +J +J ■ 



g IS IS -a ■ 



H 3 Tl -H 






O 



OJ CO t^ 



S ?J =1 _ -71 



Q 


bO 


m 


" 




T) 


T) 


& 


s 


o 


o 


o 


ro 




CS 


u 


U 


d 






tH 








o 


o 


_K 




C 




6" 












Q) 


0) 




d 


d 


o 








■H 




<u 












j:) 






■H 


h-l 






Cb" 








■H 




d 


















i 


hC 


a 








u 




d 




d 






d 


d 






-a 


o 


t3 




d 








T! 




c 










fe 


cu 








cs 




+j 
























T3 


d 












d 








T) 


T) 










o 










0) 




■H 












X 




o 

G^ 


cu 


c 










^ 


M 


d 


* 


* 




d 


d 


V. 


o 






^ 


d 


■a 


s 


■H 
Tl 


e 


T! 


s 


S 




■a 


TJ 


nj 


■^ 


CM 

d 


CM 


§ 






II 




Q) 


0) 




d 


d 


1> 






















d 


4J 


+j 


ft SH 


■H 






^ 


d 




c^ 
















■H 


■H 


O -H 










c 


IB 


0) 








3 




d 




M 


tH 


+J 








o 




fU 


HH 










=H 


3 


s 


" 1 


g 


d 


^ 


"*^ 


u 


~m 


o 




■H 








■H 


■H 










■H 


^ 
o 


O 


.U 


cu 


T3 
































































^ 
































o 
































































s 


'.B 


rt 


"S 















CS CM CS +J ■ 



d d +J 4J ft SH -H 

■H -H O -H ^-^ 
II ■— ■ ^H M +J OJ 



364 APPENDIX F. NON-LINEAR CONSERVATION LAW SOLVER 



m 



6 



S' -d 



ch <u <u <u m 



a ^ 1^^^^^== ^ ^ 



rt 
-d 



§ "^ d tc M b, 



C:^ P^ . 



O l5 -rH tH 



fljQJd) rtaji^(— ; — I Old [nQ:(d £ iHf^ rH-H 






o 



s 

bJO ^ ^ -H P 5 

Ca -d u o a 



■^ -H O ^ -H 

'rt 'g ^" "s "g 



^ <U £1 >-■ 



=H J3 SH 



s 


1 


rH 
r-\ 

o 


0) 

s 


s 




■H 
Q 


9 


* 


9 


-^r 


* 


IT 


* 


s 


S 


s 


s 


S 


S 


s 



o 



— CI rs m ■-' 






<U <U Q) 0) 



|33Bg|S|3|3'^-H 



£::; ^H ^^ ^ a ii m ^ 'a; 

•r" "in c th ^ id -H u 5 

-t^ .3 II "S ^ T3 -S ^ .s 



O 3 



«3 CO to to 



'■P '^ 






S -t 



. ■-' ^H ho 



365 



o 
•a; 



Q ^ 



t5 Gi 3 B 



<]J =H 1) ^H 



S£3 



is 

> 



B " ^H t3 



0) ro «D CO 



«D CO CO to 



C -H -O T) Cl 0) 






Jh iH Jh OJ ho 



-g e -^ B e 



■H ^H HH "H 



^ ■-''a^HfH+jQj'a 



S |3 S 3 



366 APPENDIX F. NON-LINEAR CONSERVATION LAW SOLVER 



a ■ 

T3 -H 



■a I I- ssr-r-g ::°^:g 





-d & 




■■^ n 




JJ +3 










— 1 


:^ P 



10 ^ 



■s a^ & 






q .H WW 



bJO 

o 





ni 


^^ 


P 


J5 


"^ 






_a 


n 


H 


— 


o 




^ 












c 
Q 


O 


-!:3 





J' OJ +^ 

o o o 
■ ^ n" 



■H + "H 



13 T) 

O Id 

d CI 















































^ 


(1) 


(l> 


ni 


(]I 






t, 


Cl> 


ni 


(]! 


(]) 


















































In 








4J 






M 






1^ 



5^^ "„^ -2i^^ 

•r o u ffl cs Ti o .2^ -5 

mmmrn-.- -mmrnni- +^S^ ■H<UU Zd-,"^ 



a c3 -H I 



< a; 



1^ 'H 



w II ho +J 






367 



C3 w -g 



S ^ 



fl w w 






-P -^^ .H . 



^H T! — h 



■— ' ^H <U tH 



o ? 



368 



APPENDIX F. NON-LINEAR CONSERVATION LAW SOLVER 




■H CT^ N N 



~, oi a 











cu 








bo 


U) 










T3 


Tl 




1 O 














V 




■H 
























d 


S 










cs 


CS 


"o 


■rH CN rO 






<u 


Q) 














r-\ r-\ r^ 










.2 


u u u 






N 




■H -H 'H 






>, 


>, 












1-J 






0) 










ho ho ho 


CM + 










T3 T) T) 








* 


rrj 




■H CO 










■H -H 'H 






LO 


LO 






II ^ 


^ 








"s "e "e 




o 


o 


o 




0) II 










ho 

T3 rH 


"^ 


" 


II 


"^ 


a&g, 


0) ^H 






>, 


T3 T) T) 




'o 








(1) QJ QJ 



- CN <U <U <U 0) 
^H ^^ tH M 



• o o o o 



U U w 



ro CO CO 

CO CO CO 

CO CO CO 

CO CO CO 



CO CO CO 
CO CO CO 
CO CO CO 



= o .2 ^ 

' ,., ^ ^ 

. CU q; s_ 

:i -HP t= =^ 

: +^ o 

. ^ S ^. 

- cu M^ o 



CS M N --■ 



CS CS CS CM 






II 
q 
Co' 



"O t3 t3 TJ 



<U <U V 0) 
^H ^^ tH M 









■H CS 'H 


■H 


■H 


■H 










































































— 


/^ 


13 >. 









tCS-H^-'-OTItStITJ 



■— ' T! -H (fl 



<U <U V 0) 
^H ^^ tH M 



www to 



Cl (0 ^H ■— ■ hO 



jwwww ■^t^;-; hofi)' 



■ (O «D W3 ^O 



■H t! (d +J 



S IS |3 S 



U ^ lU u u 



S Is |3 t! Tl 







q=l 


rt 


ml 














-d 










S 


























rr 




^ 


^ 


6 


















n: 




^ 




o 




_o 




^ 




^ 




"nn 








ci; 








rrl 










S 


+- 


„^ 




rT 


3 


O 






o 


Tl 


















§ 


^ 




:p 


■i 



369 



cs 


cs 


■H 


<u 




d 
cs 



q -H 



d cs C B 



N N 



cs 


cs 


cs 






<u 


<u 


Q) 


HH 














^ 


iH 


In 


T3 
C 


t3 
t3 



O 








. 


^'■ 




■H 


^ 


^ 














































































■H 






















































T> 


























d 


d 


CS 


Tl 


d 


d 



^ n cs cs Tl - 



dcs d u'-'S^N 5b'-' 



cs cs N nJ 



M ^H ^H "O ■ 



t^a 



■H 

d T) 





g 


























M 










SH 


■^ 


■"^ 


■"* 


■"■ 


d 
d 


^^ 


g 


■"^ 


■"■ 


■"■ 


■"■ 


■"■ 






■^ 


■"^ 


■"* 


^ 


^ 


^ 


^ 


^ 


^ 


^ 


^ 


^ 


^ 


^ 


^ 


^ 


^ 


^ 


^ 


^ 


^ 


^ 


CS 


i^ 


cs 


cs 


cs 


i^ 


II 


i^ 


II 


cs 


cs 


cs 


i^ 


cs 


i^ 


CN 


CN 


CS 


cs 



+J +J +J +J +J +J 



is |3 S 3 g 



tH ^H ^H in ^H M 
g S IS |3 S 3 



O <U O (U O 



<u CS 0) ro 



fH <U tH 0) ^H 



<U cs Q) cs dJ 



CO „. 

"^ £: 

o ^ 

CO—; 




N N _C 



+^ Q) 0) 



N N -^ 



w w o ^ 



370 APPENDIX F. NON-LINEAR CONSERVATION LAW SOLVER 



CS CO 

o cs 









^ ^ J 



i* 






J :3 S 0^ 



O & -oD 



S ii O CO ~ 



i "^ y 






I 



'' 'o c: -^" ' — ' f_'" ' 'iH . Sc' ^ ^ '^ 

; a ^ ^ ^" _2^ cu" 3< £' -^ - "^ - ^" ^" ^' 

; C " ■— a -^ o a "t: .Si -S ^ m "= ". ^ J" J J" 



■H fl 



^ <1 S "S 

3 .^ o M . ^ -^ 5 ^ - V C V "^ "^ II V T " 

--^^^^^-^r-_ll-^i''~^Ml-^i'^-^^■aJH^-^■l-i^l-i^^-^■l-i'l-i'^-^■ rni-!(nm'"'"'" di-'i-'i-! ~ 

d d 






o o cu 



'■ ' ' "IE 1-11 

1 F! ^ 

"S -S 2 g I ^ 



o 
Q 



o o 

O LO . 
O CO 



3 s s CI e 



"jHrS'H css^Hhto (uqoJo^H -iS "^^aj iiiiii 









'-' 




■H 










'^ 




in 


fp 




















































































































































q 








m 








in 












q 


q 


■H 




IH 


7i 


In 
CM 




^, 


<u 


0) 






























o 


o 


O 


o 


o 


O 






fii 
























„ 




s 




q 


t-i" 


,, 


^H 
































CN 


(N 




CN 




CN 












^ 


„ 



M;3fl^HNtH^H^H 



■H<uuQ)q[ning - e 
mq<uja SB -HM-nq 



OJOOJ (-^OCOCSLO 

"d "^ "rf ^ ^ 



<U <U Q) 0) 



" s a s 

O a S S 3 

fl * 



i^^^^^^^^^^^|^oooo o o<uq r/1-^ c3 ej n <0 (0 ^^ 



371 



13 








■^ -^ 
















Q S 




i V 
















H ^^ 




















zfi J 




M 












-d s 
















Pm -< 


a 



372 APPENDIX F. NON-LINEAR CONSERVATION LAW SOLVER 



Bibliography 



[1] David Sidilkover. A genuinely multidimensional upwind scheme and efficient 
multigrid solver for the compressible Euler equations. Report 94-84, ICASE, 
USA, November 1994. 

[2] David Sidilkover. Multidimensional upwinding and multigrid. AIAA Paper 
95-1759, June 1995. 

[3] D. Sidilkover and P. L. Roe. Unification of some advection schemes in two 
dimensions. Report 95-10, ICASE, Hampton, February 1995. 

[4] Bram van Leer. Towards the ultimate conservative scheme. II. Monotonicity 
and conservation combined in a second order scheme. Journal of Computational 
Physics, 14:361-370, 1974. 

[5] Bram van Leer. Towards the ultimate conservative scheme. V. A second-order 
sequel to Godunov's method. Journal of Computational Physics, 32:101-136, 
1979. 

[6] R. W. MacCormack. The effect of viscosity in hypervelocity impact cratering. 
AIAA Paper 69-354, 1969. 

[7] R. W. MacCormack. Current status of numerical solutions of the Navier-Stokes 
equations. AIAA Paper 85-0032, January 1985. 

[8] R. W. MacCormack and G. V. Candler. The solution of the Navier-Stokes 
equations using Gauss-Seidel line relaxation. Computers and Fluids, 17(1):133- 
150, January 1989. 

373 



374 BIBLIOGRAPHY 

[9] Robert W. MacCormack and Thomas Pulliam. Assessment of a new numerical 
procedure for fluid dynamics. AIAA Paper 98-2821, June 1998. 

[10] G. V. Candler, M. J. Wright, and J. D. McDonald. A data-parallel LU-SGS 
method for reacting flows. AIAA Paper 94-0410, January 1994. 

[11] A. G. Godfrey. GASP Version 3 User's Manual. Aerosoft, Inc., Blacksburg, 

VA, May 1996. 

[12] J. L. Thomas, R. W. Walters, D. H. Rudy, and R. C. Swanson. Upwind relax- 
ation algorithms for Euler/Navier-Stokes equations. In Sharon H. Stack, editor, 
Langley Symposium on Aerodynamics, volume 1, pages 89-107. NASA Langley 
Research Center, April 1985. 

[13] P. L. Roe. Approximate Riemann solvers, parameter vectors, and difference 
schemes. Journal of Computational Physics, 43(2):357-372, October 1981. 

[14] S. K. Godunov. A difference method for the numerical calculation of dis- 
continuous solutions of hydrod3^namic equations. Matematichaskiy Sbornik, 
47(89)(3):271-306, March 1959. 

[15] Peter A. Gnoffo, Roop N. Gupta, and Judy L. Shinn. Conservation equations 
and physical models for hypersonic air flows in thermal and chemical nonequi- 
librium. NASA TP 2867, February 1989. 

[16] P. A. Gnoff'o. An upwind-biased, point-implicit relaxation algorithm for viscous, 
compressible perfect-gas flows. NASA TP 2953, February 1990. 

[17] Bram van Leer, James L. Thomas, Philip L. Roe, and Richard W. Newsome. 
A comparison of numerical flux formulas for the Euler and Navier-Stokes equa- 
tions. AIAA Paper 87-1104, January 1987. 

[18] R. C. Swanson and E. Turkel. Aspects of a high-resolution scheme for the 
Navier-Stokes equations. AIAA Paper 93-3372, July 1993. 



BIBLIOGRAPHY 375 

[19] T. J. Barth and D. C. Jesperson. The design and application of upwind schemes 
on unstructured meshes. AIAA Paper 89-0366, January 1989. 

[20] Timothy J. Barth. Numerical aspects of computing viscous high Reynolds num- 
ber flows on unstructured meshes. AIAA Paper 91-0721, January 1991. 

[21] Timothy J. Barth. Recent developments in high order k-exact reconstruction 
on unstructured meshes. AIAA Paper 93-0668, January 1993. 

[22] Timothy J. Barth. Aspects of unstructured grids and flnite-volume solvers 
for the Euler and Navier-Stokes equations. In Computational Fluid Dynamics, 
number 1994-04 in Lecture Series, von Karman Institute for Fluid Dynamics, 
1994. 

[23] David Lee Whitaker. Two-Dimensional Euler Computations on a Triangular 
Mesh Using an Upwind, Finite- Volume Scheme. PhD thesis, VPI&SU, Blacks- 
burg, VA, December 1988. 

[24] D. L. Whitaker and B. Grossman. Two-dimensional Euler computations on a 
triangular mesh using an upwind, flnite-volume scheme. AIAA Paper 89-0470, 
January 1989. 

[25] Michael Fey. Multidimensional upwinding. Part I. The method of transport for 
solving the Euler equations. Journal of Computational Physics, 143(1):159-180, 
June 1998. 

[26] Michael Fey. Multidimensional upwinding. Part II. Decomposition of the Eu- 
ler equations into advection equations. Journal of Computational Physics, 
143(1):181-199, June 1998. 

[27] H. Deconinck, R. Struijs, and P. L. Roe. Fluctuation splitting for multidimen- 
sional convection problems: An alternative to finite volume and flnite element 
methods. In Computational Fluid Dynamics, number 1990-03 in Lecture Series, 
von Karman Institute for Fluid Dynamics, March 1990. 



376 BIBLIOGRAPHY 

[28] P. L. Roe. "Optimum" upwind advection on a triangular mesh. Report 90-75, 
ICASE, Hampton, October 1990. 

[29] Ch. Hirsch. A general analysis of two-dimensional convection schemes. In 
Computational Fluid Dynamics, Lecture Series 1991-01. von Karman Institute 
for Fluid Dynamics, February 1991. 

[-30] H. Deconinck, R. Struijs, G. Bourgois, and P. L. Roe. Compact advection 
schemes on unstructured grids. In Computational Fluid Dynamics, number 
1993-04 in Lecture Series, von Karman Institute for Fluid Dynamics, March 
1993. 

[31] R. Struijs. The fluctuation splitting method. In Cornehs B. Vreugdenhil and 
Barry Koren, editors. Numerical Methods for Advection- Diffusion Problems, 
volume 45 of Notes on numerical fluid mechanics, chapter 11, pages 261-289. 
Vieweg, Germany, 1993. 

[32] Phihp L. Roe. Fluctuation splitting schemes on optimal grids. AIAA Paper 
97-2034, June 1997. 

[33] R. Struijs, H. Deconinck, and P. L. Roe. Fluctuation spliting schemes for the 
2D Euler equations. In Computational Fluid Dynamics, Lecture Series 1991-01. 
von Karman Institute for Fluid Dynamics, Belgium, February 1991. 

[34] R. Struijs, H. Deconinck, P. de Palma, P. Roe, and K. G. Powell. Progress 
on multidimensional upwind Euler solvers for unstructured grids. AIAA Paper 
91-1550, June 1991. 

[35] Michael Rudgyard. Cell vertex methods for steady inviscid flow. In Computa- 
tional Fluid Dynamics, number 1993-04 in Lecture Series, von Karman Institute 
for Fluid Dynamics, Belgium, March 1993. 

[36] H. Deconinck, P. L. Roe, and R. Struijs. A multidimensional generalization of 
Roe's flux difl'erence splitter for the Euler equations. Computers and Fluids, 
22(2/3):215-222, 1993. 



BIBLIOGRAPHY 377 

[37] H. Deconinck, H. Paillere, R. Struijs, and P. L. Roe. Multidimensional up- 
wind schemes based on fluctuation-splitting for systems of conservation laws. 
Computational Mechanics, 11:323-340, 1993. 

[38] H. Paillere, H. Deconinck, R. Struijs, P. L. Roe, L. M. Mesaros, and J.-D. 
Miiller. Computations of inviscid compressible flows using fluctuation-splitting 
on triangular meshes. AIAA Paper 93-3301, July 1993. 

[39] L. A. Catalano, P. De Palma, G. Pascazio, and M. Napolitano. A higher-order 
multidimensional upwind solution-adaptive multigrid solver for compressible 
flows. In Lecture Notes in Physics, number 453, pages 241-245, 1995. 

[40] Lisa Marie Mesaros. Multi-Dimensional Fluctuation Splitting Schemes for the 
Euler Equations on Unstructured Grids. PhD thesis. University of Michigan, 
USA, 1995. 

[41] L. A. Catalano, P. de Palma, G. Pascazio, and M. Napolitano. A contribu- 
tion to multidimensional upwinding and fluctuation splitting: Nonlinear matrix 
schemes. AIAA Paper 97-2031, June 1997. 

[42] M. E. Hubbard and M. J. Baines. Conservative multidimensional upwinding for 
the steady two-dimensional shallow water equations. Journal of Computational 
Physics, 138:419-448, November 1997. 

[43] W. M. Eppard and B. Grossman. A multi-dimensional kinetic-based upwind 
solver for the Euler equations. AIAA 93-3303, July 1993. 

[44] Benoit Perthame and Youchun Qiu. A variant of van Leer's method for multi- 
dimensional systems of conservation laws. Journal of Computational Physics, 
112:370-381, 1994. 

[45] B. Perthame, Y. Qiu, and B. Stoufflet. Kinetic discretization of gas dynamics 
using fluctuation-splitting schemes. Rapport interne 94-11, Centre National de 
la Recherche Scientiflque, Toulouse, 1994. 



378 BIBLIOGRAPHY 

[46] Sergei V. Pevchin. New Efficient Contact Discontinuity Capturing Techniques in 
Supersonic Flow Simulations. PhD thesis, Virginia Tech, Blacksburg, Virginia, 
September 1996. 

[47] B. Grossman, S. V. Pevchin, and W. M. Eppard. Multi-dimensional, upwind, 
Euler algorithms from kinetic theory. In D. A. Caughe}^ and VI. M. Hafez, 
editors. Frontiers of Computational Fluid Dynamics 1994, chapter 11, pages 
169-188. John Wiley k Sons, New York, 1994. 

[48] H. Paillere, J. Boxho, G. Degrez, and H. Deconinck. Multidimensional upwind 
residual distribution schemes for the convection-diffusion equation. Interna- 
tional Journal for Numerical Methods in Fluids, 23:923-936, 1996. 

[49] H. Paillere, E. Van der Weide, and H. Deconinck. Vlultidimensional upwind 
methods for inviscid and viscous compressible ffows. In Computational Fluid 
Dynamics, number 1995-02 in Lecture Series, von Karman Institute, Belgium, 
March 1995. 

[50] George Timothy Tomaich. A Genuinely Multi-Dimensional Upwinding Algo- 
rithm for the Navier-Stokes Equations on Unstructured Grids Using a Compact, 
Highly-Parallelizable Spatial Discretization. PhD thesis. University of Michigan, 
USA, 1995. 

[51] J.-C. Carette and H. Deconinck. Adaptive hybrid remeshing and 

SUPG/MultiD-upwind solver for compressible high Reynolds number flows. 
AIAA Paper 97-1857, May 1997. 

[52] S. Mitran, D. Caraeni, and D. Livescu. Large eddy simulation of unsteady 
rotor-stator interaction in a centrifugal compressor. AIAA Paper 97-3006, July 
1997. 

[53] David Sidilkover and Achi Brandt. Multigrid solution to steady-state two-di- 
mensional conservation laws. SIAM Journal of Numerical Analysis, 30(1):249- 
274, February 1993. 



BIBLIOGRAPHY 379 

[54] Thomas W. Roberts, David Sidilkover, and R. C. Swanson. Textbook multigrid 
efficiency for the steady Euler equations. AIAA Paper 97-1949, May 1997. 

[55] David Sidilkover. Some approaches towards constructing optimally efficient 
multigrid solvers for the inviscid flow equations. Report 97-39, ICASE, Hamp- 
ton, August 1997. 

[56] S. Spekreijse. Multigrid solution of monotone second-order discretization of 
hyperbolic conservation laws. Mathematics of Computation, 49:135-155, 1987. 

[57] P. A. Gnoff'o. A finite-volume, adaptive grid algorithm applied to planetary 
entry flowfields. AIAA Journal, 21(9):1249-1254, September 1983. 

[58] A. D. Harvey, S. Acharya, S. L. Lawrence, and S. Cheung. A solution adaptive 
grid procedure for an upwind parabolized flow solver. AIAA Paper 90-1567, 
June 1990. 

[59] A. D. Harvey, S. Acharya, and S. L. Lawrence. A solution-adaptive grid pro- 
cedure for the three-dimensional parabolized Navier-Stokes equations. AIAA 
Paper 91-0104, January 1991. 

[60] A. D. Harvey, S. Acharya, and S. L. Lawrence. Prediction of complex three- 
dimensional flowfields using a solution-adaptive mesh algorithm. AIAA Paper 
91-3237, September 1991. 

[61] Jean-Frangois Hetu and Dominique H. Pelletier. Adaptive remeshing for viscous 
incompressible flows. AIAA Journal, 30(8): 1986-1992, August 1992. 

[62] Jean-Frangois Hetu and Dominique H. Pelletier. Fast, adaptive finite element 
scheme for viscous incompressible flows. AIAA Journal, 30(ll):2677-2682, 
November 1992. 

[63] V. Parthasarathy and Y. Kallinderis. Adaptive prismatic-tetrahedral grid re- 
finement and redistribution for viscous flows. AIAA Journal, 34(4):707-716, 
April 1996. 



380 BIBLIOGRAPHY 

[64] David L. Marcum. Adaptive unstructured grid generation for viscous flow ap- 
plications. AIAA Journal, 34(ll):2440-2443, November 1996. 

[65] F. Ilinca, D. Pelletier, and L. Ignat. Adaptive finite element solution of com- 
pressible turbulent flows. AIAA Paper 98-0229, January 1998. 

[66] F. Ilinca, D. Pelletier, and L. Ignat. Adaptive finite element solution of com- 
pressible turbulent flows. AIAA Journal, 36(12):2187-2194, December 1998. 

[67] E. Turgeon, D. Pelletier, and L. Ignat. Effects of adaptivity on various flnite 
element schemes for turbulent heat transfer and flow predictions. AIAA Paper 
98-0853, January 1998. 

[68] O. C. Zienkiewicz and J. Z. Zhu. The superconvergent patch recovery and 
a posteriori error estimates. Part 1: The recovery technique. International 
Journal for Numerical Methods in Engineering, 33:1331-1364, 1992. 

[69] O. C. Zienkiewicz and J. Z. Zhu. The superconvergent patch recovery and a 
posteriori error estimates. Part 2: Error estimates and adaptivity. International 
Journal for Numerical Methods in Engineering, 33:1365-1382, 1992. 

[70] D. Ait-Ali-Yahia, W. G. Habashi, and A. Tam. A directionally adaptive method- 
ology using and edge-based error estimate on quadrilateral grids. International 
Journal for Numerical Methods in Fluids, 23:673-690, 1996. 

[71] J. Dompierre, M.-G. Vallet, M. Fortin, Y. Bourgault, and W. G. Habashi. 
Anisotropic mesh adaption: Towards a solver and user independent CFD. AIAA 
Paper 97-0861, January 1997. 

[72] F. Taghaddosi, W. G. Habashi, G. Guevremont, and D. Ait-Ali-Yahia. An 
adaptive least-squares method for the compressible Euler equations. AIAA 
Paper 97-2097, June 1997. 

[73] Djaff'ar Ait-Ali-Yahia and Wadgi G. Habashi. Finite element adaptive 
method for hypersonic thermochemical nonequilibrium ffows. AIAA Journal, 
35(8):1294-1302, August 1997. 



BIBLIOGRAPHY 381 

[74] W. G. Habashi, M. Fortin, J. Dompierre, M.-G. Vallet, and Y. Bourgault. 
Anisotropic mesh adaption: A step towards a mesh-independent and user- 
independent CFD. In V. Venkatakrishnan et al, editor, Barriers and Challenges 
in Computational Fluid Dynamics, pages 99-117. Kluwer Academic Publisher, 
1998. 

[75] A. Tam, M. P. Robichaud, P. Tremblay, W. G. Habashi, M. Hohmeyer, 
G. Guevremont, M. G. Peeters, and P. Germain. A 3-D adaptive anisotropic 
method for external and internal flows. AIAA Paper 98-0771, January 1998. 

[76] W. G. Habashi, J. Dompierre, Y. Bourgault, M. Fortin, and M.-G. Vallet. 
Certifiable computational fluid dynamics through mesh optimization. AIAA 
Journal, 36(5):703-711, May 1998. 

[77] Philip Roe. Compounded of many simples. In V. Venkatakrishnan et al, edi- 
tor. Barriers and Challenges in Computational Fluid Dynamics, pages 241-258. 
Kluwer Academic Publishers, 1998. 

[78] J.-Y. Trepanier, M. Paraschivoiu, M. Reggio, and R. Camarero. A conservative 
shock fitting method on unstructured grids. Journal of Computational Physics, 
126(2):421-433, July 1996. 

[79] Paresh Parikh, Sudheer N. Nayani, and Ijaz Parpia. Multidimensional wave 
models for solution-adaptive grid generation. SBIR Final Report Contract No. 

NAS2-13797, NASA, August 1993. 

[80] P. L. Roe. Characteristic-based schemes for the Euler equations. Annual Review 
of Fluid Mechanics, 18:337-365, 1986. 

[81] R. Courant, E. Isaacson, and M. Reeves. On the solution of nonlinear hyper- 
bolic differential equations by finite differences. Pure and Applied Mathematics, 
5:243-255, 1952. 

[82] A. Harten and J. M. Hyman. Self adjusting grid methods for one-dimensional 
hyperbolic conservation laws. Journal of Computational Physics, 50:235-269, 
1983. 



382 BIBLIOGRAPHY 

[83] W. Kyle Anderson and Daryl L. Bonhaus. An implicit upwind algorithm 
for computing turbulent flows on unstructured grids. Computers and Fluids, 
23(1):1-21, January 1994. 

[84] William B. Bickford. A First Course in the Finite Element Method. Richard 
D. Irwin, Inc., Boston, 1990. 

[85] Klaus-Jiirgen Bathe. Finite Element Procedures in Engineering Analysis. 
Prentice-Hall, Inc., Englewood Cliffs, USA, 1982. 

[86] L. Euler. Principes generaux du mouvement des fiuides. Historical Academy of 
Berlin, Opera Omnia II, 12:54-92, 1755. 

[87] M. Navier. Memoire sur les lois du mouvement des fiuides. Memoire de 
I Academic des Sciences, 6:389, 1827. 

[88] G. G. Stokes. On the theories of the internal friction of fluids in motion. Trans. 
Cambridge Philosophical Society, 8:227-319, 1849. 

[89] Dale A. Anderson, John G. Tannehill, and Richard H. Pletcher. Computational 
Fluid Mechanics and Heat Transfer. Taylor and Francis, 1984. 

[90] Christopher W. S. Bruner and Robert W. Walters. Parallelization of the Euler 
equations on unstructured grids. AIAA Paper 97-1894, June 1997. 

[91] Shahyar Pirzadeh. Three-dimensional unstructured viscous grids by the 
advancing-layers method. AIAA Journal, 34(l):43-49, January 1996. 

[92] S. Pirzadeh. Progress toward a user-oriented unstructured viscous grid genera- 
tor. AIAA Paper 96-0031, January 1996. 

[93] R. M. Smith and A. G. Hutton. The numerical treatment of advection: A 
performance comparison of current methods. Numerical Heat Transfer, 5:439- 
461, 1982. 

[94] S. A. Warsi and L. A. Kania. Hybrid grid Navier-Stokes solver with h-rehnement 
adaption. AIAA Paper 98-0545, January 1998. 



BIBLIOGRAPHY 383 

[95] D. J. Mavriplis. Multigrid strategies for viscous flow solvers on anisotropic 
unstructured meshes. Report No. 98-6, ICASE, Hampton, January 1998. 

[96] E. Turgeon, L. Ignat, and D. Pelletier. Computation of jet impingement heat 
transfer by adaptive finite element algorithm. AIAA Paper 98-2585, June 1998. 

[97] H. Zhang, J. Y. Trepanier, M. Reggio, and R. Camarero. A Navier-Stokes solver 
for stretched triangular grids. AIAA Paper 92-0183, January 1992. 

[98] W. Kyle Anderson and Daryl L. Bonhaus. Airfoil design on unstructured grids 
for turbulent flows. AIAA Journal, 37(2): 185-191, February 1999. 

[99] David A. Venditti and David L. Darmofal. A multilevel error estimation and 
grid adaptive strategy for improving the accuracy of integral outputs. AIAA 
Paper 99-3292, June 1999. 

[100] H. Paillere, H. Deconinck, and E. van der Weide. Upwind residual distribu- 
tion methods for compressible flow: An alternative to flnite volume and finite 
element methods. Part I: Scalar schemes. In Computational Fluid Dynamics, 
number 1997-02 in Lecture Series, von Karman Institute, Belgium, March 1997. 

[101] Ashok K. Shinghal. Key elements of verification and validation of CFD software. 
AIAA Paper 98-2639, June 1998. 

[102] Patrick J. Roache. Verification of codes and calculations. AIAA Journal, 
36(5):696-702, May 1998. 

[103] D. Caraeni, M. Caraeni, and L. Fuchs. A parallel multidimensional upwind 
algorithm for LES. AIAA 2001-2547, June 2001. 

[104] Rajendran Mohanraj, Yedidia Neumeier, and Ben T. Zinn. Characteristic-based 
treatment of source terms in Euler equations for Roe scheme. AIAA Journal, 
37(4):417-424, April 1999. 

[105] Philip L. Roe. Personal communication in Anaheim, California. University of 
Michigan, Ann Arbor, Michigan, June 2001. 



384 BIBLIOGRAPHY 

[106] Andreas C. Haselbacher, James J. McGuirk, and Gary J. Page. Finite-volume 
discretization aspects for viscous flows on mixed unstructured grids. AIAA 
Journal, 37(2):177-184, February 1999. 

[107] Andreas C. Haselbacher, James J. McGuirk, and Gary J. Page. Finite-volume 
discretisation aspects for viscous flows on mixed unstructured grids. AIAA 
Paper 97-1946, June 1997. 

[108] R. Courant, K. O. Friedrichs, and H. Lewy. Uber die partiellen difl'erenzen- 
gleichurgen der mathematischen physik. Mathematische Annalen, 100:32-74, 
1928. (see also Ref. [132]). 

[109] Donald E. Knuth. Literate Programming. Center for the Study of Language 
and Information, Stanford, 1992. 

[110] J. W. Maccoll. The conical shock wave formed by a cone moving at high speed. 
Proceedings of the Royal Society for Aeronautics, 159, 1937. 

[Ill] H. Blasius. The boundary layers in fluids with little friction. NACA TM 1256, 
February 1950. 

[112] William L. Kleb, William A. Wood, and Bram van Leer. Efficient multi-stage 
time marching for viscous flows via local preconditioning. AIAA Paper 99-3267, 
June 1999. 

[113] F. McNeil Cheatwood and Peter A. Gnoflb. User's manual for the Langley 
aerothermodynamic upwind relaxation algorithm (LAURA). NASA TM 4674, 
April 1996. 

[114] V. Venkatakrishnan. Convergence to steady state solutions of the Euler equa- 
tions on unstructured grids with limiters. Journal of Computational Physics, 
118:120-130, 1995. 

[115] Brian R. HoUis. Experimental and computational aerothermodynamics of a 
Mars entry vehicle. NASA CR 201633, December 1996. 



BIBLIOGRAPHY 385 

[116] E. R. Beeman and S. A. Powers. A method for determining the complete flow 
field around conical wings at supersonic/hypersonic speeds. AIAA Paper 69- 
646, June 1969. 

[117] B. R. Mollis and J. N. Perkins. High-enthalpy aerothermodynamics of a mars 
entry vehicle part 1: Experimental results. Journal of Spacecraft and Rockets, 
34(4):449-456, July 1997. 

[118] B. R. Mollis and J. N. Perkins. Migh-enthalpy aerothermodynamics of a mars 
entry vehicle part 2: Computational results. Journal of Spacecraft and Rockets, 
34(4):457-463, July 1997. 

[119] G. V. Candler and R. W. MacCormack. Mypersonic flow past 3-D configura- 
tions. AIAA Paper 87-0480, January 1987. 

[120] K. M. Peery and S. T. Imlay. Blunt-body flow simulations. AIAA Paper 88- 
2904, July 1998. 

[121] T. W. Roberts. The behaviour of flux difterence splitting schemes near slowly 
moving shock waves. Journal of Computational Physics, 90:141-160, 1990. 

[122] James J. Quirk. A Contribution to the Great Riemann Solver Debate. NASA 
CR 191409, November 1992. 

[123] Peter A. Gnoffb. Personal communication. NASA Langley Research Center, 
Mampton, Virginia, August 2001. 

[124] Nail K. Yamaleev and Mark M. Carpenter. On accuracy of adaptive grid meth- 
ods for captured shocks, submitted to Journal of Computational Physics, 2001. 

[125] Charles Hirsch. Numerical Computation of Internal and External Flows — 
Volume 2: Computational Methods for Inviscid and Viscous Flows. John Wiley 
k Sons Ltd., 1990. 

[126] P. K. Sweby. Migh resolution schemes using flux limiters for hyperbolic conser- 
vation laws. SIAM Journal of Numerical Analysis, 21:995-1011, 1984. 



386 BIBLIOGRAPHY 

[127] Philip L. Roe. Some contributions to the modelling of discontinuous flows. In 
B. E. Engquist, S. Osher, and R. C. J. Somerville, editors, Large-Scale Com- 
putations in Fluid Mechanics, volume 22 of Lectures in Applied Mathematics, 
pages 163-193. American Mathematical Society, Providence, RI, 1985. 

[128] S. R. Chakravarthy and S. Osher. High resolution applications of the Osher 
upwind scheme for the Euler equations. AIAA Paper 83-1943, June 1983. 

[129] G. D. van Albada, B. van Leer, and W. W. Roberts. A comparative study 
of computational methods in cosmic gas dynamics. Report 81-24, ICASE, 
Hampton, August 1981. 

[130] L. H. Back. Conservation equations of a viscous, heat-conducting fluid in curvi- 
linear orthogonal coordinates. NASA TR 32-1332, September 1968. 

[131] Sheng-Tao Yu. Convenient method to convert two-dimensional CFD codes into 
axisymmetric ones. Journal of Propulsion and Power, 9(3):493-495, May 1993. 

[132] R. Courant, K. O. Friedrichs, and H. Lewy. On the partial diflerence equations 
of mathematical physics. IBM Journal, 5:215-234, March 1967. (also as AEC 
Research and Development Report NYO-7689). 



REPORT DOCUMENTATION PAGE 



Form Approved 
OMB No. 0704-0188 



Public reporting burden for ttnis coiiection of information is estimated to average 1 tnour per response, including the time for reviewing instructions, searctning existing data sources, 
gattnering and maintaining the data needed, and completing and reviewing the collection of information. Send comments regarding this burden estimate or any other aspect of this 
collection of information, including suggestions for reducing this burden, to Washington Headquarters Services, Directorate for Information Operations and Reports, 1215 Jefferson Davis 
Highway, Suite 1204, Arlington, VA 22202^302, and to the Office of Management and Budget, Papen«ork Reduction Project (0704-0188), Washington, DC 20603. 



1. AGENCY USE ONLY (Leave blank) 



2. REPORT DATE 

April 2002 



3. REPORT TYPE AND DATES COVERED 

Technical Publication 



4. TITLE AND SUBTITLE 

Multi-dimensional Upwind Fluctuation Splitting Scheme with Mesh 
Adaption for Hypersonic Viscous Flow 



6. AUTHOR(S) 

William A. Wood 



5. FUNDING NUMBERS 

WU 706-85-41-01 



7. PERFORMING ORGANIZATION NAME(S) AND ADDRESS(ES) 

NASA Langley Research Center 
Hampton, VA 23681-2199 



8. PERFORMING ORGANIZATION 
REPORT NUMBER 

L-18147 



9. SPONSORING/MONITORING AGENCY NAME(S) AND ADDRESS(ES) 

National Aeronautics and Space Administration 
Washington, DC 20546-0001 



10. SPONSORING/MONITORING 
AGENCY REPORT NUMBER 

NASA/TP-2002-21 1640 



11. SUPPLEMENTARY NOTES 

The information presented in this report was offered as a dissertation for the degree of Doctor of Philosophy, 
Virginia Polytechnic Institute and State University, November 9, 2001 . 



12a. DISTRIBUTION/AVAILABILITY STATEMENT 

Unclassified-Unlimited 

Subject Category 64 Distribution: Standard 

Availability: NASA CASI (301) 621-0390 



12b. DISTRIBUTION CODE 



13. ABSTRACT (Maximum 200 words) 

A multi-dimensional upwind fluctuation splitting scheme is developed and implemented for two-dimensional and 
axisymmetric formulations of the Navier-Stokes equations on unstructured meshes. Key features of the scheme 
are the compact stencil, full upwinding, and non-linear discretization which allow for second-order accuracy with 
enforced positivity Throughout, the fluctuation splitting scheme is compared to a current state-of-the-art finite 
volume approach, a second-order, dual mesh upwind flux difference splitting scheme (DMFDSFV), and is shown to 
produce more accurate results using fewer computer resources for a wide range of test cases. A Blasius flat plate 
viscous validation case reveals a more accurate w-velocity profile for fluctuation splitting, and the reduced artificial 
dissipation production is shown relative to DMFDSFV. Remarkably the fluctuation splitting scheme shows grid 
converged skin friction coefficients with only five points in the boundary layer for this case. The second half of the 
report develops a local, compact, anisotropic unstructured mesh adaption scheme in conjunction with the 
multi-dimensional upwind solver, exhibiting a characteristic alignment behavior for scalar problems. The adaption 
strategy is extended to the two-dimensional and axisymmetric Navier-Stokes equations of motion through the 
concept of fluctuation minimization. 



14. SUBJECT TERMS 

CFD, Fluctuation Splitting, Mesh Adaption 



15. NUMBER OF PAGES 

413 



16. PRICE CODE 



17. SECURITY CLASSIFICATION 
OF REPORT 

Unclassified 



18. SECURITY CLASSIFICATION 
OF THIS PAGE 

Unclassified 



19. SECURITY CLASSIFICATION 
OF ABSTRACT 

Unclassified 



20. LIMITATION OF ABSTRACT 
UL 



NSN 7540-01-280-5500 



Standard Form 298 (Rev. 2-89) 

Prescribed by ANSI Std. Z39-18 
298-102 



