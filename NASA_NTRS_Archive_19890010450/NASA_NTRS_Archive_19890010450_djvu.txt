ORIGINAL PAGE IS 
OF POOR QUALITY 


N89-19821 


AN EXPERT SYSTEM FOR SHUTTLE 
AND 

SATELLITE RADAR TRACKER SCHEDULING 


Paul Mitchell 


Artificial Intelligence Section - FM72 
Technology Development and Applications Branch 
Mission Planning and Analysis Division 
NASA/Johnson Space Center 
Houston, Texas 77058 


Abstract: 

This expert system automates and optimizes radar tracker 
selection for shuttle missions. The expert system is written in the 
Fortran and C languages on an HP9000. It is portable to any 
UNIX machine having both ANSI-77 Fortran and C language 
compilers. It is a rule based expert system that selects tracking 
stations from the S-band and C-band radar stations and the 
TDRSS east and TDRSS west satellites under a variety of 
conditions. The expert system was prototyped on the Symbolics 
in the ART and ZetaLisp. After the prototype demonstrated an 
acceptable automation of the process of selecting tracking 
stations to support the orbit determination requirements for 
Shuttle missions, the basic ART rules of the prototype were 
ported to the HP9000 computer using the CLIPS language. CLIPS 
is a forward-chaining rule-based expert system language written 
in "C“. Prior to the development of this expert system the 
selection process was a tedious manual process and, expensive in 
terms of human resources. Manual tracking station selection 
required from 1 to 2 man weeks per mission; whereas the expert 
system can complete the selection process in about 2 hours. 

Introduction: 

Expert system technology is a major subset of Artificial 
Intelligence (Al) and has been aggressively pursued by Al 
researchers since the early 1970's. In the last few years, both 
government and commercial application developers have given 
expert systems considerable attention as well. Expert systems 
have a number of characteristics which make them an attractive 
solution to problems which require complex expertise: they 
don't quit, retire, or become ill; they always work at their 
highest level of capability; they can be applied to hostile 
environments or repetitious problems; and they potentially 
offer a computer-based solution to problems that previously 
required a human expert. 

This paper describes an expert system that automates the 
laborious and time-consuming process of selecting radar 
tracking systems prior to each Shuttle flight. The tracker 
selection is necessary in order to insure that the mission has 
adequate tracking coverage to provide required position and 
velocity information. The data obtained from these trackers 
provides the information for the orbit determination process in 
the MCC and therefore is crucial for performing maneuvers 

This development expert system also served as a case 
history for the development and delivery of expert systems. The 
initial prototype of TRACKEX was developed in ART on a 
Symbolics machine in three weeks. There were approximately 
one hundred ART rules with an average length of twenty lines 
There were also five hundred lines of LISP code, primarily 
providing a user interface. The target machine for the delivery 
system was an HP9000. The conversion of the one hundred ART 


rules to CLIPS took one week, and three weeks were spent in 
converting the LISP to FORTRAN. 

EXPERT SYSTEM OPERATION: 

The expert system TRACKEX is a rule-based software 
package written in the C and FORTRAN languages. The rules are 
coded in the production rule language CLIPS. The use of CLIPS 
was driven by the choice of the target machine: a unix-based 
HP9000, inputting the C and FORTRAN compiler. FORTRAN 
subroutines and C functions were developed to replace the LISP 
I/O interface of the prototype. The released product consists of 
295 rules, 52 FORTRAN subroutines and 23 user-defined C 
functions. 

TRACKEX assigns the best possible group of tracking 
systems from the total set of trackers available during each 
orbit. This selection is made with consideration given to 
geometry, no two stations from the same geometric area; to 
expense of operation, some sites are always active and are 
therefore more economical to use than a site that has to be 
manned specially for the mission; and to subsequent orbit 
coverage, especially for a Target vehicle. Once a tracker is 
assigned to a Target, it is assigned in subsequent orbits until its 
elevation angle, with respect to the tracker's local horizontal, 
falls below an acceptable limit. 

TRACKEX will make tracker selections for up to four 
vehicles for batches of ten orbits at a time. The user defines the 
preferred priorities when more than one vehicle is to be 
considered and this priority ordering is maintained throughout 
the entire selection process unless the user modifies the 
priorities during the run. TDRSS and S-band systems can track 
multiple vehicles during the same orbit. However, most Targets 
will not have S-band transponders and will therefore be skin 
tracked. Skin tracking prohibits the tracking of more than one 
vehicle at a time. Therefore, multiple Targets may mean sparsity 
of available trackers, making the assignment of vehicle priority 
very important. 

The number of user inputs are minimal and are menu 
driven thus, training a user to use the system is quickly 
accomplished. The expert system can be run in a completely 
automatic mode after the program has been properly initialized 
and all user required inputs are made. 

The tracker selection matrix table is described in the 
appendix, and the included table is an example of the expert 
system's output using simulated data The table is formatted 
according to the users' specifications and is intended to be 
adequate for insertion into all documentation requiring it's 
information content. 


21 


TRACKEX has proven to be both accurate and fast. During 
the verification phase, it was found to be correct in these cases 
where the initial human expert solution differed from the 
expert systems selection. 

The verification for TRACKEX was an exhaustive 
case-by-case comparison of human expertise versus TRACKEX 
automation. This was possible since there are only four groups 
of ground stations, each containing a limited number of specific 
tracking sites. The verification cases were designed so that each 
tracker would be selected at least once at the appropriate time 
and under a variety of conditions. Each of the three tracking 
phases, non-critical, critical, and complex were exercised to the 
fullest extent. 

The human expert designed the test cases to cause every 
rule in the expert system to be fired at least once. The expert 
then made independent tracking system selections per case 
prior to running TRACKEX. When there was a difference in the 
selections, TRACKEX was ultimately found to be correct. 

In addition to being accurate, TRACKEX is capable of 
making the tracker selection for an entire Shuttle Mission in 
about two hours of computer time, whereas the manual method 
takes from one to two man weeks and is subject to error (a less 
than optimal selection) because it is very difficult for a person to 
remember and constantly apply 295 rules. 

Conclusion: 

Although an entire industry has grown to support the 
development of expert system tools and applications, with a 
wide variety of both hardware and software products now 
available, expert systems have generally failed to make a major 
impact in application environments where there is a 
requirement for specific hardware or integration with 
procedural languages such as ADA, C, or FORTRAN. The 
problem of delivering a functional application, especially in 
embedded systems, has proven to be a major stumbling block. 

This stumbling block was avoided in this project by using 
the CLIPS language for the delivery of TRACKEX. 

The CLIPS language provides expert system technology in 
a conventional language with the capability of complete 
integration with conventional procedural languages. 

Acknowledgments : 

The author wishes to acknowledge the most appreciated 
aid provided by Capt. Richard Kidd, USAF for his expertise in the 
selection criteria and to Chris Culbert, Gary Riley, and Lui Wang 
for their technical assistance. 

References: 

Inference Corporation, ART Reference Manual , (Los 
Angeles, California: 1986). 

Gilbert, Chris, CLIPS Reference Manual, NASA Technical 
Memo FM8(87-220), (Houston, Texas: NASA/JSC, 1986). 

Giarratano, Joe, The CLIPS User's Guide . NASA Internal 
Note 86-FM-25, (Houston, Texas: NASA/JSC, 1986). 

Mitchell, Paul, Completion and Delivery of TRACKEX . 
NASA Technical Memo, FM7{87-353), (Houston, Texas: 
NASA/JSC, 1987). 


Appendix: 

DESCRIPTION OF THE TRACKER SELECTION MATRIX 

The output tables containing the tracker schedule are 
stored in permanent files for inclusion in documentation 
requesting the trackers to be scheduled for a particular orbital 
mission. 

The following is a description of each entry to the table: 

a) Title— Tracker Support Matrix 

The table is a matrix of the selected tracker site 
(row) vs the orbit in which it is available (column). 

b) Sub-titles 

Flight: The flight acronym is picked up 

automatically from the visibility files which contain 
the flight's predicted tracker acquisition and loss of 
signal profile. 

Orbits: The ten (10) orbits over which the current 
table extends are indicated by their starting orbit 
number and the end orbit number for quick 
reference purposes. 

Cycle: This is an integer that indicates the version 
number for documentation purposes. 

The full date and time of the table's creation is 
included again, for documentation and referencing 
purposes. 

c) The table entries 

The column titled "SITE" contains the Tracker 
acronym for a Tracker (S-band, C-band, or Tdrss) 
selected at least once during the ten-orbit period. 
For instance the first acronym is TDRE and it has 
entries in all ten orbits. 

The entry itself is coded such that the following 
information is revealed : 

a) The first single symbol (C, X, or *) indicates 
the vehicular phase for that particular 
vehicle, (see note at bottom of table) 

b) The next 2 character symbol is a user input, 
defined at run time, and indicates the vehicle 
to which the data pertains. Thus, the user 
can tailor this entry to best describe the 
vehicle name and/or type. For example, an 
OA entry could signify Orbiter A. 

c) The last symbol is an two-digit integer 
indicating the maximum elevation angle for 
that tracker during the orbit of interest. For 
example, the ninth row contains a selection 
for BDQC in orbit 2. BDQC is the acronym for 
a C-BAND tracker on the island of Bermuda. 
The entry indicates that the Orbiter vehicle, 
OA, is in Complex tracking phase (X) and had 
a maximum elevation angle of 25 degrees. 

The symbols are completely defined in a post-script to 
each table. 


22 






Trader 

Support Matrix 




1 Plij 

?ht :FLT1 


Orbits: 1 - 

10 


i Cyc] 

Le: 1 


Thu 

Mar 24 10 

14:14 

CST 19881 

! SITE 

f 1 12 13 

14 15 

16 17 

18 19 

1 10 

ISITE 1 

i i 

ITDRE 

I XOAOO 1 XOAOO ! XOAOO 

i *OACG 1 * 

OAOOI *OAQO 1 *OAOO 

I * OAOO 1 * OAOO 1 * OAOO 1 TDRE 1 

till] 

ITDRW 

I XOAOO 1 XOAOO 1 XOAOO 

1 *OAOO 1 * 

OAOO I *OAOO 1 *OAOQ 

t 'OAOO 1 *OAOO 1 *OAOO 1 TDRW I 

ii i i i 

IKMRC 

1 IXOA25I 

! 1 

1 1 

1 1 

1 

IKMRC 1 
1 1 

IKMTC 

I 1 IXOA25 

1 1 

1 1 


1 

IKMTC 1 
1 1 

IKMAC 

IXOA25! 1 

1 1 

1 1 

1 1 

i 

IKMAC 1 
1 1 

IKPTC 

1 1 1 

I 1XOA25I 

1 1 

1 1 

1 1 

i 

IKPTC 1 

1 PTPC 

1 1 1 

1 1 XOA25 1 

1 1 

1 1 

t i 

i i 

i 

1 PTPC 1 

1 WLPC 

IXOA25I 1 

1 1 

1 1 

i i 

i i 

i 

Iwlpc i 
1 1 

IBDQC 

1 1 1 

1 IXOA25I 

* 1 1 1 

1 1 

i ! 

— i i 

i i 

i 

IBDQC 1 

1 ANTC 

1 1 1 XOA25 

1 1 

i ! 

i * 

i i 

i 

1 ANTC 1 
1 1 

IASCC 

I ! i 

i XOA25 t 1 

1 I 

1 i 

i i 

i i 

i 

IASCC i 
1 1 

1 ASTC 

1 1 1 XOA25 

1 1 1 

1 1 

1 1 

i i - 

i i 

i 

Iastc 1 
1 1 

1 SITE 

" 1 1 1 

11 12 13 

14 15 

16 \7 

18 19 

! io 

ISITE 1 


Vehicles: OA = Orbiter TA = Target OB = Orbiter TB - Target 
Selected Sites: * = Non-eritical C = Critical X = Complex 


23 




