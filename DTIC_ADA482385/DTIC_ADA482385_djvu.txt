
Visualization of a Text Network Structure Using X3D 


by Andrew M. Neiderer 



ARL-MR-691 


May 2008 


Approved for public release; distribution is unlimited. 







NOTICES 

Disclaimers 

The findings in this report are not to be construed as an official Department of the Army position unless 
so designated by other authorized documents. 

Citation of manufacturer’s or trade names does not constitute an official endorsement or approval of the 
use thereof. 


Destroy this report when it is no longer needed. Do not return it to the originator. 



Army Research Laboratory 

Aberdeen Proving Ground, MD 21005-5067 


ARL-MR-691 


May 2008 


Visualization of a Text Network Structure Using X3D 

Andrew M. Neiderer 

Computational and Information Sciences Directorate, ARL 


Approved for public release; distribution is unlimited. 







REPORT DOCUMENTATION PAGE 


Form Approved 
OMB No. 0704-0188 


Public reporting burden for this collection of information is estimated to average 1 hour per response, including the time for reviewing instructions, searching existing data sources, gathering 
and maintaining the data needed, and completing and reviewing the collection information. Send comments regarding this burden estimate or any other aspect of this collection of information, 
including suggestions for reducing the burden, to Department of Defense, Washington Headquarters Services, Directorate for Information Operations and Reports (0704-0188), 1215 Jefferson 
Davis Highway, Suite 1204, Arlington, VA 22202-4302. Respondents should be aware that notwithstanding any other provision of law, no person shall be subject to any penalty for failing to 
comply with a collection of information if it does not display a currently valid OMB control number. 

PLEASE DO NOT RETURN YOUR FORM TO THE ABOVE ADDRESS. 


12. DISTRIBUTION/AVAILABILITY STATEMENT 

Approved for public release; distribution is unlimited. 

13. SUPPLEMENTARY NOTES 


14. ABSTRACT 

This report describes a dynamic extensible three-dimensional (3-D) (X3D) scene graph for visualizing text documents. It was 
developed at the U.S. Army Research Laboratory as a tool for social network analysis: specifically, to view a network of nodes 
where a node is a noun within a news article. Keyword and target nodes are represented as X3D spheres of different radii and 
color. Keyword node attraction to a specific target node is dynamic by a Java class access to scene content from an X3D script 
node. The magnitude of the direction vector, or speed, between keyword and target is currently proportional to frequency of the 
word within the document. This technique can be modified/replaced easily for a more comprehensive examination, such as 
with an algorithm that considers word selection across multiple documents. X3D code for a particular example is given and 
viewed using the Xj3D 2.0 browser from Yumetech, Inc. 

15. SUBJECT TERMS _ 

network visualization, extensible 3-D, X3D, social networks 

17. LIMITATION 18. NUMBER 
OF ABSTRACT OF PAGES 

UL _ 44 

Standard Form 298 (Rev. 8/98) 

Prescribed by ANSI Std. Z39.18 


19a. NAME OF RESPONSIBLE PERSON 

Andrew M. Neiderer _ 

19b. TELEPHONE NUMBER (Include area code) 

410-278-3203 


16. SECURITY CLASSIFICATION OF: 


a. REPORT 

b. ABSTRACT 

c. THIS PAGE 

UNCLASSIFIED 

UNCLASSIFIED 

UNCLASSIFIED 


1. REPORT DATE (DD-MM-YYYY) 2. REPORT TYPE 

May 2008 Final 

4. TITLE AND SUBTITLE 

Visualization of a Text Network Structure Using X3D 


6. AUTHOR(S) 

Andrew M. Neiderer 


7. PERFORMING ORGANIZATION NAME(S) AND ADDRESS(ES) 

U.S. Army Research Laboratory 

ATTN: AMSRD-ARL-CI-CT 

Aberdeen Proving Ground, MD 21005-5067 

9. SPONSORING/MONITORING AGENCY NAME(S) AND ADDRESS(ES) 


3. DATES COVERED (From - To) 

April 2007-November 2007 

5a. CONTRACT NUMBER 

5b. GRANT NUMBER 


5c. PROGRAM ELEMENT NUMBER 


5d. PROJECT NUMBER 

8TEDUC 

5e. TASK NUMBER 


5f. WORK UNIT NUMBER 


8. PERFORMING ORGANIZATION 
REPORT NUMBER 

ARL-MR-691 


10. SPONSOR/MONITOR’S ACRONYM(S) 


11. SPONSOR/MONITOR'S REPORT 
NUMBER(S) 


11 



































Contents 


List of Figures iv 

1. Introduction and Problem Description 1 

2. An X3D Scene Graph Description of a Text Network 4 

3. Conclusion and Future Considerations 5 

Appendix. The X3D and Java SAI Code for Text Network Application 7 

List of Symbols, Abbreviations, and Acronyms 35 

Distribution List 36 


iii 




List of Figures 


Figure 1. A 2-D simple network consisting of 26 nodes with 43 links.2 

Figure 2. The 3-D navigation and selective viewing within the 26-node network is shown.2 

Figure 3. A more complex 2-D network where nodes (red) are distributed amongst three 

concentric conics. Note that the number of links is less than the maximum number C,.3 

Figure 4. A sample X3D node network. The targets, i.e., selected keywords, are the red 
spheres having a <TouchSensor> defined for toggling text. The keyword codes are pink 
with texture animation of text.3 








1. Introduction and Problem Description 


An effective display of word usage within a text document could not only assist in reader 
comprehension but could also provide insight to forecasting future events. This is of particular 
interest within the Department of Defense in its effort to deter terrorist acts, which often happen 
without warning but sometimes there are indicators. Identifying and fusing data from a reported 
news story(s) that answers the who, what, when, where, and why in a timely manner across 
multiple sources, could make a difference. The U.S. Army Research Laboratory is developing 
software for display and manipulation of news articles represented as text networks. This report 
documents an interactive extensible three-dimensional (3-D) (X3D) scene description for a 
single news article and is designed with a capability of considering multiple sources in future 
releases. 

Note that a large number of documents is more easily and quickly comprehended when 
graphically displayed than when presented as raw text. Visualization of the presentation is a 
cognitive process where meaning is given to that data by creation of an ephemeral mental image. 
Therefore, images generated for computer display must be carefully constructed since they may 
influence decisions. 

The following X3D scene graph description is a directed acyclic graph (DAG) of objects and 
relationships among those objects. In this case the objects are nodes represented as X3D spheres 
with relationships between nodes, or links, displayed as line segments. 

First, a two-dimensional (2-D) description of a network where spatial relationships are preserved 
is illustrated (see figure 1). Even for a simple network, critical details may be more apparent 
when user navigation and viewing are done in 3-D space (see figure 2). If the number of nodes 
and links increases, identifying a specific link between two nodes can be even more difficult (see 
figure 3). Perhaps viewing from a particular center of projection for selected node placements 
would make isolation of a specific link easier and result in a more apparent relationship. To also 
maximize viewer comprehension, both nodes and links are color coded. 

Second, color and transparency animation of the nodes is examined. Words of particular interest 
are identified and labeled as targets. An X3D <TouchSensor> is placed on each to toggle (i.e., 
turn on/off) text. Other nouns within the text, called keywords, are animated from opaque to 
transparent when touched to help off-load some of the cognitive processing to the perceptual 
system. In this initial version of the software, color animation was not implemented since user 
color sensitivity can vary greatly, to include color-blindedness. Further research is needed. 


1 





Figure 2. The 3-D navigation and selective viewing within the 26-node network is shown. 

The density of links between nodes within a single image can be visually overwhelming, 
especially for a large network. We allow for all cases: (1) display of no links, (2) all links, and 
(3) selective display. In the first case, we adapt and implement a basic principle in physics: the 
Lenard-Jones potential energy function. 1 The internal script is written in standardized 
JavaScript, which is called the European Computer Manufacturers Association scripting 
language (ECMAScript), and assumes that target and keyword nodes are point masses so that the 
force of attraction is directly proportional to velocity, or speed, along the straight line connecting 
the two centers (see Avoid.x3d in the Appendix). The magnitude of the direction vector is 
simply proportional to word frequency in the text, but can be replaced by a different algorithm. 
An example is shown in figure 4, where there are two target nodes and seven keyword nodes. 
Note that all links between the n nodes is the statistical combination, mathematically expressed 
as n C 2 = n! / [(n - 2)! 2!]. For user-specified link display, a <TouchSensor> is defined and 
attached to each link for one to toggle display; this could assist in identification of indirect links. 


1 Bourg, D. M. AIfor Game Developers; O’Reilly Media, Inc.: Sebastopol, CA, July 2004. 


2 
























Figure 3. A more complex 2-D network where nodes (red) are distributed amongst 
three concentric conics. Note that the number of links is less than the 
maximum number n C 2 . 



Figure 4. A sample X3D node network. The targets, i.e., selected keywords, are the red spheres 
having a <TouchSensor> defined for toggling text. The keyword codes are pink with 
texture animation of text. 


3 



































Section 2 provides details of the X3D scene graph for text document representation, including 
the necessary routes. The scene graph is animated by an event cascade across sensors, 
interpolators, and script nodes in addition to the usual inclusion of <Transform> nodes. A scene 
access interface (SAI)* written in Java allows for dynamic manipulation of the scene graph (e.g., 
switching the “goal,” which is a field of the defined X3D prototype node for a keyword). X3D 
routes node output fields to another node’s input field for animation. 


2. An X3D Scene Graph Description of a Text Network 


X3D graphics is an international standard for defining scene content across the Web that allows 
for real-time, interactive communication with that content. It is XML-encoded which makes it 
simple to expose data for SAI. In our case, manipulation of scene content is accomplished through 
Java language bindings for the Yumetech, Inc. browser, Xj3D 2.0. This site also provides a 
comprehensive tutorial of SAI. 2 

The X3D specification defines five profiles for 28 components. A component is a set of 
functionalities for various X3D objects, and a profile is built from components. An excellent 
reference for discussion of these concepts, and X3D, in general, can be found in Brutzman and 
Daly. 3 For our text network structure, we use the inclusive immersive profile and select it on the 
header (see third line of the X3D in the appendix); i.e., for <X3D>, the attribute value for the 
attribute name “profile” is “Immersive.” 

A scene graph is a collection of graphical objects arranged in a hierarchical relationship. The 
fundamental object is a node. The virtual environment (VE) for viewing and navigation are first 
defined using the appropriate X3D nodes. Four predefined positions are accessible from the 
view bar at the bottom of the browser: top, front, back, and front-top view. Navigation is 
defined for both flying and walking through the scene. 

Nodes have properties called fields. A field includes an attribute for storage of the basic data 
type (e.g., a floating-point value called SFFloat, or a vector of three values called SFVec3f). The 
routing of an output field of a geometrical child node of an X3D <Shape> to the input field of 
another makes animation within the scene graph possible. 

X3D event animation at author-time is an event cascade across sensor, interpolator, and 
transform nodes. The <ROUTE> mechanism simply makes the abstract connection between the 


Some refer to SAI as a scene “authoring” interface. Since scene content is not authored in our code using a <Script>, and we 
only “access” content, the latter is used. 

2 

Hudson, A. SAI tutorial by Yumetech, Inc. http://www.xj3d.org/tutorials/general_sai.html (accessed 19 September 2007). 

2 

Brutzman, D.; Daly, L. X3D: Extensible 3D Graphics for Web Authors; Morgan Kaufmann Publishers, Elsevier, Inc., 2007. 


4 



node sending the event and the node receiving that event. But when the chain includes a script 
node, a field value can be modified at run time. 


<Script> allows one to embed program code into the X3D scene. In our case, a Java scene 
access interface (SAI) to X3D scene graph content uses the Browser class defined for the Xj3D 
viewer 

Target nodes can be touched to toggle the text and is made possible by routing its 
<TouchSensor> to the child <Switch> node of the <Transform>. Geometric translation of the 
target node in Xj3D is done by dragging the pointer on it. An instance of the Lenard-Jones 
potential energy is defined for each child keyword node by an internal ECMAScript function. 

Keyword nodes are also texture animated, and as a result, the event chain is more complicated. 
A <TouchSensor> is placed on the keyword geometry. The event is first routed to a 
<TimeSensor> node where the cycle interval is controlled and currently set to 10 s; this can be 
easily modified. To complete the fading effect, the “startTime” field of this <TimeSensor> is 
routed to a <ScalarInterpolator> and then to the <Material> node for the text <Shape>. 

Note that target nodes are positioned relative to the root coordinate system of the scene which is 
a right-handed system (RHS). Keyword nodes for a determined target are also positioned in an 
RHS but are relative and need to be oriented. This is necessary for use of ECMAScript 
implementation of potential energy in the Avoid prototype (see Avoid.x3d in the appendix). 

The complete code for a sample network of nodes defining a text document is given in the 
appendix. The Java template for switching a target of a keyword node field “goal” 
(TargetSelect.java) has been written and a setFields() method within this class communicates 
with scene content and will be further refined. 


3. Conclusion and Future Considerations 


The preceding discussion introduced an X3D text network that will serve as a model for SNA 
tool development. An initial X3D implementation for the display of nouns within a text 
document now exists. Keywords and a target word are nouns within a news article that are 
displayed as X3D spheres in the Xj3D browser. 

With the initial version stablized, we plan to research more extensive information visualization. 
We plan to examine larger, denser networks, including populating the network with more nodes 
which typically means more links. Strategic node placement and minimizing edge length and 
crossings should also help reduce clutter. In addition, using X3D <TouchSensor>s for selective 
display of links should also help. 

New additions will be evaluated in an Ajax context as the networks become more complex. 


5 




Intentionally left blank. 


6 



Appendix. The X3D and Java SAI Code for Text Network Application 


The main X3D code (SAIdynamicAttraction.x3d) and the external prototype definition 
(Avoid.x3d) for attraction of a keyword node to a target now follow. The template for a Java 
SAI to X3D scene content is also documented. 


This appendix appears in its original form, without editorial review. 


7 




Tue Oct 30 09:53:34 2007 


SAIdynamicAttraction.x3d 


Page 1 


00 


<?xml version-"1 * 0" encoding-"UTF-8"?> 

<!DOCTYPE X3D PUBLIC "IS0//Web3D//DTD X3D 3.1//EN" 

"http : //www. web3d. org/specifications/x3d-3.1 . dtd TT > 

<X3D profile="Immersive" version="3.1"> 

<head> 

<!— an X3D SNA application for "keyword" node attraction to a "target" node, 

<!— where "speed" represents strength of bond between the two nodes. Uses a Java 


<!— scene access interface (SAI) to the X3D scene content from a <Script> node 

<!-- of the <Scene> for a dynamic scene graph. --> 

< !— —> 

<!— added <TouchSensor> to toggle text on target nodes (10/4/2007). -“> 

<!-- added transparency animation to text of keyword nodes by touching geometry (10/5/2007). --> 

<!-- --> 

<!-- by Andrew M. Neiderer 15 Oct 2007, 

<!— using VRML obstacle avoidance technique by Peter Gerstmann (Ohio State Univ). —> 

</head> 


<Scene> 

<ExternProtoDeclare name="Avoid" ur 
<field name="children" type 

<field name-"goal" type 

<field name="goalPriority" type 
<field name-"obstacles" type 

<field name="position" type 

<field name="setGoal" type 

<field name="setState" type 

<field name="setObstacles" type 
<field name-"speed" type 

<field name="state" type 

<field name="updateRequest" type 
</ExternProtoDeclare> 


1="Avoid.x3d"> 

"MFNode" acce s slype-"inputOutput"/> 

"SFVec3f" accessType="initializeOnly" 
"SFFloat" accessType="initializeOnly" 
"MFNode" accessType-"initializeOnly" 
"SFVec3f" accessType="inputOutput"/> 

"SFVec3f" accessType="inputOnly"/> 

"SFString" accessType^"inputOnly"/> 
"MFNode" accessType="inputOnly"/> 

"SFFloat" accessType="initializeOnly" 
"SFString" accessType-"initializeOnly" 
"SFTime" accesslype-"inputOnly"/> 


/> 

/> 

/> 


/> 

/> 


<Background groundAngle-"0,1, 1.309, 1.571" 

groundcolor-"0.0 0.0 0.0, 0.0 0.1 0.3, 0.0 0.2 0.5, 0.0 0.3 0.8" 

skyAngle="0.1, 0.15, 1.309, 1.571" 

skyColor-"0.4 0.4 0.1, 0.4 0.4 0.1, 0 0.1 0.3, 0 0.2 0.6, 0.8 0.8 0.8" 

frontUrl="horizon_l_front.jpg" 

backUrl="horizon_l_back.jpg" 

leftUrl="horizon_l_left.jpg" 

rightUrl="horizon_l_right.jpg" 

topUrl="horizon_l_top.jpg" 

bottomUrl="horizon„l_bottom.jpg"/> 


<Fog DEF="FOG" 

color-"1.0 1.0 1.0" fogType-"LINEAR" visibilityRange-"75.0"/> 

<Viewpoint description="bird&apos;s eye view" 
orientation-"-1.0 0.0 0.0 1.57" 
position-"0.0 33.5 0.027" 
jump-"false"/> 
description="on the level" 


<Viewpoint 








Tue Oct 30 09:53:34 2007 


SAIdynamicAt tract ion. x3d 


Page 2 


orientation-"-!.0 0.0 0,0 0.617" 
position-"0.0 19.388 27.32" 
jump="false" / > 

<Viewpoint description="front" 

DEF="VIEWPOINT_zPos" 
position="-l.8288 1.5 19 . 848103"/> 

<Viewpoint description="back" 

DEF-"VIEWPOINT_zNeg" 
orientation-"0.0 1.0 0.0 3.141592" 
position-"-! .8288 1.5 -20.45 7703 TT /> 

<NavigationInfo type ="EXAMINE" / > 

<Navigationlnfo type- '"EXAMINE","ANY"'/> 

<PositionInterpolator DEF="POSITION_INTERPOLATOR" 

key="0.0 0.33 0.67 1.0" 

keyValue="-5.0 0.0 -3.0, 0.0 0.0 -3.0, 5.0 0.0 -3.0, -5.0 0.0 -3.0, -5.0 0.0 -3.0“/> 
cTimeSensor DEF="TIME_SENSOR" loop="true" cyclelnterval="10.0"/> 

<!-- backdrop --> 

cTransform DEF-"TRANSFORM_backdrop" 

rotation="1.0 0,0 0.0 -1.57" 
translation-"0,0 0.0 0.Q"> 

<Shape DEF="SHAPE_Joackdrop"> 

<Appearance> 

<Material DEF="MATERIAL_backdrop" 

diffuseColor="0.0 0.05 0.0" 
specularColor-"0.0 0.05 0.0" 
emissiveColor="0.0 0.05 0.0"/> 

</Appearance> 

<Box size-"24.0 24.0 0.25"/> 

</Shape> 

<TouchSensor DEF="TOUCH_SENSOR_backdrop" enabled-"false"/> 

<PlaneSensor DEF="PLANE_SENSOR_backdrop" enabled-"false"/> 

</Transform> 

<!— "group" (1) target(s), which is(are) goal(s) --> 

<!— (see Avoid prototype), and (2) keyword(s). --> 

<Group> 

<!— target 1 —> 

cTransform rotation-"1.0 0.0 0.0 -1.570796"> 

clransform DEF-"TRANSFORM_target1" translation-"-7.5 -5.0 1.0"> 

<!-- appearance and geometry of target —> 



Tue Oct 30 09:53:34 2007 


SAIdynamicAt tract ion. x3d 


Page 3 


<3hape DEF="SHAPE_target 1" > 

<Appearance> 

<Material DEF ="MATERIAL_target" 

diffuseColor="1.0 0,0 0,0" 
transparency="0.3"/> 

</Appearance> 

<Sphere DEF —"SPHERE_targetRadius" 
radius="0.75"/> 

</Shape> 

<!-- toggle text of target on the geometric shape —> 

<Switch DEF="SWITCH_targetl"> 

<Transform translation^"-1.0 -0.5 -0.5"> 

<!-- appearance and text of target --> 

<Shape> 

<Appearance> 

<Material USE="MATERIAL_target"/> 

</Appearance> 


<Text DEF—"TEXT_target1" 

containerField="geometry" 

maxExtent^"0.0" 

string= r "Mahdi" "Army"'> 

<FontStyle DEF="FGNT_STYLE_target" 

containerField="fontStyle" 
family-'"SERIF"' 
horizontal^"true" 
j ustify='"BEGIN"' 
leftToRight="true" 
size="1.0" 
spacing^"1,0" 
style—"PLAIN" 
topToBottom="true"/> 

</Text> 

</$hape> 

</Transform> 

</Switch> 

<!-- sensors and interpolators for animation --> 


<TimeSensor DEF="TIME_SENSOR_target1" loop="true" cyclelnterval="10.0"/> 

<TouchSensor DEF="TOUCH_SENSOR_targetl" enabled="true"/> 

<PlaneSensor DEF="PLANE_SEN$OR„target1" 

description="click to drag in plane" 
autoOffset="true" offset="-7,5 -5,0 1.0"/> 



Tue Oct 30 09:53:34 2007 


SAIdynamicAttraction. x3d 


Page 4 


<ColorInterpolator DEF= "COLOR_INTERPOLATOR_target1" 
key= T, 0.0 0,33 0.67 1.0" 

keyValue= M 0.4 0.4 0.4, 1,0 0.5 0.5, 1.0 0.5 0.5, 0.4 0.4 0.4"/> 

</Transform> 

</Transform> 

<!-- target 2 —> 

<Transform rotation="1.0 0.0 0.0 -1.570796"> 

<Transform DEF= l, TRANSFORM_target2" translation^' 7.5 5.0 1.0"> 

<!-- appearance and geometry of target —> 

<Shape DEF = " SHAPE_target 2 " > 

<Appearance> 

<Material USE="MATERIAL_target"/> 

</Appearance> 

<Sphere USE="SPHERE_targetRadins"/> 

</Shape> 

<!— toggle text of target on the geometric shape —> 

<Switch DEF ="SWITCH_target2"> 

<Transform t rans lation= "-1 . 0 -0.5 -0.5 T, > 

<!— appearance and text of target --> 

<Shape> 

<Appearance> 

<Material USE="MATERIAL_target"/> 
c/Appearance> 

<Text DEF="TEXT_target2" 

containerField="geometry" 
maxExtent="0,0" 
string='Al-Quaeda'> 

<FontStyle USE-"FONT_STYLE_target"/> 

</Text> 

</Shape> 

</Transform> 

</Switch> 

< * — sensors and interpolators for animation —> 

cTimeSensor DEF="TIME_SENSOR„target2" loop= ,, true" cyclelnterval="10.0"/> 
<TouchSensor DEF="T0UCH_SENS0R_target2" enabled-"true"/> 

<PlaneSensor DEF="PLANE_SENSOR_target2" 



Tue Oct 30 09:53:34 2007 


SAIdynamicAttraction.x3d 


Page 5 


K> 


description^"click to drag in plane" 
autoOffsettrue" offset="7.5 5.0 1.0"/> 

<ColorInterpolator DEF="COLOR_INTERPOLATOR_target2" 
key="0.0 0.33 0.67 1.0” 

keyValue="0.4 0.4 0.4, 1.0 0.5 0.5, 1.0 0.5 0.5, 0.4 0.4 0 4"/> 

</Transform> 

</Transform> 

<!-- keyword 1 —> 

<ProtoInstance DEF="PROTO_INSTANCE_keywordl" 

name="Avoid" containerField="children"> 

<fieldValue name="children"> 

<Transform translation^"-!.0 1.0 -1,Q"> 

<! appearance and geometry of keyword —> 

<Shape DEF="SHAPE_keywordl"> 

<Appearanee> 

<Material DEF="MATERIAL_keyword" 

diffuseColor="l.0 0.5 0.5" 
transparency="0.5"/> 

</Appearance> 

<Sphere DEF="SPHERE_keywordRadius" 
radius-"0.5"/> 

</Shape> 

<! toggle text of keyword on the geometric shape --> 

<Switch DEF="SWITCH_keywordl"> 

transform translation="-0,75 0,5 0.0" 
rotation="0.0 1.0 0.0 -0.5"> 


<!-- appearance and geometry of text --> 

<Shape> 

<Appearance> 

<!-- Note that for the transparency attribute, --> 

<!-- 1.0 means transparent, and 0.0 means opaque —> 

<Material DEF="MATERIAL_text_keywordl" 
ambientIntensity="0.2" 
containerField="material" 
diffuseColor="l.0 0.5 0.5" 
emissiveColor-"0.0 0.0 0.0" 
shininess="0.2" 
specularColor="0.0 0.0 0.0" 
transparency="l.0"/> 

</Appearance> 



Tue Oct 30 09:53:34 2007 


SAIdynamicAttraction.x3d 


Page 6 


Ld 


<Text DEF=" TEXT_keywordl" 

containerField-"geometry" 
maxExtent="0.0" 
string="Al-Sadr"> 

<FontStyle DEF-"FONT_STYLE_text_keyword" 
containerField="fontStyle" 
family-'"SERIF"' 
horizontal-"true" 
justify-'"BEGIN"' 
leftToRight="true" 
size-"1.0" 
spacing-"1.0" 
style-"PLAIN" 
topToBottom-"true" /> 

</Text> 

</Shape> 

</Transform> 

</Switch> 

</Transform> 

</fieldValue> 

<!— recall 

<!— RHS: 

<fieldValue 

<!— RHS: 

<fieldValue 

<fieldValue 

<fieldValue 

<fieldValue 
<Obstacle 
</fieldValue> 


for TRANSFORM_target1, translation-"-?.5 -5.0. 1.0" —> 

x, y, z —> 

name-"position" value= ,f -10.0 -5.0 1.0"/> 

x + 2.5, z - 1.0, -y —> 

name-"goal" value="-7.5 0.0 5.0"/> 

name="goalPriority" value="l.0"/> 
name-"speed" value-"0.25el"/> 

name-"obstacles"> 

USE="PROTO_IN$TANCE_Obstacle"/> —> 


<!-- sensors and interpolators for animation —> 

<TimeSensor DEF="TIME_SENSOR_alpha_keywordl" 
enabled- 1 'true" 
loop="false" 
startTime=" 0.0" 
cycleInterval-"10.0"/> 

<TouchSensor DEF-"TOUCH_SENSOR_keywordl" enabled="true"/> 

<ColorInterpolator DEF-"COLOR_INTERPOLATOR_keywordl" 
key- "0.0 0.33 0.67 1.0" 

keyValue-" 0.4 0.4 0.4, 1.0 0.5 0.5, 1.0 0.5 0.5, 0.4 0.4 0 4"/> 

<ScalarInterpolator DEF-"SCALAR_INTERPOLATOR_alpha_keywordl" 



Tue Oct 30 09:53:34 2007 


SAIdynamicAttraction.x3d 


Page 7 


key="0.0 0.5 1.0" 
keyValue="1.0 0.0 1.0"/> 

</ProtoInstance> 

dimeSensor DEF = " T IME_SENSOR_keywordl " loop="true" cycle Interval-" 10.0 "/> 
<!-- keyword 2 —> 

<ProtoInstance DEF ="PROTO_INSTANCE_keyword2" 

name="Avoid" containerField="children"> 

<fieldValue name-"children T, > 

<Trans form translation^"-1.0 1.0 1.0"> 

<! appearance and geometry of keyword —> 

<Shape DEF="SHAPE_keyword2"> 

<Appearance> 

<Material USE= "MATERIAL_keyword"/> 

</Appearance> 


<Sphere USE-"SPHERE_keywordRadius"/> 
</Shape> 


<! toggle text of keyword on the geometric shape —> 

<Switch DEF-"SWITCH_keyword2"> 

<Transform translation="-0.75 0.5 0.0" 
rotation="0.0 1.0 0.0 -0.5"> 


<!-- appearance and geometry of text --> 


<Shape> 

cAppearance> 

<! Note that for the transparency attribute, 

— ^-0 means transparent, and 0.0 means opaque 

<Mater ial DEF = T, MA1ERIAL_text_keyword2 " 
ambient Intensity^"0.2" 


containerField="material" 
diffuseColor="1.0 0.5 0.5" 
emissiveColor="0.0 0.0 0.0" 


shininess = "0.2 " 


specularColor="0.0 0.0 0.0" 
transparency="1.0"/> 
</Appearance> 




<Text DEF="TEXT_keyword2" 

containerField="geometry" 
maxExtent="0.0” 
string-"Nassiriya"> 

<FontStyle USE="FONT_STYLE_text_keyword"/> 
</Text> 



Tue Oct 30 09:53:34 2007 


SAIdynamicAttraction.x3d 


Page 8 


< ! — 


</Shape> 
</Transform> 
</Switch> 
</Transform> 

</fieldValue> 


< !-- recall for TRAN SF0RM_tar get 1, translation="-7.5 -5,0 1.0 T ' 


<!— RHS: 

<fieldValue name^position’ 
<!— RHS: 

<fieldValue name = TT goal" 


x, y, z --> 
value-"10.0 1.0 1.0"/> 


valuer"-7.5 0.0 5.0 n /> 

<fieldValue name="goalPriority" value-"1.0"/> 

<f ieldValue narne=" speed" value-" 0 . 125el "/> 

<fieldValue name="ob3tacles"> 

<Obstacle USE="PROTO_INSTANCE_Obstacle "/> —> 

</fieldValue> 


<! sensors and interpolators for animation —> 

<Time$ensor DEF-"TIME_SENSOR_alpha_keyword2" 
enabled-"true" 
loop-"false" 
startTime-"0.0" 
cycleInterval="10.0"/> 

<TouchSensor DEF="TOUCH_SENSOR_keyword2" enabled-"true"/> 

<ColorInterpolator DEF-"COLOR_INTERPOLATOR_keyword2" 

key="0.0 0.33 0.67 1.0" 

keyValue="0.4 0.4 0.4, 1.0 0.5 0.5, 1.0 0.5 0.5, 
<ScalarInterpolator DEF= n SCALAR_INTERPOLATOR_alpha_keyword2" 

key-"0.0 0,5 1.0" 
keyValue-"1.0 0,0 1.0"/> 

</Protolnstance> 

<TimeSensor DEF="TIME_SENSOR_keyword2" loop="true" cyclelnterval-"10. 

<!— keyword 3 —> 

<ProtoInstance DEF—"PROTO_INSTANCE_keyword3" 

name="Avoid" containerField-"children"> 

<fieldValue name-"children"> 

<Transform translation-"1.0 1.0 1.0"> 

<!-- appearance and geometry of keyword —> 


0.4 0.4 0,4"/> 


"/> 



Tue Oct 30 09:53:34 2007 


SAIdynamicAttraction. x3d 


Page 9 


<Shape DEF="keyword3"> 

<Appearance> 

<Material USE-"MATERIAL_keyword"/> 

</Appearance> 

<Sphere USE-"SPHERE_keywordRadius" / > 

</Shape> 

<! toggle text of keyword on the geometric shape —> 

<Switch DEF="SWITCH_keyword3"> 

<Transform translation="-0.75 0.5 0.0" 
rotation="0,0 1.0 0.0 -0.5"> 

<!— appearance and geometry of text —> 

<$hape> 

<Appearance> 

<! Note that for the transparency attribute, —> 

< * 1-0 means transparent, and 0.0 means opaque —> 

<Mater ial DEF—"MATERIAL__text_keyword3 TT 
^ ambientlntensity="0.2" 

Os containerField-"material" 

diffuseColor="1.0 0.5 0.5" 
emissiveColor^"0.0 0.0 0.0" 
shininess-"0.2" 
specularColor="0.0 0.0 0.0" 
transparency-"1.0"/> 

</Appearance> 

<Text DEF="TEXT_keyword3" 

containerField="geometry" 

maxExtent—"0.0" 

string="3 Sep 2007"> 

<FontStyle USE="FONT_STYLE__text_keyword" /> 

</Text> 

</Shape> 

</Transform> 

</Switch> 

</Transform> 

</fieldValue> 

<!— recall for TRAN$FORM_target1, translation^ 1 

<!-- RHS: x , y, 

<fieldValue name="position" value="0.0 10.0 

<!— RHS: 

<fieldValue name="goal" value="-7.5 0.0 

<fieldValue name="goalPriority" value="1.0"/> 


-7.5 -5.0 1.0" —> 

z --> 

0 . 0 "/> 

— > 

5.Q"/> 



Tue Oct 30 09:53:34 2007 


SAIdynamicAttraction.x3d 


Page 10 


<fieldValue name="speed" valuer"0.Q5e0"/> 

<fieldValue name-"obstacles"> 

<!— cObstacle USE="PROTO_INSTANCE_Obstacle"/> —> 

</fieldValue> 

sensors and interpolators for animation --> 

<TimeSensor DEF—"TIME_SENS0R_alpha_keyword3" 
enabled="true TT 
loop-"false" 
startTime-"0,0" 
cyclelnterval="10.0 " / > 

<TouchSensor DEF="T0UCH_$ENS0R__keyword3 " enabled="true"/> 

<ColorInterpolator DEF ="C0L0R_INTERP0LAT0R_keyword3" 

key-"0.0 0.33 0.67 1.0" 

keyValue-"0.4 0.4 0.4, 1.0 0.5 0.5, 1.0 0.5 0.5, 0.4 0.4 0.4"/> 

<ScalarInterpolator DEF= "SCALAR_INTERPOLATOR_alpha_keyword3" 

^ key-"0.0 0.5 1.0" 

keyValue-"1.0 0.0 1.0"/> 

</ProtoInstance> 

<TimeSensor DEF="TIME_SENSOR_keyword3" loop="true" cyclelnterval^"10.0"/> 

<!— keyword 4 —> 

<Protolnstance DEF="PROTO_INSTANCE„keyword4" 

name-"Avoid" containerField="children"> 

<fieldValue name-"children"> 

<Transform translation-"-l.0 1.0 -1.0"> 

<!-- appearance and geometry of keyword —> 

<$hape DEF-"SHAPE_keyword4"> 

<Appearance> 

<Material USE="MATERIAL_keyword M /> 

</Appearance> 

<Sphere USE="SPHERE_keywordRadius"/> 

</Shape> 

<!— toggle text of keyword on the geometric shape —> 

<Switch DEF="SWITCH_keyword4"> 

<Transform translation-"-0.75 0.5 0.0" 
rotation="0.0 1.0 0.0 -0.5"> 

<-— appearance and geometry of text —> 



Tue Oct 30 09:53:34 2007 


SAIdynamicAttraction .x3d 


Page 11 


<Shape> 

<Appearance> 

<!-- Note that for the transparency attribute, --> 

<!-- 1.0 means transparent, and 0.0 means opaque --> 

<Material DEF="MATERIAL_text_keyword4 " 
ambientIntensity="0.2" 
containerField="material" 
diffuseColor="1.0 0.5 0.5” 
emissiveColor="0.0 0.0 0.0" 
shininess="0.2" 
specularColor="0.0 0.0 0.0" 
transparency="1.0"/> 

</Appearance> 

<Text DEF= r, TEXT_keyword4 " 

containerField“"geometry” 
maxExtent="0.0" 
string="bomb"> 

<FontStyle USE="FONT_$TYLE_text_keyword"/> 

</Text> 

^ </Shape> 

oo </Transform> 

</5witch> 

</Transform> 

</fieldValue> 

<!— recall for TRANSFORM_target1, translation="-7.5 -5.0 1.0" —> 


<!— RHS: 


x, 

Y/ 

z —> 

<fieldValue 

name=”position" 

value="-10.0 

0.0 

1 

CJi 

o 

\ 

V 

<!— RHS: 




—> 

<fieldValue 

name="goal" 

value=" 7.5 

0.0 

-5.0"/> 

<fieldValue 

name="goalPriority" 

value="1.0"/> 



<fieldValue 

name= ,T speed" 

value="0,25el 

"/> 



<fieldValue name- ,T obstacles"> 

<!— <Obstacle USE-"PROTO_INSTANCE_Obstacle"/> —> 

</fieldValue> 

<!-- sensors and interpolators for animation —> 

<TimeSensor DEF="TIME_SENSOR_alpha_keyword4" 
enabled="true" 
loop= ,f false " 
startTime="0.0" 
cyclelnterval="10.0"/> 




Tue Oct 30 09:53:34 2007 


SAIdynamicAttraction. x3d 


Page 12 




<TouchSensor DEF="TOUCH„SENSOR_keyword4" enabled="true"/> 

<ColorInterpolator DEF="COLOR_INTERPOLATOR_keyword4” 

key="0.0 0.33 0.67 1.0" 

keyValue="0.4 0.4 0.4, 1.0 0.5 0.5, 1.0 0.5 0.5, 0.4 0.4 0,4 M /> 
<ScalarInterpolator DEF= H SCALAR_INTERPOLATOR_alpha_keyword4" 

key="0.0 0.5 1.0" 
keyValue=" 1.0 0.0 l.G"/> 

</ProtoInstance> 

<TimeSensor DEF= TT TIME_SENSOR_keyword4 " loop="true TI cyclelnterval = " 10.0 "/> 

<!-- keyword 5 --> 

<ProtoInstance DEF="PROTG_INSTANCE_keyword5" 

name="Avoid" containerField="children M > 

<fieldValue name="children TT > 

<Transform translation="-1.0 1.0 1.0’’> 

<!-- appearance and geometry of keyword --> 

<Shape DEF="SHAPE_keyword5"> 

<Appearance> 

<Materia1 USE="MATERIAL_keyword"/> 

</Appearance> 

<Sphere USE—"SPHERE_keywordRadius" / > 

</Shape> 

<!— toggle text of keyword on the geometric shape —> 

<Switch DEF="SWITCH_keyword5"> 

<Transform translation="-0 . 75 0.5 0.0" 
rotation="0.0 1.0 0.0 -0.5 M > 

<!-- appearance and geometry of text --> 

<Shape> 

<Appearance> 

<!— Note that for the transparency attribute, —> 

<!— 1.0 means transparent, and 0.0 means opaque —> 

cMaterial DEF="MATERIAL_text_keyword5" 
ambientIntensity="0.2" 
containerFields"material" 
diffuseColor-"1.0 0.5 0.5" 
emissiveColor="0.0 0.0 0.0" 
shininess="0.2" 
specularColor="0.0 0.0 0.0" 
transparency="1.0"/> 

</Appearance> 



Tue Oct 30 09:53:34 2007 


SAIdynamicAttraction. x3d 


Page 13 


<Text DEF-"TEXT_keyword5" 

containerField="geometry" 
maxExtent="0,0" 
string="Baghdad"> 

<FontStyle USE="FONT_STYLE_text_keyword"/> 
</Text> 

</Shape> 

</Transform> 

</Switch> 

</Transform> 

</fieldValue> 


to 

o 


<!-- sensors and interpolators for animation --> 

<TimeSensor DEF-"TIME_SENS0R_alpha_keyword5" 
enabled^"true" 
loop-" false" 
startTime-"0.0" 
cycleInterval-"10.0"/> 

<TouchSensor DEF="T0UCH_SENS0R_keyword5" enabled="true"/> 

<ColorInterpolator DEE-"COLOR_INTERPOLATOR_keywords" 

key="0.0 0.33 0.67 1,0" 

keyValue="0.4 0.4 0.4, 1.0 0.5 0.5, 1.0 0.5 0.5, 0.4 0.4 G.4"/> 

<ScalarInterpolator DEF="SCALAR_INTERP0LAT0R_alpha_keyword5" 

key="0,0 0.5 1.0" 
keyValue="1.0 0.0 1.0"/> 

</Prot oInstance> 

cTimeSensor DEF-"TIME_$ENSOR_keyword5" loop="true" cyclelnterval="10.0"/> 

<!— keyword 6 —> 

<ProtoInstance DEF ="PROTO_INSTANCE_keyword6" 


<!— recall for TRANSFORM_target1, translation="-7.5 -5.0 1.0" — 


< ! 


< !— RHS : 

<fieldValue name="position ,T 
<!— RHS: 

<fieldValue naitie-"goal" 


x, y, z —> 
value="10.0 0.0 -5.0"/> 


value="7.5 0.0 -5.0"/> 

<fieldValue name="goaIPriority" value-"1.0"/> 

<fieldValue name="speed" value-"0.125el"/> 

<fieldValue name-"obstacles"> 

<Obstacle USE-"PROT0_INSTANCE_Obstacle"/> —> 

</fieldValue> 



Tue Oct 30 09:53:34 2007 


SAIdynamicAttraction.x3d 


Page 14 


name="Avoid" containerField="children"> 
cfieldValue name-"children"> 

<Transform translation="1.0 1.0 -1,0"> 

<!— appearance and geometry of keyword --> 

<Shape DEF="SHAPE_keyword6"> 

<Appearance> 

<Material USE="MATERIAL_keyword" / > 

</Appearance> 

<Sphere USE="SPHERE_keywordRadius"/> 

</Shape> 

<!— toggle text of keyword on the geometric shape --> 

<Switch DEF="SWITCH_keyword6"> 

<Transform translation="-0.75 0.5 0.0" 
rotation="0.0 1.0 0.0 -0.5"> 

<!— appearance and geometry of text --> 

<Shape> 

<Appearance> 

<!— Note that for the transparency attribute, —> 

<!-- 1.0 means transparent, and 0.0 means opaque —> 

<Material DEF="MATERIAL_text_keyword6" 
ambientIntensity="0,2" 
containerField="material" 
diffuseColor-"1.0 0.5 0.5" 
emissiveColor="0.0 0.0 0.0" 
shininess="0.2" 
specularColor="0.0 0.0 0.0" 
transparency-"1.0"/> 

</Appearance> 

<Text DEF—"TEXT_keyword6" 

containerField="geometry" 
maxExtent="0.0" 
string="Kadhimiya f, > 

<FontStyle USE="FONT_STYLE_text_keyword"/> 

</Text > 

</Shape> 

</Transform> 

</Switch> 

</Transform> 

</fieldValue> 

<!— recall for TRANSFORM_target1, translation="-7.5 -5.0 1.0" —> 
<!— RHS: x, y r 2 —> 




Tue Oct 30 09:53:34 2007 


SAIdynamicAttraction. x3d 


Page 15 


K> 

to 


<fieldValue name^"position" 


<!— RHS: 

<fieldValue 

<fieldValue 

<fieldValue 


name="goal" 
name="goalPriority" 
name="speed" 


value^"0.0 -10.0 0.0"/> 

--> 

value="7.5 0.0 -5.0"/> 
value="1.0"/> 
value="l,0e0"/> 


<fieldValue name= n obstacles"> 

<0bstacle USE="PROTO_INSTANCE_Obstacle"/> —> 
</fieldValue> 


<!— sensors and interpolators for animation —> 

<Time$ensor DEF="TIME_SEN30R_alpha_keyword6" 
enabled="true" 
loop="false" 
startTime="0.0" 
cycielnterval=" 10 . 0"/> 

<TouchSensor DEF= ft T0UCH_SEN$0R_keyword6 " enabled-"true"/> 

<ColorInterpolator DEF="COLOR_INTERPOLATOR_keyword6" 
key="0.0 0.33 0.67 1,0" 

keyValue =,, 0.4 0.4 0.4, 1.0 0.5 0.5, 1.0 0.5 0.5, 0.4 0.4 Q.4"/> 

<ScalarInterpolator DEF="SCALAR_INTERP0LAT0R_alpha_keyword6" 
key= H 0.0 0.5 1.0" 
keyValue="1.0 0.0 l.Q"/> 

</ProtoInstance> 


cTimeSensor DEF="TIME_SENSOR_keyword6" loop="true" cyclelnterval="10.0"/> 
</Group> 


<Script DEF="SCRIPT_target1 
<field name="set_id" 
<field name="id" 

<field name="offset" 
<field name="setPos" 
<field name="goalChanged" 


type="SFInt32 
type="SFInt3 2 
type="SFVec3f 
type="SFVec3f 
type="SFVec3f 




accessType="inputOnly"/> 
accessType="outputOnly"/> 
accessType="initializeOnly"/> 
accessType="inputOnly"/> 
accessType="outputOnly"/> 


<fleld name="g" type="SFNode" accessType="initializeOnly"> 

<Transform USE="TRANSFORM_target1"/> 

</field> 


<field name-"p ,T type="SFNode" accessType="initializeOnly"> 

<PlaneSensor USE="PLANE_SENSOR_backdrop"/> 

</field> 


function set_id() 


<![CDATA [ecmascript: 












Tue Oct 30 09:53:34 2007 


SAIdynamicAttraction. x3d 


Page 16 


{ 

id - 1; 

} 

function setPos(pos) 

{ 

var mv = offset.add(pos}; 

goalChanged = new SFVec3f(mv.x f 0.0,-mv.y); 

} 


K> 

LO 


] J > 

</Script> 


function initialize() 

{ 

p.setoffset = g.translation; 
setPos(g.translation); 

) 


<Script DEF="SCRIPT_target2 
<field name="set_id" 
<field name="id" 

<field name="offset" 
<field name="setPos" 
<field name^goalChanged 1 ’ 


type="SFInt32" 
type-"SFInt32" 
type="SFVec3f" 
type="SFVec3f" 
type="SFVec3f" 


acces sType="inputOnly"/> 
accessType- ,T outputOnly'7> 
accessType="initial!zeOnly"/> 
accessType=" input Only" /> 
accessType="outputOnly"/> 


< fi e ld name="g" type="SFNode M accessType="initializeOnly"> 

transform USE= "TRANSFORM_target2" / > 

</field> 


<field name="p" type= T, SFNode" accesslype="initial!zeOnly"> 

<PlaneSensor USE="PLANE_SENSOR_backdrop TT /> 

</field> 


<![CDATA[ecmascript: 

function set_id() 

{ 

id = 1; 


function setPos(pos) 

( 

var mv = offset.add(pos); 

goalChanged = new SFVec3f(mv. x f 0,0,-mv.y}; 

} 


function initialize() 









Tue Oct 30 09:53:34 2007 


SAIdynamicAttraction. x3d 


Page 17 


K> 

4 ^ 


] ] > 

</Script> 


{ 

p.setOffset = g.translation; 
setPos(g,translation) ; 

} 


<Script DEF—"SCRIPT„touchSwitch_target1"> 

<field name-"touch_target" type-"SFTime H accessType-”inputOnly"/> 
<field name-"onOff_target ,T type= TT SFInt32" accessType="outputOnly"/> 

<![CDATA[ecmascript: 

var active„target = true; 

function touch_target() 

{ 

if ( active_target ) { 

onOff_target - 1; 
active_target = false; 

} 

else { 

onOff_target = 0; 
active_target — true; 

} 


] ]> 

</Script> 


<Script DEF-"SCRiPT_touch5witch_target2"> 

<field name-"touch_target" type-"SFTime" accessType="inputOnly"/> 
<field name="onOff_target" type-"SFInt32" accessType-"outputOnly"/> 

<![CDATA[ecmascript: 

var active_target - true; 


] J> 

</Script> 


function touch_target() 

{ 

if ( active_target ) { 

onOff_target = 1; 
active_target = false; 

} 

else { 

onOff_target = 0; 
active_target = true; 

} 

} 


<Script DEF="SCRIPT_touchSwitch_keyword1"> 




Tue Oct 30 09:53:34 2007 


SAIdynamicAttraction. x3d 


Page 18 


K> 


<field name^"touch__keyword” type ="SFTime" accessType="inputOnly H /> 
<field name-"onOff_keyword" type-"SFInt32" accessType-"outputOnly"/> 

<![CDATA[ecmascript: 

var active_keyword = true; 

function touch_keyword() 

{ 

onOff_keyword : 0; 

} 

J ]> 

</Script > 

<Script DEF="SCRIPT_touchSwitch_keyword2"> 

<field name="touch_keyword" type-"SFTime 1 ' accessType="inputOnly"/> 
<field name="onOff_keyword" type-"SFInt32" accessType="outputOnly"/> 

<![CDATA[ecmascript: 

var active_keyword = true; 

function touch_keyword{) 

{ 

onOff_keyword = 0; 

} 

J J > 

</Script> 

<Script DEF="SCRIPT_touchSwitch_keyword3"> 

cfield name="touch_keyword" type^"SFTime" accessType="inputOnly”/> 
<field name-"onOff^keyword" type-"SFInt32" accessType="outputOnly"/> 

<1[CDATA[ecmascript: 

var active„keyword - true; 

function touch_keyword() 

{ 

onOff_keyword = 0; 

} 

] J> 

</Script> 

< Scr ipt DEF = TT SCRIP T__t ouch S wit ch_keyword 4 " > 

<field name="touch_keyword" type-"SFTime" accessType-"inputOnly"/> 
<field name="onOf f_keyword" type = "SFInt32" accessType="outputOnly"/> 

<![CDATA[ecmascript: 

var active_keyword - true; 

function touch^keyword() 

{ 

onOff_keyword = 0; 



Tue Oct 30 09:53:34 2007 


SAIdynamicAt tract ion . x3d 


Page 19 


K> 


] ]> 

</Script> 


} 


<Script DEF="SCRIPT_touchSwitch_keyword5"> 

<field name="touch_keyword" type="SFTime" accessType-"inputOnly"/> 
<field name= ,, onOff_keyword" type="SFInt32” accessType="outputOnly"/> 

<![CDATA[ecmascript: 

var active_keyword = true; 

function touch_keyword() 

{ 

onOf f__keyword = 0; 

} 

] ] > 

</Script> 


<Script DEF=" SCRIPT_touchSwitch_keyword6"> 

<field name="touch_keyword" type="SFTime" accessType="inputOnly"/> 
<field name="onOff_keyword ,T type= T, SFInt32" accessType="outputOnly"/> 

<![CDATA[ecmascript: 

var active_keyword = true; 

function touch_keyword() 

{ 

onOff_keyword = 0; 

} 

] ]> 

</Script> 


<$cript DEF="SCRIPT_targetSelect" url="TargetSelect.class"> 

<field name="time t ' type="SFTime" accessType="inputOnly*'/> 

< field name="location" type="SFVec3f" accessType="outputOnly H /> 
</Script> 


<!-- animation —> 


<ROUTE fromNode="PLANE_SENSOR_backdrop" 
toNode- "TRANSFORM_target1" 

<ROUTE fromNode—"PLANE_SENSOR_target1" 
toNode= "TRANSFORM_target1" 

<R0UTE fromNode="PLANE_SENSOR_target1" 
toNode= "SCRIPT_targetl" 

<ROUTE fromNode^"TOUCHESENSOR_target1" 

toNode= "SCRIPT_touchSwitch_targetl" 


<!— target 1 —> 

fromField="translation_changed" 
toField="translation"/> 

fromField="translation_changed" 
toField="set_translation"/> 

fromField="translation_changed" 
toField="setPos"/> 

fromField="touchTime" 
toField="touch_target"/> 




Tue Oct 30 09:53:34 2007 


SAIdynamicAttract!on .x3d 


Page 20 


K> 


<ROUTE 

<ROUTE 

cROUTE 

<ROUTE 

<R0UTE 

<ROUTE 

<ROUTE 

<ROUTE 

<ROUTE 

<ROUTE 

<ROUTE 

<R0UTE 

<ROUTE 

<ROUTE 

<R0UTE 

<ROUTE 


fromNode SCRIPT touchSwitch targetl" fromField—"onGff target" 

toNode= "SWITCH„targetl" toField="whichChoice"/> 


<!— target 2 --> 


fromNode-"PLANE_SENSOR_backdrop" 
toNode= "TRANSFORM_target2" 

f romNode- ,T PLANE_SENSOR_tar get 2" 
toNode= "TRANSFORM_target2" 

f romNode= "PLANE_SENSOR_target 2 ’’ 
toNode= H SCRIPT_target2" 

fr omNode-"TOUCH_SENSOR_target 2" 
toNode= M SCRIPT_touchSwitch_target 2 
fromNode-"SCRIPT_touchSwitch_target2 
toNode= "SWITCH_target2" 


t romField="translation_changed 
toField-"transiation"/> 

fromField="translation_changed' 
toField="set^translation"/> 

fromField-"transiation_changed 1 
toField-"setPos"/> 

fromField-"touchTime" 
toField="touch__t arget" /> 
fromField="onOff_target" 
toField="whichChoice"/> 


<!-- keyword 1 --> 

fromNode="SCRIPT_target1" fromField=”goalChanged" 

toNode= ,, PROTO_INSTANCE_keywordl " toField=" setGoal " /> 


fromNode-"TIME_SENSOR_keywordl" fromField-"time" 

toNode- "PROTO_INSTANCE_keywordl" toField= n updateRequest"/> 


fromNode-"TOUCH_SENSOR_keywordl" 
toNode— "SCRIPT_touchSwitch_keywordl" 
fromNode="SCRIPT_touchSwitch_keywordl" 
toNode- "SWITCH_keywordl" 


fromField="touchTime" 
toField-"touch_keyword"/> 
fr omField-"onOff_keyword" 
toField-"whichChoice"/> 


fromField="touchTime" 
toField-"startTime" / > 
fromField- 1 ' f raction_changed" 
toNode- "SCALAR_INTERPOLATOR_alpha_keywordl" 

toField-"set_fraction"/> 
fromNode-"SCALAR„INTERPOLATOR_alpha_keywordl" 

fr omField-"value_changed" 

toNode— "MATERIAL_text_keywordl" toField-"transparency"/> 


fromNode-"TOUCH_SENSOR_keywordl" 
toNode- "TIME_SENSOR_alpha_keywordl" 
fromNode="TIME_SENSOR_alpha_keywordl" 


<!— keyword 2 --> 

fromNode-"SCRIPT_target1" fromField-"goalChanged" 

toNode= "PROTO_INSTANCE_keyword2" toField-"setGoal"/> 


fromNode-"TIME_SENS0R_keyword2" fromField-"time" 

toNode- "PROTO_INSTANCE_keyword2" toField-"updateRequest"/> 


fromNode—"T0UCH_SENS0R_keyword2" fromField-"touchTime" 

toNode= "SCRIPT_touchSwitch_keyword2" toField-"toach_keyword"/> 




Tue Oct 30 09:53:34 2007 


SAIdynamicAt tract ion. x3d 


Page 21 


K> 

oo 


<R0UTE fromNode 
toNode- 

<ROUTE fromNode 
toNode= 

<R0UTE fromNode 
toNode 

<R0UTE fromNode 
toNode= 


"SCRIPT_touchSwitch_keyword2" f romField-"onOf f_keyword" 
"SWITCH_keyword2" toFreld-"whichChoice"/> 

"T0UCH_SENS0R_keyword2" fromField="touchTime" 

"TIME_SENS0R_alpha_keyword2 " toField="startTime"/> 

="TIME_SENSOR_alpha_keyword2 T ' f romField-" f ract ion_changed n 

M SCALAR_INTERP0LAT0R_alpha_keyword2 H 

toField= TT set__f ract ion "/> 

"SCALAR_INTERP0LAT0R_alpha_keyword2" 

fr omField-"value_changed" 


<ROUTE fromNode^ 
toNode- 

<R0UTE fromNode^ 
toNode= 

<R0UTE fromNode^ 
toNode= 

<ROUTE fromNode= 
toNode= 

<ROUTE fromNode: 
toNode- 

<R0UTE fromNode: 
toNode= 

<R0UTE fromNode: 
toNode- 


"MATERIAL_text_keyword2" 


"SCRIPT_target1" 
"PROTO_INSTANCE_keyword3" 

="TIME_SENS0R_keyword3" 
"PR0T0_INSTANCE_keyword3" 

="TOUCH_SENSOR„keyword3 M 
"SCRIPT_touchSwitch_keyword3 T 
=" SCRIPT_touchSwit ch_keyword3 1 
"SWITCH_keyword3" 


toField- "transparency 11 /> 

<!-- keyword 3 --> 

fromField="goalChanged" 
toField="setGoal”/> 

fromField="time" 
toField="updateRequest"/> 

fromField="touchTime" 
toField="touch_keyword"/> 
fromField-"onOff_keyword" 
toField="whichChoice"/> 


fromField-"touchTime" 
toField="startTime"/> 
fromField-"traction_changed T 


-"TOUCHESENS0R_keyword3" 

"TIME_SENS0R_alpha_keyword3" 

= "TIME_SENSOR_alpha__keyword3 " __ __ 

" SCALAR_INTERPOLATOR__alpha_keyword3 " 

toField-"set_fraction"/> 

="SCALAR_INTERPOLATOR_alpha_keyword3" 

fromField-"value_changed" 


"MATERIAL_text_keyword3" 


<R0UTE fromNode="SCRIPT_target2" 

toNode- "PR0T0_INSTANCE_keyword4" 

<R0UTE fromNode = "TIME_SENS0R__keyword4" 

toNode- "PR0T0_INSTANCE_keyword4" 

<R0UTE fromNode = T, T0UCH_SENS0R_keyword4 " 

toNode= "SCRIPT_touchSwitch_keyword4' 

<R0UTE fromNode= " SCRIPT_touchSwitch__keyword4 1 
toNode= "SWITCH_keyword4" 

<ROUTE fromNode-"TOUCH_SENSOR_keyword4 H 

toNode= "TIME_SENS0R_alpha_keyword4" 

<R0UTE fromNode-"TIME_SENSOR_alpha_keyword4" 
toNode= 


"SCALAR_INTERPOLATOR_alpha_keyword4 


toField-"transparency"/> 

< ! -- keyword 4 --> 

fromField-"goalChanged" 
toField-"setGoal ”/> 

fromFi eld-" time ’’ 
toField- H updateRequest"/> 

fromField-"touchTime" 
toField="touch_keyword"/> 
fromField-"onOff_keyword" 
toField-"whichChoice"/> 

fromFieId-"touchTime" 
toFieId-"startTime"/> 
fromField="traction_changed" 



Tue Oct 30 09:53:34 2007 


SAIdynamicAttraction. x3d 


Page 22 


toField="set_fraction"/> 

<ROUTE fromNode=" SCALAR_INTERPOLATOR_alpha_keyword4 " 

fromField="value_changed" 

toNode= "MATERIAL_text_keyword4" toField="transparency"/> 

<!-- keyword 5 --> 

<ROUTE fromNode^" SCRIPT_target2 " fromField="goalChanged" 

toNode= "FROTO_INSTANCE__keyword5" toField-"setGoal"/> 

<ROUTE fromNode= H TIME_SENSOR_keywordb" f romField="t ime " 

toNode= "PROTO__INSTANCE_keyword5 ,f toField="updateRequest H /> 

<ROUTE fromNode= M T0UCH_SENS0R__keyword5" fromField="touchTime H 

toNode- "SCRIPT_touchSwitch_keyword5" toField="touch_keyword"/> 

<ROUTE fromNode-"SCRIPT_touchSwitch_keyword5 " fromField="onOff_keyword" 
toNode= " SWITCH_keyword5 " toField=’ , whichChoice"/> 


K> 


<!-- keyword 6 —> 

<ROUTE fromNode="SCRIPT_target2" froinField="goalChanged" 

toNode= "PROTO_INSTANCE_keyword6" toField="setGoal"/> 

<ROUTE fromNode="TIME_SENSOR_keyword6" fromField="tiine" 

toNode= "PROTO_INSTANCE_keyword6" toField="updateRequest"/> 

<ROUTE fromNode="TOUCH_SENSOR_keyword6 " fromField=" touchTime" 

toNode= "SCRIPT_touchSwitch_keyword6" toField="touch_keyword"/> 

<ROUTE fromNode="SCRIPT_touchSwitch_keyword6" fromField="onOff_keyword" 
toNode= "SWITCH_keyword6" toField="whichChoice"/> 

<ROUTE fromNode="TOUCH_SENSOR_keyword6" fromField="touchTime" 

toNode= "TIME_SENSOR_alpha_keyword6" toField="startTime"/> 

<ROUTE fromNode="TIME_SENSOR_alpha_keyword6" fromField="fraction_changed" 

toNode= "SCALAR_INTERPOLATOR_alpha_keyword6" 

toField="set_fraction"/> 

<ROUTE f r omNode= 11 SCALAR_INTERPOLATOR__alpha_keyword6 ,f 

fromField-"value_changed" 

toNode= "MATERIAL_text_keyword6 " toField= H transparency ,T /> 

</Scene> * 

</X3D> 


<ROUTE fromNode="TOUCH_SENSOR_keyword5" fromField-"touchTime" 

toNode^ " TIME_SENSOR_alpha_keyword5 11 toField= ,l startTime"/> 

<ROUTE fromNode-"TIME_SENSOR alpha keywords" fromField="fraction_changed" 

toNode= "SCALAR_INTERPOLATOR_alpha_keyword5" ' 

toField="set_fraction"/> 

<ROUTE fromNode="SCALAR_INTERP0LAT0R_alpha_keyword5 M 

fromField="value_changed" 

toNode= "MATERIAL_text_keywor d5 fT toField=" transparency"/> 



Thu Sep 6 03:12:55 2007 


Avoid.x3d 


Page 1 


to 

o 


<?xml version=" 1.0" encoding="UTF-8"?> 

<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.1//EN" 

"http://www.web3d.org/specifications/x3d-3.1,dtd"> 

<X3D prof ile= "Iiranersive 11 version="3, 0"> 

<head> 

<!— at each update request, the children node(s) move closer (if chasing) _> 

<*”“ or farther (if not chasing) to goal avoiding obstacles. ~_> 

—> 

<1— original by Peter Gerstmann, Ohio State University, _> 

<!-- acknowledging Matt Lewis also at 0SU, 

<! ““ —> 

<!— This X3D translation by Andrew M. Neiderer, 16 July 2007. _> 

</head> 


<Scene> 

<ProtoDeclare name="Avoid"> 
<ProtoInterface> 


<field 
<field 

name="children" 
name="goal" 

<field 

name-"goalPriority" 

<field 
<field 

name="obstacles" 
name="position" 

<field 
<field 
<field 
<field 

name="setGoal" 
name="setState" 
name="setObstaeles" 
name-"speed" 

<field 

name="state" 

<field 

name="updateRequest" 


</ProtoInterface> 


type^ M MFNode" 
type= ,, SFVec3f " 
value="0.0 0.0 0,0" 
type="SFFloat" 
value="2.0" 
type="MFNode" 
type="SFVec3 f" 
value="0.0 0.0 0.0" 
type="SFVec3f" 
type="SFString" 
type="MFNode" 
type^"SFFloat" 
value="1,0" 
type="SFString" 
valuer"CHASING" 
type="SFTime" 


acces sType = "inputOutput"/> 

accessType="initial!zeOnly"/> 

accessType="initializeOnly"/> 
accessType="initial!zeOnly"/> 

accessType="inputOutput"/> 
accessType="inputOnly"/> 
accesslype="inputOnly"/> 
accessType-"inputOnly"/> 

accessType="initial!zeOnly"/> 

accessType="initializeOnly"/> 
accessType=" inputOnly ,T /> 


<ProtoBody> 

<Group> 

<Transform DEF—"TRANSFORM_mover"> 

<IS> 

<connect nodeField="children" protoField="children"/> 
<connect nodeField="translation" protoField="position"/> 
</IS> 

</Transform> 


<Script DEF= "SCRIPT" directOutput="true"> 
<field name="direction" type="SFVec3f" 

<field name="first" type="SFBool" 

<field name="goal" type="SFVec3f" 

<field name^"goalPriority" type="SFFloat" 
<field name="lastBeat" type="SFTime" 


accessType="initializeOnly"/> 
accessType="initializeOnly"/> 
acce ssType="initializeOnly"/> 
accessType="initial!zeOnly"/> 
accessType="initializeOnly"/> 







Thu Sep 


6 03:12:55 2007 


Avoid.x3d 


Page 2 


to 


cfield name="mv ,1 type 

<Transform USE="TRANSFORM_move 
</field> 

<field name-"obstacles" 

<field name="power" 
cfield name-"setGoal H 


type=" 

type=" 

type-" 


<field name="setObstacles" type^ 
<field name="setState" type-" 

<field name^"speed" type-" 

<field name-"state" type-" 

cfield name="update" type=" 

cfield name="wanderlnc" type-" 


FNode" 
r"/> 

MFNode" 

SFFloat" 

SFVec3f" 

MFNode" 

SFString" 

SFFloat" 

SFString" 

SFTime " 

SFFloat" 


accessType-"initial!zeOnly"> 


accessType="initializeOnly"/> 
accessType-"initializeOnly"/> 
accesslype-"inputOnly"/> 
accessType-"inputOnly"/> 
accessType-"inputOnly"/> 
accessType-"initializeOnly"/> 
accessType-"initializeOnly"/> 
accesslype-"inputOnly"/> 
accessType-"initializeOnly"/> 


<IS> 

<connect 
<connect 
<connect 
<connect 
cconnect 
cconnect 
<connect 
<connect 
</IS> 


nodeField-"goal" 
nodeField="goalPriority" 
nodeField-"obstacles" 
nodeField-"setGoal" 
nodeField-"setObstacles" 
nodeField-"speed" 
nodeField-"state" 
nodeField-"update" 


protoField="goal"/> 
protoField-"goalPriority"/> 
protoField-"obstacles"/> 
protoField="setGoal"/> 
protoField-"setObstacles"/> 
protoField-"speed"/> 
protoField-"state"/> 
protoField-"updateRequest"/> 


<![CDATA[ecmascript: 

function repulseForce(obstacle) 

{ 

var vec - mv.translation.subtract(obstacle.position); 

var ods — obstacle.repulsion * 1.0 / Math,pow(vec.length(),power); 

return (vec.normalize()).multiply(ods); 

} 


function calcDirection() 

{ 

var newDir; 

if { state == 'WANDER' ) { 

var r = Math.floor(Math.random() * 3.0); 

// use internal var instead of goal, 

// and set it to goal in other states 

var g = goal; 
g[r] += wanderlnc; 
setGoal(g); 

} 


// compute force of attraction towards goal 

var gForce - {{goal.subtract(mv.translation)).normalize()).multiply{goalPriority); 






Thu Sep 6 03:12:55 2007 


Avoid.x3d 


Page 3 


u> 

K> 


] J > 

</$cript> 
</Group> 
</ProtoBody> 
</ProtoDeclare> 
</Scene> 

</X3D> 


if ( state == r FLEE' ) { 

gForce = gForce.inverse() ; 

} 

if compute force of repulsion from obstacles 

var rForce - new SFVec3f(0.0,0.0,0.0); 

for ( i = 0; i < obstacles.length; ) { 

rForce = rForce.add(repulseForce(obstacles[1J )) ; 


direction = (gForce* add (rForce)).normalize(); 


function setGoal(val) 

{ 

goal = val; 

} 

function setObstacles(val) 

{ 

obstacles = val; 

} 

function setState(str) 

{ 

state - str; 

} 

function update(val) 

{ 

if ( first ) { 

first = FALSE; 

) 

else { 

var timeElapsed = val - lastBeat; 
calcDirection(); 

mv •translation = inv.translation.add(direction.multiply(speed * timeElapsed)); 
lastBeat = val; 

} 



Tue Oct 9 08:15:00 2007 


TargetSelect.java 


Page 1 


to 

to 


/* 
/* 
/* 
/* 
/* 
/* 
/* 
/* 
/ * 
/* 
/* 
/* 


File name: 


Purpose: 


By: 


TargetSelect,java 

a Java scene access interface (SAI) to an X3D scene graph 
from a <Script> node of an X3D <5cene> for switching the 
'’target 11 of a '’keyword'’ node field ’’goal". At the 
"elapsedTime 11 field of TIKE_5EN30R_switch the ROUTE of 
a "keyword" changes its "target". 

Andrew M. Neiderer, 25-September-2007, 


*/ 

*/ 

*/ 

*/ 

*/ 

V 

V 

V 

*/ 

V 
*/ 
*/ 


import java.util,Map; 


import org.web3d.x3d.sai.*; 


public class TargetSelect 
implements X3DScriptImplementation { 


It member data 


private Browser 
private Map 
private MFNode 
private X3DScene 
private X3DNode[] 


browser; 
fields; 
children; 
scene; 
nodes; 


// member functions 


public void setBrowser(Browser browser) 
System . out . print In ( ” setBrowser ( ) 11 ) ; 
this.browser = browser; 

} 


public void setFields(X3D$criptNode externalView, Map fields) 

{ 

System.out.printIn("setFields()" ); 
this.fields - fields; 

} 

public void initialize() 

( 

System.out.printIn("initialize{)" ) ; 

} 

public void shutdown() 

{ 






Tue Oct 9 08:15:00 2007 


TargetSelect,java 


Page 2 


System.out.printIn("shutdown()" ) ; 

} 

public void eventsProcessed() 

{ 

System.out.printIn("eventsProcessed()") ; 

System.out.printIn( 11 getCurrentFrameRate() = " + browser.getCurrenoFrameRate()) ; 
System.out.println("getName() = " + browser.getName()); 
browser.printin("end eventsProcessed()") ; 

} 

} 


to 

4 ^ 



List of Symbols, Abbreviations, and Acronyms 


Ajax 

asynchronous JavaScript and XML 

API 

application programming interface 

DAG 

directed acyclic graph 

DOM 

document object model 

HTML 

hypertext markup language 

RHS 

right-handed system 

SAI 

scene access interface 

SNA 

social network analysis 

VE 

virtual environment 

X3D 

extensible three-dimensional (3-D) graphics 

XHTML 

extensible hypertext markup language 

XML 

extensible markup language 


35 




NO. OF 

COPIES ORGANIZATION 


1 DEFENSE TECHNICAL 
(PDF INFORMATION CTR 
ONLY) DTICOCA 

8725 JOHN J KINGMAN RD 
STE 0944 

FORT BEL VOIR VA 22060-6218 

1 US ARMY RSRCH DEV & 
ENGRG CMD 
SYSTEMS OF SYSTEMS 
INTEGRATION 
AMSRD SS T 
6000 6TH ST STE 100 
FORT BEL VOIR VA 22060-5608 

1 DIRECTOR 

US ARMY RESEARCH LAB 
IMNE ALC IMS 
2800 POWDER MILL RD 
ADELPHI MD 20783-1197 

1 DIRECTOR 

US ARMY RESEARCH LAB 
AMSRD ARL Cl OK TL 
2800 POWDER MILL RD 
ADELPHI MD 20783-1197 

1 DIRECTOR 

US ARMY RESEARCH LAB 
AMSRD ARL Cl OK T 
2800 POWDER MILL RD 
ADELPHI MD 20783-1197 


ABERDEEN PROVING GROUND 


1 DIR USARL 

AMSRD ARL Cl OK TP (BLDG 4600) 


36 



NO. OF 

COPIES ORGANIZATION 

ABERDEEN PROVING GROUND 


7 DIR USARL 

AMSRD ARL Cl CT 
B BROOME 
J O’MAY 

A NEIDERER (4 CPS) 
M THOMAS 


37 



Intentionally left blank. 


38 



