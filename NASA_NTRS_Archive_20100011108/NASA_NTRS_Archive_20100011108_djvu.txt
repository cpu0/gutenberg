Hollifield, and Chuck White of The Boeing 
Co. GSA-23F-01 83K, Order No. 
NNK04MB84D. 

Inquiries concerning licenses for its com- 
mercial development should be addressed to: 
Terrance Mason, Boeing Patent Licensing 
Professional 

Boeing Management Company 
Mail Stop 1650-7002 Laguna Canyon Road 
Irvine, CA 92618 
Phone No.: (949) 790-1331 
E-mail: terrance. mason@boeing. com 
Refer to Boeing Docket No 03-1523 
Web site: http://wmu.boeing.com 
KSC-12712 


Advanced Reference Count- 
ing Pointers for Better Per- 
formance 

A computer program implements ref- 
erence counting pointers (RCPs) that are 
lock-free, thread-safe, async-safe, and op- 
erational on a multiprocessor computer. 
RCPs are powerful and convenient means 
of managing heap memory in C++ soft- 
ware. Most prior RCP programs use locks 
to ensure thread safety and manage con- 
currency. The present program was devel- 
oped in a continuing effort to explore 
ways of using the C++ programming lan- 
guage to develop safety-critical and mis- 
sion-critical software. 

This effort includes exploration of 
lock-free algorithms because they offer 
potential to avoid some costly and diffi- 
cult verification problems. Unlike previ- 
ously published RCP software, the pres- 
ent program does not use locks 
(meaning that no thread can block 
progress on another thread): Instead, 
this program implements algorithms 
that exploit capabilities of central-pro- 
cessing-unit hardware so as to avoid 
locks. Once locks are eliminated, it be- 
comes possible to realize the other at- 
tributes mentioned in the first sentence. 
In addition to the abovementioned at- 
tributes, this program offers several ad- 
vantages over other RCP programs that 
use locks: It is smaller (and, hence, is 
faster and uses less memory), it is im- 


mune to priority inversion, and there is 
no way for it to cause a C++ exception. 

This program was written by William 
Reinholtz of Caltech for NASA’s Jet Propul- 
sion Laboratory. 

In accordance with Public Law 96-517, 
the contractor has elected to retain title to this 
invention. Inquiries concerning rights for its 
commercial use should be addressed to: 
Innovative Technology Assets Management 

JPL 

Mail Stop 202-233 
4800 Oak Grove Drive 
Pasadena, CA 91109-8099 
(818) 354-2240 
E-mail: iaoffice@jpl.nasa.gov 
Refer to NPO-41196, volume and number' 
of this NASA Tech Briefs issue, and the 
page number. 


C Namelist Facility 

C Namelist Facility (CNL) is a pack- 
age of software that supports the devel- 
opment of data-driven programs that 
utilize relatively free-form input files 
(e.g., text files) to control complex op- 
erations. The only comparable prior 
namelist facility is built into Fortran 
and does not support arrays or records. 
Newer computing languages, including 
C and Pascal, do not include built-in 
namelist facilities. A namelist facility 
enables a program to utilize relatively 
free-form input files that contain as- 
signment statements that give values to 
variables. Variables to which values are 
not assigned in input files remain un- 
changed; therefore, it becomes possible 
to have default values set by static or dy- 
namic initialization of values prior to 
namelist input and updating of values is 
optional. Because it is not required to 
include values of variables in namelist 
input files, new parameters can be 
added to evolving programs without 
rendering old namelist input files obso- 
lete — provided that the new parame- 
ters have useful default values. It should 
be possible to execute CNL in any oper- 
ating system that supports the ANSI C 
programming language. It has been ex- 


ecuted in several variants of Unix and 
in VxWorks. 

This program was written by Bruce Bon of 
Caltech for NASA’s Jet Propulsion Laboratory. 

This software is available for commercial 
licensing. Please contact Karina Edmonds of 
the California Institute of Technology at 
(626) 395-2322. Refer to NPO-40087. ' 


Efficient Mosaicking of 
Spitzer Space Telescope Im- 
ages 

A parallel version of the MOPEX soft- 
ware, which generates mosaics of infrared 
astronomical images acquired by the 
Spitzer Space Telescope, extends the capa- 
bilities of die prior serial version. In the 
parallel version, both the input image 
space and the output mosaic space are di- 
vided among the available parallel proces- 
sors. This is the only software drat per- 
forms the point-source detection and the 
rejection of spurious imaging effects of 
cosmic rays required by Spitzer scientists. 
This software includes components that 
implement outlier-detection algorithms 
that can be fine-tuned for a particular set 
of image data by use of a number of ad- 
justable parameters. 

This software has been used to con- 
snuct a mosaic of the Spitzer Infrared 
Array Camera Shallow Survey, which com- 
prises more than 17,000 exposures in four 
wavelength bands from 3.6 to 8 pm and 
spans a solid angle of about 9 square de- 
grees. When this software was executed on 
32 nodes of the 1,024-processor Cosmos 
cluster computer at NASA’s Jet Propulsion 
Laboratory, a speedup of 8.3 was achieved 
over the serial version of MOPEX. The 
performance is expected to improve dra- 
matically once a true parallel file system is 
installed on Cosmos. 

This progam. was written by Joseph Jacob, 
David Makovoz, and Peter Eisenhardt of Cal- 
tech for NASA’s Jet Propulsion Laboratory. 

This software is available for commercial li- 
censing. Please contact Katina Edmonds of the 
California Institute of Technology at ( 626 ) 395- 
2322. Refer to NPO-42860. 


42 


NASA Tech Briefs, October 2007 


