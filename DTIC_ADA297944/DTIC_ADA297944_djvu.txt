NAVAL POSTGRADUATE SCHOOL 
Monterey, California 



THESIS 


SCHEDULING BASIC TRAINING 
FOR THE FEDERAL 
ARMED FORCES OF GERMANY 

by 

Half Drews 

March, 1995 


Thesis Advisor: _ Gordon H. Bradley 

Approved for public release; distribution is unlimited 


19950825 160 










DISClAIMIl NOTICE 



TfflS DOCUMENT IS BEST 
QUALITY AVAILABLE. THE COPY 
FURNISHED TO DTIC CONTAINED 
A SIGNMCANT NUMBER OF 
COLOR PAGES WHICH DO NOT 
REPRODUCE LEGIBLY ON BLACK 
AND WHITE MICROnCHE. 




REPORT DOCUMENTATION PAGE 


Fonn Approved 0MB No.0704 


PUbk fcpertPt btrden fir coltctuD of MifoniabaD a estmated to avenge 1 fanr per reepoore. arfcidwt Ifie DBie fir leviewng watcwAtxa, teardrog oesoag data sources, 
gahjwiiig aod tfa (fita seeded, and coaapkbpg and levaaaig the cofectao of nfirmaiwn Send coanentt rtgardng fiat btrden eittnate » any otfar aapect of das 

celecten of afibrauhon, ariuihng wggriftmr far redno^ ifaa burdeti. to Waih®0oo Headguartm Serrrei. Drectarae far InfinMliaD Qperatuca and Reports. 1215 Jeffersoo 
Data Highway. 1204. Adto^ VA 22202-43CZ and to fce OflSce of MaaageaaEnt and Budget Papcnvtric ReducttoD Project OrKM-OlSS). Wailmgtaa DC 20503 

L AGENCY USE ONLY (LenrcblHk) 2. REPORT DATE 

March, 1995 

3. REPORT TYPE AND DATES COVERED 
Master’s Thesis 

4. TITLE AND SUBTITLE SCHEDULING BASIC TRAINING 
FEDERAL ARMED FORCES OF GERMANY 

FOR THE 

5. FUNDING NUMBERS 

t. AUTHOR(S) 

Drews, Ralf 

7. PERFORMING ORGANIZATION NAM£(S) AND ADDR£SS(ES) 

Naval Postgraduate School 

Monterey, CA 93943-5000 

S. PERFORMING 
ORGANIZATION 

REPORT NUMBER 

9 . SPONSORING / MONITORING AGENCY NAME(S) AND ADDRESS(ES) 

le. SPONSORING/ 

MONITORING AGENCT 
REPORT NUMBER 

11. SUPPLEMENTARY NOTES The views expressed in this thesis are those of the author and do not reflect the 
official policy or position of the Department of Defense or the US. Government 

12«. DISTRIBUTION / AVAIlABILnY STATEMENT 

Approved for public release; distribution is unlimited 

m. DISTRIBUTION CODE 

13. ABSTRACT (Maximum 200 woTxb) 

This thesis describes the design, development and testing of a personal computer-based system to 
schedule basic training for Federal Armed Forces of Germany (Bundeswehr) conscripts. Each quarter 
20,000 conscripts undergo three months of basic training in over 100 different units. The training objectives 
fit in 450 training topics which are currently scheduled in a time consiuning manual process. An interactive 
PASCAL program with a graphical user interface heuristically constructs a schedule and accommodates 
manual changes. The heuristic uses a clock advancing selection algorithm followed by an improvement 
algorithm. After pre-assigning topics that require a special facility or instructor, the heuristic schedules the 
remaining topics while satisfying all prerequisites. Extensive testing of the program on realistic data shows 
that the softw'are produces a high quality schedule with face validity and requires less than ten minutes on 
an IBM 80486DX-2 66MH2 personal computer to construct a schedule for one quarter. It is estimated that 
quarterly data entry, schedule review and revision with the program would require 1.5 man-days; this is a 
significant savings compared to the 10 to 15 man-days currently needed without the program. Considering 
100 units must produce a quarterly schedule four times a year, the program would cut the Bundeswehr 
yearly scheduling eflfort from between 4,000 and 6,000 man-days to an estimated 600 man-days. 

14. SUBJECT TERMS 

Scheduling, Time Tables, Heuristic, Computer, Graphical User Interface, 
Manual Changes 

15. NUMBER OF PAGES 

124 

U. PRICE CODE 

17. SECURITY CLASSm- 18. SECURm' CLASSIFI- 19 . SECURITY CLASSIFI¬ 
CATION OF REPORT CATION OF THIS PAGE CATION OF ABSTRACT 

Unclassified Unclassified Unclassified 

20. LIMITATION OF 
ABSTRACT 

UL 


NSN 7540-01-280-5500 Standard Form 298 (Rev. 2-89j 


Prescribed by ANSI Std 239-18 

























Approved for public release; distribution is unlimited 

SCHEDULING BASIC TRAINING 
FOR THE FEDERAL 
armed forces of GERMANY 


Accesien For 


Ralf Drews 

Captain, German Army 

M.S., Federal Armed Forces University, Hamburg, 1984 

Submitted in partial fulfillment of the 
requirements for the degree of 


ntis CRA&I 
DTIC tAB 

UnannoLKiced 

Justitication 


By.... 

Distribution / 

Availability Codes 

Avail and/or 
Dlst Special 


MASTER OF SCIENCE IN OPERATIONS RESEARCH 


fi:'om the 


NAVAL POSTGRADUATE SCHOOL 
March 1995 


Author; 


Approved by: 




RobertT^elUSe^nd Reader 


Peter Purdue, Chairman 
Department of Operations Research 










ABSTRACT 


This tiiesis describes the design, development and testing of a personal computer- 
based Q^tem to schedule basic training for Federal Armed Forces of Germany 
(Bundeswehr) conscripts. Each quarter 20,000 conscripts undergo Aree months of basic 
training in over 100 different units. The training objectives fit in 450 training topics which 
are currently scheduled in a time consuming manual process. An interactive PASCAL 
program with a graphical user interface heuiistically constructs a schedule and 
accommodates manual changes. The heuristic uses a clock advancing selection algorithm 
followed by an improvement algorithm. After pre-assigning topics that require a special 
facility or instructor, the heuristic schedules the remaining topics while satisfying all 
prerequisites. Extensive testing of the program on realistic data shows that the software 
produces a high quality schedule with face validity and requires less than ten minutes on an 
IBM 80486DX-2 66 MH 2 personal computer to construct a schedule for one quarter. It is 
estimated that quarterly data entry, schedule review and revision with the program would 
require 1.5 man-days; this is a significant savings compared to the 10 to 15 man-days 
currentK’ needed without the program. Considering 100 units must produce a quarterly 
schedule four times a year, the program would cut the Bundeswehr yearly scheduling effort 
fi-om between 4,000 and 6,000 man-days to an estimated 600 man-days. 





THESIS DISCLAIMER 


The reader is cautioned that computer programs developed in this research may not 
have been exercised for all cases of interest. While eveiy effort has been made, tvidiin the 
time available, to ensure that dte programs are free of computational and logical errors, 
they cannot be considered validated. Any application of these programs without additional 
verification is at the risk of die user. 





TABLE OF CONTENTS 


introduction. 

A. BACKGROUND. 

B. RELATED WORK. 

C. HARDWARE AND SOFTWARE CONSIDERATIONS 

1. Hardware Availability. 

2, Software Availability. 

D. USER PROFILE. 

E. DATA. 

MATHEMATICAL DESCRIPTION. 

A. MEASURES OF EFFECTIVENESS. 

B. MODEL. 

SOLUTION APPROACH. 

A. HEURISTIC. 

B. ALGORITHM DESCRIPTION. 

1. Main Outline. 

2. Prescheduling... 

a. Garrison Training Area. 

b. Firing Ranges. 

3. Scheduling Heuristic. 

4. Improvement Algorithm. 

C. TEST PLAN AND TEST DAT A . 

ENVIRONMENT AND USER INTERACTION. 

A. USER INTERFACE. 

B. DATA ENTRY AND VALIDATION. 

1. Basic Schedule. 

2. Instructor Availability’. 

3. Training Facility'... 

4. Battalion^ Division Requirement. 

5. Other Input Menus. 

6. Data Checking. 


4 

5 
,5 
,5 

.6 

.6 

.9 

.9 

10 

17 

17 

19 

20 
26 
.26 
.31 
.36 
.39 

.41 

.43 

..43 

..45 
.. 46 
..47 
..48 
..49 
..50 
...52 


































C. PRCX5RAM OUTPUT. 

D. USER INTERACTION. 

V. RESULTS. 

A. SCHEDULE CALCULATION. 

B. SCENARIO OF USE. 

C. BENEFITS AND ACCEPTABILITY. 

D. TRAINING REQUIREMENTS. 

VI. CONCLUSIONS AND RECOMMENDATIONS. 

APPENDK A; A MONTHLY VIEW OF MAIN SCHEDULE OUTPUTS 

appendix B; PARTIAL PRINTOUT OF A SCHEDULE. 

APPENDIX C ; PRINTOUT OF A REPORT. 

APPENDIX D; DISPLAY OF SUB-MENUS IN THE INTERFACE. 

appendix E: DISPLAYS OF INPUT \\TNDOWS. 

APPENDIX F: DISPLAYS OF WARNINGS AND MESSAGES. 

APPENDIX G: SAMPLE INPUT DATA FOR ONE QUARTER. 

APPENDLX H: PSEUDOCODE FOR PROGRAM. 

APPENDIX I; PROGRAM DESCRIPTION. 

UST OF REFERENCES. 

INTTIAL DISTRIBUTION LIST. 


53 
57 
65 
65 
,72 
.73 
.74 
.75 
.77 
.79 
,.81 
..83 
..85 
..91 
..95 
..99 
,105 
. 109 
.111 






















EXECUTIVE SUMMARY 


The Gennany Aimy (Burukswehr) is a conscript force that drafts approximaiely 
20,000 people <iuaBeily to serve for 12 rnonths. During the first three months draftees 

undergo basic training in n-edal ■»<>« ^ «» 

mimng objectives. A Master Sergeant or Chief Master Sergeant correnfly sch^es the 

450 training objectives for a company of these conscripts (approximately 150 sobers 
takes the scheduler approamately two to fliree weeks each quarter to manually pei^ 
compUcated duty. This time is valuable and keeps the soldier ftom pursuing hs other 

duties For this reason a complete quarterly schedule is seldom developed. For most 

muulers the fimt ttiree to four weeks are completed and the remaining scheduling n 
perfoimed on a week to week basis. This thesis develops a computer program to quickly 

and efficiently produce a quarterly schedule. 

Producing a quarterly schedule is a complicated and limeswnsunung task smee it 
must account for a number of constraints. Many training objectives have inter¬ 
dependencies or requirements for speciri instructors and facilities. These special temetors 
(Security Personnel, Medical Personnel, Mifitaiy Priest, and Social Worker) and facilmes 
(Garrison Trairung Area, Firing Range, Gymnasium, and Obstacle Course) are scarce 
resources and not always available. The schedule should also have an appropnate im\ o 
lectures and physical activities. Legal and clerical holidays as weU as possible days of leave 

also increase the complexity of the schedule. ... 

The program with a graphical user interface constructs a schedule using decision 

rules similar to those the scheduler employe and accommodates manual changes. Afte 
pre-assigning topics that require a special facility or instructor, the program schedules the 
remaining topics while satis^ing aH prerequisites. Before presenting the result to the 
scheduler for evaluation the program tries to improve its solution by testing local 

interchanges of assignments. ,, , 

The user can modify' the computer calculated solution with addmonal help ftom the 

machine which tests whether requests for changes conform to the requirements and 

interdependencies. If die program detects possible violations in the user request it alerts the 

user and requires a confirmation before implementing the charge. 


XI 



Extensive testing of Ae program on realistic data shows that the software produces 
a qualily schedule witfi face validity and requires less tfian ten minutes on an BM 
80486DX-2 66MHz personal computer to construct a schedule for one quarter. 

It is estimated that quarterly data entry, schedule review and revision with the 
program would require 1.5 man-days; this is a significant savings compared to the 10 to 15 
man-days currendy needed wifliout the program. Considering 100 units must produce a 
quarterly schedule four times a year, die program would cut the Bundeswehr yearly 
scheduling effort from between 4,000 and 6,000 man-days to an estimated 600 man-days. 


xii 



I. INTRODUCTION 


The Grennany Army (Bundeswehr) is a conscript force that drafts approximately 
20,000 people quarteriy to serve for 12 montiis. During Ae first Aree months Aaftees 
undergo basic training in special basic training units and must satisfy more Aan 450 
training objectives. A Master Sergeant or Chief Master Sergeant current schedules Ae 
450 training objectives for a company of Aese conscripts (rqrproxiinatefy 150 solAers). It 
Ae scheduler approximately two to Aree weeks each quarter to manually perform this 
complicated duty. This time is valuable and keeps Ae soldier fi'om pursuing his oAer 
duties. This Aesis develops a computer program to quickly and efiSciendy produce a 
quarterly schedule. 

A. BACKGROUND 

The problem consists of assigning topics that comprise more than 450 objectives to 
available time periods and in cases when all topics cannot be scheduled, deciding which 
topics to leave out of Ae schedule. Each training objective is achieved in one or two time 
periods. The lengA of a single period is 45 minutes fi'om 0700 until 1700 hours and 60 
minutes at all other times. Interdependencies among Ae training topics and prerequisites 
among them increase Ae difiBculty of scheduling. 

The training objectives can be divided into four groups. The first consists of a large 
track where each topic builds on previous topics and interchanges in Ae sequence are 
nearly impossible. The second group (approximately 25 percent) has training objectives 
wiA up to ten other topics as prerequisites. The next group (30 percent) has up to four or 
five prerequisites and the fourth and last group (40 percent) has no prerequisites. 

The training objectives are specified in Ae Catalog of Training Objectives (CTO) 
{Heeresaml, 1988). This catalog structures Ae topics into main groups that are named 
according to a joint forces naming convention. A total of 14 different topic groups are 
employed in basic training. Each group consists of multiple topics and can be identified by 
a two-digit code. These groups, Ae number of topics and Ae time requirements are shown 
in Table 1. The groups are not independent and a topic may have prerequisites in oAer 
main groups; also topics from different groups may require Ae same training facilities. To 
guide manual scheduling and enforce at least to some degree conformity in training over all 


1 



basic training units, die CTO provides a flowchart diat outlines suggested scheduling of 
topic grotqis or subgrot^ into sequences and also indicates prerequisite chains 
{Heeresamt, 1988, Anlage 1). fl does not provide a fixed requirement in weeks and does 
not have a time scale. 



Topic Main Group 


General Combat Training For All Branches 


Anti Tank Warfare / Identification 


eer Service 


NBC Defense And Self Protection 


Basic Medical Trainin 


Training With Weaponry And Material of All Branches 



With Handheld Weapons And Live Fi 




Sports 



General Knowledge About Troops And Organization 


Military Cure Of Souls And Character Guidance 


Civic Education And Leadershi 



20 

12 

3 

3 

3 

6 

23 

29 

13 

21 

145 

150 

411 

522 


General Services 


TOTAL: 


Table 1: Topics Breakdown in Main Groups in the Catalog of Training Objectives 

Anti Tank Warfare / Identification and Formation Training, shown in Table 1, have 
more entries than hours to be scheduled because not all topics in these groups need to be 
done. The company commander chooses topics in these groups according to his available 
assets. 

Certain topics have to be done at a special facility and nowhere else. These 
facilities are usual key facilities that have limited availability since they have to be shared 
with other military units. This complicates the scheduling process on one hand but on the 
oflier hand gives it a certain structure. Five key training facilities are identified in the CTO; 
the other training can be done at company owned facilities. The key facilities with their 
codes (indices) used in the computer program described in Chapter BI are shown in 
Table 2. 

Most of the training is done under the command and control of the platoon leader 
which allows for all platoons to have most objectKes scheduled simultaneous^. Nearfy 20 


2 












































-roent of fte training, however, has to be done by the Company CotntnMder or the 

^ter Sergeant of die Company which leads to scheduling eonffiets beMUse t^ cm ^ 

ttain one platoon td a tinie. NonavailabiHty of instn«»ots in certam penods d,« to 

!IlLincmases«« complexity of the scheduling Other topics h^ to be 

^by special insuuctms who are not company pemonnel. This r«iinr« comduiauon. 

mitl^tors identified in the CTO are shown in Table 3. For Uter use the abbrevuUon 

and the computer code is included. 


Facility Type _ 

Garrison Training Area _ 

Firing Range ___ 

Gymnasium / Athletic Field _ 

tOutdoor/Indoorl Swimming Pool 
Obstacle Course _ 


Code Number 
1 ~~ 
2 ^ 

3 

4 ~ 

1 


Table 2: K^Tiininr^icilities in CTO and I heir Computer Representation 


_ Position _ 

Battalion Commander 
Company Commander 
Chief Master Sergeant 

Platoon Leader _ 

NBC-Defense Sergeant 

Military Priest _ 

Medical Personal 
Social Worker 
S2 Personal__ 


Abbreviation 
BtlCdr 
CpCdr ~ 
CMSgt 
PltLdr 
NBCSgt 
MilPriest 
MedPers 
SoeWork 
SeePers 


Code Number 
0 

1 ~ 

2 " 

3 " 

4 

5 

6 

7 

8 


1 PeTSOtlSl ovwr VIJ I -■ ^ 

X,bte 3: Instructor Personnel with AbbrsviaUons and Computer KepresenUtion 

Additional lower priority restrictions, such as providing an appropriate daily mix of 
theoretical and practical instmetions and ensuring special physical training does not happen 

«raLalbreah,have.obeincon,om.edasweh.TofacihU^^^^ 

dmse resuictions each topic is given an identifier that specifies whether the topic is a 
nractical (manual) exercise or a lecture. 

L whole schedule is cu^ntly produced by hand in a labor and time mtenswe 
luocess After the external training facilities have been assigned, the company comman er 
^ a rough outline of Ms intentiotis to the scheduler, who then sits down and tnes to 
Corporate all requirement and restricrions into a feasible schedule for the platoons. 


3 




After producing he thinks is a feasible schedule, the result is reviewed by the 
company commando' and die platoon leaders, they find topics they diink could be 
tau^t better at different periods, die Sergeant tries to incorporate these changes. Ehie to 
die complexity of die scheduling problem, incorporating changes i^e ensuring all 
restrictions are observed can be a time consuming process. 

B. RELATED WORK 

Models for scheduling or timetabling diat appear in the Operations Research 
literature often deal with special situations and are tailored for die needs of the special user. 
The most similar scheduling models are school or classroom models (Schmidt, 1979). 
Those models focusing on classroom or course scheduling deal with only a moderate 
number of different topics and focus on one week. The other weeks in a course sequence 
are always assumed to be the same (de Werra, 1985 or Mulv^, 1982). The main 
emphasis in those models is to find a course scheduling combination that allows most 
students to take dieir favorite combination and minimize the number of students who have 
to switch courses. These models employ either linear programming techniques (Lawrie, 
1969) or graph coloring (Wood, 1969). 

Another focus of available models is examination scheduling. Those algorithms try 
to schedule exams such that no student has to take two in one day and other criterion are 
met. Other criterion are often specified by the policies of the institution diat uses the 
model. Those models also have limited scope and deal with only a small number of 
available time periods to schedule the exams, usuall>' a week or at most two weeks. 
(Oakford, 1966 and Wood, 1968) 

Justice (1993) looks at scheduling class sequences needed by soldiers in the U.S. 
Marine Corps to qualifj' for an electronics communication specialty. The focus of his 
scheduling problem was minimizing the time between different classes rather than 
scheduling individual topics in the courses (the focus of this thesis). 

None of the models published so far deals with a whole quarter with distinct topics 
to be scheduled each day. On the other hand, trainees do not have individual schedules; 
the trainees in each platoon have die same track. The complexity and difficulty of 
scheduling is due to the large number of topics, the large number of possible assignments, 
and ensuring the requirements and prerequisites are satisfied. 


4 




Most of the modeb found in Kterature were not designed for personal coniputers. 
Most modeb were written prior to dte advent of personal computing and were therefore 
to eitecute on nurinftame computers (as Uighton, 1979 and Romero, 1982). The 

model developed here has to he used in die company fliat can only employ programs that 

run on personal computers. 

C. HARDWARE AND SOFTWARE CONSIDERATIONS 

The primary goal is to develop a program that can soWe the problem in a 
eeasonable time to convert a bbor intensive manual task into a computer assisted one 
Secondly, it should work with the available hardware and software, as descnbed below. If 
a high quality solution cannot be achieved with existing hardware and software, this 
requirement will be superseded by the primary goal. As the solution will show, the 
problem can be solved on the existing equipment. 

1. Hardware Availability 

The available hardware b an IBM^ompatible system with a 80386SX processor 
and at most four Megabyte of random access memory (RAhf). The system is equipped 
with a feed disk where the capacity depends on the date the system was fielded. The low 
end systems have a storage capacity of only 40 Megabytes. The systems are dtstnbuted as 
stand-alone systems. They have not and will not have in the near future a modem or 
access via a modem to a central computing facility. The attached printer b a dot-matrix 
printer, eiflter 9-pin or 24-pin, with a narrow carnage. Therefore, only printmg m portrait 

orientation is possible. 

2. Software Availability 

The given systems are DOS based using the Microsoft™ DOS 5.0 version of the 
dbk operating system. No systems are equipped with Windows and for the near future the 
fielding of Windows for aU systems cannot be expected. They come equipped with a 
wordprocessor, a DOS database and a small drawing program. No programmmg 
Unguages except the supplied Basic are available and there are no other appbcation 
programs The main use of the machine b that of a typewriter with storage capabihly. 


5 



D. USER PROFILE 


The main user for this scheduling program is a Master Seigeant or Chief Master 
Sergeant ^o has joined the armed services either as a long term volunteer (12 to 15 years) 
or as a professional. His past experiences is ideality that of a platoon leader although 
occasionally Sergeants widiout tfus experience get assigned to die position of Company 
Squad Leader and Nuclear - Biological - Chemical - Defense Sergeant (NBC-Defense 
Sgt.). The average time he spends on the job ranges form three to five years. 

Computer knowledge is not a prerequisite for getting this assignment. In combat 
and combat support branches, Ae computer is not widely used and Aus Aere is no need to 
train every soldier how to use one. Therefore, Ae new scheduler could have had no 
exposure to computers, eiAer in Ae military or civilian life. 

Because of Ae potential lack of users' exposure to computers, Ae scheduling 
program must be easy to use; Aat is, it should have a low learning curve. The program 
should also have a sufficient amount of internal error checking to support Ae 
unsophisticated user and the novice. 

E. DATA 


The data for Ae schedule and thus for the program can be classified into three 

groups: 

• unchanging data such as in Ae catalog of training objectives; 

• sometimes changing data such as the basic weekty’ schedule and Ae number of 
platoons per quarter; 

• quarterty changing data such as legal and clerical holidays, key facilit>- 
assignments, and instructor availabilit>'. 

The training objectives in Ae CTO can be considered unchanging data. The>' could 
be supplied wiA the distribution of Ae program. In Ae rare event Ae CTO or parts of it 
change Aose changes should be maintained centrally. They should be handled on Ae same 
level as changes in regulations. The distribution of this data set with Ae program and 
subsequent updates in the form of normal regulation maintenance and changing procedures 
is Ae safest way to keep evety single copy at Ae same level. Using this approach reduces 
Ae computer knowledge a scheduler has to have. Thus the scheduler has no need to 
boAer wiA Ae way files are stored and in what format Ae>’ might be saved. 


6 



Some data that are not likely to change often are shared between quarters. 
Although die program sets them automatically, at the beginning of the work on a new 
quarter the scheduler may display and change them. This reduces the data input in 
subsequent uses of the program and should not interfere with the work. Although two 
quarters can be handled simultaneously, the recalculation of the current quarter at a time 
when the data for the next quarter are all available is unlikely. Usually the data are 
available three to four weeks prior to the beginning of the quarter. Therefore, the 
recalculation of the current quarter does not provide a meaningful result because large 
portions have already been executed and the schedules cannot be changed any more. 

All the other data change every quarter. The legal and clerical hoUdays are not built 
into the basrc calendar. The regulations differ for all states in the Federal Republic of 
Germany and this piece of information can be given by the user easily and quickly. It 
requires filling only one dialog box. Additionally, this provides the opportunity to supply 
data in one input step about other days of leave, special leave or leave for additional duty. 

Most of the other data has to be supplied by the user. Due to the diversity of 
garrison structures and regulations it is not possible to provide a basic one>fits-aD data set. 
Following the idea of mission-type tactics, the company commander needs the freedom to 

make basic training decisions and use the program as a decision aid and not as a controller 
and regulator. 


7 






II. MATHEMATICAL DESCRIPTION 


This chapter develops a mathematical description of the problem outlined in 
Chapter I. The description contains both the data structure used to implement the heuristic 
as well as an integer programming fonnulation. 

Measures of effectiveness are defined; they are used to evaluate the goodness of the 
schedules that are constructed. 

A. MEASURES OF EFFECTIVENESS 


Any schedule that is produced by a person or by a machine has to be evaluated for 
quahty. To make comparisons between results, common quantified measures have to be 
^lied. The users’ subjective feelings about a schedule cannot be easily taken into 
account in evaluating a computer constructed solution. A single measure of effectiveness 

(MOE) for the whole schedule does not seem appropriate due to the complexity of the 
task. 

Some MOEs picked to measure the quality of a solution are simple counts. Other 
MOEs involve more computation such as the penalty for a topic that could not be 
scheduled being a umtless measure of the relative importance of a topic. Another MOE 
uses the distances in periods from the CTO suggested time fi-ame for a topic and the actual 
period it is scheduled. The following summarizes the MOEs: 

• Sum of all penalties for topics that could not be scheduled (MOEl); 

• Number of topics that could not be scheduled; 

• Sum of the distances between the suggested periods for scheduling and the 
actual period a topic is scheduled: 

° for topics that do not need a special facility or external personnel (MOE2), 

° for topics on a Garrison Training Area (MOE2g), 

° for topics on a Firing Range (MOE2f), 

° for topics given by external instructors (MOE2o); 

• Number of topics scheduled outside the suggested periods for scheduling: 

° for topics that do not need a special facility or external personnel (MOE2), 

° for topics on a Garrison Training Area (MOE2g), 

° for topics on a Firing Range (MOE2f), 

° for topics given by external instructors (MOE2o); 


9 



• Number of occurrences when tfiree topics of type lecture are consecutively 
scheduled for the platoon (MOE3). 

The abbreviations in parenthesis are used in the program and are also featured in 
reports given by the program (/^ipendix C). The MOE’s are incorporated into die 
foDowing mathematical descr^tion of the problem. 

B. MODEL 


The model description reflects data structures and solution mechanisms used. All 
data used in the integer program are marked with a vertical bar (1) on the left side. Other 


data are necessary 

for data preparation and output. 


Indices: 

1 t: 

topics 

II 

currently MT = 450; 

1 i: 

instructors 

(i = 1, 2,..., NI), 

currently NI = 8; 

1 f: 

facilities 

(f=l, 2,..., NF), 

currently NF = 5; 

1 p: 

periods 

(p = 1, 2,..., MP), 

currently MP = 600; 

1 pl: 

platoons 

(pl=l,2,..., NP), 

currently NT = 3; 

s: 

Saturdays 

1 , 2,..., 5; and 


h: 

holidays 

1, 2,..., 15. 



Given Data: 


TL[t]: data structure that contains 
Each entry' in the structure 
TL[t]. C odeNumber 
TL[t].RunIndex 

TL[t].InstructionType 


TL[t].Instructor 

TL[t].Duration 

TL[t].DayTime 


; CTO's list of topics, 
isists of the following information: 
nine digit numeric code for the topic, 
two digit running index of topics with 
the same numeric code, 
one character for classification of 
lecture or practical training (U, P), the 
ty'pe “U” for lecture results from the 
German “'Unterrichf - “lecture”, 
instructor index (possible values are 
1 , 2,..., or NI), as given in Table 3, 
length of time to reach the training 
objective (1, 2,..., or 7), 
classification of daytime objective or 
objective to be taught under 
conditions of limited visibility (D, N), 


10 




TL[t].Facility 

TL[t].SubFaciIity 

TL[t].FixedTime 

TL(t].Prerequisite 

TL[t].Penalty 

TL[t].Earliest 

TL[t].Latest 

TL[t]. Scheduled[pl] 


facility (possible values are 

1, 2 ,or NF), as in Table 2, 
classification of range length for 
Firing Ra^es (A, B, C, D), 
classification whefiier die topic has 
been prescheduled at a fixed time by 
user, 

linked list of numeric codes specifying 
prerequisites for this topic, 
integer value for not using fius topic 
in scheduling (1, 2,..., 1000), 
number of the earliest week topic t can 
be scheduled, (fi-om the flowchart in 
die catalog of training objectives), 
number of the latest week topic t can 
be scheduled, (fi-om the flowchart in 
the catalog of training objectives), 
Boolean entiy for each platoon in an 
array, 0 if topic has not been 
scheduled, 1 otherwise. 


BS[p]: basic weekly schedule for the company with start time and 

end time for each period of the week (p = 1, 2,..., 46), 

F[fl ■ assignment of facility f for the company, supplied by user 

and given in acUial calendar dates and clock times 
(f = 1, 2, ..., NF), 


m 


C: 


R: 


availability of outside instructors and unavaQability of 
company instructors given in actual calendar dates and clock 
times (1=1, 2,..., NI), 


main calendar data for the quarter, 

C. Arrival date of arrival for new conscripts, 

C.Departure date of departure for then trained conscripts, 

C.Sat{s] dates for Saturdays and Sundays with duty 

(s = 1, 2, ..., 5), 


C.Hol[h] dates with legal and clerical holidays in the 

quarter as well as special leave dates 
(h=l,2, ..., 15) 


requirements fi-om division or battahon level for topics in 
the catalog ghen in the format: 

R.TopicCode the nine digit codenumber of the topic, 

R Req the requirement for this topic, i.e. : when to 

teach, when not to teach, how often per week 


11 



Derived Data: 


special topics Aat are not in die catalog of training 
objectives, given as: 

S.Date die date this topic has to take place, 

S.Time die time of the day, 

S.Instructor the instructor ^o has to instruct this topic, 

S.Tide die tide of the topic. 

total enumeration of ad periods in die quarter from given 
data in BS[p] and F[f], thus only those periods that cm be 
scheduled are enumerated; in supplement to the index 
naming die period die following information is kept 
(p = 1,..., MP): 

P[p].Dates the calendar date of penod p, 

P[p].Times the time frame of period p, 

P[p].DayTime the daytime of the penod, with differences 
between periods in Summer or Winter half of 
the year, 

P[pl.DayOfWeek the day of die week for period p. 


P[p].DayOfWeek the day of die week for penod p. 

Fac[f]: period equivalent coding of data supplied by user in F[f], 

with the following structure (f = 1, 2,..., NF): 

Fac[f].SubFacility range length coding for Firing Ranges 
(A, B, C, D), 

Fac[f].Period the periods the facility is available, 

Fac[fl.Next pointer to the next available period for 

facility f. 

{FCapacity[f, p]: For the integer program that follows, dm 

is the number of platoons that can train in 
facility f in period p. This can be formed 
from the Fac[f] data structure.} 

Ins[i]: period equivalent coding for the data about instructors 

supplied by user in I[i] (I = 1, 2,..., MI): 


Fac[f].Period 

Fac[fl.Next 

{FCapacity[f, p]: 


Ins[i].Period the period instructor i is available, if outside 

instructor, or not available otherwise, 
Ins[i].Next pointer to the next period information for 

instructor i. 

{ICapacity[L p]: For the integer program that follows, this 

is the number of platoons that can be trained 
by instructor i in period p. This can be 
formed from the Ins[i] data structure.} 

requirement list coding from data R into period notation 
wiA the format: 

RL.TopicCode the nine digit numeric code of the topic, 


12 



RL-OnlyAlPeriod period number, if requiremrat that this topic 
should be given only at certain periods, 
RL.NotAtPeriod period number, if requirement dial this topic 
should not to be given at certain periods, 
RL.NoMoreThan a single number, if die topic should not be 
given more than diat many times per week, 
RL.AtLeast a single number, if die topic should be given 

at least that many times per week. 

I E[pl,t]: earliest starting period for topic t, derived from 

TL[t].Eariiest (pi = 1,NP; t = 1,MT). 

I Llpk t]: latest starting period for topic t, derived from TL[t].Latest 

(pl = l,..., NP;t=l,..., MT). 

Decision Variable: 

I Sched[t, pk p]: 1 if topic t is scheduled to start for platoon pi at 

period p, 0 otherwise, 

(t = 1,..., MT; pi = 1,..., NP; p = 1,MP) 

1 Z(pl,p]: 1 if period p,p +1 and p + 2allhavea lecture topic 

for platoon pi, 0 otherwise, 

(pi = 1,..., NP; p = 1,..., MP) 


Formulation; 

/ \ 


Minimize ^ ^ TL[t^PenaIty'^ 1- ^ Sched[t,pl,p^ 

pi t ^ p ' 

(1) 

Mininiize l-^Sched[t,pl,p] 

pi t p ' 

(2) 

\1inimize 

t pi p<E\plj] 

ZS 'Z{p-L[pI,tfSched[,,pl,p] 

t pi 

(3) 

Minimize X 2 2 22 2 

(4) 

Minimize 22^[^^’^1 

(5) 


pi p 


subject to: 

2 '^Sched[i,pl,p'] <1 

p ^p-TL[:].DuratiOfi*l 

V p = 1,..., MP; t such that TL[t].Instructor PltLdr (6) 


13 




2 2 Schecl[t,php'] = 1 Vpl = 1,... KP; p = 1,... MP (7) 

p 

2 2 '^Sched\t,pl,p''\< FCapacity[f ,p\ 

t sJt, Tl[t].Faciliy^f pi p -p-Tl\t].I>iration^l 

V p=l,...,MP;f=l, ..,NF (8) 

Sched\t^pl,p -l]*( TL\t^fDuration -1) + 

t tJL. T!\t\.hstrwiTyp€-U 

2] Sched\t,pl,pYTL\t\Duration + 

t sJt, Tl\t\lnstrua'typ€~V 

'^Sched\t,pl,p ■¥\fTL\t\Duration + 

f 7l(r].ihsfmir7)(pf=y 

'^Sched[t,pl,p +2] < (2+Z[/?/,p]) 

t ss, 7l[t]Jnstma7ypf~U 

Vpl = 1,... NP; p = 1,... MP-2 (9) 
2 2 'f^Sched[t,pJ,p']< ICapacit){i,p] 

t sJ. 77{t].Jnstruaor=i pi p'-p-TL[t].Duration*} 

V p = 1,..., MP; I = 1,..., NI (10) 

Sched[t,pl,p] < 2 

p'<p-TL\t‘].Duration*l 

V p = 2, 3,..., MP; pi = 1,NP; (t,t’) s.t. t’ € TL[tl.Prerequisite (11) 

The first objective function, Equation (1), corresponds to MOEl and sums the 
penalties for the topics that could not be scheduled. Equation (2) counts the total number 
of topics not scheduled. The Equation (3) sums the absolute distances between the actual 
period a topic is assigned to and the closest interval limit of the period numbers derived 
fi-om the flowchart in the CTO. Values in the interval incur no wei^t in this objective 
function. This objective function corresponds to MOE2 and its subdivisions. Equation (4) 
sums the actual number of topics scheduled outside the suggested timeframe. The last 
objective function (5) counts the number of occurrences when three or more topics of 
lecture t)pe are scheduled back to back. 


14 



The first constraint, Equation (6), allows each topic fiiat requires an instructor who 
is not the platoon leader to be scheduled only for a single platoon in a period. The next 
constraint (7) ensures scheduling for exactly one topic in each period for a sin^e platoon. 
Equation (8) enforces that die facility required for a topic is available when the topic is 
scheduled and allows only as many platoons on the facility as capacity available. The forth 
constraint (9) sets the value in the array Z[pl, p] to 1 if three topics of the same type are 
scheduled back to back. If more than duee topics of lecture type are scheduled 
consecutively, for example in die periods p, p + 1; p + 2 and p + 3, dien the entries in the 
arrsty for Z[pl, p] and Z[pl, p + 1] must both equal 1. The next constraint (10) enforces 
that an instructor is only scheduled if available. The last constraint (11) insures that each 
topic is assigned in the schedule onty if the prerequisites have been assigned prior to the 
period the topic has to start. 

In the decision variable Sched[t, pi, p] all those entries that correspond to 
combinations of t and p that can never be used are set to zero in the initialization. For 
example, these are the combinations where die day / ni^t identifier for the topic and the 


period do not match. 

Thus saying, TL(t].DayTime st Period[p].DayTime. 

This integer 

program would have approximatety the following number of 

constraints: 


• for (6): 

600*450 = 270,000 equations in the worst case (approximately 
40 percent of these constraints would be needed in the test problems 
considered); 

• for (7): 

3*600 = 1,800 equations; 

• for (8): 

5*600 = 3,000 equations; 

• for (9): 

3*598 = 1,794 equations; 

• for (10): 

8*600 = 4,800 equations; 

• for (11): 

3*599*225*450 = 181,946,250 equations in the worst case 
(approximately five percent of these constraints would be needed in 
the test problems considered); 


This then would amount to a total of approximately 9,216,707 equations for the 
constraints. The number could go up in the worst case, considering all totals, to 
182,227,644 equations. In die worst case, the Sched[t, pi, p] would have 810,000 
(450*3*600) binaty variables, and 1,800 (3*600) Z[pL p] binary variables. 

It is possible to give a description with fewer variables. The schedule array 
Sched[t, pi, p] should be converted from a zero-one array to an integer array using the 
actual topic index as an entry. This reduces the storage needs of the problem. 


15 





To iUustrate the connection between tfie two models die diree-dimensional array 
above is mapped into the two-dimensional array below using the foUowing mapping 
function: 

p 

Sched\pl,^ = / if and only if 2 

p'=p~7l[r] Durmm*l 

Vpl=l,...,NP;p=l, .,MP (12) 

The ahemate mathematical foimulation which is closer to the actual computer 
evaluation fllustnites how Ae MOE’s are calculated using Ae two-dimensional array. 
Those MOE’s correspond to Ae objective functions from Ae maAematical description. 

Formulation: 

Minimize , 

pi p 


Minimize 2 '^(l-TL\Schedlpl,p)I^Scheduled[pI^ 


pi p 

Minimize 22 

pi F 


{E[pI,Sched[pJ,p]]-p) if [p ^ E[pl,Sched[pl,p'^ 
(p-l\plSched[php'^ if {L[pl,Sched[pl,p'^ < p) 




(13) 

(14) 


Minimize 2 Z ^- E[phSched[pI,p]]j+l if (L[phSched[pl,p'^ < p) (15) 

P 


Minimize 22^1^^’^] 

pi p 


(16) 


16 



III. SOLUTION APPROACH 


The integer program defined in the previous chapter would be difficult to solve 
exactfy, particularly with existing hardware. Since it is highly unlike^ that an exact solution 
could be achieved in a reasonable time, tiiis thesis develops a heuristic to solve tire 
scheduling problem. 

This section describes the specially designed heuristic and tiien all related 
programming steps. It also outlines the steps used test the program. In tiie chapter a 
distinction is made between program, algorithm and heiiristic. Program refers to the whole 
iiiq)lementation including graphical user interface. Algorithm refers onfy to the actual 
calculation of the schedule and its related steps. Heuristic refers exclusively to the actual 
calculation of tiie schedule. 

A- HEURISTIC 

The heuristic is a greedy assignment heuristic. It calculates a set of eligible topics 
and sequentially picks assignments for available schedule periods. The heuristic can use 
many difTerent selection and assignment rules. (This chapter presents a variety of alternate 
rules which are compared in Chapter V.) 

Regardless of the selection rule employed, the heuristic first pre-assigns the two 
major training facilities (Garrison Training Area and Firing Range). It then sequential]> 
assigns with limited backtracking from the set of eligible topics. When performing these 
assignments, the heuristic uses a period clock to determine of the next timeslot to assign. (A 
period clock refers to the method of starting with period one and after assigning to it 
advancing the clock to the next free (unassigned) period.) 

For a given period, the set of eligible topics is the set of topics that can be 
scheduled. Their eligibility depends on tiieir duration and prerequisites. To facilitate the 
calculation of the eligible set two additional sets of data are kept by determining for each 
unscheduled topic the earliest period and the latest period possible for scheduling. These 
additional sets of data take into consideration the already scheduled topics, necessit>' to 
consecutive^ schedule topic, as well as prerequisites. 

One important factor in the assignment of topics to periods is the consideration of 
topics that are presented by an instructor who has to lecture each platoon. Therefore, the 


17 



eligible set for each platoon may be different and may depend on previous^ assigned topics 
for other platoons, the instructor is already assigned to a platoon, a topic he has to 
lecture cannot be considered for scheduling at the same time for anodier platoon. For 
some periods diere may not even be an eligible set because die period has already been 
scheduled. This condition tqiphes to about IS percent of aH topics. Another fKtor making 
eligible sets different may be usage of the two pre-assigned training facilities. 

A topic may also temporary leave die eligible set widiout being assigned since die 
algoridim does not allow topics whose duration is longer than die remaining periods of a 
day to be broken into two parts. Those topics then have to leave the eligible set 
temporarily and return if possible on the next day. The same construct applies to topics 
that are linked to restricted scheduling because of the availability of the required instructor 
or training facility. Those can only be in the eligible set if periods for scheduling are 
considered in which the instructor or training facility is available. 

The following approach is then taken 
Generic heuristic: 

Initialize current period 

Initialize die eli^ble set with all topics that can be scheduled in 

this period 

while there are free periods do 

select a topic from the eligible set and schedule it 
update the data sets for earliest and latest scheduling 
update the eligible set 

while a topic cannot be scheduled because earliest > latest 
and the topic change has not been considered before do 
backtrack by unscheduling topics and inserting the 
problematic topic at the first feasible period 


Heuristic details follow: 

1. The heuristic selects a topic out of the eligible set as either 

a. the one with the least freedom to be scheduled, 

b. the one with the highest penalty for not being used, or 

c. the one with the longest duration first. 

2. The heuristic assigns the topic to either: 

a. earliest possible period, 

b. latest possible period, or 

c. some intermediate period. 


18 



3 The heuristic detects and breaks possible loops in backlrac^ by either 
for at most one unscheduHng and rescheduling of a 

b. aSo^ rescheduling of an unscheduled tope only if *e set of 

eligible topics has changed, not onty ^«se 
r^tered the sct but also due to additional topics entering or 


leaving, or 

c. taking at most n steps m backtracking. 

4. The rules to break ties can be to eWier 

a. choose one at random, or’ 

b. an alternate selection rule. 


As a result of the clock advancing heuristic, the period to be scheduled can be 
for plaloon due to topics of differeut duroliou that tave been ttssi^. To 
prevent driflmg benveen the platoons, the platoon that is the fiuth^ ^hmd tn 
scheduling, fliat is, whose period dock has the least period number, ts coitstdered tte or 
«*edttling. In case of ties the platoons are scheduled in numerical order. Due to te way 
oC selectin* the platoon in cases of ties the platoons with lower numerical tdenttfcauon 

misht get better schedules and the last platoon worse schedules. To compensate for , 

the schedules are interehanged between platoons where the past history of tnterchanges ts 

taken into accotmt to insure a fair distribution of schedule quality. 

The value of the penalty for the unscheduled topics can be either stattc wtth the use 
of predefined penalties as part of the dau or dynamic. The dynamic data are cdeuUted 
from the given value in the daU and the difference between the earitest and the latest 
possible period for scheduling. This takes into aecount the inereastng dtfficolty wtth 
decreasing possibilities and so should reduce the amount of necessaiy backtiackil^ 

After a schedule has been produced, an exehange algonthm sweeps the whoe 
schedule and tests possibilities to improve the schedule by exchanging topics with each 
other. Specific improvement targets are to increase dispersion of topics from the same topic 
group, and to increase the mix between lectures and practical instruction. 


B. algorithm DESCRIPTION 


The following section describes the actual implementation of die algorithm. The 
steps the algorithm takes in its decision process are stated explicitly and in depth. 


19 



1. Main Outline 


The actual decision algoritfim is embedded in a sequence of functions and 
procedures. The basic steps of Ae algorithm are: 

• Convert Ae data into con^uter format; 

• Validate Ae data; 

• Pi«schedule major training facilities; 

• Preschedule sports facilities and external instructors; 

• Schedule remaining topics (main algorithm); 

• Run improvement algorithm; 

• (Construct and display readable schedule. 

The sequence of steps is also aiustrated in the flowchart of Figure la and lb. Some 
of file entries in the algorithm are explained here, otheis in the foUowing ehapteis. During 
the whole calculation of the schedule the program displays a message box indicating fliat it 
is calculating the schedule. 

After determining wheAer Ae user has supplied all necessary data to calculate Ae 
schedule, Ae conversion parts of Ae program as described in Appendix I are executed. 
After finishing this conversion, Ae topics that have to be performed on a Garrison Training 
Area are scheduled as described in detaU in Chapter ni.B.2.a. Intermediate statistics are 
written to Ae report file listing Ae number of topics assigned and Ae percentage of penods 
scheduled. The next step is the prescheduling of Aose topics to be done on Firing Ranges 
as explained in Chapter m.B.2.b. After Aese assignments are made additional statistics are 
calculated, this time explicitly for each platoon wiA Ae calculation of Ae percentage of 
topics scheduled for each platoon. 

Because of Ae importance of physical fitness m Ae military Ae next assignment 
deals with Ae sports facilities. Gymnasium and Swimming Pool assignments are made by 
taking all available periods on a facility and onl>' considering Aose that remam on days 
where neither a Garrison Training Area nor a Firing Range is available for a given platoon. 
Figure 2 shows Ae decision process for sports facility scheduling. 

The algorithm chooses Ae platoon Aat has the least value for Ae mdex of sports 
topics in Ae list of training objectives and has not been scheduled on Ae day Aat is being 
considered. Then Ae topics m Ae list are assigned to have at most two consecutive periods 
(hours) of sports for this platoon. An additional consideration that Aey do not span over a 
hmeh break is taken mto account. The assigned topics are Aen flagged as scheduled and 
Ae index is adviced to Ae next unscheduled sports topic. Should Acre be more sports 


20 




£icilities available than distinct sports topics required to schedule, flie remaining sports 
£icilities are used by repeatedly scheduling the last of the sports topics. This does not 
create a higher emphasis on those topics because most of the topics have the same 
objective. 

In the next stq) of the algoridim die external instructors are scheduled. They are 
easy to schedule because they are usually only available for at most die number of periods 
they have to lecture. Therefore, die topics they have to lecture are assigned to those 
periods of availability. This procedure is shown in a flowchart in Figure 3. Each external 
instructor is considered individually because diere is no possible interc hang e of topics 
among them. Those instructors who lecture each platoon individually are scheduled 
following the same ^iproach used for sports facilities. This should maintain approximate!}' 
the same level of training progress among the platoons for the topics each individual 
external instructor has to lecture. It should avoid having one platoon have aU topics with an 
external instructor prior to any other platoon starting the training with this particular 
instructor. Because topics given by external instructors do not depend or build on each 
other die algorithm tests i^ether it can interchange the topic assignments for an instructor 
for a given platoon and thus improve the measures of effectiveness. After performing this 
scheduling, intermediate results on measures of effectiveness are written to the report file. 

This completes the scheduling for the topics that require a key facility’ or an external 
instructor. The remaining topics are scheduled using the clock advancing algorithm. This 
algorithm is described separately' in Chapter in.B.3. Having finished the schedule, the 
program tries to improve on that solution by employing an exchange algorithm as explained 
in Chapter in.B.4. 

After finishing those calculations the final measures of effectiveness are written to 
the report file together with a listing of unscheduled topics for each platoon. The actual 
schedule is calculated by converting period data back into the normal date and lime 
representation and constructing a display in a formal familiar to the user. On each possible 
date and time the code number of the topic is listed. The actual computer representation of 
all data and the schedule is saved in a special log file to facilitate later revisions and manual 
changes of the schedule. 

The last step of the algorithm is to display the final result beginning with the 
schedule for the first platoon in week one. 


21 



Get aU ii^t data 
from user / 


/user \ 
has siqji^ed 
aUdata , 
\ ? / 



Figure la: Flowchart of Complete Scheduling Algorithm 























y®s 

Break ties according to the 
preset tie breaking rules 



Schedule the selected 
_topic_ 



Figure lb: Flowchart of Complete Scheduling Algorithm (Continued) 













Get name of 
•ports facility 


Find first period the sports 
facility is available 


ick platoon with the least index 
v^ue on topics for this fecility 




Advance period counter for 
duration of topic 


Find next topic in list for the 
faciUty and this platoon 


< any\ 
topic ^ 
found y 


reset topic index to last 
topic on that facility 


Advance period counter to 
next period the sports 
facility is available 


more penods 
to schedule 
found y 


Figure 2: Flowchart for Scheduling Algorithm for Sports Facilities 


24 












25 














2. Prescheduling 


The two major training facilities can be prescheduled because topics requiring them 
can only be tau^t during Iheir availability. Additionally, if this kind of facility is assigned 
for use, that the company has to use it. Not using this facility could lead to less time the 
following quarter. If the facility is not used it has to be justified to die siqienor command 
as well as to the organization responsible for assigning the facility. The scarceness of these 
resources justifies die rqiproach of scheduling a topic to use die facihty i^dienever it is 
a vailab le Considering only the times of availabihty for the given facility die prescheduling 
process assigns topics in sequential order to die schedule observing given rules in the 
catalog of training objectives. 

a. Garrison Traming Area 

The schedule for all platoons can be die same. Therefore, they can be 
assigned simultaneously. Each day of training has a given structure that uses the first period 
of a day for a preparation topic and the last for a clean up topic. For training tiiat starts on 
one calendar day and goes without break to another calendar day, only the very first and 

very last period have the special topics. 

The objectives from the catalog which have to be done on die Garrison 
Training Area can be grouped. Each group has a given eariiest start time specified in weeks 
on the CTO flowchart. These earliest start times are converted into actual periods and then 
scheduled following precedence rules. The rules are ako illustrated in the flowchart in 
Figures 4a to 4d. The precedence rules determine that anti-tank weapon topics are 
assigned prior to engineering topics which in turn are assigned prior to infantry topics when 
muhiple topics are available for scheduling. In infantry training objectives the training and 
exercise marches have to be treated separately and take precedence over other topics when 
scheduling conflicts exist. If objectives cannot be scheduled entirely in a day, they are not 
divided but are scheduled on the next day of training and other topics are scheduled in lieu. 

If training with limited visibility conditions has to be scheduled and there are 
not enough objectiv'es available for scheduling because the accompanying daylight 
objectives have not been scheduled, previous objectives are repeated until the required 
daylight topics can be scheduled. If there are more periods on the Garrison Training Area 
in the schedule than training objectives, the last and therefore, most sophisticated topics are 
repeated for training and drill. On the other hand, if less time is available than needed, high 
end topics are left out. 


26 



( Start ) 



no 



Find firrt topic of infantry training 
on garrison training area 


Find first topic of anti-tank 
jweapon group on garrison training 
area 

I 


Find first topic of engineer training 
on garrison training area 


Find first training march for 
garrison training area 


Find first preparational topic 

1 ~ 


I Find first clean up topic 
I I ‘ 

|Find first period a garrison trauiing | 
area is available for scheduling 




no 

^- 

Determine how many periods left 
that day 






" no [ 

Determine how many periods left 
with the same time of day 

d 



Schedule a sin^e 
preparational topic 

I 

Advance period pointer to the 
next unscheduled period on 
gaiTsion training area 

I 


Advance pointer to 
next preparational 
topic 



Figure 4a: Flowchart of Scheduling Algorithm For Garrison Training Area 















Schedule a tingle 
clean iq) topic 


Advance period 
pointer to &e next 
unscheduled period 
on ganvion training 
area 


is there 

•Atopic that coulo^ 
^ot be schedule^ 
N. before 

Yno 


yisduratiwK. 
iess than what i 
left at same 
X^ytime/ 


Advance pointer 
to next clean up 
topic 


any mor^ 
topics in 
that list y 
X 


^ispenodN. 
counter insid^ 
ytoe frame 
N^marche&/^ 


Schedule the topic 


Advance period 
counter for duration 
_of topic 


>fluratioir\. y] 

less periods 
N. left same yy 
X^ytime/^ 

Schedule the march 


any more> 
topics in 
that list > 
X ?X 


Advance 
marker to 
next topic 


Set 

marker 
to zero 


Advance period 
counter for duration 
of topic 


j< 

-^any mor^ 
marches 

N. in list > 

\no 

n 

Shift 


Set 

marker 


marker 

to next 


to last 

march 


topic 


Figure 4b: Flowchart of Scheduling Algorithm For Garrison Training Area 

(Continued) 


28 









counter inside 
time fiame for 
anti-tank 


any more 


^counter inside 
time fiame for 
.engineering 


Schedule fiie topic 


Advance period 
counter for duration 
of topic 


/^urauonN 
less periods 
left same 


ay more\. ji 


Schedule the topic 


Advance penod 
counter for duration 
of topic _ 


K 

any moreN. 
topics 

■SKir 

Set 

Tiarker 

marker 

;o next 

to last 

topic 

topic 


Advance 
marker to 
next topic 


Set 

marker 
to last 
topic 



Figure 4c: Flowchart of Scheduling Algorithm For Garrison Training Area 

(Continued) 


29 






















b. Firing Ranges 

Wheo scheduling Fifing Ranges each platoon has to be treated separately 
and each subrange has to be considered. Scheduling Firing Ranges is siinilar to the 
Garrison Training Area scheduling previously discussed. The i^ipropriate flowchart is 
shown in Figures 5a to 5d. The CTO objectives assodated wifli Firing Ranges can be 
grouped, but the main guimeiy objective group must be subdivided furdier to capture the 
differences in range length needed for different weaponiy. 

Due to the special nature of the anti-tank weapon firing exercise and the 
firing exercise for security guards, diey have to be treated individually and are scheduled 
first. The pr<^am always schedules the firing exercise for the security guards on the last 
day die required range size is available and then schedules each platoon to take turns on 
diat range. This is justified also firom the flowchart which shows this training objective at 
the very end of the quarter. The anti-tank weapon firing exercise is then scheduled on the 
last day a ni^t Firing Range is assigned to the company. Here the platoons are also 
scheduled to take turns on that range. 

All other training objectives are then scheduled beginning with the first 
range available. Prior to any scheduling the platoon whose exercises get scheduled first has 
to be determined. The platoon that has the fewest objectives scheduled is scheduled for 
live firing. For this assignment each platoon is then assumed to stay on that range the 
whole day. This assumption is valid because, in general, the time needed to get to the 
range and get back to the barracks is significant. This process is repeated for the day as 
long as subranges are available. Then the next day is scheduled. 

When all objectives are scheduled the program checks for blanks in the 
schedule on Firing Ranges and inserts into these blanks training objectives that give 
freedom to the platoon leader. He then can choose another live firing exercise or repeat an 
exercise for drill. 


31 





Find first topic of gunnery trainmg 
on firing ranges 


Find first topic of anti-tank 
we^on group on firing ranges 


Find first topic of q>ecia] security 
firing trairi^ on firing rar^es 


Firtd first weapons cleanup topic 


Find first period of the last day on 
the firing ranges 


ind first pOTod on the day the 1 
night firing range is assigned 


Set period counter to the first 
period on day of last night firing 


Platoon := 1 


Schedule daylight anti-tank 
topic for platoon beginning at 
period counter 


Advance period counter for the 
duration of day firing exercise 


Increment counter for platoon 


^/platoon counters, yes 
/ less or equal the ^ 
number of 
N^latoom/' 

no 


Advance period counter to 
beginning of night firing 


Schedule whole night period for 
all platoons with night firing 
anti-tank exerdse 



Figure 5a: Flowchart of Scheduling Algorithm For Firing Ranges 






































Detennine number of 
periods on that range 
ftatday 


Determine number of 
periods on that range 
tiiat day 


Xonl^ 

^onepenoo^ 

s^^available/ 

\?/ 

XXno 


XonlyV 
^one perioo^ 
L av^ble/ 


^^engthorSy 
^ topic less or 
equal periods 
\*^tday y 

N^/^es 


/ periocl5\ 
left on that 
\ day / 
\?/n< 


Schedule 

topic 

partially 


topic less or 
equal periods 
Vythat day ^ 

>y/yes 



Decrease number 
of short ranges 


Decrease number 
of long ranges 


^/anotherv 
short rangey’ ^ ' " - 
S^vailablg^ 

X?/ 


/anotheK^ 
long range 
Savadab^ 

no 


Figure 5c: Flowchart of Scheduling Algorithm For Firing Ranges (Continued) 























Figure 5d: 



Flowchart of Scheduling Algorithm For Firing Ranges (Continued) 


35 





3. Scheduling Heuristic 


The heuristic involves a sequence of steps that are repeated until the last period has 
been scheduled. Initially, die period counter for each platoon is moved to the first 
unscheduled period for diat platoon. Then die platoon that has the smallest number is 
chosen to have die next topic scheduled. The scheduling is then peifonned beginning with 
this period and then advancing die period counter and making decisions to find the locally' 
best solution. This qiproach generates a mixture of topics among the platomis and 
prevents one platoon fi‘om having a superior schedule. 

To determine which topic is the next to schedule a selection process is employed. 
This selection process starts with the calculation of the earliest and latest period a topic can 
be scheduled. These values are calculated for each unscheduled topic. To determine the 
earliest possible period the suggested start times fi-om the flowchart in the CTO are 
considered. If a topic has no prerequisite and is not part of a chain of topics that built on 
each other this value is used. If the topic has a prerequisite that is already scheduled, the 
calculation checks whether the prerequisite ends later than the suggested start time fi'om the 
flowchart. In this case the value for the earliest possible period are modified. A topic that is 
part of a chain of topics has the value for earliest assignment either fi'om the flowchart or, 
depending on its position in the chain, the first unscheduled period following the total 
duration of all previous topics in the chain. If the direct predecessor in the chain has been 
assigned, tiie same rule as for prerequisites applies. 

The latest possible period for scheduling can either be the value fi'om the flowchart 
in tiie CTO or a value that depends on other topics. If a topic is a prerequisite for an 
already scheduled topic the value is the minimum of the flowchart value or the period 
number preceding the topic it is a prerequisite of such that it can be scheduled for its total 
duration. If part of a chain of topics, it is the minimum of the flowchart value and the 
period determined by the total duration of all later topics in the chain. If a topic has a latest 
value fi'om the flowchart, the latest possible period to schedule is the unscheduled period 
prior to that value that allows scheduling of the whole duration of this topic prior to the 
flowchart value. In a chain, all later topics have to fulfill this requirement. 

At this point in the algorithm any possible conflicts can be identified. A conflict can 
be detected if the earliest possible time for scheduling is later than tiie latest time. The 
algorithm should tiy to resolve the conflict by backtracking. The backtracking is not 
implemented in this version of the heuristic. 


36 



% 


After finishing the calculation, topics for scheduling have to be selected. The 
algorithm has a set of selection rules to determine die possible topics for scheduling. Those 
are given in the following pseudocode listing. Sinqily choosing a topic might not be 
enough; depending on die rule, there can be multiple topics or none at all that meet the 
criteria. All tqiics should be assigned as early as possible to maintain a buffer for other 
assignments. 

A topic is said to have die least fi-eedom for scheduling if the difference between 
die value in die array for earliest possible scheduling and the one in die array for latest 
possible scheduling is minimum. The one with die highest penally is the one with the 
hipest fixed penalty in die coded CTO or the one with die hipest dynamic penalty, where 
the diminishing fi’eedom of scheduling increases the penalty. The selection rule of longest 
duration is self-explanatory. 

If the candidate array is empty or aD topics in the array belong to the group of 
general topics another rule is applied. The topics that have the smallest value in die array 
for earliest possible scheduling are considered to be eligible and they are chosen using the 
same selection rule. This enforces additional precedence of other topics over the topics in 
the group of general topics. 

Pseudocode for the selection process: 

Get the current clock (period) value for the platoon; 

Initialize the eligible set and the counter for topics in set to 1; 

while not all topics have been tested do {determine the first entry} 

If current clock value = entr>' in earliest array then 
case selection rule of 

least freedom : if (least freedom of topic > least freedom of topic in 

eligible set) or (eligible set empty) then 
enter topic into eligible set or replace old one; 
highest penalty: if (penalty' of topic > penalty’ of topic in eligible set) or 
(eligible set empty ) then 
enter topic into eligible set or replace old one; 
longest duration; If (duration of topic > duration of topic in eligible set) or 
(eligible set empty ) then 
enter topic into eligible set or replace old one; 

(contains now one single entr\\ now find possible ties} 

for Index = Index of topic in set to last topic do 

if (current clock v^ue = entiy’ in earliest array) and (value of selection rule 
matches value of topic in eligible set) then 
increase counter for topics in set; 
append topic to the set; {contains no^- possible ties} 


37 


If (Counter for topics in set = 1) or (flie first entiy = 0) or (first topic belongs to 
main groi^ of general topics) do 

find anodier topic diat is closest to the current clock value using die same 
selection rule; 

(now contains topics} 

If more than one topic is listed in the set of eligible topics those are called ties. A 
decision has to be made which one to choose. As shown in die pseudocode there are 
multiple tie breaking rules available in die program. The other way of breaking ties depends 
on the selection rule for the topics. The selection rule determines the sequence of tie 
breaking rules diat are ^iplied until a unique selection for scheduling is be made. 

Pseudocode for die tie breaking process: 
while diere is no unique topic to schedule do 
if tie breaking rule is random do 

pick a random number from the range of indices of the eligible set; 
chose the topic at that index; 
else 

case selection rule of 

least freedom : choose the topic with the highest penalty; 
if not unique then 

choose the one with the longest duration; 
if still not unique then 

choose the first of the remaining; 
highest penalty: choose the topic with the least fi-eedom; 
if not unique then 

choose the one with the longest duration; 
if still not unique then 

choose the first of the remaining; 
longest duration : choose the topic with the least fi'eedom; 
if not unique then 

choose the one with the highest penalty" 
if still not unique then 

choose the first of the remaining; 

After determining the unique topic to be scheduled, it is scheduled for its whole 
duration. Then it is flagged as scheduled and the clock for this platoon advanced to the 
next unscheduled period. Now the next platoon that has the least value for the clock is 
chosen and the process reinitiated until all periods have been scheduled. The algorithm 
then calculates the measures of effectiveness for this schedule and writes the report that 
includes the calculation time for the algorithm. 


38 


The choice of a random tie breaking rule has to be investigated closely. Without 
chan^ng the data the solution from one calculation to another would change. The 
evaluation of whefiier the result is better than results using deterministic rules has to be 
made after test runs. Chapter V.A shows the differences between those rules. 

4. Improvement Algorithm 

The improvement algorithm employed here is an interchange algorithm that tries to 
interchange topics or blocks of topics of equal length in order to improve on the measures 
of effectiveness. The outline of the algorithm is shown in the flowchart in Figure 6. 

Before making any changes to flie given schedule the algoritfim calculates the 
current values for all MOE’s and saves them. Then the algorithm considers each platoon 
individually for all those topics that are not bound to a facility or an external instructor. It 
chooses the first topic and then tests whedier this can be exchanged with the next topic or 
topics that match the total duration. Topics can be exchanged if they are not prerequisites 
of each other and none of the topics between them is a prerequisite of the originall} later 

one. 

If they can be exchanged, the program exchanges them and recalculates the 
measures of effectiveness. If the measures of effectiveness have improved, the exchange 

remains otherwise the exchange is not accepted. 

In both cases now the period counter is advanced to the next period following the 
end of the first topic chosen for exchange. Now this process continues untfl all topics for 
all platoons have been tested. The improvement algorithm tests only locally possible 
changes. Therefore, after an exchange additional opportunities might arise for exchanges 
of earlier scheduled topics. To investigate this possibility the algorithm is employed 
multiple times to determine those effects. The algorithm can be repeated until no 
improvements in the measures of effectiveness occur. 


39 



/get the plat 



pick the next topic 



pick the next block of topic 
that match with duration of 
first pick 


< can N. 
they be ^ 
exchange^ 
V ? / 



MOE(new) 
less than 
.MOE(old). 


I reverse (undo) 
interchange 



replace MOE(old) 
by MOE(new) 


Advance period counte 
to the end of first pick 


/"all \ 
available 
periods done 

V ? / 


Figure 6: Flowchart of Improvement Algorithm 











C TEST PLAN AND TEST DATA 


To determine the best combination of selection rules and tie breaking rules to pick 
the next topic for scheduling a number of different combinations were tested. To make the 
combinations conqwable diey were done on the same data set. This data set is listed in 
A|>pendix G. It also illustrates the data needed from the user. The test plan checks all 
in:q>lemented combinations. The tested combinations are given in the first seven columns 
of Table 4 and 5 in Chapter V. 

In addition to these tests the number of replications for the improvement algorithm 
has to be determined. The algorithm is employed once, twice, three times or more until the 
improvements from one iteration to another reach a direshold or until the computing time 
exceed the actual runtime of the clock advancing algorithm. 

After determining the best combination of selection and tie breaking rules in 
combination with the way of calculation any penalties, the stability and performance of the 
program for different data sets was tested. Tests were done on different quarters of the 
year to evaluate the impact of the length of the quarter and of moving legal or clerical 
holidays. To compare different quarters, the number of days die key facilities are available 
is held constant. External instructors are available for the same number of periods. It is 
not possible to insure that the assignment of facilities always fall on the same training day in 
each quarter. Depending on days without duty they have to be shifted. The objective in 
this test is to compare calculation times for the quarters and the performance in terms of 
scheduling. The major interest is in the topics that could not be scheduled and those that 
are scheduled outside the suggested time frame. 


41 







IV. ENVIRONMENT AND USER INTERACTION 


This section describes the program and the design decisions that governed the 
development. The pseudocode is included only if vital for understanding. One basic 
underlying design decision is the use of a DOS based personal computer. This system is 
on the computers in the field and a graphical operating system cannot be expected in the 
near future. The TURBO VISION (Borland, TV, 1992 and Watson, 1994) engine which 
is included in TURBO PASCAL provides basic functionality for building a graphical user 
interface (GUI) as the front-end on which any customization can be build. The basic 
functions generate a GUI that is similar in look to any DOS based program GUI the user 
mig^t have seen earlier. 

A. USER INTERFACE 

A GUI is easy to use if it includes intuitive menus and sub-menus. The learning 
curve of familiarizing oneself with a GUI is normally not steep. Another big advantage is 
that there is no need for memorizing commands and short-cut keys before the program is 
usable. To avoid any difficulties with typographical errors in script files or data files, all 
data are entered using dialog boxes. They provide clearly labeled entry fields and 
confirmation or choice buttons. Erroneous input can be detected at this stage. The clear 
labeling of choices and input fields reduces the learning curve. The program displays 
context-sensitive help either in the dialog box or on the status line which is the last line 
of the display. 

During design of the GUI emphasis was placed on consistency. The main design 
has to follow standard practice of commercial programs. Naming conventions for menus 
and display objects on the screen should be familiar to the user. Dialog boxes that call 
for similar information are designed similarly. Buttons v^ith the same label perform the 
same action. Placement of the buttons is, whenever possible, at the same position in each 
dialog box. Message boxes with warnings or error messages have only a confirmation 
button. Choices or actions that are currently not available are disabled and are 
automatically enabled as soon as they become appropriate. The display of context 
sensitive help in the status line of the display supports ease of use. 


43 





The iwogram has dual operationality with the keyboard and with a pointing 
device. This eliminates the sole reliance on the use of a pointing device, mouse or 
trackball. The system has redundancy built in. All actions on the screen such as 
activating menus, calling up of dialog boxes, moving from one entry field to another and 
activating buttons are possible with the keyboard. Using the keyboard for moving on the 
screen is consistent with commercial applications. For moving from one record to the 
next in a dialog box, commonly known keys ^ and are used. The fimctions of 
buttons are described here only if their function is more complex than the label indicates. 

The main screen provides the menu and the status line as well as the common 
background for all dialog boxes. Figure 7 illustrates the appearance of the mam screen 
with no menu activated and with no dialog box. The following menus are available: 

• File 

• Edit 

• Run 

• Change 

• Show/Print 

• Preferences 

• Window 

• Help 


aiM»w/3Plrint 



Figure 7: The Main Screen of the Graphical User Interface 


The “File” menu provides general file handling procedures and the termination 
command for the program. Under the “Edit” menu the user finds the basic commands to 




do file editing and special commands to call up the dialog boxes needed to supply the 
data. These are explained in detail in section B. The “Run” menu contains the 
commands to start execution for calculating the schedule and a calendar. The “Change” 
menu which is only accessible when a schedule is displayed provides the commands for 
user interaction and modification. For discussion of these features see section D. “Show 
/ Print” contains all commands for displaying results on the screen and printing paper 
copies of all the results see Section C. The “Preference” menu gives the user limited 
influence on the appearance of the main screen and lets the user store and retrieve his 
settings. “Window” makes basic commands available for moving and sizing windows on 
the screen. “Help” only contains an “About” command that displays a message box 
about the purpose of the program. An On-line-help is not implemented. All menus are 
displayed in Appendix D. 

B. DATA ENTRY AND VALIDATION 

The data input for the scheduling program is basically manual via dialog boxes 
which prompt the user for the necessary information. The catalog of training objectives 
is provided by the program and the user is not required nor should he try to modify or 
augment this catalog. Any changes to the catalog such as omitting training objectives 
have to be done with manual input into dialog boxes. Major changes in the catalog need 
to be made centrally and then distributed as a file to the individual users. The program 
needs the following information from the user; 

• basic weekly schedule of the company, 

• main calendar dates, such as quarter start, quarter end, holiday and duty on 
Saturdays or Sundays, 

• special events not captured in the catalog of training objectives, 

• availability of training facilities, 

• availability of outside instructor personnel, 

• non-availability of company instructor personnel, 

• additional requirements from division or battalion level referring to the topics 
listed in the catalog of training objectives. 

The program can manage two quarters simultaneously; the current quarter and 
the next quarter. The current quarter is determined by a check against the computer date. 
The program keeps a log-file to determine last use of the program. A quarter change 
between two consecutive uses of the program results in a renaming of files belonging to 


45 


the former current quarter into files belonging to the old quarter. These files are stored 
for backup reasons and are not accessed by the program. The files belonging to the 
former next quarter are then renamed as files belonging to the current quarter and new 
files will be made for the then new quarter. These changes are made automatically and 
the user has no need to concern himself with them. 

The following sections describe the format for the dialog boxes and the 
information that is entered into them. All these features are menu items in the “Edit” 
menu. Some of the menus have sub-menus associated with them if further difierentiation 
is necessary. 

1. Basic Schedule 


With this dialog box the user has to supply the basic schedule for the company. 
The required format for each period on a day with duty, usually Monday to Friday, is start 
time of the period - end time of the period in 24 hour military notation, utilizing the 
following picture Any other input is rejected prior to saving. The input of 

characters is disabled. Single digit hour values need the leading 0 in their input. For 
each day from Monday to Thursday the screen provides a maximum of ten slots to fill 
and for Friday a maximum of six slots. After initial input of these data each time the user 
calls this menu the previous input is displayed. Figure 8 shows a filled basic schedule 
matrix with a typical company schedule. 


!Rlle: 





Figure 8: Basic Schedule on Screen With Sample Data 


46 






The three buttons in the right column perform the following actions. The “NEW” 
button clears all fields and allows total new entry. The “SAVE” button saves the current 
displayed data after format checking and the “CANCEL” button closes the dialog box 
without saving. This window as any other can be closed also using the small square 
button at the upper left or the keyboard shortcut combination “Alt” + “F3”. The plus sign 
symbolizes the simultaneous engagement of those two keys. 

2. Instructor Availability 

This menu provides access to the dialog boxes for all external and company 
instructors. Therefore, a sub-menu handles the choice of the instructor for whom the user 
wants to enter the data. After choosing the instructor, the user is led to a detailed input 
screen where he can provide the actual information about the availability of the 
instructor. In the case of company personnel as instructors the user has to stipulate when 
the instructor is not available. One instructor dialog box is displayed in Figure 9, the 
others, as well as the preceding choice menu, can be examined in Appendix D. Each 
dialog box contains a line of text to remind the user which information is needed. Each 
dialog box looks similar and requires the input of a date and time. 



Figure 9: Dialog Box For Unavailability Data For Company Commander 


The dialog boxes for the company instructor personnel also have check boxes to 
ease the input of recurring data for daily, weekly or monthly events. Only the 
information about the first of those events need be supplied by the user; after checking 
the appropriate check box the computer calculates all other data and inserts them 
according to their time sequence. 

For this calculation the computer stores the dates temporarily ignoring possible 
days without duty. Although those dates are kept, any conflicts are resolved later during 


47 








coding of this information into the period equivalent. This approach is used to maintain 
the freedom for the user to supply the data in whatever order he likes. Other approaches 
would have required diat the input of the calendar dates be made prior to entering any 
other information. The program in this stage of input does not check for overlaps in the 
given times. Any overlaps are sorted out and eliminated during the coding phase. 

Only button options that might perform meaningful actions at a given time are 
available. If the user wants to delete a record he has to move through the list to display 
the record on the screen. Only then he can delete this special piece of information. Data 
created by the program using the check boxes cannot be deleted as a whole. Only the 
current visible data record is deleted. This design is based on the policy that nothing the 
user cannot see should be deleted. 

3. Training Facility 

After engaging this menu item the computer displays a choice menu for the 
different facilities. After choosing the specific facility the user supplies the date and time 
of availability. The basic operational principles in these dialog boxes are the same as for 
the instructor availability dialog boxes. Only two of the boxes are equipped with 
additional check boxes for repetitive data: the gymnasium / athletic field and the obstacle 
course dialog boxes. These facilities are likely to be assigned to the company on a 
regular weekly basis. To avoid many different styles of dialog boxes, the check box area, 
if required, is the same for all instructor and facility data entries if required for the 
instructor or facility. 

The only dialog box that has a unique feature is the one for Firing Ranges as 
shown in Figure 10 (the other dialog boxes are displayed in Appendix E). The user has to 
supply the subranges that are assigned for a given day. These entry fields require an 
integer number. The program automatically checks the range of those entries and rejects 
numbers greater than 6 for each range. Higher values are most likely an input error 
because Firing Ranges that belong to the garrison are usually small and have at most six 
ranges of a given subtype. Some garrisons might have fewer subranges. The program 
does not include personalization such that the actual local conditions can be entered to 
determine the validity check for the range numbers. The restriction to a range from 1 to 
6 maintains usability for all potential users. 


48 




Figure 10: Input Dialog Box for Firing Range Data 


The present catalog only makes use of subranges of type “A” and “D” but to allow 
for changes in the catalog of training objectives or the accompanying live firing exercises 
the subranges “B” and “C” are included in the interface but are not implemented. If the 
CTO changes, the user need not learn a new interface. 

For deleting an entry the same rules apply as described above for the instructor 
availability. 

4. Battalion/Division Requirement 

Additional guidance or demands for the schedule given to the company from 
higher commands can be entered using this dialog box. This dialog box as shown in 
Figure 11 should be used only to give guidance about topics in the catalog of training 
objectives. Therefore, other input in the first column of input lines is not accepted. For 
each topic the user can enter the days on which they should be scheduled or should not be 
scheduled. The day has to be given with its name, i.e. Monday, Tuesday etc. Checking 
the a m. or p.m. check box then limits the possibilities for scheduling to the appropriate 
part of the day. Both checked or both unchecked is treated as if the whole day is 
available. 

Additionally a topic can be scheduled manually by giving the exact date and time 
for scheduling. The date and time format is consistent with any other date and time 
format used in this program. As the last option the user can single out topics which 
should be in a week Avith at least n repetitions or should be in a week with no more than 
n repetitions. This field accepts only small positive integers. 


49 




















Figure 11: Dialog Box For Battalion / Division Requirements 


5. Other Input Menus 

In addition to the menus described above the program utilizes the following input 
dialogs; 

• quarter choice, 

• main quarterly calendar data, 

• special events, 

• number of platoons and anti-tank weapons present in company. 

The quarter choice is automatically presented when the program is started. During run¬ 
time it is possible to change the working quarter with a menu-item under the “Edit” menu 
of the main screen. As displayed in Appendix D the last menu-item again brings back the 
initial choice box as shown in Figure 12. 


r if.- • ' 

ipou 'wuit to 
} liOX^ 

“ • ■«=— 

. fi- . r . /« . , 


Figure 12: Initial Choice Box to Determine Quarter 


The main quarterly calendar data consist of the arrival date of the new recruits, 
the departure date, the dates of Saturdays and Sundays that are planned for duty and the 
dates of clerical and legal holidays. The last input section also provides the opportunity 
to supply to the program pre-planned days off, leave for special occasions or leave as 


50 



















compensation for additional duty. All these dates have to be entered in the format 
Day/MonthA"ear, where only the last two digits of the year are entered. For the day and 
the month always two digits have to be given. The leading 0 is mandatory. There are 
possibilities to enter up to 15 dates for holidays and up to five dates for Saturday / Sunday 
duty. This dialog box is displayed in Appendix E. 

Occasionally there is the need for events or training objectives that are not 
covered in the catalog of training objectives. These can be entered into the data via the 
appropriate dialog box as displayed in Figure' 13. The title has to be provided to the 
program for later printing of a schedule that contains titles and instructors for topics 
instead of nine digit numbers. For date and time the common format restrictions apply. 
The instructor has to be given in the military abbreviated form as used on schedules, not 
in numerical coding as used internally by the program. 



Figure 13: Dialog Box For Special Events or Special Hours 


At the start of execution of the scheduling algorithm the program prompts the user 
for confirmation or change of basic information about the company. These data are 
considered shared data over quarters. The displayed dialog box as shown in Figure 14 
lists the number of platoons in the company. This input line accepts only 1, 2 or 3. The 
check boxes in this dialog box are for the selection of the anti-tank weapons the company 
uses. A checked box indicates the use of that weapon. The user can check none, one, 
two or all three item in the selection. Only the topics related to the chosen weapon is 
scheduled. If no box is checked none of the topics related to anti-tank weapons is 
scheduled. 


51 









Figure 14: Dialog Box At Start of Calculation 


6. Data Checking 

Prior to accepting data, validity checks are performed. The date and time formats 
are checked and if they do not conform to the given, natural formats they are rejected. 
The user uses the familiar format for date : ##/##/## and for times: ####-####, where the 
stands for a single digit. There is no check whether the date or time given to the 
computer is a valid one. The program accepts a time 9992-0193 for example but during 
the calculation in subsequent steps simply disregarding this invalid input. 

The data for the basic schedule of the company are not likely to change from 
quarter to quarter as other data do. This means the basic schedule information needs to 
be input only the first time the program is used or if data change. The basic schedule is 
considered shared information between quarters and is automatically used for the 
calculation. 

For training facilities and platoons, range checks of the supplied values are used 
to determine any unreasonable large numbers. For example, for platoons the numbers 1 to 
3 are the only accepted input. 

The user has complete control over the order in which he enters the data. There is 
no given sequence he has to follow; he can open any dialog box if he missed a step or 
wants to change a previous input. Data that have a natural time sequence order is 
automatically ordered by the program. This allows for further flexibility to enter the data 
whenever they become available. Augmenting or changing data is done with the same 
input features as before, information already entered is displayed when this data entry 
screen is opened. 

Because no meaningful schedule can be produced without the data about training 
facilities, the program checks for their presence. If they are not present or cannot be 












accessed, the algorithm alerts the user with an error message before doing any calculation 
and aborts the process to allow the user to provide the necessary information. The error 
and abort messages are displayed in Appendix F. The program does not provide a 
manual override at this stage because any calculation would be meaningless. 

C. PROGRAM OUTPUT 

The program provides the user with three different kinds of output. All three 
kinds of output can be shown on the screen and are printable in the same format on an 
attached printer. On-screen displays for platoons that are identified by shaded buttons are 
replaced in the printed version by a text line that identifies the platoon. The three outputs 
are; 

• quarterly calendar with main dates and facility assignments (three screens or 

• weekly schedule, divided by platoons (number of platoons times number ot 
weeks in the quarter, screens or pages), that is, three platoons and 13 weeks 
result in 39 pages; 

• report on scheduling progress, containing unscheduled topics and the measure 
of effectiveness data. 

This output cannot be edited or manipulated by the user directly. Any changes to 
the schedule have to be done using the menu for user interaction, described in section D. 
The calendar data and the result are prepared by the program and can be printed. Figure 
15 shows the on-screen display of a monthly calendar and the print version is shown in 
Appendix A. The calendar data are stored in an ASCII file and could theoretically be 
altered using the file editor but the program would not take any of those changes into 
account. Any new call to the procedure for calculating the calendar would restore the 
previous result. 

The schedule data consist of the numeric code representation of each topic and 
can be displayed one week at a time. Figure 16 shows the appearance on the screen and 
Appendix B has two weeks in their printed version. 

The report data are written during runtime of the calculation and are valid only for 
the current calculation. Any changes in the base data or conditions for scheduling would 
produce a different report. The report provides the user with indications about problems 


53 




during scheduling and the methods the program used to solve conflicts or violations of 

constraints. A complete report is listed in Appendix C. 

The printer output is initiated by either dialog boxes (Appendix E) or direct y 
fiom the display on the screen (Figures 15 and 16). The user has to supply the nunrte of 
copies and the output range. For the calendar output he can specify a month or the who e 
quarter. For the schedule a single week for a platoon can be printed or the w o e 
schedule for a single platoon Another option is to print a single week for all Ratoons. 
The last option is to print the whole schedule for all platoons. When pnnting from the 
display on the screen the user can print only a single copy. If the calendar is displayed, 
the button “PRINT” initiates the printing for the month currently on display. The utton 
“PRINT ALL” initiates the printing of all three months of the quarter. If a schedule is 
displayed the user can print the displayed week of the platoon shown by using the 
“PRINr’ button. The button “PRINT ALL" produces a printout of all weeks for a 
platoons. The report cannot be printed from the display. 


54 












































D. USER EVTERACTION 


After the computer construction of the schedule the user can manipulate the 
schedule. The following options are available only ^^flen he displays the schedule on the 

screen. The sub-menu is displayed in Appendix D. It consists of the following choices; 

• interchange hours; 

• interchange days; 

• facility unavailability; 

• instructor unavailability; 

• add / remove special hours. 

Any changes the user tries to make have to be done using the special change and 
modification dialog boxes. The dialog boxes used prior to the construction of the 
schedule have no effect. Any changes in those data are not used during manual changes. 
They can only be used to enter data and then recalculate the schedule. The user must 
realize that any manual changes are lost if the schedule is recalculated. Therefore, after 
having made manual changes, any further changes should be made manually. During the 
manual changes the program uses only the data the calculation of the schedule was based 
on. 

Each of these choices brings up a dialog box for input. The dialog boxes are 
displayed in Appendix E. The requested action is tested to determine whether it is 
possible to perform it. The checks include checking the prerequisites. The algorithm 
checks whether the exchange would lead to a schedule where a topic is scheduled earlier 
than any prerequisite. If this is the case a message is displayed and additional 
confirmation requested. The user can override the program and force the change. He 
then takes the responsibility to introduce a chain of changes to fix this violation of 
constraints. The override is necessary because the program cannot determine in advance 
all steps the user wants to take and perhaps allowing only legal action would make it 
impossible for the user to accomplish desired changes. Most of the changes only 
influence the schedule for the platoon that is currently displayed on screen. The 
exception is facility unavailability' if it concerns Garrison Training Areas. Because they 
were scheduled simultaneously for all platoons an unavailability has to be dealt with for 
all platoons simultaneously. 

The interchange of hours is initiated by entering the information in the dialog box. 
The program then tests whether the requested change is for periods of equal length in 


57 


both cases. If not, the algorithm stops and displays a warning box to the user that 
provides no override possibility (Appendix F). If they have same length, the program 
checks whether the earlier is a prerequisite of the later one. After passing this test, the 
next check involves testing whether one of the topics between the earlier and the later is a 
prerequisite of the later or has the earlier as a prerequisite. In those cases the program 
would display another message box and the user must confirm this interchange and force 
the program by override to perform. If none of the tests indicate a problem or the user 
overrides, the program performs the interchange. The pseudocode of this algorithm is 
listed in Appendix H. 

The interchange of two days involves the same checks for violations as the 
interchange of hours. If the first check returns that the days have an unequal number of 
periods, the warning box allows a manual override from the user (Appendix F). Forcing 
the manual override initiates an interchange of the periods on both days that match. The 
program adds to the day with the fewer periods as many additional periods as needed to 
accommodate the topics from the longer day. The time frames for these periods match 
those from the longer day. Then the topics from the longer day are reassigned to the new 
periods and for this platoon those periods on the longer day are coded as not scheduled. 
The display shows the number “0”. For the platoons not involved in the interchange the 
topics on those new periods are coded as not scheduled. For the pseudocode see 
Appendix H. 

If a key facility is no longer available to the company in the quarter, the topics 
need to be rescheduled or dropped. The two major facilities. Garrison Training Area and 
Firing Range, have to be treated separately. The other facilities require less work in the 
algorithm. For all facilities the user supplies the date and time it is no longer available 
and checks in the dialog box the name of the facility (Appendix E). If he marks more 
than one facility the program stops and displays a warning that only one facility is to be 
marked at a time (Appendix F). After the user confirms this warning he is shown the 
interchange data and can correct his input and restart the algorithm. 

For Gymnasium, Swimming Pool and Obstacle Course the algorithm unschedules 
the topics at the given periods of the schedule. Then the list of topics for this platoon is 
scanned for other unscheduled topics. If a topic is found that requires another facility 
which is available and unused that topic is scheduled. If not, the program tries to 
schedule another topic from the list of topics out of other groups, then from the main 
group of general topics. If the program could not find an unscheduled topic or could find 


58 


only topics with duration greater than the number of periods to be replaced, the program 
repeats topics from the main group of general topics. 

Garrison Training Areas and Firing Ranges have to be handled differently. 
Scheduled topics on those are closely linked and are usually part of chains of 
prerequisites. Therefore, if the unavailable day is not the last day, prerequisites must be 
checked. After the data have been supplied, the program determines whether it is the last 
day. If it is the last day, the topics have to be dropped and are replaced by unscheduled 
topics. The way of replacing them is the same as for the other facilities. If the day is not 
the last, a replacement and shifting of the topics has to be done. Both parts are shown in 
the flowchart in Figure 17 and Figure 18. Due to the complexity of decisions on the 
replacement on the actual day the facility is no longer available these processes have 
been separated and they are shown in Figure 18. The topics on the day in question are 
temporarily stored if they do not belong to the topic group of general topics. Topics from 
the group of general topics are only unscheduled. Prior to saving the other topics on the 
facility the algorithm tests whether they are scheduled also on another day. If they are 
repeatedly scheduled, they are not shifted. The actual day the facility is no longer 
available is treated the same way as the last day. If the list of saved topics is not empty 
they have to be shifted to the next day this particular facility is available. The program 
determines the total length of those topics and tries to put them in as early as possible. 
The topics on the next day that are displaced by those earlier topics are tested the same 
way and saved for shifting if they are uniquely scheduled. Then the earlier topics are 
scheduled as replacement. This procedure continues until either the list of topics to shift 
becomes empty or the procedure reaches the last day and has topics left on the list. If 
topics are left on the list after the last day, they are marked in the data as unscheduled. 

Dropping the assignment of an instructor to a given period because of his 
unavailability involves fewer steps. The topics from external instructors are those the 
user has to be concerned with here. Company instructors usually only require 
interchanging of periods. The topics to be given by external instructors have no 
prerequisites and also do not built on each other. Therefore, the exchange simply 
involves unscheduling that topic and replacing it by another topic the same way a 
replacement is done for the topics on the lesser facilities. The pseudocode is shown in 
Appendix H. 


59 


Z jet date and tmeV 
of unavailability 

Convert date and time into 
period and duration 
representation 



the last day 
on that 
S. facility > 



Figure 17a: Flowchart of Algorithm To Handle Facility Unavailability (Garrison 

Training Area or Firing Range) 


60 





0 


I find next day on that facility! 



Calculate total duration 
of topics in list 


jset period counter to begin of dayj 

- ^ 




Advance period counter 
for duration of topic 
1 . 

decrease total length 
for duration of topic 



Figure 17b: Flowchart of Algorithm To Handle Facility Unavailability (Garrison 
Training Area or Firing Range) (Continued) 


6 








Figure 17c: Flowchart of Algorithm To Handle Facility Unavailability (Garrison 
Training Area or Firing Range) (Continued) 


62 








A topic not included in the CTO can be added to or removed from the schedule 
using the last menu option. If a special event is to be added, the algorithm first 
determines how many of these topics are already in the schedule and names this new 
topic “Special” and augments the name by a number that is one higher than the number 
of those already included. The topic including the information about the period it must 
be scheduled is then appended to the list of topics and the algorithm increases the total 
number of topics considered. The program scans the existing schedule and locates the 
topic originally scheduled at that period. If this topic is not part of a chain for 
prerequisites it is unscheduled and the new special topic is scheduled in its place. If it is 
part of a chain of prerequisites, the program tries to find a period prior to the topic it is 
prerequisite to and tries to schedule it in place of another one with no prerequisites or a 
topic from the last main group, the general topics. If it is only possible to reschedule this 
topic at the period the topic it is prerequisite of is scheduled, the program performs this 
scheduling. Then the process is repeated with the topic that had to be removed. 

Removing a special event or hour simply unschedules the one in question and 
replaces it by employing the same decision rules as used for a replacement if a lesser 
facility becomes unavailable. The whole algorithm is listed in Appendix H as 
pseudocode. 

After each exchange operation the schedule is updated and the revised schedule 
displayed. The new schedule shows then the same week and same platoon as previously 
displayed. 


64 



V. RESULTS 


The results are shown in tiiree steps. First, the computational results are evaluated 
together wWi tiie determination of what is the best combination of selection rules. Next, a 
possible scenario of use illustrates the steps the user has to take and estimates the amount 
of time needed. Finally, the benefits of having this program in use with reflections about 
die acceptability of a computer generated schedule are given. 

A. SCHEDULE CALCULATION 

The program was tested to determine die best combinations of selection rules and 
tie breaking rules. Another consideration in the testing was to compare the effect of fixed 
(penalty fi^om tire CTO for not scheduling the topic) or variable (penalty from die CTO 
modified by the remaining freedom for schduling) penalty calculation. The MOE’s were 
used as criteria to determine the best solution. Additionally, a comparison of the 
computation times was made to estimate guidelines for the user. The calculations were 
done on an IBM compatible personal computer with central processor unit Intel 80486DX- 
2 and a processor speed of 66 Megahertz. This machine was equipped with random access 
memory of eight Megabytes. It would have been desirable to run the calculations on a 
machine identical to those it is intended to run on later, but none of these were available. 
Therefore, the calculation times cannot be taken as absolute guidelines but as indicator 
about stability of performance. They will be larger on the machines tire program will run 

on. 

All the tests for the best heuristic were done on the same data set. This data set is 
included as a sample data set in Appendix G. Table 4 shows the results for the twelve 
combinations of selection rules and tie breaking rules. In addition to the MOE’s, the 
number of topics contributing to them are counted and stated in parenthesis below the 
corresponding value. The shortest and longest calculation times have a difference of onl\' 
35 seconds, thus the difference is not a decisive factor. An evaluation of all possible 
combinations shows that the effect of fixed or variable penalty calculation cannot be 
deteimined alone. Depending on the combination of selection and tie breaking rules the 
effect of tire penalty calculation can be reversed. Using the tie breaking rule of dependence 
on the selection rule, the fixed calculation performs better. With random tie breaking the 
variable calculation seems to produce better results. For this testing the random tie 


65 




breaking run in each combination was performed once. More extensive testing is necessary 
to determine whedier the results are statistically significant. Aldiough die performance of 
die calculation with die selection rule of die least fireedom first and random tie breaking is 
best, it is not chosen to be the implemented solution. The stable calculation, not based on 
randomness, of die same selection rule but paired with die dependence tie breaking rule 
and a fixed penalty calculation is used. This approach is only sHgh^ worse in the MOE’s 
and two seconds faster in die calculation. 

In addition to die final results, intermediate comparisons are made between the 
combination of rules. In Table 5 the effect of scheduling with and without the 
improvement algorithm is illustrated. The improvement algorithm has no effect on die 
MOEl which is the penalty for topics that could not be scheduled. But in all combinations 
the other MOE’s improved in general with the algorithm activated. The last measure of 
effectiveness which is the number of more than three consecutive lectures in a row on one 
day is not enforced in the improvement algorithm. Therefore, sometimes this number 
increases. But generally die improvement algorithm is worth employing. There is no 
particular combination of rules that is either especially prone to improvement by the 
exchange or resistant to improvement. 

The testing on how many replications of the exchange algorithm should be run for 
each platoon was also performed on the sample data set. For the first three replications the 
MOE’s got better but no change could be detected after the third replication. For all 
subsequent testing, the number of replications was fixed to be three. 

After deciding on the permanent combination to be implemented, die complete 
algorithm was tested on different quarters. The data sets for the quarters were constructed 
to be as similar as possible. The following basis was chosen: 

• assign 13 days of Garrison Training Areas with 3 night training parts; 

• assign 6 days of Firing Ranges with 2 night firing exercise possibilities; 

• have the Obstacle Course once a week; 

• assign 5 different date / times for the Gymnasium as weekl>' data; 

• have die Swimming Pool 9-times in the quarter; 

• have company personnel not available 3- to 5-times, die CpCdr on a weekly 
basis; 

• assign MedPers 6-times, SecPers 5-times per quarter; 

• assign MilPriest 3-times and SocWork twice per quarter; 

« include 3 special events; 

• have the same Battalion / Division requirements. 


66 



WMi this basis ttie runs were performed and they are compared in Table 6. As the 
table illustrates die calculation time per quarter is fairly stable aldiou^ die fourdi quarter is 
shorter dian die others and has 44 fewer periods dian the longest quarter. In comparison, 
die MOE’s vary a lot. The longest quarter uses almost aU of the available topics but does 
not deliver a significant better result in the other MOE’s. On the other hand the first 
quarter shows die worst result in die measure of effectiveness for the topics diat could not 
be scheduled. Althou^ the same number of days on a Garrison Training Area are 
assigned to that quarter, the placement of the night training days had significant influence. 
Because night training can only be scheduled if all prerequisites are met, early in the 
quarter repetitions had to be scheduled. Therefore, later in the quarter other important 
topics could not be scheduled. This shows that the results are sensitive to die placement of 
die ni^t training assignments. If ni^t training is assigned in weeks 4 and 8 and one 
additional night later in the quarter, better results could be obtained as the other quarters 
illustrate. 

Comparing the results for a single quarter among platoons as shown in Table 7 
indicate similar performance for all platoons. The results do not single out a platoon that is 
always the best or the worst in all MOE’s. But it also shows that the schedules are in fact 
not equal. They have differences in all assignments except the Garrison Training Area 
(which is a result of the procedure of assigning topics there). It also shows that the number 
of topics outside a suggested time fi-ame vary distinctively. The company controlled topics 
have a spread of 13 over a range from 38 to 51 i this is a great difference. Other topics are 
more evenly scheduled. Although the number of topics that could not be scheduled does 
not vary significantly, the penalty incurred for those topics has a range from 517 to 813. 
This is caused by some topics that external instructors have to give and that could not be 
scheduled for one platoon as well as some sports topics. 

As stated above, the calculation times should not be viewed as some absolute 
guidance for the times on the machine the algorithm is supposed to run on but as a measure 
of stability. Times will increase on slower, less powerful machines but die user will have 
his own time frame after performing the first calculation. Because of the stability, a large 
change in calculation time for any execution of the algorithm suggests an error in the input 
data. 

The program produces the schedule with its accompanying report. The>' are 
illustrated in Chapter IV.C.7 and Appendices B and C. 


67 



89 



Measures of Effectiveness 





69 


of Effectiveness With and Without Exchange Algorithm 





Number Total Total Penalty for Penalty for Topics Scheduled outside Suggested Number of 

of Number Runtime Topics Not Timeframe (Total Number of Topics Scheduled More Tlian 




























71 






















B. SCENARIO OF USE 


With this program the task of producing a schedule is simplified and the amount of 
needed to complete it drastically reduced. This section describes a scenario of use to 
illustrate how the scheduling wiflr Ais computer-aided approach mi^t be done. The times 
for Ae are estimates. Field teste to verify Ae numbers were not performed. 

For Ais scenario it is assumed that Ae scheduler is not new on Ae job; he has 
already done at least one schedule and is familiar wiA Ae present manual way of doing it. 
FuiAermore, it is assumed Aat all Ae data have been provided to Ae company and Ae 
scheduler wiA Ae guidelines Ae company commander wants to have followed. The time 
he begins working on Ae schedule is assumed to be one morning. 

At first before actually starting Ae work Ae scheduler sits down and evaluates the 
situation. He compares Ae fi’amework for this quarter wiA Ae last one or if he can wiA 
Ae same quarter last year. He should determine wheAer Ae number of platoons is going 
to change or major oAer issues have to be incorporated. This should take about 15 to 30 
minutes. After Ais he should collect and sort all his papers and orders with given dates 
and times relating to Ae quarter to have Aem ready to supply Ae data to the machine. A 
well organized Sergeant should take at most 15 minutes for this step including Ae check 
for completeness. 

After this he can start entering the data into Ae machine. Assuming that he is not 
Aat familiar with a keyboard and has to look at it to do his typing he might enter a set of 
numbers, for example for a day on a Firing Range, in 30 seconds. He should take Ae 
same time for other sets of data. Using Ae sample data (Appendix G) as a reference this 
would take approximately 40 minutes. Now the user should review Ae data in the machine 
for completeness and correctness. This could take up to 20 minutes. 

He has now spent between 75 and 90 minutes to prepare the machine and himself 
for a schedule. The program can be started now. In approximately ten minutes he has Ae 

computer calculated schedule he can work with. 

The result can be printed or evaluated on Ae computer screen. For better 
comparison it might be good to use Ae printout because limited screen size makes it 
impossible to display platoons or weeks simultaneously. The time for printout depends 
strongly on Ae printer (9- or 24-pin dot matrix). Assuming a worst case this may take half 
an hour. Now he can evaluate Ae schedule for the remaining hours of Ae morning and 


72 



implement his changes. This gives turn three hours to work on tius. The reprint for review 
by tfie company commander and the platoon leaders can be done during die lunch break 
because the printing needs no supervision. 

That afternoon, each of the platoon leaders takes time to review his schedule and to 
suggests changes. Simultaneously the company commander reviews all schedules and 
demand changes. This might take three hours and in the last hour a decision conference 
could be held to coordinate suggested changes. One day has been spent on die production 
of a new schedule. 

In the morning of the next day the Seigeant could implement die changes decided 
the previous afternoon and have the revised schedule ready eariy that morning. With 
printing multiple copies he might be finished with the schedule at lunch time. In diis 
scenario with the underlying assumption that the personnel involved are available to review, 
the schedule is completed in 1.5 days instead of the current 10 to IS working days of 
manual labor with paper and pencil or index cards on a huge billboard. 

C. BENEFITS AND ACCEPTABILITY 


Using a computer-aided approach to scheduling can reduce the time needed to 
complete a schedule. Furthermore, the schedule can be checked for consistency and 
violations of any prerequisite chains. The observance of all requirements can be tested 
quickly. Reducing the time needed to produce the result should fi-ee the Seigeant for his 
other tasks and thus increase the level of readiness of the company in the area of his 
primarj' responsibility. 

The acceptability of the program has to be evaluated at two levels. The first level is 
the user level and the second is superior command level. The user will evaluate the 
program fi’om the usability' point of view. The superior command will focus on conformity 
with regulations. 

The main criteria for acceptance on the user level are ease of use and the produced 
result. Due to the structure of the program with its graphical user interface the program is 
easy to use and the untrained scheduler new to the job can eariy on start using it. The data 
format of date and time entries places the scheduler on a familiar basis with the data he is 
dealing with. The result produced is delivered in a short time and the schedule produced 
provides a good basis for the training and possible user interaction and improvements. 


73 



Therefore, after getting used to having a computer calculated schedule the gain in time will 
support die acceptance of die program. 

For siqierior command the underlying algoridim and field testing results are more 
inqiortant. Any decision aid that is introduced into the Armed Forces has to conform to 
r^ulations. This algoridun tries to emulate the regulations and guidelines fi-om the catalog 
of training objectives as close as possible and minimizes any diversions from those rules. 
Those diversions are introduced not by die program but by local conditions which could 
not be changed by the company. Combined with the additional advantage of reducing the 
time to produce die resuh this program should be acceptable by superior commands after 
extensive field testing. 

D. TRAINING REQUIREMENTS 

Since this program has been constructed with an eas>' to use graphical user interface 
that features messages and labels that specify what has to be written where, the training to 
use this program can be minimized. A tutorial with a sample data set diat provides the 
necessary data to perform the calculation should be sufficient for a new scheduler to train 
himself. The sample data set would allow a calculation that then could be modified to test 
the exchange possibilities and their messages. The data set would also allow for change in 
the data to do a different calculation. This data set could be one similar to the set that was 
used in this paper to determine the best combination of rules for the algorithm 
(Appendix G). 

If the new scheduler is already computer literate it should take no longer than a 
morning or afternoon to get familiar with the principle use of the program. A computer 
illiterate person will need more time to learn basics about the machine first. 

Although there is no need for a special training course, incorporating this program 
into tiie course a NBC-Defense-Sergeant has to take to learn the tasks for NBC-Defense 
might be appropriate. This then insures that he knows what is available and may be more 
willing to use it when he is confronted with it the first time he takes the job. It also 
prevents misinformation about the program being passed fi-om a scheduler to Ws successor. 


74 



VL CONCLUSIONS AND RECOMMENDATIONS 


This Aesis has shown that computer-aided scheduling of basic training objectives is 
possible. The heuristically constructed schedule forms a solid basis on which manua l 
changes can be made. The resulting schedule has face validity and could be used to 
execute training in the form given. The pro^am provides a quick solution with a 
calculation time less dian the usual morning coffee break instead of 10 to 15 woiking days 
of manual labor. In addition to the raw calculation time, the time for data input has to be 
considered. This time depends on the typing skill of the user, but a complete set of data 
should rarely take more than one hour to enter. 

Therefore, the goal to give the NBC-Sergeant more time to perform his primaiy’ 
duties can be achieved with this program. The options for user interaction were created to 
allow the user to modify and update the calculated schedule to reflect changes. The correct 
use of these options can prevent a drift between actual implementation and the data for the 
schedule stored in the computer. This requires that eveiy desired change is not onl>' made 
on paper or in training itself but has to be entered into the computer. If this is handled 
property, the schedule in the computer can always reflect the training of the platoons. 

This program supplies the user with a schedule in code number format and does not 
provide facilities to print any other form of the schedule. Due to the variety of 
requirements on how a schedule has to look either by battalion standards or division 
standards, it was not considered appropriate to prescribe a format and set a standard that 
might not be acceptable. 

Further areas of continuing the research might be in modifying the improvement 
algorithm to make it more sophisticated. This might increase the number of topics that are 
scheduled in accordance with the suggested time frame. Another step in the direction of 
improving the schedule could be implementing the backtracking option wiiich is supplied as 
an empty procedure in the current version. This might create a better initial solution. 
Having shown that computer-aided scheduling of a laige number of topics into a large 
number of periods is possible in a reasonable time, another step can be made to consider 
scheduling for the non-recruit catalogs of training objectives as weU. This would certainty 
increase the magnitude of the problem because some of those have a time span of nine 
months instead of three months. But those longer scheduling tasks are coupled with more 
suggestions and restrictions that simplify the manual scheduling process for the soldier. 


75 





APPENDIX A: A MONTHLY VIEW OF MAIN SCHEDULE 

OUTPUTS 


April • 1994 


Monday Tuesday Wednesday Thursday Friday Saturday Sunday 






1 

2 

3 

4 

5 

Arrival 
of new 
Recruits 

6 

7 

8 

9 

Duty 

10 

11 

12 

Garrison 
Training 
Area D 

13 

14 

15 

16 

17 

18 

19 

Garrison 
Training 
Area D 

r 20 

21 

Firing 

Ranges 

2A D 

22 

23 

24 

25 

Firing 
Ranges 
lA D 

26 

27 

2 8 

Garrison 
Traininq 
Area D 

29 

30 



Figure Al: Calendar for April 1994 With Major Assignments 


77 


























APPENDIX B: PARTIAL PRINTOUT OF A SCHEDULE 


This appendix includes two weeks as diey would ^)pear in a paper printout. The 
first is week 1 for platoon 1. The second is week 5 for die same platoon. The complete 
printout of fids quarterfy schedule requires 39 pages. 


Week : 
Time 


1 

Monday 


Tuesday Wednesday Thursday 
06/04 07/04 


Friday 

08/04 


Platoon: 1 
Saturday 
09/04 


0700-0746 

0750-0836 

0906-0950 

0956-1040 

1045-1130 

1230-1315 

1320-1405 

1435-1520 

1525-1610 

1615-1700 


990000309 

990000309 

990000309 

990000309 

990000309 

990000309 

990000309 

990000309 

010101401 


010101402 

010101403 

100101500 

100101500 

140101001 

140101002 

010209001 

090102801 

090102802 

090102802 


090102802 

090102802 

090102802 

090102802 

090102802 

090102802 

160103901 

160103902 

160103903 


010106801 

090102802 

100101500 

100103000 

110101100 


Figure Bl: Schedule for Platoon 1, Week 1 


79 



Week : 5 


Time 


0000-0100 

0100-0200 

0200-0300 

0300-0400 

0400-0500 

0500-0600 

0600-0700 

0700-0745 

0750-0835 

0905-0950 

0955-1040 

1045-1130 

1230-1315 

1320-1405 

1435-1520 

1525-1610 

1615-1700 

1700-1800 

1300-1900 

1900-2000 

2000-2100 

2100-2200 

2200-2300 

2300-2400 


Platoon: 1 

Monday Tuesday Wednesday Thursday Friday Saturday 
02/05 03/05 04/05 05/05 06/05 


100105602 

100105602 

090201000 

090201000 

060104401 

060104401 

060104402 

010307002 

990000304 


990000306 

010110500 

010110500 

010110500 

010111800 

010116102 

010116102 

010116103 

010116103 

010116104 

010201901 

010201901 

010202101 

010209003 

010209003 

010209003 

010209003 


010209003 

010107002 

010107002 

010107002 

010108302 

010111800 

010111800 

010201902 

010201902 

010202102 

010202103 

010202103 

010204700 

010204700 

010204700 

990000308 


090105600 

090105600 

090105600 

090105600 

090105600 

090105600 

090202200 

090202200 

090202200 

060104403 


110301000 

060104403 

010116101 

110301000 

010307002 


Figure B2: Schedule for Platoon 1, Week 5 


80 




appendix C: PRINTOUT OF A REPORT 


This report is produced by the scheduling program. The run was performed using 
the test data set listed in Appendix G. The margins have been modified to fit the page. 


Date; 4/ 1/1995 

Starttime; 17:15:50:38 

Platoons This Quarter : 3 

Total Number Of Weeks : 13 

Total Number Of Periods : 549 

Total Number Of Topics : 402 

Number Of Required Hours : 546 

Intermediate Result After Garrison Training Area : 

Already assigned • 108 Hours 30.88% 

Remaining to be assigned : 399 Hours 

New Number Of Required Hours : 567 Hours 

Intermediate Result after Firing Ranges : 

Already scheduled for platoon 1 • 226 1 

Already scheduled for platoon 2 : 226 . 

Already scheduled for platoon 3 : 226 

Remaining to be scheduled for platoon 1 : ^45 

Remaining to be scheduled for platoon 2 : 344 

Remaining to be scheduled for platoon . : 34/ 

Updated Number of hours needed for platoon 1 : o 1 

Updated Number of hours needed for platoon ^ ^ U 

Updated Number of hours needed for platoon ^ : u i 


Hours 

Hours 

Hours 

Hours 

Hours 

Hours 

Hours 

Hours 

Hours 


41.54% 

41.54% 

41.54% 


Results after resolving possible conflicts after prescheduling : 


Now already scheduled for platoon 1 
Now already scheduled for platoon 2 
Now already scheduled for platoon 5 


230 Hours 
230 Hours 
234 Hours 


MCE 1 
MOE 2 
MOE 2g 
MOE 2f 
MOE 2o 
MOE 3 


Total 
90170 (824) 
142( 14) 
9348 (141) 
1259( 21) 
0 ( 0 ) 
0 


Platoon 1 
30248(275) 
376( 4) 
3116(47) 
418( 7) 
0 ( 0 ) 
0 


Platoon 2 
30247 (274) 
279 ( 4) 
3116(47) 
324( 7) 
0 ( 0 ) 
0 


Platoon 3 
29675(275) 
487( 6) 
3116(47) 
517( 7) 
0 ( 0 ) 
0 


Garrison Training 
Firing Ranges 
External Personnel 


Algorithm Start: 17:15:53:46 


Alaorithm End: 1 /:21:44:60 


81 






Total Platoon 1 
MOE 1 : 1946( 53) 

MOE 2 : 19343(135) 
MOE 2g: 9348(141) 

MOE 2f: 1259 ( 21) 

MOE 2o: 3878( 32) 

MOE 3 : 56 


Platoon 2 Platoon 3 
517(19) 813(16) 

6318(39) 6204(42) 

3116(47) 3116(47) 

418( 7) 324( 7) 

1139(11) 1307(12) 

16 19 


616(18) 

6821(54) 

3116(47) Garrison Training 
517( 7) Firing Ranges 
1432( 9) External Personnel 
21 


MOE after exchanging scheduled hours: 

Total Platoon 1 Platoon 2 
MOE 1 : 1946( 53) 517(19) 813(16) 
MOE 2 : 18731(130) 6104(38) 6094(41) 
MOE 2g: 9348(141) 3116(47) 3116(47) 
MOE 2f: 1259( 21) 418( 7) 324( 7) 
MOE 2o: 3878( 32) 1139(11) 1307(12) 
MOE 3 : 50 15 


Platoon 3 
616 ( 18 ) 

6533(51) 

3116(47) Garrison Training 
517( 7) Firing Ranges 
1432( 9) External Personnel 
16 


topics could not be scheduled; 
Platoon 2 Platoon 3 

060103105-00 

100301400-01 100301400-01 

100301400-02 100301400-02 


The following 
Platoon 1 
060103105-00 

100301400-02 

990000312-09 

990000312-10 

990000312-11 

990000312-12 

990000312-13 

990000312-14 

990000312-15 

990000313-00 

990000314-01 

990000314-02 

990000314-03 

990000314-04 

990000314-05 

990000314-06 

990000314-07 

990000314-08 

990000314-09 


990000312-13 

990000312-14 

990000312-15 

990000313-00 

990000314-01 

990000314-02 

990000314-03 

990000314-04 

990000314-05 

990000314-06 

990000314-07 

990000314-08 

990000314-09 


990000312-10 

990000312-11 

990000312-12 

990000312-13 

990000312-14 

990000312-15 

990000313-00 

990000314-01 

990000314-02 

990000314-03 

990000314-04 

990000314-05 

990000314-06 

990000314-07 

990000314-08 

990000314-09 


Date: 

Starttime: 


4/ 1/1995 
17:23:10:67 


82 


































Menu 


84 

















APPENDIX E: DISPLAYS OF INPUT WINDOWS 



Figure El: Dialog Box for Garrison Training Area 



Figure E2: Dialog Box for Gymnasium / Athletic Field 



Figure E4: Dialog Box for Obstacle Course 




























Figure E5: Dialog Box for Chief Master Sergeant Unavailability 



Figure E6: Dialog Box for Nuclear-Biological-Chemical-Defense Sergeant 

Unavailability 



Figure E8; Dialog Box for Security Personnel Availability 


86 













































Figure E9: Dialog Box for Military Priest Availability 



Figure £10: Dialog Box for Social Worker Availability 



Figure £12: Dialog Box for InterchaDging Hours 


87 











































































Figure £17: Dialog Box to Select Calendar Printing 



Figure £18: Dialog Box to Select Schedule Printing 



Figure £19: Dialog Box to Determine Number of the Copies to Print 



Bftsic in ' 

^ Jasic f rainlft9 Snlta ixi the 
rederal ilraed Fas^ea of Ceraaiiil 

/-• CBpjn^inrht 1994/95 ^ 
Cavtain Half iStpewa .. 


Figure £20: About Box 



89 


























APPENDIX F: DISPLAYS OF WARNINGS AND MESSAGES 



Figure FI: Waroing Box for Missing Garrison Training Area Data 





Figure F4: Warning Box for Missing Swimming Pool Data 


91 


























Figure F5: Warning Box for Missing Obstacle Course Data 



Figure F8: Confirmation Request for Unequal Exchange of Days 


92 



























Figure F9; Error Message for More Than One Check Mark 



Figure FIO: Printer Error Warning 


















APPENDIX G: SAMPLE INPUT DATA FOR ONE QUARTER 


This appendix features die quantity of input data needed for the prt^am to 
produce a schedule. Data for instructor availability or unavailability can be omitted. As 
described, the program assumes that if Aey are omitted, they are either never or always 
available. The data for facilities have to be provided to produce a meaningful schedule. 
The algorithm does not execute if these data are missing. All the sample data refer to the 
second quarter of 1994. The date entries in the tables are given in the format 
Day/Month/Year. Time data are given in the 24 hour format. 


Event 

Date 

Arrival of Recruits 

05/04/94 

Departure of Recruits 

30/06/94 

Duty on Saturday 

08/04/94 

Legal / Clerical Holida>^ ^ 

12/05/94 

Legal / Clerical Holiday 

13/05/94 

Legal / Clerical Holiday 

23/05/94 

Legal / Clerical Holiday 

02/06/94 

Legal ! Clerical Holiday 

03/06/94 


Table Gl: Calendar Dates for Second Quarter 1994 


Date 

Time 

Instructor 

Title / Topic 

14/04/94 

1530-1610 

CpCdr 

Promotions and Awards, Company Muster 

16/05/94 

0700-0835 

BtlCdr 

Information on Actual Political Developments 

27/06/94 

0700-0835 

BtlCdr 

Ouarterh- Battalion Muster 


Table G2: Special Events / Hours Not Covered in Catalog of Training Topics 


95 





Date 


12/04/94 

0700-1610 

19/04/94 

0700-1610 

28/04/94 

0700-1700 

03/05/94 

0700-2400 

04/05/94 

0000-1610 

10/05/94 

0700-1610 

17/05/94 

0700-2400 

18/05/94 

0000-1610 

31/05/94 

0700-1610 

06/06/94 

0700-1610 

07/06/94 

0700-1610 

21/06/94 

0700-2400 

22/06/94 

0000-1610 


Table G3: Garrison Training Area Availability in Second Quarter 1994 


Date 

Time 

Number of 

Subranges A 

Number of 

Subranges D 

21/04/94 

0700-1610 

2 

0 

25/04/94 

0700-1610 

1 

0 

05/05/94 

0700-1700 

2 

2 

11/05/94 

0700-2400 

3 

0 

25/05/94 

1230-2400 

2 

1 

09/06/94 

0700-1700 

2 

1 


Table G4; Firing Ranges for the Company 


Day of Week 

Starting Date 

Time 

Routine Assignment 

Friday 

08/04/94 n 

0955-1130 

weekh 


Table G5: Obstacle Course Assignments 


96 










Table G6: Gymnasium / Athletic Field Assignments 


Date 

Time 

13/04/94 

0700-0835 

26/04/94 

0955-1130 

02/05/94 

0700-0835 

24/05/94 

0955-1130 

24/05/94 

1230-1405 

24/05/94 

1435-1610 

14/06/94 

0955-1130 

28/06/94 

0700-0835 

28/06/94 

1230-1405 


Table G7: Outdoor / Indoor Swimming Pool Assignments 


Function (Billet) 

Day of Week 

Starting Date 

Time 

Routine 

Assignment 


Monday 

04/04/94 

0700-0835 

— 


Tuesday 

05/04/94 

0700-0835 

— 


Wednesday 

O 6 /O 4/94 

0900-1130 

weekl>’ 


Wednesday 

15/06/94 

0700-1610 

— 

CpCdr 

Thursday 

16/06/94 

0905-1130 

— 

CMSgt 

Wednesday 

15/06/94 

0700-1610 

— 


Thursday 

I 6 /O 6/94 

0905-1130 

— 


Monday 

20/06/94 

0700-1610 

daily 

NBCSgt 

Monday 

04/04/94 

0700-0835 

— 


Tuesday 

05/04/94 

0700-0835 



Wednesday 

06/04/94 

0900-1130 

— 


Wednesday 

15/06/94 

0700-1610 

— 


Thursday 

16/06/94 

0905-1130 

“ 


Table G8: Unavailability Data for Company Instructors 


97 













































































Function 

Date 

Time 

MedPers 

18/04/94 

0700-0835 

MedPers 

20/04/94 


MedPers 

21/04/94 

0700-0835 

MedPers 

25/04/94 

0955-1130 

MedPers 

29/04/94 

0700-0835 

MedPers 

06/05/94 

0900-1130 

SecPers 

25/04/94 

0955-1130 

SecPers 

26/04/94 

1435-1610 

SecPers 

29/04/94 

0700-0835 

SecPers 

09/05/94 

0900-1130 

SecPers 

16/05/94 

0700-0835 

MilPriest 

22/04/94 

0905-1040 

MilPriest 

20/05/94 

0750-0950 

MilPriest 

24/06/94 

0750-0950 

SocWork 

15/04/94 

0955-1130 

SocWork 

27/05/94 

0900-1040 


Table G9: Availability of External Instructors 



Table GIO: Additional Battalion / Division Requirements 


98 






















































APPENDIX H: PSEUDOCX)DE FOR PROGRAM 


Pseudocode for coding date and tim e data into pcnods: 

read all input data for calendar dates; 

read all input data from basic schedule matrix; 

read availability data for garrison training area and firing ranges; 

CurrentDay arrival date + 1; 

PeriodCounter <- 1; 
while not at the date recruits leave do 
If it is not a holiday then 
determine which day of the week is CurrentDay; 

If it is not a Saturday or Sunday then 
while periods in basic schedule not empty 

code period with date, time and day of week information, 
code period with daylight information as ‘Day ; 
increment PeriodCounter, 

6l$6 

while periods on Wednesday afternoon in basic schedule not empty do 
code period with date, time and day of week information of previous day ; 
code period with daylight information as ‘Day’; 
increment PeriodCounter; 

while periods Friday in basic schedule not empty’ do 

code period with date, time and day of week iirformation; 
code period with dayli^t information as ‘Day’; 
increment PeriodCounter; 

increment CurrentDay; 

for all dates and times in ^rrsion training area list and firing range list do 
find the day in period list; 

compare the time with first and last period times on that day; 
if they do not match then 

calculate how many more periods on that day are needed; 

determine whether earty or late on that day; 

find the insertion point; 

move all later topics for the amount to insert, 

increase the period counter; 

insert the periods with date and new time information; 

code die day of week information same as the day used; 

code the daylight information depending on the time and the quarter; 

save period list and PeriodCounter, 


99 





Pseudocode for interchange ho ur alporithm: 
read data from special log file; 
lead die date and time information fiom the dialog box; 
determine platoon firom opened schedule; 
detranine status fi-om oveiride value; 
convert dates and times into start periods and durations; 
if durations are not equal then 
din w warning box and abort; {this cannot be executed} 

else 

check for violations; 
if no violations or user override then 
for j := 0 to duration - 1 do 

Temp <- Schedule[platoon, start periodl + j]; 

Schedule[platoon, startperiodl + j].<~ Schedule[platoon, start penod2 + j], 
Schedule[platoon, start period2 + j] <- Temp; 

else 

display confirmation box; 


Pseudocode for interchange day algorithm: 
read data fi'om special log file; 

read the date and time information from the dialog box; 
determine platoon fi’om opened schedule; 
determine status from override value; 
convert dates and times into start periods and durations; 
if durations are not equal then 
if not override then 
show warning box and abort; 
else 

Length <— Minimum(durationl and duration2); 
for j:= 0 to Minimum(durationl and duration2) do 
Temp <- Schedule[platoon, start periodl + j]; 

Schedule[platoon, start periodl + j] ^ Schedule[platoon, start period2 + j], 
Schedule[platoon, start period2 + j] <- Temp; 

if duration 1 < duration2 then 

first <r- start period 1 ; {first ahvays holds day that was shorter} 

second <— start period2; 
else 

first <— start penod2; 
second •«— start periodl; 


100 



for tiie diorter day find the periods tiiat do not match; 
insert as many as needed into the period Hst, 
for all platoons do 

drift die schedule for die number of inserted penods; 
schedule a ‘0‘ {not existing topic = unscheduled} diere; 

for j ;= 1 to Ab8(durationl - duralion2) do 

Schedule[platoon, first + Length + j] <- 

Schedule[platoon, second + Length + jj; 

Schedule[platoon, second + Lengdi + j] <- 0 ; 
else 

check for violations; 
if no violations or user override then 
for j := 0 to duration - 1 do 

Temp 4- Schedule[platoon, start periodl + j]; 

Schedule[platoon, start periodl + j] <- Schedule[platoon, start period + j], 
Schedule[platoon, start period2 + j] <- Temp; 

else 

display confirmation box; 


Pseudocode for hand ling instructor unavailability; 
read name of instructor fi-om dialog box; 
read date and time instructor is no longer available; 
convert date and time into start period and duration; 
if instructor = instructor that teaches each platoon individuall}' then 
Platoon <- platoon number from the displayed schedule; 
for j := 0 to (duration -1) do 

unschedule ScheduleP’latoon, start period +jl; 

while an unscheduled period exists do 

search the list of topics for a topic on a facility that is available and not used 
by other platoons and the length of topic < remaining unscheduled penods; 
if such a topic found then 
schedule it; 

search for an unscheduled topic not in group 99 and length < remainmg 
unscheduled periods; 

if (such a topic exists) and (instructor is available) then 
schedule it; 
else 


101 



schedule topic from group 99; 

9 

9 

; (end while} 
se 

for ph := 1 to total number of platoons do 
for j := 0 to (duration - 1) do 
unschedule Schedule[plt, start penod + j]; 

9 

while an unscheduled period exists do 
search the list of topics for a topic on a facility that is available and not used 
by other platoons and die lengdi of topic < remaining unscheduled periods; 
if such a topic found then 
schedule it; 

else . , 

search for an unscheduled topic not in group 99 and length < remaiiung 

unscheduled periods; 

if (such a topic exists) and (instructor is available) then 
schedule it; 
else 

schedule topic from group 99; 


; (end while) 


update schedule display; 
save schedule in special log file; 


Pseudocode for adding a special hour / event: 

read date and time from dialog box; 

convert date and time into period and duration; 

count number of special events /hours in list of topics; 

append new topic to list of topics; 

name it ‘Special’ + (Number of special event /hours ■•■I), 

increase the total number of topics; 

Platoon ■<— platoon number from the displayed schedule, 

If scheduled topic at period is not part of a chain then 
unschedule it; 
for j := 1 to duration do 

Schedule[Platoon, period +j -1] <- index to special topic; 


else 


102 



save topics tfiat have to be replaced into set of replacements; 
for j := 1 to duration do 

Schedule|Platoon, period + j - 1] index to special topic; 

9 

while set of replacements not empty do 
shift replaced topics to next eaihest scheduling opportunity; 
if (replaced topic can be scheduled prior to its decendant) and 
(scheduled topic in group 99) then 
schedule it; 

remove topic from set of replacements; 
unschedule die other topic Aere; 
else 

^end topics to set of replacements; 

schedule first topic in set of replacements and remove it from set; 

5 

; {end while} 

9 

update schedule display; 

save scheduling information into special log file; 


Pseudocode for removing a special hour / event: 
read date and time information from dialog box; 

Platoon <- number of platoon from displayed schedule; 
convert date and time into period and duration information; 
for j := 0 to (duration -1) do 

SchedulelPlatoon, period + j] <- 0; 
flag topic as unscheduled; 

while Schedule has unscheduled hour do 

search the list of topics for a topic on a facilin- that is available and not used 
by other platoons and the length of topic < remaining unscheduled periods; 
if such a topic found then 
schedule it; 
else 

search for an unscheduled topic not in group 99 and length < remaining 
unscheduled periods; 

if (such a topic exists) and (instructor is available) then 
schedule it; 
else 

schedule topic from group 99; 


9 

; {end while) 


103 



104 



APPENDIX I: PROGRAM DESCRIPTION 


The code is programmed in BORLAND TURBO PASCAL Version 7.0 (Borland, 
TP, 1992) with extensive use of TURBO VISION that comes with the language. Formats 
of data die scheduler normally uses are difficult to handle for a computer. Therefore, the 
data have to be converted or coded for easier reference and use. This section deals with 
die specific da*a structures used and implemented iri the computer and the data conversion. 

The complete listing of die code is available upon request fi'om die institution that 
approved the thesis or fi’om the author. 

1. Data Structures 

All data are stored in files and can be retrieved when additional information 
becomes available or entered information has to be changed. Separate files are kept for the 
current quarter and the next quarter. Files belonging to the current quarter have as their 
extension “.qtr” and files belonging to the new quarter “.new”. Backup files for the last 
quarter cany the extension “.old”. Data files with other extensions are shared files. The 
files can be read with a normal text editor but the)' contain hidden characters that are vital 
for the functionalit)’ of the program. Therefore, the only way to change information in 
those files properly is via the program. Any attempt to do so using a text editor might 
result in shifting or even overwriting some of the hidden characters. Those hidden 
characters are identifiers for the parts of the program that manage the data transfer between 
a dialog box, the random access memory (RAM) and the file. Modifying those hidden 
characters make the programs unable to read and to recover the data stored in those files. 

2. Data Preparation and Conversion 

Prior to initiating scheduling the data have to be converted and coded into an easy 
accessible and maintainable format as indicated above. A pseudocode description is given 
in Appendix H. The training objectives in the CTO are stored in an array of records and in 
the program onl)' referenced by their position in the array. Topics out of the CTO that 
have to be excluded from scheduling are deleted fi’om the array. 


105 



a. Periods 


The program uses Ihe notion of periods for assigning topics. Periods are 
individual training segments of a length between 45 and 60 minutes. All training objectives 
have to be scheduled in periods in the given training time between the arrival and the 
departure of the new recruits. An easy maintaiitable way for the computer to handle flie 
periods is the use of total enumeration. By using Ae data from the basic schedule of the 
company in combination with the calendar data, the available periods can be enumerated 
throu^out the quarter. The list of all periods in the quarter is stored as an array of records 
where the index refers to the number of die period and the fields contain the actual date 
and actual time. Additionally, die periods are coded with die information on the day of the 
week and day or night identifier. The first period available for scheduling is the first period 
on the day following the arrival day, the second period is the next period on that day and 
the last usable period is the latest period on the day prior to departure. The list of periods 
contains the daytime periods coded from the base schedule, hi addition, periods outside 
that timeframe from the availability of Garrison Training Areas and Firing Ranges are 
incorporated. 

b. FadUdes and Instructors 

All data from training facilities, availability of external instructors and non¬ 
availability of company instructors are converted into their period equivalent. The use of 
periods is easier for comparison tiian using the actual dates and times. Comparing two 
numbers is less computation effort than comparing strings of data. If some information 
about instructors has not been given (that is the files are empty), the program assumes that 
the instructor is either never or always available. External instructors are assumed to be 
never available and company instructors always. These data are kept in array of linked 
lists. 

c. Other Conversions 

The data for the requirements from division and battalion level are coded 
into a data structure of a single linked list. For special events a combined step of coding and 
prescheduling is taken. At first they' are converted into training objectives and appended to 
the array of records for the training objectives. Then they are prescheduled into the 


106 



ap pro|»iate periods in the schedule and mariced fliat diey cannot be moved to other 
periods. 

The schedule itself at dus point is kept in an [m x n]-two-dimensional 
matrix, where m is the number of platoons and n the number of periods. Stored in this 
matrix is onfy die index of die training objective which has been scheduled to the penod n 
for platoon m. 


107 





LIST OF REFERENCES 


Borland Intematioiial, Ttirbo Pascal - Programmer's Reference, 1992, Scotts Vafley. 

Borland International, Turbo Vision - Programmer's Guide, 1992, Scotts Valley. 

Heeresamt, Die Allgemeine Grundausbildung im Heer (AnTrA I), 1988, Cologne. 

Justice, Barry D., “A Scheduling Model for the U.S. Marine Corps Conununication 
Electronics School,” Master's Thesis, Naval Postgraduate School, Monterey, California, 
September 1993. 

Lawrie, N. L., “An Integer Linear Programming Model of A School Timetabling 
Problem,” The Computer Journal, vol 12, 1969, pp. 307 - 316. 

Leighton, Frank T., “ A Graph Coloring Algorithm For Large Scheduling Problems,” 
Journal of Research of the National Bureau of Standards, vol. 84, 1979, 
pp. 489 - 506. 

Mulvey, John M., “A Classsroom/Time Assignment Model,” European Journal of 
Operations Research, vol 9, 1982, pp. 64 - 70. 

Oakford, Robert V. et al, “School Scheduling - Practice and Theory,” Journal Educational 
Data Processing, vol 4, 1966, pp. 16 - 50. 

Romero, Bemado P., “Examination Scheduling In A Large Engeneering School: A 
Computer-Assisted Participative Procedure,” Interfaces, vol. 12, 1982, pp. 17-24. 

Schmidt, G. and Strohlien, T., “Timetable Construction - An Aiuiotated Bibliography,” 

The Computer Journal, vol 23, 1979, pp. 307 - 316. 

Watson, Blake, Programming with Turbo Pascal, 1994, New York. 

de Werra, D., “An Introduction To Timetabling,” European Journal of Operations 
Research, vol 19, 1985, pp. 151 - 162. 

Wood, D. C., “ A System For Computing University Examination Timetables,” The 
Computer Journal, vol. 11, 1968, pp. 41 - 47. 

Wood, D. C., “A Technique For Colouring A Graph Applicable To Large Scale 
Timetabling Problems,” The Computer Journal, vol. 12, 1969, pp. 317 - 319. 


109 





INITIAL DISTRIBUTION LIST 


Defense Technical Information Center 
Cameron Station 
Alexandria, VA 22304-6145 

Library, Code 52 
Naval Postgraduate School 
Monterey, CA 93943-5101 

Prof Gordon H. Bradley, Code OR/Bz 
Department of Operations Research 
Naval Postgraduate School 
Monterey, CA 93943-5002 

Prof Robert F. Dell, Code OR/De 
Department of Operations Research 
Naval Postgraduate School 
Monterey, CA 93943-5002 

United States Army Recruiting Command 
CodeN7 

Fort Knox, KY40121 

Hauptmann Ralf Drews 

1./Panzeraufklarungsbatallion 13 

Friedenstein - Kaseme 

99867 Gotha 

Germany 

German Militaiy Command USA/Canada 
Attn: SI StOffz 
11150 Sunrise Valley Drive 
Reston, VA 22091 



