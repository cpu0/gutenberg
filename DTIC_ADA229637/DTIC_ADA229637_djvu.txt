AD-A229 637 



UNISYS 


TASK: UR20 
CDRL: 0 

UR20 — Process/Environment 
Integration Ada/Xt Toolkit, Version 
2.2 SunOS Implementation 

Version Description Document 





STARS-RC-01010/001/00 


23 July 1990 


DTIC 

S ELECTEjPfc 
NOV 14 19901 1 

% u 


' luBiwkJiiok'Btxrasaairy ' 

-AfVrormA tm pobfc 


80 11 13 111 















REPORT DOCUMENTATION PAGE 


Form Approved 
OMB No 0704-0788 


p*o-'c »eoc*“ "'C Cufaer tor t*n$ ccnecnon cf ntc^atior *» •itimjtea :c d*er»q* ‘ *0\jt oer ••soo^se *nciuoi*c tne HW tor r«%ie**'ng in*uuOicnv *e#r:-i~c *• *’*•’*£ can 
gitr'ffrq jno the o»U f>ffOf0. ane a«C reviewing tne collection o* iMorfrmon Se«0 comments rfq«» 0 ing thi* bjfflfri estimate o f an, :t*er avoen o’ t"».* 

?0'ffcion ; 4 •n*o”"ijiC'v ,n < uomg suggestions »o’ recucmg tn»s ouroen to Washington «eaoouaners Services. Directorate »or information Ooecatiom *nfl *wcnv ’2tS jetterson 
Su.te 12C* Arlington, vo 22207-1302 ana tc the 0*«ce o’ Management ana Buage: B ioe^or< Aeduction Project ( 0704 - 0 * 881 . Washington. DC 2C503 


1. AGENCY USE ONLY (Leave blank) 


A. TITLE AND SUBTITLE 


2. REPORT DATE 

23 July 1990 


3. REPORT TYPE AND DATES COVERED 

Version Description Document 


5. FUNDING NUMBERS 


Ada/Xt Toolkit 


6. AUTHOR(S) 

Kurt C. Wallnau 
Robert C. Smith 
Timothy M. Schreyer 


7. PERFORMING ORGANIZATION NAME(Si AND ADDRESSjES) 

Unisys Corporation 

12010 Sunrise Valley Drive 

Reston, VA 22091 


STARS Contract 
F19628-88-D-0031 


8 PERFORMING ORGANIZATION 
REPORT NUMBER 

GR-7670-1 1 33(NP) 


9. SPONSORING. MONITORING AGENCY NAME(S) AND AODRESS(ES) 
Department of the Air Force 

Headquarters, Electronic Systems Division (AFSC) 
Hanscom AFB, MA 01731-5000 


10. SPONSORING MONITORING 
AGENCY REPORT NUMBER 


01 01 0 



12a. DISTRIBUTION . AVAILABILITY STATEMENT 


12b. DISTRIBUTION CODE 


Approved for public release; 
distribution is unlimited 


13. ABSTRACT (Maximum200 words) 


^)This software package provides an Ada programmatic interface to a set 
of reusable user interface abstractions known as widgets. The 
software provides the full functionality of the M.I.T. X Consortium 
Version 11 Release 3 X Window System. The software consists of three 
components: an Ada binding to the Xlib layer, an Ada implementation of 
the Xt Intrinsics layer, and an Ada widget library. The Ada binding 
to the Xlib layer is an upgrade of the STARS Foundations Ada Xlib 
binding, and provides a protocol interface including a set of graphics 
drawing primitives. The Xt Intrinsics layer provides a policy-free 
mechanism for creating and managing user interface objects. User 
interface objects are contained in the widget library which consists 
of a small set of commonly used user interface abstractions, such as 


scrollbars and command buttons 


/Tty : - ' 

1 


7 ": ’ 


14 SUBJECT TERMS'.^ , 

Ada bindings to Xlib 

Xt intrinsics 

XT sample widget set 


17. SECURITY CLASSIFICATION 

18. SECURITY CLASSIFICATION 

19. SECURITY CLASSIFICATION 

OF REPORT 

OF THIS PAGE 

OF ABSTRACT 

Unclassified 

Unclassified 

Unclassified 


IS. NUMBER OF PAGES 

51 


16. PRICE CODE 


20. LIMITATION OF ABSTRACT 


















TASK: UR20 
CDRI-: 01010 


VERSION DESCRIPTION DOCUMENT 
For The 

SOFTWARE TECHNOLOGY FOR ADAPTABLE, RELIABLE SYSTEMS 

(STARS) 


Ada/Xt Toolkit 
Version 2.2 

SunOS Implementation 


STARS-RC-OIOIO/OOI/OO 
Publication No. GR-7670-1133(NP) 
23 July 1990 


CDRL Type: A005, Informal Technical Data 

CONTRACT NO. F19628-88-D-0031 
Delivery Order 0002 


Prepared for: 

Electronic Systems Division 
Air Force Systems Command, USAF 
Hanscom AFB, MA 01731-5000 


Prepared by: 

Unisys Defense Systems 
Tactical Systems Division 
12010 Sunrise Valley Drive 
Reston, VA 22091 


5 \ Distribution) LimVted/lo ^ ^ 

tLS.'Government and U.S. Government 
■ j Contractors only: j . . ^ 

t iAdmvjistrbHve fa %ly 

v/ \J U 




TASK: UR20 
CDRL: 01010 


VERSION DESCRIPTION DOCUMENT 
For The 

SOFTWARE TECHNOLOGY FOR ADAPTABLE, RELIABLE SYSTEMS 

(STARS) 

Ada/Xt Toolkit 
Version 2.2 

SunOS Implementation 


STARS-RC-01010/001/00 
Publication No. GR-7670-1133(NP) 
23 July 1990 


CDRL Type: A005, Informal Technical Data 

CONTRACT NO. F19628-88-D-0031 
Delivery Order 0002 


Prepared for: 

Electronic Systems Division 
Air Force Systems Command, USAF 
Hanscom AFB, MA 01731-5000 


Prepared by: 

Unisys Defense Systems 
Tactical Systems Division 
12010 Sunrise Valley Drive 
Reston, VA 22091 



23 July 1990 


STARS-RC-01010/001/00 



PREFACE 


This document was prepared by Unisys Defense Systems, Valley Forge Operations, in support 
of the Unisys STARS Prime contract under the Process/Environment Integration task (UR20). 
This CDRL, 01010, is type A005 (Informal Technical Data) and is entitled "Ada/Xt Toolkit, 
Version 2.2 - SunOS Implementation: Version Description Document". 


This document has been reviewed and approved by the following Unisys personnel: 











23 July 1990 


STARS-RC-01010/001/00 


Contents 

1 SCOPE 1 

1.1 Identification . 1 

1.2 System Overview. 1 

2 RELATED SOFTWARE 2 

3 VERSION DESCRIPTION 3 

3.1 Inventory of Contents. 3 

3.1.1 Directory: code . 3 

3.1.2 Sub-directory: C . 4 

3.1.3 Sub-directory: Utils . 4 

3.1.4 Sub-directory: Xlib . 4 

3.1.5 Sub-directory: Xt . 5 

3.1.6 Sub-directory: Xmu . 5 

3.1.7 Sub-directory: Widgets . 5 

3.1.8 Sub-directory: Tests . 5 

3.1.9 Sub-directory: Demo . 6 

3.2 Changes Installed. 6 

3.3 Adaptation Data. 9 

3.3.1 Operating Environment . 9 

3.3.2 Development Environment. 9 

3.3.3 Configuration-unique Data. 9 

3.4 Interface Compatibility. 10 

3.5 Installation Instructions . 10 

3.5.1 VADS. 10 

3.5.2 TeleSoft. 10 

3.5.3 Build Procedure. 10 

3.5.4 Build Validation . 11 

3.6 Potential Problems. 11 

3.6.1 Subprogram Type Simulation. 11 

3.7 Enhancements. 11 

4 NOTES 12 

A Appendix A: Inventory of Contents 15 

B Appendix B: VADS Build Scripts 23 

B.l Script: BuildAdaXt.VADS. 23 

B.2 Script: BuildAdaXt.var. 25 

B.3 Script: Xlib/vads/BuildXlib.VADS. 26 

B.4 Script: Xt/vads/BuildXt.VADS. 28 

B.5 Script: Xn.u/vads/BuildXmu.VADS. 32 

B.6 Script: Widgets/vads/BuildWidgets.VADS. 33 

B.7 Script: Tests/vads/BuildTests.VADS. 36 


Page ii 






































23 July 1990 


STARS-RC-01010/001/00 


B. 8 Script: Demo/vads/BuildDemo.VADS. 37 

C Appendix C: TeleSoft Build Scripts 38 

C. l Script: BuildAdaXt.TG2. 38 

C.2 Script: Xlib/telesoft/BuildXlib.TG2. 40 

C.3 Script: Xt/telesoft/BuildXt.TG2 . 42 

C.4 Script: Widgets/telesoft/BuildWidgets.TG2. 47 

C.5 Script: Tests/telesoft/BuildTests.TG2. 50 

C.6 Script: Demo/telesoft/BuildDemo.TG2. 51 


Page iii 












23 July 1990 


STARS-RC-01010/001/00 


1 SCOPE 

1.1 Identification 

Version Description Document, 
Ada/Xt Toolkit, 

Version 2.2, 

SunOS Implementation 


1.2 System Overview 

Ada/Xt is an Ada implementation of the MIT X Toolkit (Xt). Xt consists of a set of intrinsics 
interfaces, which provide operations for construction, arrangement, and manipulation of 
windows, and a set of widgets, which are window objects ranging from buttons and scrollbars 
to text editors. Xt is built on top of Xlib, which is a low-level library of window primitives. 
The routines in Xlib provide window functionality by communicating with the X window 
server using the X Window System protocol. This release of Ada/Xt for X Window System 
version 11, release 3 (X11R3) consists of three major parts. These are: 

1. Ada bindings to Xlib - the C language interface to the X protocol; 

2. Xt Intrinsics - includes an intrinsics package and several built-in widget classes; and 

3. an Xt sample widget set - includes ten MIT Athena widgets and two HP widgets. 

The Ada/Xlib bindings are an Ada data structure interface to the underlying C language 
object code for Xlib. Ada/Xlib uses Ada’s pragma INTERFACE to ’’bind” Ada subroutines 
to their C counterparts. The Ada/Xlib bindings provide a complete mapping to the C Xlib 
and can be used as a stand-alone product. 

The Xt Intrinsics, as noted above, provide a higher-level interface used to construct window¬ 
ing applications. Ada/Xt is an implementation of Xt in Ada, not a binding like Ada/Xlib. 
Ada/Xt provides an intrinsics package which provides the functionality of Xt used to man¬ 
age X resources, events, and hierarchical widget construction. The interfaces of the C Xt 
are mapped one-to-one in the Ada implementation. Ada/Xt also implements the built-in 
composite and constraint widgets, in addition to the family of shell widgets. 

The sample widget set provided with Ada/Xt, rounds out the toolkit. The widgets are 
intended as examples for construction of additional widgets and an initial set with which to 
prototype Ada windowing applications. Ten of the MIT Project Athena widgets have been 
re-implemented in Ada, along with two of the Hewlett-Packard (HP) widgets. The sample 
widget set includes the following widgets: 

simple a core widget with a sensitive border and variable cursor 
(Athena). 


Page 1 





23 July 1990 


STARS-RC-01010/001/00 


label 

a simple widget that can display static text or pixmaps 
(Athena). 

command 

a label widget that can perform mouse-activated actions 
(Athena). 

scroll 

a scrollbar used to alter the view in a window (Athena). 

form 

a constraint widget which allows child widgets to be layed- 
out relative to each other and manages that relationship 
(Athena). 

viewport 

a form widget which allows a partial view of a larger 
window using scrollbars (Athena). 

manager 

a constraint widget which provides general geometry and 
lay-out services to its children (HP). 

bboard 

a bulletin board manager widget which allows children 
to be positioned at (X,Y) locations (HP). 

text 

the basic text editor widget from which the others are 
specialized (Athena). 

ascii string text 

a text widget which allows viewing, navigation, and edit¬ 
ing of a string (Athena). 

ascii disk text 

a text widget which allows viewing, navigation, and ap¬ 
pending to a file (Athena). 

dialog 

a form widget which contains a prompt string, a text en¬ 
try field, and any number of command buttons (Athena). 


This release of Ada/Xt is sufficient to prototype Ada windowing applications of significant 
complexity. Additional releases of Ada/Xt will enhance and supplement the existing widget 
set and make the Ada language interface to X an even more viable development tool. 


2 RELATED SOFTWARE 

The Ada language interface requires a compiled ”C” version of X11R3 and its archives. 
Also required is the library for UNIX system services, used for low-level interaction with the 
operating system. Routines are used from this library to query environment information, 
generate temporary file names, probe UNIX sockets, and manipulate memory at the lowest 
level. (See 11 Configuration-unique Data”.) 

An equivalent version of this software is available for operation under the MACH operating 
system. 


Page 2 





23 July 1990 


STARS-RC-01010/001/00 


3 VERSION DESCRIPTION 

3.1 Inventory of Contents 

3.1.1 Directory: code 

The code directory is structured as shown below: 

code 

code/C 

code/Utils 

code/Xlib 

code/Xlib/telesoft 

code/Xlib/vads 

code/Xt 

code/Xt/telesoft 

code/Xt/vads 

code/Xmu 

code/Xmu/vads 

code/Widgets 

code/Widgets/telesoft 

code/Widgets/vads 

code/Tests 

code/Tests/telesoft 

code/Tests/vads 

code/Demo 

code/Demo/telesoft 

code/Demo/vads 

Each higher-level subdirectory (Demo, Tests, Widgets, etc.) contains the source code needed 
to generate a part of the Ada/Xt Toolkit. Files that can be used with either the VADS or 
TeleSoft compiler reside in the higher-level sub-directories. The lower-level sub-directories 
(vads and telesoft) contain those source files that are dependent upon particular features 
or syntax of the corresponding compiler. Execution of one of the build scripts listed below 
will cause the appropriate compiler-specific source files to be copied into the higher-level 
sub-directories. 

In addition to the sub-directories listed above, the code directory contains the following files: 


BuildAdaXt.TG2 
BuildAdaXt.VADS 
BuildAdaXt.var 
Contents.tty 
VDDxt.ps 
VDDxt.tty 


— C-shell script for building Ada/Xt with TeleSoft 

— C-shell script for building Ada/Xt with VADS 

— Defines environment variables for the above scripts 

— A directory listing (reproduced as Appendix A) 

— PostScript version of this document 

— Clear ASCII text version of this document 


Page 3 



23 July 1990 


STARS-RC-01010/001 /0U 


The two UNIX C-shell scripts, with some minor modification of the .tar file, can be used to 
build the Ada/Xt Toolkit from its Ada source code. Similar scripts, in each of the lower- 
level subdirectories, are invoked for compilation of the individual components. Further 
information regarding the modification and use of these scripts is provided in section 3.5. 


3.1.2 Sub-directory: C 

This directory contains small C routines used by Ada/Xt. The file Makefile can be used to 
build an archive lib.a of C object code, via the UNIX make utility. This archive is needed 
to link programs which depend on the Ada Xlib bindings and/or the Ada/Xt intrinsics or 
built-in Widgets. 


3.1.3 Sub-directory: Utils 

The toolkit requires that subroutines be ”called-back” when a corresponding X event is 
received. To facilitate this, an Ada procedure type mechanism has been implemented. An 
object of a procedure type is passed to a dispatch routine, and the Ada subroutine identified 
by the object is called. Each specific procedure callback type is defined in its own package. 
This directory contains two UNIX ”awk” scripts which can be used to generate the Ada 
package for an Ada/Xt callback type. Generating new callback packages saves the user from 
repetitive coding and shields the implementation of the Ada procedure type. Also included in 
this directory is a sample callback specification, xt.converLproc , which was used to generate 
the package xLconverter.procs, which is one of the pre-existing callback types in Ada/Xt. 

The scripts are used in this way: 


awk -f genSpec.awk spec-file-name > spec-file-name_.a 
awk -f genBody.awk spec-file-name > spec-file-name.a 


These two lines will generate the Ada package specification in spec-file-name..a and the body 
in spec-file-name.a for the callback specified in file spec-file-name. The ”awk” scripts detail 
the syntax for how a callback type should be specified, and the file xLconverLprcc in this 
directory is an example. 


3.1.4 Sub-directory: Xlib 

This directory contains the Ada bindings to the MIT X Window System library (Xlib). They 
have been adapted from bindings produced by SAIC under a STARS Foundations contract. 
The file hw.a contains a test program for the Xlib bindings, which will open a window, 
display a message at each button click in the window, and exit when ”q” is typed on the 
keyboard. 


Page 4 



23 July 1990 


STARS-RC-01010/001/00 


3.1.5 Sub-directory: Xt 

This director, contains the implementation in Ada of the MIT X Toolkit (Xt). Source code 
in this directory depends on the Ada Xiib bindings and the X miscellaneous utilities (Xmu) 
package. 

3.1.6 Sub-directory: Xmu 

This directory contains the Ada implementation of the X miscellaneous utilities (Xmu) 
needed by the X Toolkit (Xt). Also contained in this directory are packages for public 
resource types defined while developing the sample widget set. (These packages can be iden¬ 
tified by their ”_r_.a” or ”_r.a” endings.) Tney are intended as an example of how new public 
resource types should be created. The code in this directory is dependent on code in the 
Ada Xlib bindings and in the Xt implementation. 

3.1.7 Sub-directory: Widgets 

This directory contains Ada source for the Widget set accompanying the Ada/Xt toolkit. 
The code in this directory is dependent on the Ada Xlib bindings, the Ada/Xt intrinsics and 
built-in Widgets, and the Xmu package. 

3.1.8 Sub-directory: Tests 

This directory contains eleven test programs which test the Ada/Xt intrinsics and exercise 
the sample widget set hierarchy. These programs depend on the Ada Xlib bind-ngs, the Xmu 
package, the Ada/Xt Intrinsics, and the Widgets. 

test-shell.a creates and displays an application shell Widget. 

test-label.a creates and displays a label Widget within the applica¬ 
tion shell Widget. 

testJabeLcallbacks.a expands test-label.a so that it calls some destroy callbacks 

and exits. 

test-label-events.a expands test-label.a so that a button press in the label 
widget’s window will call an event handler which exits. 

test-command.a creates and displays a command button widget. The 
command button’s actions are translated from the file 
named trans-file by Ada/Xt’s translation management. 
test-command.a relies on tiie file reacLtrans.a, which also 
appears in this directory. 


Page 5 




23 July 1990 


STARS-RC-01010/001/00 


test.scrollbar.a creates and displays a wide vertical scrollbar in a window. 

test.bb.a creates and displays a bulletin board widget with three 
active command buttons positioned in it. 

iest.vw.a creates and displays a viewport widget wtth two scroll 
bars which overlays a bulletin board widget which has 
three active command buttons positioned on it. 

test-asciLstringJext.a creates and displays an ascii-string text widget which al¬ 
lows one to view and edit the text in the resource string. 

test_ascii„diskjext.a creates and displays an asciLdisk text widget which al¬ 
lows one to view a file and append to it. The file must 
be specified as a resource. 

test-dialog.a creates and displays a dialog widget with two buttons. 

One can enter text into the asciijstring text window and 
have it returned with the ”ok” button. The ’’cancel” 
button will exit the program. 

3.1.9 Sub-directory: Demo 

This directory contains the Ada source files which make up the Ada/Xt demo application 
( demo-ada ). The file DEMOSCRIPT in this directory defines a manual procedure for con¬ 
ducting a demonstration of the Ada/Xt To lkit using the demo application. The file Demo 
is an X resource file, and the files applic, folder , mensetmanus, and woman are X bitmap 
files. 

3.2 Changes Installed 

Version 2.0 is the third delivery of the Ada X Toolkit. Every file’s version information in the 
header has been modified. Changes from previous releases of the toolkit reflect bug fixes and 
performance enhancements. Also, several files have been added to Ada/Xt. A family of text 
editor widgets have been added to the widget set for Ada/Xt. In addition, the conventions 
for adding user-defined widget resource types are now exemplified by several new packages 
in the Xmu directory (these files end with ”_r_.a” and ”_r.a”). 

The following files have been modified since Version 1.0b: 

Widgets: 

scroll_public.a -- bug fix: case sensitivity of continuous scrolling 

form.public.a — bug fix: numeric_error when resizing very large 


Page 6 






23 July 1990 


STARS-RC-01010/001/00 


Tests: 

read.trans.a 


— reduced buffer size to meet TeleSoft constraint 


Xlib: 

x_lib_.a — type Keycode now 0 .. 255 (was 8 .. 255 causing 

— problems in translation management) 

x.keyboard.a — bug fixes for Modifiers 

— Modifier_Keymap type is incorrect 


os_dependent_.a -- added Host OS values needed in Xmu 


Xmu/vads: 

xt_justify_r.a 


— made return type variable a global object 


Xt: 


event_mgt_localSU2.a 


send_focus_notify bug corrected 
convert_type_to_mask parameter types corrected 
(from "in out" to just "out") 
input and timer event procs protected against 
nullity 


xt_event_managementSU.a — change parameter types for convert_type_to_mask 


xt.utilitiesSU.a 


— added null checks for pointer to children array 


xt_initializersSU.a 


initialized device queues in 

xt _ creat e_ application_ cont ext 
bug fix: get_user_defaults 


device.a 


removed heap creep 

modified socket select to return changed 
fd masks 


tm_stateSU2.a 


-- work-around VADS code generator bug 
-- made compute_late_bindings separate 


xt_translation_managementSU.a — made semi.private routines separate 


parserSU2.a 


— work-around VADS code generator bug 

— bug fixes: if conditions typo 


The following files are new to Version 2.0: 


Page 7 







23 July 1990 


STARS-RC-01010/001/00 


complex subroutine made separate 
package body made separate 

— 32-bit mask widget resource 

-- text edit mode widget resource 

— selection array widget resource 

— new atoms and atom routines for Xmu 


Xt: 

compute_late_bindingsSU3.a — 
trans_mgt_semi_privateSU2.a — 

Xmu/vads: 

mask_r_.a 
mask.r.a 

xt_text_edit_type_r_.a 
xt_text_edit_type_r.a 
selection_array_r_. a 
xmu_atoms_.a 
xmu_atoms.a 

Widgets: 

ascii_disk_private_.a 
ascii_disk_public.a 
ascii_disk_public_.a 
ascii_string_private_.a 
ascii_string_public.a 
ascii_string_public_.a 
dialog.private..a 
dialog_public.a 
dialog.publi c_. a 
text.ascii.sink.a 
text_ascii_sink_.a 
text_check_resize_or_overflowSU2.a 
text_edit_semi_private_routines.a 
text.edit.semi.private.routines..a 
text_insert_charSU2.a 
text_localSU.a 
text_private_.a 
text.public.a 
text.public..a 
text_replace_textSU2.a 
text.sources .a 
text.sources..a 
text.widget.globals..a 
text.widget.support.a 
text.widget.support..a 


-- new ascii.disk widget 

— new ascii.string widget 


— new dialog widget 

— sink for ascii data 

— separate text edit operation 

— shared text widget routines 

— separate text edit operation 

— text edit local routines subunit 

— basic text widget 

— separate text edit operation 

— disk and ascii data sources 

— global text widget info 

— text widget support routines 


The following files are now obsolete in Version 2.0: 


Xlibs: 

x.events.a 


-- incorporated into x.lib.a 


Page 8 







23 July 1990 


STARS-RC-01010/001/00 


Xt: 

xt_error_managementSU.a 


— no longer used 


3.3 Adaptation Data 

3.3.1 Operating Environment 

Sun-3 Workstations, all models 

SunOS, Version 3.5 or 4.0.3 

MIT X Window System, Version 11, Release 3 

3.3.2 Development Environment 
Sun-3 Workstations, all models 
SunOS, Version 3.5 or 4.0.3 

MIT X Window System, Version 11, Release 3 
Verdix Ada Development System (VADS), Version 5.5t 
TeleSoft TeleGen2 1.4 


3.3.3 Configuration-unique Data 

This implementation requires access to some UNIX system services. These services are 
documented in the UNIX ’’man” pages and include the following routines: 


malloc, free lowest-level memory management routines 


select UNIX socket connection polling routine 
getenv, gethostname, 

getpwnam, getpwuid, routines to retrieve UNIX environment 

getuid, getwd 

tmpnam routine to generate temporary file name 


Further, the appropriate archive should be located in / usr/lib/libc.a , and accessed via the 
standard UNIX link directive, ”-lc”. These instructions are included in the build scripts 
which accompany this release. Most often, the Ada compilation system will link this archive 
in automatically. 


Page 9 




23 July 1990 


STARS-RC-01010/001/00 


3.4 Interface Compatibility 

It is possible, although unlikely, that existing Ada applications which use the Ada language 
bindings to Xlib will be affected by this release. Any programs built with Versions 1.0 or 
2.0 of Ada/Xt should be compatible with this release. 


3.5 Installation Instructions 

3.5.1 VADS 

File code/BuildAdaXt. VADS is an executable UNIX C-sheli script, which can be used to 
build the Ada/Xt Toolkit from the Ada source code, using Verdix Ada Development System 
(VADS) version 5.5t. It ensures that VADS library dependencies are established correctly, 
making it unnecessary for the installer to perform these operations manually. This script 
invokes similar scripts in each of the vads sub-directories, which build individual portions of 
the software in the proper order. 


3.5.2 TeleSoft 

File code/BuildAdaXt.TG2 is an executable UNIX C-shell script, which can be used to build 
the Ada/Xt Toolkit from the Ada source code, using TeleSoft’s TeleGen2 compilation system 
version 1.4. This script invokes similar scripts in each of the telesoft sub-directories, which 
build individual portions of the software. 


3.5.3 Build Procedure 

1. Edit the environment variables in file BuildAdaXt.var to reflect the actual operating 
environment. The following environment variables must be modified: 

Code - identifies the full pathname of the directory into which the Ada/Xt source 
code has been loaded (e.g., /mybase/myuser/adaxt/code); 

XLIB - identifies the full pathname of the directory containing the X11R3 Xlib 
object archive included in the X1IR3 distribution (e.g., /usr/lib/libXll.a); 

Vadspath - (as needed) identifies the full pathname of the directory containing 
the VADS compilation system (e.g., /mybase/compilers/vads5.5). 

TELEGEN2 - (as needed) identifies the full pathname of the directory containing 
the TeleSoft compilation system (e.g., /mybase/compilers/telegen2). 

If the code directory is structured as described in this document, no further modifica¬ 
tions are necessary. If not, the following additional variables in BuildAdaXt.var will 
have to be modified to indicate which host directory contains each of the major code 
components of this release: 


Page 10 






23 July 1990 


STARS-RC-01010/001/00 


c 

Xlib 

Xt 

Xmu 

Widgets 

Tests 

Demo 

CLIB 

2. If using the VADS compiler, execute BuildAdaXt.VADS. This script will access the 
appropriate compiler-specific source files prior to compilation. 

3. If using the TeleSoft compiler, execute BuildAdaXt.TG2. This script will access the 
appropriate compiler-specific source files prior to compilation. 


3.5.4 Build Validation 

Several programs are available that can be used to ensure that the software has been built 
correctly. File hw.a in the Xlib sub-directory contains a test program ( hello.world) for the 
Ada Xlib bindings. When executed, this program opens a window, displays a message at 
each button click within the window, and exits when ”q” is typed on the keyboard. The 
demo.ada program in sub-directory Demo and the test programs in sub-directory Tests/vads 
offer more extensive validation capabilities. 


3.6 Potential Problems 

3.6.1 Subprogram Type Simulation 

The subprogram type simulation mechanism relies on knowledge of subprogram calling con¬ 
ventions implemented by particular compilers. The implementation of subprogram types 
used in this delivery has been tested on the VADS and TeleSoft compilation systems pre¬ 
viously identified. However, new releases of these compilation systems may invalidate the 
current implementation. 


3.7 Enhancements 

The Ada bindings to Xlib, which were produced by SAIC under a STARS Foundation con¬ 
tract, have been modified significantly in order to conform more closely to their corresponding 
low-level interfaces. 


Page 11 







23 July 1990 


STARS-RC-OIOIO/OOI/OO 


4 NOTES 

1. For application programmers, the following package structure is of interest: 

package intrinsics 

package xt_ancillary_types 
package xt_type_operations 
package command.line.arguments 
package xt_utilities 
package xt_initializers 
package xt_instance_management 
package xt.composite.management 
package xt.geometry.management 
package xt.popup.management 
package xt.class.management 
package xt.callbacks 
package xt.event.management 
package xt.resource.management 
package xt.translation.manageraent 
package xt.selection.management 

package xt.procedure.types 
package xt.callback.procs 
package xt.input.callback.procs 
package xt.timer.callback.procs 
package xt.event.handler.procs 
package xt.work.procs 
package xt.accept.focus.procs 
package xt.args.funcs 
package xt.args.procs 
package xt.expose.procs 
package xt.init.procs 
package xt.procs 
package xt.realize.procs 
package xt.order.procs 
package xt.create.popup.child.procs 
package xt.set.value.funcs 
package xt.string.procs 
package xt.vidget.class.procs 
package xt.widget.procs 
package xt.geometry.handler.procs 
package xt.almost.procs 
package xt.resource.default.procs 
package xt.converter.procs 
package xt.action.procs 


Page 12 



23 July 1990 


STARS-RC-01010/001/00 


package xt_key_procs 
package xt_case_procs 
package xt_selection_callback_procs 
package xt.convert.selection_procs 
package xt.selection.done.procs 
package xt.error.msg.handler.procs 
package xt.error.handler.procs 
package xt.lose.selection.procs 
package xt.async.handlers 

package core.public 
package composite.public 
package constraint.public 
package shell.public 

package simple.public 
package label.public 
package command.public 
package scroll.public 
package form.public 
package xw.manager.public 
package xw.bboard.public 
package viewport.public 
package text.public 
package ascii.string.public 
package ascii.disk.public 
package dialog.public 

2. The following packages are of interest to the widget programmer building more widgets 
with the toolkit: 

package core.private 
package composite.private 
package constraint.private 
package shell.private 

package simple.private 
package label.private 
package command.private 
package scroll.private 
package form.private 
package xw.manager.private 
package xw.bboard.private 
package viewport.private 
package text.private 


Page 13 





23 July 1990 


STARS-RC-01010/001/00 


package ascii_string_private 
package ascii_disk_private 
package dialog_private 


3. Also of interest to application and widget programmers, selection management has 
been fully implemented, but is untested, and therefore has been ”commented-out” in 
the specification of the intrinsics. These interfaces will be supported sometime in the 
future. 

4. Some of the management sub-packages in the Ada/Xt intrinsics have sub-packages 
named semi-private (e.g., xt.translationjmanagement.semi.private) which are not in¬ 
tended for use by the widget or application programmer. 


Page 14 




23 July 1990 


STA RS-RC-01010/001/00 


A Appendix A: Inventory of Contents 

code: 

BuildAdaXt.TG2* 

BuildAdaXt. VADS* 

BuildAdaXt.var* 

C/ 

Contents.tty 
Demo/ 

Tests/ 

Utils/ 

VDDxt.ps 
VDDxt.tty 
Widgets/ 

XI ib/ 

Xmu/ 

Xt/ 

code/C: 

Makefile* 
and. c 

c_make_string.c 
fd.c 

funcall.c 
get_errno.c 
or.c 
qfree.c 
sya_env.c 
xbcopy.c 
xbittest.c 
xstrlen.c 

code/Demo: 

DEMOSCRIPT 
Demo 
applic* 
demo.a 

demo.callbacks.a 
demo_callbacks_.a 
demo_except_.a 
demo.lines.a 
demo.lines..a 
demo.menu.a 
demo.menu..a 
folder* 


Page 15 




23 July 1990 


STARS-RC-01010/001/00 


make.Demo.inv* 

mensetmanus* 

telesoft/ 

vada/ 

soman* 

code/Demo/telesoft: 
BuildDemo.TG2* 
liblst.alb 

code/Demo/vads: 

BuildDemo.VADS* 

code/Tests: 
read.traas. a 
telesolt/ 

test_ascii_disk_text. a 

test_ascii_string_text.a 

test_bb.a 

test_conunand.a 

test.dialog.a 

test.label.a 

test_label_callbacks.a 

test_label_events.a 

test.scrollbar.a 

test.shell.a 

test.vs.a 

trans.lile 

vads/ 

code/Testa/telesolt: 
BuildTests.TG2* 
liblst.alb 

code/Tests/vads: 
BuildTests.VADS* 

code/Utils: 
genBody.ask 
genSpec.ask 
xt_converter_proc 

code/Vidgets: 
ascii_disk_private_.a 
ascii_disk_public.a 


Page 16 






23 July 1990 


STARS-RC-01010/001/00 


ascii.disk.public..a 

ascii.string.private..a 

ascii_string_public.a 

ascii.string.public..a 

conunand.private.. a 

command.public. a 

command.public..a 

create.tile. a 

create.tile..a 

dialog_private_.a 

dialog_public.a 

dialog_public_.a 

f or.n_private_. a 

form_public.a 

lorm_public_.a 

label.private..a 

label.public.a 

label_public_.a 

liblst.alb 

pixmaps.a 

pixmaps..a 

scroll_private_.a 

scroll_public.a 

scroll_public_.a 

8imple_private.a 

simple_private_.a 

simple_public.a 

8imple_public_.a 

teleaoft/ 

text_ascii_sink.a 

text_ascii_sink_.a 

text_check_resize_or_overllowSU2.a 

text_edit_sami_private_routines.a 

text_edit_semi_private_routines_.a 

text_insert_charSU2.a 

taxt_localSU.a 

text_private_.a 

text.public.a 

text.public..a 

text_replace_textSU2.a 

text_sources_.a 

text.widget.globals..a 

text.widget.support.a 

text.widget.support..a 

vads/ 


Page 17 




23 July 1990 


STARS-RC-01010/001/00 


viewport.private..a 
viewport.public.a 
viewport_public_.a 
xt.edit.coniiguration_r_.a 
xw.bboard.private..a 
xw.bboard.public.a 
xw.bboard.public.. a 
xw_constants_.a 
xw.manager.private..a 
xw.manager.public.a 
xw.manager.public..a 
xw.res.convert.a 
xw.res.convert..a 
xw.traversal.procs.a 
xw.traversal.procs..a 

code/Vidgets/telesoft: 
BuildVidgets.TG2* 
liblst.alb 
text.sources.a 

code/Midgets/vads: 
BuildUidgets.VXDS* 
text.sources.a 

code/Xlib: 

compiler.dependent..a 
i romcstringSU.a 
get.window.a 
hw.a 

opendispSU.a 
os.dependent..a 
string.encaps..a 
system.environment..a 
telesoft/ 
vads/ 
x.atoms.a 
x.colors.a 
x.cursors.a 
x.cutpaste.a 
x.fonts .a 
x.graphic.a 
x.kayboard.a 
x.keysyms..a 
x_lib_.a 


Page 18 






23 July 1990 


STARS-RC-01010/001/00 


x.regions.a 
x.resmgmt.a 
x.win.mgr.a 

code/Xlib/telesoit: 
BuildXlib.TG2* 
compiler.dependent.a 
liblst.alb 
string_encaps.a 
system.environment.a 
x_int_.a 
x.lib.a 

code/Xlib/vads: 

BuildXlib.VADS* 
compiler.dependent.a 
string.encaps.a 
system.environment.a 
x_int_.a 
x.lib.a 

code/Xmu: 

vads/ 

code/Xmu/vads: 

BuildXmu.VADS* 
mask.r.a 
mask.r..a 

selection_axray_r_.a 

xmu.a 

xmu_.a 

xmu.atoms.a 

xmu_atoms_.a 

xmu_cvt_string_to_cursorSU.a 
xmu_cvt_string_to_widget.a 
xmu_cvt_string_to_widget_.a 
xmu_paths_.a 
xt_edge_r.a 
xt_edge_r_.a 
xt_float_r_.a 
xt_justily_r.a 
xt_justify_r_.a 
xt.orientation_r.a 
xt.orientation.r..a 
xt.text.edit.type.r.a 


Page 19 





23 July 1990 


STARS-RC-01010/001/00 


xt_text_edit_type_r_. a 
code/Xt: 

comp.obj.private..a 
comp.obj.public.a 
comp.obj.public.. a 
composite.private.. a 
composite.public.a 
composite.public.. a 
compute_late_bindingsSU3.a 
constraint.private..a 
constraint.public.a 
constraint.public..a 
convertSU.a 
core.private..a 
core.public.a 
core_public_.a 
cursor.cache..a 
device..a 

event_mgt_localSU2.a 
get_resourcesSU2.a 
installation..a 
int_tm_initSU2.a 
intrinsics_.a 
object_private_.a 
object.public.a 
object.public..a 
parserSU2.a 
realloc.array.a 
realloc.array..a 
rect.obj.private..a 
rect.obj.public.a 
rect.obj.public..a 
renaaed.xlib.types..a 
resourceP.a 
re8ourceP_.a 
resource.generic.int. a 
resource.generic.int..a 
selection_mgt_localSU2.a 
selection.procedure_types.SU2.a 
shell.intemalsSU. a 
ahell.private..a 
shell.public.a 
shell_public_.a 
stringops.a 


Page 20 






23 July 1990 


STARS-RC-01010/001/00 


stringops_.a 
telesoft/ 
tm.constants.. a 
tm_eventsSU2.a 
tm_late_bindingsSU2.a 
tm_stateSU2.a 

trans_mgt_semi_privateSU2.a 
type.conversionsSU.a 
vads/ 

window.obj.private..a 
window.obj.public.a 
window.obj.public.. a 
xrm.get.resources.a 
xrm.get.resources..a 
xt.accept.focus.procs.SU2.a 
xt.action.procs.SU2.a 
xt.almost.procs.SU2.a 
xt.args.lunc.SU2.a 
xt.args.procs.SU2.a 
xt.async_hjmdler.SU2.a 
xt_build_keysym_tableSU2.a 
xt.callback.procs.SU2.a 
xt.callbacksSU.a 
xt.case.procs.SU2.a 
xt.class.managementSU.a 
xt.composite.managementSU.a 
xt.convert.selection.procs.SU2.a 
xt.converter.procs.SU2.a 
xt.create.popup.child.procs.SU2.a 
xt.displaySU.a 

xt.error.handler.procs.SU2.a 
xt.error.msg.handler.procs.SU2.a 
xt.event.handler.procs.SU2.a 
xt.event.managementSU.a 
xt.expose.procs.SU2.a 
xt.geometry.handler.procs.SU2.a 
xt.geometry.managementSU.a 
xt.init.procs.SU2.a 
xt.initializersSU.a 
xt.input.callback.procs.SU2.a 
xt.instance.managementSU.a 
xt.key.procs.SU2.a 
xt_keycode_to_keysymSU2.a 
xt.lose.selection.procs. SU2 .a 
xt.order.procs.SU2.a 


Page 21 








23 July 1990 


STARS-RC-01010/001/00 


xt.popup.managementSU.a 
xt.procedure.typesSU.a 
xt_procs.SU2.a 
xt.realize_procs.SU2.a 
xt.resource.delault.procs.SU2.a 
xt.resource.managementSU.a 
xt.resource.type.instances..a 
xt.selection.callback.procs.SU2.a 
xt.selection.done.procs.SU2.a 
xt.selection.managementSU.a 
xt.set.value.lunc.SU2.a 
xt_string_procs.SU2.a 
xt_stringdels_.a 
xt.timer.callback.procs.SU2.a 
xt_translation_managementSU.a 
xt_type_opsSU.a 
xt_utilitiesSU.a 
xt.widget.class.procs.SU2.a 
xt.nidget.procs.SU2.a 
xt.work.procs.SU2.a 

code/Xt/telesolt: 

BuildXt.TG2* 
bodies.alb 
device.a 

dispatch_interlaces..a 
external_support_code_.a 
intrinsics.a 
liblst.alb 
seconds.alb 

code/Xt/vads: 

BuildXt.VADS* 
device.a 

dispatch.interlaces..a 
extemal.support.code.. a 
intrinsics.a 


Page 22 






23 July 1990 STARS-RC-01010/001/00 

B Appendix B: VADS Build Scripts 
B.l Script: BuildAdaXt.VADS 

1 #! /bin/csh -x 

2 # 

3 # Define installation-dependent variables 

4 # 

5 source BuildAdaXt.var 

6 # 

7 # Copy source files into the VADS configuration 

8 * 

9 cp $Xlib/vads/* $Xlib 

10 cp $Xt/vads/* $Xt 

11 cp $Xmu/vads/* $Xmu 

12 cp $Widgets/vads/* $Widgets 

13 cp $Tests/vads/* $Tests 

14 cp $Demo/vads/* $Demo 

15 # 

16 # Build Ada libraries in each sub-directory 

17 # 

18 a.mklib -f $Xlib $Vadspath/verdixlib 

19 a.mklib -f $Xt SVadspath/verdixlib 

20 a.mklib -f $Xmu $Vadspath/verdixlib 

21 a.mklib -f $Widgets SVadspath/verdixlib 

22 a.mklib -f STests $Vadspath/verdixlib 

23 a.mklib -f $Demo $Vadspath/verdixlib 

24 # 

25 # Establish dependencies 

26 # 

27 cd $Demo 

28 a.path -a $Xlib 

29 a.path -a $Xt 

30 a.path -a $Xmu 

31 a.path -a SWidgets 

32 cd $Tests 

33 a.path -a $Xlib 

34 a.path -a $Xt 

35 a.path -a $Xmu 

36 a.path -a $Widgets 

37 cd $Vidgets 

38 a.path -a $Xlib 

39 a.path -a $Xt 

40 a.path -a $Xmu 

41 cd $Xmu 


Page 23 








STARS-RC-01010/001/00 


23 July 1990 


42 a.path -a $Xlib 

43 a.path -a $Xt 

44 cd $Xt 

45 a.path -a $Xlib 

46 a.path -a $Xmu 

47 # 

48 # Compile the code 

49 # 

50 cd $C 

51 make 

52 

53 cd $Xlib 

54 BuildXlib.VADS 

55 

56 cd $Xt 

57 BuildXt.VADS 

58 

59 

60 cd $Widgets 

61 BuildWidgets.VADS 

62 

63 cd STests 

64 BuildTests.VADS 

65 

66 cd $Demo 

67 BuildDemo.VADS 


>4 Makefile.log 


>4 BuildXlib.log 


>4 BuildXt.log 


>4 BuildWidgets.log 


>4 BuildTests.log 


>4 BuildDemo.log 


# Build the C utilities 


# Build the Ada/X bindings 

# Build the Xt intrinsics 

# (also builds the Xmu utilities) 


# Build the Widget set 

# Build the test programs 

# Build the demo application 


Page 24 








23 July 1990 


STARS-RC-01010/001/00 


B.2 Script: BuildAdaXt.var 

1 # 

2 # Define the location of the Toolkit source code sub-directories 

3 * 

4 setenv Code <path to the top level code directory> 

5 setenv C $Code/C # C utilities source code 

G setenv Xlib $Ccde/Xlib # Ada/Xlib bindings source code 

7 setenv Xt $Code/Xt # Ada/Xt Toolkit source code 

8 setenv Xmu $Code/Xmu # Ada/X Miscellaneous Utilities source code 

9 setenv Widgets $Code/Widgets # Sample Widgets source code 

10 setenv Tests $Code/Tests # Test programs source code 

11 setenv Demo $Code/Demo # Demo program source code 

12 # 

13 # Define the location of the C and Xlib archives 

14 # 

15 setenv CLIB $C/lib.a 

16 setenv XLIB <path to the X11R3 Xlib object archive (e.g. /usr/lib/libXll.a)> 

17 # 

18 # Establish a path to the VADS compilation system 

19 # 

20 setenv Vadspath <path to VADS version 5.5> 

21 set path=($path $Vadspath/bin) 

22 # 

23 # Establish a path to the TeleSoft compilation system 

24 # 

25 setenv TELEGEN2 <path to TeleSoft version 1.4> 

26 setenv TADA $TELEGEN2/bin/ada 


Page 25 








23 July 1990 


STARS-RC-01010/001/00 



B.3 Script: Xlib/vads/BuildXlib.VADS 

1 

#! /bin/csh -lx 

2 



3 

# 


4 

# Compile 

the system and compiler dependent packages 

5 

# 


6 

ada -e -b 

system.environment..a 

7 

ada -e -b 

compiler.dependent..a 

8 

ada -e -w 

os.dependent..a 

9 

ada -e -w 

compiler.dependent.a 

10 

ada -e -w 

string.encaps..a 

11 

ada -e -w 

system.environment.a 

12 

ada -e -h 

string.encaps.a 

13 



14 

# 


15 

# Compile 

the Xlib bindings specification 

16 

* 


17 

ada -e -w 

x_lib_.a 

18 



19 

# 


20 

# Compile 

the interface bindings to C Xlib code 

21 

# 


22 

ada -e -b 

x.int..a 

23 



24 

ft 


25 

# Compile 

the X key bindings 

26 

# 


27 

ada -e -b 

x_keysyms_.a 

28 



29 

# 


30 

# Compile 

the Xlib bindings body 

31 

« 


32 

ada -e -b 

x.lib.a 

33 



34 

# 


35 

# Compile 

the subunits to Xlib bindings body 

36 

* 


37 

ada -e -b 

x.fonts.a 

38 

ada -e -b 

x.graphic.a 

39 

ada -e -b 

x.atoms.a 

40 

ada -e -e 

x.colors.a 

41 

ada -e -b 

x.cursors.a 

42 

ada -e -b 

x.cutpaste.a 

43 

# package 

body Events is nos in x.lib.a, not separate 


Page 26 











23 July 1990 


STARS-RC-01010/001/00 


44 # ada -e - 

45 ada -e -b 

46 ada -e -b 

47 ada -e -b 

48 ada -e -w 

49 ada -e -w 

50 ada -e -s 

51 

52 ada -e -u 

53 

54 # 

55 # Compile 

56 « 

57 ada -e -b 

58 


•b x_events.a 
x_keyboard.a 
x_regions.a 
x_Bin_mgr.a 
x_resmgmt.a 
fromcstringSU.a 
opendispSU.a 

get_BindoB.a 


and link the Xlib 


hB.a 


"hello_Borld" 


test program 


59 # XLIB and CLIB are installation dependent variables Bhich can be found 

60 # in the top level make script of this delivery 

61 a.Id hello_Borld -o hello_uorld $XLIB $CLIB -lresolv 

62 


Page 27 




23 July 1990 


STARS-RC-0101Q/001/00 


B.4 Script: Xt/vads/BuildXt.VADS 

1 #! /bin/csh -fx 

2 


3 

# 


4 

# utility packages 

5 

« 


6 

ada -w -e 

installation..a 

7 

ada -w -e 

realloc_array_.a 

8 

ada -v -e 

realloc.array.a 

9 

ada -w -e 

stringops..a 

10 

ada -y -e 

stringops.a 

11 

ada -y -e 

cursor_cache_.a 

12 



13 

ada -y -e 

renamed.xlib.types..a 

14 

ada -y -e 

dispatch.interlaces..a 

15 

ada -y -e 

device..a 

16 

ada -y -e 

device.a 

17 

ada -y -e 

intrinsics_.a 

18 

ada -y -e 

xt.stringdels_.a 

19 

ada -y -e 

external.support.code..a 

20 

ada -y -e 

tm.constants..a 

21 

ada -y -e 

resourceP_.a 

22 

ada -y -e 

resource.generic.int_.a 

23 

ada -y -e 

resource.generic.int.a 

24 

ada -y -e 

xt.resource.type.instances. 

25 

ada -y -e 

xrm.get.resources..a 

26 

ada -y -e 

xrm.get.resources.a 

27 



28 

« 


29 

# built-in yidget types 

30 

# 


31 

ada -y -e 

object.public..a 

32 

ada -y -e 

object.private..a 

33 

ada -y -e 

rect.obj.public..a 

34 

ada -y -e 

rect.obj.private..a 

35 

ada -y -e 

yindoy.obj.public..a 

36 

ada -y -e 

vindow.obj.private..a 

37 

ada -y -e 

comp.obj.public..a 

38 

ada -y -e 

comp.obj.private..a 

39 

ada -y -e 

core_public_.a 

40 

ada -y -e 

core.private..a 

41 

ada -y -e 

composite.public..a 

42 

ada -y -e 

composite.private..a 

43 

ada -y -e 

constraint.public..a 


Page 2S 















23 July 1990 


44 

ada -» -e 

constraint_private_.a 

45 

ada -y -e 

shell.public..a 

46 

ada -w -e 

shell_private_.a 

47 



48 

ada -y -e 

intrinsics.a 

49 



50 

ada -w -e 

xt.procedure.typesSU.a 

51 



52 

# 


53 

# compile generic bodies before any possible insttintiations 

54 

# 


55 

ada -w -e 

xt.accept.focus.procs.SU2.a 

56 

ada -w -e 

xt_action_procs.SU2.a 

57 

ada -y -e 

xt.almost_procs.SU2.a 

58 

ada -y -e 

xt_args_func.SU2.a 

59 

ada -y -e 

xt.args.procs.SU2.a 

60 

ada -y -e 

xt_async_handler.SU2.a 

61 

ada -y -e 

xt_callback_procs.SU2.a 

62 

ada -y -e 

xt_case_procs.SU2.a 

63 

ada -y -e 

xt_convert_selection_procs.SU2.a 

64 

ada -y -e 

xt.converter.procs.SU2.a 

65 

ada -y -e 

xt.create.popup.child.procs.SU2.a 

66 

ada -y -e 

xt_error_handler_procs.SU2.a 

67 

ada -y -e 

xt.error.msg.handler.procs.SU2.a 

68 

ada -y -e 

xt.event.handler.procs.SU2.a 

69 

ada -y -e 

xt_expose_procs.SU2.a 

70 

ada -y -e 

xt.geometry.handler.procs.SU2.a 

71 

ada -y -e 

xt.init.procs.SU2.a 

72 

ada -y -e 

xt.input.callback.procs.SU2.a 

73 

ada -y -e 

xt.key.procs.SU2.a 

74 

ada -y -e 

xt.lose.selection.procs.SU2.a 

75 

ada -y -e 

xt.order.procs.SU2.a 

76 

ada -y -e 

xt.procs.SU2.a 

77 

ada -y -e 

xt.realize.procs.SU2.a 

78 

ada -y -e 

xt.resource.default.procs.SU2.a 

79 

ada -y -e 

xt.selection.callback.procs.SU2.a 

80 

ada -y -e 

xt.selection_done_procs.SU2.a 

81 

ada -y -e 

xt.set.value.func.SU2.a 

82 

ada -y -e 

xt.string.procs.SU2.a 

83 

ada -y -e 

xt.timer.callback.procs.SU2.a 

84 

ada -y -e 

xt.yidget.class.procs.SU2.a 

85 

ada -y -e 

xt.yidget.procs.SU2.a 

86 

ada -y -e 

xt.york.procs.SU2.a 

87 



88 

* 



STARS-RC-01010/001/00 


Page 29 












23 July 1990 STARS-RC-01010/001/00 


89 

# intrinsics body subunits level 1 

1 

B 90 

# 



^ 91 

ada -w -e 

xt_utilitiesSU.a 


92 

ada -u -e 

xt_translation_managementSU.a 


93 

ada -a -e 

type.conversionsSU.a 


94 

ada -w -e 

xt_callbacksSU.a 


95 

ada -a -e 

xt_class_managementSU.a 


96 

ada -a -e 

xt_composite_managementSU.a 


97 

ada -a -e 

xt_event_managementSU.a 


98 

ada -a -e 

xt_geometry_managementSU.a 


99 

ada -a -e 

xt_initializersSU.a 


100 

ada -a -e 

xt_instance_manageraentSU.a 


101 

ada -a -e 

xt_popup_managementSU.a 


102 

ada -a -e 

xt_selection_manageraentSU.a 


103 

ada -a -e 

xt_type_opsSU.a 


104 




105 

# 



106 

# resource mgmt and resource conversion body stuff 1 


107 

# 



108 

ada -a -e 

convertSU.a 


109 

ada -a -e 

xt_resource_managementSU.a 


110 

ada -a -e 

resourceP.a 

d 

1 111 




r 112 

* 



113 

# subunits level 2 1 


114 

# 



115 

ada -a -e 

xt_keycode_to_keysymSU2.a 


116 

ada -a -e 

xt_build_keysym_tableSU2.a 


117 

ada -a -e 

paxserSU2.a 


118 

ada -a -e 

int_tm_initSU2.a 


119 

ada -a -e 

tm_eventsSU2.a 


120 

ada -a -e 

tm_late_bindingsSU2.a 


121 

ada -a -e 

tm_stateSU2.a 


122 

ada -a -e 

trans_mgt_semi_privateSU2.a 


123 

ada -a -e 

get_resourcesSU2.a 


124 

ada -a -e 

event_mgt_localSU2.a 


125 

ada -a -e 

selection_mgt_localSU2.a 


126 

ada -a -e 

selection_procedure_types.SU2.a 


127 




128 

ada -a -e 

compute_late_bindingsSU3.a 


129 




130 

* 



131 

# go and compile Xmu stuff since it needs the intrinsics and 

4 

I 132 

# the shell aidget needs it 


W 133 

# ($Xmu and $Xt are installation dependent and can be found in 




Page 30 






23 July 1990 


STARS-RC-01010/001/00 


134 # the top level make script of this delivery) 

135 # 

136 cd $Xmu 

137 BuildXmu.VADS >ft BuildXmu.log & 


138 

139 

cd $Xt 


140 

# 


141 

# built-in 

widget public bodies 

142 

# 


143 

ada -w -e 

object_public.a 

144 

ada -w -e 

rect_obj_public.a 

145 

ada -h -e 

window_obj_public.a 

146 

ada -w -e 

comp_obj_public.a 

147 

ada -w -e 

core_public.a 

148 

ada -w -e 

composite.public.a 

149 

ada -w -e 

constraint.public.a 

150 

ada -sr -e 

shell.public.a 

151 

ada -w -e 

shell.internalsSU.a 


Page 31 






23 July 1990 


STARS-RC-01010/001/00 


B.5 Script: Xmu/vads/BuildXmu.VADS 



1 #! /bin/csh -fx 

2 

3 # 

4 # hard-coded pathnames lor Xmu routines 

5 # 

6 ada -e -w xmu_paths_.a 

7 

8 # 

9 # the Xmu package itself 

10 # 

11 ada -e -w xmu_.a 

12 ada -e -w xmu.a 

13 

14 ada -e -u xt_float_r_.a 

15 ada -e -w xt_orientat lon_r_.a 

16 ada -e -w xt_edge_r_.a 

17 ada -e -u xt_justify_r_.a 

18 ada -e -u selection_array_r_.a 

19 ada -e -w mask_r_.a 

20 ada -e -h xt_text_edit_type_r_.a 

21 ada -e -w xmu_cvt_string_to_Hidget_.a 

22 

23 # 

24 # subunits of Xmu 

25 # 

26 ada -e -h xmu_cvt_string_to_cursorSU.a 

27 

28 # 

29 # other bodies 

30 * 

31 ada -e -w xmu_cvt_string_to_widget.a 

32 ada -e -w xt_orientation_r.a 

33 ada -e -w xt_edge_r.a 

34 ada -e -w xt_justify_r.a 

35 ada -e -w mask.r.a 

36 ada -e -u xt_text_edit_type_r.a 

37 

38 # 

39 # new atoms and atom routines for Xmu 

40 # 

41 ada -e -w xmu_atoms_.a 

42 ada -e -w xmu_atoms.a 


Page 32 






23 July 1990 


STARS-RC-01010/001/00 


B.6 Script: Widgets/vads/BuildWidgets.VADS 

1 #! /bin/csh -lx 

2 


3 

# 


4 

# compile 

Xaa GrayPixmap.c stuff 

5 

# 


6 

ada -e -a 

pixmaps_.a 

7 

ada -e -a 

pixmaps.a 

8 

ada -e -a 

create_tile_.a 

9 



10 

# 


11 

# compile 

misc specs 

12 

# 


13 

ada -e -w 

xa_constants_.a 

14 

ada -e -a 

xa_traversal_procs_.a 

15 

ada -e -a 

xa_res_convert_.a 

16 



17 

# 


18 

# compile 

public and private specs 

19 



20 

ada -e -a 

simple_public_.a 

21 

ada -e -a 

simple_private_.a 

22 



23 

ada -e -a 

scroll_public_.a 

24 

ada -e -a 

scroll_private_.a 

25 



26 

ada -e -a 

label_public_.a 

27 

ada -e -a 

label_private_- a 

28 



29 

ada -e -a 

command_public_.a 

30 

ada -e -a 

command_private_.a 

31 



32 

ada -e -a 

form_public_.a 

33 

ada -e -a 

form_private_. a 

34 



35 

ada -e -a 

vieaport_public_.a 

36 

ada -e -a 

vieaport_private_.a 

37 



38 

ada -e -a 

xa_manager_public_.a 

39 

ada -e -a 

xa_manager_private_. a 

40 



41 

ada -e -a 

xa_bboard_public_.a 

42 

ada -e -a 

xw_bboard_private_. a 

43 




Page 33 




23 July 1990 


STARS-RC-01010/001 / 00 


44 # 

45 # compile widget bodies 

46 # 

47 ada -e -w simple_private.a 

48 ada -e -w simple_public.a 

49 ada -e -w label_public.a 

50 ada -e -w command.public.a 

51 ada -e -w scroll.public.a 

52 ada -e -w form.public.a 

53 ada -e -w viewport_public.a 

54 ada -e -w xw.manager.public.a 

55 ada -e -w xw.bboard.public.a 

56 

57 # 

58 # compile misc. bodies 

59 # 

60 ada -e -w xw_res_convert.a 

61 ada -e -w create_tile.a 

62 ada -e -w xw_traversal_procs.a 

63 

64 

6f # 

66 # compile global and support packages for text widgets 

67 # 

68 ada -w -e text_widget_globals_.a 

69 ada -w -e text.widget.support..a 

70 ada -w -e text_widget_support.a 

71 

72 # 

73 # compile data sources and sinks for the text widgets 

74 # 

75 ada -w -e text_sources_.a 

76 ada -w -e text.sources.a 

77 ada -w -e text_ascii_sink_.a 

78 

79 # 

80 # compile the public and private specs for all the 

81 £ text widgets 

82 # 

83 ada -w -e text_public_.a 

84 ada -w -e text.private..a 

85 

86 ada -w -e ascii.string.public..a 

87 ada -w -e ascii.string.private..a 

88 


Page 34 









23 July 1990 


STARS-RC-01010/001/00 


89 ada -w -e ascii_disk_public_.a 

90 ada -w -e ascii_disk_private_.a 

91 

92 ada -w -e dialog_public_.a 

93 ada -v -e dialog_private_. a 

94 

95 # 

96 # some shared routines and other bodies 

97 # 

98 ada -w -e text_edit_semi_private_routines_.a 

99 ada -w -e text.public.a 

100 ada -w -e text.localSU.a 

101 ada -w -e text_check_resize_or_overilowSU2.a 

102 ada -w -e text_replace_textSU2.a 

103 ada -w -e text_insert_charSU2.a 

104 ada -w -e text_edit_semi_private_routines.a 

105 ada -w -e text_ascii_sink.a 

106 

107 # 

108 # local resource type instances 

109 # 

110 ada -» -e xt_edit_configuration_r_.a 

111 
112 # 

113 # widget bodies 

114 # 

115 ada -w -e ascii.string.public.a 

116 ada -w -e ascii_disk_public.a 

117 ada -w -e dialog.public.a 

118 


Page 35 






23 July 1990 


STARS-RC-01010/001/00 


B.7 Script: Tests/vads/BuildTests.VADS 

1 #! /bin/csh -xf 

2 # 

3 # Compile and link the test programs 

4 # (XLIB and CLIB are installation dependent variables which can 

5 # be found in the top level make script of this delivery) 

6 # 

7 

8 ada -e -w test_shell.a 

9 a.Id test_shell -o test_shell $XLIB $CLIB -lresolv 

10 

11 ada -e -w test.label.a 

12 a.Id test_label -o test_label $XLIB $CLIB -lresolv 

13 

14 ada -e -w test_label_callbacks.a 

15 a.Id test_label_callbacks -o test_label_callbacks $XLIB $CLIB -lresolv 

16 

17 ada -e -w test_label_events.a 

18 a.Id test_label_events -o test_label_events $XLIB $CLIB -lresolv 

19 

20 ada -e -w read.trans.a 

21 ada -e -w test_command.a 

22 a.Id test_command -o test_.com $XLIB $CLIB -lresolv 

23 

24 ada -e -w test.scrollbar.a 

25 a.Id test.scroll -o ascroll $XLIB $CLIB -lresolv 

26 

27 ada -e -w test.bb.a 

28 a.Id test.bb -o test.bb $XLIB $CLIB -lresolv 

29 

30 ada -e -w test.vw.a 

31 a.Id test.vw -o test.vw $XLIB $CLIB -lresolv 

32 

33 ada -e -w test_ascii_string_text.a 

34 a.Id test_ascii_string_text -o test.text $XLIB $CLIB -lresolv 

35 

36 ada -e -w test_ascii_disk_text.a 

37 a.Id te8t_ascii_disk_text -o test_disk_text $XLIB $CLIB -lresolv 

38 

39 ada -e -w test.dialog.a 

40 a.Id test.dialog -o test.dialog $XLIB $CLIB -lresolv 

41 


Page 36 




23 July 1990 


STARS-RC-01010/001/00 


B.8 Script: Demo/vads/BuildDemo.VADS 


1 

2 

3 

4 

5 

6 

7 

8 
9 

10 

11 

12 

13 

14 

15 

16 
17 


#! /bin/csh -fx 

# 

# Demo application 

« 

ada -e -» demo_except_.a 
ada -e -s demo_callbacks_.a 
ada -e -w deoo_lines_.a 
ada -e -w demo_menu_.a 

ada -e -w demo_callbacks.a 
ada -e -w demo_lines.a 
ada -e -w demo_menu.a 

ada -e -» demo.a 

a.Id demo -o demo_ada $XLIB $CLIB -lresolv 



Pag^ 37 






23 July 1990 


STARS-RC-01010/001/00 


C Appendix C: TeleSoft Build Scripts 
C.l Script: BuildAdaXt.TG2 

1 #! /bin/csh -x 

2 # 

3 # Define installation-dependent variables 

4 # 

5 source BuildAdaXt.var 

6 # 

7 # Copy source files into the TeleSoft configuration 

8 # 

9 cp $Xlib/telesoft/* $Xlib 

10 cp $Xt/telesoft/* $Xt 

11 cp $Xmu/vads/* $Xt 

12 cp $Widgets/telesoft/* $Widgets 

13 cp $Tests/telesof t/* $Tests 

14 cp $Demo/telesoft/* $Demo 

15 # 

16 # Build Ada libraries in each sub-directory 

17 # 

18 cd $Xlib 

19 $TELEGEH2/bin/acr -f -m 32000 xlib 

20 cd $Xt 

21 $TELEGEH2/bin/acr -f -m 32000 xt 

22 $TELEGEN2/bin/acr -f -m 32000 bodies 

23 $TELEGEH2/bin/acr -f -m 32000 seconds 

24 cd $Uidgets 

25 $TELEGEH2/bin/acr -f -m 32000 widgets 

26 cd $Tests 

27 $TELEGEN2/bin/acr -f -m 32000 test 

28 cd $Demo 

29 $TELEGEH2/bin/acr -f -m 32000 demo 

30 # 

31 # Establish dependencies 

32 # 

33 # Library dependencies are defined in text file "liblst.alb". 

34 # Each code subdirectory contains a "liblst.alb" file that must be edited 

35 # if the dependencies change. 

36 # 

37 # Compile the code 

38 n 

39 

40 cd $C 

41 make >t Makefile.log # Build the C utilities 


Page 38 











23 July 1990 


STARS-RC-01010/001/00 


42 

43 cd $Xlib 

44 BuildXlib.TG2 >4 BuildXlib.log # Build the Ada/X bindings 

45 

46 cd $Xt 

47 BuildXt.TG2 >4 BuildXt.log # Build the Xt intrinsics 

48 # (also builds the Xmu utilities) 

49 

50 cd $Widgets 

51 BuildWidgets.TG2 >4 BuildWidgets.log # Build the Widget set 

52 

53 cd $Tests 

54 BuildTests.TG2 >4 BuildTests.log # Build the test programs 

55 

56 cd $Demo 

57 BuildDemo.TG2 >4 make_Demo.log # Build the demo application 


Page 39 









23 July 1990 


STARS-RC-01010/001/00 


C.2 Script: Xlib/telesoft/BuildXlib.TG2 

1 #! /bin/csh -fx 

2 

3 # XLIB, CLIB, TELEGEN2, and TADA are installation dependent variables 

4 # and their values casn be found in the top level make script for this 

5 # delivery 

6 

7 # 

8 # Compile the system and compiler dependent packages 

9 # 

10 $TADA -v -d system_environment_.a 

11 $TADA -v -d compiler_dependent_.a 

12 $TADA -v -d os_dependent_.a 

13 $TADA -v -d compiler_dependent.a 

14 $TADA -v -d string_encaps_.a 

15 $TADA -v -d system_environment.a 

16 $TADA -v -d string.encaps.a 

17 

18 # 

19 # Compile the Xlib bindings specification 

20 # 

21 $TADA -v -d x_lib_.a 

22 

23 # 

24 # Compile the interface bindings to C Xlib code 

25 # 

26 $TADA -v -d x_int_.a 

27 

28 # 

29 # Compile the X key bindings 

30 # 

31 $TADA -v -d x_keysyms_.a 

32 

33 # 

34 # Compile the Xlib bindings body 

35 » 

36 STADA -v -d x.lib.a 

37 

38 # 

39 # Compile the subunits to Xlib bindings body 

40 # 

41 $TADA -v -d x.resmgmt.a 

42 $TADA -v -d x.fonts.a 

43 $TADA -v -d x.graphic.a 


Page 40 










23 July 1990 


STARS-RC-01010/001/00 


44 $TADA -v -d 

45 $TADA -v -d 

46 $TADA -v -d 

47 $TADA -v -d 


x_atoms.a 
x_colors.a 
x_cursors. a 
x_cutpaste.a 


48 # package body Events is now a part ol x_lib.a 


49 # $TADA -v -d x_events.a 

50 $TADA -v -d x_keyboard.a 

51 $TADA -v -d 

52 $TADA -v -d 

53 $TADA -v -d 

54 $TADA -v -d 

55 

56 $TADA -v -d 

57 

58 # 

59 # Compile and link the Xlib "hello_world" 

60 # 

61 $TADA -v -d hw.a 

62 


x_regions.a 
x_win_mgr.a 
fromcstringSU.a 
opendispSU.a 

get_window.a 


test program 


63 $TELEGEN2/bin/ald -p "$XLIB $CLIB -lresolv" hello_world 

64 


Page 41 











23 July 1990 


STARS-RC-01010/001/00 


C.3 Script: Xt/telesoft/BuildXt.TG2 

1 #! /bin/csh -fx 

2 

3 # XLIB, CLIB, TELEGEN2, and TADA are installation dependent variables 

4 # and their values cam be found in the top level make script for this 

5 # delivery 

6 

7 # 

8 # utility packages 

9 # 


10 

$TADA -v -d 

installation..a 

11 

$TADA -v -d 

realloc.array..a 

12 

$TADA -v -d 

realloc.array.a 

13 

$TADA -v -d 

stringops_.a 

14 

$TADA -v -d 

stringops.a 

15 

16 

STADA -v -d 

cursor_cache_.a 

17 

« 


18 

# main specifications for the Intrinsics 

19 

# 


20 

$TADA -v -d 

renamed_xlib_types_.a 

21 

$TADA -v -d 

dispatch.interfaces..a 

22 

STADA -V -d 

device..a 

23 

$TADA -v -d 

device.a 

24 

$TADA -v -d 

intrinsics..a 

25 

$TADA -v -d 

xt.stringdefs_.a 

26 

STADA -v -d 

external.support.code..a 

27 

STADA -v -d 

tm.constants..a 

28 

STADA -v -d 

resourceP..a 

29 

STADA -v -d 

resource.generic.int_.a 

30 

STADA -v -d 

resource.generic.int.a 

31 

STADA -v -d 

xt.resource.type.instances..a 

32 

STADA -v -d 

xrm.get.resources..a 

33 

34 

STADA -v -d 

xrm.get.resources.a 

35 

# 


36 

# built-in widget type specifications 

37 

# 


38 

STADA -v -d 

object.public..a 

39 

STADA -v -d 

obj ect.private..a 

40 

STADA -v -d 

rect.obj.public..a 

41 

STADA -v -d 

rect.obj.private..a 

42 

STADA -v -d 

window.obj.public..a 

43 

STADA -v -d 

window.obj.private..a 


Page 42 











23 July 1990 


STARS-RC-01010/001/00 


44 $TADA -v -d comp_obj_public_.a 

45 $TADA -v -d comp_obj_private_.a 

46 $TADA -v -d core.public..a 

47 $TADA -v -d core.private..a 

48 $TADA -v -d composite.public..a 

49 $TADA -v -d composite.private..a 

50 $TADA -v -d constraint_public_.a 

51 $TADA -v -d constraint.private..a 

52 $TADA -v -d shell.public..a 

53 $TADA -v -d shell.private..a 


56 # Compile the main Intrinsics body 

57 # 

58 $TADA -1 bodies.alb -v -d intrinsics.a 

59 

60 # 

61 # intrinsics body subunits level 1 

62 # 

63 $TADA -1 bodies.alb -v -d xt.utilitiesSU.a 

64 $TADA -1 bodies.alb -v -d xt.translation.managementSU.a 

65 $TADA -1 bodies.alb -v -d type_conversionsSU.a 

66 $TADA -1 bodies.alb -v -d xt.callbacksSU.a 

67 $TADA -1 bodies.alb -v -d xt.class.managementSU.a 

68 $TADA -1 bodies.alb -v -d xt.composite.managementSU.a 

69 $TADA -1 bodies.alb -v -d xt_event_managementSU.a 

70 $TADA -1 bodies.alb -v -d xt.geometry.managementSU.a 

71 $TADA -1 bodies.alb -v -d xt.initializersSU.a 

72 $TADA -1 bodies.alb -v -d xt.selection.managementSU.a 

73 $TADA -1 bodies.alb -v -d convertSU.a 

74 $TADA -1 bodies.alb -v -d xt.resource.managementSU.a 

75 $TADA -1 bodies.alb -v -d resourceP.a 

76 $TADA -1 bodies.alb -v -d xt.instance.managementSU.a 

77 $TADA -1 bodies.alb -v -d xt.popup.managementSU.a 

78 $TADA -1 bodies.alb -v -d xt.type.opsSU.a 

79 

80 # 

81 # Compile the Xmu utilities 

82 # 

83 # hard-coded pathnames for Xmu routines 

84 # 

85 $TADA -1 bodies.alb -v -d xmu_paths_.a 

86 # 

87 # the Xmu package itself 

88 # 


Page 43 











23 July 1990 


STARS-RC-01010/001/00 


89 STADA -1 bodies.alb -v -d xmu_.a 

90 $TADA -1 bodies.alb -v -d xmu. a 

91 # 

92 # public resource type specifications 

93 # 

94 STADA -1 bodies.alb -v -d xt_float_r_.a 

95 STADA -1 bodies.alb -v -d xt_orientation_r_.a 

96 STADA -1 bodies.alb -v -d xt_edge_r_.a 

97 $TADA -1 bodies.alb -v -d xt_justify_r_.a 

98 $TADA -1 bodies.alb -v -d selection_array_r_.a 

99 $TADA -1 bodies.alb -v -d mask.r..a 

100 $TADA -1 bodies.alb -v -d xt_text_edit_type_r_.a 

101 # 

102 STADA -1 bodies.alb -v -d xmu_cvt_string_to_widget_.a 

103 # 

104 # subunits of Xmu 

105 # 

106 STADA -1 bodies.alb -v -d xmu.cvt.string.to.cursorSU.a 

107 # 

108 # other bodies 

109 # 

110 STADA -1 bodies.alb -v -d xmu_cvt_string_to_widget.a 

111 STADA -1 bodies.alb -v -d xt.orientation.r.a 

112 STADA -1 bodies.alb -v -d xt_edge_r.a 

113 STADA -1 bodies.alb -v -d xt_justify_r.a 

114 STADA -1 bodies.alb -v -d mask.r.a 

115 STADA -1 bodies.alb -v -d xt_text_edit_type_r.a 

116 # 

117 # new atoms and atom routines for Xmu 

118 # 

119 STADA -1 bodies.alb -v -d xmu_atoms_.a 

120 STADA -1 bodies.alb -v -d xmu_atoras.a 

121 

122 # 

123 # Compile the built-in widget public bodies 

124 # 

125 STADA -1 bodies.alb -v -d object.public.a 

126 STADA -1 bodies.alb -v -d rect.obj.public.a 

127 STADA -1 bodies.alb -v -d window.obj.public.a 

128 STADA -1 bodies.alb -v -d comp.obj.public.a 

129 STADA -1 bodies.alb -v -d core.public.a 

130 STADA -1 bodies.alb -v -d composite.public.a 

131 STADA -1 bodies.alb -v -d constraint.public.a 

132 STADA -1 bodies.alb -v -d shell.public.a 

133 STADA -1 bodies.alb -v -d shell.internalsSU.a 


Page 44 






23 July 1990 


STARS-RC-01010/001/00 


134 

135 # compile generic bodies before any possible instantiations 

136 # (These would all be separate sub-units except TeleSoft has a bug about 

137 # elaborating generic bodies in sub-units, therefore, they are all 

138 # collapsed into the intrinsics package body :-) 

139 # $TADA -1 seconds.alb -v -d xt_accept_focus_procs.SU2.a 

140 # $TADA -1 seconds.alb -v -d xt_action_procs.SU2.a 

141 # STADA -1 seconds.alb -v -d xt_almost_procs.SU2.a 

142 # STADA -1 seconds.alb -v -d xt_args_func.SU2.a 

143 # $TADA -1 seconds.alb -v -d xt_args_procs.SU2.a 

144 # $TADA -1 seconds.alb -v -d xt_async_handler.SU2.a 

145 # $TADA -1 seconds.alb -v -d xt_callback_procs.SU2.a 

146 # $TADA -1 seconds.alb -v -d xt_case_procs.SU2.a 

147 # $TADA -1 seconds.alb -v -d xt_convert_selection_procs.SU2.a 

148 # STADA -1 seconds.alb -v -d xt_converter_procs.SU2.a 

149 # $TADA -1 seconds.alb -v -d xt_create_popup_child_procs.SU2.a 

150 # $TADA -1 seconds.alb -v -d xt_error_handler_procs.SU2.a 

151 # $TADA -1 seconds.alb -v -d xt_error_msg_handler_procs.SU2.a 

152 # STADA -1 seconds.alb -v -d xt_event_handler_procs.SU2.a 

153 # STADA -1 seconds.alb -v -d xt_expose_procs.SU2.a 

154 # STADA -1 seconds.alb -v -d xt_geometry_handler_procs.SU2.a 

155 # $TADA -1 seconds.alb -v -d xt_init_procs.SU2.a 

156 # STADA -1 seconds.alb -v -d xt_input_callback_procs.SU2.a 

157 # STADA -1 seconds.alb -v -d xt_key_procs.SU2.a 

158 # STADA -1 seconds.alb -v -d xt_lose_selection_procs.SU2.a 

159 # STADA -1 seconds.alb -v -d xt_order_procs.SU2.a 

160 # STADA -1 seconds.alb -v -d xt_procs.SU2.a 

161 # STADA -1 seconds.alb -v -d xt_realize_procs.SU2.a 

162 # STADA -1 seconds.alb -v -d xt_resource_default_procs.SU2.a 

163 # STADA -1 seconds.alb -v -d xt_selection_callback_procs.SU2.a 

164 # STADA -1 seconds.alb -v -d xt_selection_done_procs.SU2.a 

165 # STADA -1 seconds.alb -v -d xt_set_value_func.SU2.a 

166 # STADA -1 seconds.alb -v -d xt_string_procs.SU2.a 

167 # STADA -1 seconds.alb -v -d xt_timer_callback_procs.SU2.a 

168 # STADA -1 seconds.alb -v -d xt_widget_class_procs,SU2.a 

169 # STADA -1 seconds.alb -v -d xt_widget_procs.SU2.a 

170 # STADA -1 seconds.alb -v -d xt_work_procs.SU2.a 

171 

172 # — subunits level 2 

173 STADA -1 seconds.alb -v -d xt_keycode_to_keysymSU2.a 

174 STADA -1 seconds.alb -v -d xt_build_keysym_tableSU2.a 

175 STADA -1 seconds.alb -v -d parserSU2.a 

176 STADA -1 seconds.alb -v -d int_tm_initSU2.a 

177 STADA -1 seconds.alb -v -d tm_eventsSU2.a 

178 STADA -1 seconds.alb -v -d tm_late_bindingsSU2.a 


Page 45 









23 July 1990 

179 $TADA -1 seconds.alb -v -d 

180 $TADA -1 seconds.alb -v -d 

181 $TADA -1 seconds.alb -v -d 

182 $TADA -1 seconds.alb -v -d 

183 $TADA -1 seconds.alb -v -d 

184 

185 $TADA -1 seconds.alb -v -d 

186 $TADA -1 seconds.alb -v -d 


tm_stateSU2.a 
get_resourcesSU2.a 
event_mgt_localSU2.a 
selection_mgt_localSU2.a 
selection_procedure_types.SU2.a 

trans_mgt_semi_privateSU2.a 
compute_late_bindingsSU3.a 


STARS-RC-01010/001/00 


Page 46 







23 July 1990 


STARS-RC-01010/001/00 


C.4 Script: Widgets/telesoft/BuildWidgets.TG2 

1 #! /bin/csh -fx 

2 

3 # CLIB, XLIB, TELEGEN2, and TADA axe installation specific variables 

4 # and their values can be found in the top level make script of 

5 # this delivery 

6 

7 # 


8 # compile Xaw GrayPixmap.c stuff 

9 # 


10 

$TADA -v -d 

pixmaps^.a 

11 

$TADA -v -d 

pixraaps.a 

12 

$TADA -v -d 

create_tile_.a 

13 



14 

# 


15 

# compile misc specs 

16 

# 


17 

$TADA -v -d 

xw_constants_.a 

18 

$TADA -v -d 

XH_traverssil_procs_. a 

19 

$TADA -v -d 

xw_traversal_procs.a 

20 

$TADA -v -d 

xu_res_convert_.a 

21 



22 



23 

» 


24 

# compile public and private specs 

25 

« 


26 

$TADA -v -d 

simple_public_.a 

27 

$TADA -v -d 

simple_private_.a 

28 



29 

$TADA -v -d 

scroll_public_.a 

30 

$TADA -v -d 

scroll_private_.a 

31 



32 

$TADA -v -d 

label_public_.a 

33 

$TADA -v -d 

label_private_.a 

34 



35 

$TADA -v -d 

command_public_.a 

36 

$TADA -v -d 

command_private_.a 

37 



38 

$TADA -v -d 

form_public_.a 

39 

$TADA -v -d 

form_private_.a 

40 



41 

$TADA -v -d 

viewport_public_.a 

42 

$TADA -v -d 

viewport.private..a 

43 




Page 47 






23 July 1990 


STARS-RC-01010/001/00 


44 $TADA -v -d xw.manager.public..a 

45 $TADA -v -d xw_manager_private_.a 

46 

47 $TADA -v -d xw_bboard_public_.a 

48 $TADA -v -d xw_bboard_private_.a 

49 

50 # 

51 # compile widget bodies 

52 # 

53 $TADA -v -d simple.private.a 

54 $TADA -v -d simple_public.a 

55 $TADA -v -d label_public.a 

56 $TADA -v -d command.public.a 

57 $TADA -v -d scroll_public.a 

58 $TADA -v -d form.public.a 

59 $TADA -v -d viewport.public.a 

60 $TADA -v -d xw_manager_public.a 

61 $TADA -v -d xw_bboard_public.a 

62 

63 * 

64 # compile misc. bodies 

65 # 

66 $TADA -v -d xw_res_conv -t.a 

67 $TADA -v -d create.tile.a 

68 #$TADA -v -d xw_traversal_procs.a MOVED UP TO BELOW SPEC COMPILE 

69 

70 » 

71 # compile global and support packages Tor text widgets 

72 # 

73 $TADA -v -d text_widget_globals_.a 

74 $TADA -v -d text_widget_support_.a 

75 $TADA -v -d text_widget_support.a 

76 

77 # 

78 # compile data sources and sinks for the text widgets 

79 # 

80 $TADA -v -d text_sources_.a 

81 $TADA -v -d text.sources.a 

82 $TADA -v -d text_ascii_sink_.a 

83 

84 * 

85 # compile the public and private specs for all the 

86 # text widgets 

87 # 

88 $TADA -v -d text_public_.a 


Page 48 










23 July 1990 


STARS-RC-01010/001/00 


89 $TADA -v -d text.private..a 

90 

91 $TADA -v -d ascii.string.public..a 

92 STADA -v -d ascii.string.private..a 

93 

94 $TADA -v -d ascii.disk.public..a 

95 STADA -v -d ascii.disk.private..a 

96 

97 $TADA -v -d dialog_public_.a 

98 $TADA -v -d dialog.private..a 

99 

100 # 

101 # some shared routines and other bodies 

102 * 

103 STADA -v -d text.edit.semi.private.routines..a 

104 $TADA -v -d text.public.a 

105 $TADA -v -d text.localSU.a 

106 STADA -v -d text_check_resi 2 e_or_overf1 ohSU 2.a 

107 STADA -v -d text_replace_textSU2.a 

108 STADA -v -d text_insert_charSU2.a 

109 STADA -v -d text.edit.semi.private.routines.a 

110 STADA -v -d text.ascii.sink.a 

111 

112 # 

113 # local resource type instances 

114 # 

115 STADA -v -d xt.edit_conTiguration.r_.a 

116 

117 # 

118 # widget bodies 

119 # 

120 STADA -v -d ascii.string.public.a 

121 STADA -v -d ascii.disk.public.a 

122 STADA -v -d dialog.public.a 

123 

124 


Page 49 





23 July 1990 


STARS-RC-01010/001/00 


C.5 Script: Tests/telesoft/BuildTests.TG2 

1 #! /bin/csh -xf 

2 

3 # XLIB, CLIB, TELEGEN2, and TADA are installation dependent variables 

4 # and their values can be found in the top level make script of 

5 # this delivery. 

6 

7 $TADA -v -d test_shell.a 

8 $TELEGEN2/bin/ald -o test.shell -p "$XLIB $CLIB -lresolv" test_shell 

9 

10 fTADA -v -d test_label.a 

11 $TELEGEN2/bin/ald -o test.label -p "$XLIB $CLIB -lresolv" test_label 

12 

13 $TADA -v -d test.label.callbacks.a 

14 $TELEGEN2/bin/ald -o test_label_callbacks -p "$XLIB $CLIB -lresolv" test_label_callbacks 

15 

16 $TADA -v -d test.label.events.a 

17 $TELEGEN2/bin/ald -o test_label_events -p "$XLIB $CLIB -lresolv" test_label_events 

18 

19 $TADA -v -d read_trans.a 

20 $TADA -v -d test.command.a 

21 $TELEGEH2/bin/ald -o test.command -p "$XLIB $CLIB -lresolv" test.command 

22 

23 $TADA -v -d test.scrollbar.a 

24 $TELEGEH2/bin/ald -o test.scroll -p "$XLIB $CLIB -lresolv" test.scroll 

25 

26 $TADA -v -d test.bb.a 

27 $TELEGEN2/bin/ald -o test.bb -p "$XLIB $CL1B -lresolv" test.bb 

28 

29 $TADA -v -d test.vw.a 

30 $TELEGEN2/bin/ald -o test.vv -p "$XLIB $CLIB -lresolv" test.vw 

31 

32 $TADA -v -d test_ascii_string_text.a 

33 $TELEGEK2/bin/ald -o test.text -p "$XLIB $CLIB -lresolv" test_ascii_string_text 

34 

35 $TADA -v -d test_ascii_disk_text.a 

36 $TELEGEN2/bin/ald -o test_disk_text -p "$XLIB $CLIB -lresolv" test_ascii_disk_text 

37 

38 STADA -v -d test.dialog.a 

39 $TELEGEN2/bin/ald -o test.dialog -p "$XLIB $CLIB -lresolv" test.dialog 


Page 50 








23 July 1990 


STARS-RC-01010/001/00 


C.6 Script: Demo/telesoft/BuildDemo.TG2 

1 #! /bin/csh -fx 

2 

3 # XLIB, CLIB, TELEGEN2, and TADA are installation dependent variables and 

4 # their values are in the top level make script of this delivery. 

5 

6 $TADA -vd demo_except_.a 

7 $TADA -vd demo_callbacks_.a 

8 $TADA -vd demo_lines_.a 

9 $TADA -vd demo_menu_.a 
10 

11 $TADA -vd demo_callbacks.a 

12 $TADA -vd demo_lines.a 

13 $TADA -vd demo_menu.a 

14 

15 $TADA -vd demo.a 

16 

17 $TELEGEN2/bin/ald -o demo_ada -p "$XLIB $CLIB -lresolv" demo 

18 
19 


Page 51 








