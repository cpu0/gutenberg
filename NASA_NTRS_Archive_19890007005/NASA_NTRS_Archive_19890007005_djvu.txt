N89-16376 


p 


REUSABLE SOFTWARE PARTS AND THE 
SEMI -ABSTRACT DATA TYPE 

Sanford G. Cohen 

McDonnell Douglas Astronautics Company 
P.O. Box 516 
St. Louis, Mo. 63166 

The development of reusable software parts has been an area of 
intense discussion within the software engineering community for 
many years. More recently, Ada has been promoted as having the 
facilities for developing reusable software. However, there have 
been few attempts to validate reusability concepts in practice for 
real-time embedded applications such as missile navigation, 
guidance and control. For these applications parts must not only 
be reusable, but they must also be efficient and easy to use. 

Missile guidance, navigation and control applications are noted 
for severe constraints in terms of processor size and 
computational requirements. In this paper, the author describes 
an approach for developing reusable parts for these applications 
which meet the following reusability criteria: 

1. Reusable: Capable of being used/reused in a wide 

spectrum of applications within the domain for which the 
parts were developed. 

2. Tailorable: Capable of being customized to the precise 

requirements of the using/reusing applications. 

3. Efficient: Capable of operating within an environment 

which is severely constrained in terms of both memory and 
execution cycles. 

4. Simple to Use: Capable of being effectively used by the 

average software engineer. 

5. Protected Against Misuse: Capable of detecting obvious 

misuse. 

Validating the feasibility of developing reusable parts which 
possess these characteristics is the basis of the Commom Ada 
Missile Packages Program (CAMP), an Air Force sponsored program 
under contract tot he McDonnell Douglas Astronautics Co. - St. 
Louis. Under CAMP, over 200 reusable software parts have been 
developed, including parts for navigation, Kalman Filter, signal 
processing and autopilot. This paper is an outgrowth of work done 
on that project. 


G.3.2.1 



The author presents six different methods for designing reusable 
software parts. (These methods are illustrated in the 
accompanying figure.) The author examines these methods through 
determining the impact of each method on developing a single part. 
He compares the methods against four evaluation criteria: 

1. Appropriateness of the interface 

2. Control for preventing misuse 

3. Availability of needed mathematical operators and 
functions 

4. Degree to which user's job is simplified 

Each of these criteria is essential for developing parts which can 
be used, are reusable and are sufficiently efficient for missile 
navigation, guidance and control applications. 

The author proposes the use of a generic approach, called the 
"Semi -Abstract Data Type" method, for developing reusable parts 
and provides a rationale for this selection. The semi-abstract 
data type method makes full use of Ada's generic and strong data 
typing facilities to create parts which are reusable, tailorable, 
simple to use and protected from misuse. The method achieves 
efficiency through the choice of data structures which are 
compatible with efficient algorithms and through implicit 
definition of user data structures. 


G.3.2.2 



Informal Report by the ARTEWG* 


Mike Kamrad 

Honeywell Systems and Research Center 
Minneapolis, Minnesota 

â™¦ARTEWG - Ada Run-Time Environment Working Group 

This session will provide a status report and an update on the 
ARTEWG activities. 


G.3.3.1 



