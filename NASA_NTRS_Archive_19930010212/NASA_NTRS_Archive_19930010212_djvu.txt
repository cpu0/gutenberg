N93- 1940 


1992 NASA/ASEE SUMMER FACULTY FELLOWSHIP PROGRAM 


JOHN F. KENNEDY SPACE CENTER 
UNIVERSITY OF CENTRAL FLORIDA 


AUTOMATICALLY CALIBRATING ADMITTANCES IN KATE’S 
AUTONOMOUS LAUNCH OPERATIONS MODEL 


PREPARED BY: 

ACADEMIC RANK: 

UNIVERSITY AND DEPARTMENT: 

NASA/KSC 

DIVISION: 

BRANCH: 

NASA COLLEAGUE: 

DATE: 

CONTRACT NUMBER: 


Dr. Steve Morgan 

Associate Professor 

Baylor University 
Department of Engineering 
and Computer Science 

Engineering Development 

Artificial Intelligence 

Carrie Parrish 
Peter Engrand 

August 7, 1992 

University of Central Florida 
NASA-NGT-60002 Supplement: 8 


319 


Acknowledgements 


Thank you. Bob Merchant, for all the technical guidance this summer. Your 
knowledge of today’s and tomorrow’s KATE models made the automatic 
admittance calibrator the practical tool that it is today. Thank you, collaborators 
Carrie Parrish and Peter Engrand, for helping chart my course and clear the way 
this summer administratively. Thank you especially, Carol Valdez, Kari Stiles, 
and Loren Anderson, for operating the NASA/ASEE Summer Faculty Fellowship 
Program so flawlessly. I can’t remember when I’ve enjoyed working more. 


Abstract 

This report documents a 1000-line Symbolics LISP program that 
automatically calibrates all 15 fluid admittances in KATE’s Autonomous Launch 
Operations (ALO) model. (KATE is Kennedy Space Center’s K_nowledge-based 
Autonomous Xest Engineer, a diagnosis and repair expert system created for use 
on the space shuttle’s various fluid flow systems.) As a new KATE application, 
the calibrator described here breaks new ground for KSC’s Artificial Intelligence 
Lab by allowing KATE to both control and measure the hardware she supervises. 
By automating a formerly manual process, the calibrator: 1) saves the ALO 
model builder untold amounts of labor, 2) enables quick repairs after workmen 
accidently adjust ALO’s hand valves, and 3) frees the modeler to pursue new 
KATE applications that previously were too complicated. Also reported are 
suggestions for enhancing the program: 1) to calibrate ALO’s TV cameras, pumps, 
and sensor tolerances, and 2) to calibrate devices in other KATE models, such as 
the shuttle's LOX and Environment Control System (ECS). 


Summary 

Last summer, this author gather several of KATE’s model builders’ tools 
into a Model Verification Toolkit. Coding the design of one of those tools, an 
automatic admittance calibrator for KATE’s Autonomous Launch Operations 
(ALO) model, became the topic of this summer’s project. A two-week survey of 
ALO’s knowledge bases revealed the 15 admittances to be calibrated. During the 
next two weeks, the calibrator’s designer manually adjusted valves and pump 
speeds of the ALO model, recorded its pressures with a pencil, and solved 
admittance equations off-line, until he discovered the best procedure for 
measuring every admittance. The ensuing four-week coding and testing effort 
produced the automated admittance calibrator program attached as Appendix A. 
Its typical output appears as Appendix B. This report is its documentation. The 
KATE modeler who first proposed this summer project claims he is pleased to 
have it. 


320 



Table Of Contents 


I BACKGROUND 

1.1 KATE 

1.2 KATE’s AL0-H20 Model 

1.3 Building KATE’s Models 

1.4 KATE’s Model Verification Tools 

II METHODS 

2.1 KATE’s Fluid-Flow Admittance Equation 

2.2 Statistical Averaging 

2.3 ALO’s “Readily Apparent” Admittances 

2.4 Tank Pressurization 

2.5 Infering Gas Flow Rate 

2.6 Motor Control Valve Transfer Function 

2.7 Coding The Admittance Calibrator 

III RESULTS 

3.1 ALO s Traditional (Standard) Vs. Automatically Calibrated Admittances 

3.2 Tank Pressurization And Depressurization Admittances 

3.3 Pump Circuit Admittances 

3.4 Vehicle Tank Circuits 

3.5 Nozzle And Bleed Admittances 

3.6 Error Summary 

IV CONCLUSIONS 

4.1 Enhanced Modeler Productivity 

4.2 Clarified ALO Model 

4.3 KATE’s Philosophical Advancement 

V RECOMMENDATIONS 

5.1 ALO’s Future 

5.2 Automatically Calibrating ALO’s Cameras 

5.3 Automatically Calibrating ALO’s Pumps 

5.4 Calibrating Sensor Tolerances 

APPENDIX A AUTOMATED ADMITTANCE CALIBRATOR PROGRAM LISTING 

APPENDIX B CALIBRATOR OUTPUT LISTING 

REFERENCES 


321 


LIST OF ILLUSTRATIONS 


Figure 


Title 


1 - 1 KATE’S AL0-H20 Model Hardware 

1- 2 ALO User’s Terminal Overview Screen 

2- 1 Energy Conserved By Fluid Flowing In A Pipe |2). 

2-2 ALO’s “Readily Apparent” Fluid Flow Admittances. 


LIST OF TABLES 


Table 


Title 


2-1 

2-2 

3-1 

5-1 

5-2 

5-3 


ALO’s “Readily Apparent” Admittances 
ALO’s Admittance Measurement Environments 
The Answers 

TV Camera Calibration Procedure 

Pump Calibration Procedure 

Sensor Tolerances Calibration Procedure 


322 



I 

BACKGROUND 


1.1 KATE 

Kennedy Space Center’s Knowledge-based Autonomous Test Engineer 
(KATE) is an artificially-intelligent diagnosis and repair expert system. KATE 
oversees the operation of fluid flow systems like that pictured in Figure 1-1. 
Guided by knowledge of admittances in the system hardware, KATE predicts 
flows from actual pressure measurements, and vice versa. When her predictions 
differ significantly from actual measurements, she uses something like fault tree 
analysis to isolate the error to a single failed device. KATE’s Autonomous Launch 
Operations (ALO) model even swaps out the failed component for a redundant 
one to keep a simulated launch on schedule. Others of KATE’s models include 
LOX, a very detailed model of the shuttle’s liquid oxygen tanking operations, and 
the Environmental Control System (ECS), a model of the shuttle crew’s breathing 
air processing. 

1.2 KATE’s AL0-H20 Model 

A photograph of KATE’s AL0-H20 hardware model appears in Figure 1-1. 
A hardware scale model of the shuttle’s oxygen tanking operations, it substitutes 
cryogenic liquid oxygen with water and pressurized nitrogen gas for greater 
safety. A computer-aided design rendering of this hardware (see Figure 1-2) 
serves as KATE’s ALO knowledge base. It shows connections of all significant 
devices along with their current operating conditions. Unfortunately, the fluid 
flow components’ 15 admittances are hidden from view inside the model’s 
software, since these do not correspond one-to-one to the 79 individual 
illustrated devices. Meaningless details such as pipe dimensions and tees are 
omitted entirely from the model for simplicity. 

1.3 Building KATE’s Models 

I 

KATE’s model builders are busy people. Creating a KATE model like ALO is 
first an exercise in computer-aided design (CAD). But CAD models seldom 

include the functional detail that KATE requires for error diagnosis. 
Furthermore, KATE is written in LISP, and CAD information must be 
painstakingly reformatted as knowledge-base frames. These frames amount to 
upwards of 15,000 lines of LISP code even for the simple ALO model shown in 
Figure 1-2. Obscure interactions among knowledge base elements consume 
considerable debugging time during the never-ending development of ever more 
complicated expert systems. 







325 


Figure 1-2. ALO User’s Terminal Overview Screen 











1.4 KATE’s Model Verification Tools 


KATE’s modelers frequently create little blocks of LISP code just to assist 
them in their efforts. In the summer of 1991, this author gathered several of 
these into a Model Verification Toolkit [lj. A linear regression algorithm, which 
fits straight lines to random model measurements in a least-squares sense, was 
one of the first model verification tools. Recently Boeing personnel have added a 
Knowledge Base Editor, which makes encoding CAD device data into KATE’s 
frames much easier. Additional tools were proposed, including a program to 
automatically calibrate the ALO model’s 15 admittances. That program became 
this summer s project. The toolkit is already saving modelers precious time and 
enabling them to apply KATE to more complicated and more powerful systems. 



1 1 

METHODS 


2.1 KATE’s Fluid-Flow Admittance Equation 

KATE’s admittance equation evolves from the law of energy conservation, 
which equates the potential energy of a pressure head across a pipe to the 
kinetic energy lost by fluid flowing against pipe friction. (See Figure 2-1 below.) 


T 


T 

h L 


r~ 

A= k d 2 / 4 



V = Q / A 


Figure 2-1. Energy Conserved By Fluid Flowing In A Pipe f 2 ) 

Darcy’s equation [2] restates this basic law in terms of pipe dimensions: 

h L = f 1 V 2 / 2 d g, 

where h l is pressure head in feet, 
f is the dimensionless pipe friction factor, 

1 and d are pipe length and diameter in feet, 

V is mean fluid velocity in feet/second, 

and the gravitation constant, g, is 32.2 feet/sec 2 . 

Knowing that the specific weight of water is 62.37 pounds/foot 3 at 60° F, 
we can convert the head, hi , to a pressure drop, AP, in psig: 

h L = AP (144 in 2 /ft 2 ) / (62.37 pounds/foot 3 ) = 2.309 AP. 

Recognizing that fluid flow rate, Q, is the product of mean velocity, V, and pipe 
area, n d 2 / 4, we can rewrite Darcy’s formula as the ratio of flow rate and the 
square root of pressure drop: 

V / Vfil = V 2 g d / f 1 = Q (4 / n d 2 ) / V2.309 AP. 


327 


KATE lumps all of these pipe constants into one and calls them “admittance,” 


Aj = (n d2 / 4) <~2 g d 2.309 /TT 

= Q / VAP. (2.1 ) 

The dimensions of admittance are ft 3 -inches/minute-Vpound*. Instead of 
obtaining the admittance of a complicated pipe circuit from many length and 
diameter measurements, KATE finds it more convenient to measure flow rate 
and pressure drop and to solve equation 2.1 above. 

2.2 Statistical Averaging 

Actually, pressures and flows are measured at many pump speeds, and the 
several admittances are statistically averaged to reduce measurement noise. 
The average value (i.e., mean) of a sampled population is their sum divided by 
the number of samples taken. A small standard deviation (i.e., the root-mean- 
square of the samples’ distances from their mean) may be regarded as a figure 
of merit on the random sampling process. When sampling from a normal, 
Gaussian population, the user can be assured that 95% of his samples will fall 
within ±1 standard deviation (s.d.) of the mean. An excessive admittance s.d. 
(say 20% larger than the mean or more) warns of unreliable pressure or flow 
measurements. In such cases, the calibration should be done over. 

2.3 ALO’s “Readily Apparent” Admittances 

Bob Merchant’s April 1, 1992 Memo [3] details the proposal for ALO’s 
automatic admittance calibrator. Only those “readily apparent” admittances 
carrying measurable flows and bracketed by measurable pressures are to be 
calibrated. Other admittances may be neglected, since they are of no use to 
KATE in predicting pressures and flows during failure diagnoses. The 15 
admittances that meet this readily apparent” definition are illustrated in an 
electronic analog of ALO in Figure 2-2. Those who are unfamiliar with the ALO 
model can easily locate traditional admittance values in ALO’s knowledge base 
by refering to the right-hand two columns of Table 2-1. 

2.4 Tank Pressurization 

When the ALO model pressurizes (or depressurizes) the storage and 
vehicle water tanks, gas flow rate is not measured. But flow can be inferred 
from measured pressures of the tanks and their gas supplies (or vents) |3|, Tank 
pressures rise exponentially toward the supply pressure (or fall toward 
atmospheric pressure) asymptotically with time. According to the Gas Law, the 
amount of gas in a tank varies in proportion to its pressure. Thus, the time 
dependent amount of gas in either of ALO’s tanks (in cubic feet) is: 


328 


ff 1 07_admlt 




vu; 


_^ a yy 


flnaU 




ffl08_adm It/'S, 

flll_ 

circuits 

admit 

bleed- 

admit 

nozzle- vt_ vent 
admit -admit 

vt-up_admJt 


H replenlsh- 
circuit- 



5VI09 \ 5VI 10 X SV 1 1 3 




5V1 14,5 


4- PX 1 09310, 

— 70 




bleed nozzle vent vehicle GN2 

tank supply 


RPM 101 , 2 /^\ 5 V 1 04,5 


suction_lfne_admlt 


HV 1 06,7 


HV105 pump_to_4_way_admlt 
p (\ 15J5 


st_up_admit 

^ j 

5V 1 0 1 ,2 


PX 1 05_to_PX 1 06-admlt 


sTV 1 04 

rF ioi 


*> 0 * 2 , 14 - S T IQ] f (HV ' 04 ' 

Dlv 1 0/1.5 — — L Ul SV106 

y — 30 248 l 

T PS ' 33 S st_vent_adm1t 


reel rcu 1 at I on-adm 1 1 

(HV 1 04, SV 1 03, FCV101 ) 


transfer_ltne_adm 1 t 

(FCV103, PIPE) 


GN2 storage vent 

supply tank 


Figure 2-2. ALO's "Readily Apparent" Fluid Flow Admittances: 
a) ground level pump circuit, b) vehicle tank circuit 20-feet ud 


Table 2-1 

ALO’s “Readily Apparent” Admittances 


— *> 
T3 J* 
u ^ 

E— > 


n oo m n 

M ^ (N IT, 


OC IT) * 

IT) ITi r- 


n q ^ 


X 

\o m 

* OO 1— . * * * 

r-; r-- r- r- o ^ m 'o m 

N ts. \o rn a; co ^ 

vo vd \6 o ^ \d r- rt c4 (N 


in T* 
in m 


r-‘ c4 (N o o 


<D <D 
c *-« DO 
D «* 

oi a 


— 

VO so o 

7 00 7 ON 

00 On 


r- Ov 
^o m 


in 

r— ' 

in 

uo 

m 

m 

m 

m 

m 

\mm.* 

in 

in 

m 

m 

m 

m 

*-* 

1 — < 

• — * 

< — ' 

« — . 

i — < 

< — i 


Tf 

VO 

VO 

m 

r- 

i— ^ 

Os 

J 

oo 



oo 

o 

00 

i— t 

(N 

i*~ « 

(N 

fS 

i 

<NJ 

<N 

w > 
1 


m 

r- 

r- 

m 


m 

VO 

On 

i 

i 

i 

» 

rt 


i 

i 

i 

i 

i 

i 

i 


(N 

in 

m 

Tt 


u* 

<N 

en 

m 

vO 

VO 

VO 

OO 



i—i 





C3 






rn rn rn 

1 ro m 

rsi (N 

. m 

■ (N 

. <N , 

(N 7 


C Si 



o o o 

o o 

o o 

o 

o 

o 

z> 

o > 

? 

C3 


C/5 

• — ' 

I—* 1— t 

1—* *— 


<— - 

*— < 


O 

<U 

««r* 

c C 

o Vn- 

<U 

Ur 



s s 

s 



s ^ 

U- 


PL o 2 

cx 

U. Cl u. 

LU UL 

UL UL 

UL 

U- 

UL 

ul 


vo m 
-X O *— ■ ■ 

c ^ ^ 

5 > > 
00 00 



r3 

C3 

u 



1c 

> 

> 

<u 

> 

£ 

£ 

o 

4— * 

<?3 

*— * 
CC 


3 * 

rH °- 
U a 

3 

C/3 

00 

0.2? 

C/3 

C ^ 

5 o 

OJO <n 

o 


o o 
>, ~ ~ 
5- ^ 

a c c 


<U <u 
w) ox) 75 

• »— crt V/ 

t/5 ’ — 


^ W — 

r- oo > 


ct3 4«j 

n .t; 

i e 6 

</3 "O ^ 

^ <* 03 
g 7 • 

£ CL On 
=3 3 


C/3 

<D 

*C 

<u 

C/5 

vD 

© c 


X| 
^ 13 


4— 1 

+—> 


£ -o 

-5 7 
^ >> 

£ 

£ 

* 

1 03 

O > 

T3 

■o 

4—* 

c , 

03 

03 

i 

3 

^ Tt 

i 

C 

*—» 

C 

O 
. *— « 

c o 
7 w 

n > 

o 

0) 

u 

>> ' 

•— O- 

> 

1 

> 

1 

Q. 

U E 

CA 

> 

£ 

D 3 
l/5 Cl 


> « 
60 o 
-X m 

S 2 
w > 

2 j= 
o .£ 
S £ 


x> 

SO 

o o 


£ ^ X ^ 
h Cl Q 


:I|e 

c*ntl f 


C C 

a; a> 
cx a. 
o o 

r- oo 

o o : 


r- o 
o o x> 

*-* *— • CT3 

XX „ 
a, a* 2 


^ *■* .t: x 

o o £ 

+-> .*— » *■* 

~~ «2 
ZZ C o ^ 

X X * L> 

cl cl f- S 


£ £ 

T3 •£ 


•— 3 3 

U .17 o) o 
^ £ £ •£■ o 

= -o -a Y ' 

“ 1 1 .— — * 
.. r- oo <«-i c 

i! o o ^ » 

O — i ^ c/3 Q, 

’r V- 4- C3 <L> 

-Jj <*_ <4- <4- W 

> 


<D ,. *> 

«» g ‘C 

L. TO a \ 

i 1) 

W oo 

°- U 


« g « 
> > £ 
O ® 

£ o x> 

rt ~ «J 


X 

^ s 

o E 
*-* <u 

v 5/5 

^ c 
O 

(N a> 

O- o 
a x> 

w «j 


C/5 U, V5 

*-• W ^ 

e >< i 

XI CL "O 

^ cn 

° £ o 
^ S 
f- tL f- 


r ^ , . m 

* ^ 

1 © 

2 

uu f— - 


O ON 
— O 

W-« W—4 

> > 
00 C /) 


J* -X 

c c 

03 03 


. SZ J c 

: o ?d 

> > 


Eg- a 
*13 E c 

^ *L T 3 C 

**^ •*•“ ert +— * • i— i 

3 i * ic ?2 

£ £ ® E q .tc * 

W •- •- C -O W C •’ 

— d O — td yj C e 

6==7- £^t 


W •- ■- c -O " c — 
— D o — «J yj C C 

£ = = 7 = 1 ‘S-5 
i 7 

2 -S|2gsls 

S> U-4 34-.W-TT C X) 



N j = ?i N 0 /P 0 . 


( 2 . 2 ) 


in which No is the capacity of the empty tank, 

PO is absolute atmospheric pressure, and 
Pi is the measured tank pressure time function. 

The ratio No / Po must be measured when the tanks are empty, the only time 
ALO can accurately assess their ullage air-space volume. 

2.5 Infering Gas Flow Rate 

Given the amount of gas in the tank as a function of time, it is a simple 

matter to compute gas flow rate as a function of time: 

Qi = (Nj - Nj-]) /T s (2.3) 

in which Ts is the sampling time interval in minutes. KATE’s 4-second (i.e., 1/15 
minute) “heart beat” interval is a convenient sampling time interval. The 

pressure drop across the tank pressurization (or depressurization) circuit is the 

difference in the tank pressure and the source (or vent) pressure, Pj - Ps. 
Therefore, the circuit admittance time function is 

A j = Qi / VpT^Ps 

= (NO/PO) (Pi • Pi-1) / (T s VPj • P S ). (2.4) 

For a given tank ullage, the ratio No/Po^s is constant. That is, 

No/Po^s = 32.75 cuft/psi-min 
for the 32.75 cuft ullage of ALO’s empty storage tank, and 

N()/P()Ts = 13.77 cuft/psi-min 

for the 13.77 cuft ullage of ALO’s empty vehicle tank. Thus, 

Aj = 32.75 (Pi - Pi-1 ) / VPj_ - 30psi, for pressurizing the storage tank, 

Aj = 32.75 (Pj - Pj-l) / vPj, for de pressurizing the storage tank, 

Aj = 13.77 (Pj - Pj-l) / V Pj - 70psi, for pressurizing the vehicle tank, and 

Aj = 13.77 (Pj - Pj-l) / VpT, for depressurizing the vehicle tank. 

As before, averaging the calculated admittances, Aj, reduces measurement noise. 


331 


2.6 Motor Control Valve Transfer Function 

KATE can set ALO’s skid replenish valve MCV-101 to any desired position 
from fully closed to 100% open. Its variable admittance is characterized by the 
transfer function: 

Admittance = %open * slope + admitQ, r = _ %. (2.6) 

In this function, the slope, admittance intercept, and correlation coefficient, r, are 
defined by the least-squared-error linear regression equations |7|: 

slope = H £ xy - £x £y , (2.6) 

n lx 2 - (Ex) 2 

admitQ = X .y - slope Lx , and (2.7) 

n 


correlation, r = n r.xv - Sx Sv , (2.8) 

^(Tn lx 2 - (Xx) 2 ]|n ly 2 - (Iy) 2 | } 

in which x and y represent the %open variable (typical range: 0.30 to 0.40) and 
the valve’s admittances at those %open valve settings respectively. The 
correlation coefficient, r, tejls the modeler the linearity (a figure of merit) of the 
transfer function. Correlations of 99.9% are common for this valve. Correlations 
less than 95% should prompt the modeler to take a new set of measurements. 

2.7 Coding The Admittance Calibrator 

Pressures must be sampled from the ALO model before the equations 
above can yield the 15 desired admittances. These pressures arise from 
plausible flows induced in some fluid circuit by one of ALO’s two pumps. 
Collecting pressure samples is a simple matter of calling the LISP function, GET- 
CURRENT-VALUE, every four seconds with a pressure transducer’s CAD reference 
designator as the function argument [8]. For example, 

(L (SETQ x (GET-CURRENT-VALUE ‘PX-I15))) 

evaluates actual pump head pressure when called by a control procedure. The 
pumps respond to motor speed commands, such as: 


(C RPM-101 (3600 rpm) “pump rapidly”). 



and ALO’s valves respond to control procedure calls like these: 

(C SV-103 OPEN “quicken recirculation flow”) 

(C SV-111 CLOSED “prevent fluid loss during tank pressurization”) 

(C MCV-10I (0.40 %) “replenish vehicle tank boil off”). 

Table 2-2 shows the best valve and pump settings, as well as flows and 
pressures to be measured for every ALO admittance. This table and the 

equations above constitute the automated admittance calibrator’s software 
design. Its LISP code [9] and data output [10J are attached as Appendices A and 
B. Its operating instructions are: 

1. Select CONTROL PROCEDURES on KATE’s overview menu. 

2. Left-click on DO-IT-ALL. 



Table 2-2 

ALO's Admittance Measurement Environments 


tr> 

<D 


<D 

*- 

3 

c /5 

C /5 

<D 


* o| 
o — 
E 2 

CJU 


CL "Ol 


E 

3 

Cl 


<d 

d 

cnf 


U o| 
2 1 


O O i r 
+ 4 * O O 

— On + + 
O O od too 

X X cl a. 


ft. 

1 

OX) 


o-oo 

t i i 

W) — < o 

‘ o 


<A So 2 ^ 

© o x X 

m r- Cl Cl 


— -a 

j_ <u 

L /5 

•«- pO t- 


> 

Z -o 


o o o o 


o o o o 


m 

i 

in 

x 

a, 

i 

o 


Ov 


vO 
Tt m 

— <N <N 
+ + * 
m vo ^ 
— - o ^ 


m 

< 

On 

O 

L * 

T ft. 

© i 


Q 

+ 


X X X x x x 
cl a. a. cl cl. a. 
1 * 1 1 
m »n 'O i— • w 

^ o o o ^ 

o ^ ^ ^ ^ o 

2 x x x x ~ 

x CL ft, ft. Cl X 

ft. CL 

r) ro (N N (N 


O o 
O © 
m in »n 
m m m 


O 

o 


o 

o 


o 

o 


o 
o 

m m m 
N N N 


O 

O 


o o 
o o 

m in m 
m m m 

i i i 

888 

in m in 

<N <N <N 


o o o o o o 


r- r- 
o o 

X X 
Cl Cl 


X X 

CL Cl 


<N — 


o 

o 

in 

<N 


O 

o 

in 

m 


in 

m 


O m 


O O 

i i 

CxO bO 
So v 5 

Cl Cl 
O O 

i i 

m m 


X X 
Cl cl 
Q Q 
+ + 
ON On 
O O 

X X 

CL CL 

c c 
•*— » •*— > 

> > 
I I 

(N <N 
O O 

o o 
m in 
(N m 

i i 

o o 
o o 

m in 
m (N 


o o 


o 

X 

CL 

Q 


X 

CL 

i 

vO 

O 

X 

CL 


m 


O 

O 

in 

rN 

i 

o 

o 

in 

m 






X 

ml 

X 

* — '1 

« 

1 


> 

— 1 

cn 

°| 

* 

'1 

"O 

<D 

Ov| 

t/) 

ol 

O 



oo 

U 


*c 

m 

(U 

D 

Ol 

O 

vol 

co 

ol 


Tfl 

> 

ol 

C 3 


> 

ml 

Ol 


ol 




E 

T 3 

< 


: U 

c /5 

<U 

"O 

8 u 

o 


3 

c/i 

C/5 

O 


c 

H 


U 

U 


3 

N 

3 U 

on 

<d 

Q. 

o U 

o 

■o ° 

C 

cd 

C 
4 0 
♦— < 

3 

N 


o u u 
u o o 
ugu 

u u u 

u u u 
u u u 
u u u 
u o o 
u u u 
u u u 
o u u 


- •- £ 


E 

T 3 

C 3 

I 

CL 

3 


■D ? BJ 

CtJ 

I 

CL 
3 


c 

1) 


c 
a> 
> > 


u^u 

oo 0 

O O Q 

u u u 
u U D 
U L> U 

o ® o 
o o o 
o o o 
u u u 
u u u 


u u u 
o o o 
o o o 
u u u 

u u u 
u u u 
o o o 
o o c 
o o o 
u u u 
u u u 


OJ 

4—i 


E 



T> 

U- 

3 

E 

E 

*8 

E 


c^J 

“O 

"D 

*3 



<D 

T 3 

c 3 

VO 

CT 3 


• I— 

O 

O 

p 3 

i 

i 

>> 

O 

4 > 


3 

O 

u- 

CL 

<D 

C 


X 

ft, 

1 

C 

• r— 

E 

■o 

t-H 
• ^ 
u 


4 -J *-* 

> > 


£ - T o ^ ^ s: 

o C O r ^ ' ;r- 

— o v w*- ^ ^r 

u. ao «« o _ 

" “ c - c - Bi 

rt a 3 x 2 L .5 

UL co CL CL » c*_ 


u u 
O O 
o o 
U L> 

u u 

o u 

u u 

: °0 

s°° 

|uo 

<D 


O ft. 


> 

u 


£ 

TD 

CTJ 


^ 3 

_ E g 

? TJ ‘o 
§ ? J= 
oc oo .£2 

SSo = 

Q (P 

~~ "a. 

e 


PL 

ft. 


V u 

o o 
o o 
o u 

u o 
u u 
o o 
o o 
. o o 


- u u 

|uu 

« 

a 

o 


■a 

<u 

m 

-a £ c 
c -a = 

c 3 ctf ^ 

I CT 3 

<u o » 

' — ^ ' — ’ ~n 

g N S 

S g « 

Z C X) 


u 

o 

u 

u 

u 

CJ 

u 

o 

o 

u 

o 

u 


: E 

2 -o 

3 « 
T3 c 

O o 

2 - 
£ 22 
3 

p o 


o 

<u 

fti 


o 

IU 


KATE initially closes all solenoid and motor control valves. 



Ill 

RESULTS 


3.1 ALO’s Traditional (Standard) Vs. Automatically Calibrated Admittances 

The first and last pages of the automatic admittance calibrator’s 25-page 
output file [10] appear here as Appendix B. Table 3-1 compares these 15 
automatically calibrated admittances with the traditional ones, taken as standard 
values. The right-hand column (see “Meas. Error”) is the automatically 

calibrated admittance minus the traditional one, all divided by the traditional 
one. Significant measurement errors are discussed below. 

3.2 Tank Pressurization And Depressurization Admittances 

ALO calculates the storage and vehicle tank ullage pressure and vent 
admittances afresh every time they are used, because their equations include 
tank ullage-space variables. (Section 2.4 suggests that a better policy might ' be 
calibrating these constant admittances once and for all with both tanks empty.) 
Table 3-1 shows traditional (standard) values of 23, 18.5, 25.5, and 53 for these 
four admittances. Their automatically calibrated counterparts are about 1/1 0th 
of these amounts. Close inspection of ALO’s knowledge base equations 1 4 J 

reveals assumed ullage spaces for both tanks that are about 10 times actual size. 
Though this knowledge base error has been in place since ALO’s beginning, it 
probably has not affected ALO’s performance much. Gas flow has little effect 
upon ALO’s (more important) modeled fluid flow. Standard deviations (sd’s) of 
all tank pressurization admittances are 29% of their means. These excessive sd’s 
probably result from the fact that only three samples were taken in calibrating 
each admittance. 

3.3 Pump Circuit Admittances 

Some large errors among ALO’s five pump circuit admittances demand 
explanation. Most striking is the -72% error in pump-to-4-way-admit. ALO's 
knowledge base [6] traditionally defines this admittance as extending from the 
pump inlet, where there is no pressure transducer, to transducer PX-105. 
Consistent with the “readily apparent” principle advanced in section 2.2 above, 
its automated counterpart extends from pressure transducer PX-115 to PX-105. 
Hand valve HV-106 is excluded from the standard admittance but included in 
the automated one. Explaining that ALO is “still under development,” ALO’s 
modeler claims that he prefers the automated value over the traditional 
standard. Soon ALO’s knowledge base will change to reflect pump-to-4-way- 

admit’s new “readily apparent” definition instead. The greater accuracy of the 
composite pump-circuit-admit suggests that the other three component 
admittances in the pump circuit also may contradict our new “readily apparent” 


335 



Ill 

RESULTS 


3.1 ALO’s Traditional (Standard) Vs. Automatically Calibrated Admittances 

The first and last pages of the automatic admittance calibrator’s 25-page 
output file f 10] appear here as Appendix B. Table 3-1 compares these 15 
automatically calibrated admittances with the traditional ones, taken as standard 
values. The right-hand column (see “Meas. Error”) is the automatically 
calibrated admittance minus the traditional one, all divided by the traditional 
one. Significant measurement errors are discussed below. 

3.2 Tank Pressurization And Depressurization Admittances 

ALO calculates the storage and vehicle tank ullage pressure and vent 
admittances afresh every time they are used, because their equations include 
tank ullage-space variables. (Section 2.4 suggests that a better policy might be 
calibrating these constant admittances once and for all with both tanks empty.) 
Table 3-1 shows traditional (standard) values of 23, 18.5, 25.5, and 53 for these 
four admittances. Their automatically calibrated counterparts are about l/10th 
of these amounts. Close inspection of ALO’s knowledge base equations |4| 
reveals assumed ullage spaces for both tanks that are about 10 times actual size. 
Though this knowledge base error has been in place since ALO’s beginning, it 
probably has not affected ALO’s performance much. Gas flow has little effect 
upon ALO’s (more important) modeled fluid flow. Standard deviations (sd’s) of 
all four tank pressurization admittances are 29% of their means. These excessive 
sd’s probably result from the fact that only three samples were taken in 
calibrating each admittance. 

3.3 Pump Circuit Admittances 

Some large errors among ALO’s five pump circuit admittances demand 
explanation. Most striking is the -72% error in pump-to-4-way-admit. ALO’s 
knowledge base [6J traditionally defines this admittance as extending from the 
pump inlet, where there is no pressure transducer, to transducer PX-105. 
Consistent with the “readily apparent” principle advanced in section 2.2 above, 
its automated counterpart extends from pressure transducer PX-115 to PX-105. 
Hand valve HV-106 is excluded from the standard admittance but included in 
the automated one. Explaining that ALO is “still under development,” ALO’s 
modeler claims that he prefers the automated value over the traditional 
standard. Soon ALO’s knowledge base will change to reflect pump-to-4-way- 
admit’s new “readily apparent” definition instead. The greater accuracy of the 
composite pump-circuit-admit suggests that the other three component 
admittances in the pump circuit also may contradict our new “readily apparent” 


336 


Table 3-1 
The Answers 


Admittance 

Traditional 

Auto Cal Admit 

Meas. 

Admittance 

1. Tank Pressurization (Nitrogen Gas) Circuits.... 

(mean +/- sd 1 ) 

Error 

st-up-admit 

23 

2.280+.6677 

10. lx 

vt-up-admit 

18.5 

1.842+.5394 

10. Ox 

st-vent-admit 

25.5 

2.485±.7279 

1 0.3x 

vt-vent-admit 

53 

5.077+1.487 

10. 4x 

2. Pump Circuits.... 

suction-line-admit 

15.5 

14.62+6.179 

-6% 

pump-to-4- way -admit 

10.58 

2.922+1 .235 

-72% 

pxl05-to-pxl06-admit 

4.65 

5.701+2.409 

+23% 

pump-circuit-admit 

4.1* 

2.560* 

-38% 

recirculation-admit, SV103 

closed 1.64 

1.696+.7166 

+3% 

ditto but with SV103 open 

7 

6.213±2.595 

-11% 

3. Vehicle Tank Circuits.... 

ff 1 07-admit 

6.47 

6.066+2.564 

-6% 

ff 1 08-admit 

6.47 

6.353±2.685 

-2% 

fast-fill-circuit-admit 

6.47* 

6.066* 

-6% 

replenish-circuit-admit 

0.02786x 

0.0278 1 x-0.7, 

0% 

(a transfer function) 

-0.7013 

r=l. @33%open 

skid-admit 

6.69* 

5.375* 

-20% 

final -fill -circuit -admit 

7.3 

6.977+2.949 

-4% 

upper-fill-circuit-admit 

4.93* 

4.258* 

-14% 

transfer-line-admit 

2.36 

2.360+.9975 

0% 

tank-fill-admit 

4. Vehicle Tank Drain Circuits.... 

2.13* 

2.064* 

-3% 

nozzle-admit 

0.55 

0.02286+.02158 

-96% 

bleed-admit 

0.34 

0.06923+ 02797 

-80% 


* Derived admittances are functions of measured ones (not constants), and they 
vary with valve positions. 


337 


principle. Sd’s of the pump circuit admittances range from 42 to 44% of their 
means. 

3.4 Vehicle Tank Circuits 

Component admittances in the vehicle tank circuit show smaller errors. A 
dead-level perfect overall tank circuit admittance (i.e., lank fill -admit) suggests 
minor changes in admittance definitions again, as ALO’s modeler embraces the 
“readily apparent” concept. He dismisses these errors (all <_ 20%) as 
“insignificant.” One might argue that automated admittances reported here 
should agree exactly with traditional ones. All pressures and flows the 
calibrator measured were modeled values, arising from traditional admittances 
in ALO’s knowledge base. Actually, ALO adds a “realistic” offset [ 1 1 J to every 
modeled pressure before displaying it on the user’s overview screen and before 
delivering it to the user’s program via GET-CURRENT-VALUE. In the range -0.72 
to +0.34 psi, these small offsets add a fixed measurement error that the 
admittance calibrator’s statistical averaging cannot eliminate. A -0.72 psi offset 
on a 2.4 psi pressure measurement could account for a +20% error in admittance. 
Sd’s of all four constant vehicle tank admittances are 42% of their means. 

3.5 Nozzle And Bleed Admittances 

Automatic calibration of nozzle and bleed valve admittances presents some 
interesting design problems. The space shuttle’s engine nozzle valve never 
opens during oxygen tanking, and the bleed valve only opens occasionally, when 
the tank has been overfilled. One might logically wonder why ALO models these 
valve admittances at all, since it is preoccupied with device failures during 
tanking. Evidently, these admittances lie at the edge of ALO’s knowledge domain 
- bizarre errors lie waiting there for the unwary. For example, 10.13 gallons of 
water typically flows from the storage tank to the vehicle tank every minute 
during the fast-fill oxygen tanking procedure. When the nozzle valve opens, and 
an unmeasured portion (this path has no flowmeter) of that 10.13 gpm flows out 
the nozzle, the vehicle tank’s inlet flow rises to 10.30 gpm! Final -fil 1 -adm it, 

nozzle-admit, and bleed-admit all have solenoid valve S V -11 1 in common, so 
combining two or more of these admittances is meaningless. As the vehicle tank 
approaches half-full with the bleed valve open, its inlet flow typically 
approaches zero and then reverses, augmenting the bleed path’s pumped flow. 
The paradoxical negative admittances that arise at these times suggest confusion 
in the knowledge base. In the light of this discussion, maybe a 96% error is not 
so bad. Sd’s of the nozzle and bleed admittances are 94 and 40% of their means. 

3.6 Error Summary 

Causes of calibrator errors range from ALO “realistically” offsetting 
modeled pressures to variant admittance definitions to errors in ALO’s evolving 


338 



knowledge base equations. ALO’s modeler claims to be better satisfied with the 
automatically calibrated admittances than with the traditional ones. And 
. customer satisfaction is the ultimate test of any automated productivity aid. 
Statistics (sd’s) of all admittances will improve when procedure compiler 
enhancements (currently underway) permit looping a dozen times on a variable 
pumping speed. 


339 


IV 

CONCLUSIONS 


4.1 Enhanced Modeler Productivity 

Perhaps it is stretching a point to compare the automated admittance 
calibrator’s 8-minute run time with those 6 to 8 months ALO’s modeler spent 
filling his 63-page notebook [13] with manual admittance calculations. (He also 
developed other parts of the model in that same time interval.) But there is no 
denying that automated admittance calibration does save ALO’s modeler 
considerable time and effort. He is pleased to have it. It deserves to be included 
among the other modeler productivity aids in KATE’s Model Verification Toolkit. 
Creating it has been an illuminating experience. This author has a deeper 
understanding of the problems KATE’s modelers encounter and how to help 
them. 

4.2 Clarified ALO Model 

In the process of opening their minds to students, teachers often discover 
ways of improving their own reasoning processes. ALO’s traditional admittances 
came from painstaking manual measurements of pumps, valves, pipes, tees, and 
elbows (and complicated combinations of these) on the space shuttle launch pad. 
ALO’s modeler came up with the “readily apparent” admittance definition 
specifically to guide this newcomer in developing the automatic admittance 
calibrator. These 15 easily measured admittances (i.e., flow rates divided by 

square roots of pressure drops), plus a scant few of their series and parallel 
combinations, could replace the dozens of arbitrarily defined admittances that 
now litter ALO’s knowledge base. His fresh look at ALO has clarified the model 
builder’s task. 

4.3 KATE’s Philosophical Advancement 

In the automated admittance calibrator, we have an novel application of 
KATE in which she changes hardware systems and then measures the effects of 
those changes. Two years ago, ALO’s modeler broke new ground by enabling 
KATE to control environments she formerly observed passively. Now we have 
gone a step further toward making KATE a master of hardware environments. 
As her ALO model knowledge base measures its own admittances, KATE shows 
considerably more introspection than the average computer program. Could we 
speculate that KATE has achieved artificially intelligent “self-awareness”? 


340 


V 

RECOMMENDATIONS 


5.1 ALO’s Future 

ALO’s automatic admittance calibrator has proved itself in a modeled 
environment. (Simulated by ALO’s software, the pressures and flows the 
calibrator measured did not come from real hardware.) Now it is ready to be 
attached to the real hardware model (see Figure 1-1) in KSC’s Large Equipment 
Test Facility (LETF). If a repeated Chapter 3 error analysis on real hardware is 
successful, ALO’s modeler should arrange for the calibrator to stuff its 15 
admittances directly into the knowledge base. If automatically calibrating ALO’s 
admittances improves both model quality and modeler productivity, could 
calibrating other items be beneficial? Yes, indeed. ALO’s TV cameras, pumps, 
and sensor tolerances should be calibrated next, as described below. Later this 
portable tool can be installed in KATE’s LOX and ECS models to reap more 
productivity gains. 

5.2 Automatically Calibrating ALO’s Cameras 

Occasionally ALO’s two television cameras get bumped, and then they don’t 
aim at failed devices as they should. A user-interactive calibration procedure is 
needed to trim camera pan, tilt, and focus upon demand. The procedure is 
summarized in the software design of Table 5-1. Because it relies heavily upon 
hardware, this procedure should be coded and tested after ALO is reinstalled in 
KSC’s LETF area. 


Table 5-1 

TV Camera Calibration Procedure 

L Notice which device icon the mouse is pointing at. 

2. Slew the camera to the coordinates already given in the device 
frame’s cam-coord slot. 

3. Pause while the user bumps the camera servo joy stick to manually 
trim its direction and focus. 

4. Automatically read the camera’s actual position from its servo 
hardware. 

5. Write these new camera coordinates into the device frame’s slot. 

5.3 Automatically Calibrating ALO’s Pumps 

KATE needs to know how much head pressure to expect from ALO’s pumps 
for any given rpm command. Pumps age, so automating calibration of the 
pumps’ rpm-to-pressure transfer function can be expected to improve both 


model performance and modeler productivity by permitting more frequent, and 
less time consuming updates. Table 5-2 summarizes a procedure for calibrating 
ALO’s pumps. A coded but untested control procedure for pump calibration 
appears in Appendix A (see “.pump-data”). This procedure illustrates some 
experimental code that the calibrator’s other procedures do not have. To 
improve portability to other KATE models, a disk file carries raw pressure 
measurements from a data-taking control procedure to a separate LISP analysis 
function. To simplify procedure coding, an improved looping macro (see 
“REPEAT”) allows a variable to control pump speed. Control procedure compiler 
enhancements that are underway now will make these calibrator improvements 
workable. 


Table 5-2 

Pump Calibration Procedure 

1. Configure ALO’s valves the same as “pump-to-4-way” in Table 2-2. 

2. Run pump from 1800 to 3600 rpm in 100 rpm steps. 

3. Measure pump head pressure (PX105 minus PX115) in every step. 

4. Use linear regression to obtain a straight line transfer function that 
relates commanded rpm values to measured pump head pressure. 

5. If the linear regression algorithm reports a correlation poorer than 
95%, check the pump and do it again. 

6. Stuff the transfer function into the pump’s knowledge base frame. 

5.4 Calibrating Sensor Tolerances 

ALO’s modeler needs a sensor tolerance calibrator to tell him when 
tolerances get too sloppy. Device failures trigger KATE’s diagnoser when actual 
measurements differ from their modeled values by more than a prescribed 
tolerance. KATE’s modelers typically respond to false alarms (i.e., diagnoses 
triggered by out-of-tolerance sensors, not device failures) by arbitrarily 
widening sensor tolerances. Tolerances have been known to grow so large that 
device failure does not trigger the diagnoser. (Such growth admittedly is rare, 
because the catastrophic device failures that KATE is capable of diagnosing affect 
measurements dramatically.) The sensor tolerance calibration procedure in 
Table 5-3 below was inspired by conversation with Steve Beltz [13]. 

Table 5-3 

Sensor Tolerance Calibration Procedure 

1. Collect a complete set of measured-modeled differences for all 
sensors every 4-seconds (i.e., every KATE “heart beat”). 

2. After collecting lOOKbytes or more of these, alarm the user every 
time a measured-modeled difference exceeds +.99 percentile. 

3. After collecting 1 Mbytes of these, display their histograms. 


342 


4. If the user approves, stuff each of the 99-percentile limits into its 
sensor tolerance slot in the model knowledge base. 

5. Stop collecting measured-modeled differences: 

a. Anytime the user wants to. 

b. For 7 seconds after any abrupt control procedure change. 

c. While a sensor is “nuked” (i.e., the knowledge base’s way of 
telling the diagnoser to ignore a temporarily dubious measurement). 

6. Display histograms and flush the accumulated measured-modeled 
differences prematurely, if the user demands. 


343 



APPENDIX A 

AUTOMATED ADMITTANCE CALIBRATOR PROGRAM LISTING 


344 


G:>morgan>lastlisp.7 


8/06/92 15:29:36 Pagel 



;j; Mod# : LISP; Syntax: Common-lisp; Package: KATE; Base: 10 -*- 


(SETF * ADMIT -FILE* "G: >MORGAN>ANSWERS . LISP") 

;;; KATE-ALO' a Initial State; 

/// Hand valves, WV-J04, -105, -106, -107, CV-104 all open. 

Flow-control hand valves, FCV-101 - 301, FCV-103 - 25%, FCV-102 • 100%. 

All solenoid and motor control valves closed. 

;;; ST-101 - 175gal, VT-101 - lOgal. 

(defun format2 (erg) 

(zwei iwith-editor-stream (admit -at ream :buffer-name *ADMIT-FILE* ) 

(format admit-stream "-A-%" arg) ) 
erg) 

/ (defun format2 (arg) /// rmplacm PRINTS with format2 to redirect output to the ANSWERS film 
; (format *rprt* "~A~%" erg)) 

; (defun format2 (arg) 

/ (print arg) ) 



(de fvar 
(de fvar 
(defvar 
(de fvar 
(defvar 
(defvar 
(de fvar 
(de fvar 
(de fvar 
(de fvar 
(de fvar 
(defvar 
(defvar 
(de fvar 
(de fvar 
(de fvar 
(de fvar 
(defvar 
(de fvar 
(defvar 
(de fvar 
(defvar 
(de fvar 
(de fvar 
(defvar 
(de fvar 
(defvar 
(defvar 
(defvar 
(defvar 
(defvar 
(de fvar 
(de fvar 
(de fvar 
(de fvar 
(defvar 
(de fvar 
(defvar 
(de fvar 
(de fvar 
(defvar 
(de fvar 
(de fvar 
(de fvar 
(de fvar 
(defvar 
(de fvar 
(defvar 
(de fvar 
(de fvar 
(de fvar 
(de fvar 
(de fvar 
(de fvar 


k . ST-ULLAGE* nil "volume of storage tank air space: 0.0 to 245.6/7.461 cu.ft.") 

‘.VT-ULLAGE* nil "volume of vehicle tank air space: 0.0 to 100.0/7.481 cu.ft.") 

>.rpm* nil "current pump speed command: 1800 - 3600 rpm") 
r .opencmd* nil "current control valve position command: 0.0 to 1.0") 

>. valve* nil "current control valve of interest: MCV-101 or FCV-101") 
f . st-up-admlt* nil "storage tank ullage pressurising admittance”) 
r . vt -up- admit* nil "vehicle tank ullage pressurizing admittance”) 
r • *t -vent -admit* nil "storage tank ullage venting admittance”) 
r .vt -vent -admit* nil "vehicle tank ullage venting admittance”) 
r • suction-line-admi t * nil "storage tank to pump circuit admittance") 

'.pump-to-4-way-admit* nil "pump to PX-105 admittance") 

.PX105-to-PX106-admit* nil "PX-105 to PX-106 admittance") 
r . transfer-1 ine-admit* nil "PX-106 to skid admittance”) 
r • f f -107-admit* nil "fast fill valve 5V-107 admittance") 

' ■ ff -10 8 -admit* nil "fast fill valve 5V-108 admittance") 

.final-fill-circuit-admit* nil "PX-107 to vehicle tank admittance”) 

.replenish-circuit-admit* nil "skid's slow fill admittance”) 

-nozzle-admit* nil "vehicle tank to nozzle admittance") 

. bleed-admit * nil "vehicle tank to bleed outlet admittance”) 

. recirculat ion-admit* nil "PX-106 to storage tank backflow admittance") 

.pump-circuit -admit* nil "series pump- to- 4 -way- admit, suet ion-1 Ine-admit ,PX105-to-PX106-admit") 
. fast-fill-circuit-admit* nil "f f-107-admit and ff-108-admit in parallel") 

.skid-admit* nil "replenish-circuit-admit and fast-fill-circuit-admit in parallel") 

•upper-f ill -circuit -admit* nil "skid-admit and final-fill-circuit-admit in series") 

• tank— f ill-admit * nil "upper-f i 1 1-ci rcuit -admit and transfer-1 ine-admit in series") 

.FM-103* nil "list of 30 FM-103 samples taken in 2 minutes") 

.FM-103aloflo* nil "list of 3 FM-103 samples taken with SV-103 closed") 

•FM-103faaf lo* nil "list of 3 FM-103 samples taken with SV-103 open") 

.FM-102* nil "list of 30 FM-102 samples taken in 2 minutes") 

.FM-101* nil "list of 30 FM-101 samples taken in 2 minutes”) 

•lopen* nil "list of 10 control valve %open samples taken in 2 minutes”) 

•PX-101* nil "list of 30 PX-101 samples taken in 2 minutes") 

•PX-106* nil "list of 30 PX-109 samples taken in 2 minutes”) 

.DPX-104* nil "list of 30 DPX-104 samples taken in 2 minutes”) 

.PX-115* nil "list of 30 PX-115 sanples taken in 2 minutes") 

.PX-105* nil "list of 30 PX-105 samples taken in 2 minutes") 

•PX-106* nil "list of 30 PX-106 sanples taken in 2 minutes”) 

• PX-106slof lo* nil "list of 3 PX-106 samples taken with SV-103 closed") 

-PX-106fasf lo* nil "list of 3 PX-106 sanples taken with SV-103 open") 

.PX-111* nil "list of 30 PX-111 sanples taken in 2 minutes") 

•PX-107* nil "list of 30 PX-107 samples taken in 2 minutes") 

.DPX-113* nil "list of 30 DPX-113 samples taken in 2 minutes") 

.al* nil "temp space in FastFlow") 


• *2* nil "temp space in FastFlow") 
.a3* nil "temp space In FastFlow") 
.bl* nil "temp space in FastFlow") 
.b2* nil "temp space in FastFlow") 
.b3* nil "temp space In FastFlow") 
.cl* nil "temp space In FastFlow") 
.c2* nil "temp space in FastFlow") 
• c3* nil "temp space in FastFlow") 
.dl* nil "temp space in FastFlow") 
• d2* nil "temp space in FastFlow") 
.d3* nil "temp space in FastFlow") 


OSIOiNAL PAGE IS 

OF POOR QUALITY 


345 


G:>morgan>lastlisp.7 


8/06/9215:29:36 Page 2 


(defvar *.el* nil "temp space in FastFlow") 

(defvar *.e2* nil "temp space in FastFlow") 

(defvar *.e3* nil "temp space in FastFlow") 

(defvar *.fl* nil "temp space in FastFlow") 

(defvar *,f2* nil "temp space in FastFlow") 

(defvar *.f3* nil "temp space in FastFlow") 

(defvar *.gl* nil "temp space in FastFlow") 

(defvar *.g2* nil "temp space in FastFlow") 

(defvar *.g3* nil "temp space in FastFlow") 

(defvar # .hl* nil "temp space in FastFlow") 

(defvar *.h2* nil "temp space in FastFlow") 

(defvar +.h3+ nil "temp space in FastFlow") 

(defvar *.il* nil "temp space in FastFlow") 

(defvar *.i2* nil "temp space in FastFlow") 

(defvar *.i3* nil "temp space in FastFlow") 

(defvar *.jl* nil "temp space in FastFlow") 

(defvar *.j2* nil "temp space in FastFlow") 

(defvar *.j3* nil "temp space in FastFlow") 

(defvar *.kl* nil "temp space in FastFlow") 

(defvar *.k2* nil "temp space in FastFlow") 

(defvar *.k3* nil "temp space in FastFlow") 

(defvar *. alow-recirc* nil "recirculation line admittance with SV-103 closed") 
(defvar *. fast-recirc* nil "recirculation line admittance with SV-103 open") 
(defvar * . pump- speed* nil "current pump speed during calibration") 

(defvar *.pmp-spd-list* nil "all 19 pump speeds during calibration") 

(defvar *.pump-xfer-fcn* nil "calibrated transfer function of RPM-101") 

(defvar * .FM1 03 admit* 3.75 "admittance of FM103 flow meter venturi") 

(defvar * .FM1 02 admit* 3.63 "admittance of FM102 flow meter venturi") 

(defvar * .FM1 01 admit* 0.667 "admittance of FM101 flow meter venturi") 

(defvar *.in-to-psi* 27.7 "divide by this to convert inches of H20 to psi") 

(defvar *.gal-to-cuft # 7.401 "divide by this to convert gallons to cubic feet") 

(defvar *.ST-cap* 245.6 "storage tank capacity in gallons") 

(defvar *.VT-cap* 103.0 "vehicle tank capacity in gallons") 

(defvar *.ST-supl* 30 "storage tank's GN2 supply pressure") 

(defvar *.VT-supl* 70 "vehicle tank's GN2 supply pressure") 

(defvar *.atm* 0 "atmospheric pressure in psig") 



Look for these on KATE's mouseable Control Procedures menu.... 

( set f * SYSTEM-PROCEDURES* ' ( .pressuri re .depressurize .fastflow .ffl08 .mcvlOl .nozzle .bleed .recirc . de 
rived .done .do-it-all bob}) 


;;; Bob's ALO-KB Caller.... 

(defun GET-TANK-ULLAGE (tank-capacity amt) 

"Input is tank-capacity (in gal) and amt of fluid in tank (in gal), 
output is ullage space in ft 3* 

(/ (- tank-capacity amt) 7.481)) 


WW 


Scott's Regression Line Drawing Faritaga 


(def flavor graph-pane (mxx mnx mxy mny scale) 
(tv: : window) 

: settable-instance-variables 
: readable-instance-variables) 

(defvar *graph-pane* nil) 

(setq *graph-pane* 

(tv: : make-window 'graph-pane 

ssize ' (500 500) 
:blinker-p nil 
: save-bits t 
: label nil)) 

(defmethod (scale graph-pane) (xl yl) 

(setq mxx (apply i'max xl) 
mnx (apply I'min xl) 
mxy (apply I'max yl) 
mny (apply I'min yl)) 

(cond ((> (- mxx mnx) (- mxy mny)) 

(setq scale (/ 450 (- mxx mnx)))) 

(t (setq scale (/ 450 (- mxy mny)))))) 



G:>morgan>lasUisp.7 


8/06/9215:29:36 Page 3 


(defmethod (plot graph-pane) (xl yl) 

(do* {(xv xl (cdr xv) ) 

(yw yl (cdr yw) ) 

(x (car xv) (car xv) ) 

(y (car yw) (car yw) ) ) 

( (null x) ) 

(graphics: i draw-circle (♦ 25 (round (* (- x mnx) scale))) 

{- 475 (round (* (- y mny) scale))) 

4 

: st ream self) ) ) 


(defmethod (draw-fit graph-pane) (xl yl) 

(let* ((a-b (CDR (.regres xl yl))) 

(a (car a-b) ) 

(b (cadr a-b)) 

(ptl-y (+ a (* b mnx))) 

(pt2-y (+ a (* b mxx) ) ) ) 

(graphics: : draw-line { + 25) 

<- 475 (round (* (- ptl-y mny) scale))) 
(+ 25 (round (* (- mxx mnx) scale))) 

(- 475 (round (* (- pt2-y mny) scale))) 
: thickness 2 
: st ream self) ) ) 


(defun test-fit (x y) 

(send *graph-pane* : expose) 

(send *graph-pane* : clear-window) 
(scale *graph-pane* x y) 

(plot *graph-pane* x y) 

(draw-fit *graph-pane* x y) ) 


ALO-H20 Admittance Calibration Equation Verifier 


;;; The pressure and flow rate data below were manually recorded by Steve Morgan in July 1992 for use 
in testing candidate admittance equations during the automatic admittance calibrator design phase. 

(defun .test-press () ;;; empty the tank ! S ! 

(SETQ *.PX-101* '(1-76 3.04 4.29) 

* . ST-ULLAGE* (format2 (/ (- * . ST— cap* 175) * .gal— to— cuft*) ) ; 5 cuft 

*. st-up-admit* {.tankadmit *. ST-ULLAGE* *. PX-101* 30) / -2.2 7 

* .PX-109* * (1.06 2.29 3.51) 

*.VT- ULLAGE* (format2 (/ (- * .VT-cap* 10) * .gal-to-cuf t*) ) / -12 cuft 

* . vt -up-admi t * (.tankadmit * . VT-ULLAGE* *. PX-109* 70))) / -J . 78 


(defun .test-depress () Empty the tank!!! 

(SETQ *. ST-ULLAGE* (format2 (/ (- *.ST-cap* 175) * . gal-to-cuft* ) ) ; -9.5 cuft 

•.PX-101* '(12.2 11.3 10.4) 

*. st- vent -admit* (.tankadmit *. ST-ULLAGE* *. PX-101* 0) / -2.51 

•.VT-ULLAGE* (format2 (/ (- *. VT-cap* 10) *. gal-to-cuf t*) ) / -12 cuft 

*. PX-109* ■ (15.1 13.4 11.9) 

* .vt -vent -admit* (.tankadmit *. VT-ULLAGE* *. PX-109* 0))) ; -5.09 


(defun . test-Fast-Flow () 


(SETQ *. fm-103* 

* . fm-102* 
*. px-101* 
*.dpx-104* 
* .px-115* 

* .px-105* 

* • px-106* 
*.px-lll* 

* . px - 1 0 7 * 

* . dpx-1 13* 
*. px-109* 


' (10.3 13. 15.6) 

# (10.3 13. 15.6) 

' ( 0 . 0 . 0 .) 

' (2.39 2.22 2.07) 

' ( 1 . .2 0 .) 

' (23.4 32.8 44.) 

' (20.6 28. 36.8) 

' (5.7 9.1 13.1) 

' (2.5 4.2 6.2) 

' (.49 .76 1.1) 

' ( 0 . .1 . 2 ) 


*. suction-1 ine-admi t * (CAR ( . stat (.admittances 
- *. fm-103* (.ad </ -5 * . in-to-psi*) (mapcar #'- (mapcar #'♦ 

W >>>>> 

* .pump- to- 4-way -admit* (CAR (.stat (.admittances 

*. fm-103* (.ad (/ 19 *. in-to-psi* ) (mapcar #'- *. px-105* 
*.PX105-to-PX106-admit* (CAR (.stat (.admittances 

*. fm-103* (.ad (/ 24 *. in-to-psi * ) (mapcar #'- *. px-105* 
* .transfar-line-admit* (CAR (.stat (.admittances 


0%3iNAL PAGE IS 

OF POOR QUALITY 


/ - 10. 1 

*. px-101* * .dpx-104*) *. px-115* 

*.px-115*))))) / -2.2 

*. px-106*))))) / -5.4 


G:>morgan>lastlisp.7 


8/06/9215:29:36 Page 4 


* . fm-102* {.ad {/ -236 * . in-to-psi*) (mapcar #'- *.px-106* * .px-111 * ) )) ) ) / - 4.0 
*.ff-I07-actaiit* {CAR (.stat (.admittances 

*. fm-102* (.ad (/ -1 * . in-to-psi* ) (mapcar *. px-111* * .px-107* )))) ) ; -5.9 

final- fill-circuit-admit * (CAR (.stat {. admittances / -7.J 

*. fm-102* (.ad (/ -3 *. in-to-psi* ) (mapcar #'- (mapcar #'- *.px-107* *.dpx-113*) *.px-109* 


)}))))) 


(defun .teat-ffl08 () 

(SETQ *. FM-102* '{10.3 13. 15.6) j -6.J 

* a px— 11 1 * ' (6. 9.1 12.8) 

* .px-107* * (3.3 4.8 6.5) 

* . ff-1 08-*dmi t* (CAR (.stat (.admittances 

*. FM-102* (.ad (/ -1 *. in-to-psi*) (mapcar #'- *. px-111* *. px-107*) 

)))})) 

(defun . test-mcvlOl () 

(SETQ * . %open* '(.30 .40 .50 .60 .70 .80 .90 1.00) ; - 2.7 * %open - 0.65 6 r - 99.99% 

* .FM-101* '(.9 2.6 4.3 5.9 7.3 0.5 9.6 10.6) 

*. px-111* '(42.5 41.8 40.4 38.8 36.6 34.6 32.5 30.6) 

*. px-107* '(.6 .5 .8 1.1 1.4 2. 2.2 2.5) 

*. replenish-clrcuit -admit* (.regres *.%open* (.admittances 

♦.FM-101* (.ad (/ -1 *. in-to-psi*) (mapcar #' - *. px-111* * .px-107* ))))) ) 


(defun .test-nozzle () 

(SETQ *. px-107* '(3.4 4.8 6.5) ; — 1 . 

♦.FM-102* '(9.6 12.7 15.6) 

*.px-109* '(0. 0. .1) 

*.dpx-113* ' (1.54 1.4 1.2) 

*.nozzle-admit* (CAR (.stat (.admittances (mapcar #'- *. FM-102* (.mul * . f inal-f ill-circuit -admit* 


et-flow 


(mapcar #'sqrt (.ad (/ -3 *, in-to-psi*) (mapcar **px-107* 

(mapcar #'+ *.px-109* * .dpx-113*) ) ) ) ) ) ; vt-inl 

(mapcar #'+ *. px-109* * .dpx-113*) )))) ) ; vt-inlet-pres 


(defun .test-bleed () 

(SETQ *. px-107* '(3.5 5.1 7.1) ; --0. 75 

*. FM-102* ' (9.6 12.7 15.5) 

* .px-109* ' (0. 0. .1) 

*. dpx-113* '(1.71 1.83 1.92) 

*.bleed-admit* (CAR (.stat (.admittances (mapcar #'- *. FM-102* (.mul * .final-fill-circuit-admit* 
(mapcar #'sqrt (.ad (/ -3 *. in-to-psi* ) (mapcar #'- *. px-107* 

(mapcar #'+ *. px-109* * .dpx-113*) )))) ) ; vt-inl 

et-flow 

(mapcar #'♦ *. px-109* * . dpx-113* ) ) ) ) ) ) ; vt-inlet-pres 

(defun .test-recirc () 


(SETQ * . %open* 

' (.0 

1.00) 




*.px-106sloflo* 

' (23.8 

32.1 

43.2) 

/ SV-103 

closed 

*.FM-103sloflo* 

' (7.6 

9.1 

10.6) 



* .px-101* 

' (0. 

0 . 

0.) 



*. dpx-104* 

' (2.04 

2.04 

2.04) 



*.px-106fasflo* 

' (9.2 

12.6 

16. 6) 

; SV-103 

open 

*.FM-103fasflo* 

' (19.5 

23.4 

27.3) 




♦.recirculation-admit* (.regres *.%open* ; /; admit * 5.6 * topen ♦ 1.6 (r m 99%) 

(LIST (CAR {.stat (.admittances 

* .FM-103slof lo* (mapcar #'- (mapcar #'- * .px-106sloflo* *.px-101*) * .dpx-104*) ) ) ) 

(CAR (.stat ( .admittances 

* .FM-103fasf lo* (mapcar #'- (mapcar #'- * .px-106fasflo* *.px-101*) * .dpx-104*) )))))) ) 

****************************************************************************************** 0m**m** 
a ***#*#*#***#**#*#**#*# AL0-H20 Admittance Calibration Test Procedures *****#**#*#**#*#### 


; ; ; 1. Measure admittances of tank pressurization and depressurization lines with both tanks EMPTY. 

(def procedure .pressurize 

:pretty-name "Calibrating st- t vt-up-admit . . . . " 

: actions 

( (L (format2 '(Calibrating st- 6 vt-up-admit....))) 

(L (SETQ * . 5T-ULLAGE* {/ (- *.ST-cap* (GET-MODEL- VALUE 'ST-101 'level-out)) * . gal-to-cuft* ) 

♦.VT-ULLAGE* (/ (- *.VT-cap* (GET -MODEL -VALUE 'VT-101 'level-out)) * . gal-t o-cuf t * ) ) ) 

;;; Closed final-fill line (SV-111) prevents water loss. 

(C SV-101 OPEN "Open storage tank's 30psi GN2 supply valve.") 



G : >morgan>last lisp.7 


8/06/9215:29:36 Page 5 


(C 

SV-114 

OPEN 

"Open vehicle tank' i 70psi GN2 

supply valve.") 

(WT 

4 ) 





(L 

(SETQ 

* . al * 

(GET -CURRENT -VALUE 

' PX-1 01-M) 




*.bl* 

(GET-CURRENT-VALUE 

' PX-1 09-M) ) ) 


(WT 

4 ) 





(L 

(SETQ 

*.a2* 

(GET-CURRENT -VALUE 

' PX-1 01-M) 




*.b2* 

(GET-CURRENT-VALUE 

' PX-1 0 9-M) ) ) 


(WT 

4 ) 





(L 

(set f 

* . a3* 

(GET-CURRENT -VALUE 

' PX-1 01-M) 




*.b3* 

( GET -CURRENT -VALUE 

' PX-1 0 9-M) ) ) 


(L 

(SETQ 

*. at -up-admi t* (.tankadmit *. ST-ULLAGE* 

(LIST * . al* * . a 


* .ST-supl* ) 


* . vt -up-admi t * (.tankadmit * .VT-ULLAGE* (LIST *.bl* *.b2* *.b3*> *.VT-supl*) 
•.dummy* 1)) ;;; Humor the balky m L m function 

(C SV-101 CLOSED "Reinitialize. ") 

(C SV-114 CLOSED "Reinitialize."))) 


(defprocedure .depressurize f ; ; Warning; PX-101,2 not accurate above 25 paig 

: pretty-name "Calibrating st- £ vt -vent -admit . . . . * 

: actions 


( (L (format2 '(Calibrating st- & vt-vent-admit ....)) ) 

(L (SETQ * . ST-ULLAGE* (/ (- *.ST-cap* (GET -MODEL -VALUE 'ST-101 'level-out)) * . gal-to-cuft* ) 

*. VT-ULLAGE* (/ (- * .VT-cap* (GET -MODEL -VALUE 'VT-101 'level-out)) *. gal-to-cuft *)) ) 
wiw Closed final-fill line (SV-111) prevents water loss. 

(C SV-106 OPEN "Open storage tank vent.") 

(C SV-113 OPEN "Open vehicle tank vent.") 

(WT 4 ) 

(L (SETQ *.al* (GET-CURRENT -VALUE 'PX-101-M) 

*.bl* (GET-CURRENT-VALUE 'PX-109-M) } ) 


(WT 4) 

(L (SETQ *.a2* (GET-CURRENT-VALUE 'PX-101-M) 

*.b2* (GET-CURRENT-VALUE 'PX-109-M))) 


(WT 4) 

(L (set f * . a3* (GET-CURRENT-VALUE 'PX-101-M) 

*.Jb3* (GET-CURRENT-VALUE ' PX-109-M))) 

(REPEAT 30 (WT 4) ;;; sample tank pressures every 4 seconds for 2 minutes 

(L ( set f *.PX-101* (CONS (GET-CURRENT-VALUE 'PX-101-M) *.PX-101*) 

* • PX-1 0 9* (CONS (GET-CURRENT-VALUE 'PX-109-M) * . PX-109* ) ) ) ) /// "L" 
(L (SETQ * .st-vent-admit* (.tankadmit *. ST-ULLAGE* (LIST *.al* *.a2* *.a3*) *.atm*) 


won't do 


this yet 


* .vt-vent-admit* (.tankadmit *. VT-ULLAGE* (LIST *.bl* *.b2* *.b3*) *.atm*) 
* .dummy* 1) ) 

(C SV-101 CLOSED "Reinitialize.") 

(C SV-114 CLOSED "Reinitialize."))) 


;;; Return the mean of all admittances, Ai, and print both their mean and standard deviation. 

;;; Bulk of gas in tank, Ni * NO * Pi / PO, where NO and P0 are initial ullage in cuft and absolute 

;;; pressure in psi. Gas flow rate, Qi * (Ni - Ni-1) / Ts, where Ts is interval between pressure 

;;; samples in minutes. Admittance, Ai - Qi / SQRT(Pi - Ps) , where Ps is gas source pressure while 
;;; pressurizing or atm while depressurizing. In other words,... 

;;; NO Pi - i>i-i 

• Ai * ----- , , and PO and Ts usually cancel out. 

;;; PO Ts SQRTfPi - Ps) 

(defun .tankadmit (ullage p Psource) 

(CAR (.stat (.admittances (.mul ullage (mapcar I'abs (.del <format2 p) ) ) ) ; flows 

(mapcar f'abs (.drop p Psource)))))) ; dP 

;;; Replace any zero pressures with 1 micro-psi to humor the divide function . 

(defun .humor (p) 

(mapcar #' (lambda (x) (max x l.e-6)) p) ) 


Subtract source pressure from every pressure sample. 


(defun .drop (p Psource) 

(mapcar ♦ ' (lambda (x) (- x Psource) 

;;; Find differences in consecutive 
(defun .del (p) 

(mapcar #'- p (cdr p) ) > 

;;; Get list of admittances = flows 
(defun .admittances (flows pressures) 
(mapcar #'/ (format2 flows) (.humor 

www 2. Calibrate Admittances Along 


P>) 

pressure sample pairs. 

/ SQRT (pressure drops) . 

(mapcar #'sqrt (format2 pressures))))) 
the Fast Flow Path.... 


(defprocedure .FastFlow 


349 


G:>morgan>IasUisp.7 


8/06/92 15:29:36 Page 6 


t pretty-name 
i action* 

( (L (formats 


SV-106 
SV-113 
SV-104 
SV-107 
SV-111 
RPM-101 
(NT 12) 

(L (3ETQ 


(C 

<C 

(C 

(C 

(C 

(C 


-Calibrating 6 fa*t-fill path admit*.... « 
(Calibrating 6 fa*t -fill path admit* ))) 


OPEN 

OPEN 

OPEN 

OPEN 

OPEN 

<2500 


rpm) 


■Open storage tank vent.") 
"Open vehicle tank vent.") 
■Open purrp circuit.") 

•Open main skid valve.") 
"Open final fill circuit." 
"Purrp slowly . ") 


(GET -CURRENT -VALUE 
(GET -CURRENT -VALUE 
(GET -CURRENT -VALUE 
(GET -CURRENT -VALUE 
{GET-CURRENT-VALUE 
(GET-CURRENT -VALUE ' DPX-103-M) ) ) 
* c (3000 rpm) "Punp moderately.") 

(NT 4) 

(GET-CURRENT-VALUE 
(GET-CURRENT-VALUE 
(GET-CURRENT -VALUE 
(GET-CURRENT-VALUE 
{GET-CURRENT-VALUE 
(GET-CURRENT-VALUE ' DPX-103-M) ) ) 


(L (SETQ 


*.el* 

*-cl* 

*.gl* 

*.11* 

*.kl* 


*.* 2 * 

*.c2« 

*.• 2 * 

*.g2* 

*.i2« 

*.k2« 


' DPX-102-M) 
9 DPX-104-M) 
9 PX-105-M) 

' PX-1 11-M) 

' DPX-1 13-M) 


' DPX-102-M) 
9 DPX-104-M) 
' PX-105-M) 

# PX-11 1-M) 

9 DPX-113-M) 


* . bl* 
*.dl* 
*.fl* 
* .hi* 


*.b2* 
*.d2* 
*.f2* 
*.h2* 
. j2* 


(GET-CURRENT 

(GET-CURRENT 

(GET-CURRENT 

(GET-CURRENT 

(GET-CURRENT 


VALUE r PX-101 -M) 
-VALUE 'PX-115-M) 
-VALUE 9 PX-106-M) 
-VALUE 9 PX-107-M) 
VALUE 9 PX-109-M) 


(GET-CURRENT* 

(GET-CURRENT* 

(GET-CURRENT- 

(GET-CURRENT* 

(GET-CURRENT- 


-VALUE 9 PX-101 -M) 
■VALUE 9 PX-115-M) 
■VALUE ' PX-106-M) 
■VALUE ' PX-107-M) 
VALUE 'PX-109-M) 


(C RPM-101 
(NT 4) 

(L (SETQ *.a3* 
*.c3* 
*.e3* 
*.g3* 
* -i3* 
*.k3* 


(3500 rpm) "Purrp rapidly.") 


(L 


(GET-CURRENT-VALUE 
(GET -CURRENT -VALUE 
(GET -CURRENT -VALUE 
(GET-CURRENT-VALUE 
(GET-CURRENT-VALUE 
(GET-CURRENT -VALUE __ 
auction -line -admit pressure drop 
(SETQ *.auct ion-1 ine-admit* (CAR ( 


' DPX-102-M) *.b3* (GET-CURRENT 

* DPX-104-M) * . d3* (GET-CURRENT 

'PX-105-M) * . f 3* (GET-CURRENT* 

'PX-1 11-M) *.h3* (GET-CURRENT* 

* DPX-113-M) * . J3* (GET-CURRENT- 

* DPX-103-M) ) ) 

r PX101 + _DPX104 - PX115 - 
•tat (.admittance* 


-VALUE ' PX-101-M) 
•VALUE 9 PX-115-M) 
■VALUE 9 PX-106-M) 
VALUE 'PX-107-M) 
VALUE ' PX-109-M) 

5" 


. c 2 * *.c3*)) 


(.mul * .FM103admi t* (mapcar f'sqrt (LIST *.kl* 
(.ad (/ -5 * .in-to-psi*) (mapcar #'- (mapcar #' 


.k2* * .k3* ) ) ) ; FM-103 flows 

(LIST *.bl* *.b2* *.b3*) (LIST *, 


(LIST *.dl* *.d2* *.d3*)))))) ; PX101 -f 

*.pump-t o-4 -way -admit* (CAR {.stat (.admittances 

(.mul * .FM103admit* (mapcar #'sqrt (LIST *.kl* *.k2* *.k3*))) 

(.ad (/ 19 *. in-to-psi*) (mapcar #'- (LIST *.el* *.e2* *.e3*) 

( LIST * . dl * * . d2 * * « d3 *)))))! * py i - 

*.PX105-to-PX106-admit* (CAR (.stat (..daitt.no.. 

(.mul * ,FM103admit* (mapcar f'sqrt (LIST *.kl* *.k2* *.k3*))> 

(.*d (/ 24 * * in-to-psi*) (mapcar #'- (LIST *.el* *.«2* *.e3*) 

(LIST *.fl* *. f2* * . £3* ) ) ) j ) ) • PX105 - 

*.transfer-Jine-admit* (CAR (.stat (.admittances 

{.mul * .FM102admit* (mapcar f'sqrt (LIST *.al* *.a2* *.a3*))) 

(.ad (/ -236 * .in-to-psi*) (mapcar f'- (LIST *.fl* * f2* * f3^) 

m ■ *’• ••»>•’>>■■■ ■ - 
(.mul * .FMl02admit* (mapcar f'sqrt (LIST *.al* *.a2* *.a3*))) 

(.ad (/ -1 *. in-to-psi*) (mapcar f'- (LIST *.gl* *.g2* *.g3*> 

(LIST * .hi* *.h2* * ,h3* ) ) ) ) ) ) . pvm - 

*.flnsl-fill- c ircult-sdmit * (CAR (.stat (.admittances 

(.mul *.FM1 02 admit* (mapcar f'sqrt (LIST * . *1* * . *2* * ,a3* ) ) ) 

*.12* *.13*)) * ‘“ d {/ ~ 3 *- in_t °-P si *) (mapcar (mapcar (LIST *. hi* *.h2* 

» dummv* ill . r b . . < Llsr *-jl* *.j2* *.j3*)))))> ; PX107 - 

•dummy 1)) , fake out the L-function 

(C RPM-101 (0 rpm) "Stop pumping.") 

(C SV-106 CLOSED "Reinitial ize . - ) 

<C SV-113 CLOSED -Reinitialize.-) 

<c SV-104 CLOSED "Reinitialize.") 

(C SV-107 CLOSED "Reinitielize. -) 

(CSV-111 CLOSED "Reinitialize."))) 

3 ' fl ° W ‘ nd calibrat ° th « other two skid edmittances. 

(deprocedure .ffl08 

~~ : pr e i € y - n ame "Calibrating SV-108's admittance.,.,- 
: act ions 

((L ( f ormat2 ' (Cal ibrat ing SV-108' s admittance ))) 

(C SV-106 OPEN "Open storage tank vent . ") 

(C SV-113 OPEN "Open vehicle tank vent.") 

(C SV-104 OPEN "Open punp circuit.") 

(C SV-108 OPEN "Open other skid valve.") 


DPX104 - 5" 

» FM-103 flows 

PX115 + 19- 

; FM-103 flows 

PX106 +24" 

* FM-102 flows 

10(111 - 236- 

; FM-102 flows 

PX107 - 1" 

r FM-102 flows 
*.h3*) (LIST *.i] 

DPX113 - PX109 - 



G:>morgan>lastlisp.7 


8/06/9215:29:36 Page 7 




(C SV-111 OPEN -Op«n final fill circuit.") 

(C RPM-101 (3500 rpm) "Pump rapidly.*) 

(WT 12) 

(L (SETQ * .al* (GET -CURRENT -VALUE 'DPX-102-M) 

(GET-CURRENT-VALUE 'PX-lll-M) *.hl* (GET-CURRENT- VALUE ' PX-107-M) ) ) 

(C RPM-101 (3000 rpm) "Pump moderately.*) 

(WT 4) 

(L (SETQ *.a2* (GET -CURRENT -VALUE 'DPX-102-M) 

*.<j2* (GET-CURRENT-VALUE 'PX-lll-M) *.h2* (GET -CURRENT -VALUE 'PX-107-M))) 

(C RPM-101 (2500 rpm) "Puirp slowly.") 

<WT 4) 

(L (SETQ *.a3* (GET-CURRENT -VALUE 'DPX-102-M) 

*.g3* (GET-CURRENT-VALUE 'PX-lll-M) *.h3* (GET -CURRENT -VALUE 'PX-107-M))) 

(L (SETQ * • ff-1 08-mdmi t * (CAR (.atat (.admittances (.mul * .FM102admit* (mapcar #'aqrt (LIST *.al* *.a2 
* *.a3*)>) / ffl-202 flow 

(.ad (/ -1 * • in-to-psi* ) (mapcar #'- (LIST *.gl* *.g2* *.g3*) (LIST *.hl* *.h2* * .h3*> )))))> ) / 


PX111 - PX107 - 1" 

(C RPM-101 (0 rpm) 

"Stop pumping.") 

(C 

SV-106 

CLOSED 

"Reinitialize. ") 

(C 

SV-113 

CLOSED 

"Reinitialize . ") 

(C 

SV-104 

CLOSED 

"Reinitialize.") 

(C 

5V-108 

CLOSED 

"Reinitialize. ") 

(C 

SV-111 

CLOSED 

"Reinitialize . ") ) ) 


(defprocedure .mcvlOl 

: pretty-name "Calibrating MCV-101'a admittance transfer function....” 
:actions 

( (L (format2 '(Calibrating MCV-101'a admittance transfer function....))) 


(C SV-106 
(C SV-113 
(C 5V-104 
(C SV-103 
(C MCV-101 (.30 %) 

(C SV-111 OPEN 
(C RPM-101 (3500 rpm) 


OPEN 

OPEN 

OPEN 

OPEN 


Open storage tank vent.") 

"Open vehicle tank vent.") 

"Open pump circuit.") 

•Speed up recirculation.") 

"Open replenish valve to 301") 

"Open final fill circuit.") 

"Pump rapidly.") 

(WT 25) 

(L (SETQ *.al* (GET-CURRENT -VALUE 'DPX-101-M) 

*.gl* (GET-CURRENT-VALUE 'PX-lll-M) *.hl* (GET-CURRENT -VALUE 'PX-107-M))) 

(C MCV-101 (.35 %) "Open replenish valve to 35%") 

(WT 25) 

(L (SETQ *.a2* (GET -CURRENT -VALUE 'DPX-101-M) 

*.g2* (GET-CURRENT-VALUE 'PX-lll-M) *.h2* (GET-CURRENT-VALUE 'PX-107-M))) 

(C MCV-101 (.40 %) "Open replenish valve to 40%") 

(WT 25) 

(L (SETQ *.a3* (GET -CURRENT -VALUE 'DPX-101-M) 

*.g3* (GET-CURRENT-VALUE 'PX-lll-M) *.h3* (GET -CURRENT -VALUE 'PX-107-M))) 

(L (set f admit (.admittances (.mul * . FMlOladmit * (mapcar #'sqrt (LIST *.al* *.a2* *.a3*))) 

(.ad (/ -1 *. in-to-psi*) (mapcar (LIST *.gl* *.g2* *.g3*) (LIST *.hl* 

*.h2* *.h3*)))> 

* .rmplmniah-circuit-sdmit* (.regres '(30. 35. 40.) admit))) 

(C RPM-101 (0. rpm) "Stop pumping.") 

CLOSED "Reinitialise.") 

CLOSED "Reinitialize.") 

CLOSED "Reinitialize.") 

CLOSED "Reinitialize.") 

CLOSED "Reinitialize.") 

"Reinitialize . ") ) ) 


(C SV-106 
(C SV-113 
(C SV-104 
(C SV-103 
(C SV-111 
(C MCV-101 (.0 %) 


fSS 4. Calibrate noxzlw and bleed valves, 
(defprocedure .nozzle 

ipretty-name "Calibrating nozzle admittance...." 
: act ions 


( (L ( format2 '(Calibrating nozzle admittance....))) 


(C SV-106 OPEN 
(C SV-113 OPEN 
(C SV-104 OPEN 
(C SV-107 OPEN 
(C SV-111 OPEN 
(C 5V-110 OPEN 
(C RPM-101 (3500 rpm) 

(WT 12) 

(L (SETQ *.al* (GET -CURRENT -VALUE 'DPX-102-M) 
*.il* (GET-CURRENT-VALUE 'DPX-113-M) 
(C RPM-101 (3000 rpm) "Pump moderately.") 

(WT 4) 

(L (SETQ *.a2* (GET-CURRENT-VALUE 'DPX-102-M) 


"Open storage tank vent.") 
"Open vehicle tank vent.") 
"Open pump circuit.") 

"Open main skid valve.") 
"Open final fill circuit.") 
"Open nozzle valve.") 

"Pump rapidly.") 


* .hi* 

*. jl* 


*.h2* 

351 


(GET-CURRENT-VALUE 'PX-107-M) 
(GET-CURRENT-VALUE 'PX-109-M))) 


(GET-CURRENT-VALUE 'PX-107-M) 


G : >morgan>lastlisp.7 


8/06/9215:29:36 Page 8 


*.12* (GET-CURRENT-VALUE 'DPX-113-M) * . j2* (GET-CURRENT-VALUE 'PX-109-M))) 

(C RPM-101 (2500 rpm) "Pump slowly.*) 

(WT 4) 

(L (SETQ *.a3* (GET-CURRENT -VALUE 'DPX-102-M) *.h3* { GET-CURRENT-VALUE 'PX-107-M) 

*.13* (GET-CURRENT -VALUE 'DPX-113-M) *.j3* (GET-CURRENT -VALUE 'PX-109-M))) 

;;; Nozzle flow - FH102 - vt_inlet_f low, and 

;;; nozzle pressure drop - vt_inlet_pressure (i.e., the nozzle vents to the atmosphere). 

(L (5ETQ * .nozzle -admit* (CAR (.stat (.admittances 

(mapcar #'- (.mul * .FM102admit* (mapcar 4'sqrt (format2 (LIST *.al* *.a2* *.a3*)))) ( . vt-inlet-f low) 

) / flow 

( .vt-inlet -pres sure) )))) ) / dP 


(C 

RPM-101 

(0 rpm) 

•Stop pumping, 


(C 

SV-106 

CLOSED 

•Reinitialize 

SV106. *) 

(C 

SV-113 

CLOSED 

■Reinitialize 

SV113 . ") 

(C 

SV-104 

CLOSED 

•Reinitialize 

SV104 . ") 

(C 

SV-107 

CLOSED 

■Reinitialize 

SV107 . ■ ) 

(C 

SV-111 

CLOSED 

•Reinitialize 

SVlll.*) 

(C 

SV-110 

CLOSED 

•Reinitial i ze 

SV110."))) 


; ; ? Vt_inlet_pressure - PX109 + DPX113. 

(defun .vt-inlet-pressure () 

(mapcar #' + (LIST *.jl* *.j2* *.j3*) (LIST *.il* *.i2* *.13*))) 

;;; Vt_inlet_f low - final_fill_circuit_admit * SQRT (PX107 - 3" - vt_inlet__pressure) . 

(defun .vt-inlet-f low () 

(.mul *. final- fill -circuit -admit* 

(mapcar #'eqrt (.ad {/ -3 * . in-to-psi*) (mapcar (LIST *.hl* *.h2* *.h3*) (.vt-inlet-pressure) 

))))) 


Multiply every element of a list by a scalar, 
(defun .mul (multiplier x) 

(mapcar #' (lambda (x) (* x multiplier)) x) ) 

;;; Add a scalar to every element of a list. 

{defun .ad (augend x) 

(mapcar #' (lambda (x) (4 x augend) ) x) ) 

(defprocedure .bleed 

:pretty-name "Calibrating bleed admittance...." 

: actions 

( (L (format2 '(Calibrating bleed admittance....))) 


(C SV-106 
(C SV-113 
(C SV-104 
(C SV-107 
<C SV-111 
(C SV-109 


OPEN 

OPEN 

OPEN 

OPEN 

OPEN 

OPEN 




') 


"Open storage tank vent. 
"Open vehicle tank vent. 
"Open pump circuit.*) 

"Open main skid valve.") 
"Open final fill circuit.") 
"Open bleed valve.") 

"Pump rapidly.") 


(C RPM-101 (3500 rpm) 

(NT 12) 

(L (SETQ *.al* (GET -CURRENT -VALUE 'DPX-102-M) *.hl* (GET-CURRENT-VALUE 'PX-107-M) 

*.il* (GET-CURRENT-VALUE 'DPX-113-M) *.jl* (GET-CURRENT-VALUE 'PX-109-M))) 

(C RPM-101 (3000 rpm) "Punp moderately.") 

(WT 4) 

(L (SETQ * .a2* (GET -CURRENT -VALUE 'DPX-102-M) *.h2* (GET -CURRENT-VALUE 'PX-107-M) 

*.i2* (GET-CURRENT-VALUE 'DPX-113-H) *.j2* (GET-CURRENT-VALUE 'PX-109-M))) 

(C RPM-101 (2500 rpm) "Pump slowly.*) 

(WT 4) 

(L (SETQ *.a3* (GET -CURRENT -VALUE 'DPX-102-M) *.h3* (GET-CURRENT-VALUE 'PX-107-M) 

* .13* (GET-CURRENT -VALUE 'DPX-113-M) *.j3* (GET-CURRENT -VALUE 'PX-109-M))) 

Bleed flow ■ FM102 - vt_inlet_f low, and 

bleed pressure drop - vt^inlet_presaure (l.e., the bleed valve vents to the atmosphere). 

(L (SETQ * .bleed-admit * (CAR (.stat (.admittances 

(mapcar #'- (.mul * ,FMl02*dmit * (mapcar #'sqrt (format2 (LIST *.al* *.a2* *.a3*)))) ( .vt-inlet-f low) 

flow 

(.vt-inlet-pressure)))))) • dP 


(C 

RPM-101 

(0 rpm) 

■Stop pumping 

") 

(C 

SV-106 

CLOSED 

"Reinitialize 

SV106. *) 

(C 

SV-113 

CLOSED 

"Reini tiali ze 

S V 113.") 

(C 

SV-104 

CLOSED 

"Reinitialize 

SV104 . " ) 

(C 

SV-107 

CLOSED 

"Reinitialize 

SV107. ") 

(C 

SV-111 

CLOSED 

“Reinitialize 

SVlll.") 

(C 

SV-109 

CLOSED 

"Reinitialize 

SV109- ") ) ) 


;;; 5. Redirect pump flow, and calculate recirculation- admit . 

(defprocedure .recirc 

:pretty-name "Calibrating recirculation path admittance...." 



G:>morgan>lasLUsp.7 


8/06/9215:29:36 Page 9 


i act Iona 
( (L (format 2 


{Calibrating recirculation path admittance....))) 


SV-106 
SV-113 
SV-104 
SV-103 
RPM-101 
(NT 12) 

(L (SETQ * 


(C 

(C 

(C 

(C 

<C 


OPEN 

OPEN 

OPEN 

OPEN 

(3500 

.al* 


rpm) 


"Open storage tank vent.") 
"Open vehicle tank vent.") 
■Open purrp circuit.") 
"Speed up recirculation.") 
"Punj> rapidly.") 


(GET-CURRENT-VALUE 'DPX-103-M) 

*.cl* (GET-CURRENT-VALUE 'DPX-104-M) 

(C RPM- 1 01 (3000 rpm) "Pump moderately.") 

(NT 4) 

(L (SETQ *.a2* (GET -CURRENT -VALUE * DPX-103-M) 

*.c2* (GET-CURRENT-VALUE 'DPX-104-M) 

(C RPM- 101 (2500 rpm) "Pun*> slowly.") 

(NT 4) 

*.a3* (GET-CURRENT -VALUE 'DPX-103-M) 

*.c3* (GET-CURRENT-VALUE 'DPX-104-M) 

* . fast-recirc* (CAR (.stat (.admittances 

(.mul * .FM103admit* (raapcar I'aqrt 


(L (SETQ 
(L (SETQ 
M-103 flow 


*.bl* 

(GET-CURRENT-VALUE 

'PX-101-M) 

*.fl* 

(GET-CURRENT-VALUE 

9 PX-106-M) ) ) 

*.b2* 

(GET-CURRENT-VALUE 

9 PX-101-M) 

* . £2* 

(GET-CURRENT-VALUE 

'PX-106-M) ) ) 

*.b3* 

(GET-CURRENT-VALUE 

'PX-101-M) 

*.f3* 

(GET-CURRENT-VALUE 

9 PX-106-M) ) ) 


(format2 (LIST *.al* *.a2* *.a3*)))) 


(C SV-103 CLOSED 


(mapcar (mapcar # ' - (LIST *.fl* *.f2* *.f3*) 

(LIST *.cl* *.c2* *.c3 *))))))) 

"Slow down recirculation.") 


(LIST *.bl* * .b2* * ,b3*) ) 
; PX106 - PX101 - DPX104 


(L 

(SETQ 

* .al* 

(GET-CURRENT-VALUE 

9 DPX-103-M) 

* . bl* 



*.cl* 

(GET-CURRENT-VALUE 

9 DPX-104-M) 

*.fl* 

(C 

RPM-101 (3000 rpm) "Pump moderately.") 


(NT 

4) 





(L 

(SETQ 

* . a2* 

(GET-CURRENT-VALUE 

* DPX-103-M) 

*.b2* 



* . c2* 

(GET-CURRENT-VALUE 

' DPX-104-M) 

*.f2* 

(C 

RPM-101 (3500 rpm) "Pujtj> rapidly.*) 


(NT 

4) 





(L 

(SETQ 

*.a3* 

(GET-CURRENT-VALUE 

9 DPX-103-M) 

*.b3* 



*.c3* 

(GET-CURRENT-VALUE 

9 DPX-104-M) 

* . f 3* 


(GET-CURRENT-VALUE 'PX-101-M) 
{GET-CURRENT-VALUE 'PX-106-M))) 


(GET-CURRENT-VALUE 'PX-101-M) 
(GET-CURRENT -VALUE 'PX-106-M))) 


(L (SETQ * .slow-recirc* 


M-103 flow 


(GET-CURRENT-VALUE 'PX-101-M) 
(GET-CURRENT-VALUE 'PX-106-M))) 

(CAR (.stat (.admittances 

(•mul * . FM103admit* (mapcar #'sqrt (format 2 (LIST *.al* i 


.a2* * .a3*) ) ) ) 


(mapcar #'- (mapcar (LIST *.fl* *.f2* *.f3*) (LIST *.bl* *.b2* *.b3*)) 

(LIST *.cl* *.c2* * .c3*> )))))) ; PX106 - PX101 - DPX104 

*. recircul at ion- admit * is a transfer function, mx+b, where m ■ 1 with SV103 open or 0 when closed: 

tire* *. fast-recirc*) )) ) 


(L 

(SETQ * 

. recircul at ion-admi t* 

( . regres 9 (0. 1 . 00) 

(LIST * • slow* 

(C 

RPM-101 

(0 rpm) 

"Stop pumping 

.") 

(C 

SV-106 

CLOSED 

"Reinitialize 

SV-106.") 

(C 

SV-113 

CLOSED 

"Reinitialize 

SV-113.") 

(C 

SV-104 

CLOSED 

"Reinitialize 

SV-104.") 

(C 

SV-103 

CLOSED 

"Reinitialize 

SV-103.") ) ) 


; ; ; 6. Calibrate all derived admittances. 

(defun .lnseries (x y) 

( format2 (/ 1.0 (sqrt (+ (/ 1.0 (* x x) ) (/ 1.0 {* y y) ) ) ) ) ) ) 

(defun .inparallel (x y) 

(format2 (+ x y) ) ) 


(defun .xferfen (equation percent) /// equation of the form (y- *x+ tr- ) 

(4 (* percent (CAR equation)) (CADR equation))) percent ranges from 0. to 1.00 

(defprocedure .derived 

iPRETTY-NAME "Calculating 5 derived admittances." 

I ACTIONS 

( (L (format 2 * (Calibrating 5 derived admittances....))) 

(L (SETQ * .pump-circuit -admit* (.inseries * .pump-to-4-way-admit* 

(.inseries *. suet ion- line-admit* * .PX105-to-PX106-admit* ) ) 

* • faat-fill-circuit-admit* * . f f-107-admit* ; / only primary fa»t-fill valve is open usually 
* . skid-admi t * (.inparallel *.fast-fill-circuit-admlt * (.xferfen * . replenish-circuit-admit * 0.3 

3 )) 

*. upper- fill-circuit -admit* (.inseries * . akid-mdmit* *. final -fill -circui t -admit* > 

*. tank-fill -admit * (.inseries *. upper-fill -circuit -admit* * . transfer-line-admit*) ) ) ) ) 

;;; 1 . Print out all 14 admittances.... 

(defun .prtem () 

(PROGn 

(format 2 (LIST ' st -up- admit- * . st-up-admit* ) ) 


353 


G:>morgan>IasUisp.7 


8/06/9215:29:36 Page 10 


( format 2 
(format2 
( format 2 
( format 2 
( format 2 
( f ormat2 
( format 2 
( format2 
(format2 
( format 2 
<format2 
(format 2 
(format2 
( format2 
( format2 
( format2 
{ format 2 
(format2 
( format 2 
(format2 


(LIST * vt-up-admi t- 
(LIST ' at“V«nt - admit- 
(LIST * vt -vent -admit - 
(LIST * suction-line-admit- 
(LIST * pump-to- 4-way -admit* 

(LIST ' PX105-to-PX106-admit« 
(LIST * transfer-line-admit* 

(LIST * f f-107-*dmit« 

(LIST ' ff-108-admit- 

(LIST ' final-fill-circuit-admit- 

(LIST ' replenish-c ircu it -admit - 

(LIST ' noisle-admit- 

(LIST 9 bleed-admi t- 

(LIST 9 recirculat ion-admit* 

(LIST # pump-ci rcui t -admit* 

(LIST 9 fast-f ill-circuit-admit* 
(LIST 9 skid-admit* 

(LIST 9 upper-f ill-circuit -admit* 
(LIST ' tank-f ill-admit* 

(LIST ' pump-xf r-f cn* 


* . vt -up-admi t * ) ) 

* . st -vent -admi t * ) ) 

* .vt-vent -admit*) ) 

* . suction-llne-admit* ) ) 

* , pump- t o-4 -way-admit*) ) 

* .PX1 05-to-PXl 06-admit * ) ) 

* . transfer-1 ine-admit* ) ) 

* . f f-1 07-admi t * ) ) 

* . ff-108-admit * ) ) 

* . final-f ill-circuit-admit*) ) 
* . replenish-circuit-admit*) > 

* .nozzle-admit*) ) 

* . blood -admi t* ) ) 

* . recirculation-admit*) ) 

* . pump-circuit -admit*) ) 

* . fast-f ill-circuit-admit*) ) 

* . skid-admit*) ) 

* .upper-f ill-circuit -admit*) ) 
* . tank-fill-admit*) ) 

* .pump-xfer-fcn*) ) ) ) 


(defun .see-press () 
(PROGn 


( format 2 

(LIST 

9 * . a** 

* . al* 

*.a2* 

* • a3* ) ) 

(format2 

(LIST 

•*.b*« 

* .bl* 

*.b2* 

* . b3* ) ) 

( format 2 

(LIST 

'*.c*~ 

*.cl* 

*.c2* 

* . c3* ) ) 

( format. 2 

(LIST 

' *.d** 

* .dl* 

* .d2* 

* . d3* ) ) 

( f orrmat 2 

(LIST 

' *.e** 

* .el* 

*.e2* 

* • ®3* ) ) 

(format 2 

(LIST 

'*.f*- 

*.fl* 

* . f 2* 

* . f 3* ) ) 

( format2 

(LIST 

'*.g*- 

*.gl* 

* . g2* 

*.g3*)> 

( format2 

(LIST 

' *.h*« 

* . hi* 

*.h2* 

* . h3* ) ) 

{ format2 

(LIST 

'*.!*- 

*.il* 

* . i 2* 

*.13*)) 

(format2 

(LIST 

'*. j*- 

*. jl* 

*. j 2* 

•- j3*)> 

(format2 

(LIST 

9 * . k*« 

* . kl * 

* . k2* 

* . k3* ) ) 


(do f procedure bob 


tactions 


<(L (set f aaaaa nil)) 

(REPEAT 5 

(L (scl tbeep) ) 

(WT 2) 

(L (aetf aaaaa (cons 9 f f aaaaa)))))) 


;j; 8. Calibrate pump transfer function.... 


(def procedure .pump-data 

:PRETTY-NAME "Calibrate pump transfer function." 
: ACTIONS 


( (L (format2 "Calibrating pump transfer function....")) 

(C SV-106 OPEN "Open storage tank vent.") 

(C SV-113 OPEN "Open vehicle tank vent.*) 

(C 5V-104 OPEN "Open pump circuit.") 

(C 5V-107 OPEN "Open main skid valve.") 

(L (SETQ * .PX-105* nil *. pump-speed* 1800 *.PX-115* nil * .pmp-spd-liat * nil)) 
(C 5V-U1 OPEN "Open final fill circuit.") 

(REPEAT 19 

"Ramp it up 


(C RPH-101 * .pump-speed* 
(WT 4) 

(L (SETQ *. PX-105* 

* .PX-11 5* 

* . pmp- spd- list* 
* . pump- speed* 


) ; ; can't vary speed In a REPEAT yet. 

;; Steve Morgan, 15 July 1992 
(CONS (GET -CURRENT- VALUE 'PX-105-M) *. PX-105*) 

(CONS (GET-CURRENT-VALUE 'PX-115-M) *.PX-115*) 

(CONS * .pump-speed* * .pmp-spd-liat*) 

(♦ 100 * .pump- speed* ) 


* . dummy * 0 ) ) ) 

; Add file access functions to save *. PX-11 5*, *. PX-11 5*, 


(C RPM-101 (0 rpm) 
(C SV-106 CLOSED 
(C SV-113 CLOSED 
(C SV-104 CLOSED 
(C SV— 107 CLOSED 
(C SV-111 CLOSED 


"St op pumpi ng . * ) 

"Close storage tank vent,") 
"Close vehicle tank vent.") 
"Shut down pump circuit.") 
"Close main skid valve.") 
"Close final fill circuit."))) 


and * . pmp-spd-li st * later. 


{defun .pump-analysis {) 

/ Add file access functions to obtain *.PX-115*, *.PX-115*, and * .pmp- spd- list* later, 

(SETQ * .pump-xfer-fcn* {.regres *. pmp-spd-li st* (.ad (/ 19 * . in-to-psl*) (mapcar #'- *. PX-105* 
5*))))) 

/ (test-fit ( format 2 *. pmp-spd-li st * ) <format2 {.ad (/ 19 * . in-to-psi *) (mapcar #'- *. PX-105* * 


*. PX-11 
PX-11 5* 


G:>morgan>lasilisp.7 


8/06/9215:29:36 Page 11 


))))))) IS it 

(defprocedure .done 

: PRETTY-NAME "All done, thanks. - 

: ACTIONS 

<(L < . prtem) ) ) ) 

(defun .test-it-all () 

(PROGn 

(test-fit ' (1 2.5 3) ' (2 3 4)) 
(• test-press) 

( .test -depress) 

( .test -Fast -Flow) 

(.test-fflOa) 

( . test-mcvlOl) 

( .test-nozzle) 

( .test -bleed) 

( . test-recirc) ) ) 

(defprocedure .do-it-all 
: actions 

( (proc .pressurize) 

(L (.see-press)) 

(proc .depressurize) 

(L (.see-press)) 

(proc .fastflow) 

(L (.see-press)) 

(proc .ffl08) 

(L (.see-press)) 

(proc .mcvlOl) 

(L ( .see-press) ) 

(proc .nozzle) 

(L ( . see-press) ) 

(proc .bleed) 

(L (.see-press)) 

(proc .recirc) 

(L (.see-press)) 

(proc .derived) 

(L (.see-press)) 

(proc .done))) 




STEVE' S STATISTICS LIBRARY 


f i i Optionally change to log (base e) or log-log graph. . . 

(defun . logem (x) 

(mapcar * log x) ) 

;;/ Regression line: y~a+bx, r- ... 

(defun .regres (x y) 

(format 2 (list (.slope (length x) (.sum x) (.sum y) ( . sumsqr x) ( . sumxy x y) ) 

(.y-intcpt (length x) (.sum x) (.sum y) (.slope (length x) (.sum x) (.sum y) (.sumsqr x) 

( . sumxy x y) ) ) 

{.correl (length x) (.sum x) (.sum y) ( . sumsqr x) (.sumsqr y) (.sumxy x y)) 

' (Y* *X+ 4R= ) ) ) ) 

iii Slope , b » (n * sumxy - sumx * sumy) / (n * sumxsgr - ju/nx * sumx) . .. 

(defun .slope (n sx sy sx2 sxy) 

</ (- (* n sxy) (* sx sy) ) 

(- (* n sx2) (* sx sx) ) ) ) 

• a Y-intercept, a * (sumy - b * sumx) / n... 

(defun .y-intcpt (n sx sy b) 

(/ (- sy (* b sx)) 
n)) 

a; Correlation , r » (n * sumxy - sumx * sumy) / sgrtf (n * sumxsqr - sumx * sumx; ( n * sumysqr - sumy 

* sumy ) ] , . . 

(defun .correl (n sx sy sx2 sy2 sxy) 

(/ (- (* n sxy) (* sx sy) ) 

(sqrt (* {- (* n sx2) (* sx sx) ) 

(- (* n sy2) (* sy sy) ) ) ) ) ) /' 


355 


G:>morgan>iasUisp.7 


8/06/9215:29:36 Page 12 


;;; Mean * n... 

(defun .sub (x) 

(cond ((null x) 0.0) 

( (atom x) x) 

(t (apply ' + (mapcar 



. sum x) ) ) ) ) 


;;s Variance * n... 

(defun .sumsqr (x) 

(cond ((null x) 0.0) 

( (atom x) (* x x) ) 

(t (apply '+ (mapcar '.sumsqr x) ) ) ) ) 

SIS Covariance... 

{defun . sumxy (x y) 

(cond ((null x) 0.0) 

( (atom x) (+ x y) ) 

(t (apply # + (mapcar '.sumxy x y) ) ) ) ) 

s * : True Mean . . . 

(defun .mean (x) 

(/ (.sum x) (length x))) 


; / ; Standard Deviation. . . 

(defun . sd (x) 

(- </ (sqrt (.sumsqr x) ) (length x) } (.mean x) ) ) 


Print elementary statistics..,, 
(defun . stat (x) 

(format2 (list (.mean x) 

(.sd x) 

'(mean* 6 s.d.« )))) 


;;; Reference: JE Freund 6 RE Walpole: Mathematical Statistics , 3rd Ed., P-H, 1972. 



356 



APPENDIX B 


CALIBRATOR OUTPUT LISTING 


357 


G:>morgan>answersXlSP.6 


8/06/9215:53:00 Pagel 


(CALIBRATING ST- 6 VT -UP -ADMIT ) 

(CALIBRATING ST- 6 VT-UP-ADMIT . . . . ) 
(CALIBRATING ST- 4 VT-UP-ADMIT....) 
(CALIBRATING ST- 6 VT-UP-ADMIT....) . , 

(1.3197069 2.6096394 3.0703947) T*** 

(12.209784 11.929865) 

<20.680294 27.39016 26.129604) 

(2.2796974 -0.6677079 (MEAN- 6 S.D.- )) 

(1.2394838 2.4679117 3.6852646) 

(15.271193 15.133762) J 

(68.76051 67.53209 66.31471) . 

(1,0416097 -0.539395 (MEAN- 4 S.D.- )) ' 

(1.3197069 2.6098394 3.8703947) 

(12.209704 11.929865) 

<28.680294 27.39016 26.129604) 

(2.2796974 -0.6677079 (MEAN- 4 S.D.- )) 

(1.2394838 2.4679117 3.6652846) 

(15,271193 15.133762) 

(68.76051 67.53209 66.31471) 

(1.8416097 -0.539395 (MEAN- 4 S.D.- )) 

(CALIBRATING ST- 4 VT -VENT -ADMIT. . . . ) 
(CALIBRATING ST- 6 VT- VENT -ADMIT. . . . ) 

(CALIBRATING ST- 6 VT -VENT -ADM I T ) 

(CALIBRATING ST- C VT-VENT-ADMIT. . . . ) 
(3.7532054 3.2441072 2.771594) 

(4.81885 4.4718537) 

(3.7532854 3.244107 2 2.771594) 

(2.4850721 -0.7278601 (MEAN- 4 S.D.- )) 

(3.6191034 2.8400812 2.153575) 

<9.684409 8.534298) 

<3.6191034 2.8400812 2.153575) 

(5.0773726 -1.4871159 (MEAN- 4 S.D.- )) 

(3.7532854 3.2441072 2.771594) 

(4.81885 4.4718537) 

(3.7532854 3.2441072 2.771594) 

(2.4850721 -0.7278601 (MEAN- 4 S.D.- )) 

(3.6191034 2. 8400812 2.153575) 

(9.684409 8.534298) 

(3.6191034 2.8400812 2.153575) 

(5.0773726 -1.4871159 (MEAN- 4 S.D.- )) 

(CALIBRATING 6 FAST-FILL PATH ADMITS ) 

(CALIBRATING 6 FAST-FILL PATH ADMITS ) 

(CALIBRATING 6 FAST-FILL PATH ADMITS ) 

(CALIBRATING 6 FAST-FILL PATH ADMITS....) 


(13.699469 16.86502 19.976784) 

(0.91344094 1.2903118 1.8511173) 

(14.62123 -6.178755 (MEAN- 4 S.D.- )) 

(13.699469 16.86502 19.976784) 

(23.071518 33.07944 44.906635) 

(2.9218197 -1.2346271 <MEAN-__ 4 S.D.-_)) 
(13.699469 16.86502 19.976784) 

(5.7749076 8.752077 12.279726) 

(5.7007403 -2.4094164 (MEAN- 4 S.D.- )) 

(6.6208023 8.447623 10.216957) 

(7.8893814 12.8127365 18.742004) 

(2.3600085 -0.9974568 (MEAN- 4 S.D.- )) 

(6.6288023 8.447623 10.216957) 

(1.1949272 1.9406204 2.8330002) 

(6.066092 -2.5638316 (MEAN- 4 S.D.-_)) 

(6.6288023 8.447623 10.216957) 

(0.88412863 1.4795318 2.1698658) 

(6.976916 -2 . 9486809 (MEAN- 4 S.D.- )) 

(13.699469 16.86502 19.976784) 

(0.91344094 1.2903118 1.8511173) 


(14.62123 -6.178755 (MEAN- 4 S.D.- )) 

(13.699469 16.86502 19.976784) 

(23.071518 33.07944 44.906635) 

(2.9218197 -1.2346271 (MEAN- 4 S.D.- )) 

(13.699469 16.86502 19.976784) 

(5.7749076 8.752077 12.279726) 

(5.70Q7403 -2.4094164 (MEAN- 4 S.D-* )) 

(6.6288023 8.447623 10.216957) 

(7.8893814 12.8127365 18.742004) 

(2.3600085 -0.9974560 (MEAN= 4 S.D.* )) 

(6.6288023 8.447623 10.216957) 

(1.1949272 1.9406204 2.8330002) 



G:>morgan>axiswersXISP»6 


8/06/92 15:53:00 Page 2 


(6. 066092 -2.5638316 (MEAN-_ £ S.D.- )) 

(6.6288023 8.447623 10.216957) 

(0.88412863 1.4795318 2.1698658) 

(6.976916 -2.9486809 (MEAN- 4 S.D.- )) 

(CALIBRATING SV-108 'S ADMITTANCE ) 

(CALIBRATING SV-108 'S ADMITTANCE ) 

(CALIBRATING SV-108 'S ADMITTANCE ) 

(CALIBRATING SV-108 'S ADMITTANCE....) 

(10.22679 8.358611 6.4019327) 

(2.5856705 1.735714 1.0150461) 

<6.3529034 -2.685051 (MEAN- 6 S.D.- )) 

(10.22679 8.358611 6.4019327) 

(2.5856705 1.735714 1.0150461) 

(6.3529034 -2.685051 (MEAN- 6 S.D.- )) 

(CALIBRATING MCV-101 # S ADMITTANCE TRANSFER FUNCTION ) 

(CALIBRATING MCV-101 'S ADMITTANCE TRANSFER FUNCTION > 

(CALIBRATING MCV-101 'S ADMITTANCE TRANSFER FUNCTION ) 

(CALIBRATING MCV-101 'S ADMITTANCE TRANSFER FUNCTION > 

(0.37875423 0.7495712 1.1039773) 

(7.905173 7.5464616 7.149731) 

(0.027816162 -0.7000845 0.99999374 (Y-__*X+__4R- )> 

(0.37875423 0.7495712 1.1039773) 

(7.905173 7.5464616 7.149731) 

(0.027816162 -0.7000845 0.99999374 (Y-__*X+_4R« >) 

(0.378754230.74957121.1039773) 

(7.905173 7.5464616 7.149731) 

(0.027816162 -0.7000845 0.99999374 (Y- *X+ 4R- )) 

(0.37875423 0.7495712 1.1039773) 

(7.905173 7.5464616 7.149731) 

(0.027816162 -0.7000845 0.99999374 (Y*= *X+ 4R- )) 

(CALIBRATING NOZZLE ADMITTANCE ) 

(CALIBRATING NOZZLE ADMITTANCE....) 

(CALIBRATING NOZZLE ADMITTANCE ) 

(CALIBRATING NOZZLE ADMITTANCE ) 

(7.8357015 5.238446 3.0496871) 

(-0.0586195 0.065597534 0.042866707) 

(0.5412985 0.5452448 0.52057886) 

(0.02285788 0.021576738 (MEAN- 6 S.D.- )> 

(7.8357015 5.238446 3.0496871) 

(-0.0586195 0.065597534 0.042866707) 

(0.5412985 0.5452448 0.52057886) 

(0.02285788 0.021576738 (MEAN- 6 S.D.- )) 

(CALIBRATING BLEED ADMITTANCE....) 

(CALIBRATING BLEED ADMITTANCE....) 

(CALIBRATING BLEED ADMITTANCE ) 

(CALIBRATING BLEED ADMITTANCE....) 

(7.8169947 5.2061214 3.0175722) 

(0.055433273 0.071427345 0.036339283) 

(0.62161875 0.6242012 0.59833926) 

(0.0692315 -0.027968463 (MEAN- 6 S.O.- )) 

(7.8169947 5.2061214 3.0175722) 

(0.055433273 0.071427345 0.036339283) 

(0.62161875 0.6242012 0.59633926) 

(0.0692315 -0.027968463 (MEAN- 4 S.D.- )) 

(CALIBRATING RECIRCULATION PATH ADMITTANCE..,.) 
(CALIBRATING RECIRCULATION PATH ADMITTANCE....) 
(CALIBRATING RECIRCULATION PATH ADMITTANCE....) 
(CALIBRATING RECIRCULATION PATH ADMITTANCE....) 

(30.0 30.0 28.974215) 

(20.539597 20.539597 20.185389) 

(15.253061 11.207141 7.769389) 

(6.2120996 -2.5950906 (MEAN- 4 S.D.«_)) 

(30.0 30.0 28.974215) 

(20.539597 20.539597 20.185389) 

(15.253061 11.207141 7.769389) 

(6.2120996 -2.5950906 (MEAN- 4 S.D.«_)) 

(4.361521 6.2761393 8.543359) 

<7.8315954 9.394584 10.960884) 

(21.331217 30.704245 41.794704) 

(1.695516 -0.71660936 (MEAN- 4 S.D.- )) 

(4.361521 6.2761393 8.543359) 

(7.8315954 9.394584 10.960884) 

(21.331217 30.704245 41.794704) 

(1.695516 -0.71660936 (MEAN- 4 S.D.-_)) 

(4.5165834 1.6955161 1.0 (Y-_*X + 4R- )) 

(4.5165834 1.6955161 1.0 (Y-_*X+ 4R-_J ) 


359 


G : >morgan>answers.LISP.6 


8/06/9215:53:00 Page 3 


(4.5165834 1.6955161 1.0 (Y"- «X+ *R- )) 

(4.5165834 1.6955161 1.0 (Y- »X+ 4R- )) 

(CALIBRATING 5 DERIVED ADMITTANCES ) 

(CALIBRATING 5 DERIVED ADMITTANCES ) 

(CALIBRATING 5 DERIVED ADMITTANCES....) 

(CALIBRATING 5 DERIVED ADMITTANCES. . . . ) 

5.31131 

2.5600226 

5.375187 

4.2560447 

2.0641644 

5.31131 

2.5600228 

5.375187 

4.2580447 

2.0641644 

(ST -UP -ADMIT" 2.2796974) 

(VT -UP -ADMIT- 1.8416097) 

(ST-VENT-ADMIT- 2.4850721) 

(VT-VENT-ADMIT- 5.0773726) 

(SUCTION-LINE -ADMIT- 14.62123) 

(PUMP -TO- 4 -WAY- ADMIT- 2.9218197) 

(PX105-TO-PX106-ADMIT- 5.7007403) 

(TRANSFER -LINE -ADMIT- 2.3600085) 

(FF -10 7 -ADMIT* 6.066092) 

(FF-1 08 -ADMIT* 6.3529034) 

(FINAL-FILL-CIRCUIT-ADMIT- 6.976916) 

(REPLENISH-CIRCUIT-ADMIT- (0.027816162 -0.7000845 0.99999374 (Y- *X+ 6R- ))) 

(NOZZLE- ADMIT* 0.02285788) 

(BLEED -ADMIT- 0.0692315) 

(RECIRCULATION-ADMIT- (4.5165834 1.6955161 1.0 (Y- *X+ 6R- ))) 

(PUMP-CIRCUIT-ADMIT* 2.5600228) 

(FAST-FILL-CIRCUIT -ADMIT- 6.066092) 

(SKID-ADMIT- 5.375187) 

(UPPER-FILL-CIRCUIT- ADMIT- 4.2580447) 

(TANK-FILL-ADMIT* 2.0641644) 

(PUMP -XFR-FCN* NIL) ) »• > { * ** 

(ST-UP-ADMIT* 2.2796974) 

(VT-UP- ADMIT* 1.8416097) 

(ST-VENT-ADMIT* 2.4850721) 

(VT-VENT-ADMIT* 5.0773726) 

(SUCTION-LINE -ADMIT- 14.62123) 

(PUMP - TO-4 -WAY-ADMIT- 2.9218197) 

(PX105-TO-PX106-ADMIT* 5.7007403) 

(TRANSFER- LINE- ADMIT- 2.3600085) 

(FF-107-ADMIT* 6.066092) 

(FF-108-ADMIT* 6.3529034) 

(FINAL-FILL-CIRCUIT-ADMIT- 6.976916) 

(REPLENISH-CIRCUIT-ADMIT* (0.027816162 -0.7000845 0.99999374 (Y* *X+ 6R- ))) 

(NOZZLE -ADMIT- 0.02285788) 

(BLEED- ADMIT- 0.0692315) 

(RECIRCULATION-ADMIT- <4.5165834 1.6955161 1.0 (Y« *X+ *R- ))) 

(PUMP-CIRCUIT-ADMIT- 2.9600228) 

(FAST-FILL-CIRCUIT-ADMIT- 6.066092) 

(SKID-ADMIT* 5.375187) 

(UPPER-FILL-CIRCUIT-ADMIT* 4.2580447) 

(TANK-FILL-ADMIT* 2.0641644) 

(PUMP -XFR-FCN- NIL) 

(ST-UP-ADMIT* 2.2796974) 

(VT -UP -ADMIT* 1.8416097) 

(ST-VENT-ADMIT* 2.4050721) 

(VT-VENT-ADMIT- 5.0773726) 

(SUCTION-LINE -ADMIT- 14.62123) 

(PUMP -TO-4 -WAY-ADMIT- 2.9218197) 

(PX105-TO-PX106-ADMIT- 5.7007403) 

( TRANSFER- LINE-ADMIT- 2.3600085) 

(FF-1 07 -ADMIT* 6.066092) 

(FF-108-ADMIT* 6.3529034) 

(FINAL-FILL-CIRCUIT-ADMIT- 6.97 6916) 

(REPLENISH-CIRCUIT-ADMIT- (0.027816162 -0.7000845 0.99999374 (Y- *X+ tR- ))) 

(NOZZLE-ADMIT- 0.02285788) 

(BLEED -ADMIT- 0.0692315) 

(RECIRCULATION-ADMIT- (4.5165834 1.6955161 1.0 (Y- *X+ 4R- ))) 

(PUMP-CIRCUIT-ADMIT- 2.5600228) 

(FAST-FILL-CIRCUIT-ADMIT- 6.066092) 

(SKID-ADMIT* 5.375187) 




G :>roorgan>answersXISP.6 


8/06/92 15:53:00 Page 4 


(UPPER-FILL-CIRCUIT-ADMIT- 4.2580447) 

(TANK -FILL- AD KIT- 2.0641644) 

(PUMP -XFR-FCN- NIL) 

(ST-UP-ADMIT- 2.2796974) 

(VT-UP-ADMIT- 1.8416097) 

(ST -VENT -ADMIT- 2.4850721) 

(VT -VENT -ADM IT- 5.0773726) 

(SUCTION-LINE -ADMIT- 14.62123) 

(PUMP -TO-4 -WAY-ADMIT- 2.9218197) 

(PX105-TO-PX1 06-AD MIT- 5.7007403) 

(TRANSFER- LINE- ADMIT- 2.3600085) 

(FF-1 07 -ADMIT- 6.066092) 

(FF-1 08 -ADMIT- 6.3529034) 

(FINAL-FILL-CIRCUIT- ADMIT- 6.976916) 

(REPLENISH-CIRCUIT-ADMIT- (0.027816162 -0.7000845 0.99999374 <Y- *X+ 

(NOZZLE -ADMIT- 0.02285788) 

(BLEED-ADMIT- 0.0692315) 

(RECIRCULATION-ADMIT- (4.5165834 1.6955161 1.0 (Y- *X+ «R- ))) 

(PUMP -CIRCUIT -ADMIT- 2.5600228) 

(FAST-FILL-CIRCUIT -ADMIT- 6.066092) 

(SKID -ADMIT- 5.375187) 

(UPPER-FILL-CIRCUIT-ADMIT- 4.2580447) 

(TANK-FILL- ADMIT- 2.0641644) 

(PUMP-XFR-FCN- NIL) 


*R-_) ) ) 


361 


REFERENCES 


|1J Steve Morgan: KATE’s Model Verification Tools. University of Central 
Florida s 1992 NASA/ASEE Summer Faculty Fellowship Program, Contractor 
Report No. NASA-NGT-60002, Supplement 6, August 9, 1992. 


[2| John K. Vennard: Elementary Fluid Mechanics. 4th Ed., New York, Wiley, 
1 963 , p. 280. 


[3] Bob Merchant: “The initial phase of the admittance calculator ” In 
G:>KATE>DOC>ALO>ADMITTANCE-CALCULATOR.LISP.9, April 5, 1992. 

[4] Bob Merchant’s ALO Knowledge Base File G:>KATE>ALO-KB>FLUIDS- 
PRESSURES.LISP. 1 8, March 4, 1992. 


|5| Bob Merchant s ALO Knowledge Base File G:>KATE>ALO-KB>ADMnTANCES 
.LISP, 23, June 4, 1992. 


[6] Bob Merchant’s ALO Knowledge Base File G:>KATE>ALO-KB>FLOW-RATES- 
PRESSURES.LISP.15, January 20, 1992. 

1972 JE FreUnd & RE Walpole: “Mathematical Statistics,” 3rd Ed., Prentice-Hall, 


|8J Bob Merchant’s ALO Control Procedures File: G:>KATE>ALO-KB>CONTROl - 
PROCEDURES .LISP.4I, March 6, 1992. 

[9J Steve Morgan’s Automatic Admittance Calibrator Program Listine- 
G:>MORGAN>LAST.LISP.7, August 6, 1992. 8 ' 

[10] Steve Morgan’s Calibrator Output Listing: G:>MORGAN>ANSWERS LISP 6 

August 6, 1992. ' ’ 

[11] Bob Merchant’s ALO Knowledge Base File G:>KATE>ALO-KB>ALO- 
H20.LISP.37, May 8, 1992. 

[12] Bob Merchant: ALO Admittance Plots And Calculations Notebook” 63dd 

January 1, 1992. ’ 

[13] Steve Beltz Personal Communication on “Sensor Tolerances.” July 15, 1992 



362 


