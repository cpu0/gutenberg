1.4 Facility Targeting, Protection and Mission Decision Making Using the 
VISACCode 


Facility Targeting, Protection and Mission Decision Making Using the 

VISAC Code 

Robert H. Morris & C. David Sulfredge 
Oak Ridge National Laboratory 
MornsRH(d)ornl gov SulfredaeCD(3)orni gov 


The Visual Interactive Site Analysis Code (VISAC) has been used by DTRA and several other agencies to aid in targeting facilities 
and to predict the associated collateral effects for the go, no go mission decision making process. VISAC integrates the three 
concepts of target geometric modeling, damage assessment capabilities, and an event/fault tree methodology for evaluating 
accident/incident consequences. It can analyze a variety of accidents/incidents at nuclear or industrial facilities, ranging from simple 
component sabotage to an attack with military or terrorist weapons. For nuclear facilities, VISAC predicts the facility damage, 
estimated downtime, amount and timing of any radionuclides released. Used in conjunction with DTRA s HPAC code, VISAC also 
can analyze transport and dispersion of the radionuclides, levels of contamination of the surrounding area, and the population at 
risk VISAC has also been used by the NRC to aid in the development of protective measures for nuclear facilities that may be 
subjected to attacks by car/truck bombs 


1.0 INTRODUCTION 

The Visual Interactive Site Analysis Code 
{VISAC) is a Java-based graphical expert 
system developed by ORNL for the Defense 
Threat Reduction Agency (DTRA), Nuclear 
Regulatory Commission (NRC) and other 
sponsors. VISAC provides security 
specialists and mission planners with a 
coordinated capability to predict and 
analyze the outcomes of different 
accidents/incidents at nuclear and industrial 
facilities. Damage to the facility structures 
and critical components is calculated by 
using blast correlations to scale from 
experimental test data for effects such as 
concrete wall breach [1], The incidents 
modeled in VISAC can range from simple 
individual equipment sabotage to complex 
scenarios that utilize a range of military 
weapons, simulated truck or car bombs, or 
satchel charges. The target facility is 
generated by either customizing existing 3- 
D CAD models for near real-time analysis or 
creating a new model from scratch. Using 
event/fault tree methodology, VISAC 
provides the probability of facility kill, the 
probability of undesirable collateral effects 
(chemical or radiological releases), and an 
estimate of facility downtime. VISAC is 
supplied with a library of models that can be 
customized by the user in both geometry 
and logic using the code’s graphical editing 
features to approximate a number of 


facilities of interest. Most VISAC scenarios 
can be run in a few seconds on a modern 
laptop PC. 

2.0 VISAC 

To be an effective tool for targeting, facility 
protection, and mission decision making, 
VISAC must efficiently integrate the three 
concepts of target modeling, blast damage 
assessment and event/fault tree 
consequence analysis into a user-friendly, 
operational code. Facility geometric 
information for both critical component 
locations and structural details of nuclear 
facility buildings is stored by VISAC in text 
fifes compatible with the BRL-CAD format 
used in the weaponeering community [2]. 
VISAC uses algorithms similar to those from 
the EVA-3 D/M EVA [3, 4] weapons effects 
codes for damage assessment. Kill 
probabilities calculated from the damage 
algorithms for each individual critical 
component are then fed back to event/fault 
tree models to determine the overall effect 
of the component damage on the facility 
and the expected downtime. 

2.1 Blast Modeling in VISAC 

VISAC must be able to quickly calculate 
blast damage to building structures and also 
plant critical components to determine the 
resulting operational condition of the facility 
and to calculate any possible collateral 


23 



effects. There are two common approaches 
for numerical modeling of blast effects: One 
method involves hydrocodes such as CTH 
and DYNA-3D, which are based on first- 
principle solutions for the conservation 
equations of mass, momentum, and energy 
in the shock wave interactions, combined 
with sophisticated equations of state for the 
materials involved. While hydrocode 
calculations are excellent for looking at the 
details of specific shock wave behavior, the 
computer run times required are too long to 
use them for calculations involving large 
numbers of components or structures, The 
alternative approach makes use of empirical 
correlations derived from experimental test 
data to represent blast effects on 
components and structures. This second 
approach is the blast modeling methodology 
selected for incorporation into VISAC. 

Using correlations allows VISAC to analyze 
overall facility vulnerability in a fast-running 
code without trying to reduce the 
calculations to first principles. Correlations 
can generate remarkably accurate results 
for blast effects as long as they are not 
extrapolated outside the range of applicable 
data. 

The blast assessment algorithms 
programmed into VISAC were adapted from 
correlations that actually date back to 
empirical test data on weapons effects that 
was generated by the National Defense 
Research Committee (NDRC) during World 
War M [1], Curve fits to the NDRC test data 
are available for concrete wall breach 
probability, blast overpressure as a function 
of scaled distance from an explosion, and 
expected overpressure enhancement due to 
reflective surfaces surrounding the charge. 

Once VISAC has applied the NDRC 
correlations to determine which concrete 
walls are breached by a blast and how the 
shock overpressure is propagated through 
air spaces exposed to the explosion, it is 
necessary to calculate kill probabilities for 
the critical components. These component 
failure probabilities then serve as input for 
the event/fault tree models that assess 


overall facility kill probability and the 
potential for a radiological release from the 
facility. Thus each critical component in the 
VISAC facility model must have an 
associated fragility function expressed in 
terms of blast overpressure. 

An overpressure fragility function consists of 
a plot showing the component kill probability 
versus the peak overpressure experienced 
by the component, as seen in the example 
function given by Fig, 1. Typically, fragility 
functions are defined by specifying a 
minimum overpressure, Pi ow , below which 
the component kill probability is zero and a 
maximum overpressure, Phigh, above which 
it is unity. The fragility function is then 
interpolated between P tow and P h , 9 h using 
either a linear approximation or a 
logarithmic fit so that any component 
exposed to an overpressure P between P, ow 
and Phigt, is assigned a fractional kill 
probability between 0 and 1, Estimates of 
overpressure fragilities for various 
categories of equipment can be found in 
Young, et al. [3], Glasstone [5], and 
Stephens [6]. These sources were used to 
develop the fragility functions for blast 
modeling in VISAC. 


General Overpressure Fragility 



Fig. 1. Example showing the 
general form for a component 
fragility function in terms of peak 
blast overpressure 


24 


2.2 Event/Fault Tree Analysis in 
VISAC 

Event tree/fault tree methodology has been 
applied for decades in the nuclear industry 
for consequence assessment and 
determining the probability of reactor core 
damage during accident sequences [7], 
Basically, event trees track the progress of 
an accident sequence and define the safety 
systems that can be applied to avoid 
undesirable consequences. At each branch 
of an event tree, an underlying fault tree 
shows the critical components (connected 
by AND or OR logic gates) necessary for 
that safety system to function. VISAC 
adopts this modeling approach to calculate 
the probability of collateral damage and 
potential radiological releases associated 
with attack scenarios at nuclear facilities, 
and adds another “facility kill" fault tree to 
determine the probability that the plant 
would be forced to shut down by the 
incident. 

Ordinary event/fault tree calculations 
typically involve very small component 
failure probabilities for the cut sets (groups 
of components whose simultaneous failure 
would lead to failure for an overall system 
fault tree), so that certain mathematical 
shortcuts such as the rare events 
approximation [8] or the Esary-Proschan 
approximation [9] are useful for evaluating 
sequence probabilities. On the other hand, 
in vulnerability analysis critical component 
failure probabilities tend to be high, so these 
approximations are no longer valid. 
Therefore VISAC had to introduce some 
unusual evaluation techniques based on 
Bayesian analysis and Monte Carlo 
methods to solve for the sequence 
probabilities efficiently [1 0], VISAC allows a 
user to set up the system logic model on a 
detailed basis using an arbitrarily large 
number of event trees and fault trees 
referenced to basic events that are critical 
components in the facility model. A coarser 
‘‘building lever analysis is also possible, in 


which only the facility buildings are basic 
events in the logic model and failure of a 
building implies loss of function for all critical 
components and systems located in that 
building. 

2.3 VISAC Facility Downtime 
Calculation 

The cut sets of VI SAC’S fault tree for facility 
kill are also vital for estimating facility 
downtime. Each cut set of the facility kill 
fault tree consists of a group of equipment 
without which the plant cannot operate. The 
overall expected downtime from an attack 
scenario is thus given by assigning a kill 
probability and a downtime to each cut set 
kill path and summing over the cut sets 
where the overall expected downtime has 
been normalized by the overall facility kill 
probability to make it conditional on facility 
kill. VISAC calculates a strictly serial repair 
process where damaged components are 
expected to be fixed sequentially one after 
the other and also a parallel downtime that 
assumes workers at the plant can repair the 
equipment associated with multiple cut sets 
of the facility kill tree simultaneously. 

VISAC provides the user both of these 
downtimes for each scenario. 

3.0 VISAC ANALYSIS 

VISAC provides a very fast “what if’ 
analysis for various accident/incident 
scenarios and also facility 
damage/consequence contour maps. 
Specifically VISAC returns the facility kill 
probability, core melt probability for a 
nuclear reactor, chemical release and fire 
effects probability for a reprocessing facility 
and estimates of the downtime for each 
facility. When used in conjunction with 
DTRA’s HP AC code, VISAC will also 
provide the transport and deposition of the 
released material as well as the population 
at risk. 


25 



Incidents include: 

• Weapons - satchel charge, truck 
bomb, military weapon, etc. placed 
anywhere in or around the facility 

• Defined Accident - failure of a 
specific system 

• Region Damage - all components in 
a specific area fail 

• Component damage - individual 
components fail with specific 
probabilities. 

In addition, multiple incidents can be 
specified in any combination and as 
functions of time. 

Figure 2 shows a view of a typical VISAC 
model of a generic nuclear reactor. The 
critical components are shown in red both 
inside and outside the facility. 





Fig. 2. View of typical VISAC model. 

Output from a VISAC scenario can be 
obtained in tabular or graphical form. For 
the tabular form, VISAC provides 

• Failure probabilities for each fault 
tree system 

• Consequence probabilities for each 
event tree 

• Facility downtime 

• Release estimates 

• Transport and deposition of released 
material 

• Population at risk 

• List of walls broken and hole size 
estimates 


For the graphical form, VISAC can provide 
views of the facility highlighting the holes in 
walls and damaged equipment, views of the 
fault trees showing the broken components 
and a graphical representation showing the 
most probable path through the event tree. 

Figure 3 shows a typical fault tree with the 
damaged components crossed out. 

I 

1.1 



* * “ST * * ' * AAA 


Fig. 3. Typical fault tree showing damaged 
components from a VISAC scenario 

While running an individual VISAC scenario 
is very quick, many different locations must 
be checked to determine the optimum target 
point for achieving the desired results. 
Usually when targeting a facility like a 
nuclear reactor it is desired to maximize the 
kill probability and the facility down time 
while minimizing the adverse collateral 
effects. A secondary consideration to this 
would be to minimize the population at risk. 
To achieve this VISAC can be run in a batch 
mode with a grid of points for where 
weapons are to be detonated. This code 
option produces a contour map showing the 
results at thousands of locations for each 
particular weapon. Separate contour maps 
for facility kill probability, probability of 
collateral damage, and facility downtime can 
be produced. Grids locations can be inside 
or outside of the facility. Figures 4 through 
6 show the graphical results for facility kill, 
probability of collateral damage, and 
downtime from running VISAC on an 
internal grid for a generic nuclear reactor 
facility. In the figures red is the highest 
probability at 80 to 100% and blue is the 
lowest at less than 20%. 


26 


FacHvlJ 



| L'-H ■ |.CP 

fM-t.88 


OJO-D-W 
li OO - 0-^0 


Fig. 4. Facility Kill probability for a facility 


example, to determine the measures that 
need to be taken to safeguard a facility from 
a truck bomb, grids can be outside the 
facility and a truck bomb detonated at the 
grid locations. Figure 7 shows the results 
from this type of calculation. As can be 
seen from the figure the risk to the facility 
from vehicle bombs can be greatly reduced 
by improving the security at only a few 
locations. 



Fig. 5. Probability of adverse collateral 
damage. 



FKfcfij 

l.® 

fan ti.Q <» L6d 


IZ.® 

re 

f j.oo-floo 
0.M ■ 109 


St* I 1 SXHJfwt 

Fig. 6. Expected facilitv downtime. 


By examining these three figures together, a 
set of locations for the most desirable strike 
points may be determined to achieve the 
desired results. The optimum locations 
determined from the figures can then be 
used to assess whether the results from the 
strike are worth the possible unintended 
collateral damage. This information can 
then be used as one of the inputs to the 
mission go, no go decision. 



Fig. 7. Facility protective measure 
for defense against a truck bomb. 


As mentioned earlier, if the analyst has a 
copy of DTRA’s HPAC 5 software installed 
on their PC, then VISAC can provide 
transport and deposition of any releases as 
well as the population at risk. These plots 
are available in the traditional HPAC format 
or can be overlaid on Google maps. 

Figures 8 and 9 are examples of these 
types of plots. 


The grid feature can also be used to 
address protective measures that need to 
be taken to safeguard a facility. For 


27 




Y (km) 



HP AC Radiation Dose 
TEDE at 11 -Sep-01 20:00L (12.0 hrs) 


-16 1 


-80 5 -48 3 -161 16 1 48 3 80 5 

X(km) 

Mean popuiabon **posed at mttcoM 

won i v «.w H«M X 


rem 



1234 

6000 

1540 
450 0 

3477 

1500 

9195 

500 

415229 
5 00 
695076 
0 500 


Fiq. 8. Typical HPAC plot for radionuclide 



Fig. 9. VISAC radionuclide release 
overlaid on GoogleMaps. 

4.0 CONCLUSIONS 

• VISAC integrates target geometric 
modeling, blast damage 
assessment, and event/fault tree 
consequence analysis. 

• The VISAC code successfully uses 
correlation blast modeling to 
generate quick facility vulnerability 
results. 

• Results from the VISAC analysis can 
be used to 

■ Optimize target locations to 
achieve the desired results 


■ Provide the locations 
requiring increased 
protective measure 

■ Aid in the mission go no-go 
decision making 

5.0 REFERENCES 

1. M. P. White, et al. Effects of Impact 
and Explosion, Summary Technical 
Report of Division 2, NDRC, 
Washington, DC, 1946. 

2. U. S. Army Ballistic Research 
Laboratory, The Ballistic Research 
Laboratory CAD Package, Release 
4.0, Aberdeen, MD, December 1991. 

3. L. A. Young, B. K. Streit, K. J. 
Peterson, D. L. Read, F. A. Maestas, 

Effectiveness/Vulnerability 

Assessments in Three Dimensions 
(EVA-3D) Versions 4. IF and 4. 1C 
User’s Manual - Revision A, WL-TR- 
96-7000, Applied Research 
Associates, Inc., Albuquerque, NM, 
November 29, 1995. 

4. P. E. Dunn, J. E. Madrigal, D. A. 
Parsons, J. C. Partch, D. A. Verner, 
and L. A. Young, Modular 
Effectiveness/ Vulnerability 
Assessment (MEVA) Software 
User's Manual, Applied Research 
Associates, Inc., Albuquerque, NM, 
April 23, 1999. 

5. S. Glasstone, The Effects of Nuclear 
Weapons, United States Atomic 
Energy Commission, Washington, 
DC, 1962. 

6. M. M. Stephens, Minimizing Damage 
to Refineries from Nuclear Attack, 
Natural and Other Disasters, U. S. 
Department of the Interior, Office of 
Oil and Gas, Washington, DC, 1970. 

7. U. S. NRC, Reactor Safety Study-An 
Assessment of Accident Risks in 

U. S. Commercial Nuclear Power 
Plants, Report WASH-1400, 
NUREG-75/014, 1975. 

8. McCormick, N. J., Reliability and 
Risk Analysis, Academic Press, New 
York, 1981. 

9. Isograph Ltd., FaultTree+ Software 


28 



Documentation, 1996. 

10. Peplow, D. E., Sulfredge, C. D., 
Sanders, R. L., Morris, R. H., 
Calculating Nuclear Power Plant 
Vulnerability Using Integrated 
Geometry and Event/Fault-Tree 
Models. Nuclear Science and 
Engineering 146, 71-87 (2004). 


6.0 ACKNOWLEDGMENT 

Notice: This manuscript has been authored 
by UT-Battelle, under Contract No. DE- 
AC05000R22725 with the U.S. Department 
of Energy. The United States Government 
retains and the publisher, by accepting the 
article for publication, acknowledges that 
the United States Government retains a 
non-exclusive, paid-up, irrevocable, world- 
wide license to publish or reproduce the 
published form of this manuscript, or allow 
others to do so, for United States 
Government purposes. 


29 



